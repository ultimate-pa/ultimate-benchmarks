type STRUCT~perf_event;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~dev_pm_qos;
type STRUCT~sock;
type STRUCT~sysfs_dirent;
type STRUCT~dma_map_ops;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~device_node;
type STRUCT~iommu_group;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~pid_namespace;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~iovec;
type STRUCT~swap_info_struct;
type STRUCT~backing_dev_info;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~pipe_inode_info;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~poll_table_struct;
type STRUCT~seq_file;
type STRUCT~nameidata;
type STRUCT~kstatfs;
type STRUCT~return_instance;
type STRUCT~uprobe;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~vm_operations_struct;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~sem_undo_list;
type STRUCT~seccomp_filter;
type STRUCT~keyring_list;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~tty_struct;
type STRUCT~autogroup;
type STRUCT~taskstats;
type STRUCT~tty_audit_buf;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~mem_cgroup;
type STRUCT~sched_class;
type STRUCT~task_group;
type STRUCT~fs_struct;
type STRUCT~nsproxy;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~bio_list;
type STRUCT~blk_plug;
type STRUCT~reclaim_state;
type STRUCT~io_context;
type STRUCT~css_set;
type STRUCT~robust_list_head;
type STRUCT~compat_robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~ep_device;
type STRUCT~mon_bus;
type STRUCT~usb_tt;
type STRUCT~wusb_dev;
type STRUCT~scatterlist;
type STRUCT~kmem_cache_node;
type STRUCT~input_mt;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__u64 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~oom_flags_t = int;
type ~kernel_ulong_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~qsize_t = int;
type ~cputime_t = int;
type ~ldv_func_ret_type = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_clock_t = ~__kernel_long_t;
type ~__le16 = ~__u16;
type ~__be16 = ~__u16;
type ~__le32 = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint32_t = ~__u32;
type ~dma_addr_t = ~u64;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~projid_t = ~__kernel_uid32_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
const #funAddr~nexio_ack_complete.base : int;
const #funAddr~nexio_ack_complete.offset : int;
const #funAddr~usbtouch_process_multi.base : int;
const #funAddr~usbtouch_process_multi.offset : int;
const #funAddr~egalax_get_pkt_len.base : int;
const #funAddr~egalax_get_pkt_len.offset : int;
const #funAddr~egalax_read_data.base : int;
const #funAddr~egalax_read_data.offset : int;
const #funAddr~egalax_init.base : int;
const #funAddr~egalax_init.offset : int;
const #funAddr~panjit_read_data.base : int;
const #funAddr~panjit_read_data.offset : int;
const #funAddr~mtouch_read_data.base : int;
const #funAddr~mtouch_read_data.offset : int;
const #funAddr~mtouch_init.base : int;
const #funAddr~mtouch_init.offset : int;
const #funAddr~itm_read_data.base : int;
const #funAddr~itm_read_data.offset : int;
const #funAddr~eturbo_get_pkt_len.base : int;
const #funAddr~eturbo_get_pkt_len.offset : int;
const #funAddr~eturbo_read_data.base : int;
const #funAddr~eturbo_read_data.offset : int;
const #funAddr~gunze_read_data.base : int;
const #funAddr~gunze_read_data.offset : int;
const #funAddr~dmc_tsc10_read_data.base : int;
const #funAddr~dmc_tsc10_read_data.offset : int;
const #funAddr~dmc_tsc10_init.base : int;
const #funAddr~dmc_tsc10_init.offset : int;
const #funAddr~irtouch_read_data.base : int;
const #funAddr~irtouch_read_data.offset : int;
const #funAddr~idealtek_get_pkt_len.base : int;
const #funAddr~idealtek_get_pkt_len.offset : int;
const #funAddr~idealtek_read_data.base : int;
const #funAddr~idealtek_read_data.offset : int;
const #funAddr~general_touch_read_data.base : int;
const #funAddr~general_touch_read_data.offset : int;
const #funAddr~gotop_read_data.base : int;
const #funAddr~gotop_read_data.offset : int;
const #funAddr~jastec_read_data.base : int;
const #funAddr~jastec_read_data.offset : int;
const #funAddr~e2i_read_data.base : int;
const #funAddr~e2i_read_data.offset : int;
const #funAddr~e2i_init.base : int;
const #funAddr~e2i_init.offset : int;
const #funAddr~zytronic_read_data.base : int;
const #funAddr~zytronic_read_data.offset : int;
const #funAddr~tc45usb_read_data.base : int;
const #funAddr~tc45usb_read_data.offset : int;
const #funAddr~nexio_read_data.base : int;
const #funAddr~nexio_read_data.offset : int;
const #funAddr~nexio_alloc.base : int;
const #funAddr~nexio_alloc.offset : int;
const #funAddr~nexio_init.base : int;
const #funAddr~nexio_init.offset : int;
const #funAddr~nexio_exit.base : int;
const #funAddr~nexio_exit.offset : int;
const #funAddr~elo_read_data.base : int;
const #funAddr~elo_read_data.offset : int;
const #funAddr~etouch_get_pkt_len.base : int;
const #funAddr~etouch_get_pkt_len.offset : int;
const #funAddr~etouch_read_data.base : int;
const #funAddr~etouch_read_data.offset : int;
const #funAddr~usbtouch_process_pkt.base : int;
const #funAddr~usbtouch_process_pkt.offset : int;
const #funAddr~usbtouch_open.base : int;
const #funAddr~usbtouch_open.offset : int;
const #funAddr~usbtouch_close.base : int;
const #funAddr~usbtouch_close.offset : int;
const #funAddr~usbtouch_irq.base : int;
const #funAddr~usbtouch_irq.offset : int;
const #funAddr~usbtouch_probe.base : int;
const #funAddr~usbtouch_probe.offset : int;
const #funAddr~usbtouch_disconnect.base : int;
const #funAddr~usbtouch_disconnect.offset : int;
const #funAddr~usbtouch_suspend.base : int;
const #funAddr~usbtouch_suspend.offset : int;
const #funAddr~usbtouch_resume.base : int;
const #funAddr~usbtouch_resume.offset : int;
const #funAddr~usbtouch_reset_resume.base : int;
const #funAddr~usbtouch_reset_resume.offset : int;
const ~usb_device_speed~USB_SPEED_UNKNOWN : int;
const ~usb_device_speed~USB_SPEED_LOW : int;
const ~usb_device_speed~USB_SPEED_FULL : int;
const ~usb_device_speed~USB_SPEED_HIGH : int;
const ~usb_device_speed~USB_SPEED_WIRELESS : int;
const ~usb_device_speed~USB_SPEED_SUPER : int;
const ~usb_device_state~USB_STATE_NOTATTACHED : int;
const ~usb_device_state~USB_STATE_ATTACHED : int;
const ~usb_device_state~USB_STATE_POWERED : int;
const ~usb_device_state~USB_STATE_RECONNECTING : int;
const ~usb_device_state~USB_STATE_UNAUTHENTICATED : int;
const ~usb_device_state~USB_STATE_DEFAULT : int;
const ~usb_device_state~USB_STATE_ADDRESS : int;
const ~usb_device_state~USB_STATE_CONFIGURED : int;
const ~usb_device_state~USB_STATE_SUSPENDED : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~uprobe_task_state~UTASK_RUNNING : int;
const ~uprobe_task_state~UTASK_SSTEP : int;
const ~uprobe_task_state~UTASK_SSTEP_ACK : int;
const ~uprobe_task_state~UTASK_SSTEP_TRAPPED : int;
const ~usb_interface_condition~USB_INTERFACE_UNBOUND : int;
const ~usb_interface_condition~USB_INTERFACE_BINDING : int;
const ~usb_interface_condition~USB_INTERFACE_BOUND : int;
const ~usb_interface_condition~USB_INTERFACE_UNBINDING : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE : int;
const ~usb_device_removable~USB_DEVICE_FIXED : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
axiom #funAddr~nexio_ack_complete.base == -1 && #funAddr~nexio_ack_complete.offset == 0;
axiom #funAddr~usbtouch_process_multi.base == -1 && #funAddr~usbtouch_process_multi.offset == 1;
axiom #funAddr~egalax_get_pkt_len.base == -1 && #funAddr~egalax_get_pkt_len.offset == 2;
axiom #funAddr~egalax_read_data.base == -1 && #funAddr~egalax_read_data.offset == 3;
axiom #funAddr~egalax_init.base == -1 && #funAddr~egalax_init.offset == 4;
axiom #funAddr~panjit_read_data.base == -1 && #funAddr~panjit_read_data.offset == 5;
axiom #funAddr~mtouch_read_data.base == -1 && #funAddr~mtouch_read_data.offset == 6;
axiom #funAddr~mtouch_init.base == -1 && #funAddr~mtouch_init.offset == 7;
axiom #funAddr~itm_read_data.base == -1 && #funAddr~itm_read_data.offset == 8;
axiom #funAddr~eturbo_get_pkt_len.base == -1 && #funAddr~eturbo_get_pkt_len.offset == 9;
axiom #funAddr~eturbo_read_data.base == -1 && #funAddr~eturbo_read_data.offset == 10;
axiom #funAddr~gunze_read_data.base == -1 && #funAddr~gunze_read_data.offset == 11;
axiom #funAddr~dmc_tsc10_read_data.base == -1 && #funAddr~dmc_tsc10_read_data.offset == 12;
axiom #funAddr~dmc_tsc10_init.base == -1 && #funAddr~dmc_tsc10_init.offset == 13;
axiom #funAddr~irtouch_read_data.base == -1 && #funAddr~irtouch_read_data.offset == 14;
axiom #funAddr~idealtek_get_pkt_len.base == -1 && #funAddr~idealtek_get_pkt_len.offset == 15;
axiom #funAddr~idealtek_read_data.base == -1 && #funAddr~idealtek_read_data.offset == 16;
axiom #funAddr~general_touch_read_data.base == -1 && #funAddr~general_touch_read_data.offset == 17;
axiom #funAddr~gotop_read_data.base == -1 && #funAddr~gotop_read_data.offset == 18;
axiom #funAddr~jastec_read_data.base == -1 && #funAddr~jastec_read_data.offset == 19;
axiom #funAddr~e2i_read_data.base == -1 && #funAddr~e2i_read_data.offset == 20;
axiom #funAddr~e2i_init.base == -1 && #funAddr~e2i_init.offset == 21;
axiom #funAddr~zytronic_read_data.base == -1 && #funAddr~zytronic_read_data.offset == 22;
axiom #funAddr~tc45usb_read_data.base == -1 && #funAddr~tc45usb_read_data.offset == 23;
axiom #funAddr~nexio_read_data.base == -1 && #funAddr~nexio_read_data.offset == 24;
axiom #funAddr~nexio_alloc.base == -1 && #funAddr~nexio_alloc.offset == 25;
axiom #funAddr~nexio_init.base == -1 && #funAddr~nexio_init.offset == 26;
axiom #funAddr~nexio_exit.base == -1 && #funAddr~nexio_exit.offset == 27;
axiom #funAddr~elo_read_data.base == -1 && #funAddr~elo_read_data.offset == 28;
axiom #funAddr~etouch_get_pkt_len.base == -1 && #funAddr~etouch_get_pkt_len.offset == 29;
axiom #funAddr~etouch_read_data.base == -1 && #funAddr~etouch_read_data.offset == 30;
axiom #funAddr~usbtouch_process_pkt.base == -1 && #funAddr~usbtouch_process_pkt.offset == 31;
axiom #funAddr~usbtouch_open.base == -1 && #funAddr~usbtouch_open.offset == 32;
axiom #funAddr~usbtouch_close.base == -1 && #funAddr~usbtouch_close.offset == 33;
axiom #funAddr~usbtouch_irq.base == -1 && #funAddr~usbtouch_irq.offset == 34;
axiom #funAddr~usbtouch_probe.base == -1 && #funAddr~usbtouch_probe.offset == 35;
axiom #funAddr~usbtouch_disconnect.base == -1 && #funAddr~usbtouch_disconnect.offset == 36;
axiom #funAddr~usbtouch_suspend.base == -1 && #funAddr~usbtouch_suspend.offset == 37;
axiom #funAddr~usbtouch_resume.base == -1 && #funAddr~usbtouch_resume.offset == 38;
axiom #funAddr~usbtouch_reset_resume.base == -1 && #funAddr~usbtouch_reset_resume.offset == 39;
axiom ~usb_device_speed~USB_SPEED_UNKNOWN == 0;
axiom ~usb_device_speed~USB_SPEED_LOW == 1;
axiom ~usb_device_speed~USB_SPEED_FULL == 2;
axiom ~usb_device_speed~USB_SPEED_HIGH == 3;
axiom ~usb_device_speed~USB_SPEED_WIRELESS == 4;
axiom ~usb_device_speed~USB_SPEED_SUPER == 5;
axiom ~usb_device_state~USB_STATE_NOTATTACHED == 0;
axiom ~usb_device_state~USB_STATE_ATTACHED == 1;
axiom ~usb_device_state~USB_STATE_POWERED == 2;
axiom ~usb_device_state~USB_STATE_RECONNECTING == 3;
axiom ~usb_device_state~USB_STATE_UNAUTHENTICATED == 4;
axiom ~usb_device_state~USB_STATE_DEFAULT == 5;
axiom ~usb_device_state~USB_STATE_ADDRESS == 6;
axiom ~usb_device_state~USB_STATE_CONFIGURED == 7;
axiom ~usb_device_state~USB_STATE_SUSPENDED == 8;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~uprobe_task_state~UTASK_RUNNING == 0;
axiom ~uprobe_task_state~UTASK_SSTEP == 1;
axiom ~uprobe_task_state~UTASK_SSTEP_ACK == 2;
axiom ~uprobe_task_state~UTASK_SSTEP_TRAPPED == 3;
axiom ~usb_interface_condition~USB_INTERFACE_UNBOUND == 0;
axiom ~usb_interface_condition~USB_INTERFACE_BINDING == 1;
axiom ~usb_interface_condition~USB_INTERFACE_BOUND == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBINDING == 3;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN == 0;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE == 1;
axiom ~usb_device_removable~USB_DEVICE_FIXED == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseComplement" } ~bitwiseComplement(in0 : int) returns (out : int);
var ~jiffies : int;

var ~ldv_state_variable_1 : int;

var ~usb_counter : int;

var ~ref_cnt : int;

var ~ldv_state_variable_0 : int;

var ~#nexio_ack_pkt.base : int, ~#nexio_ack_pkt.offset : int;

var ~#nexio_init_pkt.base : int, ~#nexio_init_pkt.offset : int;

var ~ldv_retval_0 : int;

var ~ldv_retval_4 : int;

var ~ldv_retval_1 : int;

var ~ldv_retval_3 : int;

var ~ldv_retval_2 : int;

var ~INTERF_STATE : int;

var ~SERIAL_STATE : int;

var ~usb_intfdata.base : int, ~usb_intfdata.offset : int;

var ~dev_counter : int;

var ~completeFnIntCounter : int;

var ~completeFnBulkCounter : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~usbtouch_driver_group1.base : int, ~usbtouch_driver_group1.offset : int;

var ~swap_xy : ~bool;

var ~hwcalib_xy : ~bool;

var ~#usbtouch_devices.base : int, ~#usbtouch_devices.offset : int;

var ~#usbtouch_dev_info.base : int, ~#usbtouch_dev_info.offset : int;

var ~#usbtouch_driver.base : int, ~#usbtouch_driver.offset : int;

var ~usb_urb.base : int, ~usb_urb.offset : int;

var ~usb_dev.base : int, ~usb_dev.offset : int;

var ~completeFnInt.base : int, ~completeFnInt.offset : int;

var ~completeFnBulk.base : int, ~completeFnBulk.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

var #memory_int : [int,int]int;

implementation ULTIMATE.init() returns (){
    var #t~nondet915.base : int, #t~nondet915.offset : int;
    var #t~union952.head : int, #t~union952.tail : int;
    var #t~union953.__padding : [int]int, #t~union953.dep_map.key.base : int, #t~union953.dep_map.key.offset : int, #t~union953.dep_map.class_cache.base : [int]int, #t~union953.dep_map.class_cache.offset : [int]int, #t~union953.dep_map.name.base : int, #t~union953.dep_map.name.offset : int, #t~union953.dep_map.cpu : int, #t~union953.dep_map.ip : int;

  loc0:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_state_variable_1 := 0;
    ~usb_counter := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 0;
    call ~#nexio_ack_pkt.base, ~#nexio_ack_pkt.offset := #Ultimate.alloc(2);
    call write~int(170, ~#nexio_ack_pkt.base, ~#nexio_ack_pkt.offset + 0, 1);
    call write~int(2, ~#nexio_ack_pkt.base, ~#nexio_ack_pkt.offset + 1, 1);
    call ~#nexio_init_pkt.base, ~#nexio_init_pkt.offset := #Ultimate.alloc(4);
    call write~int(130, ~#nexio_init_pkt.base, ~#nexio_init_pkt.offset + 0, 1);
    call write~int(4, ~#nexio_init_pkt.base, ~#nexio_init_pkt.offset + 1, 1);
    call write~int(10, ~#nexio_init_pkt.base, ~#nexio_init_pkt.offset + 2, 1);
    call write~int(15, ~#nexio_init_pkt.base, ~#nexio_init_pkt.offset + 3, 1);
    ~ldv_retval_0 := 0;
    ~ldv_retval_4 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_retval_3 := 0;
    ~ldv_retval_2 := 0;
    ~INTERF_STATE := 0;
    ~SERIAL_STATE := 0;
    ~usb_intfdata.base, ~usb_intfdata.offset := 0, 0;
    ~dev_counter := 0;
    ~completeFnIntCounter := 0;
    ~completeFnBulkCounter := 0;
    ~usbtouch_driver_group1.base, ~usbtouch_driver_group1.offset := 0, 0;
    ~swap_xy := 0;
    ~hwcalib_xy := 0;
    call ~#usbtouch_devices.base, ~#usbtouch_devices.offset := #Ultimate.alloc(900);
    call write~int(643, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 0 + 0, 2);
    call write~int(3823, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 0 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 0 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 0 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 0 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 0 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 0 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 0 + 12, 1);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 0 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 0 + 14, 1);
    call write~int(2, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 0 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 0 + 16, 1);
    call write~int(18446744073709551615, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 0 + 17, 8);
    call write~int(643, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 25 + 0, 2);
    call write~int(3823, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 25 + 2, 2);
    call write~int(2, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 25 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 25 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 25 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 25 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 25 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 25 + 12, 1);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 25 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 25 + 14, 1);
    call write~int(2, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 25 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 25 + 16, 1);
    call write~int(18446744073709551615, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 25 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 50 + 0, 2);
    call write~int(14371, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 50 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 50 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 50 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 50 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 50 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 50 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 50 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 50 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 50 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 50 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 50 + 16, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 50 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 75 + 0, 2);
    call write~int(14371, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 75 + 2, 2);
    call write~int(2, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 75 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 75 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 75 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 75 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 75 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 75 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 75 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 75 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 75 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 75 + 16, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 75 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 100 + 0, 2);
    call write~int(291, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 100 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 100 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 100 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 100 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 100 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 100 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 100 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 100 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 100 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 100 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 100 + 16, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 100 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 125 + 0, 2);
    call write~int(3823, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 125 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 125 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 125 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 125 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 125 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 125 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 125 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 125 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 125 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 125 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 125 + 16, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 125 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 150 + 0, 2);
    call write~int(3823, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 150 + 2, 2);
    call write~int(2, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 150 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 150 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 150 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 150 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 150 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 150 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 150 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 150 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 150 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 150 + 16, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 150 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 175 + 0, 2);
    call write~int(4660, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 175 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 175 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 175 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 175 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 175 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 175 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 175 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 175 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 175 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 175 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 175 + 16, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 175 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 200 + 0, 2);
    call write~int(4660, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 200 + 2, 2);
    call write~int(2, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 200 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 200 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 200 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 200 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 200 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 200 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 200 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 200 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 200 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 200 + 16, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 200 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 225 + 0, 2);
    call write~int(4940, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 225 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 225 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 225 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 225 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 225 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 225 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 225 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 225 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 225 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 225 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 225 + 16, 1);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 225 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 250 + 0, 2);
    call write~int(4940, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 250 + 2, 2);
    call write~int(2, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 250 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 250 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 250 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 250 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 250 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 250 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 250 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 250 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 250 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 250 + 16, 1);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 250 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 275 + 0, 2);
    call write~int(4940, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 275 + 2, 2);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 275 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 275 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 275 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 275 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 275 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 275 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 275 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 275 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 275 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 275 + 16, 1);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 275 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 300 + 0, 2);
    call write~int(4940, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 300 + 2, 2);
    call write~int(4, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 300 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 300 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 300 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 300 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 300 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 300 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 300 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 300 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 300 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 300 + 16, 1);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 300 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 325 + 0, 2);
    call write~int(1430, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 325 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 325 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 325 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 325 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 325 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 325 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 325 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 325 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 325 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 325 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 325 + 16, 1);
    call write~int(2, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 325 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 350 + 0, 2);
    call write~int(1027, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 350 + 2, 2);
    call write~int(63977, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 350 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 350 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 350 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 350 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 350 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 350 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 350 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 350 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 350 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 350 + 16, 1);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 350 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 375 + 0, 2);
    call write~int(5859, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 375 + 2, 2);
    call write~int(63977, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 375 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 375 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 375 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 375 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 375 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 375 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 375 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 375 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 375 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 375 + 16, 1);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 375 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 400 + 0, 2);
    call write~int(4660, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 400 + 2, 2);
    call write~int(22136, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 400 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 400 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 400 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 400 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 400 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 400 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 400 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 400 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 400 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 400 + 16, 1);
    call write~int(4, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 400 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 425 + 0, 2);
    call write~int(1591, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 425 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 425 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 425 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 425 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 425 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 425 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 425 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 425 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 425 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 425 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 425 + 16, 1);
    call write~int(5, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 425 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 450 + 0, 2);
    call write~int(2810, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 450 + 2, 2);
    call write~int(1000, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 450 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 450 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 450 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 450 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 450 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 450 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 450 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 450 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 450 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 450 + 16, 1);
    call write~int(6, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 450 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 475 + 0, 2);
    call write~int(22874, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 475 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 475 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 475 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 475 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 475 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 475 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 475 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 475 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 475 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 475 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 475 + 16, 1);
    call write~int(7, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 475 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 500 + 0, 2);
    call write~int(26133, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 500 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 500 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 500 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 500 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 500 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 500 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 500 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 500 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 500 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 500 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 500 + 16, 1);
    call write~int(7, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 500 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 525 + 0, 2);
    call write~int(5009, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 525 + 2, 2);
    call write~int(4096, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 525 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 525 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 525 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 525 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 525 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 525 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 525 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 525 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 525 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 525 + 16, 1);
    call write~int(8, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 525 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 550 + 0, 2);
    call write~int(3580, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 550 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 550 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 550 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 550 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 550 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 550 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 550 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 550 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 550 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 550 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 550 + 16, 1);
    call write~int(9, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 550 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 575 + 0, 2);
    call write~int(2290, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 575 + 2, 2);
    call write~int(127, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 575 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 575 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 575 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 575 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 575 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 575 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 575 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 575 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 575 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 575 + 16, 1);
    call write~int(10, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 575 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 600 + 0, 2);
    call write~int(2290, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 600 + 2, 2);
    call write~int(206, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 600 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 600 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 600 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 600 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 600 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 600 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 600 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 600 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 600 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 600 + 16, 1);
    call write~int(10, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 600 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 625 + 0, 2);
    call write~int(2290, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 625 + 2, 2);
    call write~int(244, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 625 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 625 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 625 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 625 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 625 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 625 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 625 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 625 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 625 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 625 + 16, 1);
    call write~int(10, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 625 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 650 + 0, 2);
    call write~int(3986, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 650 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 650 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 650 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 650 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 650 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 650 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 650 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 650 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 650 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 650 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 650 + 16, 1);
    call write~int(11, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 650 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 675 + 0, 2);
    call write~int(6855, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 675 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 675 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 675 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 675 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 675 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 675 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 675 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 675 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 675 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 675 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 675 + 16, 1);
    call write~int(12, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 675 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 700 + 0, 2);
    call write~int(5320, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 700 + 2, 2);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 700 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 700 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 700 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 700 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 700 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 700 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 700 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 700 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 700 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 700 + 16, 1);
    call write~int(13, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 700 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 725 + 0, 2);
    call write~int(1636, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 725 + 2, 2);
    call write~int(777, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 725 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 725 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 725 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 725 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 725 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 725 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 725 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 725 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 725 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 725 + 16, 1);
    call write~int(14, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 725 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 750 + 0, 2);
    call write~int(1636, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 750 + 2, 2);
    call write~int(774, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 750 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 750 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 750 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 750 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 750 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 750 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 750 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 750 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 750 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 750 + 16, 1);
    call write~int(14, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 750 + 17, 8);
    call write~int(899, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 775 + 0, 2);
    call write~int(4336, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 775 + 2, 2);
    call write~int(8194, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 775 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 775 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 775 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 775 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 775 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 775 + 12, 1);
    call write~int(10, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 775 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 775 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 775 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 775 + 16, 1);
    call write~int(15, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 775 + 17, 8);
    call write~int(899, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 800 + 0, 2);
    call write~int(6256, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 800 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 800 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 800 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 800 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 800 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 800 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 800 + 12, 1);
    call write~int(10, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 800 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 800 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 800 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 800 + 16, 1);
    call write~int(15, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 800 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 825 + 0, 2);
    call write~int(1255, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 825 + 2, 2);
    call write~int(32, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 825 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 825 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 825 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 825 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 825 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 825 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 825 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 825 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 825 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 825 + 16, 1);
    call write~int(16, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 825 + 17, 8);
    call write~int(3, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 850 + 0, 2);
    call write~int(29556, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 850 + 2, 2);
    call write~int(1, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 850 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 850 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 850 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 850 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 850 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 850 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 850 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 850 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 850 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 850 + 16, 1);
    call write~int(17, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 850 + 17, 8);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 875 + 0, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 875 + 2, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 875 + 4, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 875 + 6, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 875 + 8, 2);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 875 + 10, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 875 + 11, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 875 + 12, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 875 + 13, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 875 + 14, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 875 + 15, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 875 + 16, 1);
    call write~int(0, ~#usbtouch_devices.base, ~#usbtouch_devices.offset + 875 + 17, 8);
    call ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset := #Ultimate.alloc(1386);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 0, 4);
    call write~int(2047, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 8, 4);
    call write~int(2047, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 20, 4);
    call write~int(16, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 28, 1);
    call write~$Pointer$(#funAddr~usbtouch_process_multi.base, #funAddr~usbtouch_process_multi.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 29, 8);
    call write~$Pointer$(#funAddr~egalax_get_pkt_len.base, #funAddr~egalax_get_pkt_len.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 37, 8);
    call write~$Pointer$(#funAddr~egalax_read_data.base, #funAddr~egalax_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 53, 8);
    call write~$Pointer$(#funAddr~egalax_init.base, #funAddr~egalax_init.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 0 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 0, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 8, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 20, 4);
    call write~int(8, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 37, 8);
    call write~$Pointer$(#funAddr~panjit_read_data.base, #funAddr~panjit_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 53, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 77 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 0, 4);
    call write~int(16384, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 8, 4);
    call write~int(16384, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 20, 4);
    call write~int(11, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 37, 8);
    call write~$Pointer$(#funAddr~mtouch_read_data.base, #funAddr~mtouch_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 53, 8);
    call write~$Pointer$(#funAddr~mtouch_init.base, #funAddr~mtouch_init.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 154 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 0, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 8, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 16, 4);
    call write~int(255, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 20, 4);
    call write~int(8, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 37, 8);
    call write~$Pointer$(#funAddr~itm_read_data.base, #funAddr~itm_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 53, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 231 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 0, 4);
    call write~int(2047, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 8, 4);
    call write~int(2047, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 20, 4);
    call write~int(8, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 28, 1);
    call write~$Pointer$(#funAddr~usbtouch_process_multi.base, #funAddr~usbtouch_process_multi.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 29, 8);
    call write~$Pointer$(#funAddr~eturbo_get_pkt_len.base, #funAddr~eturbo_get_pkt_len.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 37, 8);
    call write~$Pointer$(#funAddr~eturbo_read_data.base, #funAddr~eturbo_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 53, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 308 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 0, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 8, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 20, 4);
    call write~int(4, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 37, 8);
    call write~$Pointer$(#funAddr~gunze_read_data.base, #funAddr~gunze_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 53, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 385 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 0, 4);
    call write~int(1023, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 8, 4);
    call write~int(1023, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 20, 4);
    call write~int(5, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 37, 8);
    call write~$Pointer$(#funAddr~dmc_tsc10_read_data.base, #funAddr~dmc_tsc10_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 53, 8);
    call write~$Pointer$(#funAddr~dmc_tsc10_init.base, #funAddr~dmc_tsc10_init.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 462 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 0, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 8, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 20, 4);
    call write~int(8, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 37, 8);
    call write~$Pointer$(#funAddr~irtouch_read_data.base, #funAddr~irtouch_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 53, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 539 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 0, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 8, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 20, 4);
    call write~int(8, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 28, 1);
    call write~$Pointer$(#funAddr~usbtouch_process_multi.base, #funAddr~usbtouch_process_multi.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 29, 8);
    call write~$Pointer$(#funAddr~idealtek_get_pkt_len.base, #funAddr~idealtek_get_pkt_len.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 37, 8);
    call write~$Pointer$(#funAddr~idealtek_read_data.base, #funAddr~idealtek_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 53, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 616 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 0, 4);
    call write~int(32767, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 8, 4);
    call write~int(32767, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 20, 4);
    call write~int(7, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 37, 8);
    call write~$Pointer$(#funAddr~general_touch_read_data.base, #funAddr~general_touch_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 53, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 693 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 0, 4);
    call write~int(1023, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 8, 4);
    call write~int(1023, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 20, 4);
    call write~int(4, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 37, 8);
    call write~$Pointer$(#funAddr~gotop_read_data.base, #funAddr~gotop_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 53, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 770 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 0, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 8, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 20, 4);
    call write~int(4, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 37, 8);
    call write~$Pointer$(#funAddr~jastec_read_data.base, #funAddr~jastec_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 53, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 847 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 0, 4);
    call write~int(32767, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 8, 4);
    call write~int(32767, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 20, 4);
    call write~int(6, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 37, 8);
    call write~$Pointer$(#funAddr~e2i_read_data.base, #funAddr~e2i_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 53, 8);
    call write~$Pointer$(#funAddr~e2i_init.base, #funAddr~e2i_init.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 924 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 0, 4);
    call write~int(1023, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 8, 4);
    call write~int(1023, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 20, 4);
    call write~int(5, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 24, 4);
    call write~int(1, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 37, 8);
    call write~$Pointer$(#funAddr~zytronic_read_data.base, #funAddr~zytronic_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 53, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1001 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 0, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 8, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 20, 4);
    call write~int(5, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 37, 8);
    call write~$Pointer$(#funAddr~tc45usb_read_data.base, #funAddr~tc45usb_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 53, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1078 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 0, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 8, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 20, 4);
    call write~int(1024, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 24, 4);
    call write~int(1, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 37, 8);
    call write~$Pointer$(#funAddr~nexio_read_data.base, #funAddr~nexio_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 45, 8);
    call write~$Pointer$(#funAddr~nexio_alloc.base, #funAddr~nexio_alloc.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 53, 8);
    call write~$Pointer$(#funAddr~nexio_init.base, #funAddr~nexio_init.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 61, 8);
    call write~$Pointer$(#funAddr~nexio_exit.base, #funAddr~nexio_exit.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1155 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 0, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 8, 4);
    call write~int(4095, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 16, 4);
    call write~int(255, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 20, 4);
    call write~int(8, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 28, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 29, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 37, 8);
    call write~$Pointer$(#funAddr~elo_read_data.base, #funAddr~elo_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 53, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1232 + 69, 8);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 0, 4);
    call write~int(2047, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 4, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 8, 4);
    call write~int(2047, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 12, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 16, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 20, 4);
    call write~int(16, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 24, 4);
    call write~int(0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 28, 1);
    call write~$Pointer$(#funAddr~usbtouch_process_multi.base, #funAddr~usbtouch_process_multi.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 29, 8);
    call write~$Pointer$(#funAddr~etouch_get_pkt_len.base, #funAddr~etouch_get_pkt_len.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 37, 8);
    call write~$Pointer$(#funAddr~etouch_read_data.base, #funAddr~etouch_read_data.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 45, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 53, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 61, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset + 1309 + 69, 8);
    call ~#usbtouch_driver.base, ~#usbtouch_driver.offset := #Ultimate.alloc(285);
    call #t~nondet915.base, #t~nondet915.offset := #Ultimate.alloc(15);
    call write~$Pointer$(#t~nondet915.base, #t~nondet915.offset, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 0, 8);
    call write~$Pointer$(#funAddr~usbtouch_probe.base, #funAddr~usbtouch_probe.offset, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 8, 8);
    call write~$Pointer$(#funAddr~usbtouch_disconnect.base, #funAddr~usbtouch_disconnect.offset, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 24, 8);
    call write~$Pointer$(#funAddr~usbtouch_suspend.base, #funAddr~usbtouch_suspend.offset, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 32, 8);
    call write~$Pointer$(#funAddr~usbtouch_resume.base, #funAddr~usbtouch_resume.offset, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 40, 8);
    call write~$Pointer$(#funAddr~usbtouch_reset_resume.base, #funAddr~usbtouch_reset_resume.offset, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 64, 8);
    call write~$Pointer$(~#usbtouch_devices.base, ~#usbtouch_devices.offset, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 72, 8);
    call write~int(0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union952.head, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union952.tail, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union953.__padding[0], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union953.__padding[1], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union953.__padding[2], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union953.__padding[3], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[4], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[5], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[6], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[7], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[8], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[9], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[10], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[11], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[12], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[13], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[14], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[15], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[16], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[17], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[18], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[19], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[20], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[21], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[22], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union953.__padding[23], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union953.dep_map.key.base, #t~union953.dep_map.key.offset, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union953.dep_map.class_cache.base[0], #t~union953.dep_map.class_cache.offset[0], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union953.dep_map.class_cache.base[1], #t~union953.dep_map.class_cache.offset[1], ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union953.dep_map.name.base, #t~union953.dep_map.name.offset, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union953.dep_map.cpu, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union953.dep_map.ip, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 80 + 68 + 8, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 16, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 24, 8);
    call write~int(0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 32, 1);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 33, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 41, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 49, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 57, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 65, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 73, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 81, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 89, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 97, 8);
    call write~$Pointer$(0, 0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 0 + 105, 8);
    call write~int(0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 164 + 113, 4);
    call write~int(0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 281, 1);
    call write~int(1, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 282, 1);
    call write~int(0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 283, 1);
    call write~int(0, ~#usbtouch_driver.base, ~#usbtouch_driver.offset + 284, 1);
    havoc #t~nondet915.base, #t~nondet915.offset;
    havoc #t~union952.head, #t~union952.tail;
    havoc #t~union953.__padding, #t~union953.dep_map.key.base, #t~union953.dep_map.key.offset, #t~union953.dep_map.class_cache.base, #t~union953.dep_map.class_cache.offset, #t~union953.dep_map.name.base, #t~union953.dep_map.name.offset, #t~union953.dep_map.cpu, #t~union953.dep_map.ip;
    ~usb_urb.base, ~usb_urb.offset := 0, 0;
    ~usb_dev.base, ~usb_dev.offset := 0, 0;
    ~completeFnInt.base, ~completeFnInt.offset := 0, 0;
    ~completeFnBulk.base, ~completeFnBulk.offset := 0, 0;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_1, ~usb_counter, ~ref_cnt, ~ldv_state_variable_0, ~#nexio_ack_pkt.base, ~#nexio_ack_pkt.offset, ~#nexio_init_pkt.base, ~#nexio_init_pkt.offset, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_1, ~ldv_retval_3, ~ldv_retval_2, ~INTERF_STATE, ~SERIAL_STATE, ~usb_intfdata.base, ~usb_intfdata.offset, ~dev_counter, ~completeFnIntCounter, ~completeFnBulkCounter, ~usbtouch_driver_group1.base, ~usbtouch_driver_group1.offset, ~swap_xy, ~hwcalib_xy, ~#usbtouch_devices.base, ~#usbtouch_devices.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset, ~#usbtouch_driver.base, ~#usbtouch_driver.offset, ~usb_urb.base, ~usb_urb.offset, ~usb_dev.base, ~usb_dev.offset, ~completeFnInt.base, ~completeFnInt.offset, ~completeFnBulk.base, ~completeFnBulk.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_error() returns (){
  loc1:
    assume !false;
    goto loc2;
  loc2:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation ldv_usb_register_driver_28(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2.base : int, #in~ldv_func_arg2.offset : int, #in~ldv_func_arg3.base : int, #in~ldv_func_arg3.offset : int) returns (#res : int){
    var #t~ret946 : int;
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;
    var ~ldv_func_arg2.base : int, ~ldv_func_arg2.offset : int;
    var ~ldv_func_arg3.base : int, ~ldv_func_arg3.offset : int;
    var ~ldv_func_res~548 : ~ldv_func_ret_type;
    var ~tmp~548 : int;

  loc3:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    ~ldv_func_arg2.base, ~ldv_func_arg2.offset := #in~ldv_func_arg2.base, #in~ldv_func_arg2.offset;
    ~ldv_func_arg3.base, ~ldv_func_arg3.offset := #in~ldv_func_arg3.base, #in~ldv_func_arg3.offset;
    havoc ~ldv_func_res~548;
    havoc ~tmp~548;
    call #t~ret946 := usb_register_driver(~ldv_func_arg1.base, ~ldv_func_arg1.offset, ~ldv_func_arg2.base, ~ldv_func_arg2.offset, ~ldv_func_arg3.base, ~ldv_func_arg3.offset);
    assume -2147483648 <= #t~ret946 && #t~ret946 <= 2147483647;
    ~tmp~548 := #t~ret946;
    havoc #t~ret946;
    ~ldv_func_res~548 := ~tmp~548;
    ~ldv_state_variable_1 := 1;
    ~usb_counter := 0;
    call ldv_usb_driver_1();
    #res := ~ldv_func_res~548;
    assume true;
    return;
}

procedure ldv_usb_register_driver_28(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2.base : int, #in~ldv_func_arg2.offset : int, #in~ldv_func_arg3.base : int, #in~ldv_func_arg3.offset : int) returns (#res : int);
modifies ~ldv_state_variable_1, ~usb_counter, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~usbtouch_driver_group1.base, ~usbtouch_driver_group1.offset;

implementation ldv_check_final_state() returns (){
  loc4:
    assume !((~usb_urb.base + ~usb_urb.offset) % 18446744073709551616 == 0);
    call ldv_error();
    return;
}

procedure ldv_check_final_state() returns ();
modifies ;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr990 : int;

  loc5:
    #t~loopctr990 := 0;
    goto loc6;
  loc6:
    goto loc6_0, loc6_1;
  loc6_0:
    assume #t~loopctr990 < #amount;
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset + #t~loopctr990 * 1 := 0], #memory_$Pointer$.offset[#ptr.base,#ptr.offset + #t~loopctr990 * 1 := #value % 256];
    #memory_int := #memory_int[#ptr.base,#ptr.offset + #t~loopctr990 * 1 := #value];
    #t~loopctr990 := #t~loopctr990 + 1;
    goto loc6;
  loc6_1:
    assume !(#t~loopctr990 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation usbtouch_driver_init() returns (#res : int){
    var #t~nondet916.base : int, #t~nondet916.offset : int;
    var #t~ret917 : int;
    var ~tmp~459 : int;

  loc7:
    havoc ~tmp~459;
    call #t~nondet916.base, #t~nondet916.offset := #Ultimate.alloc(15);
    call #t~ret917 := ldv_usb_register_driver_28(~#usbtouch_driver.base, ~#usbtouch_driver.offset, ~#__this_module.base, ~#__this_module.offset, #t~nondet916.base, #t~nondet916.offset);
    assume -2147483648 <= #t~ret917 && #t~ret917 <= 2147483647;
    ~tmp~459 := #t~ret917;
    havoc #t~nondet916.base, #t~nondet916.offset;
    havoc #t~ret917;
    #res := ~tmp~459;
    assume true;
    return;
}

procedure usbtouch_driver_init() returns (#res : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~usbtouch_driver_group1.base, ~usbtouch_driver_group1.offset, ~ldv_state_variable_1, ~usb_counter;

implementation ldv_usb_driver_1() returns (){
    var #t~ret918.base : int, #t~ret918.offset : int;
    var ~tmp~465.base : int, ~tmp~465.offset : int;

  loc8:
    havoc ~tmp~465.base, ~tmp~465.offset;
    call #t~ret918.base, #t~ret918.offset := ldv_zalloc(1520);
    ~tmp~465.base, ~tmp~465.offset := #t~ret918.base, #t~ret918.offset;
    havoc #t~ret918.base, #t~ret918.offset;
    ~usbtouch_driver_group1.base, ~usbtouch_driver_group1.offset := ~tmp~465.base, ~tmp~465.offset;
    assume true;
    return;
}

procedure ldv_usb_driver_1() returns ();
modifies ~usbtouch_driver_group1.base, ~usbtouch_driver_group1.offset, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~nondet75 : int;
    var #t~malloc76.base : int, #t~malloc76.offset : int;
    var ~size : int;
    var ~p~86.base : int, ~p~86.offset : int;
    var ~tmp~86.base : int, ~tmp~86.offset : int;
    var ~tmp___0~86 : int;

  loc9:
    ~size := #in~size;
    havoc ~p~86.base, ~p~86.offset;
    havoc ~tmp~86.base, ~tmp~86.offset;
    havoc ~tmp___0~86;
    assume -2147483648 <= #t~nondet75 && #t~nondet75 <= 2147483647;
    ~tmp___0~86 := #t~nondet75;
    havoc #t~nondet75;
    assume ~tmp___0~86 != 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ULTIMATE.start() returns (){
    var #t~ret954 : int;

  loc10:
    call ULTIMATE.init();
    call #t~ret954 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_1, ~usb_counter, ~ref_cnt, ~ldv_state_variable_0, ~#nexio_ack_pkt.base, ~#nexio_ack_pkt.offset, ~#nexio_init_pkt.base, ~#nexio_init_pkt.offset, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_1, ~ldv_retval_3, ~ldv_retval_2, ~INTERF_STATE, ~SERIAL_STATE, ~usb_intfdata.base, ~usb_intfdata.offset, ~dev_counter, ~completeFnIntCounter, ~completeFnBulkCounter, ~usbtouch_driver_group1.base, ~usbtouch_driver_group1.offset, ~swap_xy, ~hwcalib_xy, ~#usbtouch_devices.base, ~#usbtouch_devices.offset, ~#usbtouch_dev_info.base, ~#usbtouch_dev_info.offset, ~#usbtouch_driver.base, ~#usbtouch_driver.offset, ~usb_urb.base, ~usb_urb.offset, ~usb_dev.base, ~usb_dev.offset, ~completeFnInt.base, ~completeFnInt.offset, ~completeFnBulk.base, ~completeFnBulk.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_4;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_state_variable_1, ~usb_intfdata.base, ~usb_intfdata.offset, ~completeFnBulk.base, ~completeFnBulk.offset, ~completeFnBulkCounter, ~completeFnInt.base, ~completeFnInt.offset, ~completeFnIntCounter, ~usb_urb.base, ~usb_urb.offset, ~INTERF_STATE, ~usbtouch_driver_group1.base, ~usbtouch_driver_group1.offset, ~usb_counter, ~ref_cnt, ~ldv_state_variable_0, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_4;

implementation main() returns (#res : int){
    var #t~ret919.base : int, #t~ret919.offset : int;
    var #t~memset920.base : int, #t~memset920.offset : int;
    var #t~nondet921 : int;
    var #t~switch922 : bool;
    var #t~nondet923 : int;
    var #t~switch924 : bool;
    var #t~ret925 : int;
    var #t~ret926 : int;
    var #t~mem927 : int;
    var #t~ret928 : int;
    var #t~ret929 : int;
    var #t~nondet930 : int;
    var #t~switch931 : bool;
    var #t~ret932 : int;
    var ~ldvarg1~467.base : int, ~ldvarg1~467.offset : int;
    var ~tmp~467.base : int, ~tmp~467.offset : int;
    var ~#ldvarg0~467.base : int, ~#ldvarg0~467.offset : int;
    var ~tmp___0~467 : int;
    var ~tmp___1~467 : int;
    var ~tmp___2~467 : int;

  loc11:
    havoc ~ldvarg1~467.base, ~ldvarg1~467.offset;
    havoc ~tmp~467.base, ~tmp~467.offset;
    call ~#ldvarg0~467.base, ~#ldvarg0~467.offset := #Ultimate.alloc(4);
    havoc ~tmp___0~467;
    havoc ~tmp___1~467;
    havoc ~tmp___2~467;
    call #t~ret919.base, #t~ret919.offset := ldv_zalloc(32);
    ~tmp~467.base, ~tmp~467.offset := #t~ret919.base, #t~ret919.offset;
    havoc #t~ret919.base, #t~ret919.offset;
    ~ldvarg1~467.base, ~ldvarg1~467.offset := ~tmp~467.base, ~tmp~467.offset;
    call ldv_initialize();
    call #t~memset920.base, #t~memset920.offset := #Ultimate.C_memset(~#ldvarg0~467.base, ~#ldvarg0~467.offset, 0, 4);
    havoc #t~memset920.base, #t~memset920.offset;
    ~ldv_state_variable_1 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    assume -2147483648 <= #t~nondet921 && #t~nondet921 <= 2147483647;
    ~tmp___0~467 := #t~nondet921;
    havoc #t~nondet921;
    #t~switch922 := ~tmp___0~467 == 0;
    assume !#t~switch922;
    #t~switch922 := #t~switch922 || ~tmp___0~467 == 1;
    assume #t~switch922;
    assume ~ldv_state_variable_0 != 0;
    assume -2147483648 <= #t~nondet930 && #t~nondet930 <= 2147483647;
    ~tmp___2~467 := #t~nondet930;
    havoc #t~nondet930;
    #t~switch931 := ~tmp___2~467 == 0;
    assume !#t~switch931;
    #t~switch931 := #t~switch931 || ~tmp___2~467 == 1;
    assume #t~switch931;
    assume ~ldv_state_variable_0 == 1;
    call #t~ret932 := usbtouch_driver_init();
    assume -2147483648 <= #t~ret932 && #t~ret932 <= 2147483647;
    ~ldv_retval_4 := #t~ret932;
    havoc #t~ret932;
    assume !(~ldv_retval_4 == 0);
    assume ~ldv_retval_4 != 0;
    ~ldv_state_variable_0 := 2;
    call ldv_check_final_state();
    return;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_4, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~usb_intfdata.base, ~usb_intfdata.offset, ~completeFnBulk.base, ~completeFnBulk.offset, ~completeFnBulkCounter, ~completeFnInt.base, ~completeFnInt.offset, ~completeFnIntCounter, ~usb_urb.base, ~usb_urb.offset, ~INTERF_STATE, ~usbtouch_driver_group1.base, ~usbtouch_driver_group1.offset, ~usb_counter;

procedure dev_get_drvdata(#in~32.base : int, #in~32.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure msleep(#in~28 : int) returns ();
modifies ;

procedure input_free_device(#in~79.base : int, #in~79.offset : int) returns ();
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure usb_bulk_msg(#in~63.base : int, #in~63.offset : int, #in~64 : int, #in~65.base : int, #in~65.offset : int, #in~66 : int, #in~67.base : int, #in~67.offset : int, #in~68 : int) returns (#res : int);
modifies ;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure ldv_initialize() returns ();
modifies ;

procedure usb_deregister(#in~44.base : int, #in~44.offset : int) returns ();
modifies ;

procedure __VERIFIER_nondet_pointer() returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_kill_urb(#in~45.base : int, #in~45.offset : int) returns ();
modifies ;

procedure kfree(#in~70.base : int, #in~70.offset : int) returns ();
modifies ;

procedure kstrdup(#in~13.base : int, #in~13.offset : int, #in~14 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure strlcat(#in~10.base : int, #in~10.offset : int, #in~11.base : int, #in~11.offset : int, #in~12 : int) returns (#res : int);
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];

procedure mutex_unlock(#in~31.base : int, #in~31.offset : int) returns ();
modifies ;

procedure __dynamic_dev_dbg(#in~22.base : int, #in~22.offset : int, #in~23.base : int, #in~23.offset : int, #in~24.base : int, #in~24.offset : int) returns (#res : int);
modifies ;

procedure __memcpy(#in~0.base : int, #in~0.offset : int, #in~1.base : int, #in~1.offset : int, #in~2 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __VERIFIER_error() returns ();
modifies ;

procedure input_register_device(#in~82.base : int, #in~82.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_assume(#in~expression : int) returns ();
modifies ;

procedure __kmalloc(#in~71 : int, #in~72 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];

procedure input_event(#in~84.base : int, #in~84.offset : int, #in~85 : int, #in~86 : int, #in~87 : int) returns ();
modifies ;

procedure input_set_abs_params(#in~88.base : int, #in~88.offset : int, #in~89 : int, #in~90 : int, #in~91 : int, #in~92 : int, #in~93 : int) returns ();
modifies ;

procedure strlen(#in~6.base : int, #in~6.offset : int) returns (#res : int);
modifies ;

procedure usb_free_coherent(#in~50.base : int, #in~50.offset : int, #in~51 : int, #in~52.base : int, #in~52.offset : int, #in~53 : int) returns ();
modifies ;

procedure usb_alloc_coherent(#in~46.base : int, #in~46.offset : int, #in~47 : int, #in~48 : int, #in~49.base : int, #in~49.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure usb_control_msg(#in~54.base : int, #in~54.offset : int, #in~55 : int, #in~56 : int, #in~57 : int, #in~58 : int, #in~59 : int, #in~60.base : int, #in~60.offset : int, #in~61 : int, #in~62 : int) returns (#res : int);
modifies ;

procedure strlcpy(#in~7.base : int, #in~7.offset : int, #in~8.base : int, #in~8.offset : int, #in~9 : int) returns (#res : int);
modifies ;

procedure usb_register_driver(#in~41.base : int, #in~41.offset : int, #in~42.base : int, #in~42.offset : int, #in~43.base : int, #in~43.offset : int) returns (#res : int);
modifies ;

procedure memset(#in~3.base : int, #in~3.offset : int, #in~4 : int, #in~5 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure input_allocate_device() returns (#res.base : int, #res.offset : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure dev_set_drvdata(#in~33.base : int, #in~33.offset : int, #in~34.base : int, #in~34.offset : int) returns (#res : int);
modifies ;

procedure input_unregister_device(#in~83.base : int, #in~83.offset : int) returns ();
modifies ;

procedure kmemdup(#in~15.base : int, #in~15.offset : int, #in~16 : int, #in~17 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure printk(#in~21.base : int, #in~21.offset : int) returns (#res : int);
modifies ;

procedure calloc(#in~nmemb : int, #in~size : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure dev_err(#in~35.base : int, #in~35.offset : int, #in~36.base : int, #in~36.offset : int) returns (#res : int);
modifies ;

procedure snprintf(#in~25.base : int, #in~25.offset : int, #in~26 : int, #in~27.base : int, #in~27.offset : int) returns (#res : int);
modifies ;

procedure mutex_lock_nested(#in~29.base : int, #in~29.offset : int, #in~30 : int) returns ();
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;


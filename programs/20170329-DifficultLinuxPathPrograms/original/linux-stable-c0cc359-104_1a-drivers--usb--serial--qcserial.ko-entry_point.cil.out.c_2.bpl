type STRUCT~compat_timespec;
type STRUCT~pollfd;
type STRUCT~map_segment;
type STRUCT~task_struct;
type STRUCT~tvec_base;
type STRUCT~sock;
type STRUCT~vm_area_struct;
type STRUCT~sysfs_dirent;
type STRUCT~nameidata;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~pid_namespace;
type STRUCT~page;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~iovec;
type STRUCT~backing_dev_info;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~pipe_inode_info;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~poll_table_struct;
type STRUCT~kstatfs;
type STRUCT~seq_file;
type STRUCT~serial_icounter_struct;
type STRUCT~proc_dir_entry;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type STRUCT~dma_map_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~keyring_list;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~ep_device;
type STRUCT~mon_bus;
type STRUCT~usb_tt;
type STRUCT~wusb_dev;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__u64 = int;
type ~u8 = int;
type ~u16 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~umode_t = int;
type ~__kernel_mode_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid_t = int;
type ~__kernel_gid_t = int;
type ~__kernel_size_t = int;
type ~__kernel_ssize_t = int;
type ~__kernel_time_t = int;
type ~__kernel_clockid_t = int;
type ~__kernel_loff_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~rwsem_count_t = int;
type ~qsize_t = int;
type ~cc_t = int;
type ~speed_t = int;
type ~tcflag_t = int;
type ~kernel_ulong_t = int;
type ~ldv_func_ret_type = int;
type ~ldv_func_ret_type___0 = int;
type ~ldv_func_ret_type___1 = int;
type ~ldv_func_ret_type___2 = int;
type ~ldv_func_ret_type___3 = int;
type ~dma_addr_t = ~u64;
type ~__kernel_uid32_t = ~__kernel_uid_t;
type ~__kernel_gid32_t = ~__kernel_gid_t;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~mode_t = ~__kernel_mode_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint32_t = ~__u32;
type ~__le16 = ~__u16;
type ~qid_t = ~__kernel_uid32_t;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
const #funAddr~usb_serial_probe.base : int;
const #funAddr~usb_serial_probe.offset : int;
const #funAddr~usb_serial_disconnect.base : int;
const #funAddr~usb_serial_disconnect.offset : int;
const #funAddr~usb_serial_suspend.base : int;
const #funAddr~usb_serial_suspend.offset : int;
const #funAddr~usb_serial_resume.base : int;
const #funAddr~usb_serial_resume.offset : int;
const #funAddr~qcprobe.base : int;
const #funAddr~qcprobe.offset : int;
const #funAddr~usb_wwan_startup.base : int;
const #funAddr~usb_wwan_startup.offset : int;
const #funAddr~usb_wwan_disconnect.base : int;
const #funAddr~usb_wwan_disconnect.offset : int;
const #funAddr~qc_release.base : int;
const #funAddr~qc_release.offset : int;
const #funAddr~usb_wwan_suspend.base : int;
const #funAddr~usb_wwan_suspend.offset : int;
const #funAddr~usb_wwan_resume.base : int;
const #funAddr~usb_wwan_resume.offset : int;
const #funAddr~usb_wwan_open.base : int;
const #funAddr~usb_wwan_open.offset : int;
const #funAddr~usb_wwan_close.base : int;
const #funAddr~usb_wwan_close.offset : int;
const #funAddr~usb_wwan_write.base : int;
const #funAddr~usb_wwan_write.offset : int;
const #funAddr~usb_wwan_write_room.base : int;
const #funAddr~usb_wwan_write_room.offset : int;
const #funAddr~usb_wwan_chars_in_buffer.base : int;
const #funAddr~usb_wwan_chars_in_buffer.offset : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~usb_device_speed~USB_SPEED_UNKNOWN : int;
const ~usb_device_speed~USB_SPEED_LOW : int;
const ~usb_device_speed~USB_SPEED_FULL : int;
const ~usb_device_speed~USB_SPEED_HIGH : int;
const ~usb_device_speed~USB_SPEED_WIRELESS : int;
const ~usb_device_speed~USB_SPEED_SUPER : int;
const ~usb_device_state~USB_STATE_NOTATTACHED : int;
const ~usb_device_state~USB_STATE_ATTACHED : int;
const ~usb_device_state~USB_STATE_POWERED : int;
const ~usb_device_state~USB_STATE_RECONNECTING : int;
const ~usb_device_state~USB_STATE_UNAUTHENTICATED : int;
const ~usb_device_state~USB_STATE_DEFAULT : int;
const ~usb_device_state~USB_STATE_ADDRESS : int;
const ~usb_device_state~USB_STATE_CONFIGURED : int;
const ~usb_device_state~USB_STATE_SUSPENDED : int;
const ~usb_interface_condition~USB_INTERFACE_UNBOUND : int;
const ~usb_interface_condition~USB_INTERFACE_BINDING : int;
const ~usb_interface_condition~USB_INTERFACE_BOUND : int;
const ~usb_interface_condition~USB_INTERFACE_UNBINDING : int;
const ~port_dev_state~PORT_UNREGISTERED : int;
const ~port_dev_state~PORT_REGISTERING : int;
const ~port_dev_state~PORT_REGISTERED : int;
const ~port_dev_state~PORT_UNREGISTERING : int;
axiom #funAddr~usb_serial_probe.base == -1 && #funAddr~usb_serial_probe.offset == 0;
axiom #funAddr~usb_serial_disconnect.base == -1 && #funAddr~usb_serial_disconnect.offset == 1;
axiom #funAddr~usb_serial_suspend.base == -1 && #funAddr~usb_serial_suspend.offset == 2;
axiom #funAddr~usb_serial_resume.base == -1 && #funAddr~usb_serial_resume.offset == 3;
axiom #funAddr~qcprobe.base == -1 && #funAddr~qcprobe.offset == 4;
axiom #funAddr~usb_wwan_startup.base == -1 && #funAddr~usb_wwan_startup.offset == 5;
axiom #funAddr~usb_wwan_disconnect.base == -1 && #funAddr~usb_wwan_disconnect.offset == 6;
axiom #funAddr~qc_release.base == -1 && #funAddr~qc_release.offset == 7;
axiom #funAddr~usb_wwan_suspend.base == -1 && #funAddr~usb_wwan_suspend.offset == 8;
axiom #funAddr~usb_wwan_resume.base == -1 && #funAddr~usb_wwan_resume.offset == 9;
axiom #funAddr~usb_wwan_open.base == -1 && #funAddr~usb_wwan_open.offset == 10;
axiom #funAddr~usb_wwan_close.base == -1 && #funAddr~usb_wwan_close.offset == 11;
axiom #funAddr~usb_wwan_write.base == -1 && #funAddr~usb_wwan_write.offset == 12;
axiom #funAddr~usb_wwan_write_room.base == -1 && #funAddr~usb_wwan_write_room.offset == 13;
axiom #funAddr~usb_wwan_chars_in_buffer.base == -1 && #funAddr~usb_wwan_chars_in_buffer.offset == 14;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~usb_device_speed~USB_SPEED_UNKNOWN == 0;
axiom ~usb_device_speed~USB_SPEED_LOW == 1;
axiom ~usb_device_speed~USB_SPEED_FULL == 2;
axiom ~usb_device_speed~USB_SPEED_HIGH == 3;
axiom ~usb_device_speed~USB_SPEED_WIRELESS == 4;
axiom ~usb_device_speed~USB_SPEED_SUPER == 5;
axiom ~usb_device_state~USB_STATE_NOTATTACHED == 0;
axiom ~usb_device_state~USB_STATE_ATTACHED == 1;
axiom ~usb_device_state~USB_STATE_POWERED == 2;
axiom ~usb_device_state~USB_STATE_RECONNECTING == 3;
axiom ~usb_device_state~USB_STATE_UNAUTHENTICATED == 4;
axiom ~usb_device_state~USB_STATE_DEFAULT == 5;
axiom ~usb_device_state~USB_STATE_ADDRESS == 6;
axiom ~usb_device_state~USB_STATE_CONFIGURED == 7;
axiom ~usb_device_state~USB_STATE_SUSPENDED == 8;
axiom ~usb_interface_condition~USB_INTERFACE_UNBOUND == 0;
axiom ~usb_interface_condition~USB_INTERFACE_BINDING == 1;
axiom ~usb_interface_condition~USB_INTERFACE_BOUND == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBINDING == 3;
axiom ~port_dev_state~PORT_UNREGISTERED == 0;
axiom ~port_dev_state~PORT_REGISTERING == 1;
axiom ~port_dev_state~PORT_REGISTERED == 2;
axiom ~port_dev_state~PORT_UNREGISTERING == 3;
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
var ~ldv_state_variable_2 : int;

var ~ref_cnt : int;

var ~ldv_state_variable_1 : int;

var ~usb_counter : int;

var ~ldv_state_variable_0 : int;

var ~debug : int;

var ~ldv_retval_9 : int;

var ~ldv_retval_2 : int;

var ~ldv_retval_5 : int;

var ~ldv_retval_0 : int;

var ~ldv_retval_4 : int;

var ~ldv_retval_6 : int;

var ~ldv_retval_1 : int;

var ~ldv_retval_8 : int;

var ~ldv_retval_3 : int;

var ~ldv_retval_7 : int;

var ~ldv_alloc_count : int;

var ~qcdevice_group1.base : int, ~qcdevice_group1.offset : int;

var ~qcdriver_group1.base : int, ~qcdriver_group1.offset : int;

var ~qcdevice_group0.base : int, ~qcdevice_group0.offset : int;

var ~qcdevice_group2.base : int, ~qcdevice_group2.offset : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~#id_table.base : int, ~#id_table.offset : int;

var ~#qcdriver.base : int, ~#qcdriver.offset : int;

var ~#qcdevice.base : int, ~#qcdevice.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_int : [int,int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

implementation ULTIMATE.init() returns (){
    var #t~nondet60.base : int, #t~nondet60.offset : int;
    var #t~union187.__padding : [int]int, #t~union187.dep_map.key.base : int, #t~union187.dep_map.key.offset : int, #t~union187.dep_map.class_cache.base : [int]int, #t~union187.dep_map.class_cache.offset : [int]int, #t~union187.dep_map.name.base : int, #t~union187.dep_map.name.offset : int, #t~union187.dep_map.cpu : int, #t~union187.dep_map.ip : int;
    var #t~nondet125.base : int, #t~nondet125.offset : int;
    var #t~nondet126.base : int, #t~nondet126.offset : int;
    var #t~union188.__padding : [int]int, #t~union188.dep_map.key.base : int, #t~union188.dep_map.key.offset : int, #t~union188.dep_map.class_cache.base : [int]int, #t~union188.dep_map.class_cache.offset : [int]int, #t~union188.dep_map.name.base : int, #t~union188.dep_map.name.offset : int, #t~union188.dep_map.cpu : int, #t~union188.dep_map.ip : int;

  loc0:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_state_variable_2 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_1 := 0;
    ~usb_counter := 0;
    ~ldv_state_variable_0 := 0;
    ~debug := 0;
    ~ldv_retval_9 := 0;
    ~ldv_retval_2 := 0;
    ~ldv_retval_5 := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_4 := 0;
    ~ldv_retval_6 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_retval_8 := 0;
    ~ldv_retval_3 := 0;
    ~ldv_retval_7 := 0;
    ~ldv_alloc_count := 0;
    ~qcdevice_group1.base, ~qcdevice_group1.offset := 0, 0;
    ~qcdriver_group1.base, ~qcdriver_group1.offset := 0, 0;
    ~qcdevice_group0.base, ~qcdevice_group0.offset := 0, 0;
    ~qcdevice_group2.base, ~qcdevice_group2.offset := 0, 0;
    call ~#id_table.base, ~#id_table.offset := #Ultimate.alloc(1416);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 0 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 0 + 2, 2);
    call write~int(37393, ~#id_table.base, ~#id_table.offset + 0 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 24 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 24 + 2, 2);
    call write~int(37394, ~#id_table.base, ~#id_table.offset + 24 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 48 + 0, 2);
    call write~int(1008, ~#id_table.base, ~#id_table.offset + 48 + 2, 2);
    call write~int(7965, ~#id_table.base, ~#id_table.offset + 48 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 72 + 0, 2);
    call write~int(1008, ~#id_table.base, ~#id_table.offset + 72 + 2, 2);
    call write~int(8221, ~#id_table.base, ~#id_table.offset + 72 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 72 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 72 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 72 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 72 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 72 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 72 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 72 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 72 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 72 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 96 + 0, 2);
    call write~int(1242, ~#id_table.base, ~#id_table.offset + 96 + 2, 2);
    call write~int(9485, ~#id_table.base, ~#id_table.offset + 96 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 96 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 96 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 96 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 96 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 96 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 96 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 96 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 96 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 96 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 120 + 0, 2);
    call write~int(1242, ~#id_table.base, ~#id_table.offset + 120 + 2, 2);
    call write~int(9484, ~#id_table.base, ~#id_table.offset + 120 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 120 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 120 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 120 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 120 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 120 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 120 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 120 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 120 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 120 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 144 + 0, 2);
    call write~int(16700, ~#id_table.base, ~#id_table.offset + 144 + 2, 2);
    call write~int(33138, ~#id_table.base, ~#id_table.offset + 144 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 144 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 144 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 144 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 144 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 144 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 144 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 144 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 144 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 144 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 168 + 0, 2);
    call write~int(16700, ~#id_table.base, ~#id_table.offset + 168 + 2, 2);
    call write~int(33137, ~#id_table.base, ~#id_table.offset + 168 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 168 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 168 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 168 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 168 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 168 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 168 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 168 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 168 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 168 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 192 + 0, 2);
    call write~int(5136, ~#id_table.base, ~#id_table.offset + 192 + 2, 2);
    call write~int(40961, ~#id_table.base, ~#id_table.offset + 192 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 192 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 192 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 192 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 192 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 192 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 192 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 192 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 192 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 192 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 216 + 0, 2);
    call write~int(5136, ~#id_table.base, ~#id_table.offset + 216 + 2, 2);
    call write~int(40968, ~#id_table.base, ~#id_table.offset + 216 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 216 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 216 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 216 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 216 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 216 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 216 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 216 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 216 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 216 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 240 + 0, 2);
    call write~int(2821, ~#id_table.base, ~#id_table.offset + 240 + 2, 2);
    call write~int(6006, ~#id_table.base, ~#id_table.offset + 240 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 240 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 240 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 240 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 240 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 240 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 240 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 240 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 240 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 240 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 264 + 0, 2);
    call write~int(2821, ~#id_table.base, ~#id_table.offset + 264 + 2, 2);
    call write~int(6004, ~#id_table.base, ~#id_table.offset + 264 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 264 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 264 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 264 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 264 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 264 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 264 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 264 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 264 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 264 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 288 + 0, 2);
    call write~int(6610, ~#id_table.base, ~#id_table.offset + 288 + 2, 2);
    call write~int(65523, ~#id_table.base, ~#id_table.offset + 288 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 288 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 288 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 288 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 288 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 288 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 288 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 288 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 288 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 288 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 312 + 0, 2);
    call write~int(6610, ~#id_table.base, ~#id_table.offset + 312 + 2, 2);
    call write~int(65522, ~#id_table.base, ~#id_table.offset + 312 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 312 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 312 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 312 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 312 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 312 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 312 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 312 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 312 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 312 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 336 + 0, 2);
    call write~int(5463, ~#id_table.base, ~#id_table.offset + 336 + 2, 2);
    call write~int(2688, ~#id_table.base, ~#id_table.offset + 336 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 336 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 336 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 336 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 336 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 336 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 336 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 336 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 336 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 336 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 360 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 360 + 2, 2);
    call write~int(36865, ~#id_table.base, ~#id_table.offset + 360 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 360 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 360 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 360 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 360 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 360 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 360 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 360 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 360 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 360 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 384 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 384 + 2, 2);
    call write~int(36866, ~#id_table.base, ~#id_table.offset + 384 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 384 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 384 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 384 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 384 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 384 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 384 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 384 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 384 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 384 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 408 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 408 + 2, 2);
    call write~int(37378, ~#id_table.base, ~#id_table.offset + 408 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 408 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 408 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 408 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 408 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 408 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 408 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 408 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 408 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 408 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 432 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 432 + 2, 2);
    call write~int(37379, ~#id_table.base, ~#id_table.offset + 432 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 432 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 432 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 432 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 432 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 432 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 432 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 432 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 432 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 432 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 456 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 456 + 2, 2);
    call write~int(37410, ~#id_table.base, ~#id_table.offset + 456 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 456 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 456 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 456 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 456 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 456 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 456 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 456 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 456 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 456 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 480 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 480 + 2, 2);
    call write~int(36872, ~#id_table.base, ~#id_table.offset + 480 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 480 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 480 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 480 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 480 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 480 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 480 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 480 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 480 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 480 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 504 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 504 + 2, 2);
    call write~int(37377, ~#id_table.base, ~#id_table.offset + 504 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 504 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 504 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 504 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 504 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 504 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 504 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 504 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 504 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 504 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 528 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 528 + 2, 2);
    call write~int(37409, ~#id_table.base, ~#id_table.offset + 528 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 528 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 528 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 528 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 528 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 528 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 528 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 528 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 528 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 528 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 552 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 552 + 2, 2);
    call write~int(37425, ~#id_table.base, ~#id_table.offset + 552 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 552 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 552 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 552 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 552 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 552 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 552 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 552 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 552 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 552 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 576 + 0, 2);
    call write~int(8005, ~#id_table.base, ~#id_table.offset + 576 + 2, 2);
    call write~int(1, ~#id_table.base, ~#id_table.offset + 576 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 576 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 576 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 576 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 576 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 576 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 576 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 576 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 576 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 576 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 600 + 0, 2);
    call write~int(16700, ~#id_table.base, ~#id_table.offset + 600 + 2, 2);
    call write~int(33157, ~#id_table.base, ~#id_table.offset + 600 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 624 + 0, 2);
    call write~int(16700, ~#id_table.base, ~#id_table.offset + 624 + 2, 2);
    call write~int(33158, ~#id_table.base, ~#id_table.offset + 624 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 624 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 624 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 624 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 624 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 624 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 624 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 624 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 624 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 624 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 648 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 648 + 2, 2);
    call write~int(37384, ~#id_table.base, ~#id_table.offset + 648 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 648 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 648 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 648 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 648 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 648 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 648 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 648 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 648 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 648 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 672 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 672 + 2, 2);
    call write~int(37387, ~#id_table.base, ~#id_table.offset + 672 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 672 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 672 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 672 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 672 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 672 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 672 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 672 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 672 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 672 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 696 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 696 + 2, 2);
    call write~int(37412, ~#id_table.base, ~#id_table.offset + 696 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 696 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 696 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 696 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 696 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 696 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 696 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 696 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 696 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 696 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 720 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 720 + 2, 2);
    call write~int(37413, ~#id_table.base, ~#id_table.offset + 720 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 720 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 720 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 720 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 720 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 720 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 720 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 720 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 720 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 720 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 744 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 744 + 2, 2);
    call write~int(37444, ~#id_table.base, ~#id_table.offset + 744 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 744 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 744 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 744 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 744 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 744 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 744 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 744 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 744 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 744 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 768 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 768 + 2, 2);
    call write~int(37445, ~#id_table.base, ~#id_table.offset + 768 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 768 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 768 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 768 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 768 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 768 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 768 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 768 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 768 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 768 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 792 + 0, 2);
    call write~int(1008, ~#id_table.base, ~#id_table.offset + 792 + 2, 2);
    call write~int(9245, ~#id_table.base, ~#id_table.offset + 792 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 792 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 792 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 792 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 792 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 792 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 792 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 792 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 792 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 792 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 816 + 0, 2);
    call write~int(1008, ~#id_table.base, ~#id_table.offset + 816 + 2, 2);
    call write~int(9501, ~#id_table.base, ~#id_table.offset + 816 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 816 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 816 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 816 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 816 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 816 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 816 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 816 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 816 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 816 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 840 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 840 + 2, 2);
    call write~int(37396, ~#id_table.base, ~#id_table.offset + 840 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 840 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 840 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 840 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 840 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 840 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 840 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 840 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 840 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 840 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 864 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 864 + 2, 2);
    call write~int(37397, ~#id_table.base, ~#id_table.offset + 864 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 864 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 864 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 864 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 864 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 864 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 864 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 864 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 864 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 864 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 888 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 888 + 2, 2);
    call write~int(37476, ~#id_table.base, ~#id_table.offset + 888 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 888 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 888 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 888 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 888 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 888 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 888 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 888 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 888 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 888 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 912 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 912 + 2, 2);
    call write~int(37477, ~#id_table.base, ~#id_table.offset + 912 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 912 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 912 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 912 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 912 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 912 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 912 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 912 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 912 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 912 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 936 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 936 + 2, 2);
    call write~int(37428, ~#id_table.base, ~#id_table.offset + 936 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 936 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 936 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 936 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 936 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 936 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 936 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 936 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 936 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 936 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 960 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 960 + 2, 2);
    call write~int(37429, ~#id_table.base, ~#id_table.offset + 960 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 960 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 960 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 960 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 960 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 960 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 960 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 960 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 960 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 960 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 984 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 984 + 2, 2);
    call write~int(37492, ~#id_table.base, ~#id_table.offset + 984 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 984 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 984 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 984 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 984 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 984 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 984 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 984 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 984 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 984 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1008 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 1008 + 2, 2);
    call write~int(37493, ~#id_table.base, ~#id_table.offset + 1008 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1008 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1008 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1008 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1008 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1008 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1008 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1008 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1008 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1008 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1032 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1032 + 2, 2);
    call write~int(36864, ~#id_table.base, ~#id_table.offset + 1032 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1032 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1032 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1032 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1032 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1032 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1032 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1032 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1032 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1032 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1056 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1056 + 2, 2);
    call write~int(36865, ~#id_table.base, ~#id_table.offset + 1056 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1056 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1056 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1056 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1056 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1056 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1056 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1056 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1056 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1056 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1080 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1080 + 2, 2);
    call write~int(36866, ~#id_table.base, ~#id_table.offset + 1080 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1080 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1080 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1080 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1080 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1080 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1080 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1080 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1080 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1080 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1104 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1104 + 2, 2);
    call write~int(36867, ~#id_table.base, ~#id_table.offset + 1104 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1104 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1104 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1104 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1104 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1104 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1104 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1104 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1104 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1104 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1128 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1128 + 2, 2);
    call write~int(36868, ~#id_table.base, ~#id_table.offset + 1128 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1128 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1128 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1128 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1128 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1128 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1128 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1128 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1128 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1128 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1152 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1152 + 2, 2);
    call write~int(36869, ~#id_table.base, ~#id_table.offset + 1152 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1152 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1152 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1152 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1152 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1152 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1152 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1152 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1152 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1152 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1176 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1176 + 2, 2);
    call write~int(36870, ~#id_table.base, ~#id_table.offset + 1176 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1176 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1176 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1176 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1176 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1176 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1176 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1176 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1176 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1176 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1200 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1200 + 2, 2);
    call write~int(36871, ~#id_table.base, ~#id_table.offset + 1200 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1224 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1224 + 2, 2);
    call write~int(36872, ~#id_table.base, ~#id_table.offset + 1224 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1224 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1224 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1224 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1224 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1224 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1224 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1224 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1224 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1224 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1248 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1248 + 2, 2);
    call write~int(36873, ~#id_table.base, ~#id_table.offset + 1248 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1248 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1248 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1248 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1248 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1248 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1248 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1248 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1248 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1248 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1272 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1272 + 2, 2);
    call write~int(36874, ~#id_table.base, ~#id_table.offset + 1272 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1272 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1272 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1272 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1272 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1272 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1272 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1272 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1272 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1272 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1296 + 0, 2);
    call write~int(5848, ~#id_table.base, ~#id_table.offset + 1296 + 2, 2);
    call write~int(32769, ~#id_table.base, ~#id_table.offset + 1296 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1296 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1296 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1296 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1296 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1296 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1296 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1296 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1296 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1296 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1320 + 0, 2);
    call write~int(5848, ~#id_table.base, ~#id_table.offset + 1320 + 2, 2);
    call write~int(32770, ~#id_table.base, ~#id_table.offset + 1320 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1320 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1320 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1320 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1320 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1320 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1320 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1320 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1320 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1320 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1344 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 1344 + 2, 2);
    call write~int(37380, ~#id_table.base, ~#id_table.offset + 1344 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1344 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1344 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1344 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1344 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1344 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1344 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1344 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1344 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1344 + 16, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1368 + 0, 2);
    call write~int(1478, ~#id_table.base, ~#id_table.offset + 1368 + 2, 2);
    call write~int(37381, ~#id_table.base, ~#id_table.offset + 1368 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1368 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1368 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1368 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1368 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1368 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1368 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1368 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1368 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1368 + 16, 8);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1392 + 0, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1392 + 2, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1392 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1392 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1392 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1392 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1392 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1392 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1392 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1392 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1392 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1392 + 16, 8);
    call ~#qcdriver.base, ~#qcdriver.offset := #Ultimate.alloc(264);
    call #t~nondet60.base, #t~nondet60.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet60.base, #t~nondet60.offset, ~#qcdriver.base, ~#qcdriver.offset + 0, 8);
    call write~$Pointer$(#funAddr~usb_serial_probe.base, #funAddr~usb_serial_probe.offset, ~#qcdriver.base, ~#qcdriver.offset + 8, 8);
    call write~$Pointer$(#funAddr~usb_serial_disconnect.base, #funAddr~usb_serial_disconnect.offset, ~#qcdriver.base, ~#qcdriver.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 24, 8);
    call write~$Pointer$(#funAddr~usb_serial_suspend.base, #funAddr~usb_serial_suspend.offset, ~#qcdriver.base, ~#qcdriver.offset + 32, 8);
    call write~$Pointer$(#funAddr~usb_serial_resume.base, #funAddr~usb_serial_resume.offset, ~#qcdriver.base, ~#qcdriver.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 64, 8);
    call write~$Pointer$(~#id_table.base, ~#id_table.offset, ~#qcdriver.base, ~#qcdriver.offset + 72, 8);
    call write~int(0, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union187.__padding[0], ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union187.dep_map.key.base, #t~union187.dep_map.key.offset, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union187.dep_map.class_cache.base[0], #t~union187.dep_map.class_cache.offset[0], ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union187.dep_map.class_cache.base[1], #t~union187.dep_map.class_cache.offset[1], ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union187.dep_map.name.base, #t~union187.dep_map.name.offset, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union187.dep_map.cpu, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union187.dep_map.ip, ~#qcdriver.base, ~#qcdriver.offset + 80 + 0 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 80 + 64 + 0, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 80 + 64 + 8, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 0 + 16, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 0 + 24, 8);
    call write~int(0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 0 + 32, 1);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 0 + 33, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 0 + 41, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 0 + 49, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 0 + 57, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 0 + 65, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 0 + 73, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 0 + 81, 8);
    call write~$Pointer$(0, 0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 0 + 89, 8);
    call write~int(0, ~#qcdriver.base, ~#qcdriver.offset + 160 + 97, 4);
    call write~int(0, ~#qcdriver.base, ~#qcdriver.offset + 261, 1);
    call write~int(1, ~#qcdriver.base, ~#qcdriver.offset + 262, 1);
    call write~int(0, ~#qcdriver.base, ~#qcdriver.offset + 263, 1);
    havoc #t~nondet60.base, #t~nondet60.offset;
    havoc #t~union187.__padding, #t~union187.dep_map.key.base, #t~union187.dep_map.key.offset, #t~union187.dep_map.class_cache.base, #t~union187.dep_map.class_cache.offset, #t~union187.dep_map.name.base, #t~union187.dep_map.name.offset, #t~union187.dep_map.cpu, #t~union187.dep_map.ip;
    call ~#qcdevice.base, ~#qcdevice.offset := #Ultimate.alloc(474);
    call #t~nondet125.base, #t~nondet125.offset := #Ultimate.alloc(19);
    call write~$Pointer$(#t~nondet125.base, #t~nondet125.offset, ~#qcdevice.base, ~#qcdevice.offset + 0, 8);
    call write~$Pointer$(~#id_table.base, ~#id_table.offset, ~#qcdevice.base, ~#qcdevice.offset + 8, 8);
    call write~int(1, ~#qcdevice.base, ~#qcdevice.offset + 16, 1);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 17 + 0, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 17 + 8, 8);
    call #t~nondet126.base, #t~nondet126.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet126.base, #t~nondet126.offset, ~#qcdevice.base, ~#qcdevice.offset + 33 + 0, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 33 + 8, 8);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#qcdevice.base, ~#qcdevice.offset + 33 + 16, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 33 + 24, 8);
    call write~int(0, ~#qcdevice.base, ~#qcdevice.offset + 33 + 32, 1);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 33 + 33, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 33 + 41, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 33 + 49, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 33 + 57, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 33 + 65, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 33 + 73, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 33 + 81, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 33 + 89, 8);
    call write~$Pointer$(~#qcdriver.base, ~#qcdriver.offset, ~#qcdevice.base, ~#qcdevice.offset + 130, 8);
    call write~int(0, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union188.__padding[0], ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union188.dep_map.key.base, #t~union188.dep_map.key.offset, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union188.dep_map.class_cache.base[0], #t~union188.dep_map.class_cache.offset[0], ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union188.dep_map.class_cache.base[1], #t~union188.dep_map.class_cache.offset[1], ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union188.dep_map.name.base, #t~union188.dep_map.name.offset, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union188.dep_map.cpu, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union188.dep_map.ip, ~#qcdevice.base, ~#qcdevice.offset + 138 + 0 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 138 + 64 + 0, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 138 + 64 + 8, 8);
    call write~int(0, ~#qcdevice.base, ~#qcdevice.offset + 218, 4);
    call write~int(0, ~#qcdevice.base, ~#qcdevice.offset + 222, 4);
    call write~$Pointer$(#funAddr~qcprobe.base, #funAddr~qcprobe.offset, ~#qcdevice.base, ~#qcdevice.offset + 226, 8);
    call write~$Pointer$(#funAddr~usb_wwan_startup.base, #funAddr~usb_wwan_startup.offset, ~#qcdevice.base, ~#qcdevice.offset + 234, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 242, 8);
    call write~$Pointer$(#funAddr~usb_wwan_disconnect.base, #funAddr~usb_wwan_disconnect.offset, ~#qcdevice.base, ~#qcdevice.offset + 250, 8);
    call write~$Pointer$(#funAddr~qc_release.base, #funAddr~qc_release.offset, ~#qcdevice.base, ~#qcdevice.offset + 258, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 266, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 274, 8);
    call write~$Pointer$(#funAddr~usb_wwan_suspend.base, #funAddr~usb_wwan_suspend.offset, ~#qcdevice.base, ~#qcdevice.offset + 282, 8);
    call write~$Pointer$(#funAddr~usb_wwan_resume.base, #funAddr~usb_wwan_resume.offset, ~#qcdevice.base, ~#qcdevice.offset + 290, 8);
    call write~$Pointer$(#funAddr~usb_wwan_open.base, #funAddr~usb_wwan_open.offset, ~#qcdevice.base, ~#qcdevice.offset + 298, 8);
    call write~$Pointer$(#funAddr~usb_wwan_close.base, #funAddr~usb_wwan_close.offset, ~#qcdevice.base, ~#qcdevice.offset + 306, 8);
    call write~$Pointer$(#funAddr~usb_wwan_write.base, #funAddr~usb_wwan_write.offset, ~#qcdevice.base, ~#qcdevice.offset + 314, 8);
    call write~$Pointer$(#funAddr~usb_wwan_write_room.base, #funAddr~usb_wwan_write_room.offset, ~#qcdevice.base, ~#qcdevice.offset + 322, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 330, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 338, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 346, 8);
    call write~$Pointer$(#funAddr~usb_wwan_chars_in_buffer.base, #funAddr~usb_wwan_chars_in_buffer.offset, ~#qcdevice.base, ~#qcdevice.offset + 354, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 362, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 370, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 378, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 386, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 394, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 402, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 410, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 418, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 426, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 434, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 442, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 450, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 458, 8);
    call write~$Pointer$(0, 0, ~#qcdevice.base, ~#qcdevice.offset + 466, 8);
    havoc #t~nondet125.base, #t~nondet125.offset;
    havoc #t~nondet126.base, #t~nondet126.offset;
    havoc #t~union188.__padding, #t~union188.dep_map.key.base, #t~union188.dep_map.key.offset, #t~union188.dep_map.class_cache.base, #t~union188.dep_map.class_cache.offset, #t~union188.dep_map.name.base, #t~union188.dep_map.name.offset, #t~union188.dep_map.cpu, #t~union188.dep_map.ip;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_2, ~ref_cnt, ~ldv_state_variable_1, ~usb_counter, ~ldv_state_variable_0, ~debug, ~ldv_retval_9, ~ldv_retval_2, ~ldv_retval_5, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_6, ~ldv_retval_1, ~ldv_retval_8, ~ldv_retval_3, ~ldv_retval_7, ~ldv_alloc_count, ~qcdevice_group1.base, ~qcdevice_group1.offset, ~qcdriver_group1.base, ~qcdriver_group1.offset, ~qcdevice_group0.base, ~qcdevice_group0.offset, ~qcdevice_group2.base, ~qcdevice_group2.offset, ~#id_table.base, ~#id_table.offset, ~#qcdriver.base, ~#qcdriver.offset, ~#qcdevice.base, ~#qcdevice.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_error() returns (){
  loc1:
    assume !false;
    goto loc2;
  loc2:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr190 : int;

  loc3:
    #t~loopctr190 := 0;
    goto loc4;
  loc4:
    goto loc4_0, loc4_1;
  loc4_0:
    assume #t~loopctr190 < #amount;
    #memory_int := #memory_int[#ptr.base,#ptr.offset + #t~loopctr190 * 1 := #value];
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset + #t~loopctr190 * 1 := 0], #memory_$Pointer$.offset[#ptr.base,#ptr.offset + #t~loopctr190 * 1 := #value % 256];
    #t~loopctr190 := #t~loopctr190 + 1;
    goto loc4;
  loc4_1:
    assume !(#t~loopctr190 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation ldv_check_final_state() returns (){
  loc5:
    assume !(~ldv_alloc_count == 0);
    call ldv_error();
    return;
}

procedure ldv_check_final_state() returns ();
modifies ;

implementation ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~nondet4 : int;
    var #t~malloc5.base : int, #t~malloc5.offset : int;
    var ~size : int;
    var ~p~7.base : int, ~p~7.offset : int;
    var ~tmp~7.base : int, ~tmp~7.offset : int;
    var ~tmp___0~7 : int;

  loc6:
    ~size := #in~size;
    havoc ~p~7.base, ~p~7.offset;
    havoc ~tmp~7.base, ~tmp~7.offset;
    havoc ~tmp___0~7;
    assume -2147483648 <= #t~nondet4 && #t~nondet4 <= 2147483647;
    ~tmp___0~7 := #t~nondet4;
    havoc #t~nondet4;
    assume ~tmp___0~7 != 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ULTIMATE.start() returns (){
    var #t~ret189 : int;

  loc7:
    call ULTIMATE.init();
    call #t~ret189 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_2, ~ref_cnt, ~ldv_state_variable_1, ~usb_counter, ~ldv_state_variable_0, ~debug, ~ldv_retval_9, ~ldv_retval_2, ~ldv_retval_5, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_6, ~ldv_retval_1, ~ldv_retval_8, ~ldv_retval_3, ~ldv_retval_7, ~ldv_alloc_count, ~qcdevice_group1.base, ~qcdevice_group1.offset, ~qcdriver_group1.base, ~qcdriver_group1.offset, ~qcdevice_group0.base, ~qcdevice_group0.offset, ~qcdevice_group2.base, ~qcdevice_group2.offset, ~#id_table.base, ~#id_table.offset, ~#qcdriver.base, ~#qcdriver.offset, ~#qcdevice.base, ~#qcdevice.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_2, ~ldv_retval_4, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_5, ~ldv_retval_9, ~ldv_retval_8, ~ldv_retval_7, ~ldv_retval_6;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~qcdevice_group0.base, ~qcdevice_group0.offset, ~qcdevice_group1.base, ~qcdevice_group1.offset, ~qcdevice_group2.base, ~qcdevice_group2.offset, ~ldv_alloc_count, ~ldv_state_variable_2, ~qcdriver_group1.base, ~qcdriver_group1.offset, ~usb_counter, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_retval_4, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_5, ~ldv_retval_9, ~ldv_retval_8, ~ldv_retval_7, ~ldv_retval_6;

implementation main() returns (#res : int){
    var #t~ret133.base : int, #t~ret133.offset : int;
    var #t~ret134.base : int, #t~ret134.offset : int;
    var #t~nondet135 : int;
    var #t~ret136.base : int, #t~ret136.offset : int;
    var #t~memset137.base : int, #t~memset137.offset : int;
    var #t~memset138.base : int, #t~memset138.offset : int;
    var #t~nondet139 : int;
    var #t~switch140 : bool;
    var #t~nondet141 : int;
    var #t~switch142 : bool;
    var #t~ret143 : int;
    var #t~ret144 : int;
    var #t~ret145 : int;
    var #t~ret146 : int;
    var #t~mem147 : int;
    var #t~ret148 : int;
    var #t~mem149 : int;
    var #t~ret150 : int;
    var #t~ret151 : int;
    var #t~ret152 : int;
    var #t~ret153 : int;
    var #t~ret154 : int;
    var #t~ret155 : int;
    var #t~ret156 : int;
    var #t~ret157 : int;
    var #t~ret158 : int;
    var #t~ret159 : int;
    var #t~ret160 : int;
    var #t~ret161 : int;
    var #t~ret162 : int;
    var #t~ret163 : int;
    var #t~ret164 : int;
    var #t~ret165 : int;
    var #t~ret166 : int;
    var #t~nondet167 : int;
    var #t~switch168 : bool;
    var #t~ret169 : int;
    var #t~nondet170 : int;
    var #t~switch171 : bool;
    var #t~ret172 : int;
    var #t~mem173 : int;
    var #t~ret174 : int;
    var #t~ret175 : int;
    var #t~ret176 : int;
    var ~ldvarg1~155.base : int, ~ldvarg1~155.offset : int;
    var ~tmp~155.base : int, ~tmp~155.offset : int;
    var ~ldvarg3~155.base : int, ~ldvarg3~155.offset : int;
    var ~tmp___0~155.base : int, ~tmp___0~155.offset : int;
    var ~#ldvarg0~155.base : int, ~#ldvarg0~155.offset : int;
    var ~ldvarg2~155 : int;
    var ~tmp___1~155 : int;
    var ~#ldvarg4~155.base : int, ~#ldvarg4~155.offset : int;
    var ~ldvarg5~155.base : int, ~ldvarg5~155.offset : int;
    var ~tmp___2~155.base : int, ~tmp___2~155.offset : int;
    var ~tmp___3~155 : int;
    var ~tmp___4~155 : int;
    var ~tmp___5~155 : int;
    var ~tmp___6~155 : int;

  loc8:
    havoc ~ldvarg1~155.base, ~ldvarg1~155.offset;
    havoc ~tmp~155.base, ~tmp~155.offset;
    havoc ~ldvarg3~155.base, ~ldvarg3~155.offset;
    havoc ~tmp___0~155.base, ~tmp___0~155.offset;
    call ~#ldvarg0~155.base, ~#ldvarg0~155.offset := #Ultimate.alloc(4);
    havoc ~ldvarg2~155;
    havoc ~tmp___1~155;
    call ~#ldvarg4~155.base, ~#ldvarg4~155.offset := #Ultimate.alloc(4);
    havoc ~ldvarg5~155.base, ~ldvarg5~155.offset;
    havoc ~tmp___2~155.base, ~tmp___2~155.offset;
    havoc ~tmp___3~155;
    havoc ~tmp___4~155;
    havoc ~tmp___5~155;
    havoc ~tmp___6~155;
    call #t~ret133.base, #t~ret133.offset := ldv_zalloc(24);
    ~tmp~155.base, ~tmp~155.offset := #t~ret133.base, #t~ret133.offset;
    havoc #t~ret133.base, #t~ret133.offset;
    ~ldvarg1~155.base, ~ldvarg1~155.offset := ~tmp~155.base, ~tmp~155.offset;
    call #t~ret134.base, #t~ret134.offset := ldv_zalloc(1);
    ~tmp___0~155.base, ~tmp___0~155.offset := #t~ret134.base, #t~ret134.offset;
    havoc #t~ret134.base, #t~ret134.offset;
    ~ldvarg3~155.base, ~ldvarg3~155.offset := ~tmp___0~155.base, ~tmp___0~155.offset;
    assume -2147483648 <= #t~nondet135 && #t~nondet135 <= 2147483647;
    ~tmp___1~155 := #t~nondet135;
    havoc #t~nondet135;
    ~ldvarg2~155 := ~tmp___1~155;
    call #t~ret136.base, #t~ret136.offset := ldv_zalloc(24);
    ~tmp___2~155.base, ~tmp___2~155.offset := #t~ret136.base, #t~ret136.offset;
    havoc #t~ret136.base, #t~ret136.offset;
    ~ldvarg5~155.base, ~ldvarg5~155.offset := ~tmp___2~155.base, ~tmp___2~155.offset;
    call ldv_initialize();
    call #t~memset137.base, #t~memset137.offset := #Ultimate.C_memset(~#ldvarg0~155.base, ~#ldvarg0~155.offset, 0, 4);
    havoc #t~memset137.base, #t~memset137.offset;
    call #t~memset138.base, #t~memset138.offset := #Ultimate.C_memset(~#ldvarg4~155.base, ~#ldvarg4~155.offset, 0, 4);
    havoc #t~memset138.base, #t~memset138.offset;
    ~ldv_state_variable_1 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_2 := 0;
    assume -2147483648 <= #t~nondet139 && #t~nondet139 <= 2147483647;
    ~tmp___3~155 := #t~nondet139;
    havoc #t~nondet139;
    #t~switch140 := ~tmp___3~155 == 0;
    assume !#t~switch140;
    #t~switch140 := #t~switch140 || ~tmp___3~155 == 1;
    assume #t~switch140;
    assume ~ldv_state_variable_0 != 0;
    assume -2147483648 <= #t~nondet167 && #t~nondet167 <= 2147483647;
    ~tmp___5~155 := #t~nondet167;
    havoc #t~nondet167;
    #t~switch168 := ~tmp___5~155 == 0;
    assume !#t~switch168;
    #t~switch168 := #t~switch168 || ~tmp___5~155 == 1;
    assume #t~switch168;
    assume ~ldv_state_variable_0 == 1;
    call #t~ret169 := qcinit();
    assume -2147483648 <= #t~ret169 && #t~ret169 <= 2147483647;
    ~ldv_retval_5 := #t~ret169;
    havoc #t~ret169;
    assume ~ldv_retval_5 != 0;
    ~ldv_state_variable_0 := 3;
    call ldv_check_final_state();
    return;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_2, ~ldv_retval_4, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_5, ~ldv_retval_9, ~ldv_retval_8, ~ldv_retval_7, ~ldv_retval_6, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~qcdevice_group0.base, ~qcdevice_group0.offset, ~qcdevice_group1.base, ~qcdevice_group1.offset, ~qcdevice_group2.base, ~qcdevice_group2.offset, ~ldv_alloc_count, ~qcdriver_group1.base, ~qcdriver_group1.offset, ~usb_counter;

implementation qcinit() returns (#res : int){
    var #t~ret127 : int;
    var #t~ret128 : int;
    var ~retval~140 : int;

  loc9:
    havoc ~retval~140;
    call #t~ret127 := usb_serial_register(~#qcdevice.base, ~#qcdevice.offset);
    assume -2147483648 <= #t~ret127 && #t~ret127 <= 2147483647;
    ~retval~140 := #t~ret127;
    havoc #t~ret127;
    assume ~retval~140 != 0;
    #res := ~retval~140;
    assume true;
    return;
}

procedure qcinit() returns (#res : int);
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~qcdriver_group1.base, ~qcdriver_group1.offset, ~ldv_state_variable_2, ~usb_counter;

procedure __VERIFIER_assume(#in~expression : int) returns ();
modifies ;

procedure __raw_spin_lock_init(#in~8.base : int, #in~8.offset : int, #in~9.base : int, #in~9.offset : int, #in~10.base : int, #in~10.offset : int) returns ();
modifies ;

procedure __kmalloc(#in~12 : int, #in~13 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure usb_wwan_open(#in~45.base : int, #in~45.offset : int, #in~46.base : int, #in~46.offset : int) returns (#res : int);
modifies ;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure ldv_initialize() returns ();
modifies ;

procedure usb_deregister(#in~31.base : int, #in~31.offset : int) returns ();
modifies ;

procedure usb_set_interface(#in~32.base : int, #in~32.offset : int, #in~33 : int, #in~34 : int) returns (#res : int);
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure usb_register_driver(#in~26.base : int, #in~26.offset : int, #in~27.base : int, #in~27.offset : int, #in~28.base : int, #in~28.offset : int) returns (#res : int);
modifies ;

procedure memset(#in~1.base : int, #in~1.offset : int, #in~2 : int, #in~3 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_wwan_resume(#in~59.base : int, #in~59.offset : int) returns (#res : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure usb_wwan_release(#in~50.base : int, #in~50.offset : int) returns ();
modifies ;

procedure kfree(#in~11.base : int, #in~11.offset : int) returns ();
modifies ;

procedure ldv_reset_resume_2() returns (#res : int);
modifies ;

procedure printk(#in~0.base : int, #in~0.offset : int) returns (#res : int);
modifies ;

procedure calloc(#in~nmemb : int, #in~size : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure dev_err(#in~16.base : int, #in~16.offset : int, #in~17.base : int, #in~17.offset : int) returns (#res : int);
modifies ;

procedure usb_wwan_disconnect(#in~49.base : int, #in~49.offset : int) returns ();
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];

procedure usb_serial_resume(#in~44.base : int, #in~44.offset : int) returns (#res : int);
modifies ;

procedure usb_serial_deregister(#in~38.base : int, #in~38.offset : int) returns ();
modifies ;

procedure usb_serial_suspend(#in~42.base : int, #in~42.offset : int, #in~43.event : int) returns (#res : int);
modifies ;

procedure __VERIFIER_error() returns ();
modifies ;

procedure usb_serial_disconnect(#in~41.base : int, #in~41.offset : int) returns ();
modifies ;

procedure usb_wwan_write(#in~52.base : int, #in~52.offset : int, #in~53.base : int, #in~53.offset : int, #in~54.base : int, #in~54.offset : int, #in~55 : int) returns (#res : int);
modifies ;

procedure usb_wwan_write_room(#in~51.base : int, #in~51.offset : int) returns (#res : int);
modifies ;

procedure usb_serial_register(#in~37.base : int, #in~37.offset : int) returns (#res : int);
modifies ;

procedure usb_wwan_suspend(#in~57.base : int, #in~57.offset : int, #in~58.event : int) returns (#res : int);
modifies ;

procedure usb_wwan_close(#in~47.base : int, #in~47.offset : int) returns ();
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure usb_enable_autosuspend(#in~25.base : int, #in~25.offset : int) returns ();
modifies ;

procedure usb_wwan_chars_in_buffer(#in~56.base : int, #in~56.offset : int) returns (#res : int);
modifies ;

procedure usb_wwan_startup(#in~48.base : int, #in~48.offset : int) returns (#res : int);
modifies ;

procedure usb_serial_probe(#in~39.base : int, #in~39.offset : int, #in~40.base : int, #in~40.offset : int) returns (#res : int);
modifies ;


type STRUCT~map_segment;
type STRUCT~perf_event;
type STRUCT~pollfd;
type STRUCT~tvec_base;
type STRUCT~uprobe;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~mmu_notifier_mm;
type STRUCT~sem_undo_list;
type STRUCT~pid_namespace;
type STRUCT~seccomp_filter;
type STRUCT~keyring_list;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~thread_group_cred;
type STRUCT~user_namespace;
type STRUCT~eventfd_ctx;
type STRUCT~autogroup;
type STRUCT~tty_audit_buf;
type STRUCT~rq;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~mem_cgroup;
type STRUCT~task_group;
type STRUCT~fs_struct;
type STRUCT~files_struct;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~bio_list;
type STRUCT~blk_plug;
type STRUCT~reclaim_state;
type STRUCT~backing_dev_info;
type STRUCT~io_context;
type STRUCT~robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~pipe_inode_info;
type STRUCT~sock;
type STRUCT~sysfs_dirent;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~device_node;
type STRUCT~iommu_group;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~writeback_control;
type STRUCT~swap_info_struct;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~posix_acl;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~mtd_info;
type STRUCT~poll_table_struct;
type STRUCT~seq_file;
type STRUCT~nameidata;
type STRUCT~kstatfs;
type STRUCT~sec_path;
type STRUCT~prot_inuse;
type STRUCT~ipv4_devconf;
type STRUCT~fib_rules_ops;
type STRUCT~fib_table;
type STRUCT~inet_peer_base;
type STRUCT~tcpm_hash_bucket;
type STRUCT~xt_table;
type STRUCT~dst_entry;
type STRUCT~ipv6_devconf;
type STRUCT~rt6_info;
type STRUCT~rt6_statistics;
type STRUCT~fib6_table;
type STRUCT~sctp_mib;
type STRUCT~ebt_table;
type STRUCT~ip_conntrack_stat;
type STRUCT~nf_ct_event_notifier;
type STRUCT~nf_exp_event_notifier;
type STRUCT~net_generic;
type STRUCT~netns_ipvs;
type STRUCT~mii_bus;
type STRUCT~css_id;
type STRUCT~cgroupfs_root;
type STRUCT~uts_namespace;
type STRUCT~ipc_namespace;
type STRUCT~mnt_namespace;
type STRUCT~Qdisc;
type STRUCT~netpoll_info;
type STRUCT~pcpu_lstats;
type STRUCT~pcpu_tstats;
type STRUCT~pcpu_dstats;
type STRUCT~iw_handler_def;
type STRUCT~iw_public_data;
type STRUCT~vlan_info;
type STRUCT~in_device;
type STRUCT~dn_dev;
type STRUCT~inet6_dev;
type STRUCT~wireless_dev;
type STRUCT~cpu_rmap;
type STRUCT~garp_port;
type STRUCT~phy_device;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type STRUCT~ep_device;
type STRUCT~mon_bus;
type STRUCT~usb_tt;
type STRUCT~wusb_dev;
type STRUCT~rfkill;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__s64 = int;
type ~__u64 = int;
type ~s8 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~oom_flags_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~cputime_t = int;
type ~__kernel_sa_family_t = int;
type ~qsize_t = int;
type ~sk_buff_data_t = int;
type ~kernel_ulong_t = int;
type ~cc_t = int;
type ~speed_t = int;
type ~tcflag_t = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_off_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_clock_t = ~__kernel_long_t;
type ~__le16 = ~__u16;
type ~__be16 = ~__u16;
type ~__le32 = ~__u32;
type ~__be32 = ~__u32;
type ~__sum16 = ~__u16;
type ~__wsum = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~nlink_t = ~__u32;
type ~off_t = ~__kernel_off_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint8_t = ~__u8;
type ~uint32_t = ~__u32;
type ~uint64_t = ~__u64;
type ~dma_addr_t = ~u64;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~kuid_t = ~uid_t;
type ~kgid_t = ~gid_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~dma_cookie_t = ~s32;
type ~sa_family_t = ~__kernel_sa_family_t;
type ~projid_t = ~__kernel_uid32_t;
type ~kprojid_t = ~projid_t;
type ~compat_time_t = ~s32;
type ~compat_long_t = ~s32;
type ~compat_uptr_t = ~u32;
type ~netdev_features_t = ~u64;
type ~netdev_tx_t = int;
type ~rx_handler_result_t = int;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
const #funAddr~hso_sysfs_show_porttype.base : int;
const #funAddr~hso_sysfs_show_porttype.offset : int;
const #funAddr~write_bulk_callback.base : int;
const #funAddr~write_bulk_callback.offset : int;
const #funAddr~ethtool_op_get_link.base : int;
const #funAddr~ethtool_op_get_link.offset : int;
const #funAddr~read_bulk_callback.base : int;
const #funAddr~read_bulk_callback.offset : int;
const #funAddr~hso_std_serial_read_bulk_callback.base : int;
const #funAddr~hso_std_serial_read_bulk_callback.offset : int;
const #funAddr~hso_unthrottle_tasklet.base : int;
const #funAddr~hso_unthrottle_tasklet.offset : int;
const #funAddr~hso_unthrottle_workfunc.base : int;
const #funAddr~hso_unthrottle_workfunc.offset : int;
const #funAddr~hso_serial_ref_free.base : int;
const #funAddr~hso_serial_ref_free.offset : int;
const #funAddr~tiocmget_intr_callback.base : int;
const #funAddr~tiocmget_intr_callback.offset : int;
const #funAddr~default_wake_function.base : int;
const #funAddr~default_wake_function.offset : int;
const #funAddr~ctrl_callback.base : int;
const #funAddr~ctrl_callback.offset : int;
const #funAddr~hso_std_serial_write_bulk_callback.base : int;
const #funAddr~hso_std_serial_write_bulk_callback.offset : int;
const #funAddr~async_get_intf.base : int;
const #funAddr~async_get_intf.offset : int;
const #funAddr~async_put_intf.base : int;
const #funAddr~async_put_intf.offset : int;
const #funAddr~reset_device.base : int;
const #funAddr~reset_device.offset : int;
const #funAddr~hso_net_open.base : int;
const #funAddr~hso_net_open.offset : int;
const #funAddr~hso_net_close.base : int;
const #funAddr~hso_net_close.offset : int;
const #funAddr~hso_net_start_xmit.base : int;
const #funAddr~hso_net_start_xmit.offset : int;
const #funAddr~hso_net_tx_timeout.base : int;
const #funAddr~hso_net_tx_timeout.offset : int;
const #funAddr~hso_rfkill_set_block.base : int;
const #funAddr~hso_rfkill_set_block.offset : int;
const #funAddr~hso_net_init.base : int;
const #funAddr~hso_net_init.offset : int;
const #funAddr~hso_std_serial_write_data.base : int;
const #funAddr~hso_std_serial_write_data.offset : int;
const #funAddr~hso_mux_serial_write_data.base : int;
const #funAddr~hso_mux_serial_write_data.offset : int;
const #funAddr~intr_callback.base : int;
const #funAddr~intr_callback.offset : int;
const #funAddr~hso_serial_open.base : int;
const #funAddr~hso_serial_open.offset : int;
const #funAddr~hso_serial_close.base : int;
const #funAddr~hso_serial_close.offset : int;
const #funAddr~hso_serial_write.base : int;
const #funAddr~hso_serial_write.offset : int;
const #funAddr~hso_serial_write_room.base : int;
const #funAddr~hso_serial_write_room.offset : int;
const #funAddr~hso_serial_chars_in_buffer.base : int;
const #funAddr~hso_serial_chars_in_buffer.offset : int;
const #funAddr~hso_serial_ioctl.base : int;
const #funAddr~hso_serial_ioctl.offset : int;
const #funAddr~hso_serial_set_termios.base : int;
const #funAddr~hso_serial_set_termios.offset : int;
const #funAddr~hso_unthrottle.base : int;
const #funAddr~hso_unthrottle.offset : int;
const #funAddr~hso_serial_tiocmget.base : int;
const #funAddr~hso_serial_tiocmget.offset : int;
const #funAddr~hso_serial_tiocmset.base : int;
const #funAddr~hso_serial_tiocmset.offset : int;
const #funAddr~hso_get_count.base : int;
const #funAddr~hso_get_count.offset : int;
const #funAddr~hso_probe.base : int;
const #funAddr~hso_probe.offset : int;
const #funAddr~hso_disconnect.base : int;
const #funAddr~hso_disconnect.offset : int;
const #funAddr~hso_suspend.base : int;
const #funAddr~hso_suspend.offset : int;
const #funAddr~hso_resume.base : int;
const #funAddr~hso_resume.offset : int;
const ~uprobe_task_state~UTASK_RUNNING : int;
const ~uprobe_task_state~UTASK_SSTEP : int;
const ~uprobe_task_state~UTASK_SSTEP_ACK : int;
const ~uprobe_task_state~UTASK_SSTEP_TRAPPED : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS : int;
const ~pm_qos_type~PM_QOS_UNITIALIZED : int;
const ~pm_qos_type~PM_QOS_MAX : int;
const ~pm_qos_type~PM_QOS_MIN : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ON : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_OFF : int;
const ~netdev_tx~__NETDEV_TX_MIN : int;
const ~netdev_tx~NETDEV_TX_OK : int;
const ~netdev_tx~NETDEV_TX_BUSY : int;
const ~netdev_tx~NETDEV_TX_LOCKED : int;
const ~rx_handler_result~RX_HANDLER_CONSUMED : int;
const ~rx_handler_result~RX_HANDLER_ANOTHER : int;
const ~rx_handler_result~RX_HANDLER_EXACT : int;
const ~rx_handler_result~RX_HANDLER_PASS : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~usb_device_speed~USB_SPEED_UNKNOWN : int;
const ~usb_device_speed~USB_SPEED_LOW : int;
const ~usb_device_speed~USB_SPEED_FULL : int;
const ~usb_device_speed~USB_SPEED_HIGH : int;
const ~usb_device_speed~USB_SPEED_WIRELESS : int;
const ~usb_device_speed~USB_SPEED_SUPER : int;
const ~usb_device_state~USB_STATE_NOTATTACHED : int;
const ~usb_device_state~USB_STATE_ATTACHED : int;
const ~usb_device_state~USB_STATE_POWERED : int;
const ~usb_device_state~USB_STATE_RECONNECTING : int;
const ~usb_device_state~USB_STATE_UNAUTHENTICATED : int;
const ~usb_device_state~USB_STATE_DEFAULT : int;
const ~usb_device_state~USB_STATE_ADDRESS : int;
const ~usb_device_state~USB_STATE_CONFIGURED : int;
const ~usb_device_state~USB_STATE_SUSPENDED : int;
const ~usb_interface_condition~USB_INTERFACE_UNBOUND : int;
const ~usb_interface_condition~USB_INTERFACE_BINDING : int;
const ~usb_interface_condition~USB_INTERFACE_BOUND : int;
const ~usb_interface_condition~USB_INTERFACE_UNBINDING : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE : int;
const ~usb_device_removable~USB_DEVICE_FIXED : int;
const ~rfkill_type~RFKILL_TYPE_ALL : int;
const ~rfkill_type~RFKILL_TYPE_WLAN : int;
const ~rfkill_type~RFKILL_TYPE_BLUETOOTH : int;
const ~rfkill_type~RFKILL_TYPE_UWB : int;
const ~rfkill_type~RFKILL_TYPE_WIMAX : int;
const ~rfkill_type~RFKILL_TYPE_WWAN : int;
const ~rfkill_type~RFKILL_TYPE_GPS : int;
const ~rfkill_type~RFKILL_TYPE_FM : int;
const ~rfkill_type~NUM_RFKILL_TYPES : int;
const ~pkt_parse_state~WAIT_IP : int;
const ~pkt_parse_state~WAIT_DATA : int;
const ~pkt_parse_state~WAIT_SYNC : int;
const ~rx_ctrl_state~RX_IDLE : int;
const ~rx_ctrl_state~RX_SENT : int;
const ~rx_ctrl_state~RX_PENDING : int;
axiom #funAddr~hso_sysfs_show_porttype.base == -1 && #funAddr~hso_sysfs_show_porttype.offset == 0;
axiom #funAddr~write_bulk_callback.base == -1 && #funAddr~write_bulk_callback.offset == 1;
axiom #funAddr~ethtool_op_get_link.base == -1 && #funAddr~ethtool_op_get_link.offset == 2;
axiom #funAddr~read_bulk_callback.base == -1 && #funAddr~read_bulk_callback.offset == 3;
axiom #funAddr~hso_std_serial_read_bulk_callback.base == -1 && #funAddr~hso_std_serial_read_bulk_callback.offset == 4;
axiom #funAddr~hso_unthrottle_tasklet.base == -1 && #funAddr~hso_unthrottle_tasklet.offset == 5;
axiom #funAddr~hso_unthrottle_workfunc.base == -1 && #funAddr~hso_unthrottle_workfunc.offset == 6;
axiom #funAddr~hso_serial_ref_free.base == -1 && #funAddr~hso_serial_ref_free.offset == 7;
axiom #funAddr~tiocmget_intr_callback.base == -1 && #funAddr~tiocmget_intr_callback.offset == 8;
axiom #funAddr~default_wake_function.base == -1 && #funAddr~default_wake_function.offset == 9;
axiom #funAddr~ctrl_callback.base == -1 && #funAddr~ctrl_callback.offset == 10;
axiom #funAddr~hso_std_serial_write_bulk_callback.base == -1 && #funAddr~hso_std_serial_write_bulk_callback.offset == 11;
axiom #funAddr~async_get_intf.base == -1 && #funAddr~async_get_intf.offset == 12;
axiom #funAddr~async_put_intf.base == -1 && #funAddr~async_put_intf.offset == 13;
axiom #funAddr~reset_device.base == -1 && #funAddr~reset_device.offset == 14;
axiom #funAddr~hso_net_open.base == -1 && #funAddr~hso_net_open.offset == 15;
axiom #funAddr~hso_net_close.base == -1 && #funAddr~hso_net_close.offset == 16;
axiom #funAddr~hso_net_start_xmit.base == -1 && #funAddr~hso_net_start_xmit.offset == 17;
axiom #funAddr~hso_net_tx_timeout.base == -1 && #funAddr~hso_net_tx_timeout.offset == 18;
axiom #funAddr~hso_rfkill_set_block.base == -1 && #funAddr~hso_rfkill_set_block.offset == 19;
axiom #funAddr~hso_net_init.base == -1 && #funAddr~hso_net_init.offset == 20;
axiom #funAddr~hso_std_serial_write_data.base == -1 && #funAddr~hso_std_serial_write_data.offset == 21;
axiom #funAddr~hso_mux_serial_write_data.base == -1 && #funAddr~hso_mux_serial_write_data.offset == 22;
axiom #funAddr~intr_callback.base == -1 && #funAddr~intr_callback.offset == 23;
axiom #funAddr~hso_serial_open.base == -1 && #funAddr~hso_serial_open.offset == 24;
axiom #funAddr~hso_serial_close.base == -1 && #funAddr~hso_serial_close.offset == 25;
axiom #funAddr~hso_serial_write.base == -1 && #funAddr~hso_serial_write.offset == 26;
axiom #funAddr~hso_serial_write_room.base == -1 && #funAddr~hso_serial_write_room.offset == 27;
axiom #funAddr~hso_serial_chars_in_buffer.base == -1 && #funAddr~hso_serial_chars_in_buffer.offset == 28;
axiom #funAddr~hso_serial_ioctl.base == -1 && #funAddr~hso_serial_ioctl.offset == 29;
axiom #funAddr~hso_serial_set_termios.base == -1 && #funAddr~hso_serial_set_termios.offset == 30;
axiom #funAddr~hso_unthrottle.base == -1 && #funAddr~hso_unthrottle.offset == 31;
axiom #funAddr~hso_serial_tiocmget.base == -1 && #funAddr~hso_serial_tiocmget.offset == 32;
axiom #funAddr~hso_serial_tiocmset.base == -1 && #funAddr~hso_serial_tiocmset.offset == 33;
axiom #funAddr~hso_get_count.base == -1 && #funAddr~hso_get_count.offset == 34;
axiom #funAddr~hso_probe.base == -1 && #funAddr~hso_probe.offset == 35;
axiom #funAddr~hso_disconnect.base == -1 && #funAddr~hso_disconnect.offset == 36;
axiom #funAddr~hso_suspend.base == -1 && #funAddr~hso_suspend.offset == 37;
axiom #funAddr~hso_resume.base == -1 && #funAddr~hso_resume.offset == 38;
axiom ~uprobe_task_state~UTASK_RUNNING == 0;
axiom ~uprobe_task_state~UTASK_SSTEP == 1;
axiom ~uprobe_task_state~UTASK_SSTEP_ACK == 2;
axiom ~uprobe_task_state~UTASK_SSTEP_TRAPPED == 3;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY == 1;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS == 2;
axiom ~pm_qos_type~PM_QOS_UNITIALIZED == 0;
axiom ~pm_qos_type~PM_QOS_MAX == 1;
axiom ~pm_qos_type~PM_QOS_MIN == 2;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE == 0;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE == 1;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ON == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_OFF == 3;
axiom ~netdev_tx~__NETDEV_TX_MIN == -2147483648;
axiom ~netdev_tx~NETDEV_TX_OK == 0;
axiom ~netdev_tx~NETDEV_TX_BUSY == 16;
axiom ~netdev_tx~NETDEV_TX_LOCKED == 32;
axiom ~rx_handler_result~RX_HANDLER_CONSUMED == 0;
axiom ~rx_handler_result~RX_HANDLER_ANOTHER == 1;
axiom ~rx_handler_result~RX_HANDLER_EXACT == 2;
axiom ~rx_handler_result~RX_HANDLER_PASS == 3;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~usb_device_speed~USB_SPEED_UNKNOWN == 0;
axiom ~usb_device_speed~USB_SPEED_LOW == 1;
axiom ~usb_device_speed~USB_SPEED_FULL == 2;
axiom ~usb_device_speed~USB_SPEED_HIGH == 3;
axiom ~usb_device_speed~USB_SPEED_WIRELESS == 4;
axiom ~usb_device_speed~USB_SPEED_SUPER == 5;
axiom ~usb_device_state~USB_STATE_NOTATTACHED == 0;
axiom ~usb_device_state~USB_STATE_ATTACHED == 1;
axiom ~usb_device_state~USB_STATE_POWERED == 2;
axiom ~usb_device_state~USB_STATE_RECONNECTING == 3;
axiom ~usb_device_state~USB_STATE_UNAUTHENTICATED == 4;
axiom ~usb_device_state~USB_STATE_DEFAULT == 5;
axiom ~usb_device_state~USB_STATE_ADDRESS == 6;
axiom ~usb_device_state~USB_STATE_CONFIGURED == 7;
axiom ~usb_device_state~USB_STATE_SUSPENDED == 8;
axiom ~usb_interface_condition~USB_INTERFACE_UNBOUND == 0;
axiom ~usb_interface_condition~USB_INTERFACE_BINDING == 1;
axiom ~usb_interface_condition~USB_INTERFACE_BOUND == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBINDING == 3;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN == 0;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE == 1;
axiom ~usb_device_removable~USB_DEVICE_FIXED == 2;
axiom ~rfkill_type~RFKILL_TYPE_ALL == 0;
axiom ~rfkill_type~RFKILL_TYPE_WLAN == 1;
axiom ~rfkill_type~RFKILL_TYPE_BLUETOOTH == 2;
axiom ~rfkill_type~RFKILL_TYPE_UWB == 3;
axiom ~rfkill_type~RFKILL_TYPE_WIMAX == 4;
axiom ~rfkill_type~RFKILL_TYPE_WWAN == 5;
axiom ~rfkill_type~RFKILL_TYPE_GPS == 6;
axiom ~rfkill_type~RFKILL_TYPE_FM == 7;
axiom ~rfkill_type~NUM_RFKILL_TYPES == 8;
axiom ~pkt_parse_state~WAIT_IP == 0;
axiom ~pkt_parse_state~WAIT_DATA == 1;
axiom ~pkt_parse_state~WAIT_SYNC == 2;
axiom ~rx_ctrl_state~RX_IDLE == 0;
axiom ~rx_ctrl_state~RX_SENT == 1;
axiom ~rx_ctrl_state~RX_PENDING == 2;
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseXor" } ~bitwiseXor(in0 : int, in1 : int) returns (out : int);
var ~jiffies : int;

var ~debug : int;

var ~tty_major : int;

var ~disable_net : int;

var ~#driver_name.base : int, ~#driver_name.offset : int;

var ~#tty_filename.base : int, ~#tty_filename.offset : int;

var ~version.base : int, ~version.offset : int;

var ~LDV_IN_INTERRUPT : int;

var ~ldv_mutex_cred_guard_mutex : int;

var ~ldv_mutex_lock : int;

var ~ldv_mutex_mutex : int;

var ~ldv_mutex_shared_int_lock : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~tty_std_termios.c_iflag : int, ~tty_std_termios.c_oflag : int, ~tty_std_termios.c_cflag : int, ~tty_std_termios.c_lflag : int, ~tty_std_termios.c_line : int, ~tty_std_termios.c_cc : [int]int, ~tty_std_termios.c_ispeed : int, ~tty_std_termios.c_ospeed : int;

var ~tty_drv.base : int, ~tty_drv.offset : int;

var ~serial_table.base : [int]int, ~serial_table.offset : [int]int;

var ~network_table.base : [int]int, ~network_table.offset : [int]int;

var ~#serial_table_lock.base : int, ~#serial_table_lock.offset : int;

var ~#default_port_spec.base : int, ~#default_port_spec.offset : int;

var ~#icon321_port_spec.base : int, ~#icon321_port_spec.offset : int;

var ~#hso_ids.base : int, ~#hso_ids.offset : int;

var ~#dev_attr_hsotype.base : int, ~#dev_attr_hsotype.offset : int;

var ~#ops.base : int, ~#ops.offset : int;

var ~#hso_netdev_ops.base : int, ~#hso_netdev_ops.offset : int;

var ~#hso_rfkill_ops.base : int, ~#hso_rfkill_ops.offset : int;

var ~#hso_type.base : int, ~#hso_type.offset : int;

var ~#hso_serial_ops.base : int, ~#hso_serial_ops.offset : int;

var ~#hso_driver.base : int, ~#hso_driver.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

var #memory_int : [int,int]int;

implementation ldv_mutex_lock_16(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns (){
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;

  loc0:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    call ldv_mutex_lock_mutex(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    call mutex_lock(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    assume true;
    return;
}

procedure ldv_mutex_lock_16(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns ();
modifies ~ldv_mutex_mutex;

implementation main() returns (#res : int){
    var #t~ret1594 : int;
    var #t~nondet1595 : int;
    var #t~switch1596 : bool;
    var #t~ret1597 : int;
    var #t~ret1598 : int;
    var #t~ret1599 : ~netdev_tx_t;
    var #t~ret1600 : int;
    var #t~ret1601 : int;
    var #t~ret1602 : int;
    var #t~ret1603 : int;
    var #t~ret1604 : int;
    var #t~ret1605 : int;
    var #t~ret1606 : int;
    var #t~ret1607 : int;
    var #t~ret1608 : int;
    var #t~ret1609 : int;
    var #t~ret1610 : int;
    var #t~ret1611 : int;
    var #t~nondet1612 : int;
    var ~var_group1~1076.base : int, ~var_group1~1076.offset : int;
    var ~res_hso_net_open_12~1076 : int;
    var ~res_hso_net_close_13~1076 : int;
    var ~var_group2~1076.base : int, ~var_group2~1076.offset : int;
    var ~var_hso_rfkill_set_block_63_p0~1076.base : int, ~var_hso_rfkill_set_block_63_p0~1076.offset : int;
    var ~var_hso_rfkill_set_block_63_p1~1076 : ~bool;
    var ~var_group3~1076.base : int, ~var_group3~1076.offset : int;
    var ~var_group4~1076.base : int, ~var_group4~1076.offset : int;
    var ~res_hso_serial_open_29~1076 : int;
    var ~var_hso_serial_write_31_p1~1076.base : int, ~var_hso_serial_write_31_p1~1076.offset : int;
    var ~var_hso_serial_write_31_p2~1076 : int;
    var ~var_hso_serial_ioctl_41_p1~1076 : int;
    var ~var_hso_serial_ioctl_41_p2~1076 : int;
    var ~var_group5~1076.base : int, ~var_group5~1076.offset : int;
    var ~var_hso_serial_tiocmset_40_p1~1076 : int;
    var ~var_hso_serial_tiocmset_40_p2~1076 : int;
    var ~var_group6~1076.base : int, ~var_group6~1076.offset : int;
    var ~var_group7~1076.base : int, ~var_group7~1076.offset : int;
    var ~var_hso_probe_73_p1~1076.base : int, ~var_hso_probe_73_p1~1076.offset : int;
    var ~res_hso_probe_73~1076 : int;
    var ~var_hso_suspend_79_p1~1076.event : int;
    var ~ldv_s_hso_netdev_ops_net_device_ops~1076 : int;
    var ~ldv_s_hso_serial_ops_tty_operations~1076 : int;
    var ~ldv_s_hso_driver_usb_driver~1076 : int;
    var ~tmp~1076 : int;
    var ~tmp___0~1076 : int;
    var ~tmp___1~1076 : int;

  loc1:
    havoc ~var_group1~1076.base, ~var_group1~1076.offset;
    havoc ~res_hso_net_open_12~1076;
    havoc ~res_hso_net_close_13~1076;
    havoc ~var_group2~1076.base, ~var_group2~1076.offset;
    havoc ~var_hso_rfkill_set_block_63_p0~1076.base, ~var_hso_rfkill_set_block_63_p0~1076.offset;
    havoc ~var_hso_rfkill_set_block_63_p1~1076;
    havoc ~var_group3~1076.base, ~var_group3~1076.offset;
    havoc ~var_group4~1076.base, ~var_group4~1076.offset;
    havoc ~res_hso_serial_open_29~1076;
    havoc ~var_hso_serial_write_31_p1~1076.base, ~var_hso_serial_write_31_p1~1076.offset;
    havoc ~var_hso_serial_write_31_p2~1076;
    havoc ~var_hso_serial_ioctl_41_p1~1076;
    havoc ~var_hso_serial_ioctl_41_p2~1076;
    havoc ~var_group5~1076.base, ~var_group5~1076.offset;
    havoc ~var_hso_serial_tiocmset_40_p1~1076;
    havoc ~var_hso_serial_tiocmset_40_p2~1076;
    havoc ~var_group6~1076.base, ~var_group6~1076.offset;
    havoc ~var_group7~1076.base, ~var_group7~1076.offset;
    havoc ~var_hso_probe_73_p1~1076.base, ~var_hso_probe_73_p1~1076.offset;
    havoc ~res_hso_probe_73~1076;
    havoc ~var_hso_suspend_79_p1~1076.event;
    havoc ~ldv_s_hso_netdev_ops_net_device_ops~1076;
    havoc ~ldv_s_hso_serial_ops_tty_operations~1076;
    havoc ~ldv_s_hso_driver_usb_driver~1076;
    havoc ~tmp~1076;
    havoc ~tmp___0~1076;
    havoc ~tmp___1~1076;
    ~ldv_s_hso_netdev_ops_net_device_ops~1076 := 0;
    ~ldv_s_hso_serial_ops_tty_operations~1076 := 0;
    ~ldv_s_hso_driver_usb_driver~1076 := 0;
    ~LDV_IN_INTERRUPT := 1;
    call ldv_initialize();
    call ldv_handler_precall();
    call #t~ret1594 := hso_init();
    assume -2147483648 <= #t~ret1594 && #t~ret1594 <= 2147483647;
    ~tmp~1076 := #t~ret1594;
    havoc #t~ret1594;
    assume !(~tmp~1076 != 0);
    assume -2147483648 <= #t~nondet1612 && #t~nondet1612 <= 2147483647;
    ~tmp___1~1076 := #t~nondet1612;
    havoc #t~nondet1612;
    assume ((~tmp___1~1076 != 0 || ~ldv_s_hso_netdev_ops_net_device_ops~1076 != 0) || ~ldv_s_hso_serial_ops_tty_operations~1076 != 0) || ~ldv_s_hso_driver_usb_driver~1076 != 0;
    assume -2147483648 <= #t~nondet1595 && #t~nondet1595 <= 2147483647;
    ~tmp___0~1076 := #t~nondet1595;
    havoc #t~nondet1595;
    #t~switch1596 := ~tmp___0~1076 == 0;
    assume !#t~switch1596;
    #t~switch1596 := #t~switch1596 || ~tmp___0~1076 == 1;
    assume !#t~switch1596;
    #t~switch1596 := #t~switch1596 || ~tmp___0~1076 == 2;
    assume !#t~switch1596;
    #t~switch1596 := #t~switch1596 || ~tmp___0~1076 == 3;
    assume !#t~switch1596;
    #t~switch1596 := #t~switch1596 || ~tmp___0~1076 == 4;
    assume #t~switch1596;
    call ldv_handler_precall();
    call #t~ret1600 := hso_rfkill_set_block(~var_hso_rfkill_set_block_63_p0~1076.base, ~var_hso_rfkill_set_block_63_p0~1076.offset, (if ~var_hso_rfkill_set_block_63_p1~1076 % 256 == 0 then 0 else 1));
    return;
}

procedure main() returns (#res : int);
modifies ~LDV_IN_INTERRUPT, ~ldv_mutex_cred_guard_mutex, ~ldv_mutex_lock, ~ldv_mutex_mutex, ~ldv_mutex_shared_int_lock, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~serial_table.base, ~serial_table.offset, ~tty_drv.base, ~tty_drv.offset, ~network_table.base, ~network_table.offset;

implementation hso_rfkill_set_block(#in~data.base : int, #in~data.offset : int, #in~blocked : int) returns (#res : int){
    var #t~mem1249 : int;
    var #t~mem1250.base : int, #t~mem1250.offset : int;
    var #t~ret1251 : int;
    var #t~mem1252.base : int, #t~mem1252.offset : int;
    var #t~ite1253 : int;
    var #t~ret1254 : int;
    var ~data.base : int, ~data.offset : int;
    var ~blocked : int;
    var ~hso_dev~820.base : int, ~hso_dev~820.offset : int;
    var ~enabled~820 : int;
    var ~rv~820 : int;
    var ~tmp~820 : int;

  loc2:
    ~data.base, ~data.offset := #in~data.base, #in~data.offset;
    ~blocked := #in~blocked;
    havoc ~hso_dev~820.base, ~hso_dev~820.offset;
    havoc ~enabled~820;
    havoc ~rv~820;
    havoc ~tmp~820;
    ~hso_dev~820.base, ~hso_dev~820.offset := ~data.base, ~data.offset;
    ~enabled~820 := (if ~blocked % 256 == 0 then 1 else 0);
    call ldv_mutex_lock_16(~hso_dev~820.base, ~hso_dev~820.offset + 270);
    call #t~mem1249 := read~int(~hso_dev~820.base, ~hso_dev~820.offset + 13, 1);
    assume #t~mem1249 % 256 % 4294967296 != 0;
    havoc #t~mem1249;
    ~rv~820 := 0;
    call ldv_mutex_unlock_17(~hso_dev~820.base, ~hso_dev~820.offset + 270);
    return;
}

procedure hso_rfkill_set_block(#in~data.base : int, #in~data.offset : int, #in~blocked : int) returns (#res : int);
modifies ~ldv_mutex_mutex;

implementation ldv_mutex_lock_mutex(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc3:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    assume ~ldv_mutex_mutex == 1;
    ~ldv_mutex_mutex := 2;
    assume true;
    return;
}

procedure ldv_mutex_lock_mutex(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ~ldv_mutex_mutex;

implementation ULTIMATE.init() returns (){
    var #t~nondet0.base : int, #t~nondet0.offset : int;
    var #t~union1613.raw_lock.ldv_2024.head_tail : int, #t~union1613.raw_lock.ldv_2024.tickets.head : int, #t~union1613.raw_lock.ldv_2024.tickets.tail : int, #t~union1613.magic : int, #t~union1613.owner_cpu : int, #t~union1613.owner.base : int, #t~union1613.owner.offset : int, #t~union1613.dep_map.key.base : int, #t~union1613.dep_map.key.offset : int, #t~union1613.dep_map.class_cache.base : [int]int, #t~union1613.dep_map.class_cache.offset : [int]int, #t~union1613.dep_map.name.base : int, #t~union1613.dep_map.name.offset : int, #t~union1613.dep_map.cpu : int, #t~union1613.dep_map.ip : int;
    var #t~union1614.__padding : [int]int, #t~union1614.dep_map.key.base : int, #t~union1614.dep_map.key.offset : int, #t~union1614.dep_map.class_cache.base : [int]int, #t~union1614.dep_map.class_cache.offset : [int]int, #t~union1614.dep_map.name.base : int, #t~union1614.dep_map.name.offset : int, #t~union1614.dep_map.cpu : int, #t~union1614.dep_map.ip : int;
    var #t~nondet257.base : int, #t~nondet257.offset : int;
    var #t~nondet1274.base : int, #t~nondet1274.offset : int;
    var #t~union1615.head : int, #t~union1615.tail : int;
    var #t~union1616.__padding : [int]int, #t~union1616.dep_map.key.base : int, #t~union1616.dep_map.key.offset : int, #t~union1616.dep_map.class_cache.base : [int]int, #t~union1616.dep_map.class_cache.offset : [int]int, #t~union1616.dep_map.name.base : int, #t~union1616.dep_map.name.offset : int, #t~union1616.dep_map.cpu : int, #t~union1616.dep_map.ip : int;

  loc4:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~debug := 0;
    ~tty_major := 0;
    ~disable_net := 0;
    call ~#driver_name.base, ~#driver_name.offset := #Ultimate.alloc(4);
    call write~int(104, ~#driver_name.base, ~#driver_name.offset + 0, 1);
    call write~int(115, ~#driver_name.base, ~#driver_name.offset + 1, 1);
    call write~int(111, ~#driver_name.base, ~#driver_name.offset + 2, 1);
    call write~int(0, ~#driver_name.base, ~#driver_name.offset + 3, 1);
    call ~#tty_filename.base, ~#tty_filename.offset := #Ultimate.alloc(6);
    call write~int(116, ~#tty_filename.base, ~#tty_filename.offset + 0, 1);
    call write~int(116, ~#tty_filename.base, ~#tty_filename.offset + 1, 1);
    call write~int(121, ~#tty_filename.base, ~#tty_filename.offset + 2, 1);
    call write~int(72, ~#tty_filename.base, ~#tty_filename.offset + 3, 1);
    call write~int(83, ~#tty_filename.base, ~#tty_filename.offset + 4, 1);
    call write~int(0, ~#tty_filename.base, ~#tty_filename.offset + 5, 1);
    call #t~nondet0.base, #t~nondet0.offset := #Ultimate.alloc(291);
    ~version.base, ~version.offset := #t~nondet0.base, #t~nondet0.offset;
    havoc #t~nondet0.base, #t~nondet0.offset;
    ~LDV_IN_INTERRUPT := 0;
    ~ldv_mutex_cred_guard_mutex := 0;
    ~ldv_mutex_lock := 0;
    ~ldv_mutex_mutex := 0;
    ~ldv_mutex_shared_int_lock := 0;
    ~tty_drv.base, ~tty_drv.offset := 0, 0;
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[0 := 0], ~serial_table.offset[0 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[1 := 0], ~serial_table.offset[1 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[2 := 0], ~serial_table.offset[2 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[3 := 0], ~serial_table.offset[3 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[4 := 0], ~serial_table.offset[4 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[5 := 0], ~serial_table.offset[5 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[6 := 0], ~serial_table.offset[6 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[7 := 0], ~serial_table.offset[7 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[8 := 0], ~serial_table.offset[8 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[9 := 0], ~serial_table.offset[9 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[10 := 0], ~serial_table.offset[10 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[11 := 0], ~serial_table.offset[11 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[12 := 0], ~serial_table.offset[12 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[13 := 0], ~serial_table.offset[13 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[14 := 0], ~serial_table.offset[14 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[15 := 0], ~serial_table.offset[15 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[16 := 0], ~serial_table.offset[16 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[17 := 0], ~serial_table.offset[17 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[18 := 0], ~serial_table.offset[18 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[19 := 0], ~serial_table.offset[19 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[20 := 0], ~serial_table.offset[20 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[21 := 0], ~serial_table.offset[21 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[22 := 0], ~serial_table.offset[22 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[23 := 0], ~serial_table.offset[23 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[24 := 0], ~serial_table.offset[24 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[25 := 0], ~serial_table.offset[25 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[26 := 0], ~serial_table.offset[26 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[27 := 0], ~serial_table.offset[27 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[28 := 0], ~serial_table.offset[28 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[29 := 0], ~serial_table.offset[29 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[30 := 0], ~serial_table.offset[30 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[31 := 0], ~serial_table.offset[31 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[32 := 0], ~serial_table.offset[32 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[33 := 0], ~serial_table.offset[33 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[34 := 0], ~serial_table.offset[34 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[35 := 0], ~serial_table.offset[35 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[36 := 0], ~serial_table.offset[36 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[37 := 0], ~serial_table.offset[37 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[38 := 0], ~serial_table.offset[38 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[39 := 0], ~serial_table.offset[39 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[40 := 0], ~serial_table.offset[40 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[41 := 0], ~serial_table.offset[41 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[42 := 0], ~serial_table.offset[42 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[43 := 0], ~serial_table.offset[43 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[44 := 0], ~serial_table.offset[44 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[45 := 0], ~serial_table.offset[45 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[46 := 0], ~serial_table.offset[46 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[47 := 0], ~serial_table.offset[47 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[48 := 0], ~serial_table.offset[48 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[49 := 0], ~serial_table.offset[49 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[50 := 0], ~serial_table.offset[50 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[51 := 0], ~serial_table.offset[51 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[52 := 0], ~serial_table.offset[52 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[53 := 0], ~serial_table.offset[53 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[54 := 0], ~serial_table.offset[54 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[55 := 0], ~serial_table.offset[55 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[56 := 0], ~serial_table.offset[56 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[57 := 0], ~serial_table.offset[57 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[58 := 0], ~serial_table.offset[58 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[59 := 0], ~serial_table.offset[59 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[60 := 0], ~serial_table.offset[60 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[61 := 0], ~serial_table.offset[61 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[62 := 0], ~serial_table.offset[62 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[63 := 0], ~serial_table.offset[63 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[64 := 0], ~serial_table.offset[64 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[65 := 0], ~serial_table.offset[65 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[66 := 0], ~serial_table.offset[66 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[67 := 0], ~serial_table.offset[67 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[68 := 0], ~serial_table.offset[68 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[69 := 0], ~serial_table.offset[69 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[70 := 0], ~serial_table.offset[70 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[71 := 0], ~serial_table.offset[71 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[72 := 0], ~serial_table.offset[72 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[73 := 0], ~serial_table.offset[73 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[74 := 0], ~serial_table.offset[74 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[75 := 0], ~serial_table.offset[75 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[76 := 0], ~serial_table.offset[76 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[77 := 0], ~serial_table.offset[77 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[78 := 0], ~serial_table.offset[78 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[79 := 0], ~serial_table.offset[79 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[80 := 0], ~serial_table.offset[80 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[81 := 0], ~serial_table.offset[81 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[82 := 0], ~serial_table.offset[82 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[83 := 0], ~serial_table.offset[83 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[84 := 0], ~serial_table.offset[84 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[85 := 0], ~serial_table.offset[85 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[86 := 0], ~serial_table.offset[86 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[87 := 0], ~serial_table.offset[87 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[88 := 0], ~serial_table.offset[88 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[89 := 0], ~serial_table.offset[89 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[90 := 0], ~serial_table.offset[90 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[91 := 0], ~serial_table.offset[91 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[92 := 0], ~serial_table.offset[92 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[93 := 0], ~serial_table.offset[93 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[94 := 0], ~serial_table.offset[94 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[95 := 0], ~serial_table.offset[95 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[96 := 0], ~serial_table.offset[96 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[97 := 0], ~serial_table.offset[97 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[98 := 0], ~serial_table.offset[98 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[99 := 0], ~serial_table.offset[99 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[100 := 0], ~serial_table.offset[100 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[101 := 0], ~serial_table.offset[101 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[102 := 0], ~serial_table.offset[102 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[103 := 0], ~serial_table.offset[103 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[104 := 0], ~serial_table.offset[104 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[105 := 0], ~serial_table.offset[105 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[106 := 0], ~serial_table.offset[106 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[107 := 0], ~serial_table.offset[107 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[108 := 0], ~serial_table.offset[108 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[109 := 0], ~serial_table.offset[109 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[110 := 0], ~serial_table.offset[110 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[111 := 0], ~serial_table.offset[111 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[112 := 0], ~serial_table.offset[112 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[113 := 0], ~serial_table.offset[113 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[114 := 0], ~serial_table.offset[114 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[115 := 0], ~serial_table.offset[115 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[116 := 0], ~serial_table.offset[116 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[117 := 0], ~serial_table.offset[117 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[118 := 0], ~serial_table.offset[118 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[119 := 0], ~serial_table.offset[119 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[120 := 0], ~serial_table.offset[120 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[121 := 0], ~serial_table.offset[121 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[122 := 0], ~serial_table.offset[122 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[123 := 0], ~serial_table.offset[123 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[124 := 0], ~serial_table.offset[124 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[125 := 0], ~serial_table.offset[125 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[126 := 0], ~serial_table.offset[126 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[127 := 0], ~serial_table.offset[127 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[128 := 0], ~serial_table.offset[128 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[129 := 0], ~serial_table.offset[129 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[130 := 0], ~serial_table.offset[130 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[131 := 0], ~serial_table.offset[131 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[132 := 0], ~serial_table.offset[132 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[133 := 0], ~serial_table.offset[133 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[134 := 0], ~serial_table.offset[134 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[135 := 0], ~serial_table.offset[135 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[136 := 0], ~serial_table.offset[136 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[137 := 0], ~serial_table.offset[137 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[138 := 0], ~serial_table.offset[138 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[139 := 0], ~serial_table.offset[139 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[140 := 0], ~serial_table.offset[140 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[141 := 0], ~serial_table.offset[141 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[142 := 0], ~serial_table.offset[142 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[143 := 0], ~serial_table.offset[143 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[144 := 0], ~serial_table.offset[144 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[145 := 0], ~serial_table.offset[145 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[146 := 0], ~serial_table.offset[146 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[147 := 0], ~serial_table.offset[147 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[148 := 0], ~serial_table.offset[148 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[149 := 0], ~serial_table.offset[149 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[150 := 0], ~serial_table.offset[150 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[151 := 0], ~serial_table.offset[151 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[152 := 0], ~serial_table.offset[152 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[153 := 0], ~serial_table.offset[153 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[154 := 0], ~serial_table.offset[154 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[155 := 0], ~serial_table.offset[155 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[156 := 0], ~serial_table.offset[156 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[157 := 0], ~serial_table.offset[157 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[158 := 0], ~serial_table.offset[158 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[159 := 0], ~serial_table.offset[159 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[160 := 0], ~serial_table.offset[160 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[161 := 0], ~serial_table.offset[161 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[162 := 0], ~serial_table.offset[162 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[163 := 0], ~serial_table.offset[163 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[164 := 0], ~serial_table.offset[164 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[165 := 0], ~serial_table.offset[165 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[166 := 0], ~serial_table.offset[166 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[167 := 0], ~serial_table.offset[167 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[168 := 0], ~serial_table.offset[168 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[169 := 0], ~serial_table.offset[169 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[170 := 0], ~serial_table.offset[170 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[171 := 0], ~serial_table.offset[171 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[172 := 0], ~serial_table.offset[172 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[173 := 0], ~serial_table.offset[173 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[174 := 0], ~serial_table.offset[174 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[175 := 0], ~serial_table.offset[175 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[176 := 0], ~serial_table.offset[176 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[177 := 0], ~serial_table.offset[177 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[178 := 0], ~serial_table.offset[178 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[179 := 0], ~serial_table.offset[179 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[180 := 0], ~serial_table.offset[180 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[181 := 0], ~serial_table.offset[181 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[182 := 0], ~serial_table.offset[182 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[183 := 0], ~serial_table.offset[183 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[184 := 0], ~serial_table.offset[184 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[185 := 0], ~serial_table.offset[185 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[186 := 0], ~serial_table.offset[186 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[187 := 0], ~serial_table.offset[187 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[188 := 0], ~serial_table.offset[188 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[189 := 0], ~serial_table.offset[189 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[190 := 0], ~serial_table.offset[190 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[191 := 0], ~serial_table.offset[191 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[192 := 0], ~serial_table.offset[192 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[193 := 0], ~serial_table.offset[193 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[194 := 0], ~serial_table.offset[194 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[195 := 0], ~serial_table.offset[195 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[196 := 0], ~serial_table.offset[196 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[197 := 0], ~serial_table.offset[197 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[198 := 0], ~serial_table.offset[198 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[199 := 0], ~serial_table.offset[199 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[200 := 0], ~serial_table.offset[200 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[201 := 0], ~serial_table.offset[201 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[202 := 0], ~serial_table.offset[202 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[203 := 0], ~serial_table.offset[203 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[204 := 0], ~serial_table.offset[204 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[205 := 0], ~serial_table.offset[205 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[206 := 0], ~serial_table.offset[206 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[207 := 0], ~serial_table.offset[207 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[208 := 0], ~serial_table.offset[208 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[209 := 0], ~serial_table.offset[209 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[210 := 0], ~serial_table.offset[210 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[211 := 0], ~serial_table.offset[211 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[212 := 0], ~serial_table.offset[212 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[213 := 0], ~serial_table.offset[213 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[214 := 0], ~serial_table.offset[214 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[215 := 0], ~serial_table.offset[215 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[216 := 0], ~serial_table.offset[216 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[217 := 0], ~serial_table.offset[217 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[218 := 0], ~serial_table.offset[218 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[219 := 0], ~serial_table.offset[219 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[220 := 0], ~serial_table.offset[220 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[221 := 0], ~serial_table.offset[221 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[222 := 0], ~serial_table.offset[222 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[223 := 0], ~serial_table.offset[223 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[224 := 0], ~serial_table.offset[224 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[225 := 0], ~serial_table.offset[225 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[226 := 0], ~serial_table.offset[226 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[227 := 0], ~serial_table.offset[227 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[228 := 0], ~serial_table.offset[228 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[229 := 0], ~serial_table.offset[229 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[230 := 0], ~serial_table.offset[230 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[231 := 0], ~serial_table.offset[231 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[232 := 0], ~serial_table.offset[232 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[233 := 0], ~serial_table.offset[233 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[234 := 0], ~serial_table.offset[234 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[235 := 0], ~serial_table.offset[235 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[236 := 0], ~serial_table.offset[236 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[237 := 0], ~serial_table.offset[237 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[238 := 0], ~serial_table.offset[238 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[239 := 0], ~serial_table.offset[239 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[240 := 0], ~serial_table.offset[240 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[241 := 0], ~serial_table.offset[241 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[242 := 0], ~serial_table.offset[242 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[243 := 0], ~serial_table.offset[243 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[244 := 0], ~serial_table.offset[244 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[245 := 0], ~serial_table.offset[245 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[246 := 0], ~serial_table.offset[246 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[247 := 0], ~serial_table.offset[247 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[248 := 0], ~serial_table.offset[248 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[249 := 0], ~serial_table.offset[249 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[250 := 0], ~serial_table.offset[250 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[251 := 0], ~serial_table.offset[251 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[252 := 0], ~serial_table.offset[252 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[253 := 0], ~serial_table.offset[253 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[254 := 0], ~serial_table.offset[254 := 0];
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[255 := 0], ~serial_table.offset[255 := 0];
    ~network_table.base, ~network_table.offset := ~network_table.base[0 := 0], ~network_table.offset[0 := 0];
    ~network_table.base, ~network_table.offset := ~network_table.base[1 := 0], ~network_table.offset[1 := 0];
    ~network_table.base, ~network_table.offset := ~network_table.base[2 := 0], ~network_table.offset[2 := 0];
    ~network_table.base, ~network_table.offset := ~network_table.base[3 := 0], ~network_table.offset[3 := 0];
    ~network_table.base, ~network_table.offset := ~network_table.base[4 := 0], ~network_table.offset[4 := 0];
    ~network_table.base, ~network_table.offset := ~network_table.base[5 := 0], ~network_table.offset[5 := 0];
    ~network_table.base, ~network_table.offset := ~network_table.base[6 := 0], ~network_table.offset[6 := 0];
    ~network_table.base, ~network_table.offset := ~network_table.base[7 := 0], ~network_table.offset[7 := 0];
    ~network_table.base, ~network_table.offset := ~network_table.base[8 := 0], ~network_table.offset[8 := 0];
    ~network_table.base, ~network_table.offset := ~network_table.base[9 := 0], ~network_table.offset[9 := 0];
    call ~#serial_table_lock.base, ~#serial_table_lock.offset := #Ultimate.alloc(68);
    call write~int(#t~union1613.raw_lock.ldv_2024.head_tail, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union1613.raw_lock.ldv_2024.tickets.head, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union1613.raw_lock.ldv_2024.tickets.tail, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(#t~union1613.magic, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 4, 4);
    call write~int(#t~union1613.owner_cpu, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 8, 4);
    call write~$Pointer$(#t~union1613.owner.base, #t~union1613.owner.offset, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 12, 8);
    call write~$Pointer$(#t~union1613.dep_map.key.base, #t~union1613.dep_map.key.offset, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 20 + 0, 8);
    call write~$Pointer$(#t~union1613.dep_map.class_cache.base[0], #t~union1613.dep_map.class_cache.offset[0], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 20 + 8, 8);
    call write~$Pointer$(#t~union1613.dep_map.class_cache.base[1], #t~union1613.dep_map.class_cache.offset[1], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(#t~union1613.dep_map.name.base, #t~union1613.dep_map.name.offset, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 20 + 24, 8);
    call write~int(#t~union1613.dep_map.cpu, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 20 + 32, 4);
    call write~int(#t~union1613.dep_map.ip, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union1614.__padding[0], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0, 1);
    call write~int(#t~union1614.__padding[1], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union1614.__padding[2], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[3], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[4], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[5], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[6], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[7], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[8], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[9], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[10], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[11], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[12], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[13], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[14], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[15], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[16], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[17], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[18], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[19], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[20], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[21], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[22], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1614.__padding[23], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union1614.dep_map.key.base, #t~union1614.dep_map.key.offset, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union1614.dep_map.class_cache.base[0], #t~union1614.dep_map.class_cache.offset[0], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union1614.dep_map.class_cache.base[1], #t~union1614.dep_map.class_cache.offset[1], ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union1614.dep_map.name.base, #t~union1614.dep_map.name.offset, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union1614.dep_map.cpu, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union1614.dep_map.ip, ~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0 + 24 + 36, 8);
    havoc #t~union1613.raw_lock.ldv_2024.head_tail, #t~union1613.raw_lock.ldv_2024.tickets.head, #t~union1613.raw_lock.ldv_2024.tickets.tail, #t~union1613.magic, #t~union1613.owner_cpu, #t~union1613.owner.base, #t~union1613.owner.offset, #t~union1613.dep_map.key.base, #t~union1613.dep_map.key.offset, #t~union1613.dep_map.class_cache.base, #t~union1613.dep_map.class_cache.offset, #t~union1613.dep_map.name.base, #t~union1613.dep_map.name.offset, #t~union1613.dep_map.cpu, #t~union1613.dep_map.ip;
    havoc #t~union1614.__padding, #t~union1614.dep_map.key.base, #t~union1614.dep_map.key.offset, #t~union1614.dep_map.class_cache.base, #t~union1614.dep_map.class_cache.offset, #t~union1614.dep_map.name.base, #t~union1614.dep_map.name.offset, #t~union1614.dep_map.cpu, #t~union1614.dep_map.ip;
    call ~#default_port_spec.base, ~#default_port_spec.offset := #Ultimate.alloc(16);
    call write~int(274, ~#default_port_spec.base, ~#default_port_spec.offset + 0, 4);
    call write~int(528, ~#default_port_spec.base, ~#default_port_spec.offset + 4, 4);
    call write~int(529, ~#default_port_spec.base, ~#default_port_spec.offset + 8, 4);
    call write~int(0, ~#default_port_spec.base, ~#default_port_spec.offset + 12, 4);
    call ~#icon321_port_spec.base, ~#icon321_port_spec.offset := #Ultimate.alloc(20);
    call write~int(274, ~#icon321_port_spec.base, ~#icon321_port_spec.offset + 0, 4);
    call write~int(521, ~#icon321_port_spec.base, ~#icon321_port_spec.offset + 4, 4);
    call write~int(529, ~#icon321_port_spec.base, ~#icon321_port_spec.offset + 8, 4);
    call write~int(528, ~#icon321_port_spec.base, ~#icon321_port_spec.offset + 12, 4);
    call write~int(0, ~#icon321_port_spec.base, ~#icon321_port_spec.offset + 16, 4);
    call ~#hso_ids.base, ~#hso_ids.offset := #Ultimate.alloc(1375);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 0 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 0 + 2, 2);
    call write~int(26385, ~#hso_ids.base, ~#hso_ids.offset + 0 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 0 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 0 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 0 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 0 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 0 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 0 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 0 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 0 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 0 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 0 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 25 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 25 + 2, 2);
    call write~int(26417, ~#hso_ids.base, ~#hso_ids.offset + 25 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 25 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 25 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 25 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 25 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 25 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 25 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 25 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 25 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 25 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 25 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 50 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 50 + 2, 2);
    call write~int(26449, ~#hso_ids.base, ~#hso_ids.offset + 50 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 50 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 50 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 50 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 50 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 50 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 50 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 50 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 50 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 50 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 50 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 75 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 75 + 2, 2);
    call write~int(26481, ~#hso_ids.base, ~#hso_ids.offset + 75 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 75 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 75 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 75 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 75 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 75 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 75 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 75 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 75 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 75 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 75 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 100 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 100 + 2, 2);
    call write~int(26513, ~#hso_ids.base, ~#hso_ids.offset + 100 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 100 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 100 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 100 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 100 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 100 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 100 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 100 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 100 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 100 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 100 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 125 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 125 + 2, 2);
    call write~int(26641, ~#hso_ids.base, ~#hso_ids.offset + 125 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 125 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 125 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 125 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 125 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 125 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 125 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 125 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 125 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 125 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 125 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 150 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 150 + 2, 2);
    call write~int(26897, ~#hso_ids.base, ~#hso_ids.offset + 150 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 150 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 150 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 150 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 150 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 150 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 150 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 150 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 150 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 150 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 150 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 175 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 175 + 2, 2);
    call write~int(26961, ~#hso_ids.base, ~#hso_ids.offset + 175 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 175 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 175 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 175 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 175 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 175 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 175 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 175 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 175 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 175 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 175 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 200 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 200 + 2, 2);
    call write~int(26993, ~#hso_ids.base, ~#hso_ids.offset + 200 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 200 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 200 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 200 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 200 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 200 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 200 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 200 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 200 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 200 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 200 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 225 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 225 + 2, 2);
    call write~int(28689, ~#hso_ids.base, ~#hso_ids.offset + 225 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 225 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 225 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 225 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 225 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 225 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 225 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 225 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 225 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 225 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 225 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 250 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 250 + 2, 2);
    call write~int(28721, ~#hso_ids.base, ~#hso_ids.offset + 250 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 250 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 250 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 250 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 250 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 250 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 250 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 250 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 250 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 250 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 250 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 275 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 275 + 2, 2);
    call write~int(28753, ~#hso_ids.base, ~#hso_ids.offset + 275 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 275 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 275 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 275 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 275 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 275 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 275 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 275 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 275 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 275 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 275 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 300 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 300 + 2, 2);
    call write~int(28785, ~#hso_ids.base, ~#hso_ids.offset + 300 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 300 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 300 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 300 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 300 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 300 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 300 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 300 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 300 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 300 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 300 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 325 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 325 + 2, 2);
    call write~int(28945, ~#hso_ids.base, ~#hso_ids.offset + 325 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 325 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 325 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 325 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 325 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 325 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 325 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 325 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 325 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 325 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 325 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 350 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 350 + 2, 2);
    call write~int(29201, ~#hso_ids.base, ~#hso_ids.offset + 350 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 350 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 350 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 350 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 350 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 350 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 350 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 350 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 350 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 350 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 350 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 375 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 375 + 2, 2);
    call write~int(29265, ~#hso_ids.base, ~#hso_ids.offset + 375 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 375 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 375 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 375 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 375 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 375 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 375 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 375 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 375 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 375 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 375 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 400 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 400 + 2, 2);
    call write~int(29297, ~#hso_ids.base, ~#hso_ids.offset + 400 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 400 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 400 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 400 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 400 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 400 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 400 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 400 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 400 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 400 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 400 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 425 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 425 + 2, 2);
    call write~int(29457, ~#hso_ids.base, ~#hso_ids.offset + 425 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 425 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 425 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 425 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 425 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 425 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 425 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 425 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 425 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 425 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 425 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 450 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 450 + 2, 2);
    call write~int(49201, ~#hso_ids.base, ~#hso_ids.offset + 450 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 450 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 450 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 450 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 450 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 450 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 450 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 450 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 450 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 450 + 16, 1);
    call write~int(~#default_port_spec.base + ~#default_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 450 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 475 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 475 + 2, 2);
    call write~int(53267, ~#hso_ids.base, ~#hso_ids.offset + 475 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 475 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 475 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 475 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 475 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 475 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 475 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 475 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 475 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 475 + 16, 1);
    call write~int(~#icon321_port_spec.base + ~#icon321_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 475 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 500 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 500 + 2, 2);
    call write~int(53297, ~#hso_ids.base, ~#hso_ids.offset + 500 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 500 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 500 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 500 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 500 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 500 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 500 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 500 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 500 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 500 + 16, 1);
    call write~int(~#icon321_port_spec.base + ~#icon321_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 500 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 525 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 525 + 2, 2);
    call write~int(53299, ~#hso_ids.base, ~#hso_ids.offset + 525 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 525 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 525 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 525 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 525 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 525 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 525 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 525 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 525 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 525 + 16, 1);
    call write~int(~#icon321_port_spec.base + ~#icon321_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset + 525 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 550 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 550 + 2, 2);
    call write~int(29441, ~#hso_ids.base, ~#hso_ids.offset + 550 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 550 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 550 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 550 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 550 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 550 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 550 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 550 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 550 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 550 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 550 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 575 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 575 + 2, 2);
    call write~int(29537, ~#hso_ids.base, ~#hso_ids.offset + 575 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 575 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 575 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 575 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 575 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 575 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 575 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 575 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 575 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 575 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 575 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 600 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 600 + 2, 2);
    call write~int(29569, ~#hso_ids.base, ~#hso_ids.offset + 600 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 600 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 600 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 600 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 600 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 600 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 600 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 600 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 600 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 600 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 600 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 625 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 625 + 2, 2);
    call write~int(29697, ~#hso_ids.base, ~#hso_ids.offset + 625 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 625 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 625 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 625 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 625 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 625 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 625 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 625 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 625 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 625 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 625 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 650 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 650 + 2, 2);
    call write~int(29953, ~#hso_ids.base, ~#hso_ids.offset + 650 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 650 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 650 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 650 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 650 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 650 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 650 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 650 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 650 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 650 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 650 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 675 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 675 + 2, 2);
    call write~int(30209, ~#hso_ids.base, ~#hso_ids.offset + 675 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 675 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 675 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 675 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 675 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 675 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 675 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 675 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 675 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 675 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 675 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 700 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 700 + 2, 2);
    call write~int(30465, ~#hso_ids.base, ~#hso_ids.offset + 700 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 700 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 700 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 700 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 700 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 700 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 700 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 700 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 700 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 700 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 700 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 725 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 725 + 2, 2);
    call write~int(30470, ~#hso_ids.base, ~#hso_ids.offset + 725 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 725 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 725 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 725 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 725 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 725 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 725 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 725 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 725 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 725 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 725 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 750 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 750 + 2, 2);
    call write~int(30721, ~#hso_ids.base, ~#hso_ids.offset + 750 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 750 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 750 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 750 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 750 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 750 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 750 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 750 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 750 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 750 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 750 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 775 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 775 + 2, 2);
    call write~int(30977, ~#hso_ids.base, ~#hso_ids.offset + 775 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 775 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 775 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 775 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 775 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 775 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 775 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 775 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 775 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 775 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 775 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 800 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 800 + 2, 2);
    call write~int(31233, ~#hso_ids.base, ~#hso_ids.offset + 800 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 800 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 800 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 800 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 800 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 800 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 800 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 800 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 800 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 800 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 800 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 825 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 825 + 2, 2);
    call write~int(31237, ~#hso_ids.base, ~#hso_ids.offset + 825 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 825 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 825 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 825 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 825 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 825 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 825 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 825 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 825 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 825 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 825 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 850 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 850 + 2, 2);
    call write~int(33280, ~#hso_ids.base, ~#hso_ids.offset + 850 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 850 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 850 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 850 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 850 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 850 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 850 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 850 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 850 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 850 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 850 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 875 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 875 + 2, 2);
    call write~int(33281, ~#hso_ids.base, ~#hso_ids.offset + 875 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 875 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 875 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 875 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 875 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 875 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 875 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 875 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 875 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 875 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 875 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 900 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 900 + 2, 2);
    call write~int(33536, ~#hso_ids.base, ~#hso_ids.offset + 900 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 900 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 900 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 900 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 900 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 900 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 900 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 900 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 900 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 900 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 900 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 925 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 925 + 2, 2);
    call write~int(33538, ~#hso_ids.base, ~#hso_ids.offset + 925 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 925 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 925 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 925 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 925 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 925 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 925 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 925 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 925 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 925 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 925 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 950 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 950 + 2, 2);
    call write~int(33540, ~#hso_ids.base, ~#hso_ids.offset + 950 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 950 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 950 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 950 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 950 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 950 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 950 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 950 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 950 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 950 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 950 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 975 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 975 + 2, 2);
    call write~int(33792, ~#hso_ids.base, ~#hso_ids.offset + 975 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 975 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 975 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 975 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 975 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 975 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 975 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 975 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 975 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 975 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 975 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1000 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1000 + 2, 2);
    call write~int(34304, ~#hso_ids.base, ~#hso_ids.offset + 1000 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1000 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1000 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1000 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1000 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1000 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1000 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1000 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1000 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1000 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1000 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1025 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1025 + 2, 2);
    call write~int(34816, ~#hso_ids.base, ~#hso_ids.offset + 1025 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1025 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1025 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1025 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1025 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1025 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1025 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1025 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1025 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1025 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1025 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1050 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1050 + 2, 2);
    call write~int(35072, ~#hso_ids.base, ~#hso_ids.offset + 1050 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1050 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1050 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1050 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1050 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1050 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1050 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1050 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1050 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1050 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1050 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1075 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1075 + 2, 2);
    call write~int(36864, ~#hso_ids.base, ~#hso_ids.offset + 1075 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1075 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1075 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1075 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1075 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1075 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1075 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1075 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1075 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1075 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1075 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1100 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1100 + 2, 2);
    call write~int(53301, ~#hso_ids.base, ~#hso_ids.offset + 1100 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1100 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1100 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1100 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1100 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1100 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1100 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1100 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1100 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1100 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1100 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1125 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1125 + 2, 2);
    call write~int(53333, ~#hso_ids.base, ~#hso_ids.offset + 1125 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1125 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1125 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1125 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1125 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1125 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1125 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1125 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1125 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1125 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1125 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1150 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1150 + 2, 2);
    call write~int(53589, ~#hso_ids.base, ~#hso_ids.offset + 1150 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1150 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1150 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1150 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1150 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1150 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1150 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1150 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1150 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1150 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1150 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1175 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1175 + 2, 2);
    call write~int(53845, ~#hso_ids.base, ~#hso_ids.offset + 1175 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1175 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1175 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1175 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1175 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1175 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1175 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1175 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1175 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1175 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1175 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1200 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1200 + 2, 2);
    call write~int(53335, ~#hso_ids.base, ~#hso_ids.offset + 1200 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1200 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1200 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1200 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1200 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1200 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1200 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1200 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1200 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1200 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1200 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1225 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1225 + 2, 2);
    call write~int(53591, ~#hso_ids.base, ~#hso_ids.offset + 1225 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1225 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1225 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1225 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1225 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1225 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1225 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1225 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1225 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1225 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1225 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1250 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1250 + 2, 2);
    call write~int(53847, ~#hso_ids.base, ~#hso_ids.offset + 1250 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1250 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1250 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1250 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1250 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1250 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1250 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1250 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1250 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1250 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1250 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1275 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1275 + 2, 2);
    call write~int(54103, ~#hso_ids.base, ~#hso_ids.offset + 1275 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1275 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1275 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1275 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1275 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1275 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1275 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1275 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1275 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1275 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1275 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1300 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1300 + 2, 2);
    call write~int(53336, ~#hso_ids.base, ~#hso_ids.offset + 1300 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1300 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1300 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1300 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1300 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1300 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1300 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1300 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1300 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1300 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1300 + 17, 8);
    call write~int(3, ~#hso_ids.base, ~#hso_ids.offset + 1325 + 0, 2);
    call write~int(2800, ~#hso_ids.base, ~#hso_ids.offset + 1325 + 2, 2);
    call write~int(49408, ~#hso_ids.base, ~#hso_ids.offset + 1325 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1325 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1325 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1325 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1325 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1325 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1325 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1325 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1325 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1325 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1325 + 17, 8);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1350 + 0, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1350 + 2, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1350 + 4, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1350 + 6, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1350 + 8, 2);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1350 + 10, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1350 + 11, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1350 + 12, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1350 + 13, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1350 + 14, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1350 + 15, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1350 + 16, 1);
    call write~int(0, ~#hso_ids.base, ~#hso_ids.offset + 1350 + 17, 8);
    call ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset := #Ultimate.alloc(43);
    call #t~nondet257.base, #t~nondet257.offset := #Ultimate.alloc(8);
    call write~$Pointer$(#t~nondet257.base, #t~nondet257.offset, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 0 + 0, 8);
    call write~int(292, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 0 + 8, 2);
    call write~int(0, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 0 + 10, 1);
    call write~$Pointer$(0, 0, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 0 + 11, 8);
    call write~int(0, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 0 + 19 + 0 + 0 + 0, 1);
    call write~int(0, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 0 + 19 + 0 + 1 + 0, 1);
    call write~int(0, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 0 + 19 + 0 + 2 + 0, 1);
    call write~int(0, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 0 + 19 + 0 + 3 + 0, 1);
    call write~int(0, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 0 + 19 + 0 + 4 + 0, 1);
    call write~int(0, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 0 + 19 + 0 + 5 + 0, 1);
    call write~int(0, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 0 + 19 + 0 + 6 + 0, 1);
    call write~int(0, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 0 + 19 + 0 + 7 + 0, 1);
    call write~$Pointer$(#funAddr~hso_sysfs_show_porttype.base, #funAddr~hso_sysfs_show_porttype.offset, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 27, 8);
    call write~$Pointer$(0, 0, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset + 35, 8);
    havoc #t~nondet257.base, #t~nondet257.offset;
    call ~#ops.base, ~#ops.offset := #Ultimate.alloc(368);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 72, 8);
    call write~$Pointer$(#funAddr~ethtool_op_get_link.base, #funAddr~ethtool_op_get_link.offset, ~#ops.base, ~#ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#ops.base, ~#ops.offset + 360, 8);
    call ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset := #Ultimate.alloc(392);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~hso_net_open.base, #funAddr~hso_net_open.offset, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~hso_net_close.base, #funAddr~hso_net_close.offset, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~hso_net_start_xmit.base, #funAddr~hso_net_start_xmit.offset, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 104, 8);
    call write~$Pointer$(#funAddr~hso_net_tx_timeout.base, #funAddr~hso_net_tx_timeout.offset, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset + 384, 8);
    call ~#hso_rfkill_ops.base, ~#hso_rfkill_ops.offset := #Ultimate.alloc(24);
    call write~$Pointer$(0, 0, ~#hso_rfkill_ops.base, ~#hso_rfkill_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#hso_rfkill_ops.base, ~#hso_rfkill_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~hso_rfkill_set_block.base, #funAddr~hso_rfkill_set_block.offset, ~#hso_rfkill_ops.base, ~#hso_rfkill_ops.offset + 16, 8);
    call ~#hso_type.base, ~#hso_type.offset := #Ultimate.alloc(48);
    call #t~nondet1274.base, #t~nondet1274.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet1274.base,#t~nondet1274.offset + 0 := 119];
    #memory_int := #memory_int[#t~nondet1274.base,#t~nondet1274.offset + 1 := 119];
    #memory_int := #memory_int[#t~nondet1274.base,#t~nondet1274.offset + 2 := 97];
    #memory_int := #memory_int[#t~nondet1274.base,#t~nondet1274.offset + 3 := 110];
    #memory_int := #memory_int[#t~nondet1274.base,#t~nondet1274.offset + 4 := 0];
    call write~$Pointer$(#t~nondet1274.base, #t~nondet1274.offset, ~#hso_type.base, ~#hso_type.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#hso_type.base, ~#hso_type.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#hso_type.base, ~#hso_type.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#hso_type.base, ~#hso_type.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#hso_type.base, ~#hso_type.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#hso_type.base, ~#hso_type.offset + 40, 8);
    havoc #t~nondet1274.base, #t~nondet1274.offset;
    call ~#hso_serial_ops.base, ~#hso_serial_ops.offset := #Ultimate.alloc(272);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~hso_serial_open.base, #funAddr~hso_serial_open.offset, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~hso_serial_close.base, #funAddr~hso_serial_close.offset, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~hso_serial_write.base, #funAddr~hso_serial_write.offset, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 72, 8);
    call write~$Pointer$(#funAddr~hso_serial_write_room.base, #funAddr~hso_serial_write_room.offset, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 80, 8);
    call write~$Pointer$(#funAddr~hso_serial_chars_in_buffer.base, #funAddr~hso_serial_chars_in_buffer.offset, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 88, 8);
    call write~$Pointer$(#funAddr~hso_serial_ioctl.base, #funAddr~hso_serial_ioctl.offset, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 104, 8);
    call write~$Pointer$(#funAddr~hso_serial_set_termios.base, #funAddr~hso_serial_set_termios.offset, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 120, 8);
    call write~$Pointer$(#funAddr~hso_unthrottle.base, #funAddr~hso_unthrottle.offset, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 192, 8);
    call write~$Pointer$(#funAddr~hso_serial_tiocmget.base, #funAddr~hso_serial_tiocmget.offset, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 200, 8);
    call write~$Pointer$(#funAddr~hso_serial_tiocmset.base, #funAddr~hso_serial_tiocmset.offset, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 224, 8);
    call write~$Pointer$(#funAddr~hso_get_count.base, #funAddr~hso_get_count.offset, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#hso_serial_ops.base, ~#hso_serial_ops.offset + 264, 8);
    call ~#hso_driver.base, ~#hso_driver.offset := #Ultimate.alloc(285);
    call write~$Pointer$(~#driver_name.base, ~#driver_name.offset, ~#hso_driver.base, ~#hso_driver.offset + 0, 8);
    call write~$Pointer$(#funAddr~hso_probe.base, #funAddr~hso_probe.offset, ~#hso_driver.base, ~#hso_driver.offset + 8, 8);
    call write~$Pointer$(#funAddr~hso_disconnect.base, #funAddr~hso_disconnect.offset, ~#hso_driver.base, ~#hso_driver.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 24, 8);
    call write~$Pointer$(#funAddr~hso_suspend.base, #funAddr~hso_suspend.offset, ~#hso_driver.base, ~#hso_driver.offset + 32, 8);
    call write~$Pointer$(#funAddr~hso_resume.base, #funAddr~hso_resume.offset, ~#hso_driver.base, ~#hso_driver.offset + 40, 8);
    call write~$Pointer$(#funAddr~hso_resume.base, #funAddr~hso_resume.offset, ~#hso_driver.base, ~#hso_driver.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 64, 8);
    call write~$Pointer$(~#hso_ids.base, ~#hso_ids.offset, ~#hso_driver.base, ~#hso_driver.offset + 72, 8);
    call write~int(0, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union1615.head, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union1615.tail, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(0, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union1616.__padding[0], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union1616.__padding[1], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union1616.__padding[2], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[3], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[4], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[5], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[6], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[7], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[8], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[9], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[10], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[11], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[12], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[13], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[14], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[15], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[16], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[17], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[18], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[19], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[20], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[21], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[22], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1616.__padding[23], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union1616.dep_map.key.base, #t~union1616.dep_map.key.offset, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union1616.dep_map.class_cache.base[0], #t~union1616.dep_map.class_cache.offset[0], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union1616.dep_map.class_cache.base[1], #t~union1616.dep_map.class_cache.offset[1], ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union1616.dep_map.name.base, #t~union1616.dep_map.name.offset, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union1616.dep_map.cpu, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union1616.dep_map.ip, ~#hso_driver.base, ~#hso_driver.offset + 80 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 80 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 80 + 68 + 8, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 16, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 24, 8);
    call write~int(0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 32, 1);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 33, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 41, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 49, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 57, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 65, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 73, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 81, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 89, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 97, 8);
    call write~$Pointer$(0, 0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 0 + 105, 8);
    call write~int(0, ~#hso_driver.base, ~#hso_driver.offset + 164 + 113, 4);
    call write~int(0, ~#hso_driver.base, ~#hso_driver.offset + 281, 1);
    call write~int(1, ~#hso_driver.base, ~#hso_driver.offset + 282, 1);
    call write~int(1, ~#hso_driver.base, ~#hso_driver.offset + 283, 1);
    call write~int(0, ~#hso_driver.base, ~#hso_driver.offset + 284, 1);
    havoc #t~union1615.head, #t~union1615.tail;
    havoc #t~union1616.__padding, #t~union1616.dep_map.key.base, #t~union1616.dep_map.key.offset, #t~union1616.dep_map.class_cache.base, #t~union1616.dep_map.class_cache.offset, #t~union1616.dep_map.name.base, #t~union1616.dep_map.name.offset, #t~union1616.dep_map.cpu, #t~union1616.dep_map.ip;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~debug, ~tty_major, ~disable_net, ~#driver_name.base, ~#driver_name.offset, ~#tty_filename.base, ~#tty_filename.offset, ~version.base, ~version.offset, ~LDV_IN_INTERRUPT, ~ldv_mutex_cred_guard_mutex, ~ldv_mutex_lock, ~ldv_mutex_mutex, ~ldv_mutex_shared_int_lock, ~tty_drv.base, ~tty_drv.offset, ~serial_table.base, ~serial_table.offset, ~network_table.base, ~network_table.offset, ~#serial_table_lock.base, ~#serial_table_lock.offset, ~#default_port_spec.base, ~#default_port_spec.offset, ~#icon321_port_spec.base, ~#icon321_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset, ~#ops.base, ~#ops.offset, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset, ~#hso_rfkill_ops.base, ~#hso_rfkill_ops.offset, ~#hso_type.base, ~#hso_type.offset, ~#hso_serial_ops.base, ~#hso_serial_ops.offset, ~#hso_driver.base, ~#hso_driver.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_error() returns (){
  loc5:
    assume !false;
    goto loc6;
  loc6:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation alloc_tty_driver(#in~lines : int) returns (#res.base : int, #res.offset : int){
    var #t~ret201.base : int, #t~ret201.offset : int;
    var #t~ret202 : int;
    var ~lines : int;
    var ~ret~215.base : int, ~ret~215.offset : int;
    var ~tmp~215.base : int, ~tmp~215.offset : int;
    var ~tmp___0~215 : int;

  loc7:
    ~lines := #in~lines;
    havoc ~ret~215.base, ~ret~215.offset;
    havoc ~tmp~215.base, ~tmp~215.offset;
    havoc ~tmp___0~215;
    call #t~ret201.base, #t~ret201.offset := __tty_alloc_driver(~lines, ~#__this_module.base, ~#__this_module.offset, 0);
    ~tmp~215.base, ~tmp~215.offset := #t~ret201.base, #t~ret201.offset;
    havoc #t~ret201.base, #t~ret201.offset;
    ~ret~215.base, ~ret~215.offset := ~tmp~215.base, ~tmp~215.offset;
    call #t~ret202 := IS_ERR(~ret~215.base, ~ret~215.offset);
    assume -9223372036854775808 <= #t~ret202 && #t~ret202 <= 9223372036854775807;
    ~tmp___0~215 := #t~ret202;
    havoc #t~ret202;
    assume ~tmp___0~215 != 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure alloc_tty_driver(#in~lines : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation ldv_mutex_unlock_17(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns (){
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;

  loc8:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    call ldv_mutex_unlock_mutex(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    return;
}

procedure ldv_mutex_unlock_17(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns ();
modifies ~ldv_mutex_mutex;

implementation hso_init() returns (#res : int){
    var #t~nondet1542.base : int, #t~nondet1542.offset : int;
    var #t~ret1543 : int;
    var #t~ret1544.base : int, #t~ret1544.offset : int;
    var #t~nondet1545.base : int, #t~nondet1545.offset : int;
    var #t~ret1546.base : int, #t~ret1546.offset : int;
    var #t~ret1581 : int;
    var #t~nondet1582.base : int, #t~nondet1582.offset : int;
    var #t~ret1583 : int;
    var #t~nondet1584.base : int, #t~nondet1584.offset : int;
    var #t~ret1585 : int;
    var #t~nondet1586.base : int, #t~nondet1586.offset : int;
    var #t~ret1587 : int;
    var #t~ret1588 : int;
    var ~i~1056 : int;
    var ~result~1056 : int;
    var ~#__key~1056.base : int, ~#__key~1056.offset : int;

  loc9:
    havoc ~i~1056;
    havoc ~result~1056;
    call ~#__key~1056.base, ~#__key~1056.offset := #Ultimate.alloc(8);
    call #t~nondet1542.base, #t~nondet1542.offset := #Ultimate.alloc(14);
    call #t~ret1543 := printk(#t~nondet1542.base, #t~nondet1542.offset);
    assume -2147483648 <= #t~ret1543 && #t~ret1543 <= 2147483647;
    havoc #t~nondet1542.base, #t~nondet1542.offset;
    havoc #t~ret1543;
    call #t~ret1544.base, #t~ret1544.offset := spinlock_check(~#serial_table_lock.base, ~#serial_table_lock.offset);
    havoc #t~ret1544.base, #t~ret1544.offset;
    call #t~nondet1545.base, #t~nondet1545.offset := #Ultimate.alloc(29);
    call __raw_spin_lock_init(~#serial_table_lock.base, ~#serial_table_lock.offset + 0 + 0, #t~nondet1545.base, #t~nondet1545.offset, ~#__key~1056.base, ~#__key~1056.offset);
    havoc #t~nondet1545.base, #t~nondet1545.offset;
    ~i~1056 := 0;
    goto loc10;
  loc10:
    goto loc10_0, loc10_1;
  loc10_0:
    assume ~i~1056 <= 255;
    ~serial_table.base, ~serial_table.offset := ~serial_table.base[~i~1056 := 0], ~serial_table.offset[~i~1056 := 0];
    ~i~1056 := ~i~1056 + 1;
    goto loc10;
  loc10_1:
    assume !(~i~1056 <= 255);
    call #t~ret1546.base, #t~ret1546.offset := alloc_tty_driver(256);
    ~tty_drv.base, ~tty_drv.offset := #t~ret1546.base, #t~ret1546.offset;
    havoc #t~ret1546.base, #t~ret1546.offset;
    assume (~tty_drv.base + ~tty_drv.offset) % 18446744073709551616 == 0;
    #res := -12;
    call ULTIMATE.dealloc(~#__key~1056.base, ~#__key~1056.offset);
    havoc ~#__key~1056.base, ~#__key~1056.offset;
    assume true;
    return;
}

procedure hso_init() returns (#res : int);
modifies ~serial_table.base, ~serial_table.offset, ~tty_drv.base, ~tty_drv.offset, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, #valid, #length;

implementation ldv_mutex_unlock_mutex(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc11:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    assume !(~ldv_mutex_mutex == 2);
    call ldv_error();
    return;
}

procedure ldv_mutex_unlock_mutex(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ~ldv_mutex_mutex;

implementation ULTIMATE.start() returns (){
    var #t~ret1617 : int;

  loc12:
    call ULTIMATE.init();
    call #t~ret1617 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~debug, ~tty_major, ~disable_net, ~#driver_name.base, ~#driver_name.offset, ~#tty_filename.base, ~#tty_filename.offset, ~version.base, ~version.offset, ~LDV_IN_INTERRUPT, ~ldv_mutex_cred_guard_mutex, ~ldv_mutex_lock, ~ldv_mutex_mutex, ~ldv_mutex_shared_int_lock, ~tty_drv.base, ~tty_drv.offset, ~serial_table.base, ~serial_table.offset, ~network_table.base, ~network_table.offset, ~#serial_table_lock.base, ~#serial_table_lock.offset, ~#default_port_spec.base, ~#default_port_spec.offset, ~#icon321_port_spec.base, ~#icon321_port_spec.offset, ~#hso_ids.base, ~#hso_ids.offset, ~#dev_attr_hsotype.base, ~#dev_attr_hsotype.offset, ~#ops.base, ~#ops.offset, ~#hso_netdev_ops.base, ~#hso_netdev_ops.offset, ~#hso_rfkill_ops.base, ~#hso_rfkill_ops.offset, ~#hso_type.base, ~#hso_type.offset, ~#hso_serial_ops.base, ~#hso_serial_ops.offset, ~#hso_driver.base, ~#hso_driver.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~LDV_IN_INTERRUPT;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_cred_guard_mutex, ~ldv_mutex_lock, ~ldv_mutex_mutex, ~ldv_mutex_shared_int_lock, ~serial_table.base, ~serial_table.offset, ~tty_drv.base, ~tty_drv.offset, ~network_table.base, ~network_table.offset, ~LDV_IN_INTERRUPT;

implementation ldv_initialize() returns (){
  loc13:
    ~ldv_mutex_cred_guard_mutex := 1;
    ~ldv_mutex_lock := 1;
    ~ldv_mutex_mutex := 1;
    ~ldv_mutex_shared_int_lock := 1;
    assume true;
    return;
}

procedure ldv_initialize() returns ();
modifies ~ldv_mutex_cred_guard_mutex, ~ldv_mutex_lock, ~ldv_mutex_mutex, ~ldv_mutex_shared_int_lock;

implementation spinlock_check(#in~lock.base : int, #in~lock.offset : int) returns (#res.base : int, #res.offset : int){
    var ~lock.base : int, ~lock.offset : int;

  loc14:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    #res.base, #res.offset := ~lock.base, ~lock.offset + 0 + 0;
    assume true;
    return;
}

procedure spinlock_check(#in~lock.base : int, #in~lock.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation IS_ERR(#in~ptr.base : int, #in~ptr.offset : int) returns (#res : int){
    var #t~ret25 : int;
    var ~ptr.base : int, ~ptr.offset : int;
    var ~tmp~31 : int;

  loc15:
    ~ptr.base, ~ptr.offset := #in~ptr.base, #in~ptr.offset;
    havoc ~tmp~31;
    call #t~ret25 := ldv__builtin_expect((if (~ptr.base + ~ptr.offset) % 18446744073709551616 > 18446744073709547520 then 1 else 0), 0);
    assume -9223372036854775808 <= #t~ret25 && #t~ret25 <= 9223372036854775807;
    ~tmp~31 := #t~ret25;
    havoc #t~ret25;
    #res := ~tmp~31;
    assume true;
    return;
}

procedure IS_ERR(#in~ptr.base : int, #in~ptr.offset : int) returns (#res : int);
modifies ;

implementation ldv__builtin_expect(#in~exp : int, #in~c : int) returns (#res : int){
    var ~exp : int;
    var ~c : int;

  loc16:
    ~exp := #in~exp;
    ~c := #in~c;
    #res := ~exp;
    assume true;
    return;
}

procedure ldv__builtin_expect(#in~exp : int, #in~c : int) returns (#res : int);
modifies ;

procedure tty_insert_flip_string_fixed_flag(#in~226.base : int, #in~226.offset : int, #in~227.base : int, #in~227.offset : int, #in~228 : int, #in~229 : int) returns (#res : int);
modifies ;

procedure usb_submit_urb(#in~178.base : int, #in~178.offset : int, #in~179 : int) returns (#res : int);
modifies ;

procedure remove_wait_queue(#in~57.base : int, #in~57.offset : int, #in~58.base : int, #in~58.offset : int) returns ();
modifies ;

procedure __xchg_wrong_size() returns ();
modifies ;

procedure tty_kref_put(#in~203.base : int, #in~203.offset : int) returns ();
modifies ;

procedure usb_set_interface(#in~191.base : int, #in~191.offset : int, #in~192 : int, #in~193 : int) returns (#res : int);
modifies ;

procedure tty_flip_buffer_push(#in~209.base : int, #in~209.offset : int) returns ();
modifies ;

procedure ethtool_op_get_link(#in~107.base : int, #in~107.offset : int) returns (#res : ~u32);
modifies ;

procedure usb_autopm_get_interface(#in~144.base : int, #in~144.offset : int) returns (#res : int);
modifies ;

procedure mutex_unlock(#in~35.base : int, #in~35.offset : int) returns ();
modifies ;

procedure rfkill_unregister(#in~237.base : int, #in~237.offset : int) returns ();
modifies ;

procedure __memcpy(#in~14.base : int, #in~14.offset : int, #in~15.base : int, #in~15.offset : int, #in~16 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure device_create_file(#in~86.base : int, #in~86.offset : int, #in~87.base : int, #in~87.offset : int) returns (#res : int);
modifies ;

procedure ldv_check_return_value(#in~1592 : int) returns ();
modifies ;

procedure alloc_netdev_mqs(#in~124 : int, #in~125.base : int, #in~125.offset : int, #in~126.base : int, #in~126.offset : int, #in~127 : int, #in~128 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure tasklet_kill(#in~134.base : int, #in~134.offset : int) returns ();
modifies ;

procedure mutex_lock(#in~36.base : int, #in~36.offset : int) returns ();
modifies ;

procedure __netif_schedule(#in~110.base : int, #in~110.offset : int) returns ();
modifies ;

procedure tty_unregister_device(#in~206.base : int, #in~206.offset : int, #in~207 : int) returns ();
modifies ;

procedure __kmalloc(#in~82 : int, #in~83 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure consume_skb(#in~97.base : int, #in~97.offset : int) returns ();
modifies ;

procedure register_netdev(#in~129.base : int, #in~129.offset : int) returns (#res : int);
modifies ;

procedure rfkill_alloc(#in~231.base : int, #in~231.offset : int, #in~232.base : int, #in~232.offset : int, #in~233 : int, #in~234.base : int, #in~234.offset : int, #in~235.base : int, #in~235.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure sprintf(#in~6.base : int, #in~6.offset : int, #in~7.base : int, #in~7.offset : int) returns (#res : int);
modifies ;

procedure usb_unlink_urb(#in~180.base : int, #in~180.offset : int) returns (#res : int);
modifies ;

procedure memcmp(#in~20.base : int, #in~20.offset : int, #in~21.base : int, #in~21.offset : int, #in~22 : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_irq(#in~45.base : int, #in~45.offset : int) returns ();
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure ldv_check_return_value_probe(#in~1593 : int) returns ();
modifies ;

procedure netif_rx(#in~122.base : int, #in~122.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock(#in~44.base : int, #in~44.offset : int) returns ();
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure dev_set_drvdata(#in~91.base : int, #in~91.offset : int, #in~92.base : int, #in~92.offset : int) returns (#res : int);
modifies ;

procedure printk(#in~2.base : int, #in~2.offset : int) returns (#res : int);
modifies ;

procedure tasklet_init(#in~135.base : int, #in~135.offset : int, #in~136.base : int, #in~136.offset : int, #in~137 : int) returns ();
modifies ;

procedure dev_err(#in~93.base : int, #in~93.offset : int, #in~94.base : int, #in~94.offset : int) returns (#res : int);
modifies ;

procedure cancel_work_sync(#in~66.base : int, #in~66.offset : int) returns (#res : ~bool);
modifies ;

procedure __mutex_init(#in~32.base : int, #in~32.offset : int, #in~33.base : int, #in~33.offset : int, #in~34.base : int, #in~34.offset : int) returns ();
modifies ;

procedure put_tty_driver(#in~198.base : int, #in~198.offset : int) returns ();
modifies ;

procedure _raw_spin_lock_irqsave(#in~43.base : int, #in~43.offset : int) returns (#res : int);
modifies ;

procedure rfkill_register(#in~236.base : int, #in~236.offset : int) returns (#res : int);
modifies ;

procedure add_wait_queue(#in~55.base : int, #in~55.offset : int, #in~56.base : int, #in~56.offset : int) returns ();
modifies ;

procedure tty_port_tty_get(#in~223.base : int, #in~223.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure tty_port_init(#in~217.base : int, #in~217.offset : int) returns ();
modifies ;

procedure lockdep_init_map(#in~28.base : int, #in~28.offset : int, #in~29.base : int, #in~29.offset : int, #in~30.base : int, #in~30.offset : int, #in~31 : int) returns ();
modifies ;

procedure ldv_handler_precall() returns ();
modifies ;

procedure schedule() returns ();
modifies ;

procedure usb_alloc_urb(#in~175 : int, #in~176 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure dev_get_drvdata(#in~90.base : int, #in~90.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __raw_spin_lock_init(#in~38.base : int, #in~38.offset : int, #in~39.base : int, #in~39.offset : int, #in~40.base : int, #in~40.offset : int) returns ();
modifies ;

procedure rfkill_destroy(#in~238.base : int, #in~238.offset : int) returns ();
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure usb_autopm_put_interface(#in~145.base : int, #in~145.offset : int) returns ();
modifies ;

procedure usb_deregister(#in~149.base : int, #in~149.offset : int) returns ();
modifies ;

procedure free_netdev(#in~109.base : int, #in~109.offset : int) returns ();
modifies ;

procedure __tasklet_hi_schedule(#in~132.base : int, #in~132.offset : int) returns ();
modifies ;

procedure tty_port_destroy(#in~222.base : int, #in~222.offset : int) returns ();
modifies ;

procedure usb_kill_urb(#in~181.base : int, #in~181.offset : int) returns ();
modifies ;

procedure kfree(#in~71.base : int, #in~71.offset : int) returns ();
modifies ;

procedure __netdev_alloc_skb(#in~103.base : int, #in~103.offset : int, #in~104 : int, #in~105 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];

procedure __dynamic_dev_dbg(#in~3.base : int, #in~3.offset : int, #in~4.base : int, #in~4.offset : int, #in~5.base : int, #in~5.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_error() returns ();
modifies ;

procedure usb_lock_device_for_reset(#in~141.base : int, #in~141.offset : int, #in~142.base : int, #in~142.offset : int) returns (#res : int);
modifies ;

procedure tty_wakeup(#in~216.base : int, #in~216.offset : int) returns ();
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];

procedure tty_set_operations(#in~199.base : int, #in~199.offset : int, #in~200.base : int, #in~200.offset : int) returns ();
modifies ;

procedure __bad_percpu_size() returns ();
modifies ;

procedure tty_termios_encode_baud_rate(#in~210.base : int, #in~210.offset : int, #in~211 : int, #in~212 : int) returns ();
modifies ;

procedure _raw_spin_unlock_irqrestore(#in~46.base : int, #in~46.offset : int, #in~47 : int) returns ();
modifies ;

procedure usb_control_msg(#in~182.base : int, #in~182.offset : int, #in~183 : int, #in~184 : int, #in~185 : int, #in~186 : int, #in~187 : int, #in~188.base : int, #in~188.offset : int, #in~189 : int, #in~190 : int) returns (#res : int);
modifies ;

procedure tty_register_driver(#in~204.base : int, #in~204.offset : int) returns (#res : int);
modifies ;

procedure __wake_up(#in~59.base : int, #in~59.offset : int, #in~60 : int, #in~61 : int, #in~62.base : int, #in~62.offset : int) returns ();
modifies ;

procedure usb_register_driver(#in~146.base : int, #in~146.offset : int, #in~147.base : int, #in~147.offset : int, #in~148.base : int, #in~148.offset : int) returns (#res : int);
modifies ;

procedure usb_free_urb(#in~177.base : int, #in~177.offset : int) returns ();
modifies ;

procedure memset(#in~17.base : int, #in~17.offset : int, #in~18 : int, #in~19 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure tty_encode_baud_rate(#in~213.base : int, #in~213.offset : int, #in~214 : int, #in~215 : int) returns ();
modifies ;

procedure default_wake_function(#in~48.base : int, #in~48.offset : int, #in~49 : int, #in~50 : int, #in~51.base : int, #in~51.offset : int) returns (#res : int);
modifies ;

procedure tty_hangup(#in~208.base : int, #in~208.offset : int) returns ();
modifies ;

procedure schedule_work(#in~65.base : int, #in~65.offset : int) returns (#res : ~bool);
modifies ;

procedure __init_work(#in~63.base : int, #in~63.offset : int, #in~64 : int) returns ();
modifies ;

procedure warn_slowpath_null(#in~23.base : int, #in~23.offset : int, #in~24 : int) returns ();
modifies ;

procedure skb_put(#in~98.base : int, #in~98.offset : int, #in~99 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_reset_device(#in~143.base : int, #in~143.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock_irq(#in~42.base : int, #in~42.offset : int) returns ();
modifies ;

procedure snprintf(#in~8.base : int, #in~8.offset : int, #in~9 : int, #in~10.base : int, #in~10.offset : int) returns (#res : int);
modifies ;

procedure tty_port_tty_set(#in~224.base : int, #in~224.offset : int, #in~225.base : int, #in~225.offset : int) returns ();
modifies ;

procedure __tty_alloc_driver(#in~195 : int, #in~196.base : int, #in~196.offset : int, #in~197 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __init_waitqueue_head(#in~52.base : int, #in~52.offset : int, #in~53.base : int, #in~53.offset : int, #in~54.base : int, #in~54.offset : int) returns ();
modifies ;

procedure dev_warn(#in~95.base : int, #in~95.offset : int, #in~96.base : int, #in~96.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock(#in~41.base : int, #in~41.offset : int) returns ();
modifies ;

procedure tty_port_register_device(#in~218.base : int, #in~218.offset : int, #in~219.base : int, #in~219.offset : int, #in~220 : int, #in~221.base : int, #in~221.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure unregister_netdev(#in~130.base : int, #in~130.offset : int) returns ();
modifies ;

procedure device_remove_file(#in~88.base : int, #in~88.offset : int, #in~89.base : int, #in~89.offset : int) returns ();
modifies ;

procedure netpoll_trap() returns (#res : int);
modifies ;

procedure tty_unregister_driver(#in~205.base : int, #in~205.offset : int) returns (#res : int);
modifies ;


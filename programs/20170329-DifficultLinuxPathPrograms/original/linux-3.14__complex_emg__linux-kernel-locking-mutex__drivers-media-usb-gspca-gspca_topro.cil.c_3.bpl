type STRUCT~static_key_mod;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~dev_pm_qos;
type STRUCT~task_struct;
type STRUCT~kernfs_open_node;
type STRUCT~kernfs_iattrs;
type STRUCT~vm_operations_struct;
type STRUCT~sock;
type STRUCT~user_namespace;
type STRUCT~pinctrl;
type STRUCT~pinctrl_state;
type STRUCT~dma_map_ops;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~acpi_device;
type STRUCT~dma_coherent_mem;
type STRUCT~device_node;
type STRUCT~iommu_group;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~pid_namespace;
type STRUCT~page;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~iovec;
type STRUCT~swap_info_struct;
type STRUCT~backing_dev_info;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~pipe_inode_info;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~nameidata;
type STRUCT~kstatfs;
type STRUCT~xol_area;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~assoc_array_ptr;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~ep_device;
type STRUCT~mon_bus;
type STRUCT~usb_tt;
type STRUCT~wusb_dev;
type STRUCT~scatterlist;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type STRUCT~vb2_queue;
type STRUCT~v4l2_ioctl_ops;
type STRUCT~v4l2_ctrl_helper;
type STRUCT~v4l2_m2m_ctx;
type STRUCT~tuner_setup;
type STRUCT~v4l2_subdev_fh;
type STRUCT~regulator_bulk_data;
type STRUCT~input_dev;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__s64 = int;
type ~__u64 = int;
type ~s8 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~kernel_ulong_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~qsize_t = int;
type ~ldv_func_ret_type = int;
type ~ldv_set = int;
type ~__kernel_suseconds_t = ~__kernel_long_t;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__le16 = ~__u16;
type ~__le32 = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint32_t = ~__u32;
type ~dma_addr_t = ~u64;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~jump_label_t = ~u64;
type ~projid_t = ~__kernel_uid32_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~v4l2_std_id = ~__u64;
const #funAddr~sd_s_ctrl.base : int;
const #funAddr~sd_s_ctrl.offset : int;
const #funAddr~sd_config.base : int;
const #funAddr~sd_config.offset : int;
const #funAddr~sd_init.base : int;
const #funAddr~sd_init.offset : int;
const #funAddr~sd_init_controls.base : int;
const #funAddr~sd_init_controls.offset : int;
const #funAddr~sd_start.base : int;
const #funAddr~sd_start.offset : int;
const #funAddr~sd_pkt_scan.base : int;
const #funAddr~sd_pkt_scan.offset : int;
const #funAddr~sd_isoc_init.base : int;
const #funAddr~sd_isoc_init.offset : int;
const #funAddr~sd_stopN.base : int;
const #funAddr~sd_stopN.offset : int;
const #funAddr~sd_dq_callback.base : int;
const #funAddr~sd_dq_callback.offset : int;
const #funAddr~sd_get_jcomp.base : int;
const #funAddr~sd_get_jcomp.offset : int;
const #funAddr~sd_set_jcomp.base : int;
const #funAddr~sd_set_jcomp.offset : int;
const #funAddr~sd_get_streamparm.base : int;
const #funAddr~sd_get_streamparm.offset : int;
const #funAddr~sd_set_streamparm.base : int;
const #funAddr~sd_set_streamparm.offset : int;
const #funAddr~sd_probe.base : int;
const #funAddr~sd_probe.offset : int;
const #funAddr~gspca_disconnect.base : int;
const #funAddr~gspca_disconnect.offset : int;
const #funAddr~gspca_suspend.base : int;
const #funAddr~gspca_suspend.offset : int;
const #funAddr~gspca_resume.base : int;
const #funAddr~gspca_resume.offset : int;
const #funAddr~sd_driver_exit.base : int;
const #funAddr~sd_driver_exit.offset : int;
const #funAddr~sd_driver_init.base : int;
const #funAddr~sd_driver_init.offset : int;
const ~usb_device_speed~USB_SPEED_UNKNOWN : int;
const ~usb_device_speed~USB_SPEED_LOW : int;
const ~usb_device_speed~USB_SPEED_FULL : int;
const ~usb_device_speed~USB_SPEED_HIGH : int;
const ~usb_device_speed~USB_SPEED_WIRELESS : int;
const ~usb_device_speed~USB_SPEED_SUPER : int;
const ~usb_device_state~USB_STATE_NOTATTACHED : int;
const ~usb_device_state~USB_STATE_ATTACHED : int;
const ~usb_device_state~USB_STATE_POWERED : int;
const ~usb_device_state~USB_STATE_RECONNECTING : int;
const ~usb_device_state~USB_STATE_UNAUTHENTICATED : int;
const ~usb_device_state~USB_STATE_DEFAULT : int;
const ~usb_device_state~USB_STATE_ADDRESS : int;
const ~usb_device_state~USB_STATE_CONFIGURED : int;
const ~usb_device_state~USB_STATE_SUSPENDED : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~usb_interface_condition~USB_INTERFACE_UNBOUND : int;
const ~usb_interface_condition~USB_INTERFACE_BINDING : int;
const ~usb_interface_condition~USB_INTERFACE_BOUND : int;
const ~usb_interface_condition~USB_INTERFACE_UNBINDING : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE : int;
const ~usb_device_removable~USB_DEVICE_FIXED : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~v4l2_priority~V4L2_PRIORITY_UNSET : int;
const ~v4l2_priority~V4L2_PRIORITY_BACKGROUND : int;
const ~v4l2_priority~V4L2_PRIORITY_INTERACTIVE : int;
const ~v4l2_priority~V4L2_PRIORITY_RECORD : int;
const ~v4l2_priority~V4L2_PRIORITY_DEFAULT : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BOOLEAN : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_MENU : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BUTTON : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER64 : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_CTRL_CLASS : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_STRING : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BITMASK : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER_MENU : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_FIXED : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB666_1X18 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_1X24 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_ARGB8888_1X32 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UV8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_2X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_2X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YDYUYDYV8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_1X20 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_1X20 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUV10_1X30 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_AYUV8_1X32 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_JPEG_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_S5C_UYVY_JPEG_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_AHSV8888_1X32 : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_CUSTOM : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_DEVNAME : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_I2C : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_OF : int;
const ~v4l2_mbus_type~V4L2_MBUS_PARALLEL : int;
const ~v4l2_mbus_type~V4L2_MBUS_BT656 : int;
const ~v4l2_mbus_type~V4L2_MBUS_CSI2 : int;
const ~v4l2_subdev_ir_mode~V4L2_SUBDEV_IR_MODE_PULSE_WIDTH : int;
const ~gspca_packet_type~DISCARD_PACKET : int;
const ~gspca_packet_type~FIRST_PACKET : int;
const ~gspca_packet_type~INTER_PACKET : int;
const ~gspca_packet_type~LAST_PACKET : int;
axiom #funAddr~sd_s_ctrl.base == -1 && #funAddr~sd_s_ctrl.offset == 0;
axiom #funAddr~sd_config.base == -1 && #funAddr~sd_config.offset == 1;
axiom #funAddr~sd_init.base == -1 && #funAddr~sd_init.offset == 2;
axiom #funAddr~sd_init_controls.base == -1 && #funAddr~sd_init_controls.offset == 3;
axiom #funAddr~sd_start.base == -1 && #funAddr~sd_start.offset == 4;
axiom #funAddr~sd_pkt_scan.base == -1 && #funAddr~sd_pkt_scan.offset == 5;
axiom #funAddr~sd_isoc_init.base == -1 && #funAddr~sd_isoc_init.offset == 6;
axiom #funAddr~sd_stopN.base == -1 && #funAddr~sd_stopN.offset == 7;
axiom #funAddr~sd_dq_callback.base == -1 && #funAddr~sd_dq_callback.offset == 8;
axiom #funAddr~sd_get_jcomp.base == -1 && #funAddr~sd_get_jcomp.offset == 9;
axiom #funAddr~sd_set_jcomp.base == -1 && #funAddr~sd_set_jcomp.offset == 10;
axiom #funAddr~sd_get_streamparm.base == -1 && #funAddr~sd_get_streamparm.offset == 11;
axiom #funAddr~sd_set_streamparm.base == -1 && #funAddr~sd_set_streamparm.offset == 12;
axiom #funAddr~sd_probe.base == -1 && #funAddr~sd_probe.offset == 13;
axiom #funAddr~gspca_disconnect.base == -1 && #funAddr~gspca_disconnect.offset == 14;
axiom #funAddr~gspca_suspend.base == -1 && #funAddr~gspca_suspend.offset == 15;
axiom #funAddr~gspca_resume.base == -1 && #funAddr~gspca_resume.offset == 16;
axiom #funAddr~sd_driver_exit.base == -1 && #funAddr~sd_driver_exit.offset == 17;
axiom #funAddr~sd_driver_init.base == -1 && #funAddr~sd_driver_init.offset == 18;
axiom ~usb_device_speed~USB_SPEED_UNKNOWN == 0;
axiom ~usb_device_speed~USB_SPEED_LOW == 1;
axiom ~usb_device_speed~USB_SPEED_FULL == 2;
axiom ~usb_device_speed~USB_SPEED_HIGH == 3;
axiom ~usb_device_speed~USB_SPEED_WIRELESS == 4;
axiom ~usb_device_speed~USB_SPEED_SUPER == 5;
axiom ~usb_device_state~USB_STATE_NOTATTACHED == 0;
axiom ~usb_device_state~USB_STATE_ATTACHED == 1;
axiom ~usb_device_state~USB_STATE_POWERED == 2;
axiom ~usb_device_state~USB_STATE_RECONNECTING == 3;
axiom ~usb_device_state~USB_STATE_UNAUTHENTICATED == 4;
axiom ~usb_device_state~USB_STATE_DEFAULT == 5;
axiom ~usb_device_state~USB_STATE_ADDRESS == 6;
axiom ~usb_device_state~USB_STATE_CONFIGURED == 7;
axiom ~usb_device_state~USB_STATE_SUSPENDED == 8;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBOUND == 0;
axiom ~usb_interface_condition~USB_INTERFACE_BINDING == 1;
axiom ~usb_interface_condition~USB_INTERFACE_BOUND == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBINDING == 3;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN == 0;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE == 1;
axiom ~usb_device_removable~USB_DEVICE_FIXED == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~v4l2_priority~V4L2_PRIORITY_UNSET == 0;
axiom ~v4l2_priority~V4L2_PRIORITY_BACKGROUND == 1;
axiom ~v4l2_priority~V4L2_PRIORITY_INTERACTIVE == 2;
axiom ~v4l2_priority~V4L2_PRIORITY_RECORD == 3;
axiom ~v4l2_priority~V4L2_PRIORITY_DEFAULT == 2;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER == 1;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BOOLEAN == 2;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_MENU == 3;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BUTTON == 4;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER64 == 5;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_CTRL_CLASS == 6;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_STRING == 7;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BITMASK == 8;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER_MENU == 9;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_FIXED == 1;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_BE == 4097;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_LE == 4098;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_BE == 4099;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_LE == 4100;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_BE == 4101;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_LE == 4102;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_BE == 4103;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_LE == 4104;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB666_1X18 == 4105;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_1X24 == 4106;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_BE == 4107;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_LE == 4108;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_ARGB8888_1X32 == 4109;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y8_1X8 == 8193;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UV8_1X8 == 8213;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1_5X8 == 8194;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1_5X8 == 8195;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1_5X8 == 8196;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1_5X8 == 8197;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_2X8 == 8198;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_2X8 == 8199;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_2X8 == 8200;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_2X8 == 8201;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y10_1X10 == 8202;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_2X10 == 8203;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_2X10 == 8204;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y12_1X12 == 8211;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1X16 == 8207;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1X16 == 8208;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1X16 == 8209;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1X16 == 8210;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YDYUYDYV8_1X16 == 8212;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_1X20 == 8205;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_1X20 == 8206;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUV10_1X30 == 8214;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_AYUV8_1X32 == 8215;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR8_1X8 == 12289;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG8_1X8 == 12307;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG8_1X8 == 12290;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB8_1X8 == 12308;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_ALAW8_1X8 == 12309;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_ALAW8_1X8 == 12310;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_ALAW8_1X8 == 12311;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_ALAW8_1X8 == 12312;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_DPCM8_1X8 == 12299;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_DPCM8_1X8 == 12300;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_DPCM8_1X8 == 12297;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_DPCM8_1X8 == 12301;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_BE == 12291;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_LE == 12292;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_BE == 12293;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_LE == 12294;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_1X10 == 12295;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_1X10 == 12302;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_1X10 == 12298;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_1X10 == 12303;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR12_1X12 == 12296;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG12_1X12 == 12304;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG12_1X12 == 12305;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB12_1X12 == 12306;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_JPEG_1X8 == 16385;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_S5C_UYVY_JPEG_1X8 == 20481;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_AHSV8888_1X32 == 24577;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_CUSTOM == 0;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_DEVNAME == 1;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_I2C == 2;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_OF == 3;
axiom ~v4l2_mbus_type~V4L2_MBUS_PARALLEL == 0;
axiom ~v4l2_mbus_type~V4L2_MBUS_BT656 == 1;
axiom ~v4l2_mbus_type~V4L2_MBUS_CSI2 == 2;
axiom ~v4l2_subdev_ir_mode~V4L2_SUBDEV_IR_MODE_PULSE_WIDTH == 0;
axiom ~gspca_packet_type~DISCARD_PACKET == 0;
axiom ~gspca_packet_type~FIRST_PACKET == 1;
axiom ~gspca_packet_type~INTER_PACKET == 2;
axiom ~gspca_packet_type~LAST_PACKET == 3;
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseComplement" } ~bitwiseComplement(in0 : int) returns (out : int);
var ~gspca_debug : int;

var ~force_sensor : int;

var ~ldv_0_ldv_param_13_1_default.base : int, ~ldv_0_ldv_param_13_1_default.offset : int;

var ~ldv_0_ldv_param_13_2_default : int;

var ~ldv_2_probe_retval_default : int;

var ~ldv_2_reset_flag_default : int;

var ~ldv_6_ret_default : int;

var ~ldv_statevar_0 : int;

var ~ldv_statevar_1 : int;

var ~ldv_statevar_2 : int;

var ~ldv_statevar_3 : int;

var ~ldv_statevar_6 : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~#jpeg_head.base : int, ~#jpeg_head.offset : int;

var ~#vga_mode.base : int, ~#vga_mode.offset : int;

var ~jpeg_q : [int]~u8;

var ~#rates.base : int, ~#rates.offset : int;

var ~#framerates.base : int, ~#framerates.offset : int;

var ~#rates_6810.base : int, ~#rates_6810.offset : int;

var ~#framerates_6810.base : int, ~#framerates_6810.offset : int;

var ~#DQT.base : int, ~#DQT.offset : int;

var ~#tp6810_cx_init_common.base : int, ~#tp6810_cx_init_common.offset : int;

var ~#tp6810_ov_init_common.base : int, ~#tp6810_ov_init_common.offset : int;

var ~#tp6810_bridge_start.base : int, ~#tp6810_bridge_start.offset : int;

var ~#tp6810_late_start.base : int, ~#tp6810_late_start.offset : int;

var ~#cx0342_timing_seq.base : int, ~#cx0342_timing_seq.offset : int;

var ~#color_null.base : int, ~#color_null.offset : int;

var ~#color_gain.base : int, ~#color_gain.offset : int;

var ~#sd_ctrl_ops.base : int, ~#sd_ctrl_ops.offset : int;

var ~#sd_desc.base : int, ~#sd_desc.offset : int;

var ~#device_table.base : int, ~#device_table.offset : int;

var ~#sd_driver.base : int, ~#sd_driver.offset : int;

var ~ldv_0_container_struct_gspca_dev_ptr.base : int, ~ldv_0_container_struct_gspca_dev_ptr.offset : int;

var ~ldv_0_container_struct_usb_device_id_ptr.base : int, ~ldv_0_container_struct_usb_device_id_ptr.offset : int;

var ~ldv_0_container_struct_v4l2_jpegcompression_ptr.base : int, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.offset : int;

var ~ldv_0_container_struct_v4l2_streamparm_ptr.base : int, ~ldv_0_container_struct_v4l2_streamparm_ptr.offset : int;

var ~ldv_1_container_struct_v4l2_ctrl_ptr.base : int, ~ldv_1_container_struct_v4l2_ctrl_ptr.offset : int;

var ~ldv_2_container_usb_driver.base : int, ~ldv_2_container_usb_driver.offset : int;

var ~ldv_2_ldv_param_13_1_default.base : int, ~ldv_2_ldv_param_13_1_default.offset : int;

var ~ldv_2_ldv_param_8_1_default.base : int, ~ldv_2_ldv_param_8_1_default.offset : int;

var ~ldv_2_resource_usb_interface.base : int, ~ldv_2_resource_usb_interface.offset : int;

var ~ldv_2_usb_device_usb_device.base : int, ~ldv_2_usb_device_usb_device.offset : int;

var ~ldv_3_container_usb_driver.base : int, ~ldv_3_container_usb_driver.offset : int;

var ~ldv_0_callback_config.base : int, ~ldv_0_callback_config.offset : int;

var ~ldv_0_callback_dq_callback.base : int, ~ldv_0_callback_dq_callback.offset : int;

var ~ldv_0_callback_get_jcomp.base : int, ~ldv_0_callback_get_jcomp.offset : int;

var ~ldv_0_callback_get_streamparm.base : int, ~ldv_0_callback_get_streamparm.offset : int;

var ~ldv_0_callback_init.base : int, ~ldv_0_callback_init.offset : int;

var ~ldv_0_callback_init_controls.base : int, ~ldv_0_callback_init_controls.offset : int;

var ~ldv_0_callback_isoc_init.base : int, ~ldv_0_callback_isoc_init.offset : int;

var ~ldv_0_callback_pkt_scan.base : int, ~ldv_0_callback_pkt_scan.offset : int;

var ~ldv_0_callback_set_jcomp.base : int, ~ldv_0_callback_set_jcomp.offset : int;

var ~ldv_0_callback_set_streamparm.base : int, ~ldv_0_callback_set_streamparm.offset : int;

var ~ldv_0_callback_start.base : int, ~ldv_0_callback_start.offset : int;

var ~ldv_0_callback_stopN.base : int, ~ldv_0_callback_stopN.offset : int;

var ~ldv_1_callback_s_ctrl.base : int, ~ldv_1_callback_s_ctrl.offset : int;

var ~ldv_2_callback_reset_resume.base : int, ~ldv_2_callback_reset_resume.offset : int;

var ~ldv_6_exit_sd_driver_exit_default.base : int, ~ldv_6_exit_sd_driver_exit_default.offset : int;

var ~ldv_6_init_sd_driver_init_default.base : int, ~ldv_6_init_sd_driver_init_default.offset : int;

var ~LDV_MUTEXES_i_mutex_of_inode : ~ldv_set;

var ~LDV_MUTEXES_lock : ~ldv_set;

var ~LDV_MUTEXES_lock_of_v4l2_ctrl_handler : ~ldv_set;

var ~LDV_MUTEXES_mutex_of_device : ~ldv_set;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_int : [int,int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

implementation ldv_usb_register_driver_23(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2.base : int, #in~ldv_func_arg2.offset : int, #in~ldv_func_arg3.base : int, #in~ldv_func_arg3.offset : int) returns (#res : int){
    var #t~ret19872 : int;
    var #t~ret19873 : int;
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;
    var ~ldv_func_arg2.base : int, ~ldv_func_arg2.offset : int;
    var ~ldv_func_arg3.base : int, ~ldv_func_arg3.offset : int;
    var ~ldv_func_res~962 : ~ldv_func_ret_type;
    var ~tmp~962 : int;
    var ~tmp___0~962 : int;

  loc0:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    ~ldv_func_arg2.base, ~ldv_func_arg2.offset := #in~ldv_func_arg2.base, #in~ldv_func_arg2.offset;
    ~ldv_func_arg3.base, ~ldv_func_arg3.offset := #in~ldv_func_arg3.base, #in~ldv_func_arg3.offset;
    havoc ~ldv_func_res~962;
    havoc ~tmp~962;
    havoc ~tmp___0~962;
    call #t~ret19872 := usb_register_driver(~ldv_func_arg1.base, ~ldv_func_arg1.offset, ~ldv_func_arg2.base, ~ldv_func_arg2.offset, ~ldv_func_arg3.base, ~ldv_func_arg3.offset);
    assume -2147483648 <= #t~ret19872 && #t~ret19872 <= 2147483647;
    ~tmp~962 := #t~ret19872;
    havoc #t~ret19872;
    ~ldv_func_res~962 := ~tmp~962;
    call #t~ret19873 := ldv_usb_register_driver(~ldv_func_res~962, ~ldv_func_arg1.base, ~ldv_func_arg1.offset, ~ldv_func_arg2.base, ~ldv_func_arg2.offset, ~ldv_func_arg3.base, ~ldv_func_arg3.offset);
    assume -2147483648 <= #t~ret19873 && #t~ret19873 <= 2147483647;
    ~tmp___0~962 := #t~ret19873;
    havoc #t~ret19873;
    #res := ~tmp___0~962;
    assume true;
    return;
}

procedure ldv_usb_register_driver_23(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2.base : int, #in~ldv_func_arg2.offset : int, #in~ldv_func_arg3.base : int, #in~ldv_func_arg3.offset : int) returns (#res : int);
modifies ~ldv_statevar_3, ~ldv_3_container_usb_driver.base, ~ldv_3_container_usb_driver.offset;

implementation ldv_usb_register_driver(#in~arg0 : int, #in~arg1.base : int, #in~arg1.offset : int, #in~arg2.base : int, #in~arg2.offset : int, #in~arg3.base : int, #in~arg3.offset : int) returns (#res : int){
    var #t~ret19852 : int;
    var #t~ret19853 : int;
    var ~arg0 : int;
    var ~arg1.base : int, ~arg1.offset : int;
    var ~arg2.base : int, ~arg2.offset : int;
    var ~arg3.base : int, ~arg3.offset : int;
    var ~ldv_5_usb_driver_usb_driver~912.base : int, ~ldv_5_usb_driver_usb_driver~912.offset : int;
    var ~tmp~912 : int;

  loc1:
    ~arg0 := #in~arg0;
    ~arg1.base, ~arg1.offset := #in~arg1.base, #in~arg1.offset;
    ~arg2.base, ~arg2.offset := #in~arg2.base, #in~arg2.offset;
    ~arg3.base, ~arg3.offset := #in~arg3.base, #in~arg3.offset;
    havoc ~ldv_5_usb_driver_usb_driver~912.base, ~ldv_5_usb_driver_usb_driver~912.offset;
    havoc ~tmp~912;
    call #t~ret19852 := ldv_pre_usb_register_driver();
    assume -2147483648 <= #t~ret19852 && #t~ret19852 <= 2147483647;
    ~arg0 := #t~ret19852;
    havoc #t~ret19852;
    call #t~ret19853 := ldv_undef_int();
    assume -2147483648 <= #t~ret19853 && #t~ret19853 <= 2147483647;
    ~tmp~912 := #t~ret19853;
    havoc #t~ret19853;
    assume !(~tmp~912 != 0);
    call ldv_assume((if ~arg0 != 0 then 1 else 0));
    #res := ~arg0;
    assume true;
    return;
}

procedure ldv_usb_register_driver(#in~arg0 : int, #in~arg1.base : int, #in~arg1.offset : int, #in~arg2.base : int, #in~arg2.offset : int, #in~arg3.base : int, #in~arg3.offset : int) returns (#res : int);
modifies ~ldv_statevar_3, ~ldv_3_container_usb_driver.base, ~ldv_3_container_usb_driver.offset;

implementation ldv_initialize_external_data() returns (){
  loc2:
    call ldv_allocate_external_0();
    assume true;
    return;
}

procedure ldv_initialize_external_data() returns ();
modifies ~ldv_0_container_struct_gspca_dev_ptr.base, ~ldv_0_container_struct_gspca_dev_ptr.offset, ~ldv_0_container_struct_usb_device_id_ptr.base, ~ldv_0_container_struct_usb_device_id_ptr.offset, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.base, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.offset, ~ldv_0_container_struct_v4l2_streamparm_ptr.base, ~ldv_0_container_struct_v4l2_streamparm_ptr.offset, ~ldv_0_ldv_param_13_1_default.base, ~ldv_0_ldv_param_13_1_default.offset, ~ldv_1_container_struct_v4l2_ctrl_ptr.base, ~ldv_1_container_struct_v4l2_ctrl_ptr.offset, ~ldv_2_ldv_param_13_1_default.base, ~ldv_2_ldv_param_13_1_default.offset, ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset, ~ldv_2_resource_usb_interface.base, ~ldv_2_resource_usb_interface.offset, ~ldv_2_usb_device_usb_device.base, ~ldv_2_usb_device_usb_device.offset;

implementation ldv_filter_positive_int(#in~val : int) returns (#res : int){
    var ~val : int;

  loc3:
    ~val := #in~val;
    call ldv_assume((if ~val <= 0 then 1 else 0));
    #res := ~val;
    assume true;
    return;
}

procedure ldv_filter_positive_int(#in~val : int) returns (#res : int);
modifies ;

implementation ldv_undef_int() returns (#res : int){
    var #t~nondet19880 : int;
    var ~tmp~994 : int;

  loc4:
    havoc ~tmp~994;
    assume -2147483648 <= #t~nondet19880 && #t~nondet19880 <= 2147483647;
    ~tmp~994 := #t~nondet19880;
    havoc #t~nondet19880;
    #res := ~tmp~994;
    assume true;
    return;
}

procedure ldv_undef_int() returns (#res : int);
modifies ;

implementation main() returns (#res : int){
    var #t~ret19836 : int;
    var ~tmp~723 : int;

  loc5:
    havoc ~tmp~723;
    call ldv_initialize();
    call ldv_initialize_external_data();
    ~ldv_statevar_6 := 11;
    ~ldv_statevar_0 := 5;
    ~ldv_statevar_1 := 5;
    ~ldv_2_reset_flag_default := 0;
    ~ldv_statevar_2 := 15;
    ~ldv_statevar_3 := 4;
    goto loc6;
  loc6:
    call #t~ret19836 := ldv_undef_int();
    assume -2147483648 <= #t~ret19836 && #t~ret19836 <= 2147483647;
    ~tmp~723 := #t~ret19836;
    havoc #t~ret19836;
    assume ~tmp~723 == 0;
    call ldv_entry_EMGentry_6(0, 0);
    goto loc6;
}

procedure main() returns (#res : int);
modifies ~ldv_statevar_6, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_2_reset_flag_default, ~ldv_statevar_2, ~ldv_statevar_3, ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_lock_of_v4l2_ctrl_handler, ~LDV_MUTEXES_mutex_of_device, ~ldv_0_container_struct_gspca_dev_ptr.base, ~ldv_0_container_struct_gspca_dev_ptr.offset, ~ldv_0_container_struct_usb_device_id_ptr.base, ~ldv_0_container_struct_usb_device_id_ptr.offset, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.base, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.offset, ~ldv_0_container_struct_v4l2_streamparm_ptr.base, ~ldv_0_container_struct_v4l2_streamparm_ptr.offset, ~ldv_0_ldv_param_13_1_default.base, ~ldv_0_ldv_param_13_1_default.offset, ~ldv_1_container_struct_v4l2_ctrl_ptr.base, ~ldv_1_container_struct_v4l2_ctrl_ptr.offset, ~ldv_2_ldv_param_13_1_default.base, ~ldv_2_ldv_param_13_1_default.offset, ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset, ~ldv_2_resource_usb_interface.base, ~ldv_2_resource_usb_interface.offset, ~ldv_2_usb_device_usb_device.base, ~ldv_2_usb_device_usb_device.offset, ~ldv_2_container_usb_driver.base, ~ldv_2_container_usb_driver.offset, #valid, #length, ~ldv_3_container_usb_driver.base, ~ldv_3_container_usb_driver.offset, ~ldv_6_ret_default, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_2_probe_retval_default;

implementation ldv_entry_EMGentry_6(#in~arg0.base : int, #in~arg0.offset : int) returns (){
    var #t~ret19832 : int;
    var #t~ret19833 : int;
    var #t~ret19834 : int;
    var #t~ret19835 : int;
    var ~arg0.base : int, ~arg0.offset : int;
    var ~tmp~689 : int;
    var ~tmp___0~689 : int;

  loc7:
    ~arg0.base, ~arg0.offset := #in~arg0.base, #in~arg0.offset;
    havoc ~tmp~689;
    havoc ~tmp___0~689;
    assume !(~ldv_statevar_6 == 2);
    assume !(~ldv_statevar_6 == 3);
    assume !(~ldv_statevar_6 == 4);
    assume !(~ldv_statevar_6 == 5);
    assume !(~ldv_statevar_6 == 6);
    assume !(~ldv_statevar_6 == 7);
    assume !(~ldv_statevar_6 == 8);
    goto loc8;
  loc8:
    goto loc8_0, loc8_1;
  loc8_0:
    assume ~ldv_statevar_6 == 10;
    call ldv_assume((if ~ldv_6_ret_default != 0 then 1 else 0));
    call ldv_check_final_state();
    return;
  loc8_1:
    assume !(~ldv_statevar_6 == 10);
    assume ~ldv_statevar_6 == 11;
    call ldv_assume((if ~ldv_statevar_3 == 4 then 1 else 0));
    call #t~ret19833 := ldv_EMGentry_init_sd_driver_init_6_11(~ldv_6_init_sd_driver_init_default.base, ~ldv_6_init_sd_driver_init_default.offset);
    assume -2147483648 <= #t~ret19833 && #t~ret19833 <= 2147483647;
    ~ldv_6_ret_default := #t~ret19833;
    havoc #t~ret19833;
    call #t~ret19834 := ldv_post_init(~ldv_6_ret_default);
    assume -2147483648 <= #t~ret19834 && #t~ret19834 <= 2147483647;
    ~ldv_6_ret_default := #t~ret19834;
    havoc #t~ret19834;
    call #t~ret19835 := ldv_undef_int();
    assume -2147483648 <= #t~ret19835 && #t~ret19835 <= 2147483647;
    ~tmp___0~689 := #t~ret19835;
    havoc #t~ret19835;
    assume !(~tmp___0~689 != 0);
    ~ldv_statevar_6 := 10;
    assume true;
    return;
}

procedure ldv_entry_EMGentry_6(#in~arg0.base : int, #in~arg0.offset : int) returns ();
modifies ~ldv_statevar_6, ~ldv_6_ret_default, ~ldv_statevar_0, ~ldv_statevar_1, #valid, #length, ~ldv_statevar_3, ~ldv_3_container_usb_driver.base, ~ldv_3_container_usb_driver.offset;

implementation ldv_assume(#in~expression : int) returns (){
    var ~expression : int;

  loc9:
    ~expression := #in~expression;
    assume !(~expression == 0);
    assume true;
    return;
}

procedure ldv_assume(#in~expression : int) returns ();
modifies ;

implementation ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(#in~expr : int) returns (){
    var ~expr : int;

  loc10:
    ~expr := #in~expr;
    assume ~expr == 0;
    assume !false;
    goto loc11;
  loc11:
    assert false;
}

procedure ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(#in~expr : int) returns ();
modifies ;

implementation ULTIMATE.init() returns (){
    var #t~nondet19808.base : int, #t~nondet19808.offset : int;
    var #t~nondet19810.base : int, #t~nondet19810.offset : int;
    var #t~union19881.head : int, #t~union19881.tail : int;
    var #t~union19882.__padding : [int]int, #t~union19882.dep_map.key.base : int, #t~union19882.dep_map.key.offset : int, #t~union19882.dep_map.class_cache.base : [int]int, #t~union19882.dep_map.class_cache.offset : [int]int, #t~union19882.dep_map.name.base : int, #t~union19882.dep_map.name.offset : int, #t~union19882.dep_map.cpu : int, #t~union19882.dep_map.ip : int;

  loc12:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~force_sensor := -1;
    ~ldv_0_ldv_param_13_1_default.base, ~ldv_0_ldv_param_13_1_default.offset := 0, 0;
    ~ldv_0_ldv_param_13_2_default := 0;
    ~ldv_2_probe_retval_default := 0;
    ~ldv_2_reset_flag_default := 0;
    ~ldv_6_ret_default := 0;
    ~ldv_statevar_0 := 0;
    ~ldv_statevar_1 := 0;
    ~ldv_statevar_2 := 0;
    ~ldv_statevar_3 := 0;
    ~ldv_statevar_6 := 0;
    call ~#jpeg_head.base, ~#jpeg_head.offset := #Ultimate.alloc(521);
    call write~int(255, ~#jpeg_head.base, ~#jpeg_head.offset + 0, 1);
    call write~int(216, ~#jpeg_head.base, ~#jpeg_head.offset + 1, 1);
    call write~int(255, ~#jpeg_head.base, ~#jpeg_head.offset + 2, 1);
    call write~int(219, ~#jpeg_head.base, ~#jpeg_head.offset + 3, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 4, 1);
    call write~int(132, ~#jpeg_head.base, ~#jpeg_head.offset + 5, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 6, 1);
    call write~int(16, ~#jpeg_head.base, ~#jpeg_head.offset + 7, 1);
    call write~int(11, ~#jpeg_head.base, ~#jpeg_head.offset + 8, 1);
    call write~int(12, ~#jpeg_head.base, ~#jpeg_head.offset + 9, 1);
    call write~int(14, ~#jpeg_head.base, ~#jpeg_head.offset + 10, 1);
    call write~int(12, ~#jpeg_head.base, ~#jpeg_head.offset + 11, 1);
    call write~int(10, ~#jpeg_head.base, ~#jpeg_head.offset + 12, 1);
    call write~int(16, ~#jpeg_head.base, ~#jpeg_head.offset + 13, 1);
    call write~int(14, ~#jpeg_head.base, ~#jpeg_head.offset + 14, 1);
    call write~int(13, ~#jpeg_head.base, ~#jpeg_head.offset + 15, 1);
    call write~int(14, ~#jpeg_head.base, ~#jpeg_head.offset + 16, 1);
    call write~int(18, ~#jpeg_head.base, ~#jpeg_head.offset + 17, 1);
    call write~int(17, ~#jpeg_head.base, ~#jpeg_head.offset + 18, 1);
    call write~int(16, ~#jpeg_head.base, ~#jpeg_head.offset + 19, 1);
    call write~int(19, ~#jpeg_head.base, ~#jpeg_head.offset + 20, 1);
    call write~int(24, ~#jpeg_head.base, ~#jpeg_head.offset + 21, 1);
    call write~int(40, ~#jpeg_head.base, ~#jpeg_head.offset + 22, 1);
    call write~int(26, ~#jpeg_head.base, ~#jpeg_head.offset + 23, 1);
    call write~int(24, ~#jpeg_head.base, ~#jpeg_head.offset + 24, 1);
    call write~int(22, ~#jpeg_head.base, ~#jpeg_head.offset + 25, 1);
    call write~int(22, ~#jpeg_head.base, ~#jpeg_head.offset + 26, 1);
    call write~int(24, ~#jpeg_head.base, ~#jpeg_head.offset + 27, 1);
    call write~int(49, ~#jpeg_head.base, ~#jpeg_head.offset + 28, 1);
    call write~int(35, ~#jpeg_head.base, ~#jpeg_head.offset + 29, 1);
    call write~int(37, ~#jpeg_head.base, ~#jpeg_head.offset + 30, 1);
    call write~int(29, ~#jpeg_head.base, ~#jpeg_head.offset + 31, 1);
    call write~int(40, ~#jpeg_head.base, ~#jpeg_head.offset + 32, 1);
    call write~int(58, ~#jpeg_head.base, ~#jpeg_head.offset + 33, 1);
    call write~int(51, ~#jpeg_head.base, ~#jpeg_head.offset + 34, 1);
    call write~int(61, ~#jpeg_head.base, ~#jpeg_head.offset + 35, 1);
    call write~int(60, ~#jpeg_head.base, ~#jpeg_head.offset + 36, 1);
    call write~int(57, ~#jpeg_head.base, ~#jpeg_head.offset + 37, 1);
    call write~int(51, ~#jpeg_head.base, ~#jpeg_head.offset + 38, 1);
    call write~int(56, ~#jpeg_head.base, ~#jpeg_head.offset + 39, 1);
    call write~int(55, ~#jpeg_head.base, ~#jpeg_head.offset + 40, 1);
    call write~int(64, ~#jpeg_head.base, ~#jpeg_head.offset + 41, 1);
    call write~int(72, ~#jpeg_head.base, ~#jpeg_head.offset + 42, 1);
    call write~int(92, ~#jpeg_head.base, ~#jpeg_head.offset + 43, 1);
    call write~int(78, ~#jpeg_head.base, ~#jpeg_head.offset + 44, 1);
    call write~int(64, ~#jpeg_head.base, ~#jpeg_head.offset + 45, 1);
    call write~int(68, ~#jpeg_head.base, ~#jpeg_head.offset + 46, 1);
    call write~int(87, ~#jpeg_head.base, ~#jpeg_head.offset + 47, 1);
    call write~int(69, ~#jpeg_head.base, ~#jpeg_head.offset + 48, 1);
    call write~int(55, ~#jpeg_head.base, ~#jpeg_head.offset + 49, 1);
    call write~int(56, ~#jpeg_head.base, ~#jpeg_head.offset + 50, 1);
    call write~int(80, ~#jpeg_head.base, ~#jpeg_head.offset + 51, 1);
    call write~int(109, ~#jpeg_head.base, ~#jpeg_head.offset + 52, 1);
    call write~int(81, ~#jpeg_head.base, ~#jpeg_head.offset + 53, 1);
    call write~int(87, ~#jpeg_head.base, ~#jpeg_head.offset + 54, 1);
    call write~int(95, ~#jpeg_head.base, ~#jpeg_head.offset + 55, 1);
    call write~int(98, ~#jpeg_head.base, ~#jpeg_head.offset + 56, 1);
    call write~int(103, ~#jpeg_head.base, ~#jpeg_head.offset + 57, 1);
    call write~int(104, ~#jpeg_head.base, ~#jpeg_head.offset + 58, 1);
    call write~int(103, ~#jpeg_head.base, ~#jpeg_head.offset + 59, 1);
    call write~int(62, ~#jpeg_head.base, ~#jpeg_head.offset + 60, 1);
    call write~int(77, ~#jpeg_head.base, ~#jpeg_head.offset + 61, 1);
    call write~int(113, ~#jpeg_head.base, ~#jpeg_head.offset + 62, 1);
    call write~int(121, ~#jpeg_head.base, ~#jpeg_head.offset + 63, 1);
    call write~int(112, ~#jpeg_head.base, ~#jpeg_head.offset + 64, 1);
    call write~int(100, ~#jpeg_head.base, ~#jpeg_head.offset + 65, 1);
    call write~int(120, ~#jpeg_head.base, ~#jpeg_head.offset + 66, 1);
    call write~int(92, ~#jpeg_head.base, ~#jpeg_head.offset + 67, 1);
    call write~int(101, ~#jpeg_head.base, ~#jpeg_head.offset + 68, 1);
    call write~int(103, ~#jpeg_head.base, ~#jpeg_head.offset + 69, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 70, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 71, 1);
    call write~int(17, ~#jpeg_head.base, ~#jpeg_head.offset + 72, 1);
    call write~int(18, ~#jpeg_head.base, ~#jpeg_head.offset + 73, 1);
    call write~int(18, ~#jpeg_head.base, ~#jpeg_head.offset + 74, 1);
    call write~int(24, ~#jpeg_head.base, ~#jpeg_head.offset + 75, 1);
    call write~int(21, ~#jpeg_head.base, ~#jpeg_head.offset + 76, 1);
    call write~int(24, ~#jpeg_head.base, ~#jpeg_head.offset + 77, 1);
    call write~int(47, ~#jpeg_head.base, ~#jpeg_head.offset + 78, 1);
    call write~int(26, ~#jpeg_head.base, ~#jpeg_head.offset + 79, 1);
    call write~int(26, ~#jpeg_head.base, ~#jpeg_head.offset + 80, 1);
    call write~int(47, ~#jpeg_head.base, ~#jpeg_head.offset + 81, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 82, 1);
    call write~int(66, ~#jpeg_head.base, ~#jpeg_head.offset + 83, 1);
    call write~int(56, ~#jpeg_head.base, ~#jpeg_head.offset + 84, 1);
    call write~int(66, ~#jpeg_head.base, ~#jpeg_head.offset + 85, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 86, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 87, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 88, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 89, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 90, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 91, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 92, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 93, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 94, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 95, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 96, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 97, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 98, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 99, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 100, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 101, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 102, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 103, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 104, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 105, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 106, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 107, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 108, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 109, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 110, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 111, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 112, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 113, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 114, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 115, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 116, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 117, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 118, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 119, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 120, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 121, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 122, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 123, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 124, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 125, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 126, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 127, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 128, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 129, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 130, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 131, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 132, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 133, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 134, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 135, 1);
    call write~int(255, ~#jpeg_head.base, ~#jpeg_head.offset + 136, 1);
    call write~int(196, ~#jpeg_head.base, ~#jpeg_head.offset + 137, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 138, 1);
    call write~int(94, ~#jpeg_head.base, ~#jpeg_head.offset + 139, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 140, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 141, 1);
    call write~int(2, ~#jpeg_head.base, ~#jpeg_head.offset + 142, 1);
    call write~int(3, ~#jpeg_head.base, ~#jpeg_head.offset + 143, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 144, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 145, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 146, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 147, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 148, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 149, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 150, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 151, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 152, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 153, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 154, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 155, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 156, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 157, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 158, 1);
    call write~int(2, ~#jpeg_head.base, ~#jpeg_head.offset + 159, 1);
    call write~int(3, ~#jpeg_head.base, ~#jpeg_head.offset + 160, 1);
    call write~int(4, ~#jpeg_head.base, ~#jpeg_head.offset + 161, 1);
    call write~int(5, ~#jpeg_head.base, ~#jpeg_head.offset + 162, 1);
    call write~int(6, ~#jpeg_head.base, ~#jpeg_head.offset + 163, 1);
    call write~int(7, ~#jpeg_head.base, ~#jpeg_head.offset + 164, 1);
    call write~int(8, ~#jpeg_head.base, ~#jpeg_head.offset + 165, 1);
    call write~int(9, ~#jpeg_head.base, ~#jpeg_head.offset + 166, 1);
    call write~int(16, ~#jpeg_head.base, ~#jpeg_head.offset + 167, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 168, 1);
    call write~int(2, ~#jpeg_head.base, ~#jpeg_head.offset + 169, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 170, 1);
    call write~int(2, ~#jpeg_head.base, ~#jpeg_head.offset + 171, 1);
    call write~int(4, ~#jpeg_head.base, ~#jpeg_head.offset + 172, 1);
    call write~int(4, ~#jpeg_head.base, ~#jpeg_head.offset + 173, 1);
    call write~int(3, ~#jpeg_head.base, ~#jpeg_head.offset + 174, 1);
    call write~int(4, ~#jpeg_head.base, ~#jpeg_head.offset + 175, 1);
    call write~int(7, ~#jpeg_head.base, ~#jpeg_head.offset + 176, 1);
    call write~int(5, ~#jpeg_head.base, ~#jpeg_head.offset + 177, 1);
    call write~int(4, ~#jpeg_head.base, ~#jpeg_head.offset + 178, 1);
    call write~int(6, ~#jpeg_head.base, ~#jpeg_head.offset + 179, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 180, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 181, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 182, 1);
    call write~int(87, ~#jpeg_head.base, ~#jpeg_head.offset + 183, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 184, 1);
    call write~int(2, ~#jpeg_head.base, ~#jpeg_head.offset + 185, 1);
    call write~int(3, ~#jpeg_head.base, ~#jpeg_head.offset + 186, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 187, 1);
    call write~int(17, ~#jpeg_head.base, ~#jpeg_head.offset + 188, 1);
    call write~int(4, ~#jpeg_head.base, ~#jpeg_head.offset + 189, 1);
    call write~int(18, ~#jpeg_head.base, ~#jpeg_head.offset + 190, 1);
    call write~int(33, ~#jpeg_head.base, ~#jpeg_head.offset + 191, 1);
    call write~int(49, ~#jpeg_head.base, ~#jpeg_head.offset + 192, 1);
    call write~int(19, ~#jpeg_head.base, ~#jpeg_head.offset + 193, 1);
    call write~int(65, ~#jpeg_head.base, ~#jpeg_head.offset + 194, 1);
    call write~int(81, ~#jpeg_head.base, ~#jpeg_head.offset + 195, 1);
    call write~int(97, ~#jpeg_head.base, ~#jpeg_head.offset + 196, 1);
    call write~int(5, ~#jpeg_head.base, ~#jpeg_head.offset + 197, 1);
    call write~int(34, ~#jpeg_head.base, ~#jpeg_head.offset + 198, 1);
    call write~int(50, ~#jpeg_head.base, ~#jpeg_head.offset + 199, 1);
    call write~int(20, ~#jpeg_head.base, ~#jpeg_head.offset + 200, 1);
    call write~int(113, ~#jpeg_head.base, ~#jpeg_head.offset + 201, 1);
    call write~int(129, ~#jpeg_head.base, ~#jpeg_head.offset + 202, 1);
    call write~int(145, ~#jpeg_head.base, ~#jpeg_head.offset + 203, 1);
    call write~int(21, ~#jpeg_head.base, ~#jpeg_head.offset + 204, 1);
    call write~int(35, ~#jpeg_head.base, ~#jpeg_head.offset + 205, 1);
    call write~int(66, ~#jpeg_head.base, ~#jpeg_head.offset + 206, 1);
    call write~int(82, ~#jpeg_head.base, ~#jpeg_head.offset + 207, 1);
    call write~int(98, ~#jpeg_head.base, ~#jpeg_head.offset + 208, 1);
    call write~int(161, ~#jpeg_head.base, ~#jpeg_head.offset + 209, 1);
    call write~int(177, ~#jpeg_head.base, ~#jpeg_head.offset + 210, 1);
    call write~int(6, ~#jpeg_head.base, ~#jpeg_head.offset + 211, 1);
    call write~int(51, ~#jpeg_head.base, ~#jpeg_head.offset + 212, 1);
    call write~int(114, ~#jpeg_head.base, ~#jpeg_head.offset + 213, 1);
    call write~int(193, ~#jpeg_head.base, ~#jpeg_head.offset + 214, 1);
    call write~int(209, ~#jpeg_head.base, ~#jpeg_head.offset + 215, 1);
    call write~int(36, ~#jpeg_head.base, ~#jpeg_head.offset + 216, 1);
    call write~int(67, ~#jpeg_head.base, ~#jpeg_head.offset + 217, 1);
    call write~int(83, ~#jpeg_head.base, ~#jpeg_head.offset + 218, 1);
    call write~int(130, ~#jpeg_head.base, ~#jpeg_head.offset + 219, 1);
    call write~int(22, ~#jpeg_head.base, ~#jpeg_head.offset + 220, 1);
    call write~int(52, ~#jpeg_head.base, ~#jpeg_head.offset + 221, 1);
    call write~int(146, ~#jpeg_head.base, ~#jpeg_head.offset + 222, 1);
    call write~int(162, ~#jpeg_head.base, ~#jpeg_head.offset + 223, 1);
    call write~int(225, ~#jpeg_head.base, ~#jpeg_head.offset + 224, 1);
    call write~int(241, ~#jpeg_head.base, ~#jpeg_head.offset + 225, 1);
    call write~int(240, ~#jpeg_head.base, ~#jpeg_head.offset + 226, 1);
    call write~int(7, ~#jpeg_head.base, ~#jpeg_head.offset + 227, 1);
    call write~int(8, ~#jpeg_head.base, ~#jpeg_head.offset + 228, 1);
    call write~int(23, ~#jpeg_head.base, ~#jpeg_head.offset + 229, 1);
    call write~int(24, ~#jpeg_head.base, ~#jpeg_head.offset + 230, 1);
    call write~int(37, ~#jpeg_head.base, ~#jpeg_head.offset + 231, 1);
    call write~int(38, ~#jpeg_head.base, ~#jpeg_head.offset + 232, 1);
    call write~int(39, ~#jpeg_head.base, ~#jpeg_head.offset + 233, 1);
    call write~int(40, ~#jpeg_head.base, ~#jpeg_head.offset + 234, 1);
    call write~int(53, ~#jpeg_head.base, ~#jpeg_head.offset + 235, 1);
    call write~int(54, ~#jpeg_head.base, ~#jpeg_head.offset + 236, 1);
    call write~int(55, ~#jpeg_head.base, ~#jpeg_head.offset + 237, 1);
    call write~int(56, ~#jpeg_head.base, ~#jpeg_head.offset + 238, 1);
    call write~int(68, ~#jpeg_head.base, ~#jpeg_head.offset + 239, 1);
    call write~int(69, ~#jpeg_head.base, ~#jpeg_head.offset + 240, 1);
    call write~int(70, ~#jpeg_head.base, ~#jpeg_head.offset + 241, 1);
    call write~int(71, ~#jpeg_head.base, ~#jpeg_head.offset + 242, 1);
    call write~int(72, ~#jpeg_head.base, ~#jpeg_head.offset + 243, 1);
    call write~int(84, ~#jpeg_head.base, ~#jpeg_head.offset + 244, 1);
    call write~int(85, ~#jpeg_head.base, ~#jpeg_head.offset + 245, 1);
    call write~int(86, ~#jpeg_head.base, ~#jpeg_head.offset + 246, 1);
    call write~int(87, ~#jpeg_head.base, ~#jpeg_head.offset + 247, 1);
    call write~int(88, ~#jpeg_head.base, ~#jpeg_head.offset + 248, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 249, 1);
    call write~int(100, ~#jpeg_head.base, ~#jpeg_head.offset + 250, 1);
    call write~int(101, ~#jpeg_head.base, ~#jpeg_head.offset + 251, 1);
    call write~int(102, ~#jpeg_head.base, ~#jpeg_head.offset + 252, 1);
    call write~int(103, ~#jpeg_head.base, ~#jpeg_head.offset + 253, 1);
    call write~int(104, ~#jpeg_head.base, ~#jpeg_head.offset + 254, 1);
    call write~int(115, ~#jpeg_head.base, ~#jpeg_head.offset + 255, 1);
    call write~int(116, ~#jpeg_head.base, ~#jpeg_head.offset + 256, 1);
    call write~int(117, ~#jpeg_head.base, ~#jpeg_head.offset + 257, 1);
    call write~int(118, ~#jpeg_head.base, ~#jpeg_head.offset + 258, 1);
    call write~int(119, ~#jpeg_head.base, ~#jpeg_head.offset + 259, 1);
    call write~int(120, ~#jpeg_head.base, ~#jpeg_head.offset + 260, 1);
    call write~int(131, ~#jpeg_head.base, ~#jpeg_head.offset + 261, 1);
    call write~int(132, ~#jpeg_head.base, ~#jpeg_head.offset + 262, 1);
    call write~int(133, ~#jpeg_head.base, ~#jpeg_head.offset + 263, 1);
    call write~int(134, ~#jpeg_head.base, ~#jpeg_head.offset + 264, 1);
    call write~int(135, ~#jpeg_head.base, ~#jpeg_head.offset + 265, 1);
    call write~int(136, ~#jpeg_head.base, ~#jpeg_head.offset + 266, 1);
    call write~int(147, ~#jpeg_head.base, ~#jpeg_head.offset + 267, 1);
    call write~int(148, ~#jpeg_head.base, ~#jpeg_head.offset + 268, 1);
    call write~int(149, ~#jpeg_head.base, ~#jpeg_head.offset + 269, 1);
    call write~int(150, ~#jpeg_head.base, ~#jpeg_head.offset + 270, 1);
    call write~int(151, ~#jpeg_head.base, ~#jpeg_head.offset + 271, 1);
    call write~int(152, ~#jpeg_head.base, ~#jpeg_head.offset + 272, 1);
    call write~int(163, ~#jpeg_head.base, ~#jpeg_head.offset + 273, 1);
    call write~int(164, ~#jpeg_head.base, ~#jpeg_head.offset + 274, 1);
    call write~int(165, ~#jpeg_head.base, ~#jpeg_head.offset + 275, 1);
    call write~int(166, ~#jpeg_head.base, ~#jpeg_head.offset + 276, 1);
    call write~int(167, ~#jpeg_head.base, ~#jpeg_head.offset + 277, 1);
    call write~int(168, ~#jpeg_head.base, ~#jpeg_head.offset + 278, 1);
    call write~int(178, ~#jpeg_head.base, ~#jpeg_head.offset + 279, 1);
    call write~int(179, ~#jpeg_head.base, ~#jpeg_head.offset + 280, 1);
    call write~int(180, ~#jpeg_head.base, ~#jpeg_head.offset + 281, 1);
    call write~int(181, ~#jpeg_head.base, ~#jpeg_head.offset + 282, 1);
    call write~int(182, ~#jpeg_head.base, ~#jpeg_head.offset + 283, 1);
    call write~int(183, ~#jpeg_head.base, ~#jpeg_head.offset + 284, 1);
    call write~int(184, ~#jpeg_head.base, ~#jpeg_head.offset + 285, 1);
    call write~int(194, ~#jpeg_head.base, ~#jpeg_head.offset + 286, 1);
    call write~int(195, ~#jpeg_head.base, ~#jpeg_head.offset + 287, 1);
    call write~int(196, ~#jpeg_head.base, ~#jpeg_head.offset + 288, 1);
    call write~int(197, ~#jpeg_head.base, ~#jpeg_head.offset + 289, 1);
    call write~int(198, ~#jpeg_head.base, ~#jpeg_head.offset + 290, 1);
    call write~int(199, ~#jpeg_head.base, ~#jpeg_head.offset + 291, 1);
    call write~int(200, ~#jpeg_head.base, ~#jpeg_head.offset + 292, 1);
    call write~int(210, ~#jpeg_head.base, ~#jpeg_head.offset + 293, 1);
    call write~int(211, ~#jpeg_head.base, ~#jpeg_head.offset + 294, 1);
    call write~int(212, ~#jpeg_head.base, ~#jpeg_head.offset + 295, 1);
    call write~int(213, ~#jpeg_head.base, ~#jpeg_head.offset + 296, 1);
    call write~int(214, ~#jpeg_head.base, ~#jpeg_head.offset + 297, 1);
    call write~int(215, ~#jpeg_head.base, ~#jpeg_head.offset + 298, 1);
    call write~int(216, ~#jpeg_head.base, ~#jpeg_head.offset + 299, 1);
    call write~int(226, ~#jpeg_head.base, ~#jpeg_head.offset + 300, 1);
    call write~int(227, ~#jpeg_head.base, ~#jpeg_head.offset + 301, 1);
    call write~int(228, ~#jpeg_head.base, ~#jpeg_head.offset + 302, 1);
    call write~int(229, ~#jpeg_head.base, ~#jpeg_head.offset + 303, 1);
    call write~int(230, ~#jpeg_head.base, ~#jpeg_head.offset + 304, 1);
    call write~int(231, ~#jpeg_head.base, ~#jpeg_head.offset + 305, 1);
    call write~int(232, ~#jpeg_head.base, ~#jpeg_head.offset + 306, 1);
    call write~int(242, ~#jpeg_head.base, ~#jpeg_head.offset + 307, 1);
    call write~int(243, ~#jpeg_head.base, ~#jpeg_head.offset + 308, 1);
    call write~int(244, ~#jpeg_head.base, ~#jpeg_head.offset + 309, 1);
    call write~int(245, ~#jpeg_head.base, ~#jpeg_head.offset + 310, 1);
    call write~int(246, ~#jpeg_head.base, ~#jpeg_head.offset + 311, 1);
    call write~int(247, ~#jpeg_head.base, ~#jpeg_head.offset + 312, 1);
    call write~int(248, ~#jpeg_head.base, ~#jpeg_head.offset + 313, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 314, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 315, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 316, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 317, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 318, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 319, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 320, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 321, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 322, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 323, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 324, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 325, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 326, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 327, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 328, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 329, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 330, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 331, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 332, 1);
    call write~int(2, ~#jpeg_head.base, ~#jpeg_head.offset + 333, 1);
    call write~int(3, ~#jpeg_head.base, ~#jpeg_head.offset + 334, 1);
    call write~int(4, ~#jpeg_head.base, ~#jpeg_head.offset + 335, 1);
    call write~int(5, ~#jpeg_head.base, ~#jpeg_head.offset + 336, 1);
    call write~int(6, ~#jpeg_head.base, ~#jpeg_head.offset + 337, 1);
    call write~int(7, ~#jpeg_head.base, ~#jpeg_head.offset + 338, 1);
    call write~int(8, ~#jpeg_head.base, ~#jpeg_head.offset + 339, 1);
    call write~int(9, ~#jpeg_head.base, ~#jpeg_head.offset + 340, 1);
    call write~int(17, ~#jpeg_head.base, ~#jpeg_head.offset + 341, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 342, 1);
    call write~int(2, ~#jpeg_head.base, ~#jpeg_head.offset + 343, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 344, 1);
    call write~int(2, ~#jpeg_head.base, ~#jpeg_head.offset + 345, 1);
    call write~int(4, ~#jpeg_head.base, ~#jpeg_head.offset + 346, 1);
    call write~int(4, ~#jpeg_head.base, ~#jpeg_head.offset + 347, 1);
    call write~int(3, ~#jpeg_head.base, ~#jpeg_head.offset + 348, 1);
    call write~int(4, ~#jpeg_head.base, ~#jpeg_head.offset + 349, 1);
    call write~int(7, ~#jpeg_head.base, ~#jpeg_head.offset + 350, 1);
    call write~int(5, ~#jpeg_head.base, ~#jpeg_head.offset + 351, 1);
    call write~int(4, ~#jpeg_head.base, ~#jpeg_head.offset + 352, 1);
    call write~int(6, ~#jpeg_head.base, ~#jpeg_head.offset + 353, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 354, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 355, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 356, 1);
    call write~int(87, ~#jpeg_head.base, ~#jpeg_head.offset + 357, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 358, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 359, 1);
    call write~int(17, ~#jpeg_head.base, ~#jpeg_head.offset + 360, 1);
    call write~int(2, ~#jpeg_head.base, ~#jpeg_head.offset + 361, 1);
    call write~int(33, ~#jpeg_head.base, ~#jpeg_head.offset + 362, 1);
    call write~int(3, ~#jpeg_head.base, ~#jpeg_head.offset + 363, 1);
    call write~int(18, ~#jpeg_head.base, ~#jpeg_head.offset + 364, 1);
    call write~int(49, ~#jpeg_head.base, ~#jpeg_head.offset + 365, 1);
    call write~int(65, ~#jpeg_head.base, ~#jpeg_head.offset + 366, 1);
    call write~int(19, ~#jpeg_head.base, ~#jpeg_head.offset + 367, 1);
    call write~int(34, ~#jpeg_head.base, ~#jpeg_head.offset + 368, 1);
    call write~int(81, ~#jpeg_head.base, ~#jpeg_head.offset + 369, 1);
    call write~int(97, ~#jpeg_head.base, ~#jpeg_head.offset + 370, 1);
    call write~int(4, ~#jpeg_head.base, ~#jpeg_head.offset + 371, 1);
    call write~int(50, ~#jpeg_head.base, ~#jpeg_head.offset + 372, 1);
    call write~int(113, ~#jpeg_head.base, ~#jpeg_head.offset + 373, 1);
    call write~int(5, ~#jpeg_head.base, ~#jpeg_head.offset + 374, 1);
    call write~int(20, ~#jpeg_head.base, ~#jpeg_head.offset + 375, 1);
    call write~int(35, ~#jpeg_head.base, ~#jpeg_head.offset + 376, 1);
    call write~int(66, ~#jpeg_head.base, ~#jpeg_head.offset + 377, 1);
    call write~int(51, ~#jpeg_head.base, ~#jpeg_head.offset + 378, 1);
    call write~int(82, ~#jpeg_head.base, ~#jpeg_head.offset + 379, 1);
    call write~int(129, ~#jpeg_head.base, ~#jpeg_head.offset + 380, 1);
    call write~int(145, ~#jpeg_head.base, ~#jpeg_head.offset + 381, 1);
    call write~int(161, ~#jpeg_head.base, ~#jpeg_head.offset + 382, 1);
    call write~int(177, ~#jpeg_head.base, ~#jpeg_head.offset + 383, 1);
    call write~int(240, ~#jpeg_head.base, ~#jpeg_head.offset + 384, 1);
    call write~int(6, ~#jpeg_head.base, ~#jpeg_head.offset + 385, 1);
    call write~int(21, ~#jpeg_head.base, ~#jpeg_head.offset + 386, 1);
    call write~int(193, ~#jpeg_head.base, ~#jpeg_head.offset + 387, 1);
    call write~int(209, ~#jpeg_head.base, ~#jpeg_head.offset + 388, 1);
    call write~int(225, ~#jpeg_head.base, ~#jpeg_head.offset + 389, 1);
    call write~int(36, ~#jpeg_head.base, ~#jpeg_head.offset + 390, 1);
    call write~int(67, ~#jpeg_head.base, ~#jpeg_head.offset + 391, 1);
    call write~int(98, ~#jpeg_head.base, ~#jpeg_head.offset + 392, 1);
    call write~int(241, ~#jpeg_head.base, ~#jpeg_head.offset + 393, 1);
    call write~int(22, ~#jpeg_head.base, ~#jpeg_head.offset + 394, 1);
    call write~int(37, ~#jpeg_head.base, ~#jpeg_head.offset + 395, 1);
    call write~int(52, ~#jpeg_head.base, ~#jpeg_head.offset + 396, 1);
    call write~int(83, ~#jpeg_head.base, ~#jpeg_head.offset + 397, 1);
    call write~int(114, ~#jpeg_head.base, ~#jpeg_head.offset + 398, 1);
    call write~int(130, ~#jpeg_head.base, ~#jpeg_head.offset + 399, 1);
    call write~int(146, ~#jpeg_head.base, ~#jpeg_head.offset + 400, 1);
    call write~int(7, ~#jpeg_head.base, ~#jpeg_head.offset + 401, 1);
    call write~int(8, ~#jpeg_head.base, ~#jpeg_head.offset + 402, 1);
    call write~int(23, ~#jpeg_head.base, ~#jpeg_head.offset + 403, 1);
    call write~int(24, ~#jpeg_head.base, ~#jpeg_head.offset + 404, 1);
    call write~int(38, ~#jpeg_head.base, ~#jpeg_head.offset + 405, 1);
    call write~int(39, ~#jpeg_head.base, ~#jpeg_head.offset + 406, 1);
    call write~int(40, ~#jpeg_head.base, ~#jpeg_head.offset + 407, 1);
    call write~int(53, ~#jpeg_head.base, ~#jpeg_head.offset + 408, 1);
    call write~int(54, ~#jpeg_head.base, ~#jpeg_head.offset + 409, 1);
    call write~int(55, ~#jpeg_head.base, ~#jpeg_head.offset + 410, 1);
    call write~int(56, ~#jpeg_head.base, ~#jpeg_head.offset + 411, 1);
    call write~int(68, ~#jpeg_head.base, ~#jpeg_head.offset + 412, 1);
    call write~int(69, ~#jpeg_head.base, ~#jpeg_head.offset + 413, 1);
    call write~int(70, ~#jpeg_head.base, ~#jpeg_head.offset + 414, 1);
    call write~int(71, ~#jpeg_head.base, ~#jpeg_head.offset + 415, 1);
    call write~int(72, ~#jpeg_head.base, ~#jpeg_head.offset + 416, 1);
    call write~int(84, ~#jpeg_head.base, ~#jpeg_head.offset + 417, 1);
    call write~int(85, ~#jpeg_head.base, ~#jpeg_head.offset + 418, 1);
    call write~int(86, ~#jpeg_head.base, ~#jpeg_head.offset + 419, 1);
    call write~int(87, ~#jpeg_head.base, ~#jpeg_head.offset + 420, 1);
    call write~int(88, ~#jpeg_head.base, ~#jpeg_head.offset + 421, 1);
    call write~int(99, ~#jpeg_head.base, ~#jpeg_head.offset + 422, 1);
    call write~int(100, ~#jpeg_head.base, ~#jpeg_head.offset + 423, 1);
    call write~int(101, ~#jpeg_head.base, ~#jpeg_head.offset + 424, 1);
    call write~int(102, ~#jpeg_head.base, ~#jpeg_head.offset + 425, 1);
    call write~int(103, ~#jpeg_head.base, ~#jpeg_head.offset + 426, 1);
    call write~int(104, ~#jpeg_head.base, ~#jpeg_head.offset + 427, 1);
    call write~int(115, ~#jpeg_head.base, ~#jpeg_head.offset + 428, 1);
    call write~int(116, ~#jpeg_head.base, ~#jpeg_head.offset + 429, 1);
    call write~int(117, ~#jpeg_head.base, ~#jpeg_head.offset + 430, 1);
    call write~int(118, ~#jpeg_head.base, ~#jpeg_head.offset + 431, 1);
    call write~int(119, ~#jpeg_head.base, ~#jpeg_head.offset + 432, 1);
    call write~int(120, ~#jpeg_head.base, ~#jpeg_head.offset + 433, 1);
    call write~int(131, ~#jpeg_head.base, ~#jpeg_head.offset + 434, 1);
    call write~int(132, ~#jpeg_head.base, ~#jpeg_head.offset + 435, 1);
    call write~int(133, ~#jpeg_head.base, ~#jpeg_head.offset + 436, 1);
    call write~int(134, ~#jpeg_head.base, ~#jpeg_head.offset + 437, 1);
    call write~int(135, ~#jpeg_head.base, ~#jpeg_head.offset + 438, 1);
    call write~int(136, ~#jpeg_head.base, ~#jpeg_head.offset + 439, 1);
    call write~int(147, ~#jpeg_head.base, ~#jpeg_head.offset + 440, 1);
    call write~int(148, ~#jpeg_head.base, ~#jpeg_head.offset + 441, 1);
    call write~int(149, ~#jpeg_head.base, ~#jpeg_head.offset + 442, 1);
    call write~int(150, ~#jpeg_head.base, ~#jpeg_head.offset + 443, 1);
    call write~int(151, ~#jpeg_head.base, ~#jpeg_head.offset + 444, 1);
    call write~int(152, ~#jpeg_head.base, ~#jpeg_head.offset + 445, 1);
    call write~int(162, ~#jpeg_head.base, ~#jpeg_head.offset + 446, 1);
    call write~int(163, ~#jpeg_head.base, ~#jpeg_head.offset + 447, 1);
    call write~int(164, ~#jpeg_head.base, ~#jpeg_head.offset + 448, 1);
    call write~int(165, ~#jpeg_head.base, ~#jpeg_head.offset + 449, 1);
    call write~int(166, ~#jpeg_head.base, ~#jpeg_head.offset + 450, 1);
    call write~int(167, ~#jpeg_head.base, ~#jpeg_head.offset + 451, 1);
    call write~int(168, ~#jpeg_head.base, ~#jpeg_head.offset + 452, 1);
    call write~int(178, ~#jpeg_head.base, ~#jpeg_head.offset + 453, 1);
    call write~int(179, ~#jpeg_head.base, ~#jpeg_head.offset + 454, 1);
    call write~int(180, ~#jpeg_head.base, ~#jpeg_head.offset + 455, 1);
    call write~int(181, ~#jpeg_head.base, ~#jpeg_head.offset + 456, 1);
    call write~int(182, ~#jpeg_head.base, ~#jpeg_head.offset + 457, 1);
    call write~int(183, ~#jpeg_head.base, ~#jpeg_head.offset + 458, 1);
    call write~int(184, ~#jpeg_head.base, ~#jpeg_head.offset + 459, 1);
    call write~int(194, ~#jpeg_head.base, ~#jpeg_head.offset + 460, 1);
    call write~int(195, ~#jpeg_head.base, ~#jpeg_head.offset + 461, 1);
    call write~int(196, ~#jpeg_head.base, ~#jpeg_head.offset + 462, 1);
    call write~int(197, ~#jpeg_head.base, ~#jpeg_head.offset + 463, 1);
    call write~int(198, ~#jpeg_head.base, ~#jpeg_head.offset + 464, 1);
    call write~int(199, ~#jpeg_head.base, ~#jpeg_head.offset + 465, 1);
    call write~int(200, ~#jpeg_head.base, ~#jpeg_head.offset + 466, 1);
    call write~int(210, ~#jpeg_head.base, ~#jpeg_head.offset + 467, 1);
    call write~int(211, ~#jpeg_head.base, ~#jpeg_head.offset + 468, 1);
    call write~int(212, ~#jpeg_head.base, ~#jpeg_head.offset + 469, 1);
    call write~int(213, ~#jpeg_head.base, ~#jpeg_head.offset + 470, 1);
    call write~int(214, ~#jpeg_head.base, ~#jpeg_head.offset + 471, 1);
    call write~int(215, ~#jpeg_head.base, ~#jpeg_head.offset + 472, 1);
    call write~int(216, ~#jpeg_head.base, ~#jpeg_head.offset + 473, 1);
    call write~int(226, ~#jpeg_head.base, ~#jpeg_head.offset + 474, 1);
    call write~int(227, ~#jpeg_head.base, ~#jpeg_head.offset + 475, 1);
    call write~int(228, ~#jpeg_head.base, ~#jpeg_head.offset + 476, 1);
    call write~int(229, ~#jpeg_head.base, ~#jpeg_head.offset + 477, 1);
    call write~int(230, ~#jpeg_head.base, ~#jpeg_head.offset + 478, 1);
    call write~int(231, ~#jpeg_head.base, ~#jpeg_head.offset + 479, 1);
    call write~int(232, ~#jpeg_head.base, ~#jpeg_head.offset + 480, 1);
    call write~int(242, ~#jpeg_head.base, ~#jpeg_head.offset + 481, 1);
    call write~int(243, ~#jpeg_head.base, ~#jpeg_head.offset + 482, 1);
    call write~int(244, ~#jpeg_head.base, ~#jpeg_head.offset + 483, 1);
    call write~int(245, ~#jpeg_head.base, ~#jpeg_head.offset + 484, 1);
    call write~int(246, ~#jpeg_head.base, ~#jpeg_head.offset + 485, 1);
    call write~int(247, ~#jpeg_head.base, ~#jpeg_head.offset + 486, 1);
    call write~int(248, ~#jpeg_head.base, ~#jpeg_head.offset + 487, 1);
    call write~int(255, ~#jpeg_head.base, ~#jpeg_head.offset + 488, 1);
    call write~int(192, ~#jpeg_head.base, ~#jpeg_head.offset + 489, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 490, 1);
    call write~int(17, ~#jpeg_head.base, ~#jpeg_head.offset + 491, 1);
    call write~int(8, ~#jpeg_head.base, ~#jpeg_head.offset + 492, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 493, 1);
    call write~int(224, ~#jpeg_head.base, ~#jpeg_head.offset + 494, 1);
    call write~int(2, ~#jpeg_head.base, ~#jpeg_head.offset + 495, 1);
    call write~int(128, ~#jpeg_head.base, ~#jpeg_head.offset + 496, 1);
    call write~int(3, ~#jpeg_head.base, ~#jpeg_head.offset + 497, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 498, 1);
    call write~int(33, ~#jpeg_head.base, ~#jpeg_head.offset + 499, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 500, 1);
    call write~int(2, ~#jpeg_head.base, ~#jpeg_head.offset + 501, 1);
    call write~int(17, ~#jpeg_head.base, ~#jpeg_head.offset + 502, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 503, 1);
    call write~int(3, ~#jpeg_head.base, ~#jpeg_head.offset + 504, 1);
    call write~int(17, ~#jpeg_head.base, ~#jpeg_head.offset + 505, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 506, 1);
    call write~int(255, ~#jpeg_head.base, ~#jpeg_head.offset + 507, 1);
    call write~int(218, ~#jpeg_head.base, ~#jpeg_head.offset + 508, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 509, 1);
    call write~int(12, ~#jpeg_head.base, ~#jpeg_head.offset + 510, 1);
    call write~int(3, ~#jpeg_head.base, ~#jpeg_head.offset + 511, 1);
    call write~int(1, ~#jpeg_head.base, ~#jpeg_head.offset + 512, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 513, 1);
    call write~int(2, ~#jpeg_head.base, ~#jpeg_head.offset + 514, 1);
    call write~int(17, ~#jpeg_head.base, ~#jpeg_head.offset + 515, 1);
    call write~int(3, ~#jpeg_head.base, ~#jpeg_head.offset + 516, 1);
    call write~int(17, ~#jpeg_head.base, ~#jpeg_head.offset + 517, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 518, 1);
    call write~int(63, ~#jpeg_head.base, ~#jpeg_head.offset + 519, 1);
    call write~int(0, ~#jpeg_head.base, ~#jpeg_head.offset + 520, 1);
    call ~#vga_mode.base, ~#vga_mode.offset := #Ultimate.alloc(64);
    call write~int(320, ~#vga_mode.base, ~#vga_mode.offset + 0 + 0, 4);
    call write~int(240, ~#vga_mode.base, ~#vga_mode.offset + 0 + 4, 4);
    call write~int(1195724874, ~#vga_mode.base, ~#vga_mode.offset + 0 + 8, 4);
    call write~int(1, ~#vga_mode.base, ~#vga_mode.offset + 0 + 12, 4);
    call write~int(320, ~#vga_mode.base, ~#vga_mode.offset + 0 + 16, 4);
    call write~int(38990, ~#vga_mode.base, ~#vga_mode.offset + 0 + 20, 4);
    call write~int(7, ~#vga_mode.base, ~#vga_mode.offset + 0 + 24, 4);
    call write~int(0, ~#vga_mode.base, ~#vga_mode.offset + 0 + 28, 4);
    call write~int(640, ~#vga_mode.base, ~#vga_mode.offset + 32 + 0, 4);
    call write~int(480, ~#vga_mode.base, ~#vga_mode.offset + 32 + 4, 4);
    call write~int(1195724874, ~#vga_mode.base, ~#vga_mode.offset + 32 + 8, 4);
    call write~int(1, ~#vga_mode.base, ~#vga_mode.offset + 32 + 12, 4);
    call write~int(640, ~#vga_mode.base, ~#vga_mode.offset + 32 + 16, 4);
    call write~int(115790, ~#vga_mode.base, ~#vga_mode.offset + 32 + 20, 4);
    call write~int(7, ~#vga_mode.base, ~#vga_mode.offset + 32 + 24, 4);
    call write~int(0, ~#vga_mode.base, ~#vga_mode.offset + 32 + 28, 4);
    ~jpeg_q := ~jpeg_q[0 := 88];
    ~jpeg_q := ~jpeg_q[1 := 77];
    ~jpeg_q := ~jpeg_q[2 := 67];
    ~jpeg_q := ~jpeg_q[3 := 57];
    ~jpeg_q := ~jpeg_q[4 := 55];
    ~jpeg_q := ~jpeg_q[5 := 55];
    ~jpeg_q := ~jpeg_q[6 := 45];
    ~jpeg_q := ~jpeg_q[7 := 45];
    ~jpeg_q := ~jpeg_q[8 := 36];
    ~jpeg_q := ~jpeg_q[9 := 36];
    ~jpeg_q := ~jpeg_q[10 := 30];
    ~jpeg_q := ~jpeg_q[11 := 30];
    ~jpeg_q := ~jpeg_q[12 := 26];
    ~jpeg_q := ~jpeg_q[13 := 26];
    ~jpeg_q := ~jpeg_q[14 := 22];
    ~jpeg_q := ~jpeg_q[15 := 22];
    ~jpeg_q := ~jpeg_q[16 := 94];
    call ~#rates.base, ~#rates.offset := #Ultimate.alloc(6);
    call write~int(30, ~#rates.base, ~#rates.offset + 0, 1);
    call write~int(20, ~#rates.base, ~#rates.offset + 1, 1);
    call write~int(15, ~#rates.base, ~#rates.offset + 2, 1);
    call write~int(10, ~#rates.base, ~#rates.offset + 3, 1);
    call write~int(7, ~#rates.base, ~#rates.offset + 4, 1);
    call write~int(5, ~#rates.base, ~#rates.offset + 5, 1);
    call ~#framerates.base, ~#framerates.offset := #Ultimate.alloc(24);
    call write~$Pointer$(~#rates.base, ~#rates.offset, ~#framerates.base, ~#framerates.offset + 0 + 0, 8);
    call write~int(6, ~#framerates.base, ~#framerates.offset + 0 + 8, 4);
    call write~$Pointer$(~#rates.base, ~#rates.offset, ~#framerates.base, ~#framerates.offset + 12 + 0, 8);
    call write~int(6, ~#framerates.base, ~#framerates.offset + 12 + 8, 4);
    call ~#rates_6810.base, ~#rates_6810.offset := #Ultimate.alloc(5);
    call write~int(30, ~#rates_6810.base, ~#rates_6810.offset + 0, 1);
    call write~int(15, ~#rates_6810.base, ~#rates_6810.offset + 1, 1);
    call write~int(10, ~#rates_6810.base, ~#rates_6810.offset + 2, 1);
    call write~int(7, ~#rates_6810.base, ~#rates_6810.offset + 3, 1);
    call write~int(5, ~#rates_6810.base, ~#rates_6810.offset + 4, 1);
    call ~#framerates_6810.base, ~#framerates_6810.offset := #Ultimate.alloc(24);
    call write~$Pointer$(~#rates_6810.base, ~#rates_6810.offset, ~#framerates_6810.base, ~#framerates_6810.offset + 0 + 0, 8);
    call write~int(5, ~#framerates_6810.base, ~#framerates_6810.offset + 0 + 8, 4);
    call write~$Pointer$(~#rates_6810.base, ~#rates_6810.offset, ~#framerates_6810.base, ~#framerates_6810.offset + 12 + 0, 8);
    call write~int(5, ~#framerates_6810.base, ~#framerates_6810.offset + 12 + 8, 4);
    call ~#DQT.base, ~#DQT.offset := #Ultimate.alloc(2210);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 0 + 0, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 1, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 2, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 3, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 4, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 5, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 6, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 7, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 8, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 9, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 10, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 11, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 12, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 13, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 14, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 15, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 16, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 17, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 18, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 19, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 20, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 21, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 22, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 23, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 24, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 25, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 26, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 27, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 28, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 29, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 30, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 31, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 32, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 33, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 34, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 35, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 36, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 37, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 38, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 39, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 40, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 41, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 42, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 43, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 44, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 45, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 46, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 47, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 48, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 49, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 50, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 51, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 52, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 53, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 54, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 55, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 56, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 57, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 58, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 59, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 60, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 61, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 62, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 63, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 0 + 65, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 66, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 67, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 0 + 68, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 0 + 69, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 0 + 70, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 0 + 71, 1);
    call write~int(11, ~#DQT.base, ~#DQT.offset + 0 + 72, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 0 + 73, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 0 + 74, 1);
    call write~int(11, ~#DQT.base, ~#DQT.offset + 0 + 75, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 76, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 0 + 77, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 0 + 78, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 0 + 79, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 80, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 81, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 82, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 83, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 84, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 85, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 86, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 87, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 88, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 89, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 90, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 91, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 92, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 93, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 94, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 95, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 96, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 97, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 98, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 99, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 100, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 101, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 102, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 103, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 104, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 105, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 106, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 107, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 108, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 109, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 110, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 111, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 112, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 113, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 114, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 115, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 116, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 117, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 118, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 119, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 120, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 121, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 122, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 123, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 124, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 125, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 126, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 127, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 128, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 0 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 130 + 0, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 1, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 2, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 3, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 4, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 5, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 6, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 7, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 8, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 9, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 10, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 11, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 12, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 13, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 14, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 15, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 16, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 17, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 18, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 19, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 20, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 21, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 22, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 23, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 24, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 25, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 26, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 27, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 28, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 29, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 30, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 31, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 32, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 33, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 34, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 35, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 36, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 37, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 38, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 39, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 40, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 41, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 42, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 130 + 43, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 44, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 45, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 46, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 47, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 48, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 49, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 50, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 51, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 52, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 53, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 54, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 55, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 56, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 57, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 58, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 59, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 60, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 61, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 62, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 63, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 130 + 65, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 130 + 66, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 67, 1);
    call write~int(9, ~#DQT.base, ~#DQT.offset + 130 + 68, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 130 + 69, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 130 + 70, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 130 + 71, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 130 + 72, 1);
    call write~int(13, ~#DQT.base, ~#DQT.offset + 130 + 73, 1);
    call write~int(13, ~#DQT.base, ~#DQT.offset + 130 + 74, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 130 + 75, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 76, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 130 + 77, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 130 + 78, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 130 + 79, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 80, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 81, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 82, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 83, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 84, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 85, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 86, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 87, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 88, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 89, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 90, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 91, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 92, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 93, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 94, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 95, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 96, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 97, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 98, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 99, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 100, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 101, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 102, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 103, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 104, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 105, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 106, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 107, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 108, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 109, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 110, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 111, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 112, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 113, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 114, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 115, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 116, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 117, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 118, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 119, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 120, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 121, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 122, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 123, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 124, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 125, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 126, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 127, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 128, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 130 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 260 + 0, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 1, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 2, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 3, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 4, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 5, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 6, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 7, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 8, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 9, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 10, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 11, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 12, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 13, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 14, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 15, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 16, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 260 + 17, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 18, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 19, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 20, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 21, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 22, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 23, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 24, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 25, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 26, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 27, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 28, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 29, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 30, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 31, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 32, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 33, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 34, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 35, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 36, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 37, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 38, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 39, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 40, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 41, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 42, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 260 + 43, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 44, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 45, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 46, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 47, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 48, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 49, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 50, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 51, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 52, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 53, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 54, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 55, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 56, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 57, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 58, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 59, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 60, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 61, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 62, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 63, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 260 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 260 + 65, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 260 + 66, 1);
    call write~int(13, ~#DQT.base, ~#DQT.offset + 260 + 67, 1);
    call write~int(13, ~#DQT.base, ~#DQT.offset + 260 + 68, 1);
    call write~int(18, ~#DQT.base, ~#DQT.offset + 260 + 69, 1);
    call write~int(15, ~#DQT.base, ~#DQT.offset + 260 + 70, 1);
    call write~int(18, ~#DQT.base, ~#DQT.offset + 260 + 71, 1);
    call write~int(35, ~#DQT.base, ~#DQT.offset + 260 + 72, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 260 + 73, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 260 + 74, 1);
    call write~int(35, ~#DQT.base, ~#DQT.offset + 260 + 75, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 76, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 260 + 77, 1);
    call write~int(42, ~#DQT.base, ~#DQT.offset + 260 + 78, 1);
    call write~int(49, ~#DQT.base, ~#DQT.offset + 260 + 79, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 80, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 81, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 82, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 83, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 84, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 85, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 86, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 87, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 88, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 89, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 90, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 91, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 92, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 93, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 94, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 95, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 96, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 97, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 98, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 99, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 100, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 101, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 102, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 103, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 104, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 105, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 106, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 107, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 108, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 109, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 110, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 111, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 112, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 113, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 114, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 115, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 116, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 117, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 118, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 119, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 120, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 121, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 122, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 123, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 124, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 125, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 126, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 127, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 128, 1);
    call write~int(74, ~#DQT.base, ~#DQT.offset + 260 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 390 + 0, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 1, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 2, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 3, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 4, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 5, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 6, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 7, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 8, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 9, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 10, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 11, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 12, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 13, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 14, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 15, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 16, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 390 + 17, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 18, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 19, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 20, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 21, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 22, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 23, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 24, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 25, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 26, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 27, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 28, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 29, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 30, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 31, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 32, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 33, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 34, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 35, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 36, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 37, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 38, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 39, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 40, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 41, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 42, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 390 + 43, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 44, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 45, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 46, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 47, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 48, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 49, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 50, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 51, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 52, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 53, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 54, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 55, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 56, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 57, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 58, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 59, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 60, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 61, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 62, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 63, 1);
    call write~int(19, ~#DQT.base, ~#DQT.offset + 390 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 390 + 65, 1);
    call write~int(17, ~#DQT.base, ~#DQT.offset + 390 + 66, 1);
    call write~int(18, ~#DQT.base, ~#DQT.offset + 390 + 67, 1);
    call write~int(18, ~#DQT.base, ~#DQT.offset + 390 + 68, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 390 + 69, 1);
    call write~int(21, ~#DQT.base, ~#DQT.offset + 390 + 70, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 390 + 71, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 390 + 72, 1);
    call write~int(26, ~#DQT.base, ~#DQT.offset + 390 + 73, 1);
    call write~int(26, ~#DQT.base, ~#DQT.offset + 390 + 74, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 390 + 75, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 76, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 390 + 77, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 390 + 78, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 390 + 79, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 80, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 81, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 82, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 83, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 84, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 85, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 86, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 87, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 88, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 89, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 90, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 91, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 92, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 93, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 94, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 95, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 96, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 97, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 98, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 99, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 100, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 101, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 102, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 103, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 104, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 105, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 106, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 107, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 108, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 109, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 110, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 111, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 112, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 113, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 114, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 115, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 116, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 117, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 118, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 119, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 120, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 121, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 122, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 123, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 124, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 125, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 126, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 127, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 128, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 390 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 520 + 0, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 520 + 1, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 520 + 2, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 520 + 3, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 520 + 4, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 520 + 5, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 520 + 6, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 520 + 7, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 520 + 8, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 520 + 9, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 520 + 10, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 11, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 12, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 13, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 520 + 14, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 520 + 15, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 520 + 16, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 520 + 17, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 18, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 19, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 20, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 21, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 22, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 23, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 24, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 25, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 26, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 27, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 28, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 29, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 30, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 31, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 32, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 33, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 34, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 35, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 36, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 37, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 38, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 39, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 40, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 41, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 42, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 520 + 43, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 44, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 45, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 46, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 47, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 48, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 49, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 50, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 51, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 52, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 53, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 54, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 55, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 56, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 57, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 58, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 59, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 60, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 61, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 62, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 63, 1);
    call write~int(23, ~#DQT.base, ~#DQT.offset + 520 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 520 + 65, 1);
    call write~int(17, ~#DQT.base, ~#DQT.offset + 520 + 66, 1);
    call write~int(22, ~#DQT.base, ~#DQT.offset + 520 + 67, 1);
    call write~int(22, ~#DQT.base, ~#DQT.offset + 520 + 68, 1);
    call write~int(30, ~#DQT.base, ~#DQT.offset + 520 + 69, 1);
    call write~int(26, ~#DQT.base, ~#DQT.offset + 520 + 70, 1);
    call write~int(30, ~#DQT.base, ~#DQT.offset + 520 + 71, 1);
    call write~int(58, ~#DQT.base, ~#DQT.offset + 520 + 72, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 520 + 73, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 520 + 74, 1);
    call write~int(58, ~#DQT.base, ~#DQT.offset + 520 + 75, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 76, 1);
    call write~int(82, ~#DQT.base, ~#DQT.offset + 520 + 77, 1);
    call write~int(70, ~#DQT.base, ~#DQT.offset + 520 + 78, 1);
    call write~int(82, ~#DQT.base, ~#DQT.offset + 520 + 79, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 80, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 81, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 82, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 83, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 84, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 85, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 86, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 87, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 88, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 89, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 90, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 91, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 92, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 93, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 94, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 95, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 96, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 97, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 98, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 99, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 100, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 101, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 102, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 103, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 104, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 105, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 106, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 107, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 108, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 109, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 110, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 111, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 112, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 113, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 114, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 115, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 116, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 117, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 118, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 119, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 120, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 121, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 122, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 123, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 124, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 125, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 126, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 127, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 128, 1);
    call write~int(123, ~#DQT.base, ~#DQT.offset + 520 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 650 + 0, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 650 + 1, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 650 + 2, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 650 + 3, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 650 + 4, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 650 + 5, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 650 + 6, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 650 + 7, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 650 + 8, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 650 + 9, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 650 + 10, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 11, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 12, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 13, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 650 + 14, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 650 + 15, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 650 + 16, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 650 + 17, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 18, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 19, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 20, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 21, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 22, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 23, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 24, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 25, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 26, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 27, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 28, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 29, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 30, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 31, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 32, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 33, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 34, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 35, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 36, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 37, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 38, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 39, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 40, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 41, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 42, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 650 + 43, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 44, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 45, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 46, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 47, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 48, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 49, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 50, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 51, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 52, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 53, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 54, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 55, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 56, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 57, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 58, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 59, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 60, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 61, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 62, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 63, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 650 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 650 + 65, 1);
    call write~int(17, ~#DQT.base, ~#DQT.offset + 650 + 66, 1);
    call write~int(27, ~#DQT.base, ~#DQT.offset + 650 + 67, 1);
    call write~int(27, ~#DQT.base, ~#DQT.offset + 650 + 68, 1);
    call write~int(36, ~#DQT.base, ~#DQT.offset + 650 + 69, 1);
    call write~int(31, ~#DQT.base, ~#DQT.offset + 650 + 70, 1);
    call write~int(36, ~#DQT.base, ~#DQT.offset + 650 + 71, 1);
    call write~int(70, ~#DQT.base, ~#DQT.offset + 650 + 72, 1);
    call write~int(39, ~#DQT.base, ~#DQT.offset + 650 + 73, 1);
    call write~int(39, ~#DQT.base, ~#DQT.offset + 650 + 74, 1);
    call write~int(70, ~#DQT.base, ~#DQT.offset + 650 + 75, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 76, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 650 + 77, 1);
    call write~int(84, ~#DQT.base, ~#DQT.offset + 650 + 78, 1);
    call write~int(99, ~#DQT.base, ~#DQT.offset + 650 + 79, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 80, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 81, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 82, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 83, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 84, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 85, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 86, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 87, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 88, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 89, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 90, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 91, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 92, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 93, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 94, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 95, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 96, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 97, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 98, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 99, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 100, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 101, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 102, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 103, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 104, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 105, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 106, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 107, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 108, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 109, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 110, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 111, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 112, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 113, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 114, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 115, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 116, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 117, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 118, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 119, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 120, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 121, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 122, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 123, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 124, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 125, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 126, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 127, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 128, 1);
    call write~int(148, ~#DQT.base, ~#DQT.offset + 650 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 780 + 0, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 780 + 1, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 780 + 2, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 780 + 3, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 780 + 4, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 780 + 5, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 780 + 6, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 780 + 7, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 780 + 8, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 780 + 9, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 780 + 10, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 11, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 12, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 13, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 780 + 14, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 780 + 15, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 780 + 16, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 780 + 17, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 18, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 19, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 20, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 21, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 22, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 23, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 24, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 25, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 26, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 27, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 28, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 29, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 30, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 31, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 32, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 33, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 34, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 35, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 36, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 37, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 38, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 39, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 40, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 41, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 42, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 780 + 43, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 44, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 45, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 46, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 47, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 48, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 49, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 50, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 51, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 52, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 53, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 54, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 55, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 56, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 57, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 58, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 59, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 60, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 61, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 62, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 63, 1);
    call write~int(33, ~#DQT.base, ~#DQT.offset + 780 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 780 + 65, 1);
    call write~int(21, ~#DQT.base, ~#DQT.offset + 780 + 66, 1);
    call write~int(31, ~#DQT.base, ~#DQT.offset + 780 + 67, 1);
    call write~int(31, ~#DQT.base, ~#DQT.offset + 780 + 68, 1);
    call write~int(42, ~#DQT.base, ~#DQT.offset + 780 + 69, 1);
    call write~int(36, ~#DQT.base, ~#DQT.offset + 780 + 70, 1);
    call write~int(42, ~#DQT.base, ~#DQT.offset + 780 + 71, 1);
    call write~int(82, ~#DQT.base, ~#DQT.offset + 780 + 72, 1);
    call write~int(45, ~#DQT.base, ~#DQT.offset + 780 + 73, 1);
    call write~int(45, ~#DQT.base, ~#DQT.offset + 780 + 74, 1);
    call write~int(82, ~#DQT.base, ~#DQT.offset + 780 + 75, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 76, 1);
    call write~int(115, ~#DQT.base, ~#DQT.offset + 780 + 77, 1);
    call write~int(98, ~#DQT.base, ~#DQT.offset + 780 + 78, 1);
    call write~int(115, ~#DQT.base, ~#DQT.offset + 780 + 79, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 80, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 81, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 82, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 83, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 84, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 85, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 86, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 87, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 88, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 89, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 90, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 91, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 92, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 93, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 94, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 95, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 96, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 97, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 98, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 99, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 100, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 101, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 102, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 103, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 104, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 105, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 106, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 107, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 108, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 109, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 110, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 111, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 112, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 113, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 114, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 115, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 116, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 117, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 118, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 119, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 120, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 121, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 122, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 123, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 124, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 125, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 126, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 127, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 128, 1);
    call write~int(173, ~#DQT.base, ~#DQT.offset + 780 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 910 + 0, 1);
    call write~int(5, ~#DQT.base, ~#DQT.offset + 910 + 1, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 910 + 2, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 910 + 3, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 910 + 4, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 910 + 5, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 910 + 6, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 910 + 7, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 910 + 8, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 910 + 9, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 910 + 10, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 11, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 12, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 13, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 910 + 14, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 910 + 15, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 910 + 16, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 910 + 17, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 18, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 19, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 20, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 21, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 22, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 23, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 24, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 25, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 26, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 27, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 28, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 29, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 30, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 31, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 32, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 33, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 34, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 35, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 36, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 37, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 38, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 39, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 40, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 41, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 42, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 910 + 43, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 44, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 45, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 46, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 47, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 48, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 49, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 50, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 51, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 52, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 53, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 54, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 55, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 56, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 57, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 58, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 59, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 60, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 61, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 62, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 63, 1);
    call write~int(38, ~#DQT.base, ~#DQT.offset + 910 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 910 + 65, 1);
    call write~int(21, ~#DQT.base, ~#DQT.offset + 910 + 66, 1);
    call write~int(36, ~#DQT.base, ~#DQT.offset + 910 + 67, 1);
    call write~int(36, ~#DQT.base, ~#DQT.offset + 910 + 68, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 910 + 69, 1);
    call write~int(42, ~#DQT.base, ~#DQT.offset + 910 + 70, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 910 + 71, 1);
    call write~int(94, ~#DQT.base, ~#DQT.offset + 910 + 72, 1);
    call write~int(52, ~#DQT.base, ~#DQT.offset + 910 + 73, 1);
    call write~int(52, ~#DQT.base, ~#DQT.offset + 910 + 74, 1);
    call write~int(94, ~#DQT.base, ~#DQT.offset + 910 + 75, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 76, 1);
    call write~int(132, ~#DQT.base, ~#DQT.offset + 910 + 77, 1);
    call write~int(112, ~#DQT.base, ~#DQT.offset + 910 + 78, 1);
    call write~int(132, ~#DQT.base, ~#DQT.offset + 910 + 79, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 80, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 81, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 82, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 83, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 84, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 85, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 86, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 87, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 88, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 89, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 90, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 91, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 92, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 93, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 94, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 95, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 96, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 97, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 98, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 99, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 100, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 101, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 102, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 103, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 104, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 105, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 106, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 107, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 108, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 109, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 110, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 111, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 112, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 113, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 114, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 115, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 116, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 117, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 118, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 119, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 120, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 121, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 122, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 123, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 124, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 125, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 126, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 127, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 128, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 910 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 1040 + 0, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 1040 + 1, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1040 + 2, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1040 + 3, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1040 + 4, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1040 + 5, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1040 + 6, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1040 + 7, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1040 + 8, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1040 + 9, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1040 + 10, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 11, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 12, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 13, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1040 + 14, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1040 + 15, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1040 + 16, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1040 + 17, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 18, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 19, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 20, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 21, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 22, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 23, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 24, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 25, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 26, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 27, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 28, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 29, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 30, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 31, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 32, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 33, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 34, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 35, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 36, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 37, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 38, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 39, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 40, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 41, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 42, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1040 + 43, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 44, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 45, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 46, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 47, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 48, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 49, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 50, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 51, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 52, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 53, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 54, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 55, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 56, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 57, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 58, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 59, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 60, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 61, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 62, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 63, 1);
    call write~int(47, ~#DQT.base, ~#DQT.offset + 1040 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 1040 + 65, 1);
    call write~int(25, ~#DQT.base, ~#DQT.offset + 1040 + 66, 1);
    call write~int(45, ~#DQT.base, ~#DQT.offset + 1040 + 67, 1);
    call write~int(45, ~#DQT.base, ~#DQT.offset + 1040 + 68, 1);
    call write~int(60, ~#DQT.base, ~#DQT.offset + 1040 + 69, 1);
    call write~int(52, ~#DQT.base, ~#DQT.offset + 1040 + 70, 1);
    call write~int(60, ~#DQT.base, ~#DQT.offset + 1040 + 71, 1);
    call write~int(117, ~#DQT.base, ~#DQT.offset + 1040 + 72, 1);
    call write~int(65, ~#DQT.base, ~#DQT.offset + 1040 + 73, 1);
    call write~int(65, ~#DQT.base, ~#DQT.offset + 1040 + 74, 1);
    call write~int(117, ~#DQT.base, ~#DQT.offset + 1040 + 75, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 76, 1);
    call write~int(165, ~#DQT.base, ~#DQT.offset + 1040 + 77, 1);
    call write~int(140, ~#DQT.base, ~#DQT.offset + 1040 + 78, 1);
    call write~int(165, ~#DQT.base, ~#DQT.offset + 1040 + 79, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 80, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 81, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 82, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 83, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 84, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 85, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 86, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 87, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 88, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 89, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 90, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 91, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 92, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 93, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 94, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 95, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 96, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 97, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 98, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 99, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 100, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 101, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 102, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 103, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 104, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 105, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 106, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 107, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 108, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 109, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 110, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 111, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 112, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 113, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 114, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 115, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 116, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 117, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 118, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 119, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 120, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 121, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 122, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 123, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 124, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 125, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 126, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 127, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 128, 1);
    call write~int(247, ~#DQT.base, ~#DQT.offset + 1040 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 1170 + 0, 1);
    call write~int(6, ~#DQT.base, ~#DQT.offset + 1170 + 1, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 1170 + 2, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 1170 + 3, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 1170 + 4, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 1170 + 5, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 1170 + 6, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 1170 + 7, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 1170 + 8, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 1170 + 9, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 1170 + 10, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 11, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 12, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 13, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 1170 + 14, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 1170 + 15, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 1170 + 16, 1);
    call write~int(12, ~#DQT.base, ~#DQT.offset + 1170 + 17, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 18, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 19, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 20, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 21, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 22, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 23, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 24, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 25, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 26, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 27, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 28, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 29, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 30, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 31, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 32, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 33, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 34, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 35, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 36, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 37, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 38, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 39, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 40, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 41, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 42, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1170 + 43, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 44, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 45, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 46, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 47, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 48, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 49, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 50, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 51, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 52, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 53, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 54, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 55, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 56, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 57, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 58, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 59, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 60, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 61, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 62, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 63, 1);
    call write~int(57, ~#DQT.base, ~#DQT.offset + 1170 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 1170 + 65, 1);
    call write~int(25, ~#DQT.base, ~#DQT.offset + 1170 + 66, 1);
    call write~int(54, ~#DQT.base, ~#DQT.offset + 1170 + 67, 1);
    call write~int(54, ~#DQT.base, ~#DQT.offset + 1170 + 68, 1);
    call write~int(72, ~#DQT.base, ~#DQT.offset + 1170 + 69, 1);
    call write~int(63, ~#DQT.base, ~#DQT.offset + 1170 + 70, 1);
    call write~int(72, ~#DQT.base, ~#DQT.offset + 1170 + 71, 1);
    call write~int(141, ~#DQT.base, ~#DQT.offset + 1170 + 72, 1);
    call write~int(78, ~#DQT.base, ~#DQT.offset + 1170 + 73, 1);
    call write~int(78, ~#DQT.base, ~#DQT.offset + 1170 + 74, 1);
    call write~int(141, ~#DQT.base, ~#DQT.offset + 1170 + 75, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 76, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 1170 + 77, 1);
    call write~int(168, ~#DQT.base, ~#DQT.offset + 1170 + 78, 1);
    call write~int(198, ~#DQT.base, ~#DQT.offset + 1170 + 79, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 80, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 81, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 82, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 83, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 84, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 85, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 86, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 87, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 88, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 89, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 90, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 91, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 92, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 93, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 94, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 95, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 96, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 97, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 98, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 99, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 100, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 101, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 102, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 103, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 104, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 105, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 106, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 107, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 108, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 109, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 110, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 111, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 112, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 113, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 114, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 115, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 116, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 117, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 118, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 119, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 120, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 121, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 122, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 123, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 124, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 125, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 126, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 127, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 128, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1170 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 1300 + 0, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 1300 + 1, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 1300 + 2, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 1300 + 3, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 1300 + 4, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 1300 + 5, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 1300 + 6, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 1300 + 7, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 1300 + 8, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 1300 + 9, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 1300 + 10, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 11, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 12, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 13, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 1300 + 14, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 1300 + 15, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 1300 + 16, 1);
    call write~int(14, ~#DQT.base, ~#DQT.offset + 1300 + 17, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 18, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 19, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 20, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 21, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 22, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 23, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 24, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 25, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 26, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 27, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 28, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 29, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 30, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 31, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 32, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 33, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 34, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 35, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 36, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 37, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 38, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 39, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 40, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 41, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 42, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1300 + 43, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 44, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 45, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 46, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 47, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 48, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 49, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 50, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 51, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 52, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 53, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 54, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 55, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 56, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 57, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 58, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 59, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 60, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 61, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 62, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 63, 1);
    call write~int(66, ~#DQT.base, ~#DQT.offset + 1300 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 1300 + 65, 1);
    call write~int(29, ~#DQT.base, ~#DQT.offset + 1300 + 66, 1);
    call write~int(63, ~#DQT.base, ~#DQT.offset + 1300 + 67, 1);
    call write~int(63, ~#DQT.base, ~#DQT.offset + 1300 + 68, 1);
    call write~int(84, ~#DQT.base, ~#DQT.offset + 1300 + 69, 1);
    call write~int(73, ~#DQT.base, ~#DQT.offset + 1300 + 70, 1);
    call write~int(84, ~#DQT.base, ~#DQT.offset + 1300 + 71, 1);
    call write~int(164, ~#DQT.base, ~#DQT.offset + 1300 + 72, 1);
    call write~int(91, ~#DQT.base, ~#DQT.offset + 1300 + 73, 1);
    call write~int(91, ~#DQT.base, ~#DQT.offset + 1300 + 74, 1);
    call write~int(164, ~#DQT.base, ~#DQT.offset + 1300 + 75, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 76, 1);
    call write~int(231, ~#DQT.base, ~#DQT.offset + 1300 + 77, 1);
    call write~int(196, ~#DQT.base, ~#DQT.offset + 1300 + 78, 1);
    call write~int(231, ~#DQT.base, ~#DQT.offset + 1300 + 79, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 80, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 81, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 82, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 83, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 84, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 85, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 86, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 87, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 88, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 89, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 90, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 91, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 92, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 93, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 94, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 95, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 96, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 97, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 98, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 99, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 100, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 101, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 102, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 103, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 104, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 105, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 106, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 107, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 108, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 109, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 110, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 111, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 112, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 113, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 114, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 115, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 116, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 117, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 118, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 119, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 120, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 121, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 122, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 123, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 124, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 125, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 126, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 127, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 128, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1300 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 1430 + 0, 1);
    call write~int(7, ~#DQT.base, ~#DQT.offset + 1430 + 1, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 1430 + 2, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 1430 + 3, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 1430 + 4, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 1430 + 5, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 1430 + 6, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 1430 + 7, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 1430 + 8, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 1430 + 9, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 1430 + 10, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 11, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 12, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 13, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 1430 + 14, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 1430 + 15, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 1430 + 16, 1);
    call write~int(16, ~#DQT.base, ~#DQT.offset + 1430 + 17, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 18, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 19, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 20, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 21, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 22, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 23, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 24, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 25, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 26, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 27, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 28, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 29, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 30, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 31, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 32, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 33, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 34, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 35, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 36, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 37, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 38, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 39, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 40, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 41, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 42, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1430 + 43, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 44, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 45, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 46, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 47, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 48, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 49, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 50, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 51, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 52, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 53, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 54, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 55, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 56, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 57, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 58, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 59, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 60, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 61, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 62, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 63, 1);
    call write~int(76, ~#DQT.base, ~#DQT.offset + 1430 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 1430 + 65, 1);
    call write~int(29, ~#DQT.base, ~#DQT.offset + 1430 + 66, 1);
    call write~int(72, ~#DQT.base, ~#DQT.offset + 1430 + 67, 1);
    call write~int(72, ~#DQT.base, ~#DQT.offset + 1430 + 68, 1);
    call write~int(96, ~#DQT.base, ~#DQT.offset + 1430 + 69, 1);
    call write~int(84, ~#DQT.base, ~#DQT.offset + 1430 + 70, 1);
    call write~int(96, ~#DQT.base, ~#DQT.offset + 1430 + 71, 1);
    call write~int(188, ~#DQT.base, ~#DQT.offset + 1430 + 72, 1);
    call write~int(104, ~#DQT.base, ~#DQT.offset + 1430 + 73, 1);
    call write~int(104, ~#DQT.base, ~#DQT.offset + 1430 + 74, 1);
    call write~int(188, ~#DQT.base, ~#DQT.offset + 1430 + 75, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 76, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 77, 1);
    call write~int(224, ~#DQT.base, ~#DQT.offset + 1430 + 78, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 79, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 80, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 81, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 82, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 83, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 84, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 85, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 86, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 87, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 88, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 89, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 90, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 91, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 92, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 93, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 94, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 95, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 96, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 97, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 98, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 99, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 100, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 101, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 102, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 103, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 104, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 105, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 106, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 107, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 108, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 109, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 110, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 111, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 112, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 113, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 114, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 115, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 116, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 117, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 118, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 119, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 120, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 121, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 122, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 123, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 124, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 125, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 126, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 127, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 128, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1430 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 1560 + 0, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 1560 + 1, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1560 + 2, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1560 + 3, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1560 + 4, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1560 + 5, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1560 + 6, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1560 + 7, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1560 + 8, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1560 + 9, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1560 + 10, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 11, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 12, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 13, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1560 + 14, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1560 + 15, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1560 + 16, 1);
    call write~int(20, ~#DQT.base, ~#DQT.offset + 1560 + 17, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 18, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 19, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 20, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 21, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 22, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 23, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 24, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 25, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 26, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 27, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 28, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 29, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 30, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 31, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 32, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 33, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 34, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 35, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 36, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 37, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 38, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 39, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 40, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 41, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 42, 1);
    call write~int(40, ~#DQT.base, ~#DQT.offset + 1560 + 43, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 44, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 45, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 46, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 47, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 48, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 49, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 50, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 51, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 52, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 53, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 54, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 55, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 56, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 57, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 58, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 59, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 60, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 61, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 62, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 63, 1);
    call write~int(95, ~#DQT.base, ~#DQT.offset + 1560 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 1560 + 65, 1);
    call write~int(34, ~#DQT.base, ~#DQT.offset + 1560 + 66, 1);
    call write~int(90, ~#DQT.base, ~#DQT.offset + 1560 + 67, 1);
    call write~int(90, ~#DQT.base, ~#DQT.offset + 1560 + 68, 1);
    call write~int(120, ~#DQT.base, ~#DQT.offset + 1560 + 69, 1);
    call write~int(105, ~#DQT.base, ~#DQT.offset + 1560 + 70, 1);
    call write~int(120, ~#DQT.base, ~#DQT.offset + 1560 + 71, 1);
    call write~int(235, ~#DQT.base, ~#DQT.offset + 1560 + 72, 1);
    call write~int(130, ~#DQT.base, ~#DQT.offset + 1560 + 73, 1);
    call write~int(130, ~#DQT.base, ~#DQT.offset + 1560 + 74, 1);
    call write~int(235, ~#DQT.base, ~#DQT.offset + 1560 + 75, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 76, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 77, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 78, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 79, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 80, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 81, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 82, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 83, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 84, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 85, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 86, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 87, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 88, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 89, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 90, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 91, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 92, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 93, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 94, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 95, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 96, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 97, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 98, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 99, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 100, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 101, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 102, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 103, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 104, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 105, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 106, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 107, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 108, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 109, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 110, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 111, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 112, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 113, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 114, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 115, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 116, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 117, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 118, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 119, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 120, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 121, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 122, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 123, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 124, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 125, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 126, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 127, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 128, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1560 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 1690 + 0, 1);
    call write~int(8, ~#DQT.base, ~#DQT.offset + 1690 + 1, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1690 + 2, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1690 + 3, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1690 + 4, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1690 + 5, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1690 + 6, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1690 + 7, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1690 + 8, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1690 + 9, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1690 + 10, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 11, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 12, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 13, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1690 + 14, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1690 + 15, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1690 + 16, 1);
    call write~int(24, ~#DQT.base, ~#DQT.offset + 1690 + 17, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 18, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 19, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 20, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 21, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 22, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 23, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 24, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 25, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 26, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 27, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 28, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 29, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 30, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 31, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 32, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 33, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 34, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 35, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 36, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 37, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 38, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 39, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 40, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 41, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 42, 1);
    call write~int(48, ~#DQT.base, ~#DQT.offset + 1690 + 43, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 44, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 45, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 46, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 47, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 48, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 49, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 50, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 51, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 52, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 53, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 54, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 55, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 56, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 57, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 58, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 59, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 60, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 61, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 62, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 63, 1);
    call write~int(114, ~#DQT.base, ~#DQT.offset + 1690 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 1690 + 65, 1);
    call write~int(34, ~#DQT.base, ~#DQT.offset + 1690 + 66, 1);
    call write~int(108, ~#DQT.base, ~#DQT.offset + 1690 + 67, 1);
    call write~int(108, ~#DQT.base, ~#DQT.offset + 1690 + 68, 1);
    call write~int(144, ~#DQT.base, ~#DQT.offset + 1690 + 69, 1);
    call write~int(126, ~#DQT.base, ~#DQT.offset + 1690 + 70, 1);
    call write~int(144, ~#DQT.base, ~#DQT.offset + 1690 + 71, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 72, 1);
    call write~int(156, ~#DQT.base, ~#DQT.offset + 1690 + 73, 1);
    call write~int(156, ~#DQT.base, ~#DQT.offset + 1690 + 74, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 75, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 76, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 77, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 78, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 79, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 80, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 81, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 82, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 83, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 84, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 85, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 86, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 87, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 88, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 89, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 90, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 91, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 92, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 93, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 94, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 95, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 96, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 97, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 98, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 99, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 100, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 101, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 102, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 103, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 104, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 105, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 106, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 107, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 108, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 109, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 110, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 111, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 112, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 113, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 114, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 115, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 116, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 117, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 118, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 119, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 120, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 121, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 122, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 123, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 124, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 125, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 126, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 127, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 128, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1690 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 1820 + 0, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1820 + 1, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1820 + 2, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1820 + 3, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1820 + 4, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1820 + 5, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1820 + 6, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1820 + 7, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1820 + 8, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1820 + 9, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1820 + 10, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 11, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 12, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 13, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1820 + 14, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1820 + 15, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1820 + 16, 1);
    call write~int(28, ~#DQT.base, ~#DQT.offset + 1820 + 17, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 18, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 19, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 20, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 21, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 22, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 23, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 24, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 25, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 26, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 27, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 28, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 29, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 30, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 31, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 32, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 33, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 34, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 35, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 36, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 37, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 38, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 39, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 40, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 41, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 42, 1);
    call write~int(56, ~#DQT.base, ~#DQT.offset + 1820 + 43, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 44, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 45, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 46, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 47, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 48, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 49, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 50, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 51, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 52, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 53, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 54, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 55, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 56, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 57, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 58, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 59, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 60, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 61, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 62, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 63, 1);
    call write~int(133, ~#DQT.base, ~#DQT.offset + 1820 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 1820 + 65, 1);
    call write~int(42, ~#DQT.base, ~#DQT.offset + 1820 + 66, 1);
    call write~int(126, ~#DQT.base, ~#DQT.offset + 1820 + 67, 1);
    call write~int(126, ~#DQT.base, ~#DQT.offset + 1820 + 68, 1);
    call write~int(168, ~#DQT.base, ~#DQT.offset + 1820 + 69, 1);
    call write~int(147, ~#DQT.base, ~#DQT.offset + 1820 + 70, 1);
    call write~int(168, ~#DQT.base, ~#DQT.offset + 1820 + 71, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 72, 1);
    call write~int(182, ~#DQT.base, ~#DQT.offset + 1820 + 73, 1);
    call write~int(182, ~#DQT.base, ~#DQT.offset + 1820 + 74, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 75, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 76, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 77, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 78, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 79, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 80, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 81, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 82, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 83, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 84, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 85, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 86, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 87, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 88, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 89, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 90, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 91, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 92, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 93, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 94, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 95, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 96, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 97, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 98, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 99, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 100, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 101, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 102, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 103, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 104, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 105, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 106, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 107, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 108, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 109, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 110, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 111, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 112, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 113, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 114, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 115, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 116, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 117, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 118, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 119, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 120, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 121, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 122, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 123, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 124, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 125, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 126, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 127, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 128, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1820 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 1950 + 0, 1);
    call write~int(10, ~#DQT.base, ~#DQT.offset + 1950 + 1, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1950 + 2, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1950 + 3, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1950 + 4, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1950 + 5, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1950 + 6, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1950 + 7, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1950 + 8, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1950 + 9, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1950 + 10, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 11, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 12, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 13, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1950 + 14, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1950 + 15, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1950 + 16, 1);
    call write~int(32, ~#DQT.base, ~#DQT.offset + 1950 + 17, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 18, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 19, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 20, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 21, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 22, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 23, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 24, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 25, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 26, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 27, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 28, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 29, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 30, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 31, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 32, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 33, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 34, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 35, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 36, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 37, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 38, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 39, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 40, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 41, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 42, 1);
    call write~int(64, ~#DQT.base, ~#DQT.offset + 1950 + 43, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 44, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 45, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 46, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 47, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 48, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 49, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 50, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 51, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 52, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 53, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 54, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 55, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 56, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 57, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 58, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 59, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 60, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 61, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 62, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 63, 1);
    call write~int(152, ~#DQT.base, ~#DQT.offset + 1950 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 1950 + 65, 1);
    call write~int(42, ~#DQT.base, ~#DQT.offset + 1950 + 66, 1);
    call write~int(144, ~#DQT.base, ~#DQT.offset + 1950 + 67, 1);
    call write~int(144, ~#DQT.base, ~#DQT.offset + 1950 + 68, 1);
    call write~int(192, ~#DQT.base, ~#DQT.offset + 1950 + 69, 1);
    call write~int(168, ~#DQT.base, ~#DQT.offset + 1950 + 70, 1);
    call write~int(192, ~#DQT.base, ~#DQT.offset + 1950 + 71, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 72, 1);
    call write~int(208, ~#DQT.base, ~#DQT.offset + 1950 + 73, 1);
    call write~int(208, ~#DQT.base, ~#DQT.offset + 1950 + 74, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 75, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 76, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 77, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 78, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 79, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 80, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 81, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 82, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 83, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 84, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 85, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 86, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 87, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 88, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 89, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 90, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 91, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 92, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 93, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 94, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 95, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 96, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 97, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 98, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 99, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 100, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 101, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 102, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 103, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 104, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 105, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 106, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 107, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 108, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 109, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 110, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 111, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 112, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 113, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 114, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 115, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 116, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 117, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 118, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 119, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 120, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 121, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 122, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 123, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 124, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 125, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 126, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 127, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 128, 1);
    call write~int(255, ~#DQT.base, ~#DQT.offset + 1950 + 129, 1);
    call write~int(0, ~#DQT.base, ~#DQT.offset + 2080 + 0, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 1, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 2, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 3, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 4, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 5, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 6, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 7, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 8, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 9, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 10, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 11, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 12, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 13, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 14, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 15, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 16, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 17, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 18, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 19, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 20, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 21, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 22, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 23, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 24, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 25, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 26, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 27, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 28, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 29, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 30, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 31, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 32, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 33, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 34, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 35, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 36, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 37, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 38, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 39, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 40, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 41, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 42, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 43, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 44, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 45, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 46, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 47, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 48, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 49, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 50, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 51, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 52, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 53, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 54, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 55, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 56, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 57, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 58, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 59, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 60, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 61, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 62, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 63, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 64, 1);
    call write~int(1, ~#DQT.base, ~#DQT.offset + 2080 + 65, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 66, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 67, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 68, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 69, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 70, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 71, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 72, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 73, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 74, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 75, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 76, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 77, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 78, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 79, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 80, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 81, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 82, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 83, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 84, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 85, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 86, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 87, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 88, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 89, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 90, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 91, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 92, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 93, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 94, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 95, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 96, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 97, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 98, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 99, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 100, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 101, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 102, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 103, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 104, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 105, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 106, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 107, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 108, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 109, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 110, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 111, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 112, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 113, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 114, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 115, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 116, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 117, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 118, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 119, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 120, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 121, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 122, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 123, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 124, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 125, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 126, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 127, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 128, 1);
    call write~int(4, ~#DQT.base, ~#DQT.offset + 2080 + 129, 1);
    call ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset := #Ultimate.alloc(46);
    call write~int(28, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 0 + 0, 1);
    call write~int(0, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 0 + 1, 1);
    call write~int(16, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 2 + 0, 1);
    call write~int(0, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 2 + 1, 1);
    call write~int(78, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 4 + 0, 1);
    call write~int(0, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 4 + 1, 1);
    call write~int(79, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 6 + 0, 1);
    call write~int(0, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 6 + 1, 1);
    call write~int(80, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 8 + 0, 1);
    call write~int(255, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 8 + 1, 1);
    call write~int(81, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 10 + 0, 1);
    call write~int(3, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 10 + 1, 1);
    call write~int(0, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 12 + 0, 1);
    call write~int(7, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 12 + 1, 1);
    call write~int(121, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 14 + 0, 1);
    call write~int(3, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 14 + 1, 1);
    call write~int(47, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 16 + 0, 1);
    call write~int(55, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 16 + 1, 1);
    call write~int(48, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 18 + 0, 1);
    call write~int(16, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 18 + 1, 1);
    call write~int(33, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 20 + 0, 1);
    call write~int(0, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 20 + 1, 1);
    call write~int(82, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 22 + 0, 1);
    call write~int(64, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 22 + 1, 1);
    call write~int(83, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 24 + 0, 1);
    call write~int(64, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 24 + 1, 1);
    call write~int(84, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 26 + 0, 1);
    call write~int(64, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 26 + 1, 1);
    call write~int(48, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 28 + 0, 1);
    call write~int(24, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 28 + 1, 1);
    call write~int(75, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 30 + 0, 1);
    call write~int(0, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 30 + 1, 1);
    call write~int(63, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 32 + 0, 1);
    call write~int(131, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 32 + 1, 1);
    call write~int(121, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 34 + 0, 1);
    call write~int(5, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 34 + 1, 1);
    call write~int(33, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 36 + 0, 1);
    call write~int(0, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 36 + 1, 1);
    call write~int(124, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 38 + 0, 1);
    call write~int(4, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 38 + 1, 1);
    call write~int(37, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 40 + 0, 1);
    call write~int(20, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 40 + 1, 1);
    call write~int(38, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 42 + 0, 1);
    call write~int(15, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 42 + 1, 1);
    call write~int(123, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 44 + 0, 1);
    call write~int(16, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset + 44 + 1, 1);
    call ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset := #Ultimate.alloc(36);
    call write~int(28, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 0 + 0, 1);
    call write~int(0, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 0 + 1, 1);
    call write~int(16, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 2 + 0, 1);
    call write~int(0, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 2 + 1, 1);
    call write~int(78, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 4 + 0, 1);
    call write~int(0, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 4 + 1, 1);
    call write~int(79, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 6 + 0, 1);
    call write~int(0, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 6 + 1, 1);
    call write~int(80, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 8 + 0, 1);
    call write~int(255, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 8 + 1, 1);
    call write~int(81, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 10 + 0, 1);
    call write~int(3, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 10 + 1, 1);
    call write~int(0, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 12 + 0, 1);
    call write~int(7, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 12 + 1, 1);
    call write~int(82, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 14 + 0, 1);
    call write~int(64, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 14 + 1, 1);
    call write~int(83, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 16 + 0, 1);
    call write~int(64, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 16 + 1, 1);
    call write~int(84, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 18 + 0, 1);
    call write~int(64, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 18 + 1, 1);
    call write~int(121, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 20 + 0, 1);
    call write~int(3, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 20 + 1, 1);
    call write~int(47, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 22 + 0, 1);
    call write~int(23, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 22 + 1, 1);
    call write~int(48, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 24 + 0, 1);
    call write~int(24, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 24 + 1, 1);
    call write~int(33, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 26 + 0, 1);
    call write~int(0, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 26 + 1, 1);
    call write~int(63, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 28 + 0, 1);
    call write~int(134, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 28 + 1, 1);
    call write~int(37, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 30 + 0, 1);
    call write~int(24, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 30 + 1, 1);
    call write~int(38, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 32 + 0, 1);
    call write~int(15, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 32 + 1, 1);
    call write~int(123, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 34 + 0, 1);
    call write~int(144, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset + 34 + 1, 1);
    call ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset := #Ultimate.alloc(18);
    call write~int(89, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 0 + 0, 1);
    call write~int(136, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 0 + 1, 1);
    call write~int(90, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 2 + 0, 1);
    call write~int(15, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 2 + 1, 1);
    call write~int(91, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 4 + 0, 1);
    call write~int(78, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 4 + 1, 1);
    call write~int(92, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 6 + 0, 1);
    call write~int(99, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 6 + 1, 1);
    call write~int(93, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 8 + 0, 1);
    call write~int(0, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 8 + 1, 1);
    call write~int(3, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 10 + 0, 1);
    call write~int(127, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 10 + 1, 1);
    call write~int(4, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 12 + 0, 1);
    call write~int(128, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 12 + 1, 1);
    call write~int(6, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 14 + 0, 1);
    call write~int(0, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 14 + 1, 1);
    call write~int(0, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 16 + 0, 1);
    call write~int(0, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset + 16 + 1, 1);
    call ~#tp6810_late_start.base, ~#tp6810_late_start.offset := #Ultimate.alloc(136);
    call write~int(125, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 0 + 0, 1);
    call write~int(1, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 0 + 1, 1);
    call write~int(176, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 2 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 2 + 1, 1);
    call write~int(177, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 4 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 4 + 1, 1);
    call write~int(178, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 6 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 6 + 1, 1);
    call write~int(179, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 8 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 8 + 1, 1);
    call write~int(180, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 10 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 10 + 1, 1);
    call write~int(181, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 12 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 12 + 1, 1);
    call write~int(182, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 14 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 14 + 1, 1);
    call write~int(183, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 16 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 16 + 1, 1);
    call write~int(184, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 18 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 18 + 1, 1);
    call write~int(185, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 20 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 20 + 1, 1);
    call write~int(186, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 22 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 22 + 1, 1);
    call write~int(187, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 24 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 24 + 1, 1);
    call write~int(188, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 26 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 26 + 1, 1);
    call write~int(189, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 28 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 28 + 1, 1);
    call write~int(190, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 30 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 30 + 1, 1);
    call write~int(191, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 32 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 32 + 1, 1);
    call write~int(192, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 34 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 34 + 1, 1);
    call write~int(193, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 36 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 36 + 1, 1);
    call write~int(194, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 38 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 38 + 1, 1);
    call write~int(195, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 40 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 40 + 1, 1);
    call write~int(196, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 42 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 42 + 1, 1);
    call write~int(197, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 44 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 44 + 1, 1);
    call write~int(198, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 46 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 46 + 1, 1);
    call write~int(199, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 48 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 48 + 1, 1);
    call write~int(200, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 50 + 0, 1);
    call write~int(4, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 50 + 1, 1);
    call write~int(201, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 52 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 52 + 1, 1);
    call write~int(202, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 54 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 54 + 1, 1);
    call write~int(203, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 56 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 56 + 1, 1);
    call write~int(204, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 58 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 58 + 1, 1);
    call write~int(205, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 60 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 60 + 1, 1);
    call write~int(206, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 62 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 62 + 1, 1);
    call write~int(207, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 64 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 64 + 1, 1);
    call write~int(208, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 66 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 66 + 1, 1);
    call write~int(209, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 68 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 68 + 1, 1);
    call write~int(210, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 70 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 70 + 1, 1);
    call write~int(211, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 72 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 72 + 1, 1);
    call write~int(212, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 74 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 74 + 1, 1);
    call write~int(213, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 76 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 76 + 1, 1);
    call write~int(214, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 78 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 78 + 1, 1);
    call write~int(215, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 80 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 80 + 1, 1);
    call write~int(216, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 82 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 82 + 1, 1);
    call write~int(217, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 84 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 84 + 1, 1);
    call write~int(218, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 86 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 86 + 1, 1);
    call write~int(219, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 88 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 88 + 1, 1);
    call write~int(220, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 90 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 90 + 1, 1);
    call write~int(221, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 92 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 92 + 1, 1);
    call write~int(222, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 94 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 94 + 1, 1);
    call write~int(223, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 96 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 96 + 1, 1);
    call write~int(224, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 98 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 98 + 1, 1);
    call write~int(225, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 100 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 100 + 1, 1);
    call write~int(226, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 102 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 102 + 1, 1);
    call write~int(227, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 104 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 104 + 1, 1);
    call write~int(228, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 106 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 106 + 1, 1);
    call write~int(229, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 108 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 108 + 1, 1);
    call write~int(230, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 110 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 110 + 1, 1);
    call write~int(231, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 112 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 112 + 1, 1);
    call write~int(232, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 114 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 114 + 1, 1);
    call write~int(233, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 116 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 116 + 1, 1);
    call write~int(234, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 118 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 118 + 1, 1);
    call write~int(235, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 120 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 120 + 1, 1);
    call write~int(236, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 122 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 122 + 1, 1);
    call write~int(237, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 124 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 124 + 1, 1);
    call write~int(238, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 126 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 126 + 1, 1);
    call write~int(239, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 128 + 0, 1);
    call write~int(19, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 128 + 1, 1);
    call write~int(125, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 130 + 0, 1);
    call write~int(2, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 130 + 1, 1);
    call write~int(125, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 132 + 0, 1);
    call write~int(8, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 132 + 1, 1);
    call write~int(125, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 134 + 0, 1);
    call write~int(0, ~#tp6810_late_start.base, ~#tp6810_late_start.offset + 134 + 1, 1);
    call ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset := #Ultimate.alloc(70);
    call write~int(146, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 0 + 0, 1);
    call write~int(32, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 0 + 1, 1);
    call write~int(148, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 2 + 0, 1);
    call write~int(36, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 2 + 1, 1);
    call write~int(149, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 4 + 0, 1);
    call write~int(0, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 4 + 1, 1);
    call write~int(150, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 6 + 0, 1);
    call write~int(47, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 6 + 1, 1);
    call write~int(151, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 8 + 0, 1);
    call write~int(0, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 8 + 1, 1);
    call write~int(160, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 10 + 0, 1);
    call write~int(2, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 10 + 1, 1);
    call write~int(161, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 12 + 0, 1);
    call write~int(0, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 12 + 1, 1);
    call write~int(162, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 14 + 0, 1);
    call write~int(32, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 14 + 1, 1);
    call write~int(163, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 16 + 0, 1);
    call write~int(0, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 16 + 1, 1);
    call write~int(164, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 18 + 0, 1);
    call write~int(228, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 18 + 1, 1);
    call write~int(165, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 20 + 0, 1);
    call write~int(0, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 20 + 1, 1);
    call write~int(166, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 22 + 0, 1);
    call write~int(238, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 22 + 1, 1);
    call write~int(167, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 24 + 0, 1);
    call write~int(0, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 24 + 1, 1);
    call write~int(176, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 26 + 0, 1);
    call write~int(48, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 26 + 1, 1);
    call write~int(177, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 28 + 0, 1);
    call write~int(0, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 28 + 1, 1);
    call write~int(192, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 30 + 0, 1);
    call write~int(52, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 30 + 1, 1);
    call write~int(194, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 32 + 0, 1);
    call write~int(226, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 32 + 1, 1);
    call write~int(195, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 34 + 0, 1);
    call write~int(0, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 34 + 1, 1);
    call write~int(196, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 36 + 0, 1);
    call write~int(246, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 36 + 1, 1);
    call write~int(197, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 38 + 0, 1);
    call write~int(0, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 38 + 1, 1);
    call write~int(198, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 40 + 0, 1);
    call write~int(244, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 40 + 1, 1);
    call write~int(199, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 42 + 0, 1);
    call write~int(2, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 42 + 1, 1);
    call write~int(208, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 44 + 0, 1);
    call write~int(38, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 44 + 1, 1);
    call write~int(209, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 46 + 0, 1);
    call write~int(0, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 46 + 1, 1);
    call write~int(210, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 48 + 0, 1);
    call write~int(226, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 48 + 1, 1);
    call write~int(211, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 50 + 0, 1);
    call write~int(0, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 50 + 1, 1);
    call write~int(224, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 52 + 0, 1);
    call write~int(38, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 52 + 1, 1);
    call write~int(226, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 54 + 0, 1);
    call write~int(41, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 54 + 1, 1);
    call write~int(228, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 56 + 0, 1);
    call write~int(240, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 56 + 1, 1);
    call write~int(229, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 58 + 0, 1);
    call write~int(0, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 58 + 1, 1);
    call write~int(230, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 60 + 0, 1);
    call write~int(243, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 60 + 1, 1);
    call write~int(231, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 62 + 0, 1);
    call write~int(0, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 62 + 1, 1);
    call write~int(240, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 64 + 0, 1);
    call write~int(36, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 64 + 1, 1);
    call write~int(242, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 66 + 0, 1);
    call write~int(2, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 66 + 1, 1);
    call write~int(37, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 68 + 0, 1);
    call write~int(1, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset + 68 + 1, 1);
    call ~#color_null.base, ~#color_null.offset := #Ultimate.alloc(18);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 0, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 1, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 2, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 3, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 4, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 5, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 6, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 7, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 8, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 9, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 10, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 11, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 12, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 13, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 14, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 15, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 16, 1);
    call write~int(0, ~#color_null.base, ~#color_null.offset + 17, 1);
    call ~#color_gain.base, ~#color_gain.offset := #Ultimate.alloc(36);
    call write~int(76, ~#color_gain.base, ~#color_gain.offset + 0 + 0, 1);
    call write~int(0, ~#color_gain.base, ~#color_gain.offset + 0 + 1, 1);
    call write~int(169, ~#color_gain.base, ~#color_gain.offset + 0 + 2, 1);
    call write~int(0, ~#color_gain.base, ~#color_gain.offset + 0 + 3, 1);
    call write~int(49, ~#color_gain.base, ~#color_gain.offset + 0 + 4, 1);
    call write~int(0, ~#color_gain.base, ~#color_gain.offset + 0 + 5, 1);
    call write~int(182, ~#color_gain.base, ~#color_gain.offset + 0 + 6, 1);
    call write~int(3, ~#color_gain.base, ~#color_gain.offset + 0 + 7, 1);
    call write~int(108, ~#color_gain.base, ~#color_gain.offset + 0 + 8, 1);
    call write~int(3, ~#color_gain.base, ~#color_gain.offset + 0 + 9, 1);
    call write~int(224, ~#color_gain.base, ~#color_gain.offset + 0 + 10, 1);
    call write~int(0, ~#color_gain.base, ~#color_gain.offset + 0 + 11, 1);
    call write~int(223, ~#color_gain.base, ~#color_gain.offset + 0 + 12, 1);
    call write~int(0, ~#color_gain.base, ~#color_gain.offset + 0 + 13, 1);
    call write~int(70, ~#color_gain.base, ~#color_gain.offset + 0 + 14, 1);
    call write~int(3, ~#color_gain.base, ~#color_gain.offset + 0 + 15, 1);
    call write~int(220, ~#color_gain.base, ~#color_gain.offset + 0 + 16, 1);
    call write~int(3, ~#color_gain.base, ~#color_gain.offset + 0 + 17, 1);
    call write~int(76, ~#color_gain.base, ~#color_gain.offset + 18 + 0, 1);
    call write~int(0, ~#color_gain.base, ~#color_gain.offset + 18 + 1, 1);
    call write~int(149, ~#color_gain.base, ~#color_gain.offset + 18 + 2, 1);
    call write~int(0, ~#color_gain.base, ~#color_gain.offset + 18 + 3, 1);
    call write~int(29, ~#color_gain.base, ~#color_gain.offset + 18 + 4, 1);
    call write~int(0, ~#color_gain.base, ~#color_gain.offset + 18 + 5, 1);
    call write~int(182, ~#color_gain.base, ~#color_gain.offset + 18 + 6, 1);
    call write~int(3, ~#color_gain.base, ~#color_gain.offset + 18 + 7, 1);
    call write~int(108, ~#color_gain.base, ~#color_gain.offset + 18 + 8, 1);
    call write~int(3, ~#color_gain.base, ~#color_gain.offset + 18 + 9, 1);
    call write~int(215, ~#color_gain.base, ~#color_gain.offset + 18 + 10, 1);
    call write~int(0, ~#color_gain.base, ~#color_gain.offset + 18 + 11, 1);
    call write~int(213, ~#color_gain.base, ~#color_gain.offset + 18 + 12, 1);
    call write~int(0, ~#color_gain.base, ~#color_gain.offset + 18 + 13, 1);
    call write~int(70, ~#color_gain.base, ~#color_gain.offset + 18 + 14, 1);
    call write~int(3, ~#color_gain.base, ~#color_gain.offset + 18 + 15, 1);
    call write~int(220, ~#color_gain.base, ~#color_gain.offset + 18 + 16, 1);
    call write~int(3, ~#color_gain.base, ~#color_gain.offset + 18 + 17, 1);
    call ~#sd_ctrl_ops.base, ~#sd_ctrl_ops.offset := #Ultimate.alloc(24);
    call write~$Pointer$(0, 0, ~#sd_ctrl_ops.base, ~#sd_ctrl_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#sd_ctrl_ops.base, ~#sd_ctrl_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~sd_s_ctrl.base, #funAddr~sd_s_ctrl.offset, ~#sd_ctrl_ops.base, ~#sd_ctrl_ops.offset + 16, 8);
    call ~#sd_desc.base, ~#sd_desc.offset := #Ultimate.alloc(169);
    call #t~nondet19808.base, #t~nondet19808.offset := #Ultimate.alloc(12);
    call write~$Pointer$(#t~nondet19808.base, #t~nondet19808.offset, ~#sd_desc.base, ~#sd_desc.offset + 0, 8);
    call write~$Pointer$(#funAddr~sd_config.base, #funAddr~sd_config.offset, ~#sd_desc.base, ~#sd_desc.offset + 8, 8);
    call write~$Pointer$(#funAddr~sd_init.base, #funAddr~sd_init.offset, ~#sd_desc.base, ~#sd_desc.offset + 16, 8);
    call write~$Pointer$(#funAddr~sd_init_controls.base, #funAddr~sd_init_controls.offset, ~#sd_desc.base, ~#sd_desc.offset + 24, 8);
    call write~$Pointer$(#funAddr~sd_start.base, #funAddr~sd_start.offset, ~#sd_desc.base, ~#sd_desc.offset + 32, 8);
    call write~$Pointer$(#funAddr~sd_pkt_scan.base, #funAddr~sd_pkt_scan.offset, ~#sd_desc.base, ~#sd_desc.offset + 40, 8);
    call write~$Pointer$(#funAddr~sd_isoc_init.base, #funAddr~sd_isoc_init.offset, ~#sd_desc.base, ~#sd_desc.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#sd_desc.base, ~#sd_desc.offset + 56, 8);
    call write~$Pointer$(#funAddr~sd_stopN.base, #funAddr~sd_stopN.offset, ~#sd_desc.base, ~#sd_desc.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#sd_desc.base, ~#sd_desc.offset + 72, 8);
    call write~$Pointer$(#funAddr~sd_dq_callback.base, #funAddr~sd_dq_callback.offset, ~#sd_desc.base, ~#sd_desc.offset + 80, 8);
    call write~$Pointer$(#funAddr~sd_get_jcomp.base, #funAddr~sd_get_jcomp.offset, ~#sd_desc.base, ~#sd_desc.offset + 88, 8);
    call write~$Pointer$(#funAddr~sd_set_jcomp.base, #funAddr~sd_set_jcomp.offset, ~#sd_desc.base, ~#sd_desc.offset + 96, 8);
    call write~$Pointer$(#funAddr~sd_get_streamparm.base, #funAddr~sd_get_streamparm.offset, ~#sd_desc.base, ~#sd_desc.offset + 104, 8);
    call write~$Pointer$(#funAddr~sd_set_streamparm.base, #funAddr~sd_set_streamparm.offset, ~#sd_desc.base, ~#sd_desc.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#sd_desc.base, ~#sd_desc.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#sd_desc.base, ~#sd_desc.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#sd_desc.base, ~#sd_desc.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#sd_desc.base, ~#sd_desc.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#sd_desc.base, ~#sd_desc.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#sd_desc.base, ~#sd_desc.offset + 160, 8);
    call write~int(0, ~#sd_desc.base, ~#sd_desc.offset + 168, 1);
    havoc #t~nondet19808.base, #t~nondet19808.offset;
    call ~#device_table.base, ~#device_table.offset := #Ultimate.alloc(75);
    call write~int(3, ~#device_table.base, ~#device_table.offset + 0 + 0, 2);
    call write~int(1698, ~#device_table.base, ~#device_table.offset + 0 + 2, 2);
    call write~int(3, ~#device_table.base, ~#device_table.offset + 0 + 4, 2);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 0 + 6, 2);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 0 + 8, 2);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 0 + 10, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 0 + 11, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 0 + 12, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 0 + 13, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 0 + 14, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 0 + 15, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 0 + 16, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 0 + 17, 8);
    call write~int(3, ~#device_table.base, ~#device_table.offset + 25 + 0, 2);
    call write~int(1698, ~#device_table.base, ~#device_table.offset + 25 + 2, 2);
    call write~int(26640, ~#device_table.base, ~#device_table.offset + 25 + 4, 2);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 25 + 6, 2);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 25 + 8, 2);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 25 + 10, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 25 + 11, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 25 + 12, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 25 + 13, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 25 + 14, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 25 + 15, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 25 + 16, 1);
    call write~int(1, ~#device_table.base, ~#device_table.offset + 25 + 17, 8);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 50 + 0, 2);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 50 + 2, 2);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 50 + 4, 2);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 50 + 6, 2);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 50 + 8, 2);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 50 + 10, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 50 + 11, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 50 + 12, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 50 + 13, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 50 + 14, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 50 + 15, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 50 + 16, 1);
    call write~int(0, ~#device_table.base, ~#device_table.offset + 50 + 17, 8);
    call ~#sd_driver.base, ~#sd_driver.offset := #Ultimate.alloc(297);
    call #t~nondet19810.base, #t~nondet19810.offset := #Ultimate.alloc(12);
    call write~$Pointer$(#t~nondet19810.base, #t~nondet19810.offset, ~#sd_driver.base, ~#sd_driver.offset + 0, 8);
    call write~$Pointer$(#funAddr~sd_probe.base, #funAddr~sd_probe.offset, ~#sd_driver.base, ~#sd_driver.offset + 8, 8);
    call write~$Pointer$(#funAddr~gspca_disconnect.base, #funAddr~gspca_disconnect.offset, ~#sd_driver.base, ~#sd_driver.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 24, 8);
    call write~$Pointer$(#funAddr~gspca_suspend.base, #funAddr~gspca_suspend.offset, ~#sd_driver.base, ~#sd_driver.offset + 32, 8);
    call write~$Pointer$(#funAddr~gspca_resume.base, #funAddr~gspca_resume.offset, ~#sd_driver.base, ~#sd_driver.offset + 40, 8);
    call write~$Pointer$(#funAddr~gspca_resume.base, #funAddr~gspca_resume.offset, ~#sd_driver.base, ~#sd_driver.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 64, 8);
    call write~$Pointer$(~#device_table.base, ~#device_table.offset, ~#sd_driver.base, ~#sd_driver.offset + 72, 8);
    call write~int(0, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union19881.head, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union19881.tail, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(0, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union19882.__padding[0], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union19882.__padding[1], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union19882.__padding[2], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[3], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[4], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[5], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[6], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[7], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[8], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[9], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[10], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[11], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[12], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[13], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[14], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[15], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[16], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[17], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[18], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[19], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[20], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[21], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[22], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union19882.__padding[23], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union19882.dep_map.key.base, #t~union19882.dep_map.key.offset, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union19882.dep_map.class_cache.base[0], #t~union19882.dep_map.class_cache.offset[0], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union19882.dep_map.class_cache.base[1], #t~union19882.dep_map.class_cache.offset[1], ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union19882.dep_map.name.base, #t~union19882.dep_map.name.offset, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union19882.dep_map.cpu, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union19882.dep_map.ip, ~#sd_driver.base, ~#sd_driver.offset + 80 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 80 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 80 + 68 + 8, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 16, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 24, 8);
    call write~int(0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 32, 1);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 33, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 41, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 49, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 57, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 65, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 73, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 81, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 89, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 97, 8);
    call write~$Pointer$(0, 0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 0 + 105, 8);
    call write~int(0, ~#sd_driver.base, ~#sd_driver.offset + 164 + 113, 4);
    call write~int(0, ~#sd_driver.base, ~#sd_driver.offset + 281, 4);
    call write~int(0, ~#sd_driver.base, ~#sd_driver.offset + 285, 4);
    call write~int(0, ~#sd_driver.base, ~#sd_driver.offset + 289, 4);
    call write~int(0, ~#sd_driver.base, ~#sd_driver.offset + 293, 4);
    havoc #t~nondet19810.base, #t~nondet19810.offset;
    havoc #t~union19881.head, #t~union19881.tail;
    havoc #t~union19882.__padding, #t~union19882.dep_map.key.base, #t~union19882.dep_map.key.offset, #t~union19882.dep_map.class_cache.base, #t~union19882.dep_map.class_cache.offset, #t~union19882.dep_map.name.base, #t~union19882.dep_map.name.offset, #t~union19882.dep_map.cpu, #t~union19882.dep_map.ip;
    ~ldv_0_container_struct_gspca_dev_ptr.base, ~ldv_0_container_struct_gspca_dev_ptr.offset := 0, 0;
    ~ldv_0_container_struct_usb_device_id_ptr.base, ~ldv_0_container_struct_usb_device_id_ptr.offset := 0, 0;
    ~ldv_0_container_struct_v4l2_jpegcompression_ptr.base, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.offset := 0, 0;
    ~ldv_0_container_struct_v4l2_streamparm_ptr.base, ~ldv_0_container_struct_v4l2_streamparm_ptr.offset := 0, 0;
    ~ldv_1_container_struct_v4l2_ctrl_ptr.base, ~ldv_1_container_struct_v4l2_ctrl_ptr.offset := 0, 0;
    ~ldv_2_container_usb_driver.base, ~ldv_2_container_usb_driver.offset := 0, 0;
    ~ldv_2_ldv_param_13_1_default.base, ~ldv_2_ldv_param_13_1_default.offset := 0, 0;
    ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset := 0, 0;
    ~ldv_2_resource_usb_interface.base, ~ldv_2_resource_usb_interface.offset := 0, 0;
    ~ldv_2_usb_device_usb_device.base, ~ldv_2_usb_device_usb_device.offset := 0, 0;
    ~ldv_3_container_usb_driver.base, ~ldv_3_container_usb_driver.offset := 0, 0;
    ~ldv_0_callback_config.base, ~ldv_0_callback_config.offset := #funAddr~sd_config.base, #funAddr~sd_config.offset;
    ~ldv_0_callback_dq_callback.base, ~ldv_0_callback_dq_callback.offset := #funAddr~sd_dq_callback.base, #funAddr~sd_dq_callback.offset;
    ~ldv_0_callback_get_jcomp.base, ~ldv_0_callback_get_jcomp.offset := #funAddr~sd_get_jcomp.base, #funAddr~sd_get_jcomp.offset;
    ~ldv_0_callback_get_streamparm.base, ~ldv_0_callback_get_streamparm.offset := #funAddr~sd_get_streamparm.base, #funAddr~sd_get_streamparm.offset;
    ~ldv_0_callback_init.base, ~ldv_0_callback_init.offset := #funAddr~sd_init.base, #funAddr~sd_init.offset;
    ~ldv_0_callback_init_controls.base, ~ldv_0_callback_init_controls.offset := #funAddr~sd_init_controls.base, #funAddr~sd_init_controls.offset;
    ~ldv_0_callback_isoc_init.base, ~ldv_0_callback_isoc_init.offset := #funAddr~sd_isoc_init.base, #funAddr~sd_isoc_init.offset;
    ~ldv_0_callback_pkt_scan.base, ~ldv_0_callback_pkt_scan.offset := #funAddr~sd_pkt_scan.base, #funAddr~sd_pkt_scan.offset;
    ~ldv_0_callback_set_jcomp.base, ~ldv_0_callback_set_jcomp.offset := #funAddr~sd_set_jcomp.base, #funAddr~sd_set_jcomp.offset;
    ~ldv_0_callback_set_streamparm.base, ~ldv_0_callback_set_streamparm.offset := #funAddr~sd_set_streamparm.base, #funAddr~sd_set_streamparm.offset;
    ~ldv_0_callback_start.base, ~ldv_0_callback_start.offset := #funAddr~sd_start.base, #funAddr~sd_start.offset;
    ~ldv_0_callback_stopN.base, ~ldv_0_callback_stopN.offset := #funAddr~sd_stopN.base, #funAddr~sd_stopN.offset;
    ~ldv_1_callback_s_ctrl.base, ~ldv_1_callback_s_ctrl.offset := #funAddr~sd_s_ctrl.base, #funAddr~sd_s_ctrl.offset;
    ~ldv_2_callback_reset_resume.base, ~ldv_2_callback_reset_resume.offset := #funAddr~gspca_resume.base, #funAddr~gspca_resume.offset;
    ~ldv_6_exit_sd_driver_exit_default.base, ~ldv_6_exit_sd_driver_exit_default.offset := #funAddr~sd_driver_exit.base, #funAddr~sd_driver_exit.offset;
    ~ldv_6_init_sd_driver_init_default.base, ~ldv_6_init_sd_driver_init_default.offset := #funAddr~sd_driver_init.base, #funAddr~sd_driver_init.offset;
    ~LDV_MUTEXES_i_mutex_of_inode := 0;
    ~LDV_MUTEXES_lock := 0;
    ~LDV_MUTEXES_lock_of_v4l2_ctrl_handler := 0;
    ~LDV_MUTEXES_mutex_of_device := 0;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~force_sensor, ~ldv_0_ldv_param_13_1_default.base, ~ldv_0_ldv_param_13_1_default.offset, ~ldv_0_ldv_param_13_2_default, ~ldv_2_probe_retval_default, ~ldv_2_reset_flag_default, ~ldv_6_ret_default, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_statevar_2, ~ldv_statevar_3, ~ldv_statevar_6, ~#jpeg_head.base, ~#jpeg_head.offset, ~#vga_mode.base, ~#vga_mode.offset, ~jpeg_q, ~#rates.base, ~#rates.offset, ~#framerates.base, ~#framerates.offset, ~#rates_6810.base, ~#rates_6810.offset, ~#framerates_6810.base, ~#framerates_6810.offset, ~#DQT.base, ~#DQT.offset, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset, ~#tp6810_late_start.base, ~#tp6810_late_start.offset, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset, ~#color_null.base, ~#color_null.offset, ~#color_gain.base, ~#color_gain.offset, ~#sd_ctrl_ops.base, ~#sd_ctrl_ops.offset, ~#sd_desc.base, ~#sd_desc.offset, ~#device_table.base, ~#device_table.offset, ~#sd_driver.base, ~#sd_driver.offset, ~ldv_0_container_struct_gspca_dev_ptr.base, ~ldv_0_container_struct_gspca_dev_ptr.offset, ~ldv_0_container_struct_usb_device_id_ptr.base, ~ldv_0_container_struct_usb_device_id_ptr.offset, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.base, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.offset, ~ldv_0_container_struct_v4l2_streamparm_ptr.base, ~ldv_0_container_struct_v4l2_streamparm_ptr.offset, ~ldv_1_container_struct_v4l2_ctrl_ptr.base, ~ldv_1_container_struct_v4l2_ctrl_ptr.offset, ~ldv_2_container_usb_driver.base, ~ldv_2_container_usb_driver.offset, ~ldv_2_ldv_param_13_1_default.base, ~ldv_2_ldv_param_13_1_default.offset, ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset, ~ldv_2_resource_usb_interface.base, ~ldv_2_resource_usb_interface.offset, ~ldv_2_usb_device_usb_device.base, ~ldv_2_usb_device_usb_device.offset, ~ldv_3_container_usb_driver.base, ~ldv_3_container_usb_driver.offset, ~ldv_0_callback_config.base, ~ldv_0_callback_config.offset, ~ldv_0_callback_dq_callback.base, ~ldv_0_callback_dq_callback.offset, ~ldv_0_callback_get_jcomp.base, ~ldv_0_callback_get_jcomp.offset, ~ldv_0_callback_get_streamparm.base, ~ldv_0_callback_get_streamparm.offset, ~ldv_0_callback_init.base, ~ldv_0_callback_init.offset, ~ldv_0_callback_init_controls.base, ~ldv_0_callback_init_controls.offset, ~ldv_0_callback_isoc_init.base, ~ldv_0_callback_isoc_init.offset, ~ldv_0_callback_pkt_scan.base, ~ldv_0_callback_pkt_scan.offset, ~ldv_0_callback_set_jcomp.base, ~ldv_0_callback_set_jcomp.offset, ~ldv_0_callback_set_streamparm.base, ~ldv_0_callback_set_streamparm.offset, ~ldv_0_callback_start.base, ~ldv_0_callback_start.offset, ~ldv_0_callback_stopN.base, ~ldv_0_callback_stopN.offset, ~ldv_1_callback_s_ctrl.base, ~ldv_1_callback_s_ctrl.offset, ~ldv_2_callback_reset_resume.base, ~ldv_2_callback_reset_resume.offset, ~ldv_6_exit_sd_driver_exit_default.base, ~ldv_6_exit_sd_driver_exit_default.offset, ~ldv_6_init_sd_driver_init_default.base, ~ldv_6_init_sd_driver_init_default.offset, ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_lock_of_v4l2_ctrl_handler, ~LDV_MUTEXES_mutex_of_device, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_check_final_state() returns (){
  loc13:
    call ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit((if ~LDV_MUTEXES_i_mutex_of_inode % 256 == 0 then 1 else 0));
    return;
}

procedure ldv_check_final_state() returns ();
modifies ;

implementation sd_driver_init() returns (#res : int){
    var #t~nondet19811.base : int, #t~nondet19811.offset : int;
    var #t~ret19812 : int;
    var ~tmp~562 : int;

  loc14:
    havoc ~tmp~562;
    call #t~nondet19811.base, #t~nondet19811.offset := #Ultimate.alloc(12);
    call #t~ret19812 := ldv_usb_register_driver_23(~#sd_driver.base, ~#sd_driver.offset, ~#__this_module.base, ~#__this_module.offset, #t~nondet19811.base, #t~nondet19811.offset);
    assume -2147483648 <= #t~ret19812 && #t~ret19812 <= 2147483647;
    ~tmp~562 := #t~ret19812;
    havoc #t~nondet19811.base, #t~nondet19811.offset;
    havoc #t~ret19812;
    #res := ~tmp~562;
    assume true;
    return;
}

procedure sd_driver_init() returns (#res : int);
modifies #valid, #length, ~ldv_statevar_3, ~ldv_3_container_usb_driver.base, ~ldv_3_container_usb_driver.offset;

implementation ULTIMATE.start() returns (){
    var #t~ret19883 : int;

  loc15:
    call ULTIMATE.init();
    call #t~ret19883 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~force_sensor, ~ldv_0_ldv_param_13_1_default.base, ~ldv_0_ldv_param_13_1_default.offset, ~ldv_0_ldv_param_13_2_default, ~ldv_2_probe_retval_default, ~ldv_2_reset_flag_default, ~ldv_6_ret_default, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_statevar_2, ~ldv_statevar_3, ~ldv_statevar_6, ~#jpeg_head.base, ~#jpeg_head.offset, ~#vga_mode.base, ~#vga_mode.offset, ~jpeg_q, ~#rates.base, ~#rates.offset, ~#framerates.base, ~#framerates.offset, ~#rates_6810.base, ~#rates_6810.offset, ~#framerates_6810.base, ~#framerates_6810.offset, ~#DQT.base, ~#DQT.offset, ~#tp6810_cx_init_common.base, ~#tp6810_cx_init_common.offset, ~#tp6810_ov_init_common.base, ~#tp6810_ov_init_common.offset, ~#tp6810_bridge_start.base, ~#tp6810_bridge_start.offset, ~#tp6810_late_start.base, ~#tp6810_late_start.offset, ~#cx0342_timing_seq.base, ~#cx0342_timing_seq.offset, ~#color_null.base, ~#color_null.offset, ~#color_gain.base, ~#color_gain.offset, ~#sd_ctrl_ops.base, ~#sd_ctrl_ops.offset, ~#sd_desc.base, ~#sd_desc.offset, ~#device_table.base, ~#device_table.offset, ~#sd_driver.base, ~#sd_driver.offset, ~ldv_0_container_struct_gspca_dev_ptr.base, ~ldv_0_container_struct_gspca_dev_ptr.offset, ~ldv_0_container_struct_usb_device_id_ptr.base, ~ldv_0_container_struct_usb_device_id_ptr.offset, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.base, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.offset, ~ldv_0_container_struct_v4l2_streamparm_ptr.base, ~ldv_0_container_struct_v4l2_streamparm_ptr.offset, ~ldv_1_container_struct_v4l2_ctrl_ptr.base, ~ldv_1_container_struct_v4l2_ctrl_ptr.offset, ~ldv_2_container_usb_driver.base, ~ldv_2_container_usb_driver.offset, ~ldv_2_ldv_param_13_1_default.base, ~ldv_2_ldv_param_13_1_default.offset, ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset, ~ldv_2_resource_usb_interface.base, ~ldv_2_resource_usb_interface.offset, ~ldv_2_usb_device_usb_device.base, ~ldv_2_usb_device_usb_device.offset, ~ldv_3_container_usb_driver.base, ~ldv_3_container_usb_driver.offset, ~ldv_0_callback_config.base, ~ldv_0_callback_config.offset, ~ldv_0_callback_dq_callback.base, ~ldv_0_callback_dq_callback.offset, ~ldv_0_callback_get_jcomp.base, ~ldv_0_callback_get_jcomp.offset, ~ldv_0_callback_get_streamparm.base, ~ldv_0_callback_get_streamparm.offset, ~ldv_0_callback_init.base, ~ldv_0_callback_init.offset, ~ldv_0_callback_init_controls.base, ~ldv_0_callback_init_controls.offset, ~ldv_0_callback_isoc_init.base, ~ldv_0_callback_isoc_init.offset, ~ldv_0_callback_pkt_scan.base, ~ldv_0_callback_pkt_scan.offset, ~ldv_0_callback_set_jcomp.base, ~ldv_0_callback_set_jcomp.offset, ~ldv_0_callback_set_streamparm.base, ~ldv_0_callback_set_streamparm.offset, ~ldv_0_callback_start.base, ~ldv_0_callback_start.offset, ~ldv_0_callback_stopN.base, ~ldv_0_callback_stopN.offset, ~ldv_1_callback_s_ctrl.base, ~ldv_1_callback_s_ctrl.offset, ~ldv_2_callback_reset_resume.base, ~ldv_2_callback_reset_resume.offset, ~ldv_6_exit_sd_driver_exit_default.base, ~ldv_6_exit_sd_driver_exit_default.offset, ~ldv_6_init_sd_driver_init_default.base, ~ldv_6_init_sd_driver_init_default.offset, ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_lock_of_v4l2_ctrl_handler, ~LDV_MUTEXES_mutex_of_device, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_statevar_6, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_2_reset_flag_default, ~ldv_statevar_2, ~ldv_statevar_3;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_lock_of_v4l2_ctrl_handler, ~LDV_MUTEXES_mutex_of_device, ~ldv_0_container_struct_gspca_dev_ptr.base, ~ldv_0_container_struct_gspca_dev_ptr.offset, ~ldv_0_container_struct_usb_device_id_ptr.base, ~ldv_0_container_struct_usb_device_id_ptr.offset, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.base, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.offset, ~ldv_0_container_struct_v4l2_streamparm_ptr.base, ~ldv_0_container_struct_v4l2_streamparm_ptr.offset, ~ldv_0_ldv_param_13_1_default.base, ~ldv_0_ldv_param_13_1_default.offset, ~ldv_1_container_struct_v4l2_ctrl_ptr.base, ~ldv_1_container_struct_v4l2_ctrl_ptr.offset, ~ldv_2_ldv_param_13_1_default.base, ~ldv_2_ldv_param_13_1_default.offset, ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset, ~ldv_2_resource_usb_interface.base, ~ldv_2_resource_usb_interface.offset, ~ldv_2_usb_device_usb_device.base, ~ldv_2_usb_device_usb_device.offset, ~ldv_2_reset_flag_default, ~ldv_statevar_2, ~ldv_2_container_usb_driver.base, ~ldv_2_container_usb_driver.offset, ~ldv_statevar_3, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_3_container_usb_driver.base, ~ldv_3_container_usb_driver.offset, ~ldv_statevar_6, ~ldv_6_ret_default, ~ldv_2_probe_retval_default;

implementation ldv_initialize() returns (){
  loc16:
    ~LDV_MUTEXES_i_mutex_of_inode := 0;
    ~LDV_MUTEXES_lock := 0;
    ~LDV_MUTEXES_lock_of_v4l2_ctrl_handler := 0;
    ~LDV_MUTEXES_mutex_of_device := 0;
    assume true;
    return;
}

procedure ldv_initialize() returns ();
modifies ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_lock_of_v4l2_ctrl_handler, ~LDV_MUTEXES_mutex_of_device;

implementation ldv_post_init(#in~init_ret_val : int) returns (#res : int){
    var #t~ret19874 : int;
    var ~init_ret_val : int;
    var ~tmp~973 : int;

  loc17:
    ~init_ret_val := #in~init_ret_val;
    havoc ~tmp~973;
    call #t~ret19874 := ldv_filter_positive_int(~init_ret_val);
    assume -2147483648 <= #t~ret19874 && #t~ret19874 <= 2147483647;
    ~tmp~973 := #t~ret19874;
    havoc #t~ret19874;
    #res := ~tmp~973;
    assume true;
    return;
}

procedure ldv_post_init(#in~init_ret_val : int) returns (#res : int);
modifies ;

implementation ldv_EMGentry_init_sd_driver_init_6_11(#in~arg0.base : int, #in~arg0.offset : int) returns (#res : int){
    var #t~ret19813 : int;
    var ~arg0.base : int, ~arg0.offset : int;
    var ~tmp~620 : int;

  loc18:
    ~arg0.base, ~arg0.offset := #in~arg0.base, #in~arg0.offset;
    havoc ~tmp~620;
    call #t~ret19813 := sd_driver_init();
    assume -2147483648 <= #t~ret19813 && #t~ret19813 <= 2147483647;
    ~tmp~620 := #t~ret19813;
    havoc #t~ret19813;
    #res := ~tmp~620;
    assume true;
    return;
}

procedure ldv_EMGentry_init_sd_driver_init_6_11(#in~arg0.base : int, #in~arg0.offset : int) returns (#res : int);
modifies #valid, #length, ~ldv_statevar_3, ~ldv_3_container_usb_driver.base, ~ldv_3_container_usb_driver.offset;

implementation ldv_allocate_external_0() returns (){
    var #t~ret19814.base : int, #t~ret19814.offset : int;
    var #t~ret19815.base : int, #t~ret19815.offset : int;
    var #t~ret19816.base : int, #t~ret19816.offset : int;
    var #t~ret19817.base : int, #t~ret19817.offset : int;
    var #t~ret19818.base : int, #t~ret19818.offset : int;
    var #t~ret19819.base : int, #t~ret19819.offset : int;
    var #t~ret19820.base : int, #t~ret19820.offset : int;
    var #t~ret19821.base : int, #t~ret19821.offset : int;
    var #t~ret19822.base : int, #t~ret19822.offset : int;
    var #t~ret19823.base : int, #t~ret19823.offset : int;
    var ~tmp~623.base : int, ~tmp~623.offset : int;
    var ~tmp___0~623.base : int, ~tmp___0~623.offset : int;
    var ~tmp___1~623.base : int, ~tmp___1~623.offset : int;
    var ~tmp___2~623.base : int, ~tmp___2~623.offset : int;
    var ~tmp___3~623.base : int, ~tmp___3~623.offset : int;
    var ~tmp___4~623.base : int, ~tmp___4~623.offset : int;
    var ~tmp___5~623.base : int, ~tmp___5~623.offset : int;
    var ~tmp___6~623.base : int, ~tmp___6~623.offset : int;
    var ~tmp___7~623.base : int, ~tmp___7~623.offset : int;
    var ~tmp___8~623.base : int, ~tmp___8~623.offset : int;

  loc19:
    havoc ~tmp~623.base, ~tmp~623.offset;
    havoc ~tmp___0~623.base, ~tmp___0~623.offset;
    havoc ~tmp___1~623.base, ~tmp___1~623.offset;
    havoc ~tmp___2~623.base, ~tmp___2~623.offset;
    havoc ~tmp___3~623.base, ~tmp___3~623.offset;
    havoc ~tmp___4~623.base, ~tmp___4~623.offset;
    havoc ~tmp___5~623.base, ~tmp___5~623.offset;
    havoc ~tmp___6~623.base, ~tmp___6~623.offset;
    havoc ~tmp___7~623.base, ~tmp___7~623.offset;
    havoc ~tmp___8~623.base, ~tmp___8~623.offset;
    call #t~ret19814.base, #t~ret19814.offset := external_allocated_data();
    ~tmp~623.base, ~tmp~623.offset := #t~ret19814.base, #t~ret19814.offset;
    havoc #t~ret19814.base, #t~ret19814.offset;
    ~ldv_0_container_struct_gspca_dev_ptr.base, ~ldv_0_container_struct_gspca_dev_ptr.offset := ~tmp~623.base, ~tmp~623.offset;
    call #t~ret19815.base, #t~ret19815.offset := external_allocated_data();
    ~tmp___0~623.base, ~tmp___0~623.offset := #t~ret19815.base, #t~ret19815.offset;
    havoc #t~ret19815.base, #t~ret19815.offset;
    ~ldv_0_container_struct_usb_device_id_ptr.base, ~ldv_0_container_struct_usb_device_id_ptr.offset := ~tmp___0~623.base, ~tmp___0~623.offset;
    call #t~ret19816.base, #t~ret19816.offset := external_allocated_data();
    ~tmp___1~623.base, ~tmp___1~623.offset := #t~ret19816.base, #t~ret19816.offset;
    havoc #t~ret19816.base, #t~ret19816.offset;
    ~ldv_0_container_struct_v4l2_jpegcompression_ptr.base, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.offset := ~tmp___1~623.base, ~tmp___1~623.offset;
    call #t~ret19817.base, #t~ret19817.offset := external_allocated_data();
    ~tmp___2~623.base, ~tmp___2~623.offset := #t~ret19817.base, #t~ret19817.offset;
    havoc #t~ret19817.base, #t~ret19817.offset;
    ~ldv_0_container_struct_v4l2_streamparm_ptr.base, ~ldv_0_container_struct_v4l2_streamparm_ptr.offset := ~tmp___2~623.base, ~tmp___2~623.offset;
    call #t~ret19818.base, #t~ret19818.offset := external_allocated_data();
    ~tmp___3~623.base, ~tmp___3~623.offset := #t~ret19818.base, #t~ret19818.offset;
    havoc #t~ret19818.base, #t~ret19818.offset;
    ~ldv_0_ldv_param_13_1_default.base, ~ldv_0_ldv_param_13_1_default.offset := ~tmp___3~623.base, ~tmp___3~623.offset;
    call #t~ret19819.base, #t~ret19819.offset := external_allocated_data();
    ~tmp___4~623.base, ~tmp___4~623.offset := #t~ret19819.base, #t~ret19819.offset;
    havoc #t~ret19819.base, #t~ret19819.offset;
    ~ldv_1_container_struct_v4l2_ctrl_ptr.base, ~ldv_1_container_struct_v4l2_ctrl_ptr.offset := ~tmp___4~623.base, ~tmp___4~623.offset;
    call #t~ret19820.base, #t~ret19820.offset := external_allocated_data();
    ~tmp___5~623.base, ~tmp___5~623.offset := #t~ret19820.base, #t~ret19820.offset;
    havoc #t~ret19820.base, #t~ret19820.offset;
    ~ldv_2_ldv_param_13_1_default.base, ~ldv_2_ldv_param_13_1_default.offset := ~tmp___5~623.base, ~tmp___5~623.offset;
    call #t~ret19821.base, #t~ret19821.offset := external_allocated_data();
    ~tmp___6~623.base, ~tmp___6~623.offset := #t~ret19821.base, #t~ret19821.offset;
    havoc #t~ret19821.base, #t~ret19821.offset;
    ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset := ~tmp___6~623.base, ~tmp___6~623.offset;
    call #t~ret19822.base, #t~ret19822.offset := external_allocated_data();
    ~tmp___7~623.base, ~tmp___7~623.offset := #t~ret19822.base, #t~ret19822.offset;
    havoc #t~ret19822.base, #t~ret19822.offset;
    ~ldv_2_resource_usb_interface.base, ~ldv_2_resource_usb_interface.offset := ~tmp___7~623.base, ~tmp___7~623.offset;
    call #t~ret19823.base, #t~ret19823.offset := external_allocated_data();
    ~tmp___8~623.base, ~tmp___8~623.offset := #t~ret19823.base, #t~ret19823.offset;
    havoc #t~ret19823.base, #t~ret19823.offset;
    ~ldv_2_usb_device_usb_device.base, ~ldv_2_usb_device_usb_device.offset := ~tmp___8~623.base, ~tmp___8~623.offset;
    assume true;
    return;
}

procedure ldv_allocate_external_0() returns ();
modifies ~ldv_0_container_struct_gspca_dev_ptr.base, ~ldv_0_container_struct_gspca_dev_ptr.offset, ~ldv_0_container_struct_usb_device_id_ptr.base, ~ldv_0_container_struct_usb_device_id_ptr.offset, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.base, ~ldv_0_container_struct_v4l2_jpegcompression_ptr.offset, ~ldv_0_container_struct_v4l2_streamparm_ptr.base, ~ldv_0_container_struct_v4l2_streamparm_ptr.offset, ~ldv_0_ldv_param_13_1_default.base, ~ldv_0_ldv_param_13_1_default.offset, ~ldv_1_container_struct_v4l2_ctrl_ptr.base, ~ldv_1_container_struct_v4l2_ctrl_ptr.offset, ~ldv_2_ldv_param_13_1_default.base, ~ldv_2_ldv_param_13_1_default.offset, ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset, ~ldv_2_resource_usb_interface.base, ~ldv_2_resource_usb_interface.offset, ~ldv_2_usb_device_usb_device.base, ~ldv_2_usb_device_usb_device.offset;

procedure msleep(#in~7 : int) returns ();
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure usb_bulk_msg(#in~21.base : int, #in~21.offset : int, #in~22 : int, #in~23.base : int, #in~23.offset : int, #in~24 : int, #in~25.base : int, #in~25.offset : int, #in~26 : int) returns (#res : int);
modifies ;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure usb_deregister(#in~11.base : int, #in~11.offset : int) returns ();
modifies ;

procedure gspca_suspend(#in~58.base : int, #in~58.offset : int, #in~59.event : int) returns (#res : int);
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];

procedure __VERIFIER_error() returns ();
modifies ;

procedure gspca_disconnect(#in~53.base : int, #in~53.offset : int) returns ();
modifies ;

procedure C.free(#in~19877.base : int, #in~19877.offset : int) returns ();
modifies ;

procedure malloc(#in~19876 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure gspca_frame_add(#in~54.base : int, #in~54.offset : int, #in~55 : int, #in~56.base : int, #in~56.offset : int, #in~57 : int) returns ();
modifies ;

procedure ldv_pre_usb_register_driver() returns (#res : int);
modifies ;

procedure gspca_dev_probe(#in~48.base : int, #in~48.offset : int, #in~49.base : int, #in~49.offset : int, #in~50.base : int, #in~50.offset : int, #in~51 : int, #in~52.base : int, #in~52.offset : int) returns (#res : int);
modifies ;

procedure gspca_expo_autogain(#in~61.base : int, #in~61.offset : int, #in~62 : int, #in~63 : int, #in~64 : int, #in~65 : int, #in~66 : int) returns (#res : int);
modifies ;

procedure gspca_resume(#in~60.base : int, #in~60.offset : int) returns (#res : int);
modifies ;

procedure memcpy(#in~0.base : int, #in~0.offset : int, #in~1.base : int, #in~1.offset : int, #in~2 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure v4l2_ctrl_cluster(#in~39 : int, #in~40.base : int, #in~40.offset : int) returns ();
modifies ;

procedure usb_control_msg(#in~12.base : int, #in~12.offset : int, #in~13 : int, #in~14 : int, #in~15 : int, #in~16 : int, #in~17 : int, #in~18.base : int, #in~18.offset : int, #in~19 : int, #in~20 : int) returns (#res : int);
modifies ;

procedure usb_register_driver(#in~8.base : int, #in~8.offset : int, #in~9.base : int, #in~9.offset : int, #in~10.base : int, #in~10.offset : int) returns (#res : int);
modifies ;

procedure v4l2_ctrl_new_std(#in~32.base : int, #in~32.offset : int, #in~33.base : int, #in~33.offset : int, #in~34 : int, #in~35 : int, #in~36 : int, #in~37 : int, #in~38 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure memset(#in~3.base : int, #in~3.offset : int, #in~4 : int, #in~5 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure v4l2_ctrl_g_ctrl(#in~45.base : int, #in~45.offset : int) returns (#res : ~s32);
modifies ;

procedure v4l2_ctrl_s_ctrl(#in~46.base : int, #in~46.offset : int, #in~47 : int) returns (#res : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure printk(#in~6.base : int, #in~6.offset : int) returns (#res : int);
modifies ;

procedure ldv_pre_probe() returns ();
modifies ;

procedure external_allocated_data() returns (#res.base : int, #res.offset : int);
modifies ;

procedure v4l2_ctrl_handler_init_class(#in~28.base : int, #in~28.offset : int, #in~29 : int, #in~30.base : int, #in~30.offset : int, #in~31.base : int, #in~31.offset : int) returns (#res : int);
modifies ;

procedure v4l2_ctrl_auto_cluster(#in~41 : int, #in~42.base : int, #in~42.offset : int, #in~43 : int, #in~44 : int) returns ();
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;


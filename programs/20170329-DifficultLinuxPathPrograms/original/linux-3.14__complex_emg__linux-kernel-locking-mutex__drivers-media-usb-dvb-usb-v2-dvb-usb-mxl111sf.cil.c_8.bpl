type STRUCT~static_key_mod;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~task_struct;
type STRUCT~kernfs_open_node;
type STRUCT~kernfs_iattrs;
type STRUCT~sock;
type STRUCT~user_namespace;
type STRUCT~pinctrl;
type STRUCT~pinctrl_state;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~acpi_device;
type STRUCT~dma_coherent_mem;
type STRUCT~iommu_group;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~pid_namespace;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~iovec;
type STRUCT~swap_info_struct;
type STRUCT~backing_dev_info;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~pipe_inode_info;
type STRUCT~cdev;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~mtd_info;
type STRUCT~poll_table_struct;
type STRUCT~nameidata;
type STRUCT~kstatfs;
type STRUCT~xol_area;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~nsproxy;
type STRUCT~assoc_array_ptr;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~ep_device;
type STRUCT~mon_bus;
type STRUCT~usb_tt;
type STRUCT~wusb_dev;
type STRUCT~proc_dir_entry;
type STRUCT~input_mt;
type STRUCT~ir_raw_event_ctrl;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type STRUCT~kmem_cache_node;
type STRUCT~mem_cgroup;
type STRUCT~sec_path;
type STRUCT~prot_inuse;
type STRUCT~fib_rules_ops;
type STRUCT~fib_table;
type STRUCT~inet_peer_base;
type STRUCT~tcpm_hash_bucket;
type STRUCT~xt_table;
type STRUCT~dst_entry;
type STRUCT~neighbour;
type STRUCT~ipv6_devconf;
type STRUCT~rt6_info;
type STRUCT~rt6_statistics;
type STRUCT~fib6_table;
type STRUCT~sctp_mib;
type STRUCT~nf_logger;
type STRUCT~ebt_table;
type STRUCT~ip_conntrack_stat;
type STRUCT~nf_ct_event_notifier;
type STRUCT~nf_exp_event_notifier;
type STRUCT~nft_af_info;
type STRUCT~net_generic;
type STRUCT~netns_ipvs;
type STRUCT~mii_bus;
type STRUCT~Qdisc;
type STRUCT~neigh_parms;
type STRUCT~netpoll_info;
type STRUCT~pcpu_lstats;
type STRUCT~pcpu_dstats;
type STRUCT~pcpu_vstats;
type STRUCT~iw_handler_def;
type STRUCT~iw_public_data;
type STRUCT~forwarding_accel_ops;
type STRUCT~vlan_info;
type STRUCT~tipc_bearer;
type STRUCT~dn_dev;
type STRUCT~inet6_dev;
type STRUCT~wireless_dev;
type STRUCT~cpu_rmap;
type STRUCT~garp_port;
type STRUCT~mrp_port;
type STRUCT~rtnl_link_ops;
type STRUCT~phy_device;
type STRUCT~ip_mc_list;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__s64 = int;
type ~__u64 = int;
type ~s8 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~kernel_ulong_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~qsize_t = int;
type ~dmx_output_t = int;
type ~dmx_input_t = int;
type ~__kernel_sa_family_t = int;
type ~sk_buff_data_t = int;
type ~ldv_func_ret_type = int;
type ~ldv_set = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__le16 = ~__u16;
type ~__be16 = ~__u16;
type ~__le32 = ~__u32;
type ~__be32 = ~__u32;
type ~__wsum = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint8_t = ~__u8;
type ~uint32_t = ~__u32;
type ~uint64_t = ~__u64;
type ~dma_addr_t = ~u64;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~jump_label_t = ~u64;
type ~projid_t = ~__kernel_uid32_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~phandle = ~u32;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~fe_type_t = int;
type ~fe_caps_t = int;
type ~fe_sec_voltage_t = int;
type ~fe_sec_tone_mode_t = int;
type ~fe_sec_mini_cmd_t = int;
type ~fe_status_t = int;
type ~fe_spectral_inversion_t = int;
type ~fe_code_rate_t = int;
type ~fe_modulation_t = int;
type ~fe_transmit_mode_t = int;
type ~fe_guard_interval_t = int;
type ~fe_hierarchy_t = int;
type ~fe_pilot_t = int;
type ~fe_rolloff_t = int;
type ~fe_delivery_system_t = int;
type ~dmx_pes_type_t = int;
type ~dmx_source_t = int;
type ~dma_cookie_t = ~s32;
type ~sa_family_t = ~__kernel_sa_family_t;
type ~netdev_features_t = ~u64;
type ~netdev_tx_t = int;
type ~rx_handler_result_t = int;
const #funAddr~mxl111sf_adap_fe_init.base : int;
const #funAddr~mxl111sf_adap_fe_init.offset : int;
const #funAddr~mxl111sf_adap_fe_sleep.base : int;
const #funAddr~mxl111sf_adap_fe_sleep.offset : int;
const #funAddr~mxl111sf_read_reg.base : int;
const #funAddr~mxl111sf_read_reg.offset : int;
const #funAddr~mxl111sf_write_reg.base : int;
const #funAddr~mxl111sf_write_reg.offset : int;
const #funAddr~mxl111sf_ctrl_program_regs.base : int;
const #funAddr~mxl111sf_ctrl_program_regs.offset : int;
const #funAddr~mxl1x1sf_top_master_ctrl.base : int;
const #funAddr~mxl1x1sf_top_master_ctrl.offset : int;
const #funAddr~mxl111sf_ant_hunt.base : int;
const #funAddr~mxl111sf_ant_hunt.offset : int;
const #funAddr~mxl111sf_i2c_xfer.base : int;
const #funAddr~mxl111sf_i2c_xfer.offset : int;
const #funAddr~mxl111sf_i2c_func.base : int;
const #funAddr~mxl111sf_i2c_func.offset : int;
const #funAddr~mxl111sf_frontend_attach_dvbt.base : int;
const #funAddr~mxl111sf_frontend_attach_dvbt.offset : int;
const #funAddr~mxl111sf_attach_tuner.base : int;
const #funAddr~mxl111sf_attach_tuner.offset : int;
const #funAddr~mxl111sf_ep4_streaming_ctrl.base : int;
const #funAddr~mxl111sf_ep4_streaming_ctrl.offset : int;
const #funAddr~mxl111sf_init.base : int;
const #funAddr~mxl111sf_init.offset : int;
const #funAddr~mxl111sf_get_stream_config_dvbt.base : int;
const #funAddr~mxl111sf_get_stream_config_dvbt.offset : int;
const #funAddr~mxl111sf_frontend_attach_atsc.base : int;
const #funAddr~mxl111sf_frontend_attach_atsc.offset : int;
const #funAddr~mxl111sf_ep6_streaming_ctrl.base : int;
const #funAddr~mxl111sf_ep6_streaming_ctrl.offset : int;
const #funAddr~mxl111sf_get_stream_config_atsc.base : int;
const #funAddr~mxl111sf_get_stream_config_atsc.offset : int;
const #funAddr~mxl111sf_frontend_attach_mh.base : int;
const #funAddr~mxl111sf_frontend_attach_mh.offset : int;
const #funAddr~mxl111sf_ep5_streaming_ctrl.base : int;
const #funAddr~mxl111sf_ep5_streaming_ctrl.offset : int;
const #funAddr~mxl111sf_get_stream_config_mh.base : int;
const #funAddr~mxl111sf_get_stream_config_mh.offset : int;
const #funAddr~mxl111sf_frontend_attach_atsc_mh.base : int;
const #funAddr~mxl111sf_frontend_attach_atsc_mh.offset : int;
const #funAddr~mxl111sf_streaming_ctrl_atsc_mh.base : int;
const #funAddr~mxl111sf_streaming_ctrl_atsc_mh.offset : int;
const #funAddr~mxl111sf_get_stream_config_atsc_mh.base : int;
const #funAddr~mxl111sf_get_stream_config_atsc_mh.offset : int;
const #funAddr~mxl111sf_frontend_attach_mercury.base : int;
const #funAddr~mxl111sf_frontend_attach_mercury.offset : int;
const #funAddr~mxl111sf_streaming_ctrl_mercury.base : int;
const #funAddr~mxl111sf_streaming_ctrl_mercury.offset : int;
const #funAddr~mxl111sf_get_stream_config_mercury.base : int;
const #funAddr~mxl111sf_get_stream_config_mercury.offset : int;
const #funAddr~mxl111sf_frontend_attach_mercury_mh.base : int;
const #funAddr~mxl111sf_frontend_attach_mercury_mh.offset : int;
const #funAddr~mxl111sf_streaming_ctrl_mercury_mh.base : int;
const #funAddr~mxl111sf_streaming_ctrl_mercury_mh.offset : int;
const #funAddr~mxl111sf_get_stream_config_mercury_mh.base : int;
const #funAddr~mxl111sf_get_stream_config_mercury_mh.offset : int;
const #funAddr~dvb_usbv2_probe.base : int;
const #funAddr~dvb_usbv2_probe.offset : int;
const #funAddr~dvb_usbv2_disconnect.base : int;
const #funAddr~dvb_usbv2_disconnect.offset : int;
const #funAddr~dvb_usbv2_suspend.base : int;
const #funAddr~dvb_usbv2_suspend.offset : int;
const #funAddr~dvb_usbv2_resume.base : int;
const #funAddr~dvb_usbv2_resume.offset : int;
const #funAddr~mxl111sf_usb_driver_exit.base : int;
const #funAddr~mxl111sf_usb_driver_exit.offset : int;
const #funAddr~mxl111sf_usb_driver_init.base : int;
const #funAddr~mxl111sf_usb_driver_init.offset : int;
const ~usb_device_speed~USB_SPEED_UNKNOWN : int;
const ~usb_device_speed~USB_SPEED_LOW : int;
const ~usb_device_speed~USB_SPEED_FULL : int;
const ~usb_device_speed~USB_SPEED_HIGH : int;
const ~usb_device_speed~USB_SPEED_WIRELESS : int;
const ~usb_device_speed~USB_SPEED_SUPER : int;
const ~usb_device_state~USB_STATE_NOTATTACHED : int;
const ~usb_device_state~USB_STATE_ATTACHED : int;
const ~usb_device_state~USB_STATE_POWERED : int;
const ~usb_device_state~USB_STATE_RECONNECTING : int;
const ~usb_device_state~USB_STATE_UNAUTHENTICATED : int;
const ~usb_device_state~USB_STATE_DEFAULT : int;
const ~usb_device_state~USB_STATE_ADDRESS : int;
const ~usb_device_state~USB_STATE_CONFIGURED : int;
const ~usb_device_state~USB_STATE_SUSPENDED : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~usb_interface_condition~USB_INTERFACE_UNBOUND : int;
const ~usb_interface_condition~USB_INTERFACE_BINDING : int;
const ~usb_interface_condition~USB_INTERFACE_BOUND : int;
const ~usb_interface_condition~USB_INTERFACE_UNBINDING : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE : int;
const ~usb_device_removable~USB_DEVICE_FIXED : int;
const ~rc_type~RC_TYPE_UNKNOWN : int;
const ~rc_type~RC_TYPE_OTHER : int;
const ~rc_type~RC_TYPE_LIRC : int;
const ~rc_type~RC_TYPE_RC5 : int;
const ~rc_type~RC_TYPE_RC5X : int;
const ~rc_type~RC_TYPE_RC5_SZ : int;
const ~rc_type~RC_TYPE_JVC : int;
const ~rc_type~RC_TYPE_SONY12 : int;
const ~rc_type~RC_TYPE_SONY15 : int;
const ~rc_type~RC_TYPE_SONY20 : int;
const ~rc_type~RC_TYPE_NEC : int;
const ~rc_type~RC_TYPE_SANYO : int;
const ~rc_type~RC_TYPE_MCE_KBD : int;
const ~rc_type~RC_TYPE_RC6_0 : int;
const ~rc_type~RC_TYPE_RC6_6A_20 : int;
const ~rc_type~RC_TYPE_RC6_6A_24 : int;
const ~rc_type~RC_TYPE_RC6_6A_32 : int;
const ~rc_type~RC_TYPE_RC6_MCE : int;
const ~rc_driver_type~RC_DRIVER_SCANCODE : int;
const ~rc_driver_type~RC_DRIVER_IR_RAW : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~fe_type~FE_QPSK : int;
const ~fe_type~FE_QAM : int;
const ~fe_type~FE_OFDM : int;
const ~fe_type~FE_ATSC : int;
const ~fe_caps~FE_IS_STUPID : int;
const ~fe_caps~FE_CAN_INVERSION_AUTO : int;
const ~fe_caps~FE_CAN_FEC_1_2 : int;
const ~fe_caps~FE_CAN_FEC_2_3 : int;
const ~fe_caps~FE_CAN_FEC_3_4 : int;
const ~fe_caps~FE_CAN_FEC_4_5 : int;
const ~fe_caps~FE_CAN_FEC_5_6 : int;
const ~fe_caps~FE_CAN_FEC_6_7 : int;
const ~fe_caps~FE_CAN_FEC_7_8 : int;
const ~fe_caps~FE_CAN_FEC_8_9 : int;
const ~fe_caps~FE_CAN_FEC_AUTO : int;
const ~fe_caps~FE_CAN_QPSK : int;
const ~fe_caps~FE_CAN_QAM_16 : int;
const ~fe_caps~FE_CAN_QAM_32 : int;
const ~fe_caps~FE_CAN_QAM_64 : int;
const ~fe_caps~FE_CAN_QAM_128 : int;
const ~fe_caps~FE_CAN_QAM_256 : int;
const ~fe_caps~FE_CAN_QAM_AUTO : int;
const ~fe_caps~FE_CAN_TRANSMISSION_MODE_AUTO : int;
const ~fe_caps~FE_CAN_BANDWIDTH_AUTO : int;
const ~fe_caps~FE_CAN_GUARD_INTERVAL_AUTO : int;
const ~fe_caps~FE_CAN_HIERARCHY_AUTO : int;
const ~fe_caps~FE_CAN_8VSB : int;
const ~fe_caps~FE_CAN_16VSB : int;
const ~fe_caps~FE_HAS_EXTENDED_CAPS : int;
const ~fe_caps~FE_CAN_MULTISTREAM : int;
const ~fe_caps~FE_CAN_TURBO_FEC : int;
const ~fe_caps~FE_CAN_2G_MODULATION : int;
const ~fe_caps~FE_NEEDS_BENDING : int;
const ~fe_caps~FE_CAN_RECOVER : int;
const ~fe_caps~FE_CAN_MUTE_TS : int;
const ~fe_sec_voltage~SEC_VOLTAGE_13 : int;
const ~fe_sec_voltage~SEC_VOLTAGE_18 : int;
const ~fe_sec_voltage~SEC_VOLTAGE_OFF : int;
const ~fe_sec_tone_mode~SEC_TONE_ON : int;
const ~fe_sec_tone_mode~SEC_TONE_OFF : int;
const ~fe_sec_mini_cmd~SEC_MINI_A : int;
const ~fe_sec_mini_cmd~SEC_MINI_B : int;
const ~fe_status~FE_HAS_SIGNAL : int;
const ~fe_status~FE_HAS_CARRIER : int;
const ~fe_status~FE_HAS_VITERBI : int;
const ~fe_status~FE_HAS_SYNC : int;
const ~fe_status~FE_HAS_LOCK : int;
const ~fe_status~FE_TIMEDOUT : int;
const ~fe_status~FE_REINIT : int;
const ~fe_spectral_inversion~INVERSION_OFF : int;
const ~fe_spectral_inversion~INVERSION_ON : int;
const ~fe_spectral_inversion~INVERSION_AUTO : int;
const ~fe_code_rate~FEC_NONE : int;
const ~fe_code_rate~FEC_1_2 : int;
const ~fe_code_rate~FEC_2_3 : int;
const ~fe_code_rate~FEC_3_4 : int;
const ~fe_code_rate~FEC_4_5 : int;
const ~fe_code_rate~FEC_5_6 : int;
const ~fe_code_rate~FEC_6_7 : int;
const ~fe_code_rate~FEC_7_8 : int;
const ~fe_code_rate~FEC_8_9 : int;
const ~fe_code_rate~FEC_AUTO : int;
const ~fe_code_rate~FEC_3_5 : int;
const ~fe_code_rate~FEC_9_10 : int;
const ~fe_code_rate~FEC_2_5 : int;
const ~fe_modulation~QPSK : int;
const ~fe_modulation~QAM_16 : int;
const ~fe_modulation~QAM_32 : int;
const ~fe_modulation~QAM_64 : int;
const ~fe_modulation~QAM_128 : int;
const ~fe_modulation~QAM_256 : int;
const ~fe_modulation~QAM_AUTO : int;
const ~fe_modulation~VSB_8 : int;
const ~fe_modulation~VSB_16 : int;
const ~fe_modulation~PSK_8 : int;
const ~fe_modulation~APSK_16 : int;
const ~fe_modulation~APSK_32 : int;
const ~fe_modulation~DQPSK : int;
const ~fe_modulation~QAM_4_NR : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_2K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_8K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_AUTO : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_4K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_1K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_16K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_32K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_C1 : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_C3780 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_32 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_16 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_8 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_4 : int;
const ~fe_guard_interval~GUARD_INTERVAL_AUTO : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_128 : int;
const ~fe_guard_interval~GUARD_INTERVAL_19_128 : int;
const ~fe_guard_interval~GUARD_INTERVAL_19_256 : int;
const ~fe_guard_interval~GUARD_INTERVAL_PN420 : int;
const ~fe_guard_interval~GUARD_INTERVAL_PN595 : int;
const ~fe_guard_interval~GUARD_INTERVAL_PN945 : int;
const ~fe_hierarchy~HIERARCHY_NONE : int;
const ~fe_hierarchy~HIERARCHY_1 : int;
const ~fe_hierarchy~HIERARCHY_2 : int;
const ~fe_hierarchy~HIERARCHY_4 : int;
const ~fe_hierarchy~HIERARCHY_AUTO : int;
const ~fe_interleaving~INTERLEAVING_NONE : int;
const ~fe_interleaving~INTERLEAVING_AUTO : int;
const ~fe_interleaving~INTERLEAVING_240 : int;
const ~fe_interleaving~INTERLEAVING_720 : int;
const ~fe_pilot~PILOT_ON : int;
const ~fe_pilot~PILOT_OFF : int;
const ~fe_pilot~PILOT_AUTO : int;
const ~fe_rolloff~ROLLOFF_35 : int;
const ~fe_rolloff~ROLLOFF_20 : int;
const ~fe_rolloff~ROLLOFF_25 : int;
const ~fe_rolloff~ROLLOFF_AUTO : int;
const ~fe_delivery_system~SYS_UNDEFINED : int;
const ~fe_delivery_system~SYS_DVBC_ANNEX_A : int;
const ~fe_delivery_system~SYS_DVBC_ANNEX_B : int;
const ~fe_delivery_system~SYS_DVBT : int;
const ~fe_delivery_system~SYS_DSS : int;
const ~fe_delivery_system~SYS_DVBS : int;
const ~fe_delivery_system~SYS_DVBS2 : int;
const ~fe_delivery_system~SYS_DVBH : int;
const ~fe_delivery_system~SYS_ISDBT : int;
const ~fe_delivery_system~SYS_ISDBS : int;
const ~fe_delivery_system~SYS_ISDBC : int;
const ~fe_delivery_system~SYS_ATSC : int;
const ~fe_delivery_system~SYS_ATSCMH : int;
const ~fe_delivery_system~SYS_DTMB : int;
const ~fe_delivery_system~SYS_CMMB : int;
const ~fe_delivery_system~SYS_DAB : int;
const ~fe_delivery_system~SYS_DVBT2 : int;
const ~fe_delivery_system~SYS_TURBO : int;
const ~fe_delivery_system~SYS_DVBC_ANNEX_C : int;
const ~tuner_param~DVBFE_TUNER_FREQUENCY : int;
const ~tuner_param~DVBFE_TUNER_TUNERSTEP : int;
const ~tuner_param~DVBFE_TUNER_IFFREQ : int;
const ~tuner_param~DVBFE_TUNER_BANDWIDTH : int;
const ~tuner_param~DVBFE_TUNER_REFCLOCK : int;
const ~tuner_param~DVBFE_TUNER_IQSENSE : int;
const ~tuner_param~DVBFE_TUNER_DUMMY : int;
const ~dvbfe_algo~DVBFE_ALGO_HW : int;
const ~dvbfe_algo~DVBFE_ALGO_SW : int;
const ~dvbfe_algo~DVBFE_ALGO_CUSTOM : int;
const ~dvbfe_algo~DVBFE_ALGO_RECOVERY : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_SUCCESS : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_ASLEEP : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_FAILED : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_INVALID : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_AGAIN : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_ERROR : int;
const ~dmx_ts_pes~DMX_PES_AUDIO0 : int;
const ~dmx_ts_pes~DMX_PES_VIDEO0 : int;
const ~dmx_ts_pes~DMX_PES_TELETEXT0 : int;
const ~dmx_ts_pes~DMX_PES_SUBTITLE0 : int;
const ~dmx_ts_pes~DMX_PES_PCR0 : int;
const ~dmx_ts_pes~DMX_PES_AUDIO1 : int;
const ~dmx_ts_pes~DMX_PES_VIDEO1 : int;
const ~dmx_ts_pes~DMX_PES_TELETEXT1 : int;
const ~dmx_ts_pes~DMX_PES_SUBTITLE1 : int;
const ~dmx_ts_pes~DMX_PES_PCR1 : int;
const ~dmx_ts_pes~DMX_PES_AUDIO2 : int;
const ~dmx_ts_pes~DMX_PES_VIDEO2 : int;
const ~dmx_ts_pes~DMX_PES_TELETEXT2 : int;
const ~dmx_ts_pes~DMX_PES_SUBTITLE2 : int;
const ~dmx_ts_pes~DMX_PES_PCR2 : int;
const ~dmx_ts_pes~DMX_PES_AUDIO3 : int;
const ~dmx_ts_pes~DMX_PES_VIDEO3 : int;
const ~dmx_ts_pes~DMX_PES_TELETEXT3 : int;
const ~dmx_ts_pes~DMX_PES_SUBTITLE3 : int;
const ~dmx_ts_pes~DMX_PES_PCR3 : int;
const ~dmx_ts_pes~DMX_PES_OTHER : int;
const ~ldv_24007~DMX_SOURCE_FRONT0 : int;
const ~ldv_24007~DMX_SOURCE_FRONT1 : int;
const ~ldv_24007~DMX_SOURCE_FRONT2 : int;
const ~ldv_24007~DMX_SOURCE_FRONT3 : int;
const ~ldv_24007~DMX_SOURCE_DVR0 : int;
const ~ldv_24007~DMX_SOURCE_DVR1 : int;
const ~ldv_24007~DMX_SOURCE_DVR2 : int;
const ~ldv_24007~DMX_SOURCE_DVR3 : int;
const ~dmx_success~DMX_OK : int;
const ~dmx_success~DMX_LENGTH_ERROR : int;
const ~dmx_success~DMX_OVERRUN_ERROR : int;
const ~dmx_success~DMX_CRC_ERROR : int;
const ~dmx_success~DMX_FRAME_ERROR : int;
const ~dmx_success~DMX_FIFO_ERROR : int;
const ~dmx_success~DMX_MISSED_ERROR : int;
const ~dmx_frontend_source~DMX_MEMORY_FE : int;
const ~dmx_frontend_source~DMX_FRONTEND_0 : int;
const ~dmx_frontend_source~DMX_FRONTEND_1 : int;
const ~dmx_frontend_source~DMX_FRONTEND_2 : int;
const ~dmx_frontend_source~DMX_FRONTEND_3 : int;
const ~dmx_frontend_source~DMX_STREAM_0 : int;
const ~dmx_frontend_source~DMX_STREAM_1 : int;
const ~dmx_frontend_source~DMX_STREAM_2 : int;
const ~dmx_frontend_source~DMX_STREAM_3 : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS : int;
const ~pm_qos_type~PM_QOS_UNITIALIZED : int;
const ~pm_qos_type~PM_QOS_MAX : int;
const ~pm_qos_type~PM_QOS_MIN : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ON : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_OFF : int;
const ~netdev_tx~__NETDEV_TX_MIN : int;
const ~netdev_tx~NETDEV_TX_OK : int;
const ~netdev_tx~NETDEV_TX_BUSY : int;
const ~netdev_tx~NETDEV_TX_LOCKED : int;
const ~rx_handler_result~RX_HANDLER_CONSUMED : int;
const ~rx_handler_result~RX_HANDLER_ANOTHER : int;
const ~rx_handler_result~RX_HANDLER_EXACT : int;
const ~rx_handler_result~RX_HANDLER_PASS : int;
const ~ldv_30159~NETREG_UNINITIALIZED : int;
const ~ldv_30159~NETREG_REGISTERED : int;
const ~ldv_30159~NETREG_UNREGISTERING : int;
const ~ldv_30159~NETREG_UNREGISTERED : int;
const ~ldv_30159~NETREG_RELEASED : int;
const ~ldv_30159~NETREG_DUMMY : int;
const ~ldv_30160~RTNL_LINK_INITIALIZED : int;
const ~ldv_30160~RTNL_LINK_INITIALIZING : int;
const ~dmxdev_type~DMXDEV_TYPE_NONE : int;
const ~dmxdev_type~DMXDEV_TYPE_SEC : int;
const ~dmxdev_type~DMXDEV_TYPE_PES : int;
const ~dmxdev_state~DMXDEV_STATE_FREE : int;
const ~dmxdev_state~DMXDEV_STATE_ALLOCATED : int;
const ~dmxdev_state~DMXDEV_STATE_SET : int;
const ~dmxdev_state~DMXDEV_STATE_GO : int;
const ~dmxdev_state~DMXDEV_STATE_DONE : int;
const ~dmxdev_state~DMXDEV_STATE_TIMEDOUT : int;
const ~mxl111sf_gpio_port_expander~mxl111sf_gpio_hw : int;
const ~mxl111sf_gpio_port_expander~mxl111sf_PCA9534 : int;
const ~mxl111sf_mux_config~PIN_MUX_DEFAULT : int;
const ~mxl111sf_mux_config~PIN_MUX_TS_OUT_PARALLEL : int;
const ~mxl111sf_mux_config~PIN_MUX_TS_OUT_SERIAL : int;
const ~mxl111sf_mux_config~PIN_MUX_GPIO_MODE : int;
const ~mxl111sf_mux_config~PIN_MUX_TS_SERIAL_IN_MODE_0 : int;
const ~mxl111sf_mux_config~PIN_MUX_TS_SERIAL_IN_MODE_1 : int;
const ~mxl111sf_mux_config~PIN_MUX_TS_SPI_IN_MODE_0 : int;
const ~mxl111sf_mux_config~PIN_MUX_TS_SPI_IN_MODE_1 : int;
const ~mxl111sf_mux_config~PIN_MUX_TS_PARALLEL_IN : int;
const ~mxl111sf_mux_config~PIN_MUX_BT656_I2S_MODE : int;
const ~mxl_if_freq~MXL_IF_4_0 : int;
const ~mxl_if_freq~MXL_IF_4_5 : int;
const ~mxl_if_freq~MXL_IF_4_57 : int;
const ~mxl_if_freq~MXL_IF_5_0 : int;
const ~mxl_if_freq~MXL_IF_5_38 : int;
const ~mxl_if_freq~MXL_IF_6_0 : int;
const ~mxl_if_freq~MXL_IF_6_28 : int;
const ~mxl_if_freq~MXL_IF_7_2 : int;
const ~mxl_if_freq~MXL_IF_35_25 : int;
const ~mxl_if_freq~MXL_IF_36 : int;
const ~mxl_if_freq~MXL_IF_36_15 : int;
const ~mxl_if_freq~MXL_IF_44 : int;
const ~lgdt3305_mpeg_mode~LGDT3305_MPEG_PARALLEL : int;
const ~lgdt3305_mpeg_mode~LGDT3305_MPEG_SERIAL : int;
const ~lgdt3305_tp_clock_edge~LGDT3305_TPCLK_RISING_EDGE : int;
const ~lgdt3305_tp_clock_edge~LGDT3305_TPCLK_FALLING_EDGE : int;
const ~lgdt3305_tp_valid_polarity~LGDT3305_TP_VALID_LOW : int;
const ~lgdt3305_tp_valid_polarity~LGDT3305_TP_VALID_HIGH : int;
const ~lgdt_demod_chip_type~LGDT3305 : int;
const ~lgdt_demod_chip_type~LGDT3304 : int;
const ~lg_chip_type~LG2160 : int;
const ~lg_chip_type~LG2161 : int;
const ~lg2160_spi_clock~LG2160_SPI_3_125_MHZ : int;
const ~lg2160_spi_clock~LG2160_SPI_6_25_MHZ : int;
const ~lg2160_spi_clock~LG2160_SPI_12_5_MHZ : int;
axiom #funAddr~mxl111sf_adap_fe_init.base == -1 && #funAddr~mxl111sf_adap_fe_init.offset == 0;
axiom #funAddr~mxl111sf_adap_fe_sleep.base == -1 && #funAddr~mxl111sf_adap_fe_sleep.offset == 1;
axiom #funAddr~mxl111sf_read_reg.base == -1 && #funAddr~mxl111sf_read_reg.offset == 2;
axiom #funAddr~mxl111sf_write_reg.base == -1 && #funAddr~mxl111sf_write_reg.offset == 3;
axiom #funAddr~mxl111sf_ctrl_program_regs.base == -1 && #funAddr~mxl111sf_ctrl_program_regs.offset == 4;
axiom #funAddr~mxl1x1sf_top_master_ctrl.base == -1 && #funAddr~mxl1x1sf_top_master_ctrl.offset == 5;
axiom #funAddr~mxl111sf_ant_hunt.base == -1 && #funAddr~mxl111sf_ant_hunt.offset == 6;
axiom #funAddr~mxl111sf_i2c_xfer.base == -1 && #funAddr~mxl111sf_i2c_xfer.offset == 7;
axiom #funAddr~mxl111sf_i2c_func.base == -1 && #funAddr~mxl111sf_i2c_func.offset == 8;
axiom #funAddr~mxl111sf_frontend_attach_dvbt.base == -1 && #funAddr~mxl111sf_frontend_attach_dvbt.offset == 9;
axiom #funAddr~mxl111sf_attach_tuner.base == -1 && #funAddr~mxl111sf_attach_tuner.offset == 10;
axiom #funAddr~mxl111sf_ep4_streaming_ctrl.base == -1 && #funAddr~mxl111sf_ep4_streaming_ctrl.offset == 11;
axiom #funAddr~mxl111sf_init.base == -1 && #funAddr~mxl111sf_init.offset == 12;
axiom #funAddr~mxl111sf_get_stream_config_dvbt.base == -1 && #funAddr~mxl111sf_get_stream_config_dvbt.offset == 13;
axiom #funAddr~mxl111sf_frontend_attach_atsc.base == -1 && #funAddr~mxl111sf_frontend_attach_atsc.offset == 14;
axiom #funAddr~mxl111sf_ep6_streaming_ctrl.base == -1 && #funAddr~mxl111sf_ep6_streaming_ctrl.offset == 15;
axiom #funAddr~mxl111sf_get_stream_config_atsc.base == -1 && #funAddr~mxl111sf_get_stream_config_atsc.offset == 16;
axiom #funAddr~mxl111sf_frontend_attach_mh.base == -1 && #funAddr~mxl111sf_frontend_attach_mh.offset == 17;
axiom #funAddr~mxl111sf_ep5_streaming_ctrl.base == -1 && #funAddr~mxl111sf_ep5_streaming_ctrl.offset == 18;
axiom #funAddr~mxl111sf_get_stream_config_mh.base == -1 && #funAddr~mxl111sf_get_stream_config_mh.offset == 19;
axiom #funAddr~mxl111sf_frontend_attach_atsc_mh.base == -1 && #funAddr~mxl111sf_frontend_attach_atsc_mh.offset == 20;
axiom #funAddr~mxl111sf_streaming_ctrl_atsc_mh.base == -1 && #funAddr~mxl111sf_streaming_ctrl_atsc_mh.offset == 21;
axiom #funAddr~mxl111sf_get_stream_config_atsc_mh.base == -1 && #funAddr~mxl111sf_get_stream_config_atsc_mh.offset == 22;
axiom #funAddr~mxl111sf_frontend_attach_mercury.base == -1 && #funAddr~mxl111sf_frontend_attach_mercury.offset == 23;
axiom #funAddr~mxl111sf_streaming_ctrl_mercury.base == -1 && #funAddr~mxl111sf_streaming_ctrl_mercury.offset == 24;
axiom #funAddr~mxl111sf_get_stream_config_mercury.base == -1 && #funAddr~mxl111sf_get_stream_config_mercury.offset == 25;
axiom #funAddr~mxl111sf_frontend_attach_mercury_mh.base == -1 && #funAddr~mxl111sf_frontend_attach_mercury_mh.offset == 26;
axiom #funAddr~mxl111sf_streaming_ctrl_mercury_mh.base == -1 && #funAddr~mxl111sf_streaming_ctrl_mercury_mh.offset == 27;
axiom #funAddr~mxl111sf_get_stream_config_mercury_mh.base == -1 && #funAddr~mxl111sf_get_stream_config_mercury_mh.offset == 28;
axiom #funAddr~dvb_usbv2_probe.base == -1 && #funAddr~dvb_usbv2_probe.offset == 29;
axiom #funAddr~dvb_usbv2_disconnect.base == -1 && #funAddr~dvb_usbv2_disconnect.offset == 30;
axiom #funAddr~dvb_usbv2_suspend.base == -1 && #funAddr~dvb_usbv2_suspend.offset == 31;
axiom #funAddr~dvb_usbv2_resume.base == -1 && #funAddr~dvb_usbv2_resume.offset == 32;
axiom #funAddr~mxl111sf_usb_driver_exit.base == -1 && #funAddr~mxl111sf_usb_driver_exit.offset == 33;
axiom #funAddr~mxl111sf_usb_driver_init.base == -1 && #funAddr~mxl111sf_usb_driver_init.offset == 34;
axiom ~usb_device_speed~USB_SPEED_UNKNOWN == 0;
axiom ~usb_device_speed~USB_SPEED_LOW == 1;
axiom ~usb_device_speed~USB_SPEED_FULL == 2;
axiom ~usb_device_speed~USB_SPEED_HIGH == 3;
axiom ~usb_device_speed~USB_SPEED_WIRELESS == 4;
axiom ~usb_device_speed~USB_SPEED_SUPER == 5;
axiom ~usb_device_state~USB_STATE_NOTATTACHED == 0;
axiom ~usb_device_state~USB_STATE_ATTACHED == 1;
axiom ~usb_device_state~USB_STATE_POWERED == 2;
axiom ~usb_device_state~USB_STATE_RECONNECTING == 3;
axiom ~usb_device_state~USB_STATE_UNAUTHENTICATED == 4;
axiom ~usb_device_state~USB_STATE_DEFAULT == 5;
axiom ~usb_device_state~USB_STATE_ADDRESS == 6;
axiom ~usb_device_state~USB_STATE_CONFIGURED == 7;
axiom ~usb_device_state~USB_STATE_SUSPENDED == 8;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBOUND == 0;
axiom ~usb_interface_condition~USB_INTERFACE_BINDING == 1;
axiom ~usb_interface_condition~USB_INTERFACE_BOUND == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBINDING == 3;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN == 0;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE == 1;
axiom ~usb_device_removable~USB_DEVICE_FIXED == 2;
axiom ~rc_type~RC_TYPE_UNKNOWN == 0;
axiom ~rc_type~RC_TYPE_OTHER == 1;
axiom ~rc_type~RC_TYPE_LIRC == 2;
axiom ~rc_type~RC_TYPE_RC5 == 3;
axiom ~rc_type~RC_TYPE_RC5X == 4;
axiom ~rc_type~RC_TYPE_RC5_SZ == 5;
axiom ~rc_type~RC_TYPE_JVC == 6;
axiom ~rc_type~RC_TYPE_SONY12 == 7;
axiom ~rc_type~RC_TYPE_SONY15 == 8;
axiom ~rc_type~RC_TYPE_SONY20 == 9;
axiom ~rc_type~RC_TYPE_NEC == 10;
axiom ~rc_type~RC_TYPE_SANYO == 11;
axiom ~rc_type~RC_TYPE_MCE_KBD == 12;
axiom ~rc_type~RC_TYPE_RC6_0 == 13;
axiom ~rc_type~RC_TYPE_RC6_6A_20 == 14;
axiom ~rc_type~RC_TYPE_RC6_6A_24 == 15;
axiom ~rc_type~RC_TYPE_RC6_6A_32 == 16;
axiom ~rc_type~RC_TYPE_RC6_MCE == 17;
axiom ~rc_driver_type~RC_DRIVER_SCANCODE == 0;
axiom ~rc_driver_type~RC_DRIVER_IR_RAW == 1;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~fe_type~FE_QPSK == 0;
axiom ~fe_type~FE_QAM == 1;
axiom ~fe_type~FE_OFDM == 2;
axiom ~fe_type~FE_ATSC == 3;
axiom ~fe_caps~FE_IS_STUPID == 0;
axiom ~fe_caps~FE_CAN_INVERSION_AUTO == 1;
axiom ~fe_caps~FE_CAN_FEC_1_2 == 2;
axiom ~fe_caps~FE_CAN_FEC_2_3 == 4;
axiom ~fe_caps~FE_CAN_FEC_3_4 == 8;
axiom ~fe_caps~FE_CAN_FEC_4_5 == 16;
axiom ~fe_caps~FE_CAN_FEC_5_6 == 32;
axiom ~fe_caps~FE_CAN_FEC_6_7 == 64;
axiom ~fe_caps~FE_CAN_FEC_7_8 == 128;
axiom ~fe_caps~FE_CAN_FEC_8_9 == 256;
axiom ~fe_caps~FE_CAN_FEC_AUTO == 512;
axiom ~fe_caps~FE_CAN_QPSK == 1024;
axiom ~fe_caps~FE_CAN_QAM_16 == 2048;
axiom ~fe_caps~FE_CAN_QAM_32 == 4096;
axiom ~fe_caps~FE_CAN_QAM_64 == 8192;
axiom ~fe_caps~FE_CAN_QAM_128 == 16384;
axiom ~fe_caps~FE_CAN_QAM_256 == 32768;
axiom ~fe_caps~FE_CAN_QAM_AUTO == 65536;
axiom ~fe_caps~FE_CAN_TRANSMISSION_MODE_AUTO == 131072;
axiom ~fe_caps~FE_CAN_BANDWIDTH_AUTO == 262144;
axiom ~fe_caps~FE_CAN_GUARD_INTERVAL_AUTO == 524288;
axiom ~fe_caps~FE_CAN_HIERARCHY_AUTO == 1048576;
axiom ~fe_caps~FE_CAN_8VSB == 2097152;
axiom ~fe_caps~FE_CAN_16VSB == 4194304;
axiom ~fe_caps~FE_HAS_EXTENDED_CAPS == 8388608;
axiom ~fe_caps~FE_CAN_MULTISTREAM == 67108864;
axiom ~fe_caps~FE_CAN_TURBO_FEC == 134217728;
axiom ~fe_caps~FE_CAN_2G_MODULATION == 268435456;
axiom ~fe_caps~FE_NEEDS_BENDING == 536870912;
axiom ~fe_caps~FE_CAN_RECOVER == 1073741824;
axiom ~fe_caps~FE_CAN_MUTE_TS == 2147483648;
axiom ~fe_sec_voltage~SEC_VOLTAGE_13 == 0;
axiom ~fe_sec_voltage~SEC_VOLTAGE_18 == 1;
axiom ~fe_sec_voltage~SEC_VOLTAGE_OFF == 2;
axiom ~fe_sec_tone_mode~SEC_TONE_ON == 0;
axiom ~fe_sec_tone_mode~SEC_TONE_OFF == 1;
axiom ~fe_sec_mini_cmd~SEC_MINI_A == 0;
axiom ~fe_sec_mini_cmd~SEC_MINI_B == 1;
axiom ~fe_status~FE_HAS_SIGNAL == 1;
axiom ~fe_status~FE_HAS_CARRIER == 2;
axiom ~fe_status~FE_HAS_VITERBI == 4;
axiom ~fe_status~FE_HAS_SYNC == 8;
axiom ~fe_status~FE_HAS_LOCK == 16;
axiom ~fe_status~FE_TIMEDOUT == 32;
axiom ~fe_status~FE_REINIT == 64;
axiom ~fe_spectral_inversion~INVERSION_OFF == 0;
axiom ~fe_spectral_inversion~INVERSION_ON == 1;
axiom ~fe_spectral_inversion~INVERSION_AUTO == 2;
axiom ~fe_code_rate~FEC_NONE == 0;
axiom ~fe_code_rate~FEC_1_2 == 1;
axiom ~fe_code_rate~FEC_2_3 == 2;
axiom ~fe_code_rate~FEC_3_4 == 3;
axiom ~fe_code_rate~FEC_4_5 == 4;
axiom ~fe_code_rate~FEC_5_6 == 5;
axiom ~fe_code_rate~FEC_6_7 == 6;
axiom ~fe_code_rate~FEC_7_8 == 7;
axiom ~fe_code_rate~FEC_8_9 == 8;
axiom ~fe_code_rate~FEC_AUTO == 9;
axiom ~fe_code_rate~FEC_3_5 == 10;
axiom ~fe_code_rate~FEC_9_10 == 11;
axiom ~fe_code_rate~FEC_2_5 == 12;
axiom ~fe_modulation~QPSK == 0;
axiom ~fe_modulation~QAM_16 == 1;
axiom ~fe_modulation~QAM_32 == 2;
axiom ~fe_modulation~QAM_64 == 3;
axiom ~fe_modulation~QAM_128 == 4;
axiom ~fe_modulation~QAM_256 == 5;
axiom ~fe_modulation~QAM_AUTO == 6;
axiom ~fe_modulation~VSB_8 == 7;
axiom ~fe_modulation~VSB_16 == 8;
axiom ~fe_modulation~PSK_8 == 9;
axiom ~fe_modulation~APSK_16 == 10;
axiom ~fe_modulation~APSK_32 == 11;
axiom ~fe_modulation~DQPSK == 12;
axiom ~fe_modulation~QAM_4_NR == 13;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_2K == 0;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_8K == 1;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_AUTO == 2;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_4K == 3;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_1K == 4;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_16K == 5;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_32K == 6;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_C1 == 7;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_C3780 == 8;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_32 == 0;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_16 == 1;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_8 == 2;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_4 == 3;
axiom ~fe_guard_interval~GUARD_INTERVAL_AUTO == 4;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_128 == 5;
axiom ~fe_guard_interval~GUARD_INTERVAL_19_128 == 6;
axiom ~fe_guard_interval~GUARD_INTERVAL_19_256 == 7;
axiom ~fe_guard_interval~GUARD_INTERVAL_PN420 == 8;
axiom ~fe_guard_interval~GUARD_INTERVAL_PN595 == 9;
axiom ~fe_guard_interval~GUARD_INTERVAL_PN945 == 10;
axiom ~fe_hierarchy~HIERARCHY_NONE == 0;
axiom ~fe_hierarchy~HIERARCHY_1 == 1;
axiom ~fe_hierarchy~HIERARCHY_2 == 2;
axiom ~fe_hierarchy~HIERARCHY_4 == 3;
axiom ~fe_hierarchy~HIERARCHY_AUTO == 4;
axiom ~fe_interleaving~INTERLEAVING_NONE == 0;
axiom ~fe_interleaving~INTERLEAVING_AUTO == 1;
axiom ~fe_interleaving~INTERLEAVING_240 == 2;
axiom ~fe_interleaving~INTERLEAVING_720 == 3;
axiom ~fe_pilot~PILOT_ON == 0;
axiom ~fe_pilot~PILOT_OFF == 1;
axiom ~fe_pilot~PILOT_AUTO == 2;
axiom ~fe_rolloff~ROLLOFF_35 == 0;
axiom ~fe_rolloff~ROLLOFF_20 == 1;
axiom ~fe_rolloff~ROLLOFF_25 == 2;
axiom ~fe_rolloff~ROLLOFF_AUTO == 3;
axiom ~fe_delivery_system~SYS_UNDEFINED == 0;
axiom ~fe_delivery_system~SYS_DVBC_ANNEX_A == 1;
axiom ~fe_delivery_system~SYS_DVBC_ANNEX_B == 2;
axiom ~fe_delivery_system~SYS_DVBT == 3;
axiom ~fe_delivery_system~SYS_DSS == 4;
axiom ~fe_delivery_system~SYS_DVBS == 5;
axiom ~fe_delivery_system~SYS_DVBS2 == 6;
axiom ~fe_delivery_system~SYS_DVBH == 7;
axiom ~fe_delivery_system~SYS_ISDBT == 8;
axiom ~fe_delivery_system~SYS_ISDBS == 9;
axiom ~fe_delivery_system~SYS_ISDBC == 10;
axiom ~fe_delivery_system~SYS_ATSC == 11;
axiom ~fe_delivery_system~SYS_ATSCMH == 12;
axiom ~fe_delivery_system~SYS_DTMB == 13;
axiom ~fe_delivery_system~SYS_CMMB == 14;
axiom ~fe_delivery_system~SYS_DAB == 15;
axiom ~fe_delivery_system~SYS_DVBT2 == 16;
axiom ~fe_delivery_system~SYS_TURBO == 17;
axiom ~fe_delivery_system~SYS_DVBC_ANNEX_C == 18;
axiom ~tuner_param~DVBFE_TUNER_FREQUENCY == 1;
axiom ~tuner_param~DVBFE_TUNER_TUNERSTEP == 2;
axiom ~tuner_param~DVBFE_TUNER_IFFREQ == 4;
axiom ~tuner_param~DVBFE_TUNER_BANDWIDTH == 8;
axiom ~tuner_param~DVBFE_TUNER_REFCLOCK == 16;
axiom ~tuner_param~DVBFE_TUNER_IQSENSE == 32;
axiom ~tuner_param~DVBFE_TUNER_DUMMY == -2147483648;
axiom ~dvbfe_algo~DVBFE_ALGO_HW == 1;
axiom ~dvbfe_algo~DVBFE_ALGO_SW == 2;
axiom ~dvbfe_algo~DVBFE_ALGO_CUSTOM == 4;
axiom ~dvbfe_algo~DVBFE_ALGO_RECOVERY == -2147483648;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_SUCCESS == 1;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_ASLEEP == 2;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_FAILED == 4;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_INVALID == 8;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_AGAIN == 16;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_ERROR == -2147483648;
axiom ~dmx_ts_pes~DMX_PES_AUDIO0 == 0;
axiom ~dmx_ts_pes~DMX_PES_VIDEO0 == 1;
axiom ~dmx_ts_pes~DMX_PES_TELETEXT0 == 2;
axiom ~dmx_ts_pes~DMX_PES_SUBTITLE0 == 3;
axiom ~dmx_ts_pes~DMX_PES_PCR0 == 4;
axiom ~dmx_ts_pes~DMX_PES_AUDIO1 == 5;
axiom ~dmx_ts_pes~DMX_PES_VIDEO1 == 6;
axiom ~dmx_ts_pes~DMX_PES_TELETEXT1 == 7;
axiom ~dmx_ts_pes~DMX_PES_SUBTITLE1 == 8;
axiom ~dmx_ts_pes~DMX_PES_PCR1 == 9;
axiom ~dmx_ts_pes~DMX_PES_AUDIO2 == 10;
axiom ~dmx_ts_pes~DMX_PES_VIDEO2 == 11;
axiom ~dmx_ts_pes~DMX_PES_TELETEXT2 == 12;
axiom ~dmx_ts_pes~DMX_PES_SUBTITLE2 == 13;
axiom ~dmx_ts_pes~DMX_PES_PCR2 == 14;
axiom ~dmx_ts_pes~DMX_PES_AUDIO3 == 15;
axiom ~dmx_ts_pes~DMX_PES_VIDEO3 == 16;
axiom ~dmx_ts_pes~DMX_PES_TELETEXT3 == 17;
axiom ~dmx_ts_pes~DMX_PES_SUBTITLE3 == 18;
axiom ~dmx_ts_pes~DMX_PES_PCR3 == 19;
axiom ~dmx_ts_pes~DMX_PES_OTHER == 20;
axiom ~ldv_24007~DMX_SOURCE_FRONT0 == 0;
axiom ~ldv_24007~DMX_SOURCE_FRONT1 == 1;
axiom ~ldv_24007~DMX_SOURCE_FRONT2 == 2;
axiom ~ldv_24007~DMX_SOURCE_FRONT3 == 3;
axiom ~ldv_24007~DMX_SOURCE_DVR0 == 16;
axiom ~ldv_24007~DMX_SOURCE_DVR1 == 17;
axiom ~ldv_24007~DMX_SOURCE_DVR2 == 18;
axiom ~ldv_24007~DMX_SOURCE_DVR3 == 19;
axiom ~dmx_success~DMX_OK == 0;
axiom ~dmx_success~DMX_LENGTH_ERROR == 1;
axiom ~dmx_success~DMX_OVERRUN_ERROR == 2;
axiom ~dmx_success~DMX_CRC_ERROR == 3;
axiom ~dmx_success~DMX_FRAME_ERROR == 4;
axiom ~dmx_success~DMX_FIFO_ERROR == 5;
axiom ~dmx_success~DMX_MISSED_ERROR == 6;
axiom ~dmx_frontend_source~DMX_MEMORY_FE == 0;
axiom ~dmx_frontend_source~DMX_FRONTEND_0 == 1;
axiom ~dmx_frontend_source~DMX_FRONTEND_1 == 2;
axiom ~dmx_frontend_source~DMX_FRONTEND_2 == 3;
axiom ~dmx_frontend_source~DMX_FRONTEND_3 == 4;
axiom ~dmx_frontend_source~DMX_STREAM_0 == 5;
axiom ~dmx_frontend_source~DMX_STREAM_1 == 6;
axiom ~dmx_frontend_source~DMX_STREAM_2 == 7;
axiom ~dmx_frontend_source~DMX_STREAM_3 == 8;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY == 1;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS == 2;
axiom ~pm_qos_type~PM_QOS_UNITIALIZED == 0;
axiom ~pm_qos_type~PM_QOS_MAX == 1;
axiom ~pm_qos_type~PM_QOS_MIN == 2;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE == 0;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE == 1;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ON == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_OFF == 3;
axiom ~netdev_tx~__NETDEV_TX_MIN == -2147483648;
axiom ~netdev_tx~NETDEV_TX_OK == 0;
axiom ~netdev_tx~NETDEV_TX_BUSY == 16;
axiom ~netdev_tx~NETDEV_TX_LOCKED == 32;
axiom ~rx_handler_result~RX_HANDLER_CONSUMED == 0;
axiom ~rx_handler_result~RX_HANDLER_ANOTHER == 1;
axiom ~rx_handler_result~RX_HANDLER_EXACT == 2;
axiom ~rx_handler_result~RX_HANDLER_PASS == 3;
axiom ~ldv_30159~NETREG_UNINITIALIZED == 0;
axiom ~ldv_30159~NETREG_REGISTERED == 1;
axiom ~ldv_30159~NETREG_UNREGISTERING == 2;
axiom ~ldv_30159~NETREG_UNREGISTERED == 3;
axiom ~ldv_30159~NETREG_RELEASED == 4;
axiom ~ldv_30159~NETREG_DUMMY == 5;
axiom ~ldv_30160~RTNL_LINK_INITIALIZED == 0;
axiom ~ldv_30160~RTNL_LINK_INITIALIZING == 1;
axiom ~dmxdev_type~DMXDEV_TYPE_NONE == 0;
axiom ~dmxdev_type~DMXDEV_TYPE_SEC == 1;
axiom ~dmxdev_type~DMXDEV_TYPE_PES == 2;
axiom ~dmxdev_state~DMXDEV_STATE_FREE == 0;
axiom ~dmxdev_state~DMXDEV_STATE_ALLOCATED == 1;
axiom ~dmxdev_state~DMXDEV_STATE_SET == 2;
axiom ~dmxdev_state~DMXDEV_STATE_GO == 3;
axiom ~dmxdev_state~DMXDEV_STATE_DONE == 4;
axiom ~dmxdev_state~DMXDEV_STATE_TIMEDOUT == 5;
axiom ~mxl111sf_gpio_port_expander~mxl111sf_gpio_hw == 0;
axiom ~mxl111sf_gpio_port_expander~mxl111sf_PCA9534 == 1;
axiom ~mxl111sf_mux_config~PIN_MUX_DEFAULT == 0;
axiom ~mxl111sf_mux_config~PIN_MUX_TS_OUT_PARALLEL == 1;
axiom ~mxl111sf_mux_config~PIN_MUX_TS_OUT_SERIAL == 2;
axiom ~mxl111sf_mux_config~PIN_MUX_GPIO_MODE == 3;
axiom ~mxl111sf_mux_config~PIN_MUX_TS_SERIAL_IN_MODE_0 == 4;
axiom ~mxl111sf_mux_config~PIN_MUX_TS_SERIAL_IN_MODE_1 == 5;
axiom ~mxl111sf_mux_config~PIN_MUX_TS_SPI_IN_MODE_0 == 6;
axiom ~mxl111sf_mux_config~PIN_MUX_TS_SPI_IN_MODE_1 == 7;
axiom ~mxl111sf_mux_config~PIN_MUX_TS_PARALLEL_IN == 8;
axiom ~mxl111sf_mux_config~PIN_MUX_BT656_I2S_MODE == 9;
axiom ~mxl_if_freq~MXL_IF_4_0 == 1;
axiom ~mxl_if_freq~MXL_IF_4_5 == 2;
axiom ~mxl_if_freq~MXL_IF_4_57 == 3;
axiom ~mxl_if_freq~MXL_IF_5_0 == 4;
axiom ~mxl_if_freq~MXL_IF_5_38 == 5;
axiom ~mxl_if_freq~MXL_IF_6_0 == 6;
axiom ~mxl_if_freq~MXL_IF_6_28 == 7;
axiom ~mxl_if_freq~MXL_IF_7_2 == 8;
axiom ~mxl_if_freq~MXL_IF_35_25 == 9;
axiom ~mxl_if_freq~MXL_IF_36 == 10;
axiom ~mxl_if_freq~MXL_IF_36_15 == 11;
axiom ~mxl_if_freq~MXL_IF_44 == 12;
axiom ~lgdt3305_mpeg_mode~LGDT3305_MPEG_PARALLEL == 0;
axiom ~lgdt3305_mpeg_mode~LGDT3305_MPEG_SERIAL == 1;
axiom ~lgdt3305_tp_clock_edge~LGDT3305_TPCLK_RISING_EDGE == 0;
axiom ~lgdt3305_tp_clock_edge~LGDT3305_TPCLK_FALLING_EDGE == 1;
axiom ~lgdt3305_tp_valid_polarity~LGDT3305_TP_VALID_LOW == 0;
axiom ~lgdt3305_tp_valid_polarity~LGDT3305_TP_VALID_HIGH == 1;
axiom ~lgdt_demod_chip_type~LGDT3305 == 0;
axiom ~lgdt_demod_chip_type~LGDT3304 == 1;
axiom ~lg_chip_type~LG2160 == 0;
axiom ~lg_chip_type~LG2161 == 1;
axiom ~lg2160_spi_clock~LG2160_SPI_3_125_MHZ == 0;
axiom ~lg2160_spi_clock~LG2160_SPI_6_25_MHZ == 1;
axiom ~lg2160_spi_clock~LG2160_SPI_12_5_MHZ == 2;
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseComplement" } ~bitwiseComplement(in0 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
var ~dvb_usb_mxl111sf_debug : int;

var ~dvb_usb_mxl111sf_isoc : int;

var ~dvb_usb_mxl111sf_spi : int;

var ~dvb_usb_mxl111sf_rfswitch : int;

var ~#adapter_nr.base : int, ~#adapter_nr.offset : int;

var ~ldv_0_ldv_param_12_2_default : int;

var ~ldv_0_ldv_param_15_1_default : int;

var ~ldv_0_ldv_param_8_1_default.base : int, ~ldv_0_ldv_param_8_1_default.offset : int;

var ~ldv_11_ret_default : int;

var ~ldv_1_ldv_param_12_2_default : int;

var ~ldv_1_ldv_param_15_1_default : int;

var ~ldv_1_ldv_param_8_1_default.base : int, ~ldv_1_ldv_param_8_1_default.offset : int;

var ~ldv_2_ldv_param_12_2_default : int;

var ~ldv_2_ldv_param_15_1_default : int;

var ~ldv_2_ldv_param_8_1_default.base : int, ~ldv_2_ldv_param_8_1_default.offset : int;

var ~ldv_3_ldv_param_12_2_default : int;

var ~ldv_3_ldv_param_15_1_default : int;

var ~ldv_3_ldv_param_8_1_default.base : int, ~ldv_3_ldv_param_8_1_default.offset : int;

var ~ldv_4_ldv_param_12_2_default : int;

var ~ldv_4_ldv_param_15_1_default : int;

var ~ldv_4_ldv_param_8_1_default.base : int, ~ldv_4_ldv_param_8_1_default.offset : int;

var ~ldv_5_ldv_param_12_2_default : int;

var ~ldv_5_ldv_param_15_1_default : int;

var ~ldv_5_ldv_param_8_1_default.base : int, ~ldv_5_ldv_param_8_1_default.offset : int;

var ~ldv_6_ldv_param_11_1_default : int;

var ~ldv_6_ldv_param_14_1_default : int;

var ~ldv_6_ldv_param_14_2_default : int;

var ~ldv_6_ldv_param_8_1_default : int;

var ~ldv_6_ldv_param_8_2_default.base : int, ~ldv_6_ldv_param_8_2_default.offset : int;

var ~ldv_7_probe_retval_default : int;

var ~ldv_7_reset_flag_default : int;

var ~ldv_statevar_0 : int;

var ~ldv_statevar_1 : int;

var ~ldv_statevar_11 : int;

var ~ldv_statevar_2 : int;

var ~ldv_statevar_3 : int;

var ~ldv_statevar_4 : int;

var ~ldv_statevar_5 : int;

var ~ldv_statevar_6 : int;

var ~ldv_statevar_7 : int;

var ~ldv_statevar_8 : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~#hauppauge_lgdt3305_config.base : int, ~#hauppauge_lgdt3305_config.offset : int;

var ~#hauppauge_lg2160_config.base : int, ~#hauppauge_lg2160_config.offset : int;

var ~#hauppauge_lg2161_1019_config.base : int, ~#hauppauge_lg2161_1019_config.offset : int;

var ~#hauppauge_lg2161_1040_config.base : int, ~#hauppauge_lg2161_1040_config.offset : int;

var ~#hauppauge_lg2161_1019_ep6_config.base : int, ~#hauppauge_lg2161_1019_ep6_config.offset : int;

var ~#hauppauge_lg2161_1040_ep6_config.base : int, ~#hauppauge_lg2161_1040_ep6_config.offset : int;

var ~#mxl_demod_config.base : int, ~#mxl_demod_config.offset : int;

var ~#mxl_tuner_config.base : int, ~#mxl_tuner_config.offset : int;

var ~#mxl111sf_i2c_algo.base : int, ~#mxl111sf_i2c_algo.offset : int;

var ~#mxl111sf_props_dvbt.base : int, ~#mxl111sf_props_dvbt.offset : int;

var ~#mxl111sf_props_atsc.base : int, ~#mxl111sf_props_atsc.offset : int;

var ~#mxl111sf_props_mh.base : int, ~#mxl111sf_props_mh.offset : int;

var ~#mxl111sf_props_atsc_mh.base : int, ~#mxl111sf_props_atsc_mh.offset : int;

var ~#mxl111sf_props_mercury.base : int, ~#mxl111sf_props_mercury.offset : int;

var ~#mxl111sf_props_mercury_mh.base : int, ~#mxl111sf_props_mercury_mh.offset : int;

var ~#__constr_expr_0.base : int, ~#__constr_expr_0.offset : int;

var ~#__constr_expr_1.base : int, ~#__constr_expr_1.offset : int;

var ~#__constr_expr_2.base : int, ~#__constr_expr_2.offset : int;

var ~#__constr_expr_3.base : int, ~#__constr_expr_3.offset : int;

var ~#__constr_expr_4.base : int, ~#__constr_expr_4.offset : int;

var ~#__constr_expr_5.base : int, ~#__constr_expr_5.offset : int;

var ~#__constr_expr_6.base : int, ~#__constr_expr_6.offset : int;

var ~#__constr_expr_7.base : int, ~#__constr_expr_7.offset : int;

var ~#__constr_expr_8.base : int, ~#__constr_expr_8.offset : int;

var ~#__constr_expr_9.base : int, ~#__constr_expr_9.offset : int;

var ~#__constr_expr_10.base : int, ~#__constr_expr_10.offset : int;

var ~#__constr_expr_11.base : int, ~#__constr_expr_11.offset : int;

var ~#__constr_expr_12.base : int, ~#__constr_expr_12.offset : int;

var ~#__constr_expr_13.base : int, ~#__constr_expr_13.offset : int;

var ~#__constr_expr_14.base : int, ~#__constr_expr_14.offset : int;

var ~#__constr_expr_15.base : int, ~#__constr_expr_15.offset : int;

var ~#__constr_expr_16.base : int, ~#__constr_expr_16.offset : int;

var ~#__constr_expr_17.base : int, ~#__constr_expr_17.offset : int;

var ~#__constr_expr_18.base : int, ~#__constr_expr_18.offset : int;

var ~#__constr_expr_19.base : int, ~#__constr_expr_19.offset : int;

var ~#__constr_expr_20.base : int, ~#__constr_expr_20.offset : int;

var ~#__constr_expr_21.base : int, ~#__constr_expr_21.offset : int;

var ~#__constr_expr_22.base : int, ~#__constr_expr_22.offset : int;

var ~#__constr_expr_23.base : int, ~#__constr_expr_23.offset : int;

var ~#__constr_expr_24.base : int, ~#__constr_expr_24.offset : int;

var ~#__constr_expr_25.base : int, ~#__constr_expr_25.offset : int;

var ~#__constr_expr_26.base : int, ~#__constr_expr_26.offset : int;

var ~#__constr_expr_27.base : int, ~#__constr_expr_27.offset : int;

var ~#__constr_expr_28.base : int, ~#__constr_expr_28.offset : int;

var ~#__constr_expr_29.base : int, ~#__constr_expr_29.offset : int;

var ~#__constr_expr_30.base : int, ~#__constr_expr_30.offset : int;

var ~#__constr_expr_31.base : int, ~#__constr_expr_31.offset : int;

var ~#__constr_expr_32.base : int, ~#__constr_expr_32.offset : int;

var ~#__constr_expr_33.base : int, ~#__constr_expr_33.offset : int;

var ~#mxl111sf_id_table.base : int, ~#mxl111sf_id_table.offset : int;

var ~#mxl111sf_usb_driver.base : int, ~#mxl111sf_usb_driver.offset : int;

var ~ldv_0_container_struct_dvb_frontend_ptr.base : int, ~ldv_0_container_struct_dvb_frontend_ptr.offset : int;

var ~ldv_0_container_struct_dvb_usb_adapter_ptr.base : int, ~ldv_0_container_struct_dvb_usb_adapter_ptr.offset : int;

var ~ldv_0_container_struct_dvb_usb_device_ptr.base : int, ~ldv_0_container_struct_dvb_usb_device_ptr.offset : int;

var ~ldv_0_container_struct_i2c_adapter_ptr.base : int, ~ldv_0_container_struct_i2c_adapter_ptr.offset : int;

var ~ldv_0_container_struct_i2c_msg_ptr.base : int, ~ldv_0_container_struct_i2c_msg_ptr.offset : int;

var ~ldv_0_container_struct_usb_data_stream_properties_ptr.base : int, ~ldv_0_container_struct_usb_data_stream_properties_ptr.offset : int;

var ~ldv_1_container_struct_dvb_frontend_ptr.base : int, ~ldv_1_container_struct_dvb_frontend_ptr.offset : int;

var ~ldv_1_container_struct_dvb_usb_adapter_ptr.base : int, ~ldv_1_container_struct_dvb_usb_adapter_ptr.offset : int;

var ~ldv_1_container_struct_dvb_usb_device_ptr.base : int, ~ldv_1_container_struct_dvb_usb_device_ptr.offset : int;

var ~ldv_1_container_struct_i2c_adapter_ptr.base : int, ~ldv_1_container_struct_i2c_adapter_ptr.offset : int;

var ~ldv_1_container_struct_i2c_msg_ptr.base : int, ~ldv_1_container_struct_i2c_msg_ptr.offset : int;

var ~ldv_1_container_struct_usb_data_stream_properties_ptr.base : int, ~ldv_1_container_struct_usb_data_stream_properties_ptr.offset : int;

var ~ldv_2_container_struct_dvb_frontend_ptr.base : int, ~ldv_2_container_struct_dvb_frontend_ptr.offset : int;

var ~ldv_2_container_struct_dvb_usb_adapter_ptr.base : int, ~ldv_2_container_struct_dvb_usb_adapter_ptr.offset : int;

var ~ldv_2_container_struct_dvb_usb_device_ptr.base : int, ~ldv_2_container_struct_dvb_usb_device_ptr.offset : int;

var ~ldv_2_container_struct_i2c_adapter_ptr.base : int, ~ldv_2_container_struct_i2c_adapter_ptr.offset : int;

var ~ldv_2_container_struct_i2c_msg_ptr.base : int, ~ldv_2_container_struct_i2c_msg_ptr.offset : int;

var ~ldv_2_container_struct_usb_data_stream_properties_ptr.base : int, ~ldv_2_container_struct_usb_data_stream_properties_ptr.offset : int;

var ~ldv_3_container_struct_dvb_frontend_ptr.base : int, ~ldv_3_container_struct_dvb_frontend_ptr.offset : int;

var ~ldv_3_container_struct_dvb_usb_adapter_ptr.base : int, ~ldv_3_container_struct_dvb_usb_adapter_ptr.offset : int;

var ~ldv_3_container_struct_dvb_usb_device_ptr.base : int, ~ldv_3_container_struct_dvb_usb_device_ptr.offset : int;

var ~ldv_3_container_struct_i2c_adapter_ptr.base : int, ~ldv_3_container_struct_i2c_adapter_ptr.offset : int;

var ~ldv_3_container_struct_i2c_msg_ptr.base : int, ~ldv_3_container_struct_i2c_msg_ptr.offset : int;

var ~ldv_3_container_struct_usb_data_stream_properties_ptr.base : int, ~ldv_3_container_struct_usb_data_stream_properties_ptr.offset : int;

var ~ldv_4_container_struct_dvb_frontend_ptr.base : int, ~ldv_4_container_struct_dvb_frontend_ptr.offset : int;

var ~ldv_4_container_struct_dvb_usb_adapter_ptr.base : int, ~ldv_4_container_struct_dvb_usb_adapter_ptr.offset : int;

var ~ldv_4_container_struct_dvb_usb_device_ptr.base : int, ~ldv_4_container_struct_dvb_usb_device_ptr.offset : int;

var ~ldv_4_container_struct_i2c_adapter_ptr.base : int, ~ldv_4_container_struct_i2c_adapter_ptr.offset : int;

var ~ldv_4_container_struct_i2c_msg_ptr.base : int, ~ldv_4_container_struct_i2c_msg_ptr.offset : int;

var ~ldv_4_container_struct_usb_data_stream_properties_ptr.base : int, ~ldv_4_container_struct_usb_data_stream_properties_ptr.offset : int;

var ~ldv_5_container_struct_dvb_frontend_ptr.base : int, ~ldv_5_container_struct_dvb_frontend_ptr.offset : int;

var ~ldv_5_container_struct_dvb_usb_adapter_ptr.base : int, ~ldv_5_container_struct_dvb_usb_adapter_ptr.offset : int;

var ~ldv_5_container_struct_dvb_usb_device_ptr.base : int, ~ldv_5_container_struct_dvb_usb_device_ptr.offset : int;

var ~ldv_5_container_struct_i2c_adapter_ptr.base : int, ~ldv_5_container_struct_i2c_adapter_ptr.offset : int;

var ~ldv_5_container_struct_i2c_msg_ptr.base : int, ~ldv_5_container_struct_i2c_msg_ptr.offset : int;

var ~ldv_5_container_struct_usb_data_stream_properties_ptr.base : int, ~ldv_5_container_struct_usb_data_stream_properties_ptr.offset : int;

var ~ldv_6_container_struct_dvb_frontend_ptr.base : int, ~ldv_6_container_struct_dvb_frontend_ptr.offset : int;

var ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.base : int, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.offset : int;

var ~ldv_6_container_struct_mxl111sf_state_ptr.base : int, ~ldv_6_container_struct_mxl111sf_state_ptr.offset : int;

var ~ldv_7_container_usb_driver.base : int, ~ldv_7_container_usb_driver.offset : int;

var ~ldv_7_ldv_param_13_1_default.base : int, ~ldv_7_ldv_param_13_1_default.offset : int;

var ~ldv_7_ldv_param_8_1_default.base : int, ~ldv_7_ldv_param_8_1_default.offset : int;

var ~ldv_7_resource_usb_interface.base : int, ~ldv_7_resource_usb_interface.offset : int;

var ~ldv_7_usb_device_usb_device.base : int, ~ldv_7_usb_device_usb_device.offset : int;

var ~ldv_8_container_usb_driver.base : int, ~ldv_8_container_usb_driver.offset : int;

var ~ldv_0_callback_frontend_attach.base : int, ~ldv_0_callback_frontend_attach.offset : int;

var ~ldv_0_callback_functionality.base : int, ~ldv_0_callback_functionality.offset : int;

var ~ldv_0_callback_get_stream_config.base : int, ~ldv_0_callback_get_stream_config.offset : int;

var ~ldv_0_callback_init.base : int, ~ldv_0_callback_init.offset : int;

var ~ldv_0_callback_master_xfer.base : int, ~ldv_0_callback_master_xfer.offset : int;

var ~ldv_0_callback_streaming_ctrl.base : int, ~ldv_0_callback_streaming_ctrl.offset : int;

var ~ldv_0_callback_tuner_attach.base : int, ~ldv_0_callback_tuner_attach.offset : int;

var ~ldv_11_exit_mxl111sf_usb_driver_exit_default.base : int, ~ldv_11_exit_mxl111sf_usb_driver_exit_default.offset : int;

var ~ldv_11_init_mxl111sf_usb_driver_init_default.base : int, ~ldv_11_init_mxl111sf_usb_driver_init_default.offset : int;

var ~ldv_1_callback_frontend_attach.base : int, ~ldv_1_callback_frontend_attach.offset : int;

var ~ldv_1_callback_functionality.base : int, ~ldv_1_callback_functionality.offset : int;

var ~ldv_1_callback_get_stream_config.base : int, ~ldv_1_callback_get_stream_config.offset : int;

var ~ldv_1_callback_init.base : int, ~ldv_1_callback_init.offset : int;

var ~ldv_1_callback_master_xfer.base : int, ~ldv_1_callback_master_xfer.offset : int;

var ~ldv_1_callback_streaming_ctrl.base : int, ~ldv_1_callback_streaming_ctrl.offset : int;

var ~ldv_1_callback_tuner_attach.base : int, ~ldv_1_callback_tuner_attach.offset : int;

var ~ldv_2_callback_frontend_attach.base : int, ~ldv_2_callback_frontend_attach.offset : int;

var ~ldv_2_callback_functionality.base : int, ~ldv_2_callback_functionality.offset : int;

var ~ldv_2_callback_get_stream_config.base : int, ~ldv_2_callback_get_stream_config.offset : int;

var ~ldv_2_callback_init.base : int, ~ldv_2_callback_init.offset : int;

var ~ldv_2_callback_master_xfer.base : int, ~ldv_2_callback_master_xfer.offset : int;

var ~ldv_2_callback_streaming_ctrl.base : int, ~ldv_2_callback_streaming_ctrl.offset : int;

var ~ldv_2_callback_tuner_attach.base : int, ~ldv_2_callback_tuner_attach.offset : int;

var ~ldv_3_callback_frontend_attach.base : int, ~ldv_3_callback_frontend_attach.offset : int;

var ~ldv_3_callback_functionality.base : int, ~ldv_3_callback_functionality.offset : int;

var ~ldv_3_callback_get_stream_config.base : int, ~ldv_3_callback_get_stream_config.offset : int;

var ~ldv_3_callback_init.base : int, ~ldv_3_callback_init.offset : int;

var ~ldv_3_callback_master_xfer.base : int, ~ldv_3_callback_master_xfer.offset : int;

var ~ldv_3_callback_streaming_ctrl.base : int, ~ldv_3_callback_streaming_ctrl.offset : int;

var ~ldv_3_callback_tuner_attach.base : int, ~ldv_3_callback_tuner_attach.offset : int;

var ~ldv_4_callback_frontend_attach.base : int, ~ldv_4_callback_frontend_attach.offset : int;

var ~ldv_4_callback_functionality.base : int, ~ldv_4_callback_functionality.offset : int;

var ~ldv_4_callback_get_stream_config.base : int, ~ldv_4_callback_get_stream_config.offset : int;

var ~ldv_4_callback_init.base : int, ~ldv_4_callback_init.offset : int;

var ~ldv_4_callback_master_xfer.base : int, ~ldv_4_callback_master_xfer.offset : int;

var ~ldv_4_callback_streaming_ctrl.base : int, ~ldv_4_callback_streaming_ctrl.offset : int;

var ~ldv_4_callback_tuner_attach.base : int, ~ldv_4_callback_tuner_attach.offset : int;

var ~ldv_5_callback_frontend_attach.base : int, ~ldv_5_callback_frontend_attach.offset : int;

var ~ldv_5_callback_functionality.base : int, ~ldv_5_callback_functionality.offset : int;

var ~ldv_5_callback_get_stream_config.base : int, ~ldv_5_callback_get_stream_config.offset : int;

var ~ldv_5_callback_init.base : int, ~ldv_5_callback_init.offset : int;

var ~ldv_5_callback_master_xfer.base : int, ~ldv_5_callback_master_xfer.offset : int;

var ~ldv_5_callback_streaming_ctrl.base : int, ~ldv_5_callback_streaming_ctrl.offset : int;

var ~ldv_5_callback_tuner_attach.base : int, ~ldv_5_callback_tuner_attach.offset : int;

var ~ldv_6_callback_ant_hunt.base : int, ~ldv_6_callback_ant_hunt.offset : int;

var ~ldv_6_callback_program_regs.base : int, ~ldv_6_callback_program_regs.offset : int;

var ~ldv_6_callback_read_reg.base : int, ~ldv_6_callback_read_reg.offset : int;

var ~ldv_6_callback_top_master_ctrl.base : int, ~ldv_6_callback_top_master_ctrl.offset : int;

var ~ldv_6_callback_write_reg.base : int, ~ldv_6_callback_write_reg.offset : int;

var ~LDV_MUTEXES_fe_lock_of_mxl111sf_state : ~ldv_set;

var ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device : ~ldv_set;

var ~LDV_MUTEXES_i_mutex_of_inode : ~ldv_set;

var ~LDV_MUTEXES_lock : ~ldv_set;

var ~LDV_MUTEXES_mutex_of_device : ~ldv_set;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_int : [int,int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

implementation ldv_struct_dvb_usb_adapter_properties_dummy_resourceless_instance_0(#in~arg0.base : int, #in~arg0.offset : int) returns (){
    var #t~ret1295 : int;
    var #t~ret1296 : int;
    var #t~ret1297.base : int, #t~ret1297.offset : int;
    var ~arg0.base : int, ~arg0.offset : int;
    var ~tmp~1313.base : int, ~tmp~1313.offset : int;

  loc0:
    ~arg0.base, ~arg0.offset := #in~arg0.base, #in~arg0.offset;
    havoc ~tmp~1313.base, ~tmp~1313.offset;
    assume !(~ldv_statevar_0 == 1);
    assume !(~ldv_statevar_0 == 2);
    assume !(~ldv_statevar_0 == 3);
    goto loc1;
  loc1:
    goto loc1_0, loc1_1;
  loc1_0:
    assume ~ldv_statevar_0 == 4;
    call #t~ret1296 := ldv_switch_0();
    assume -2147483648 <= #t~ret1296 && #t~ret1296 <= 2147483647;
    ~ldv_statevar_0 := #t~ret1296;
    havoc #t~ret1296;
    assume true;
    return;
  loc1_1:
    assume !(~ldv_statevar_0 == 4);
    assume !(~ldv_statevar_0 == 5);
    assume !(~ldv_statevar_0 == 7);
    assume !(~ldv_statevar_0 == 9);
    assume !(~ldv_statevar_0 == 11);
    assume ~ldv_statevar_0 == 13;
    call ldv_dummy_resourceless_instance_callback_0_12(~ldv_0_callback_master_xfer.base, ~ldv_0_callback_master_xfer.offset, ~ldv_0_container_struct_i2c_adapter_ptr.base, ~ldv_0_container_struct_i2c_adapter_ptr.offset, ~ldv_0_container_struct_i2c_msg_ptr.base, ~ldv_0_container_struct_i2c_msg_ptr.offset, ~ldv_0_ldv_param_12_2_default);
    return;
}

procedure ldv_struct_dvb_usb_adapter_properties_dummy_resourceless_instance_0(#in~arg0.base : int, #in~arg0.offset : int) returns ();
modifies ~ldv_statevar_0, ~ldv_0_ldv_param_8_1_default.base, ~ldv_0_ldv_param_8_1_default.offset, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device;

implementation ldv_initialize_external_data() returns (){
  loc2:
    call ldv_allocate_external_0();
    assume true;
    return;
}

procedure ldv_initialize_external_data() returns ();
modifies ~ldv_0_container_struct_dvb_frontend_ptr.base, ~ldv_0_container_struct_dvb_frontend_ptr.offset, ~ldv_0_container_struct_dvb_usb_adapter_ptr.base, ~ldv_0_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_0_container_struct_dvb_usb_device_ptr.base, ~ldv_0_container_struct_dvb_usb_device_ptr.offset, ~ldv_0_container_struct_i2c_adapter_ptr.base, ~ldv_0_container_struct_i2c_adapter_ptr.offset, ~ldv_0_container_struct_i2c_msg_ptr.base, ~ldv_0_container_struct_i2c_msg_ptr.offset, ~ldv_0_container_struct_usb_data_stream_properties_ptr.base, ~ldv_0_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_0_ldv_param_8_1_default.base, ~ldv_0_ldv_param_8_1_default.offset, ~ldv_1_container_struct_dvb_frontend_ptr.base, ~ldv_1_container_struct_dvb_frontend_ptr.offset, ~ldv_1_container_struct_dvb_usb_adapter_ptr.base, ~ldv_1_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_1_container_struct_dvb_usb_device_ptr.base, ~ldv_1_container_struct_dvb_usb_device_ptr.offset, ~ldv_1_container_struct_i2c_adapter_ptr.base, ~ldv_1_container_struct_i2c_adapter_ptr.offset, ~ldv_1_container_struct_i2c_msg_ptr.base, ~ldv_1_container_struct_i2c_msg_ptr.offset, ~ldv_1_container_struct_usb_data_stream_properties_ptr.base, ~ldv_1_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_1_ldv_param_8_1_default.base, ~ldv_1_ldv_param_8_1_default.offset, ~ldv_2_container_struct_dvb_frontend_ptr.base, ~ldv_2_container_struct_dvb_frontend_ptr.offset, ~ldv_2_container_struct_dvb_usb_adapter_ptr.base, ~ldv_2_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_2_container_struct_dvb_usb_device_ptr.base, ~ldv_2_container_struct_dvb_usb_device_ptr.offset, ~ldv_2_container_struct_i2c_adapter_ptr.base, ~ldv_2_container_struct_i2c_adapter_ptr.offset, ~ldv_2_container_struct_i2c_msg_ptr.base, ~ldv_2_container_struct_i2c_msg_ptr.offset, ~ldv_2_container_struct_usb_data_stream_properties_ptr.base, ~ldv_2_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset, ~ldv_3_container_struct_dvb_frontend_ptr.base, ~ldv_3_container_struct_dvb_frontend_ptr.offset, ~ldv_3_container_struct_dvb_usb_adapter_ptr.base, ~ldv_3_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_3_container_struct_dvb_usb_device_ptr.base, ~ldv_3_container_struct_dvb_usb_device_ptr.offset, ~ldv_3_container_struct_i2c_adapter_ptr.base, ~ldv_3_container_struct_i2c_adapter_ptr.offset, ~ldv_3_container_struct_i2c_msg_ptr.base, ~ldv_3_container_struct_i2c_msg_ptr.offset, ~ldv_3_container_struct_usb_data_stream_properties_ptr.base, ~ldv_3_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_3_ldv_param_8_1_default.base, ~ldv_3_ldv_param_8_1_default.offset, ~ldv_4_container_struct_dvb_frontend_ptr.base, ~ldv_4_container_struct_dvb_frontend_ptr.offset, ~ldv_4_container_struct_dvb_usb_adapter_ptr.base, ~ldv_4_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_4_container_struct_dvb_usb_device_ptr.base, ~ldv_4_container_struct_dvb_usb_device_ptr.offset, ~ldv_4_container_struct_i2c_adapter_ptr.base, ~ldv_4_container_struct_i2c_adapter_ptr.offset, ~ldv_4_container_struct_i2c_msg_ptr.base, ~ldv_4_container_struct_i2c_msg_ptr.offset, ~ldv_4_container_struct_usb_data_stream_properties_ptr.base, ~ldv_4_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_4_ldv_param_8_1_default.base, ~ldv_4_ldv_param_8_1_default.offset, ~ldv_5_container_struct_dvb_frontend_ptr.base, ~ldv_5_container_struct_dvb_frontend_ptr.offset, ~ldv_5_container_struct_dvb_usb_adapter_ptr.base, ~ldv_5_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_5_container_struct_dvb_usb_device_ptr.base, ~ldv_5_container_struct_dvb_usb_device_ptr.offset, ~ldv_5_container_struct_i2c_adapter_ptr.base, ~ldv_5_container_struct_i2c_adapter_ptr.offset, ~ldv_5_container_struct_i2c_msg_ptr.base, ~ldv_5_container_struct_i2c_msg_ptr.offset, ~ldv_5_container_struct_usb_data_stream_properties_ptr.base, ~ldv_5_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset, ~ldv_6_container_struct_dvb_frontend_ptr.base, ~ldv_6_container_struct_dvb_frontend_ptr.offset, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.base, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.offset, ~ldv_6_container_struct_mxl111sf_state_ptr.base, ~ldv_6_container_struct_mxl111sf_state_ptr.offset, ~ldv_6_ldv_param_8_2_default.base, ~ldv_6_ldv_param_8_2_default.offset, ~ldv_7_ldv_param_13_1_default.base, ~ldv_7_ldv_param_13_1_default.offset, ~ldv_7_ldv_param_8_1_default.base, ~ldv_7_ldv_param_8_1_default.offset, ~ldv_7_resource_usb_interface.base, ~ldv_7_resource_usb_interface.offset, ~ldv_7_usb_device_usb_device.base, ~ldv_7_usb_device_usb_device.offset;

implementation ldv_undef_int() returns (#res : int){
    var #t~nondet2515 : int;
    var ~tmp~2760 : int;

  loc3:
    havoc ~tmp~2760;
    assume -2147483648 <= #t~nondet2515 && #t~nondet2515 <= 2147483647;
    ~tmp~2760 := #t~nondet2515;
    havoc #t~nondet2515;
    #res := ~tmp~2760;
    assume true;
    return;
}

procedure ldv_undef_int() returns (#res : int);
modifies ;

implementation main() returns (#res : int){
    var #t~ret1294 : int;
    var ~tmp~1274 : int;

  loc4:
    havoc ~tmp~1274;
    call ldv_initialize();
    call ldv_initialize_external_data();
    ~ldv_statevar_11 := 11;
    ~ldv_statevar_0 := 5;
    ~ldv_statevar_1 := 5;
    ~ldv_statevar_2 := 5;
    ~ldv_statevar_3 := 5;
    ~ldv_statevar_4 := 5;
    ~ldv_statevar_5 := 5;
    ~ldv_statevar_6 := 5;
    ~ldv_7_reset_flag_default := 0;
    ~ldv_statevar_7 := 15;
    ~ldv_statevar_8 := 4;
    goto loc5;
  loc5:
    call #t~ret1294 := ldv_undef_int();
    assume -2147483648 <= #t~ret1294 && #t~ret1294 <= 2147483647;
    ~tmp~1274 := #t~ret1294;
    havoc #t~ret1294;
    assume !(~tmp~1274 == 0);
    assume ~tmp~1274 == 1;
    call ldv_struct_dvb_usb_adapter_properties_dummy_resourceless_instance_0(0, 0);
    goto loc5;
}

procedure main() returns (#res : int);
modifies ~ldv_statevar_11, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_statevar_2, ~ldv_statevar_3, ~ldv_statevar_4, ~ldv_statevar_5, ~ldv_statevar_6, ~ldv_7_reset_flag_default, ~ldv_statevar_7, ~ldv_statevar_8, ~LDV_MUTEXES_fe_lock_of_mxl111sf_state, ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device, ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_mutex_of_device, ~ldv_0_container_struct_dvb_frontend_ptr.base, ~ldv_0_container_struct_dvb_frontend_ptr.offset, ~ldv_0_container_struct_dvb_usb_adapter_ptr.base, ~ldv_0_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_0_container_struct_dvb_usb_device_ptr.base, ~ldv_0_container_struct_dvb_usb_device_ptr.offset, ~ldv_0_container_struct_i2c_adapter_ptr.base, ~ldv_0_container_struct_i2c_adapter_ptr.offset, ~ldv_0_container_struct_i2c_msg_ptr.base, ~ldv_0_container_struct_i2c_msg_ptr.offset, ~ldv_0_container_struct_usb_data_stream_properties_ptr.base, ~ldv_0_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_0_ldv_param_8_1_default.base, ~ldv_0_ldv_param_8_1_default.offset, ~ldv_1_container_struct_dvb_frontend_ptr.base, ~ldv_1_container_struct_dvb_frontend_ptr.offset, ~ldv_1_container_struct_dvb_usb_adapter_ptr.base, ~ldv_1_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_1_container_struct_dvb_usb_device_ptr.base, ~ldv_1_container_struct_dvb_usb_device_ptr.offset, ~ldv_1_container_struct_i2c_adapter_ptr.base, ~ldv_1_container_struct_i2c_adapter_ptr.offset, ~ldv_1_container_struct_i2c_msg_ptr.base, ~ldv_1_container_struct_i2c_msg_ptr.offset, ~ldv_1_container_struct_usb_data_stream_properties_ptr.base, ~ldv_1_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_1_ldv_param_8_1_default.base, ~ldv_1_ldv_param_8_1_default.offset, ~ldv_2_container_struct_dvb_frontend_ptr.base, ~ldv_2_container_struct_dvb_frontend_ptr.offset, ~ldv_2_container_struct_dvb_usb_adapter_ptr.base, ~ldv_2_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_2_container_struct_dvb_usb_device_ptr.base, ~ldv_2_container_struct_dvb_usb_device_ptr.offset, ~ldv_2_container_struct_i2c_adapter_ptr.base, ~ldv_2_container_struct_i2c_adapter_ptr.offset, ~ldv_2_container_struct_i2c_msg_ptr.base, ~ldv_2_container_struct_i2c_msg_ptr.offset, ~ldv_2_container_struct_usb_data_stream_properties_ptr.base, ~ldv_2_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset, ~ldv_3_container_struct_dvb_frontend_ptr.base, ~ldv_3_container_struct_dvb_frontend_ptr.offset, ~ldv_3_container_struct_dvb_usb_adapter_ptr.base, ~ldv_3_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_3_container_struct_dvb_usb_device_ptr.base, ~ldv_3_container_struct_dvb_usb_device_ptr.offset, ~ldv_3_container_struct_i2c_adapter_ptr.base, ~ldv_3_container_struct_i2c_adapter_ptr.offset, ~ldv_3_container_struct_i2c_msg_ptr.base, ~ldv_3_container_struct_i2c_msg_ptr.offset, ~ldv_3_container_struct_usb_data_stream_properties_ptr.base, ~ldv_3_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_3_ldv_param_8_1_default.base, ~ldv_3_ldv_param_8_1_default.offset, ~ldv_4_container_struct_dvb_frontend_ptr.base, ~ldv_4_container_struct_dvb_frontend_ptr.offset, ~ldv_4_container_struct_dvb_usb_adapter_ptr.base, ~ldv_4_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_4_container_struct_dvb_usb_device_ptr.base, ~ldv_4_container_struct_dvb_usb_device_ptr.offset, ~ldv_4_container_struct_i2c_adapter_ptr.base, ~ldv_4_container_struct_i2c_adapter_ptr.offset, ~ldv_4_container_struct_i2c_msg_ptr.base, ~ldv_4_container_struct_i2c_msg_ptr.offset, ~ldv_4_container_struct_usb_data_stream_properties_ptr.base, ~ldv_4_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_4_ldv_param_8_1_default.base, ~ldv_4_ldv_param_8_1_default.offset, ~ldv_5_container_struct_dvb_frontend_ptr.base, ~ldv_5_container_struct_dvb_frontend_ptr.offset, ~ldv_5_container_struct_dvb_usb_adapter_ptr.base, ~ldv_5_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_5_container_struct_dvb_usb_device_ptr.base, ~ldv_5_container_struct_dvb_usb_device_ptr.offset, ~ldv_5_container_struct_i2c_adapter_ptr.base, ~ldv_5_container_struct_i2c_adapter_ptr.offset, ~ldv_5_container_struct_i2c_msg_ptr.base, ~ldv_5_container_struct_i2c_msg_ptr.offset, ~ldv_5_container_struct_usb_data_stream_properties_ptr.base, ~ldv_5_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset, ~ldv_6_container_struct_dvb_frontend_ptr.base, ~ldv_6_container_struct_dvb_frontend_ptr.offset, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.base, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.offset, ~ldv_6_container_struct_mxl111sf_state_ptr.base, ~ldv_6_container_struct_mxl111sf_state_ptr.offset, ~ldv_6_ldv_param_8_2_default.base, ~ldv_6_ldv_param_8_2_default.offset, ~ldv_7_ldv_param_13_1_default.base, ~ldv_7_ldv_param_13_1_default.offset, ~ldv_7_ldv_param_8_1_default.base, ~ldv_7_ldv_param_8_1_default.offset, ~ldv_7_resource_usb_interface.base, ~ldv_7_resource_usb_interface.offset, ~ldv_7_usb_device_usb_device.base, ~ldv_7_usb_device_usb_device.offset, ~ldv_7_container_usb_driver.base, ~ldv_7_container_usb_driver.offset, #valid, #length, ~ldv_8_container_usb_driver.base, ~ldv_8_container_usb_driver.offset, ~ldv_11_ret_default, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_7_probe_retval_default;

implementation ldv_dev_get_drvdata_16(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~ret1962.base : int, #t~ret1962.offset : int;
    var ~dev.base : int, ~dev.offset : int;
    var ~tmp~2348.base : int, ~tmp~2348.offset : int;

  loc6:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    havoc ~tmp~2348.base, ~tmp~2348.offset;
    call #t~ret1962.base, #t~ret1962.offset := ldv_dev_get_drvdata(~dev.base, ~dev.offset);
    ~tmp~2348.base, ~tmp~2348.offset := #t~ret1962.base, #t~ret1962.offset;
    havoc #t~ret1962.base, #t~ret1962.offset;
    #res.base, #res.offset := ~tmp~2348.base, ~tmp~2348.offset;
    assume true;
    return;
}

procedure ldv_dev_get_drvdata_16(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation ldv_mutex_lock_interruptible_21(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns (#res : int){
    var #t~ret1963 : int;
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;
    var ~tmp~2351 : int;

  loc7:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    havoc ~tmp~2351;
    call #t~ret1963 := ldv_mutex_lock_interruptible_or_killable_i2c_mutex_of_dvb_usb_device(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    return;
}

procedure ldv_mutex_lock_interruptible_21(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns (#res : int);
modifies ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device;

implementation ULTIMATE.init() returns (){
    var #t~nondet995.base : int, #t~nondet995.offset : int;
    var #t~union2517.buffersize : int;
    var #t~union2518.buffersize : int;
    var #t~union2519.framesperurb : int, #t~union2519.framesize : int, #t~union2519.interval : int;
    var #t~nondet1011.base : int, #t~nondet1011.offset : int;
    var #t~union2520.buffersize : int;
    var #t~union2521.buffersize : int;
    var #t~union2522.framesperurb : int, #t~union2522.framesize : int, #t~union2522.interval : int;
    var #t~nondet1027.base : int, #t~nondet1027.offset : int;
    var #t~union2523.buffersize : int;
    var #t~union2524.buffersize : int;
    var #t~union2525.framesperurb : int, #t~union2525.framesize : int, #t~union2525.interval : int;
    var #t~nondet1068.base : int, #t~nondet1068.offset : int;
    var #t~union2526.buffersize : int;
    var #t~union2527.buffersize : int;
    var #t~union2528.framesperurb : int, #t~union2528.framesize : int, #t~union2528.interval : int;
    var #t~nondet1113.base : int, #t~nondet1113.offset : int;
    var #t~union2529.buffersize : int;
    var #t~union2530.buffersize : int;
    var #t~union2531.framesperurb : int, #t~union2531.framesize : int, #t~union2531.interval : int;
    var #t~nondet1154.base : int, #t~nondet1154.offset : int;
    var #t~union2532.buffersize : int;
    var #t~union2533.buffersize : int;
    var #t~union2534.framesperurb : int, #t~union2534.framesize : int, #t~union2534.interval : int;
    var #t~nondet1155.base : int, #t~nondet1155.offset : int;
    var #t~nondet1156.base : int, #t~nondet1156.offset : int;
    var #t~nondet1157.base : int, #t~nondet1157.offset : int;
    var #t~nondet1158.base : int, #t~nondet1158.offset : int;
    var #t~nondet1159.base : int, #t~nondet1159.offset : int;
    var #t~nondet1160.base : int, #t~nondet1160.offset : int;
    var #t~nondet1161.base : int, #t~nondet1161.offset : int;
    var #t~nondet1162.base : int, #t~nondet1162.offset : int;
    var #t~nondet1163.base : int, #t~nondet1163.offset : int;
    var #t~nondet1164.base : int, #t~nondet1164.offset : int;
    var #t~nondet1165.base : int, #t~nondet1165.offset : int;
    var #t~nondet1166.base : int, #t~nondet1166.offset : int;
    var #t~nondet1167.base : int, #t~nondet1167.offset : int;
    var #t~nondet1168.base : int, #t~nondet1168.offset : int;
    var #t~nondet1169.base : int, #t~nondet1169.offset : int;
    var #t~nondet1170.base : int, #t~nondet1170.offset : int;
    var #t~nondet1171.base : int, #t~nondet1171.offset : int;
    var #t~nondet1172.base : int, #t~nondet1172.offset : int;
    var #t~nondet1173.base : int, #t~nondet1173.offset : int;
    var #t~nondet1174.base : int, #t~nondet1174.offset : int;
    var #t~nondet1175.base : int, #t~nondet1175.offset : int;
    var #t~nondet1176.base : int, #t~nondet1176.offset : int;
    var #t~nondet1177.base : int, #t~nondet1177.offset : int;
    var #t~nondet1178.base : int, #t~nondet1178.offset : int;
    var #t~nondet1179.base : int, #t~nondet1179.offset : int;
    var #t~nondet1180.base : int, #t~nondet1180.offset : int;
    var #t~nondet1181.base : int, #t~nondet1181.offset : int;
    var #t~nondet1182.base : int, #t~nondet1182.offset : int;
    var #t~nondet1183.base : int, #t~nondet1183.offset : int;
    var #t~nondet1184.base : int, #t~nondet1184.offset : int;
    var #t~nondet1185.base : int, #t~nondet1185.offset : int;
    var #t~nondet1186.base : int, #t~nondet1186.offset : int;
    var #t~nondet1187.base : int, #t~nondet1187.offset : int;
    var #t~nondet1188.base : int, #t~nondet1188.offset : int;
    var #t~nondet1189.base : int, #t~nondet1189.offset : int;
    var #t~union2535.head : int, #t~union2535.tail : int;
    var #t~union2536.__padding : [int]int, #t~union2536.dep_map.key.base : int, #t~union2536.dep_map.key.offset : int, #t~union2536.dep_map.class_cache.base : [int]int, #t~union2536.dep_map.class_cache.offset : [int]int, #t~union2536.dep_map.name.base : int, #t~union2536.dep_map.name.offset : int, #t~union2536.dep_map.cpu : int, #t~union2536.dep_map.ip : int;

  loc8:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~dvb_usb_mxl111sf_debug := 0;
    ~dvb_usb_mxl111sf_isoc := 0;
    ~dvb_usb_mxl111sf_spi := 0;
    ~dvb_usb_mxl111sf_rfswitch := 1;
    call ~#adapter_nr.base, ~#adapter_nr.offset := #Ultimate.alloc(16);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 0, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 2, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 4, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 6, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 8, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 10, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 12, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 14, 2);
    ~ldv_0_ldv_param_12_2_default := 0;
    ~ldv_0_ldv_param_15_1_default := 0;
    ~ldv_0_ldv_param_8_1_default.base, ~ldv_0_ldv_param_8_1_default.offset := 0, 0;
    ~ldv_11_ret_default := 0;
    ~ldv_1_ldv_param_12_2_default := 0;
    ~ldv_1_ldv_param_15_1_default := 0;
    ~ldv_1_ldv_param_8_1_default.base, ~ldv_1_ldv_param_8_1_default.offset := 0, 0;
    ~ldv_2_ldv_param_12_2_default := 0;
    ~ldv_2_ldv_param_15_1_default := 0;
    ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset := 0, 0;
    ~ldv_3_ldv_param_12_2_default := 0;
    ~ldv_3_ldv_param_15_1_default := 0;
    ~ldv_3_ldv_param_8_1_default.base, ~ldv_3_ldv_param_8_1_default.offset := 0, 0;
    ~ldv_4_ldv_param_12_2_default := 0;
    ~ldv_4_ldv_param_15_1_default := 0;
    ~ldv_4_ldv_param_8_1_default.base, ~ldv_4_ldv_param_8_1_default.offset := 0, 0;
    ~ldv_5_ldv_param_12_2_default := 0;
    ~ldv_5_ldv_param_15_1_default := 0;
    ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset := 0, 0;
    ~ldv_6_ldv_param_11_1_default := 0;
    ~ldv_6_ldv_param_14_1_default := 0;
    ~ldv_6_ldv_param_14_2_default := 0;
    ~ldv_6_ldv_param_8_1_default := 0;
    ~ldv_6_ldv_param_8_2_default.base, ~ldv_6_ldv_param_8_2_default.offset := 0, 0;
    ~ldv_7_probe_retval_default := 0;
    ~ldv_7_reset_flag_default := 0;
    ~ldv_statevar_0 := 0;
    ~ldv_statevar_1 := 0;
    ~ldv_statevar_11 := 0;
    ~ldv_statevar_2 := 0;
    ~ldv_statevar_3 := 0;
    ~ldv_statevar_4 := 0;
    ~ldv_statevar_5 := 0;
    ~ldv_statevar_6 := 0;
    ~ldv_statevar_7 := 0;
    ~ldv_statevar_8 := 0;
    call ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset := #Ultimate.alloc(39);
    call write~int(89, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset + 0, 1);
    call write~int(6000, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset + 1, 2);
    call write~int(6000, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset + 3, 2);
    call write~int(0, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset + 5, 2);
    call write~int(0, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset + 7, 2);
    call write~int(0, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset + 9, 2);
    call write~int(1, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset + 11, 4);
    call write~int(0, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset + 15, 4);
    call write~int(0, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset + 19, 4);
    call write~int(1, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset + 23, 4);
    call write~int(0, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset + 27, 4);
    call write~int(1, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset + 31, 4);
    call write~int(0, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset + 35, 4);
    call ~#hauppauge_lg2160_config.base, ~#hauppauge_lg2160_config.offset := #Ultimate.alloc(23);
    call write~int(14, ~#hauppauge_lg2160_config.base, ~#hauppauge_lg2160_config.offset + 0, 1);
    call write~int(6000, ~#hauppauge_lg2160_config.base, ~#hauppauge_lg2160_config.offset + 1, 2);
    call write~int(1, ~#hauppauge_lg2160_config.base, ~#hauppauge_lg2160_config.offset + 3, 4);
    call write~int(0, ~#hauppauge_lg2160_config.base, ~#hauppauge_lg2160_config.offset + 7, 4);
    call write~int(0, ~#hauppauge_lg2160_config.base, ~#hauppauge_lg2160_config.offset + 11, 4);
    call write~int(0, ~#hauppauge_lg2160_config.base, ~#hauppauge_lg2160_config.offset + 15, 4);
    call write~int(0, ~#hauppauge_lg2160_config.base, ~#hauppauge_lg2160_config.offset + 19, 4);
    call ~#hauppauge_lg2161_1019_config.base, ~#hauppauge_lg2161_1019_config.offset := #Ultimate.alloc(23);
    call write~int(14, ~#hauppauge_lg2161_1019_config.base, ~#hauppauge_lg2161_1019_config.offset + 0, 1);
    call write~int(6000, ~#hauppauge_lg2161_1019_config.base, ~#hauppauge_lg2161_1019_config.offset + 1, 2);
    call write~int(1, ~#hauppauge_lg2161_1019_config.base, ~#hauppauge_lg2161_1019_config.offset + 3, 4);
    call write~int(0, ~#hauppauge_lg2161_1019_config.base, ~#hauppauge_lg2161_1019_config.offset + 7, 4);
    call write~int(2, ~#hauppauge_lg2161_1019_config.base, ~#hauppauge_lg2161_1019_config.offset + 11, 4);
    call write~int(0, ~#hauppauge_lg2161_1019_config.base, ~#hauppauge_lg2161_1019_config.offset + 15, 4);
    call write~int(1, ~#hauppauge_lg2161_1019_config.base, ~#hauppauge_lg2161_1019_config.offset + 19, 4);
    call ~#hauppauge_lg2161_1040_config.base, ~#hauppauge_lg2161_1040_config.offset := #Ultimate.alloc(23);
    call write~int(14, ~#hauppauge_lg2161_1040_config.base, ~#hauppauge_lg2161_1040_config.offset + 0, 1);
    call write~int(6000, ~#hauppauge_lg2161_1040_config.base, ~#hauppauge_lg2161_1040_config.offset + 1, 2);
    call write~int(1, ~#hauppauge_lg2161_1040_config.base, ~#hauppauge_lg2161_1040_config.offset + 3, 4);
    call write~int(0, ~#hauppauge_lg2161_1040_config.base, ~#hauppauge_lg2161_1040_config.offset + 7, 4);
    call write~int(4, ~#hauppauge_lg2161_1040_config.base, ~#hauppauge_lg2161_1040_config.offset + 11, 4);
    call write~int(0, ~#hauppauge_lg2161_1040_config.base, ~#hauppauge_lg2161_1040_config.offset + 15, 4);
    call write~int(1, ~#hauppauge_lg2161_1040_config.base, ~#hauppauge_lg2161_1040_config.offset + 19, 4);
    call ~#hauppauge_lg2161_1019_ep6_config.base, ~#hauppauge_lg2161_1019_ep6_config.offset := #Ultimate.alloc(23);
    call write~int(14, ~#hauppauge_lg2161_1019_ep6_config.base, ~#hauppauge_lg2161_1019_ep6_config.offset + 0, 1);
    call write~int(6000, ~#hauppauge_lg2161_1019_ep6_config.base, ~#hauppauge_lg2161_1019_ep6_config.offset + 1, 2);
    call write~int(1, ~#hauppauge_lg2161_1019_ep6_config.base, ~#hauppauge_lg2161_1019_ep6_config.offset + 3, 4);
    call write~int(0, ~#hauppauge_lg2161_1019_ep6_config.base, ~#hauppauge_lg2161_1019_ep6_config.offset + 7, 4);
    call write~int(1, ~#hauppauge_lg2161_1019_ep6_config.base, ~#hauppauge_lg2161_1019_ep6_config.offset + 11, 4);
    call write~int(0, ~#hauppauge_lg2161_1019_ep6_config.base, ~#hauppauge_lg2161_1019_ep6_config.offset + 15, 4);
    call write~int(1, ~#hauppauge_lg2161_1019_ep6_config.base, ~#hauppauge_lg2161_1019_ep6_config.offset + 19, 4);
    call ~#hauppauge_lg2161_1040_ep6_config.base, ~#hauppauge_lg2161_1040_ep6_config.offset := #Ultimate.alloc(23);
    call write~int(14, ~#hauppauge_lg2161_1040_ep6_config.base, ~#hauppauge_lg2161_1040_ep6_config.offset + 0, 1);
    call write~int(6000, ~#hauppauge_lg2161_1040_ep6_config.base, ~#hauppauge_lg2161_1040_ep6_config.offset + 1, 2);
    call write~int(1, ~#hauppauge_lg2161_1040_ep6_config.base, ~#hauppauge_lg2161_1040_ep6_config.offset + 3, 4);
    call write~int(0, ~#hauppauge_lg2161_1040_ep6_config.base, ~#hauppauge_lg2161_1040_ep6_config.offset + 7, 4);
    call write~int(7, ~#hauppauge_lg2161_1040_ep6_config.base, ~#hauppauge_lg2161_1040_ep6_config.offset + 11, 4);
    call write~int(0, ~#hauppauge_lg2161_1040_ep6_config.base, ~#hauppauge_lg2161_1040_ep6_config.offset + 15, 4);
    call write~int(1, ~#hauppauge_lg2161_1040_ep6_config.base, ~#hauppauge_lg2161_1040_ep6_config.offset + 19, 4);
    call ~#mxl_demod_config.base, ~#mxl_demod_config.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#funAddr~mxl111sf_read_reg.base, #funAddr~mxl111sf_read_reg.offset, ~#mxl_demod_config.base, ~#mxl_demod_config.offset + 0, 8);
    call write~$Pointer$(#funAddr~mxl111sf_write_reg.base, #funAddr~mxl111sf_write_reg.offset, ~#mxl_demod_config.base, ~#mxl_demod_config.offset + 8, 8);
    call write~$Pointer$(#funAddr~mxl111sf_ctrl_program_regs.base, #funAddr~mxl111sf_ctrl_program_regs.offset, ~#mxl_demod_config.base, ~#mxl_demod_config.offset + 16, 8);
    call ~#mxl_tuner_config.base, ~#mxl_tuner_config.offset := #Ultimate.alloc(48);
    call write~int(6, ~#mxl_tuner_config.base, ~#mxl_tuner_config.offset + 0, 4);
    call write~int(0, ~#mxl_tuner_config.base, ~#mxl_tuner_config.offset + 4, 4);
    call write~$Pointer$(#funAddr~mxl111sf_read_reg.base, #funAddr~mxl111sf_read_reg.offset, ~#mxl_tuner_config.base, ~#mxl_tuner_config.offset + 8, 8);
    call write~$Pointer$(#funAddr~mxl111sf_write_reg.base, #funAddr~mxl111sf_write_reg.offset, ~#mxl_tuner_config.base, ~#mxl_tuner_config.offset + 16, 8);
    call write~$Pointer$(#funAddr~mxl111sf_ctrl_program_regs.base, #funAddr~mxl111sf_ctrl_program_regs.offset, ~#mxl_tuner_config.base, ~#mxl_tuner_config.offset + 24, 8);
    call write~$Pointer$(#funAddr~mxl1x1sf_top_master_ctrl.base, #funAddr~mxl1x1sf_top_master_ctrl.offset, ~#mxl_tuner_config.base, ~#mxl_tuner_config.offset + 32, 8);
    call write~$Pointer$(#funAddr~mxl111sf_ant_hunt.base, #funAddr~mxl111sf_ant_hunt.offset, ~#mxl_tuner_config.base, ~#mxl_tuner_config.offset + 40, 8);
    call ~#mxl111sf_i2c_algo.base, ~#mxl111sf_i2c_algo.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#funAddr~mxl111sf_i2c_xfer.base, #funAddr~mxl111sf_i2c_xfer.offset, ~#mxl111sf_i2c_algo.base, ~#mxl111sf_i2c_algo.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_i2c_algo.base, ~#mxl111sf_i2c_algo.offset + 8, 8);
    call write~$Pointer$(#funAddr~mxl111sf_i2c_func.base, #funAddr~mxl111sf_i2c_func.offset, ~#mxl111sf_i2c_algo.base, ~#mxl111sf_i2c_algo.offset + 16, 8);
    call ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset := #Ultimate.alloc(233);
    call #t~nondet995.base, #t~nondet995.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet995.base, #t~nondet995.offset, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 0, 8);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 8, 8);
    call write~$Pointer$(~#adapter_nr.base, ~#adapter_nr.offset, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 16, 8);
    call write~int(0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 24, 1);
    call write~int(376, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 25, 4);
    call write~int(2, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 29, 1);
    call write~int(129, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 30, 1);
    call write~int(0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 31, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 35, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 43, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 51, 8);
    call write~$Pointer$(~#mxl111sf_i2c_algo.base, ~#mxl111sf_i2c_algo.offset, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 59, 8);
    call write~int(1, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 67, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 71, 8);
    call write~int(0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 0 + 0, 1);
    call write~int(0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 0 + 1, 1);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 0 + 2, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 0 + 10, 8);
    call write~int(2, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 0 + 18 + 0, 1);
    call write~int(5, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 0 + 18 + 1, 1);
    call write~int(6, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 0 + 18 + 2, 1);
    call write~int(#t~union2517.buffersize, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 0 + 18 + 3 + 0 + 0, 4);
    call write~int(24, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 0 + 18 + 3 + 0 + 0, 4);
    call write~int(3072, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 0 + 18 + 3 + 0 + 4, 4);
    call write~int(1, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 0 + 18 + 3 + 0 + 8, 4);
    call write~int(0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 33 + 0, 1);
    call write~int(0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 33 + 1, 1);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 33 + 2, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 33 + 10, 8);
    call write~int(0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 33 + 18 + 0, 1);
    call write~int(0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 33 + 18 + 1, 1);
    call write~int(0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 33 + 18 + 2, 1);
    call write~int(#t~union2518.buffersize, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 33 + 18 + 3 + 0 + 0, 4);
    call write~int(#t~union2519.framesperurb, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 33 + 18 + 3 + 0 + 0, 4);
    call write~int(#t~union2519.framesize, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 33 + 18 + 3 + 0 + 4, 4);
    call write~int(#t~union2519.interval, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 79 + 33 + 18 + 3 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 145, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 153, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 161, 8);
    call write~$Pointer$(#funAddr~mxl111sf_frontend_attach_dvbt.base, #funAddr~mxl111sf_frontend_attach_dvbt.offset, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 169, 8);
    call write~$Pointer$(#funAddr~mxl111sf_attach_tuner.base, #funAddr~mxl111sf_attach_tuner.offset, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 177, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 185, 8);
    call write~$Pointer$(#funAddr~mxl111sf_ep4_streaming_ctrl.base, #funAddr~mxl111sf_ep4_streaming_ctrl.offset, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 193, 8);
    call write~$Pointer$(#funAddr~mxl111sf_init.base, #funAddr~mxl111sf_init.offset, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 201, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 209, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 217, 8);
    call write~$Pointer$(#funAddr~mxl111sf_get_stream_config_dvbt.base, #funAddr~mxl111sf_get_stream_config_dvbt.offset, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset + 225, 8);
    havoc #t~nondet995.base, #t~nondet995.offset;
    havoc #t~union2517.buffersize;
    havoc #t~union2518.buffersize;
    havoc #t~union2519.framesperurb, #t~union2519.framesize, #t~union2519.interval;
    call ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset := #Ultimate.alloc(233);
    call #t~nondet1011.base, #t~nondet1011.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet1011.base, #t~nondet1011.offset, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 0, 8);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 8, 8);
    call write~$Pointer$(~#adapter_nr.base, ~#adapter_nr.offset, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 16, 8);
    call write~int(0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 24, 1);
    call write~int(376, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 25, 4);
    call write~int(2, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 29, 1);
    call write~int(129, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 30, 1);
    call write~int(0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 31, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 35, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 43, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 51, 8);
    call write~$Pointer$(~#mxl111sf_i2c_algo.base, ~#mxl111sf_i2c_algo.offset, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 59, 8);
    call write~int(1, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 67, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 71, 8);
    call write~int(0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 0 + 0, 1);
    call write~int(0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 0 + 1, 1);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 0 + 2, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 0 + 10, 8);
    call write~int(2, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 0 + 18 + 0, 1);
    call write~int(5, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 0 + 18 + 1, 1);
    call write~int(6, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 0 + 18 + 2, 1);
    call write~int(#t~union2520.buffersize, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 0 + 18 + 3 + 0 + 0, 4);
    call write~int(24, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 0 + 18 + 3 + 0 + 0, 4);
    call write~int(3072, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 0 + 18 + 3 + 0 + 4, 4);
    call write~int(1, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 0 + 18 + 3 + 0 + 8, 4);
    call write~int(0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 33 + 0, 1);
    call write~int(0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 33 + 1, 1);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 33 + 2, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 33 + 10, 8);
    call write~int(0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 33 + 18 + 0, 1);
    call write~int(0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 33 + 18 + 1, 1);
    call write~int(0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 33 + 18 + 2, 1);
    call write~int(#t~union2521.buffersize, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 33 + 18 + 3 + 0 + 0, 4);
    call write~int(#t~union2522.framesperurb, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 33 + 18 + 3 + 0 + 0, 4);
    call write~int(#t~union2522.framesize, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 33 + 18 + 3 + 0 + 4, 4);
    call write~int(#t~union2522.interval, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 79 + 33 + 18 + 3 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 145, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 153, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 161, 8);
    call write~$Pointer$(#funAddr~mxl111sf_frontend_attach_atsc.base, #funAddr~mxl111sf_frontend_attach_atsc.offset, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 169, 8);
    call write~$Pointer$(#funAddr~mxl111sf_attach_tuner.base, #funAddr~mxl111sf_attach_tuner.offset, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 177, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 185, 8);
    call write~$Pointer$(#funAddr~mxl111sf_ep6_streaming_ctrl.base, #funAddr~mxl111sf_ep6_streaming_ctrl.offset, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 193, 8);
    call write~$Pointer$(#funAddr~mxl111sf_init.base, #funAddr~mxl111sf_init.offset, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 201, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 209, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 217, 8);
    call write~$Pointer$(#funAddr~mxl111sf_get_stream_config_atsc.base, #funAddr~mxl111sf_get_stream_config_atsc.offset, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset + 225, 8);
    havoc #t~nondet1011.base, #t~nondet1011.offset;
    havoc #t~union2520.buffersize;
    havoc #t~union2521.buffersize;
    havoc #t~union2522.framesperurb, #t~union2522.framesize, #t~union2522.interval;
    call ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset := #Ultimate.alloc(233);
    call #t~nondet1027.base, #t~nondet1027.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet1027.base, #t~nondet1027.offset, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 0, 8);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 8, 8);
    call write~$Pointer$(~#adapter_nr.base, ~#adapter_nr.offset, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 16, 8);
    call write~int(0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 24, 1);
    call write~int(376, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 25, 4);
    call write~int(2, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 29, 1);
    call write~int(129, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 30, 1);
    call write~int(0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 31, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 35, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 43, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 51, 8);
    call write~$Pointer$(~#mxl111sf_i2c_algo.base, ~#mxl111sf_i2c_algo.offset, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 59, 8);
    call write~int(1, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 67, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 71, 8);
    call write~int(0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 0 + 0, 1);
    call write~int(0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 0 + 1, 1);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 0 + 2, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 0 + 10, 8);
    call write~int(2, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 0 + 18 + 0, 1);
    call write~int(5, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 0 + 18 + 1, 1);
    call write~int(6, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 0 + 18 + 2, 1);
    call write~int(#t~union2523.buffersize, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 0 + 18 + 3 + 0 + 0, 4);
    call write~int(24, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 0 + 18 + 3 + 0 + 0, 4);
    call write~int(3072, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 0 + 18 + 3 + 0 + 4, 4);
    call write~int(1, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 0 + 18 + 3 + 0 + 8, 4);
    call write~int(0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 33 + 0, 1);
    call write~int(0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 33 + 1, 1);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 33 + 2, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 33 + 10, 8);
    call write~int(0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 33 + 18 + 0, 1);
    call write~int(0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 33 + 18 + 1, 1);
    call write~int(0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 33 + 18 + 2, 1);
    call write~int(#t~union2524.buffersize, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 33 + 18 + 3 + 0 + 0, 4);
    call write~int(#t~union2525.framesperurb, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 33 + 18 + 3 + 0 + 0, 4);
    call write~int(#t~union2525.framesize, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 33 + 18 + 3 + 0 + 4, 4);
    call write~int(#t~union2525.interval, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 79 + 33 + 18 + 3 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 145, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 153, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 161, 8);
    call write~$Pointer$(#funAddr~mxl111sf_frontend_attach_mh.base, #funAddr~mxl111sf_frontend_attach_mh.offset, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 169, 8);
    call write~$Pointer$(#funAddr~mxl111sf_attach_tuner.base, #funAddr~mxl111sf_attach_tuner.offset, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 177, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 185, 8);
    call write~$Pointer$(#funAddr~mxl111sf_ep5_streaming_ctrl.base, #funAddr~mxl111sf_ep5_streaming_ctrl.offset, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 193, 8);
    call write~$Pointer$(#funAddr~mxl111sf_init.base, #funAddr~mxl111sf_init.offset, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 201, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 209, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 217, 8);
    call write~$Pointer$(#funAddr~mxl111sf_get_stream_config_mh.base, #funAddr~mxl111sf_get_stream_config_mh.offset, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset + 225, 8);
    havoc #t~nondet1027.base, #t~nondet1027.offset;
    havoc #t~union2523.buffersize;
    havoc #t~union2524.buffersize;
    havoc #t~union2525.framesperurb, #t~union2525.framesize, #t~union2525.interval;
    call ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset := #Ultimate.alloc(233);
    call #t~nondet1068.base, #t~nondet1068.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet1068.base, #t~nondet1068.offset, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 0, 8);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 8, 8);
    call write~$Pointer$(~#adapter_nr.base, ~#adapter_nr.offset, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 16, 8);
    call write~int(0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 24, 1);
    call write~int(376, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 25, 4);
    call write~int(2, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 29, 1);
    call write~int(129, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 30, 1);
    call write~int(0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 31, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 35, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 43, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 51, 8);
    call write~$Pointer$(~#mxl111sf_i2c_algo.base, ~#mxl111sf_i2c_algo.offset, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 59, 8);
    call write~int(1, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 67, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 71, 8);
    call write~int(0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 0 + 0, 1);
    call write~int(0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 0 + 1, 1);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 0 + 2, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 0 + 10, 8);
    call write~int(2, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 0 + 18 + 0, 1);
    call write~int(5, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 0 + 18 + 1, 1);
    call write~int(6, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 0 + 18 + 2, 1);
    call write~int(#t~union2526.buffersize, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 0 + 18 + 3 + 0 + 0, 4);
    call write~int(24, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 0 + 18 + 3 + 0 + 0, 4);
    call write~int(3072, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 0 + 18 + 3 + 0 + 4, 4);
    call write~int(1, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 0 + 18 + 3 + 0 + 8, 4);
    call write~int(0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 33 + 0, 1);
    call write~int(0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 33 + 1, 1);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 33 + 2, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 33 + 10, 8);
    call write~int(0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 33 + 18 + 0, 1);
    call write~int(0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 33 + 18 + 1, 1);
    call write~int(0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 33 + 18 + 2, 1);
    call write~int(#t~union2527.buffersize, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 33 + 18 + 3 + 0 + 0, 4);
    call write~int(#t~union2528.framesperurb, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 33 + 18 + 3 + 0 + 0, 4);
    call write~int(#t~union2528.framesize, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 33 + 18 + 3 + 0 + 4, 4);
    call write~int(#t~union2528.interval, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 79 + 33 + 18 + 3 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 145, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 153, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 161, 8);
    call write~$Pointer$(#funAddr~mxl111sf_frontend_attach_atsc_mh.base, #funAddr~mxl111sf_frontend_attach_atsc_mh.offset, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 169, 8);
    call write~$Pointer$(#funAddr~mxl111sf_attach_tuner.base, #funAddr~mxl111sf_attach_tuner.offset, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 177, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 185, 8);
    call write~$Pointer$(#funAddr~mxl111sf_streaming_ctrl_atsc_mh.base, #funAddr~mxl111sf_streaming_ctrl_atsc_mh.offset, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 193, 8);
    call write~$Pointer$(#funAddr~mxl111sf_init.base, #funAddr~mxl111sf_init.offset, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 201, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 209, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 217, 8);
    call write~$Pointer$(#funAddr~mxl111sf_get_stream_config_atsc_mh.base, #funAddr~mxl111sf_get_stream_config_atsc_mh.offset, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset + 225, 8);
    havoc #t~nondet1068.base, #t~nondet1068.offset;
    havoc #t~union2526.buffersize;
    havoc #t~union2527.buffersize;
    havoc #t~union2528.framesperurb, #t~union2528.framesize, #t~union2528.interval;
    call ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset := #Ultimate.alloc(233);
    call #t~nondet1113.base, #t~nondet1113.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet1113.base, #t~nondet1113.offset, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 0, 8);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 8, 8);
    call write~$Pointer$(~#adapter_nr.base, ~#adapter_nr.offset, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 16, 8);
    call write~int(0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 24, 1);
    call write~int(376, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 25, 4);
    call write~int(2, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 29, 1);
    call write~int(129, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 30, 1);
    call write~int(0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 31, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 35, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 43, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 51, 8);
    call write~$Pointer$(~#mxl111sf_i2c_algo.base, ~#mxl111sf_i2c_algo.offset, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 59, 8);
    call write~int(1, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 67, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 71, 8);
    call write~int(0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 0 + 0, 1);
    call write~int(0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 0 + 1, 1);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 0 + 2, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 0 + 10, 8);
    call write~int(2, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 0 + 18 + 0, 1);
    call write~int(5, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 0 + 18 + 1, 1);
    call write~int(6, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 0 + 18 + 2, 1);
    call write~int(#t~union2529.buffersize, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 0 + 18 + 3 + 0 + 0, 4);
    call write~int(24, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 0 + 18 + 3 + 0 + 0, 4);
    call write~int(3072, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 0 + 18 + 3 + 0 + 4, 4);
    call write~int(1, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 0 + 18 + 3 + 0 + 8, 4);
    call write~int(0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 33 + 0, 1);
    call write~int(0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 33 + 1, 1);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 33 + 2, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 33 + 10, 8);
    call write~int(0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 33 + 18 + 0, 1);
    call write~int(0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 33 + 18 + 1, 1);
    call write~int(0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 33 + 18 + 2, 1);
    call write~int(#t~union2530.buffersize, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 33 + 18 + 3 + 0 + 0, 4);
    call write~int(#t~union2531.framesperurb, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 33 + 18 + 3 + 0 + 0, 4);
    call write~int(#t~union2531.framesize, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 33 + 18 + 3 + 0 + 4, 4);
    call write~int(#t~union2531.interval, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 79 + 33 + 18 + 3 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 145, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 153, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 161, 8);
    call write~$Pointer$(#funAddr~mxl111sf_frontend_attach_mercury.base, #funAddr~mxl111sf_frontend_attach_mercury.offset, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 169, 8);
    call write~$Pointer$(#funAddr~mxl111sf_attach_tuner.base, #funAddr~mxl111sf_attach_tuner.offset, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 177, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 185, 8);
    call write~$Pointer$(#funAddr~mxl111sf_streaming_ctrl_mercury.base, #funAddr~mxl111sf_streaming_ctrl_mercury.offset, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 193, 8);
    call write~$Pointer$(#funAddr~mxl111sf_init.base, #funAddr~mxl111sf_init.offset, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 201, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 209, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 217, 8);
    call write~$Pointer$(#funAddr~mxl111sf_get_stream_config_mercury.base, #funAddr~mxl111sf_get_stream_config_mercury.offset, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset + 225, 8);
    havoc #t~nondet1113.base, #t~nondet1113.offset;
    havoc #t~union2529.buffersize;
    havoc #t~union2530.buffersize;
    havoc #t~union2531.framesperurb, #t~union2531.framesize, #t~union2531.interval;
    call ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset := #Ultimate.alloc(233);
    call #t~nondet1154.base, #t~nondet1154.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet1154.base, #t~nondet1154.offset, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 0, 8);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 8, 8);
    call write~$Pointer$(~#adapter_nr.base, ~#adapter_nr.offset, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 16, 8);
    call write~int(0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 24, 1);
    call write~int(376, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 25, 4);
    call write~int(2, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 29, 1);
    call write~int(129, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 30, 1);
    call write~int(0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 31, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 35, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 43, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 51, 8);
    call write~$Pointer$(~#mxl111sf_i2c_algo.base, ~#mxl111sf_i2c_algo.offset, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 59, 8);
    call write~int(1, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 67, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 71, 8);
    call write~int(0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 0 + 0, 1);
    call write~int(0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 0 + 1, 1);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 0 + 2, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 0 + 10, 8);
    call write~int(2, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 0 + 18 + 0, 1);
    call write~int(5, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 0 + 18 + 1, 1);
    call write~int(6, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 0 + 18 + 2, 1);
    call write~int(#t~union2532.buffersize, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 0 + 18 + 3 + 0 + 0, 4);
    call write~int(24, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 0 + 18 + 3 + 0 + 0, 4);
    call write~int(3072, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 0 + 18 + 3 + 0 + 4, 4);
    call write~int(1, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 0 + 18 + 3 + 0 + 8, 4);
    call write~int(0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 33 + 0, 1);
    call write~int(0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 33 + 1, 1);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 33 + 2, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 33 + 10, 8);
    call write~int(0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 33 + 18 + 0, 1);
    call write~int(0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 33 + 18 + 1, 1);
    call write~int(0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 33 + 18 + 2, 1);
    call write~int(#t~union2533.buffersize, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 33 + 18 + 3 + 0 + 0, 4);
    call write~int(#t~union2534.framesperurb, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 33 + 18 + 3 + 0 + 0, 4);
    call write~int(#t~union2534.framesize, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 33 + 18 + 3 + 0 + 4, 4);
    call write~int(#t~union2534.interval, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 79 + 33 + 18 + 3 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 145, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 153, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 161, 8);
    call write~$Pointer$(#funAddr~mxl111sf_frontend_attach_mercury_mh.base, #funAddr~mxl111sf_frontend_attach_mercury_mh.offset, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 169, 8);
    call write~$Pointer$(#funAddr~mxl111sf_attach_tuner.base, #funAddr~mxl111sf_attach_tuner.offset, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 177, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 185, 8);
    call write~$Pointer$(#funAddr~mxl111sf_streaming_ctrl_mercury_mh.base, #funAddr~mxl111sf_streaming_ctrl_mercury_mh.offset, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 193, 8);
    call write~$Pointer$(#funAddr~mxl111sf_init.base, #funAddr~mxl111sf_init.offset, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 201, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 209, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 217, 8);
    call write~$Pointer$(#funAddr~mxl111sf_get_stream_config_mercury_mh.base, #funAddr~mxl111sf_get_stream_config_mercury_mh.offset, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset + 225, 8);
    havoc #t~nondet1154.base, #t~nondet1154.offset;
    havoc #t~union2532.buffersize;
    havoc #t~union2533.buffersize;
    havoc #t~union2534.framesperurb, #t~union2534.framesize, #t~union2534.interval;
    call ~#__constr_expr_0.base, ~#__constr_expr_0.offset := #Ultimate.alloc(24);
    call #t~nondet1155.base, #t~nondet1155.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet1155.base, #t~nondet1155.offset, ~#__constr_expr_0.base, ~#__constr_expr_0.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_0.base, ~#__constr_expr_0.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset, ~#__constr_expr_0.base, ~#__constr_expr_0.offset + 16, 8);
    havoc #t~nondet1155.base, #t~nondet1155.offset;
    call ~#__constr_expr_1.base, ~#__constr_expr_1.offset := #Ultimate.alloc(24);
    call #t~nondet1156.base, #t~nondet1156.offset := #Ultimate.alloc(22);
    call write~$Pointer$(#t~nondet1156.base, #t~nondet1156.offset, ~#__constr_expr_1.base, ~#__constr_expr_1.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_1.base, ~#__constr_expr_1.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset, ~#__constr_expr_1.base, ~#__constr_expr_1.offset + 16, 8);
    havoc #t~nondet1156.base, #t~nondet1156.offset;
    call ~#__constr_expr_2.base, ~#__constr_expr_2.offset := #Ultimate.alloc(24);
    call #t~nondet1157.base, #t~nondet1157.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet1157.base, #t~nondet1157.offset, ~#__constr_expr_2.base, ~#__constr_expr_2.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_2.base, ~#__constr_expr_2.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset, ~#__constr_expr_2.base, ~#__constr_expr_2.offset + 16, 8);
    havoc #t~nondet1157.base, #t~nondet1157.offset;
    call ~#__constr_expr_3.base, ~#__constr_expr_3.offset := #Ultimate.alloc(24);
    call #t~nondet1158.base, #t~nondet1158.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet1158.base, #t~nondet1158.offset, ~#__constr_expr_3.base, ~#__constr_expr_3.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_3.base, ~#__constr_expr_3.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset, ~#__constr_expr_3.base, ~#__constr_expr_3.offset + 16, 8);
    havoc #t~nondet1158.base, #t~nondet1158.offset;
    call ~#__constr_expr_4.base, ~#__constr_expr_4.offset := #Ultimate.alloc(24);
    call #t~nondet1159.base, #t~nondet1159.offset := #Ultimate.alloc(22);
    call write~$Pointer$(#t~nondet1159.base, #t~nondet1159.offset, ~#__constr_expr_4.base, ~#__constr_expr_4.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_4.base, ~#__constr_expr_4.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset, ~#__constr_expr_4.base, ~#__constr_expr_4.offset + 16, 8);
    havoc #t~nondet1159.base, #t~nondet1159.offset;
    call ~#__constr_expr_5.base, ~#__constr_expr_5.offset := #Ultimate.alloc(24);
    call #t~nondet1160.base, #t~nondet1160.offset := #Ultimate.alloc(22);
    call write~$Pointer$(#t~nondet1160.base, #t~nondet1160.offset, ~#__constr_expr_5.base, ~#__constr_expr_5.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_5.base, ~#__constr_expr_5.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset, ~#__constr_expr_5.base, ~#__constr_expr_5.offset + 16, 8);
    havoc #t~nondet1160.base, #t~nondet1160.offset;
    call ~#__constr_expr_6.base, ~#__constr_expr_6.offset := #Ultimate.alloc(24);
    call #t~nondet1161.base, #t~nondet1161.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet1161.base, #t~nondet1161.offset, ~#__constr_expr_6.base, ~#__constr_expr_6.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_6.base, ~#__constr_expr_6.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset, ~#__constr_expr_6.base, ~#__constr_expr_6.offset + 16, 8);
    havoc #t~nondet1161.base, #t~nondet1161.offset;
    call ~#__constr_expr_7.base, ~#__constr_expr_7.offset := #Ultimate.alloc(24);
    call #t~nondet1162.base, #t~nondet1162.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet1162.base, #t~nondet1162.offset, ~#__constr_expr_7.base, ~#__constr_expr_7.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_7.base, ~#__constr_expr_7.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset, ~#__constr_expr_7.base, ~#__constr_expr_7.offset + 16, 8);
    havoc #t~nondet1162.base, #t~nondet1162.offset;
    call ~#__constr_expr_8.base, ~#__constr_expr_8.offset := #Ultimate.alloc(24);
    call #t~nondet1163.base, #t~nondet1163.offset := #Ultimate.alloc(22);
    call write~$Pointer$(#t~nondet1163.base, #t~nondet1163.offset, ~#__constr_expr_8.base, ~#__constr_expr_8.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_8.base, ~#__constr_expr_8.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset, ~#__constr_expr_8.base, ~#__constr_expr_8.offset + 16, 8);
    havoc #t~nondet1163.base, #t~nondet1163.offset;
    call ~#__constr_expr_9.base, ~#__constr_expr_9.offset := #Ultimate.alloc(24);
    call #t~nondet1164.base, #t~nondet1164.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet1164.base, #t~nondet1164.offset, ~#__constr_expr_9.base, ~#__constr_expr_9.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_9.base, ~#__constr_expr_9.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset, ~#__constr_expr_9.base, ~#__constr_expr_9.offset + 16, 8);
    havoc #t~nondet1164.base, #t~nondet1164.offset;
    call ~#__constr_expr_10.base, ~#__constr_expr_10.offset := #Ultimate.alloc(24);
    call #t~nondet1165.base, #t~nondet1165.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet1165.base, #t~nondet1165.offset, ~#__constr_expr_10.base, ~#__constr_expr_10.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_10.base, ~#__constr_expr_10.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset, ~#__constr_expr_10.base, ~#__constr_expr_10.offset + 16, 8);
    havoc #t~nondet1165.base, #t~nondet1165.offset;
    call ~#__constr_expr_11.base, ~#__constr_expr_11.offset := #Ultimate.alloc(24);
    call #t~nondet1166.base, #t~nondet1166.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet1166.base, #t~nondet1166.offset, ~#__constr_expr_11.base, ~#__constr_expr_11.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_11.base, ~#__constr_expr_11.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset, ~#__constr_expr_11.base, ~#__constr_expr_11.offset + 16, 8);
    havoc #t~nondet1166.base, #t~nondet1166.offset;
    call ~#__constr_expr_12.base, ~#__constr_expr_12.offset := #Ultimate.alloc(24);
    call #t~nondet1167.base, #t~nondet1167.offset := #Ultimate.alloc(22);
    call write~$Pointer$(#t~nondet1167.base, #t~nondet1167.offset, ~#__constr_expr_12.base, ~#__constr_expr_12.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_12.base, ~#__constr_expr_12.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset, ~#__constr_expr_12.base, ~#__constr_expr_12.offset + 16, 8);
    havoc #t~nondet1167.base, #t~nondet1167.offset;
    call ~#__constr_expr_13.base, ~#__constr_expr_13.offset := #Ultimate.alloc(24);
    call #t~nondet1168.base, #t~nondet1168.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet1168.base, #t~nondet1168.offset, ~#__constr_expr_13.base, ~#__constr_expr_13.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_13.base, ~#__constr_expr_13.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset, ~#__constr_expr_13.base, ~#__constr_expr_13.offset + 16, 8);
    havoc #t~nondet1168.base, #t~nondet1168.offset;
    call ~#__constr_expr_14.base, ~#__constr_expr_14.offset := #Ultimate.alloc(24);
    call #t~nondet1169.base, #t~nondet1169.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet1169.base, #t~nondet1169.offset, ~#__constr_expr_14.base, ~#__constr_expr_14.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_14.base, ~#__constr_expr_14.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset, ~#__constr_expr_14.base, ~#__constr_expr_14.offset + 16, 8);
    havoc #t~nondet1169.base, #t~nondet1169.offset;
    call ~#__constr_expr_15.base, ~#__constr_expr_15.offset := #Ultimate.alloc(24);
    call #t~nondet1170.base, #t~nondet1170.offset := #Ultimate.alloc(22);
    call write~$Pointer$(#t~nondet1170.base, #t~nondet1170.offset, ~#__constr_expr_15.base, ~#__constr_expr_15.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_15.base, ~#__constr_expr_15.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset, ~#__constr_expr_15.base, ~#__constr_expr_15.offset + 16, 8);
    havoc #t~nondet1170.base, #t~nondet1170.offset;
    call ~#__constr_expr_16.base, ~#__constr_expr_16.offset := #Ultimate.alloc(24);
    call #t~nondet1171.base, #t~nondet1171.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet1171.base, #t~nondet1171.offset, ~#__constr_expr_16.base, ~#__constr_expr_16.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_16.base, ~#__constr_expr_16.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset, ~#__constr_expr_16.base, ~#__constr_expr_16.offset + 16, 8);
    havoc #t~nondet1171.base, #t~nondet1171.offset;
    call ~#__constr_expr_17.base, ~#__constr_expr_17.offset := #Ultimate.alloc(24);
    call #t~nondet1172.base, #t~nondet1172.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet1172.base, #t~nondet1172.offset, ~#__constr_expr_17.base, ~#__constr_expr_17.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_17.base, ~#__constr_expr_17.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset, ~#__constr_expr_17.base, ~#__constr_expr_17.offset + 16, 8);
    havoc #t~nondet1172.base, #t~nondet1172.offset;
    call ~#__constr_expr_18.base, ~#__constr_expr_18.offset := #Ultimate.alloc(24);
    call #t~nondet1173.base, #t~nondet1173.offset := #Ultimate.alloc(22);
    call write~$Pointer$(#t~nondet1173.base, #t~nondet1173.offset, ~#__constr_expr_18.base, ~#__constr_expr_18.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_18.base, ~#__constr_expr_18.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset, ~#__constr_expr_18.base, ~#__constr_expr_18.offset + 16, 8);
    havoc #t~nondet1173.base, #t~nondet1173.offset;
    call ~#__constr_expr_19.base, ~#__constr_expr_19.offset := #Ultimate.alloc(24);
    call #t~nondet1174.base, #t~nondet1174.offset := #Ultimate.alloc(18);
    call write~$Pointer$(#t~nondet1174.base, #t~nondet1174.offset, ~#__constr_expr_19.base, ~#__constr_expr_19.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_19.base, ~#__constr_expr_19.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset, ~#__constr_expr_19.base, ~#__constr_expr_19.offset + 16, 8);
    havoc #t~nondet1174.base, #t~nondet1174.offset;
    call ~#__constr_expr_20.base, ~#__constr_expr_20.offset := #Ultimate.alloc(24);
    call #t~nondet1175.base, #t~nondet1175.offset := #Ultimate.alloc(22);
    call write~$Pointer$(#t~nondet1175.base, #t~nondet1175.offset, ~#__constr_expr_20.base, ~#__constr_expr_20.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_20.base, ~#__constr_expr_20.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset, ~#__constr_expr_20.base, ~#__constr_expr_20.offset + 16, 8);
    havoc #t~nondet1175.base, #t~nondet1175.offset;
    call ~#__constr_expr_21.base, ~#__constr_expr_21.offset := #Ultimate.alloc(24);
    call #t~nondet1176.base, #t~nondet1176.offset := #Ultimate.alloc(18);
    call write~$Pointer$(#t~nondet1176.base, #t~nondet1176.offset, ~#__constr_expr_21.base, ~#__constr_expr_21.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_21.base, ~#__constr_expr_21.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset, ~#__constr_expr_21.base, ~#__constr_expr_21.offset + 16, 8);
    havoc #t~nondet1176.base, #t~nondet1176.offset;
    call ~#__constr_expr_22.base, ~#__constr_expr_22.offset := #Ultimate.alloc(24);
    call #t~nondet1177.base, #t~nondet1177.offset := #Ultimate.alloc(22);
    call write~$Pointer$(#t~nondet1177.base, #t~nondet1177.offset, ~#__constr_expr_22.base, ~#__constr_expr_22.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_22.base, ~#__constr_expr_22.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset, ~#__constr_expr_22.base, ~#__constr_expr_22.offset + 16, 8);
    havoc #t~nondet1177.base, #t~nondet1177.offset;
    call ~#__constr_expr_23.base, ~#__constr_expr_23.offset := #Ultimate.alloc(24);
    call #t~nondet1178.base, #t~nondet1178.offset := #Ultimate.alloc(18);
    call write~$Pointer$(#t~nondet1178.base, #t~nondet1178.offset, ~#__constr_expr_23.base, ~#__constr_expr_23.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_23.base, ~#__constr_expr_23.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset, ~#__constr_expr_23.base, ~#__constr_expr_23.offset + 16, 8);
    havoc #t~nondet1178.base, #t~nondet1178.offset;
    call ~#__constr_expr_24.base, ~#__constr_expr_24.offset := #Ultimate.alloc(24);
    call #t~nondet1179.base, #t~nondet1179.offset := #Ultimate.alloc(22);
    call write~$Pointer$(#t~nondet1179.base, #t~nondet1179.offset, ~#__constr_expr_24.base, ~#__constr_expr_24.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_24.base, ~#__constr_expr_24.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset, ~#__constr_expr_24.base, ~#__constr_expr_24.offset + 16, 8);
    havoc #t~nondet1179.base, #t~nondet1179.offset;
    call ~#__constr_expr_25.base, ~#__constr_expr_25.offset := #Ultimate.alloc(24);
    call #t~nondet1180.base, #t~nondet1180.offset := #Ultimate.alloc(18);
    call write~$Pointer$(#t~nondet1180.base, #t~nondet1180.offset, ~#__constr_expr_25.base, ~#__constr_expr_25.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_25.base, ~#__constr_expr_25.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset, ~#__constr_expr_25.base, ~#__constr_expr_25.offset + 16, 8);
    havoc #t~nondet1180.base, #t~nondet1180.offset;
    call ~#__constr_expr_26.base, ~#__constr_expr_26.offset := #Ultimate.alloc(24);
    call #t~nondet1181.base, #t~nondet1181.offset := #Ultimate.alloc(22);
    call write~$Pointer$(#t~nondet1181.base, #t~nondet1181.offset, ~#__constr_expr_26.base, ~#__constr_expr_26.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_26.base, ~#__constr_expr_26.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset, ~#__constr_expr_26.base, ~#__constr_expr_26.offset + 16, 8);
    havoc #t~nondet1181.base, #t~nondet1181.offset;
    call ~#__constr_expr_27.base, ~#__constr_expr_27.offset := #Ultimate.alloc(24);
    call #t~nondet1182.base, #t~nondet1182.offset := #Ultimate.alloc(18);
    call write~$Pointer$(#t~nondet1182.base, #t~nondet1182.offset, ~#__constr_expr_27.base, ~#__constr_expr_27.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_27.base, ~#__constr_expr_27.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset, ~#__constr_expr_27.base, ~#__constr_expr_27.offset + 16, 8);
    havoc #t~nondet1182.base, #t~nondet1182.offset;
    call ~#__constr_expr_28.base, ~#__constr_expr_28.offset := #Ultimate.alloc(24);
    call #t~nondet1183.base, #t~nondet1183.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet1183.base, #t~nondet1183.offset, ~#__constr_expr_28.base, ~#__constr_expr_28.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_28.base, ~#__constr_expr_28.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset, ~#__constr_expr_28.base, ~#__constr_expr_28.offset + 16, 8);
    havoc #t~nondet1183.base, #t~nondet1183.offset;
    call ~#__constr_expr_29.base, ~#__constr_expr_29.offset := #Ultimate.alloc(24);
    call #t~nondet1184.base, #t~nondet1184.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet1184.base, #t~nondet1184.offset, ~#__constr_expr_29.base, ~#__constr_expr_29.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_29.base, ~#__constr_expr_29.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset, ~#__constr_expr_29.base, ~#__constr_expr_29.offset + 16, 8);
    havoc #t~nondet1184.base, #t~nondet1184.offset;
    call ~#__constr_expr_30.base, ~#__constr_expr_30.offset := #Ultimate.alloc(24);
    call #t~nondet1185.base, #t~nondet1185.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet1185.base, #t~nondet1185.offset, ~#__constr_expr_30.base, ~#__constr_expr_30.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_30.base, ~#__constr_expr_30.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset, ~#__constr_expr_30.base, ~#__constr_expr_30.offset + 16, 8);
    havoc #t~nondet1185.base, #t~nondet1185.offset;
    call ~#__constr_expr_31.base, ~#__constr_expr_31.offset := #Ultimate.alloc(24);
    call #t~nondet1186.base, #t~nondet1186.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet1186.base, #t~nondet1186.offset, ~#__constr_expr_31.base, ~#__constr_expr_31.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_31.base, ~#__constr_expr_31.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset, ~#__constr_expr_31.base, ~#__constr_expr_31.offset + 16, 8);
    havoc #t~nondet1186.base, #t~nondet1186.offset;
    call ~#__constr_expr_32.base, ~#__constr_expr_32.offset := #Ultimate.alloc(24);
    call #t~nondet1187.base, #t~nondet1187.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet1187.base, #t~nondet1187.offset, ~#__constr_expr_32.base, ~#__constr_expr_32.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_32.base, ~#__constr_expr_32.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset, ~#__constr_expr_32.base, ~#__constr_expr_32.offset + 16, 8);
    havoc #t~nondet1187.base, #t~nondet1187.offset;
    call ~#__constr_expr_33.base, ~#__constr_expr_33.offset := #Ultimate.alloc(24);
    call #t~nondet1188.base, #t~nondet1188.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet1188.base, #t~nondet1188.offset, ~#__constr_expr_33.base, ~#__constr_expr_33.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#__constr_expr_33.base, ~#__constr_expr_33.offset + 8, 8);
    call write~$Pointer$(~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset, ~#__constr_expr_33.base, ~#__constr_expr_33.offset + 16, 8);
    havoc #t~nondet1188.base, #t~nondet1188.offset;
    call ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset := #Ultimate.alloc(875);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 0 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 0 + 2, 2);
    call write~int(50688, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 0 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 0 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 0 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 0 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 0 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 0 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 0 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 0 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 0 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 0 + 16, 1);
    call write~int(~#__constr_expr_0.base + ~#__constr_expr_0.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 0 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 25 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 25 + 2, 2);
    call write~int(50689, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 25 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 25 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 25 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 25 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 25 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 25 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 25 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 25 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 25 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 25 + 16, 1);
    call write~int(~#__constr_expr_1.base + ~#__constr_expr_1.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 25 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 50 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 50 + 2, 2);
    call write~int(50690, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 50 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 50 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 50 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 50 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 50 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 50 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 50 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 50 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 50 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 50 + 16, 1);
    call write~int(~#__constr_expr_2.base + ~#__constr_expr_2.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 50 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 75 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 75 + 2, 2);
    call write~int(50691, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 75 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 75 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 75 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 75 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 75 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 75 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 75 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 75 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 75 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 75 + 16, 1);
    call write~int(~#__constr_expr_3.base + ~#__constr_expr_3.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 75 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 100 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 100 + 2, 2);
    call write~int(50692, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 100 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 100 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 100 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 100 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 100 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 100 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 100 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 100 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 100 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 100 + 16, 1);
    call write~int(~#__constr_expr_4.base + ~#__constr_expr_4.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 100 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 125 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 125 + 2, 2);
    call write~int(50697, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 125 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 125 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 125 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 125 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 125 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 125 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 125 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 125 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 125 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 125 + 16, 1);
    call write~int(~#__constr_expr_5.base + ~#__constr_expr_5.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 125 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 150 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 150 + 2, 2);
    call write~int(50698, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 150 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 150 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 150 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 150 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 150 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 150 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 150 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 150 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 150 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 150 + 16, 1);
    call write~int(~#__constr_expr_6.base + ~#__constr_expr_6.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 150 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 175 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 175 + 2, 2);
    call write~int(50699, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 175 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 175 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 175 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 175 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 175 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 175 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 175 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 175 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 175 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 175 + 16, 1);
    call write~int(~#__constr_expr_7.base + ~#__constr_expr_7.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 175 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 200 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 200 + 2, 2);
    call write~int(50700, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 200 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 200 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 200 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 200 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 200 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 200 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 200 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 200 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 200 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 200 + 16, 1);
    call write~int(~#__constr_expr_8.base + ~#__constr_expr_8.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 200 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 225 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 225 + 2, 2);
    call write~int(50771, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 225 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 225 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 225 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 225 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 225 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 225 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 225 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 225 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 225 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 225 + 16, 1);
    call write~int(~#__constr_expr_9.base + ~#__constr_expr_9.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 225 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 250 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 250 + 2, 2);
    call write~int(50779, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 250 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 250 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 250 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 250 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 250 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 250 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 250 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 250 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 250 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 250 + 16, 1);
    call write~int(~#__constr_expr_10.base + ~#__constr_expr_10.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 250 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 275 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 275 + 2, 2);
    call write~int(46848, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 275 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 275 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 275 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 275 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 275 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 275 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 275 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 275 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 275 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 275 + 16, 1);
    call write~int(~#__constr_expr_11.base + ~#__constr_expr_11.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 275 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 300 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 300 + 2, 2);
    call write~int(46849, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 300 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 300 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 300 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 300 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 300 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 300 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 300 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 300 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 300 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 300 + 16, 1);
    call write~int(~#__constr_expr_12.base + ~#__constr_expr_12.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 300 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 325 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 325 + 2, 2);
    call write~int(46850, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 325 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 325 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 325 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 325 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 325 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 325 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 325 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 325 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 325 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 325 + 16, 1);
    call write~int(~#__constr_expr_13.base + ~#__constr_expr_13.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 325 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 350 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 350 + 2, 2);
    call write~int(46851, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 350 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 350 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 350 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 350 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 350 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 350 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 350 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 350 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 350 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 350 + 16, 1);
    call write~int(~#__constr_expr_14.base + ~#__constr_expr_14.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 350 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 375 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 375 + 2, 2);
    call write~int(46852, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 375 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 375 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 375 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 375 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 375 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 375 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 375 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 375 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 375 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 375 + 16, 1);
    call write~int(~#__constr_expr_15.base + ~#__constr_expr_15.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 375 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 400 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 400 + 2, 2);
    call write~int(46931, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 400 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 400 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 400 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 400 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 400 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 400 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 400 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 400 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 400 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 400 + 16, 1);
    call write~int(~#__constr_expr_16.base + ~#__constr_expr_16.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 400 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 425 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 425 + 2, 2);
    call write~int(46947, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 425 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 425 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 425 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 425 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 425 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 425 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 425 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 425 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 425 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 425 + 16, 1);
    call write~int(~#__constr_expr_17.base + ~#__constr_expr_17.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 425 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 450 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 450 + 2, 2);
    call write~int(46948, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 450 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 450 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 450 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 450 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 450 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 450 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 450 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 450 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 450 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 450 + 16, 1);
    call write~int(~#__constr_expr_18.base + ~#__constr_expr_18.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 450 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 475 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 475 + 2, 2);
    call write~int(55379, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 475 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 475 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 475 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 475 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 475 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 475 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 475 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 475 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 475 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 475 + 16, 1);
    call write~int(~#__constr_expr_19.base + ~#__constr_expr_19.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 475 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 500 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 500 + 2, 2);
    call write~int(55380, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 500 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 500 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 500 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 500 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 500 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 500 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 500 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 500 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 500 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 500 + 16, 1);
    call write~int(~#__constr_expr_20.base + ~#__constr_expr_20.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 500 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 525 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 525 + 2, 2);
    call write~int(55395, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 525 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 525 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 525 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 525 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 525 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 525 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 525 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 525 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 525 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 525 + 16, 1);
    call write~int(~#__constr_expr_21.base + ~#__constr_expr_21.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 525 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 550 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 550 + 2, 2);
    call write~int(55396, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 550 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 550 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 550 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 550 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 550 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 550 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 550 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 550 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 550 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 550 + 16, 1);
    call write~int(~#__constr_expr_22.base + ~#__constr_expr_22.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 550 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 575 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 575 + 2, 2);
    call write~int(55507, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 575 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 575 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 575 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 575 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 575 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 575 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 575 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 575 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 575 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 575 + 16, 1);
    call write~int(~#__constr_expr_23.base + ~#__constr_expr_23.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 575 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 600 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 600 + 2, 2);
    call write~int(55508, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 600 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 600 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 600 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 600 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 600 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 600 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 600 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 600 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 600 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 600 + 16, 1);
    call write~int(~#__constr_expr_24.base + ~#__constr_expr_24.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 600 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 625 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 625 + 2, 2);
    call write~int(55523, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 625 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 625 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 625 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 625 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 625 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 625 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 625 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 625 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 625 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 625 + 16, 1);
    call write~int(~#__constr_expr_25.base + ~#__constr_expr_25.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 625 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 650 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 650 + 2, 2);
    call write~int(55524, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 650 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 650 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 650 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 650 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 650 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 650 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 650 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 650 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 650 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 650 + 16, 1);
    call write~int(~#__constr_expr_26.base + ~#__constr_expr_26.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 650 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 675 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 675 + 2, 2);
    call write~int(55551, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 675 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 675 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 675 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 675 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 675 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 675 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 675 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 675 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 675 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 675 + 16, 1);
    call write~int(~#__constr_expr_27.base + ~#__constr_expr_27.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 675 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 700 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 700 + 2, 2);
    call write~int(50706, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 700 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 700 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 700 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 700 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 700 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 700 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 700 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 700 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 700 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 700 + 16, 1);
    call write~int(~#__constr_expr_28.base + ~#__constr_expr_28.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 700 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 725 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 725 + 2, 2);
    call write~int(50707, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 725 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 725 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 725 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 725 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 725 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 725 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 725 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 725 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 725 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 725 + 16, 1);
    call write~int(~#__constr_expr_29.base + ~#__constr_expr_29.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 725 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 750 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 750 + 2, 2);
    call write~int(50714, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 750 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 750 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 750 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 750 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 750 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 750 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 750 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 750 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 750 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 750 + 16, 1);
    call write~int(~#__constr_expr_30.base + ~#__constr_expr_30.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 750 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 775 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 775 + 2, 2);
    call write~int(50715, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 775 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 775 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 775 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 775 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 775 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 775 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 775 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 775 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 775 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 775 + 16, 1);
    call write~int(~#__constr_expr_31.base + ~#__constr_expr_31.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 775 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 800 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 800 + 2, 2);
    call write~int(46935, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 800 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 800 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 800 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 800 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 800 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 800 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 800 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 800 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 800 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 800 + 16, 1);
    call write~int(~#__constr_expr_32.base + ~#__constr_expr_32.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 800 + 17, 8);
    call write~int(3, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 825 + 0, 2);
    call write~int(8256, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 825 + 2, 2);
    call write~int(46951, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 825 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 825 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 825 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 825 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 825 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 825 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 825 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 825 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 825 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 825 + 16, 1);
    call write~int(~#__constr_expr_33.base + ~#__constr_expr_33.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 825 + 17, 8);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 850 + 0, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 850 + 2, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 850 + 4, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 850 + 6, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 850 + 8, 2);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 850 + 10, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 850 + 11, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 850 + 12, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 850 + 13, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 850 + 14, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 850 + 15, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 850 + 16, 1);
    call write~int(0, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset + 850 + 17, 8);
    call ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset := #Ultimate.alloc(297);
    call #t~nondet1189.base, #t~nondet1189.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet1189.base, #t~nondet1189.offset, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 0, 8);
    call write~$Pointer$(#funAddr~dvb_usbv2_probe.base, #funAddr~dvb_usbv2_probe.offset, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 8, 8);
    call write~$Pointer$(#funAddr~dvb_usbv2_disconnect.base, #funAddr~dvb_usbv2_disconnect.offset, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 24, 8);
    call write~$Pointer$(#funAddr~dvb_usbv2_suspend.base, #funAddr~dvb_usbv2_suspend.offset, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 32, 8);
    call write~$Pointer$(#funAddr~dvb_usbv2_resume.base, #funAddr~dvb_usbv2_resume.offset, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 64, 8);
    call write~$Pointer$(~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 72, 8);
    call write~int(0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union2535.head, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union2535.tail, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2536.__padding[0], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union2536.__padding[1], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union2536.__padding[2], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[3], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[4], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[5], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[6], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[7], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[8], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[9], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[10], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[11], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[12], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[13], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[14], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[15], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[16], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[17], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[18], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[19], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[20], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[21], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[22], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2536.__padding[23], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union2536.dep_map.key.base, #t~union2536.dep_map.key.offset, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union2536.dep_map.class_cache.base[0], #t~union2536.dep_map.class_cache.offset[0], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union2536.dep_map.class_cache.base[1], #t~union2536.dep_map.class_cache.offset[1], ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union2536.dep_map.name.base, #t~union2536.dep_map.name.offset, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union2536.dep_map.cpu, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union2536.dep_map.ip, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 80 + 68 + 8, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 16, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 24, 8);
    call write~int(0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 32, 1);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 33, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 41, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 49, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 57, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 65, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 73, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 81, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 89, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 97, 8);
    call write~$Pointer$(0, 0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 0 + 105, 8);
    call write~int(0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 164 + 113, 4);
    call write~int(1, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 281, 4);
    call write~int(0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 285, 4);
    call write~int(0, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 289, 4);
    call write~int(1, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset + 293, 4);
    havoc #t~nondet1189.base, #t~nondet1189.offset;
    havoc #t~union2535.head, #t~union2535.tail;
    havoc #t~union2536.__padding, #t~union2536.dep_map.key.base, #t~union2536.dep_map.key.offset, #t~union2536.dep_map.class_cache.base, #t~union2536.dep_map.class_cache.offset, #t~union2536.dep_map.name.base, #t~union2536.dep_map.name.offset, #t~union2536.dep_map.cpu, #t~union2536.dep_map.ip;
    ~ldv_0_container_struct_dvb_frontend_ptr.base, ~ldv_0_container_struct_dvb_frontend_ptr.offset := 0, 0;
    ~ldv_0_container_struct_dvb_usb_adapter_ptr.base, ~ldv_0_container_struct_dvb_usb_adapter_ptr.offset := 0, 0;
    ~ldv_0_container_struct_dvb_usb_device_ptr.base, ~ldv_0_container_struct_dvb_usb_device_ptr.offset := 0, 0;
    ~ldv_0_container_struct_i2c_adapter_ptr.base, ~ldv_0_container_struct_i2c_adapter_ptr.offset := 0, 0;
    ~ldv_0_container_struct_i2c_msg_ptr.base, ~ldv_0_container_struct_i2c_msg_ptr.offset := 0, 0;
    ~ldv_0_container_struct_usb_data_stream_properties_ptr.base, ~ldv_0_container_struct_usb_data_stream_properties_ptr.offset := 0, 0;
    ~ldv_1_container_struct_dvb_frontend_ptr.base, ~ldv_1_container_struct_dvb_frontend_ptr.offset := 0, 0;
    ~ldv_1_container_struct_dvb_usb_adapter_ptr.base, ~ldv_1_container_struct_dvb_usb_adapter_ptr.offset := 0, 0;
    ~ldv_1_container_struct_dvb_usb_device_ptr.base, ~ldv_1_container_struct_dvb_usb_device_ptr.offset := 0, 0;
    ~ldv_1_container_struct_i2c_adapter_ptr.base, ~ldv_1_container_struct_i2c_adapter_ptr.offset := 0, 0;
    ~ldv_1_container_struct_i2c_msg_ptr.base, ~ldv_1_container_struct_i2c_msg_ptr.offset := 0, 0;
    ~ldv_1_container_struct_usb_data_stream_properties_ptr.base, ~ldv_1_container_struct_usb_data_stream_properties_ptr.offset := 0, 0;
    ~ldv_2_container_struct_dvb_frontend_ptr.base, ~ldv_2_container_struct_dvb_frontend_ptr.offset := 0, 0;
    ~ldv_2_container_struct_dvb_usb_adapter_ptr.base, ~ldv_2_container_struct_dvb_usb_adapter_ptr.offset := 0, 0;
    ~ldv_2_container_struct_dvb_usb_device_ptr.base, ~ldv_2_container_struct_dvb_usb_device_ptr.offset := 0, 0;
    ~ldv_2_container_struct_i2c_adapter_ptr.base, ~ldv_2_container_struct_i2c_adapter_ptr.offset := 0, 0;
    ~ldv_2_container_struct_i2c_msg_ptr.base, ~ldv_2_container_struct_i2c_msg_ptr.offset := 0, 0;
    ~ldv_2_container_struct_usb_data_stream_properties_ptr.base, ~ldv_2_container_struct_usb_data_stream_properties_ptr.offset := 0, 0;
    ~ldv_3_container_struct_dvb_frontend_ptr.base, ~ldv_3_container_struct_dvb_frontend_ptr.offset := 0, 0;
    ~ldv_3_container_struct_dvb_usb_adapter_ptr.base, ~ldv_3_container_struct_dvb_usb_adapter_ptr.offset := 0, 0;
    ~ldv_3_container_struct_dvb_usb_device_ptr.base, ~ldv_3_container_struct_dvb_usb_device_ptr.offset := 0, 0;
    ~ldv_3_container_struct_i2c_adapter_ptr.base, ~ldv_3_container_struct_i2c_adapter_ptr.offset := 0, 0;
    ~ldv_3_container_struct_i2c_msg_ptr.base, ~ldv_3_container_struct_i2c_msg_ptr.offset := 0, 0;
    ~ldv_3_container_struct_usb_data_stream_properties_ptr.base, ~ldv_3_container_struct_usb_data_stream_properties_ptr.offset := 0, 0;
    ~ldv_4_container_struct_dvb_frontend_ptr.base, ~ldv_4_container_struct_dvb_frontend_ptr.offset := 0, 0;
    ~ldv_4_container_struct_dvb_usb_adapter_ptr.base, ~ldv_4_container_struct_dvb_usb_adapter_ptr.offset := 0, 0;
    ~ldv_4_container_struct_dvb_usb_device_ptr.base, ~ldv_4_container_struct_dvb_usb_device_ptr.offset := 0, 0;
    ~ldv_4_container_struct_i2c_adapter_ptr.base, ~ldv_4_container_struct_i2c_adapter_ptr.offset := 0, 0;
    ~ldv_4_container_struct_i2c_msg_ptr.base, ~ldv_4_container_struct_i2c_msg_ptr.offset := 0, 0;
    ~ldv_4_container_struct_usb_data_stream_properties_ptr.base, ~ldv_4_container_struct_usb_data_stream_properties_ptr.offset := 0, 0;
    ~ldv_5_container_struct_dvb_frontend_ptr.base, ~ldv_5_container_struct_dvb_frontend_ptr.offset := 0, 0;
    ~ldv_5_container_struct_dvb_usb_adapter_ptr.base, ~ldv_5_container_struct_dvb_usb_adapter_ptr.offset := 0, 0;
    ~ldv_5_container_struct_dvb_usb_device_ptr.base, ~ldv_5_container_struct_dvb_usb_device_ptr.offset := 0, 0;
    ~ldv_5_container_struct_i2c_adapter_ptr.base, ~ldv_5_container_struct_i2c_adapter_ptr.offset := 0, 0;
    ~ldv_5_container_struct_i2c_msg_ptr.base, ~ldv_5_container_struct_i2c_msg_ptr.offset := 0, 0;
    ~ldv_5_container_struct_usb_data_stream_properties_ptr.base, ~ldv_5_container_struct_usb_data_stream_properties_ptr.offset := 0, 0;
    ~ldv_6_container_struct_dvb_frontend_ptr.base, ~ldv_6_container_struct_dvb_frontend_ptr.offset := 0, 0;
    ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.base, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.offset := 0, 0;
    ~ldv_6_container_struct_mxl111sf_state_ptr.base, ~ldv_6_container_struct_mxl111sf_state_ptr.offset := 0, 0;
    ~ldv_7_container_usb_driver.base, ~ldv_7_container_usb_driver.offset := 0, 0;
    ~ldv_7_ldv_param_13_1_default.base, ~ldv_7_ldv_param_13_1_default.offset := 0, 0;
    ~ldv_7_ldv_param_8_1_default.base, ~ldv_7_ldv_param_8_1_default.offset := 0, 0;
    ~ldv_7_resource_usb_interface.base, ~ldv_7_resource_usb_interface.offset := 0, 0;
    ~ldv_7_usb_device_usb_device.base, ~ldv_7_usb_device_usb_device.offset := 0, 0;
    ~ldv_8_container_usb_driver.base, ~ldv_8_container_usb_driver.offset := 0, 0;
    ~ldv_0_callback_frontend_attach.base, ~ldv_0_callback_frontend_attach.offset := #funAddr~mxl111sf_frontend_attach_atsc.base, #funAddr~mxl111sf_frontend_attach_atsc.offset;
    ~ldv_0_callback_functionality.base, ~ldv_0_callback_functionality.offset := #funAddr~mxl111sf_i2c_func.base, #funAddr~mxl111sf_i2c_func.offset;
    ~ldv_0_callback_get_stream_config.base, ~ldv_0_callback_get_stream_config.offset := #funAddr~mxl111sf_get_stream_config_atsc.base, #funAddr~mxl111sf_get_stream_config_atsc.offset;
    ~ldv_0_callback_init.base, ~ldv_0_callback_init.offset := #funAddr~mxl111sf_init.base, #funAddr~mxl111sf_init.offset;
    ~ldv_0_callback_master_xfer.base, ~ldv_0_callback_master_xfer.offset := #funAddr~mxl111sf_i2c_xfer.base, #funAddr~mxl111sf_i2c_xfer.offset;
    ~ldv_0_callback_streaming_ctrl.base, ~ldv_0_callback_streaming_ctrl.offset := #funAddr~mxl111sf_ep6_streaming_ctrl.base, #funAddr~mxl111sf_ep6_streaming_ctrl.offset;
    ~ldv_0_callback_tuner_attach.base, ~ldv_0_callback_tuner_attach.offset := #funAddr~mxl111sf_attach_tuner.base, #funAddr~mxl111sf_attach_tuner.offset;
    ~ldv_11_exit_mxl111sf_usb_driver_exit_default.base, ~ldv_11_exit_mxl111sf_usb_driver_exit_default.offset := #funAddr~mxl111sf_usb_driver_exit.base, #funAddr~mxl111sf_usb_driver_exit.offset;
    ~ldv_11_init_mxl111sf_usb_driver_init_default.base, ~ldv_11_init_mxl111sf_usb_driver_init_default.offset := #funAddr~mxl111sf_usb_driver_init.base, #funAddr~mxl111sf_usb_driver_init.offset;
    ~ldv_1_callback_frontend_attach.base, ~ldv_1_callback_frontend_attach.offset := #funAddr~mxl111sf_frontend_attach_atsc_mh.base, #funAddr~mxl111sf_frontend_attach_atsc_mh.offset;
    ~ldv_1_callback_functionality.base, ~ldv_1_callback_functionality.offset := #funAddr~mxl111sf_i2c_func.base, #funAddr~mxl111sf_i2c_func.offset;
    ~ldv_1_callback_get_stream_config.base, ~ldv_1_callback_get_stream_config.offset := #funAddr~mxl111sf_get_stream_config_atsc_mh.base, #funAddr~mxl111sf_get_stream_config_atsc_mh.offset;
    ~ldv_1_callback_init.base, ~ldv_1_callback_init.offset := #funAddr~mxl111sf_init.base, #funAddr~mxl111sf_init.offset;
    ~ldv_1_callback_master_xfer.base, ~ldv_1_callback_master_xfer.offset := #funAddr~mxl111sf_i2c_xfer.base, #funAddr~mxl111sf_i2c_xfer.offset;
    ~ldv_1_callback_streaming_ctrl.base, ~ldv_1_callback_streaming_ctrl.offset := #funAddr~mxl111sf_streaming_ctrl_atsc_mh.base, #funAddr~mxl111sf_streaming_ctrl_atsc_mh.offset;
    ~ldv_1_callback_tuner_attach.base, ~ldv_1_callback_tuner_attach.offset := #funAddr~mxl111sf_attach_tuner.base, #funAddr~mxl111sf_attach_tuner.offset;
    ~ldv_2_callback_frontend_attach.base, ~ldv_2_callback_frontend_attach.offset := #funAddr~mxl111sf_frontend_attach_dvbt.base, #funAddr~mxl111sf_frontend_attach_dvbt.offset;
    ~ldv_2_callback_functionality.base, ~ldv_2_callback_functionality.offset := #funAddr~mxl111sf_i2c_func.base, #funAddr~mxl111sf_i2c_func.offset;
    ~ldv_2_callback_get_stream_config.base, ~ldv_2_callback_get_stream_config.offset := #funAddr~mxl111sf_get_stream_config_dvbt.base, #funAddr~mxl111sf_get_stream_config_dvbt.offset;
    ~ldv_2_callback_init.base, ~ldv_2_callback_init.offset := #funAddr~mxl111sf_init.base, #funAddr~mxl111sf_init.offset;
    ~ldv_2_callback_master_xfer.base, ~ldv_2_callback_master_xfer.offset := #funAddr~mxl111sf_i2c_xfer.base, #funAddr~mxl111sf_i2c_xfer.offset;
    ~ldv_2_callback_streaming_ctrl.base, ~ldv_2_callback_streaming_ctrl.offset := #funAddr~mxl111sf_ep4_streaming_ctrl.base, #funAddr~mxl111sf_ep4_streaming_ctrl.offset;
    ~ldv_2_callback_tuner_attach.base, ~ldv_2_callback_tuner_attach.offset := #funAddr~mxl111sf_attach_tuner.base, #funAddr~mxl111sf_attach_tuner.offset;
    ~ldv_3_callback_frontend_attach.base, ~ldv_3_callback_frontend_attach.offset := #funAddr~mxl111sf_frontend_attach_mercury.base, #funAddr~mxl111sf_frontend_attach_mercury.offset;
    ~ldv_3_callback_functionality.base, ~ldv_3_callback_functionality.offset := #funAddr~mxl111sf_i2c_func.base, #funAddr~mxl111sf_i2c_func.offset;
    ~ldv_3_callback_get_stream_config.base, ~ldv_3_callback_get_stream_config.offset := #funAddr~mxl111sf_get_stream_config_mercury.base, #funAddr~mxl111sf_get_stream_config_mercury.offset;
    ~ldv_3_callback_init.base, ~ldv_3_callback_init.offset := #funAddr~mxl111sf_init.base, #funAddr~mxl111sf_init.offset;
    ~ldv_3_callback_master_xfer.base, ~ldv_3_callback_master_xfer.offset := #funAddr~mxl111sf_i2c_xfer.base, #funAddr~mxl111sf_i2c_xfer.offset;
    ~ldv_3_callback_streaming_ctrl.base, ~ldv_3_callback_streaming_ctrl.offset := #funAddr~mxl111sf_streaming_ctrl_mercury.base, #funAddr~mxl111sf_streaming_ctrl_mercury.offset;
    ~ldv_3_callback_tuner_attach.base, ~ldv_3_callback_tuner_attach.offset := #funAddr~mxl111sf_attach_tuner.base, #funAddr~mxl111sf_attach_tuner.offset;
    ~ldv_4_callback_frontend_attach.base, ~ldv_4_callback_frontend_attach.offset := #funAddr~mxl111sf_frontend_attach_mercury_mh.base, #funAddr~mxl111sf_frontend_attach_mercury_mh.offset;
    ~ldv_4_callback_functionality.base, ~ldv_4_callback_functionality.offset := #funAddr~mxl111sf_i2c_func.base, #funAddr~mxl111sf_i2c_func.offset;
    ~ldv_4_callback_get_stream_config.base, ~ldv_4_callback_get_stream_config.offset := #funAddr~mxl111sf_get_stream_config_mercury_mh.base, #funAddr~mxl111sf_get_stream_config_mercury_mh.offset;
    ~ldv_4_callback_init.base, ~ldv_4_callback_init.offset := #funAddr~mxl111sf_init.base, #funAddr~mxl111sf_init.offset;
    ~ldv_4_callback_master_xfer.base, ~ldv_4_callback_master_xfer.offset := #funAddr~mxl111sf_i2c_xfer.base, #funAddr~mxl111sf_i2c_xfer.offset;
    ~ldv_4_callback_streaming_ctrl.base, ~ldv_4_callback_streaming_ctrl.offset := #funAddr~mxl111sf_streaming_ctrl_mercury_mh.base, #funAddr~mxl111sf_streaming_ctrl_mercury_mh.offset;
    ~ldv_4_callback_tuner_attach.base, ~ldv_4_callback_tuner_attach.offset := #funAddr~mxl111sf_attach_tuner.base, #funAddr~mxl111sf_attach_tuner.offset;
    ~ldv_5_callback_frontend_attach.base, ~ldv_5_callback_frontend_attach.offset := #funAddr~mxl111sf_frontend_attach_mh.base, #funAddr~mxl111sf_frontend_attach_mh.offset;
    ~ldv_5_callback_functionality.base, ~ldv_5_callback_functionality.offset := #funAddr~mxl111sf_i2c_func.base, #funAddr~mxl111sf_i2c_func.offset;
    ~ldv_5_callback_get_stream_config.base, ~ldv_5_callback_get_stream_config.offset := #funAddr~mxl111sf_get_stream_config_mh.base, #funAddr~mxl111sf_get_stream_config_mh.offset;
    ~ldv_5_callback_init.base, ~ldv_5_callback_init.offset := #funAddr~mxl111sf_init.base, #funAddr~mxl111sf_init.offset;
    ~ldv_5_callback_master_xfer.base, ~ldv_5_callback_master_xfer.offset := #funAddr~mxl111sf_i2c_xfer.base, #funAddr~mxl111sf_i2c_xfer.offset;
    ~ldv_5_callback_streaming_ctrl.base, ~ldv_5_callback_streaming_ctrl.offset := #funAddr~mxl111sf_streaming_ctrl_mercury_mh.base, #funAddr~mxl111sf_streaming_ctrl_mercury_mh.offset;
    ~ldv_5_callback_tuner_attach.base, ~ldv_5_callback_tuner_attach.offset := #funAddr~mxl111sf_attach_tuner.base, #funAddr~mxl111sf_attach_tuner.offset;
    ~ldv_6_callback_ant_hunt.base, ~ldv_6_callback_ant_hunt.offset := #funAddr~mxl111sf_ant_hunt.base, #funAddr~mxl111sf_ant_hunt.offset;
    ~ldv_6_callback_program_regs.base, ~ldv_6_callback_program_regs.offset := #funAddr~mxl111sf_ctrl_program_regs.base, #funAddr~mxl111sf_ctrl_program_regs.offset;
    ~ldv_6_callback_read_reg.base, ~ldv_6_callback_read_reg.offset := #funAddr~mxl111sf_read_reg.base, #funAddr~mxl111sf_read_reg.offset;
    ~ldv_6_callback_top_master_ctrl.base, ~ldv_6_callback_top_master_ctrl.offset := #funAddr~mxl1x1sf_top_master_ctrl.base, #funAddr~mxl1x1sf_top_master_ctrl.offset;
    ~ldv_6_callback_write_reg.base, ~ldv_6_callback_write_reg.offset := #funAddr~mxl111sf_write_reg.base, #funAddr~mxl111sf_write_reg.offset;
    ~LDV_MUTEXES_fe_lock_of_mxl111sf_state := 0;
    ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device := 0;
    ~LDV_MUTEXES_i_mutex_of_inode := 0;
    ~LDV_MUTEXES_lock := 0;
    ~LDV_MUTEXES_mutex_of_device := 0;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~dvb_usb_mxl111sf_debug, ~dvb_usb_mxl111sf_isoc, ~dvb_usb_mxl111sf_spi, ~dvb_usb_mxl111sf_rfswitch, ~#adapter_nr.base, ~#adapter_nr.offset, ~ldv_0_ldv_param_12_2_default, ~ldv_0_ldv_param_15_1_default, ~ldv_0_ldv_param_8_1_default.base, ~ldv_0_ldv_param_8_1_default.offset, ~ldv_11_ret_default, ~ldv_1_ldv_param_12_2_default, ~ldv_1_ldv_param_15_1_default, ~ldv_1_ldv_param_8_1_default.base, ~ldv_1_ldv_param_8_1_default.offset, ~ldv_2_ldv_param_12_2_default, ~ldv_2_ldv_param_15_1_default, ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset, ~ldv_3_ldv_param_12_2_default, ~ldv_3_ldv_param_15_1_default, ~ldv_3_ldv_param_8_1_default.base, ~ldv_3_ldv_param_8_1_default.offset, ~ldv_4_ldv_param_12_2_default, ~ldv_4_ldv_param_15_1_default, ~ldv_4_ldv_param_8_1_default.base, ~ldv_4_ldv_param_8_1_default.offset, ~ldv_5_ldv_param_12_2_default, ~ldv_5_ldv_param_15_1_default, ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset, ~ldv_6_ldv_param_11_1_default, ~ldv_6_ldv_param_14_1_default, ~ldv_6_ldv_param_14_2_default, ~ldv_6_ldv_param_8_1_default, ~ldv_6_ldv_param_8_2_default.base, ~ldv_6_ldv_param_8_2_default.offset, ~ldv_7_probe_retval_default, ~ldv_7_reset_flag_default, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_statevar_11, ~ldv_statevar_2, ~ldv_statevar_3, ~ldv_statevar_4, ~ldv_statevar_5, ~ldv_statevar_6, ~ldv_statevar_7, ~ldv_statevar_8, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset, ~#hauppauge_lg2160_config.base, ~#hauppauge_lg2160_config.offset, ~#hauppauge_lg2161_1019_config.base, ~#hauppauge_lg2161_1019_config.offset, ~#hauppauge_lg2161_1040_config.base, ~#hauppauge_lg2161_1040_config.offset, ~#hauppauge_lg2161_1019_ep6_config.base, ~#hauppauge_lg2161_1019_ep6_config.offset, ~#hauppauge_lg2161_1040_ep6_config.base, ~#hauppauge_lg2161_1040_ep6_config.offset, ~#mxl_demod_config.base, ~#mxl_demod_config.offset, ~#mxl_tuner_config.base, ~#mxl_tuner_config.offset, ~#mxl111sf_i2c_algo.base, ~#mxl111sf_i2c_algo.offset, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset, ~#__constr_expr_0.base, ~#__constr_expr_0.offset, ~#__constr_expr_1.base, ~#__constr_expr_1.offset, ~#__constr_expr_2.base, ~#__constr_expr_2.offset, ~#__constr_expr_3.base, ~#__constr_expr_3.offset, ~#__constr_expr_4.base, ~#__constr_expr_4.offset, ~#__constr_expr_5.base, ~#__constr_expr_5.offset, ~#__constr_expr_6.base, ~#__constr_expr_6.offset, ~#__constr_expr_7.base, ~#__constr_expr_7.offset, ~#__constr_expr_8.base, ~#__constr_expr_8.offset, ~#__constr_expr_9.base, ~#__constr_expr_9.offset, ~#__constr_expr_10.base, ~#__constr_expr_10.offset, ~#__constr_expr_11.base, ~#__constr_expr_11.offset, ~#__constr_expr_12.base, ~#__constr_expr_12.offset, ~#__constr_expr_13.base, ~#__constr_expr_13.offset, ~#__constr_expr_14.base, ~#__constr_expr_14.offset, ~#__constr_expr_15.base, ~#__constr_expr_15.offset, ~#__constr_expr_16.base, ~#__constr_expr_16.offset, ~#__constr_expr_17.base, ~#__constr_expr_17.offset, ~#__constr_expr_18.base, ~#__constr_expr_18.offset, ~#__constr_expr_19.base, ~#__constr_expr_19.offset, ~#__constr_expr_20.base, ~#__constr_expr_20.offset, ~#__constr_expr_21.base, ~#__constr_expr_21.offset, ~#__constr_expr_22.base, ~#__constr_expr_22.offset, ~#__constr_expr_23.base, ~#__constr_expr_23.offset, ~#__constr_expr_24.base, ~#__constr_expr_24.offset, ~#__constr_expr_25.base, ~#__constr_expr_25.offset, ~#__constr_expr_26.base, ~#__constr_expr_26.offset, ~#__constr_expr_27.base, ~#__constr_expr_27.offset, ~#__constr_expr_28.base, ~#__constr_expr_28.offset, ~#__constr_expr_29.base, ~#__constr_expr_29.offset, ~#__constr_expr_30.base, ~#__constr_expr_30.offset, ~#__constr_expr_31.base, ~#__constr_expr_31.offset, ~#__constr_expr_32.base, ~#__constr_expr_32.offset, ~#__constr_expr_33.base, ~#__constr_expr_33.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset, ~ldv_0_container_struct_dvb_frontend_ptr.base, ~ldv_0_container_struct_dvb_frontend_ptr.offset, ~ldv_0_container_struct_dvb_usb_adapter_ptr.base, ~ldv_0_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_0_container_struct_dvb_usb_device_ptr.base, ~ldv_0_container_struct_dvb_usb_device_ptr.offset, ~ldv_0_container_struct_i2c_adapter_ptr.base, ~ldv_0_container_struct_i2c_adapter_ptr.offset, ~ldv_0_container_struct_i2c_msg_ptr.base, ~ldv_0_container_struct_i2c_msg_ptr.offset, ~ldv_0_container_struct_usb_data_stream_properties_ptr.base, ~ldv_0_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_1_container_struct_dvb_frontend_ptr.base, ~ldv_1_container_struct_dvb_frontend_ptr.offset, ~ldv_1_container_struct_dvb_usb_adapter_ptr.base, ~ldv_1_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_1_container_struct_dvb_usb_device_ptr.base, ~ldv_1_container_struct_dvb_usb_device_ptr.offset, ~ldv_1_container_struct_i2c_adapter_ptr.base, ~ldv_1_container_struct_i2c_adapter_ptr.offset, ~ldv_1_container_struct_i2c_msg_ptr.base, ~ldv_1_container_struct_i2c_msg_ptr.offset, ~ldv_1_container_struct_usb_data_stream_properties_ptr.base, ~ldv_1_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_2_container_struct_dvb_frontend_ptr.base, ~ldv_2_container_struct_dvb_frontend_ptr.offset, ~ldv_2_container_struct_dvb_usb_adapter_ptr.base, ~ldv_2_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_2_container_struct_dvb_usb_device_ptr.base, ~ldv_2_container_struct_dvb_usb_device_ptr.offset, ~ldv_2_container_struct_i2c_adapter_ptr.base, ~ldv_2_container_struct_i2c_adapter_ptr.offset, ~ldv_2_container_struct_i2c_msg_ptr.base, ~ldv_2_container_struct_i2c_msg_ptr.offset, ~ldv_2_container_struct_usb_data_stream_properties_ptr.base, ~ldv_2_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_3_container_struct_dvb_frontend_ptr.base, ~ldv_3_container_struct_dvb_frontend_ptr.offset, ~ldv_3_container_struct_dvb_usb_adapter_ptr.base, ~ldv_3_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_3_container_struct_dvb_usb_device_ptr.base, ~ldv_3_container_struct_dvb_usb_device_ptr.offset, ~ldv_3_container_struct_i2c_adapter_ptr.base, ~ldv_3_container_struct_i2c_adapter_ptr.offset, ~ldv_3_container_struct_i2c_msg_ptr.base, ~ldv_3_container_struct_i2c_msg_ptr.offset, ~ldv_3_container_struct_usb_data_stream_properties_ptr.base, ~ldv_3_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_4_container_struct_dvb_frontend_ptr.base, ~ldv_4_container_struct_dvb_frontend_ptr.offset, ~ldv_4_container_struct_dvb_usb_adapter_ptr.base, ~ldv_4_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_4_container_struct_dvb_usb_device_ptr.base, ~ldv_4_container_struct_dvb_usb_device_ptr.offset, ~ldv_4_container_struct_i2c_adapter_ptr.base, ~ldv_4_container_struct_i2c_adapter_ptr.offset, ~ldv_4_container_struct_i2c_msg_ptr.base, ~ldv_4_container_struct_i2c_msg_ptr.offset, ~ldv_4_container_struct_usb_data_stream_properties_ptr.base, ~ldv_4_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_5_container_struct_dvb_frontend_ptr.base, ~ldv_5_container_struct_dvb_frontend_ptr.offset, ~ldv_5_container_struct_dvb_usb_adapter_ptr.base, ~ldv_5_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_5_container_struct_dvb_usb_device_ptr.base, ~ldv_5_container_struct_dvb_usb_device_ptr.offset, ~ldv_5_container_struct_i2c_adapter_ptr.base, ~ldv_5_container_struct_i2c_adapter_ptr.offset, ~ldv_5_container_struct_i2c_msg_ptr.base, ~ldv_5_container_struct_i2c_msg_ptr.offset, ~ldv_5_container_struct_usb_data_stream_properties_ptr.base, ~ldv_5_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_6_container_struct_dvb_frontend_ptr.base, ~ldv_6_container_struct_dvb_frontend_ptr.offset, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.base, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.offset, ~ldv_6_container_struct_mxl111sf_state_ptr.base, ~ldv_6_container_struct_mxl111sf_state_ptr.offset, ~ldv_7_container_usb_driver.base, ~ldv_7_container_usb_driver.offset, ~ldv_7_ldv_param_13_1_default.base, ~ldv_7_ldv_param_13_1_default.offset, ~ldv_7_ldv_param_8_1_default.base, ~ldv_7_ldv_param_8_1_default.offset, ~ldv_7_resource_usb_interface.base, ~ldv_7_resource_usb_interface.offset, ~ldv_7_usb_device_usb_device.base, ~ldv_7_usb_device_usb_device.offset, ~ldv_8_container_usb_driver.base, ~ldv_8_container_usb_driver.offset, ~ldv_0_callback_frontend_attach.base, ~ldv_0_callback_frontend_attach.offset, ~ldv_0_callback_functionality.base, ~ldv_0_callback_functionality.offset, ~ldv_0_callback_get_stream_config.base, ~ldv_0_callback_get_stream_config.offset, ~ldv_0_callback_init.base, ~ldv_0_callback_init.offset, ~ldv_0_callback_master_xfer.base, ~ldv_0_callback_master_xfer.offset, ~ldv_0_callback_streaming_ctrl.base, ~ldv_0_callback_streaming_ctrl.offset, ~ldv_0_callback_tuner_attach.base, ~ldv_0_callback_tuner_attach.offset, ~ldv_11_exit_mxl111sf_usb_driver_exit_default.base, ~ldv_11_exit_mxl111sf_usb_driver_exit_default.offset, ~ldv_11_init_mxl111sf_usb_driver_init_default.base, ~ldv_11_init_mxl111sf_usb_driver_init_default.offset, ~ldv_1_callback_frontend_attach.base, ~ldv_1_callback_frontend_attach.offset, ~ldv_1_callback_functionality.base, ~ldv_1_callback_functionality.offset, ~ldv_1_callback_get_stream_config.base, ~ldv_1_callback_get_stream_config.offset, ~ldv_1_callback_init.base, ~ldv_1_callback_init.offset, ~ldv_1_callback_master_xfer.base, ~ldv_1_callback_master_xfer.offset, ~ldv_1_callback_streaming_ctrl.base, ~ldv_1_callback_streaming_ctrl.offset, ~ldv_1_callback_tuner_attach.base, ~ldv_1_callback_tuner_attach.offset, ~ldv_2_callback_frontend_attach.base, ~ldv_2_callback_frontend_attach.offset, ~ldv_2_callback_functionality.base, ~ldv_2_callback_functionality.offset, ~ldv_2_callback_get_stream_config.base, ~ldv_2_callback_get_stream_config.offset, ~ldv_2_callback_init.base, ~ldv_2_callback_init.offset, ~ldv_2_callback_master_xfer.base, ~ldv_2_callback_master_xfer.offset, ~ldv_2_callback_streaming_ctrl.base, ~ldv_2_callback_streaming_ctrl.offset, ~ldv_2_callback_tuner_attach.base, ~ldv_2_callback_tuner_attach.offset, ~ldv_3_callback_frontend_attach.base, ~ldv_3_callback_frontend_attach.offset, ~ldv_3_callback_functionality.base, ~ldv_3_callback_functionality.offset, ~ldv_3_callback_get_stream_config.base, ~ldv_3_callback_get_stream_config.offset, ~ldv_3_callback_init.base, ~ldv_3_callback_init.offset, ~ldv_3_callback_master_xfer.base, ~ldv_3_callback_master_xfer.offset, ~ldv_3_callback_streaming_ctrl.base, ~ldv_3_callback_streaming_ctrl.offset, ~ldv_3_callback_tuner_attach.base, ~ldv_3_callback_tuner_attach.offset, ~ldv_4_callback_frontend_attach.base, ~ldv_4_callback_frontend_attach.offset, ~ldv_4_callback_functionality.base, ~ldv_4_callback_functionality.offset, ~ldv_4_callback_get_stream_config.base, ~ldv_4_callback_get_stream_config.offset, ~ldv_4_callback_init.base, ~ldv_4_callback_init.offset, ~ldv_4_callback_master_xfer.base, ~ldv_4_callback_master_xfer.offset, ~ldv_4_callback_streaming_ctrl.base, ~ldv_4_callback_streaming_ctrl.offset, ~ldv_4_callback_tuner_attach.base, ~ldv_4_callback_tuner_attach.offset, ~ldv_5_callback_frontend_attach.base, ~ldv_5_callback_frontend_attach.offset, ~ldv_5_callback_functionality.base, ~ldv_5_callback_functionality.offset, ~ldv_5_callback_get_stream_config.base, ~ldv_5_callback_get_stream_config.offset, ~ldv_5_callback_init.base, ~ldv_5_callback_init.offset, ~ldv_5_callback_master_xfer.base, ~ldv_5_callback_master_xfer.offset, ~ldv_5_callback_streaming_ctrl.base, ~ldv_5_callback_streaming_ctrl.offset, ~ldv_5_callback_tuner_attach.base, ~ldv_5_callback_tuner_attach.offset, ~ldv_6_callback_ant_hunt.base, ~ldv_6_callback_ant_hunt.offset, ~ldv_6_callback_program_regs.base, ~ldv_6_callback_program_regs.offset, ~ldv_6_callback_read_reg.base, ~ldv_6_callback_read_reg.offset, ~ldv_6_callback_top_master_ctrl.base, ~ldv_6_callback_top_master_ctrl.offset, ~ldv_6_callback_write_reg.base, ~ldv_6_callback_write_reg.offset, ~LDV_MUTEXES_fe_lock_of_mxl111sf_state, ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device, ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_mutex_of_device, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_mutex_lock_interruptible_or_killable_i2c_mutex_of_dvb_usb_device(#in~lock.base : int, #in~lock.offset : int) returns (#res : int){
    var #t~ret2516 : int;
    var ~lock.base : int, ~lock.offset : int;
    var ~tmp~2772 : int;

  loc9:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    havoc ~tmp~2772;
    call ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock((if ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device % 256 == 0 then 1 else 0));
    return;
}

procedure ldv_mutex_lock_interruptible_or_killable_i2c_mutex_of_dvb_usb_device(#in~lock.base : int, #in~lock.offset : int) returns (#res : int);
modifies ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device;

implementation ldv_dummy_resourceless_instance_callback_0_12(#in~arg0.base : int, #in~arg0.offset : int, #in~arg1.base : int, #in~arg1.offset : int, #in~arg2.base : int, #in~arg2.offset : int, #in~arg3 : int) returns (){
    var #t~ret1244 : int;
    var ~arg0.base : int, ~arg0.offset : int;
    var ~arg1.base : int, ~arg1.offset : int;
    var ~arg2.base : int, ~arg2.offset : int;
    var ~arg3 : int;

  loc10:
    ~arg0.base, ~arg0.offset := #in~arg0.base, #in~arg0.offset;
    ~arg1.base, ~arg1.offset := #in~arg1.base, #in~arg1.offset;
    ~arg2.base, ~arg2.offset := #in~arg2.base, #in~arg2.offset;
    ~arg3 := #in~arg3;
    call #t~ret1244 := mxl111sf_i2c_xfer(~arg1.base, ~arg1.offset, ~arg2.base, ~arg2.offset, ~arg3);
    return;
}

procedure ldv_dummy_resourceless_instance_callback_0_12(#in~arg0.base : int, #in~arg0.offset : int, #in~arg1.base : int, #in~arg1.offset : int, #in~arg2.base : int, #in~arg2.offset : int, #in~arg3 : int) returns ();
modifies #valid, #length, ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ldv_switch_0() returns (#res : int){
    var #t~ret1316 : int;
    var ~tmp~1545 : int;

  loc11:
    havoc ~tmp~1545;
    call #t~ret1316 := ldv_undef_int();
    assume -2147483648 <= #t~ret1316 && #t~ret1316 <= 2147483647;
    ~tmp~1545 := #t~ret1316;
    havoc #t~ret1316;
    assume ~tmp~1545 == 0;
    #res := 1;
    assume true;
    return;
}

procedure ldv_switch_0() returns (#res : int);
modifies ;

implementation ldv_dev_get_drvdata(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~mem2505.base : int, #t~mem2505.offset : int;
    var #t~short2506 : bool;
    var #t~mem2507.base : int, #t~mem2507.offset : int;
    var #t~mem2508.base : int, #t~mem2508.offset : int;
    var ~dev.base : int, ~dev.offset : int;

  loc12:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    #t~short2506 := (~dev.base + ~dev.offset) % 18446744073709551616 != 0;
    assume !#t~short2506;
    assume !#t~short2506;
    havoc #t~mem2505.base, #t~mem2505.offset;
    havoc #t~short2506;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure ldv_dev_get_drvdata(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation ULTIMATE.start() returns (){
    var #t~ret2537 : int;

  loc13:
    call ULTIMATE.init();
    call #t~ret2537 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~dvb_usb_mxl111sf_debug, ~dvb_usb_mxl111sf_isoc, ~dvb_usb_mxl111sf_spi, ~dvb_usb_mxl111sf_rfswitch, ~#adapter_nr.base, ~#adapter_nr.offset, ~ldv_0_ldv_param_12_2_default, ~ldv_0_ldv_param_15_1_default, ~ldv_0_ldv_param_8_1_default.base, ~ldv_0_ldv_param_8_1_default.offset, ~ldv_11_ret_default, ~ldv_1_ldv_param_12_2_default, ~ldv_1_ldv_param_15_1_default, ~ldv_1_ldv_param_8_1_default.base, ~ldv_1_ldv_param_8_1_default.offset, ~ldv_2_ldv_param_12_2_default, ~ldv_2_ldv_param_15_1_default, ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset, ~ldv_3_ldv_param_12_2_default, ~ldv_3_ldv_param_15_1_default, ~ldv_3_ldv_param_8_1_default.base, ~ldv_3_ldv_param_8_1_default.offset, ~ldv_4_ldv_param_12_2_default, ~ldv_4_ldv_param_15_1_default, ~ldv_4_ldv_param_8_1_default.base, ~ldv_4_ldv_param_8_1_default.offset, ~ldv_5_ldv_param_12_2_default, ~ldv_5_ldv_param_15_1_default, ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset, ~ldv_6_ldv_param_11_1_default, ~ldv_6_ldv_param_14_1_default, ~ldv_6_ldv_param_14_2_default, ~ldv_6_ldv_param_8_1_default, ~ldv_6_ldv_param_8_2_default.base, ~ldv_6_ldv_param_8_2_default.offset, ~ldv_7_probe_retval_default, ~ldv_7_reset_flag_default, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_statevar_11, ~ldv_statevar_2, ~ldv_statevar_3, ~ldv_statevar_4, ~ldv_statevar_5, ~ldv_statevar_6, ~ldv_statevar_7, ~ldv_statevar_8, ~#hauppauge_lgdt3305_config.base, ~#hauppauge_lgdt3305_config.offset, ~#hauppauge_lg2160_config.base, ~#hauppauge_lg2160_config.offset, ~#hauppauge_lg2161_1019_config.base, ~#hauppauge_lg2161_1019_config.offset, ~#hauppauge_lg2161_1040_config.base, ~#hauppauge_lg2161_1040_config.offset, ~#hauppauge_lg2161_1019_ep6_config.base, ~#hauppauge_lg2161_1019_ep6_config.offset, ~#hauppauge_lg2161_1040_ep6_config.base, ~#hauppauge_lg2161_1040_ep6_config.offset, ~#mxl_demod_config.base, ~#mxl_demod_config.offset, ~#mxl_tuner_config.base, ~#mxl_tuner_config.offset, ~#mxl111sf_i2c_algo.base, ~#mxl111sf_i2c_algo.offset, ~#mxl111sf_props_dvbt.base, ~#mxl111sf_props_dvbt.offset, ~#mxl111sf_props_atsc.base, ~#mxl111sf_props_atsc.offset, ~#mxl111sf_props_mh.base, ~#mxl111sf_props_mh.offset, ~#mxl111sf_props_atsc_mh.base, ~#mxl111sf_props_atsc_mh.offset, ~#mxl111sf_props_mercury.base, ~#mxl111sf_props_mercury.offset, ~#mxl111sf_props_mercury_mh.base, ~#mxl111sf_props_mercury_mh.offset, ~#__constr_expr_0.base, ~#__constr_expr_0.offset, ~#__constr_expr_1.base, ~#__constr_expr_1.offset, ~#__constr_expr_2.base, ~#__constr_expr_2.offset, ~#__constr_expr_3.base, ~#__constr_expr_3.offset, ~#__constr_expr_4.base, ~#__constr_expr_4.offset, ~#__constr_expr_5.base, ~#__constr_expr_5.offset, ~#__constr_expr_6.base, ~#__constr_expr_6.offset, ~#__constr_expr_7.base, ~#__constr_expr_7.offset, ~#__constr_expr_8.base, ~#__constr_expr_8.offset, ~#__constr_expr_9.base, ~#__constr_expr_9.offset, ~#__constr_expr_10.base, ~#__constr_expr_10.offset, ~#__constr_expr_11.base, ~#__constr_expr_11.offset, ~#__constr_expr_12.base, ~#__constr_expr_12.offset, ~#__constr_expr_13.base, ~#__constr_expr_13.offset, ~#__constr_expr_14.base, ~#__constr_expr_14.offset, ~#__constr_expr_15.base, ~#__constr_expr_15.offset, ~#__constr_expr_16.base, ~#__constr_expr_16.offset, ~#__constr_expr_17.base, ~#__constr_expr_17.offset, ~#__constr_expr_18.base, ~#__constr_expr_18.offset, ~#__constr_expr_19.base, ~#__constr_expr_19.offset, ~#__constr_expr_20.base, ~#__constr_expr_20.offset, ~#__constr_expr_21.base, ~#__constr_expr_21.offset, ~#__constr_expr_22.base, ~#__constr_expr_22.offset, ~#__constr_expr_23.base, ~#__constr_expr_23.offset, ~#__constr_expr_24.base, ~#__constr_expr_24.offset, ~#__constr_expr_25.base, ~#__constr_expr_25.offset, ~#__constr_expr_26.base, ~#__constr_expr_26.offset, ~#__constr_expr_27.base, ~#__constr_expr_27.offset, ~#__constr_expr_28.base, ~#__constr_expr_28.offset, ~#__constr_expr_29.base, ~#__constr_expr_29.offset, ~#__constr_expr_30.base, ~#__constr_expr_30.offset, ~#__constr_expr_31.base, ~#__constr_expr_31.offset, ~#__constr_expr_32.base, ~#__constr_expr_32.offset, ~#__constr_expr_33.base, ~#__constr_expr_33.offset, ~#mxl111sf_id_table.base, ~#mxl111sf_id_table.offset, ~#mxl111sf_usb_driver.base, ~#mxl111sf_usb_driver.offset, ~ldv_0_container_struct_dvb_frontend_ptr.base, ~ldv_0_container_struct_dvb_frontend_ptr.offset, ~ldv_0_container_struct_dvb_usb_adapter_ptr.base, ~ldv_0_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_0_container_struct_dvb_usb_device_ptr.base, ~ldv_0_container_struct_dvb_usb_device_ptr.offset, ~ldv_0_container_struct_i2c_adapter_ptr.base, ~ldv_0_container_struct_i2c_adapter_ptr.offset, ~ldv_0_container_struct_i2c_msg_ptr.base, ~ldv_0_container_struct_i2c_msg_ptr.offset, ~ldv_0_container_struct_usb_data_stream_properties_ptr.base, ~ldv_0_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_1_container_struct_dvb_frontend_ptr.base, ~ldv_1_container_struct_dvb_frontend_ptr.offset, ~ldv_1_container_struct_dvb_usb_adapter_ptr.base, ~ldv_1_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_1_container_struct_dvb_usb_device_ptr.base, ~ldv_1_container_struct_dvb_usb_device_ptr.offset, ~ldv_1_container_struct_i2c_adapter_ptr.base, ~ldv_1_container_struct_i2c_adapter_ptr.offset, ~ldv_1_container_struct_i2c_msg_ptr.base, ~ldv_1_container_struct_i2c_msg_ptr.offset, ~ldv_1_container_struct_usb_data_stream_properties_ptr.base, ~ldv_1_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_2_container_struct_dvb_frontend_ptr.base, ~ldv_2_container_struct_dvb_frontend_ptr.offset, ~ldv_2_container_struct_dvb_usb_adapter_ptr.base, ~ldv_2_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_2_container_struct_dvb_usb_device_ptr.base, ~ldv_2_container_struct_dvb_usb_device_ptr.offset, ~ldv_2_container_struct_i2c_adapter_ptr.base, ~ldv_2_container_struct_i2c_adapter_ptr.offset, ~ldv_2_container_struct_i2c_msg_ptr.base, ~ldv_2_container_struct_i2c_msg_ptr.offset, ~ldv_2_container_struct_usb_data_stream_properties_ptr.base, ~ldv_2_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_3_container_struct_dvb_frontend_ptr.base, ~ldv_3_container_struct_dvb_frontend_ptr.offset, ~ldv_3_container_struct_dvb_usb_adapter_ptr.base, ~ldv_3_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_3_container_struct_dvb_usb_device_ptr.base, ~ldv_3_container_struct_dvb_usb_device_ptr.offset, ~ldv_3_container_struct_i2c_adapter_ptr.base, ~ldv_3_container_struct_i2c_adapter_ptr.offset, ~ldv_3_container_struct_i2c_msg_ptr.base, ~ldv_3_container_struct_i2c_msg_ptr.offset, ~ldv_3_container_struct_usb_data_stream_properties_ptr.base, ~ldv_3_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_4_container_struct_dvb_frontend_ptr.base, ~ldv_4_container_struct_dvb_frontend_ptr.offset, ~ldv_4_container_struct_dvb_usb_adapter_ptr.base, ~ldv_4_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_4_container_struct_dvb_usb_device_ptr.base, ~ldv_4_container_struct_dvb_usb_device_ptr.offset, ~ldv_4_container_struct_i2c_adapter_ptr.base, ~ldv_4_container_struct_i2c_adapter_ptr.offset, ~ldv_4_container_struct_i2c_msg_ptr.base, ~ldv_4_container_struct_i2c_msg_ptr.offset, ~ldv_4_container_struct_usb_data_stream_properties_ptr.base, ~ldv_4_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_5_container_struct_dvb_frontend_ptr.base, ~ldv_5_container_struct_dvb_frontend_ptr.offset, ~ldv_5_container_struct_dvb_usb_adapter_ptr.base, ~ldv_5_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_5_container_struct_dvb_usb_device_ptr.base, ~ldv_5_container_struct_dvb_usb_device_ptr.offset, ~ldv_5_container_struct_i2c_adapter_ptr.base, ~ldv_5_container_struct_i2c_adapter_ptr.offset, ~ldv_5_container_struct_i2c_msg_ptr.base, ~ldv_5_container_struct_i2c_msg_ptr.offset, ~ldv_5_container_struct_usb_data_stream_properties_ptr.base, ~ldv_5_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_6_container_struct_dvb_frontend_ptr.base, ~ldv_6_container_struct_dvb_frontend_ptr.offset, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.base, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.offset, ~ldv_6_container_struct_mxl111sf_state_ptr.base, ~ldv_6_container_struct_mxl111sf_state_ptr.offset, ~ldv_7_container_usb_driver.base, ~ldv_7_container_usb_driver.offset, ~ldv_7_ldv_param_13_1_default.base, ~ldv_7_ldv_param_13_1_default.offset, ~ldv_7_ldv_param_8_1_default.base, ~ldv_7_ldv_param_8_1_default.offset, ~ldv_7_resource_usb_interface.base, ~ldv_7_resource_usb_interface.offset, ~ldv_7_usb_device_usb_device.base, ~ldv_7_usb_device_usb_device.offset, ~ldv_8_container_usb_driver.base, ~ldv_8_container_usb_driver.offset, ~ldv_0_callback_frontend_attach.base, ~ldv_0_callback_frontend_attach.offset, ~ldv_0_callback_functionality.base, ~ldv_0_callback_functionality.offset, ~ldv_0_callback_get_stream_config.base, ~ldv_0_callback_get_stream_config.offset, ~ldv_0_callback_init.base, ~ldv_0_callback_init.offset, ~ldv_0_callback_master_xfer.base, ~ldv_0_callback_master_xfer.offset, ~ldv_0_callback_streaming_ctrl.base, ~ldv_0_callback_streaming_ctrl.offset, ~ldv_0_callback_tuner_attach.base, ~ldv_0_callback_tuner_attach.offset, ~ldv_11_exit_mxl111sf_usb_driver_exit_default.base, ~ldv_11_exit_mxl111sf_usb_driver_exit_default.offset, ~ldv_11_init_mxl111sf_usb_driver_init_default.base, ~ldv_11_init_mxl111sf_usb_driver_init_default.offset, ~ldv_1_callback_frontend_attach.base, ~ldv_1_callback_frontend_attach.offset, ~ldv_1_callback_functionality.base, ~ldv_1_callback_functionality.offset, ~ldv_1_callback_get_stream_config.base, ~ldv_1_callback_get_stream_config.offset, ~ldv_1_callback_init.base, ~ldv_1_callback_init.offset, ~ldv_1_callback_master_xfer.base, ~ldv_1_callback_master_xfer.offset, ~ldv_1_callback_streaming_ctrl.base, ~ldv_1_callback_streaming_ctrl.offset, ~ldv_1_callback_tuner_attach.base, ~ldv_1_callback_tuner_attach.offset, ~ldv_2_callback_frontend_attach.base, ~ldv_2_callback_frontend_attach.offset, ~ldv_2_callback_functionality.base, ~ldv_2_callback_functionality.offset, ~ldv_2_callback_get_stream_config.base, ~ldv_2_callback_get_stream_config.offset, ~ldv_2_callback_init.base, ~ldv_2_callback_init.offset, ~ldv_2_callback_master_xfer.base, ~ldv_2_callback_master_xfer.offset, ~ldv_2_callback_streaming_ctrl.base, ~ldv_2_callback_streaming_ctrl.offset, ~ldv_2_callback_tuner_attach.base, ~ldv_2_callback_tuner_attach.offset, ~ldv_3_callback_frontend_attach.base, ~ldv_3_callback_frontend_attach.offset, ~ldv_3_callback_functionality.base, ~ldv_3_callback_functionality.offset, ~ldv_3_callback_get_stream_config.base, ~ldv_3_callback_get_stream_config.offset, ~ldv_3_callback_init.base, ~ldv_3_callback_init.offset, ~ldv_3_callback_master_xfer.base, ~ldv_3_callback_master_xfer.offset, ~ldv_3_callback_streaming_ctrl.base, ~ldv_3_callback_streaming_ctrl.offset, ~ldv_3_callback_tuner_attach.base, ~ldv_3_callback_tuner_attach.offset, ~ldv_4_callback_frontend_attach.base, ~ldv_4_callback_frontend_attach.offset, ~ldv_4_callback_functionality.base, ~ldv_4_callback_functionality.offset, ~ldv_4_callback_get_stream_config.base, ~ldv_4_callback_get_stream_config.offset, ~ldv_4_callback_init.base, ~ldv_4_callback_init.offset, ~ldv_4_callback_master_xfer.base, ~ldv_4_callback_master_xfer.offset, ~ldv_4_callback_streaming_ctrl.base, ~ldv_4_callback_streaming_ctrl.offset, ~ldv_4_callback_tuner_attach.base, ~ldv_4_callback_tuner_attach.offset, ~ldv_5_callback_frontend_attach.base, ~ldv_5_callback_frontend_attach.offset, ~ldv_5_callback_functionality.base, ~ldv_5_callback_functionality.offset, ~ldv_5_callback_get_stream_config.base, ~ldv_5_callback_get_stream_config.offset, ~ldv_5_callback_init.base, ~ldv_5_callback_init.offset, ~ldv_5_callback_master_xfer.base, ~ldv_5_callback_master_xfer.offset, ~ldv_5_callback_streaming_ctrl.base, ~ldv_5_callback_streaming_ctrl.offset, ~ldv_5_callback_tuner_attach.base, ~ldv_5_callback_tuner_attach.offset, ~ldv_6_callback_ant_hunt.base, ~ldv_6_callback_ant_hunt.offset, ~ldv_6_callback_program_regs.base, ~ldv_6_callback_program_regs.offset, ~ldv_6_callback_read_reg.base, ~ldv_6_callback_read_reg.offset, ~ldv_6_callback_top_master_ctrl.base, ~ldv_6_callback_top_master_ctrl.offset, ~ldv_6_callback_write_reg.base, ~ldv_6_callback_write_reg.offset, ~LDV_MUTEXES_fe_lock_of_mxl111sf_state, ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device, ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_mutex_of_device, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_statevar_11, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_statevar_2, ~ldv_statevar_3, ~ldv_statevar_4, ~ldv_statevar_5, ~ldv_statevar_6, ~ldv_7_reset_flag_default, ~ldv_statevar_7, ~ldv_statevar_8;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~LDV_MUTEXES_fe_lock_of_mxl111sf_state, ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device, ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_mutex_of_device, ~ldv_0_container_struct_dvb_frontend_ptr.base, ~ldv_0_container_struct_dvb_frontend_ptr.offset, ~ldv_0_container_struct_dvb_usb_adapter_ptr.base, ~ldv_0_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_0_container_struct_dvb_usb_device_ptr.base, ~ldv_0_container_struct_dvb_usb_device_ptr.offset, ~ldv_0_container_struct_i2c_adapter_ptr.base, ~ldv_0_container_struct_i2c_adapter_ptr.offset, ~ldv_0_container_struct_i2c_msg_ptr.base, ~ldv_0_container_struct_i2c_msg_ptr.offset, ~ldv_0_container_struct_usb_data_stream_properties_ptr.base, ~ldv_0_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_0_ldv_param_8_1_default.base, ~ldv_0_ldv_param_8_1_default.offset, ~ldv_1_container_struct_dvb_frontend_ptr.base, ~ldv_1_container_struct_dvb_frontend_ptr.offset, ~ldv_1_container_struct_dvb_usb_adapter_ptr.base, ~ldv_1_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_1_container_struct_dvb_usb_device_ptr.base, ~ldv_1_container_struct_dvb_usb_device_ptr.offset, ~ldv_1_container_struct_i2c_adapter_ptr.base, ~ldv_1_container_struct_i2c_adapter_ptr.offset, ~ldv_1_container_struct_i2c_msg_ptr.base, ~ldv_1_container_struct_i2c_msg_ptr.offset, ~ldv_1_container_struct_usb_data_stream_properties_ptr.base, ~ldv_1_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_1_ldv_param_8_1_default.base, ~ldv_1_ldv_param_8_1_default.offset, ~ldv_2_container_struct_dvb_frontend_ptr.base, ~ldv_2_container_struct_dvb_frontend_ptr.offset, ~ldv_2_container_struct_dvb_usb_adapter_ptr.base, ~ldv_2_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_2_container_struct_dvb_usb_device_ptr.base, ~ldv_2_container_struct_dvb_usb_device_ptr.offset, ~ldv_2_container_struct_i2c_adapter_ptr.base, ~ldv_2_container_struct_i2c_adapter_ptr.offset, ~ldv_2_container_struct_i2c_msg_ptr.base, ~ldv_2_container_struct_i2c_msg_ptr.offset, ~ldv_2_container_struct_usb_data_stream_properties_ptr.base, ~ldv_2_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset, ~ldv_3_container_struct_dvb_frontend_ptr.base, ~ldv_3_container_struct_dvb_frontend_ptr.offset, ~ldv_3_container_struct_dvb_usb_adapter_ptr.base, ~ldv_3_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_3_container_struct_dvb_usb_device_ptr.base, ~ldv_3_container_struct_dvb_usb_device_ptr.offset, ~ldv_3_container_struct_i2c_adapter_ptr.base, ~ldv_3_container_struct_i2c_adapter_ptr.offset, ~ldv_3_container_struct_i2c_msg_ptr.base, ~ldv_3_container_struct_i2c_msg_ptr.offset, ~ldv_3_container_struct_usb_data_stream_properties_ptr.base, ~ldv_3_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_3_ldv_param_8_1_default.base, ~ldv_3_ldv_param_8_1_default.offset, ~ldv_4_container_struct_dvb_frontend_ptr.base, ~ldv_4_container_struct_dvb_frontend_ptr.offset, ~ldv_4_container_struct_dvb_usb_adapter_ptr.base, ~ldv_4_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_4_container_struct_dvb_usb_device_ptr.base, ~ldv_4_container_struct_dvb_usb_device_ptr.offset, ~ldv_4_container_struct_i2c_adapter_ptr.base, ~ldv_4_container_struct_i2c_adapter_ptr.offset, ~ldv_4_container_struct_i2c_msg_ptr.base, ~ldv_4_container_struct_i2c_msg_ptr.offset, ~ldv_4_container_struct_usb_data_stream_properties_ptr.base, ~ldv_4_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_4_ldv_param_8_1_default.base, ~ldv_4_ldv_param_8_1_default.offset, ~ldv_5_container_struct_dvb_frontend_ptr.base, ~ldv_5_container_struct_dvb_frontend_ptr.offset, ~ldv_5_container_struct_dvb_usb_adapter_ptr.base, ~ldv_5_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_5_container_struct_dvb_usb_device_ptr.base, ~ldv_5_container_struct_dvb_usb_device_ptr.offset, ~ldv_5_container_struct_i2c_adapter_ptr.base, ~ldv_5_container_struct_i2c_adapter_ptr.offset, ~ldv_5_container_struct_i2c_msg_ptr.base, ~ldv_5_container_struct_i2c_msg_ptr.offset, ~ldv_5_container_struct_usb_data_stream_properties_ptr.base, ~ldv_5_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset, ~ldv_6_container_struct_dvb_frontend_ptr.base, ~ldv_6_container_struct_dvb_frontend_ptr.offset, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.base, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.offset, ~ldv_6_container_struct_mxl111sf_state_ptr.base, ~ldv_6_container_struct_mxl111sf_state_ptr.offset, ~ldv_6_ldv_param_8_2_default.base, ~ldv_6_ldv_param_8_2_default.offset, ~ldv_7_ldv_param_13_1_default.base, ~ldv_7_ldv_param_13_1_default.offset, ~ldv_7_ldv_param_8_1_default.base, ~ldv_7_ldv_param_8_1_default.offset, ~ldv_7_resource_usb_interface.base, ~ldv_7_resource_usb_interface.offset, ~ldv_7_usb_device_usb_device.base, ~ldv_7_usb_device_usb_device.offset, ~ldv_7_reset_flag_default, ~ldv_statevar_7, ~ldv_7_container_usb_driver.base, ~ldv_7_container_usb_driver.offset, ~ldv_statevar_8, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_statevar_2, ~ldv_statevar_3, ~ldv_statevar_4, ~ldv_statevar_5, ~ldv_statevar_6, ~ldv_8_container_usb_driver.base, ~ldv_8_container_usb_driver.offset, ~ldv_statevar_11, ~ldv_11_ret_default, ~ldv_7_probe_retval_default;

implementation mxl111sf_i2c_xfer(#in~adap.base : int, #in~adap.offset : int, #in~msg.base : int, #in~msg.offset : int, #in~num : int) returns (#res : int){
    var #t~ret1951.base : int, #t~ret1951.offset : int;
    var #t~mem1952.base : int, #t~mem1952.offset : int;
    var #t~mem1953 : int;
    var #t~ret1954 : int;
    var #t~ret1955 : int;
    var #t~ret1956 : int;
    var #t~nondet1957.base : int, #t~nondet1957.offset : int;
    var #t~ret1958 : int;
    var #t~nondet1959.base : int, #t~nondet1959.offset : int;
    var #t~ret1960 : int;
    var #t~ite1961 : int;
    var ~adap.base : int, ~adap.offset : int;
    var ~msg.base : int, ~msg.offset : int;
    var ~num : int;
    var ~d~2328.base : int, ~d~2328.offset : int;
    var ~tmp~2328.base : int, ~tmp~2328.offset : int;
    var ~state~2328.base : int, ~state~2328.offset : int;
    var ~hwi2c~2328 : int;
    var ~i~2328 : int;
    var ~ret~2328 : int;
    var ~tmp___0~2328 : int;
    var ~tmp___1~2328 : int;
    var ~tmp___2~2328 : int;
    var ~__ret~2328 : int;

  loc14:
    ~adap.base, ~adap.offset := #in~adap.base, #in~adap.offset;
    ~msg.base, ~msg.offset := #in~msg.base, #in~msg.offset;
    ~num := #in~num;
    havoc ~d~2328.base, ~d~2328.offset;
    havoc ~tmp~2328.base, ~tmp~2328.offset;
    havoc ~state~2328.base, ~state~2328.offset;
    havoc ~hwi2c~2328;
    havoc ~i~2328;
    havoc ~ret~2328;
    havoc ~tmp___0~2328;
    havoc ~tmp___1~2328;
    havoc ~tmp___2~2328;
    havoc ~__ret~2328;
    call #t~ret1951.base, #t~ret1951.offset := i2c_get_adapdata(~adap.base, ~adap.offset);
    ~tmp~2328.base, ~tmp~2328.offset := #t~ret1951.base, #t~ret1951.offset;
    havoc #t~ret1951.base, #t~ret1951.offset;
    ~d~2328.base, ~d~2328.offset := ~tmp~2328.base, ~tmp~2328.offset;
    call #t~mem1952.base, #t~mem1952.offset := read~$Pointer$(~d~2328.base, ~d~2328.offset + 7132, 8);
    ~state~2328.base, ~state~2328.offset := #t~mem1952.base, #t~mem1952.offset;
    havoc #t~mem1952.base, #t~mem1952.offset;
    call #t~mem1953 := read~int(~state~2328.base, ~state~2328.offset + 15, 1);
    ~hwi2c~2328 := (if #t~mem1953 % 256 % 4294967296 > 1 then 1 else 0);
    havoc #t~mem1953;
    call #t~ret1954 := ldv_mutex_lock_interruptible_21(~d~2328.base, ~d~2328.offset + 234);
    return;
}

procedure mxl111sf_i2c_xfer(#in~adap.base : int, #in~adap.offset : int, #in~msg.base : int, #in~msg.offset : int, #in~num : int) returns (#res : int);
modifies #valid, #length, ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ldv_initialize() returns (){
  loc15:
    ~LDV_MUTEXES_fe_lock_of_mxl111sf_state := 0;
    ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device := 0;
    ~LDV_MUTEXES_i_mutex_of_inode := 0;
    ~LDV_MUTEXES_lock := 0;
    ~LDV_MUTEXES_mutex_of_device := 0;
    assume true;
    return;
}

procedure ldv_initialize() returns ();
modifies ~LDV_MUTEXES_fe_lock_of_mxl111sf_state, ~LDV_MUTEXES_i2c_mutex_of_dvb_usb_device, ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_mutex_of_device;

implementation ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(#in~expr : int) returns (){
    var ~expr : int;

  loc16:
    ~expr := #in~expr;
    assume ~expr == 0;
    assume !false;
    goto loc17;
  loc17:
    assert false;
}

procedure ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(#in~expr : int) returns ();
modifies ;

implementation i2c_get_adapdata(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~ret1572.base : int, #t~ret1572.offset : int;
    var ~dev.base : int, ~dev.offset : int;
    var ~tmp~1912.base : int, ~tmp~1912.offset : int;

  loc18:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    havoc ~tmp~1912.base, ~tmp~1912.offset;
    call #t~ret1572.base, #t~ret1572.offset := ldv_dev_get_drvdata_16(~dev.base, ~dev.offset + 156);
    ~tmp~1912.base, ~tmp~1912.offset := #t~ret1572.base, #t~ret1572.offset;
    havoc #t~ret1572.base, #t~ret1572.offset;
    #res.base, #res.offset := ~tmp~1912.base, ~tmp~1912.offset;
    assume true;
    return;
}

procedure i2c_get_adapdata(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation ldv_allocate_external_0() returns (){
    var #t~ret1193.base : int, #t~ret1193.offset : int;
    var #t~ret1194.base : int, #t~ret1194.offset : int;
    var #t~ret1195.base : int, #t~ret1195.offset : int;
    var #t~ret1196.base : int, #t~ret1196.offset : int;
    var #t~ret1197.base : int, #t~ret1197.offset : int;
    var #t~ret1198.base : int, #t~ret1198.offset : int;
    var #t~ret1199.base : int, #t~ret1199.offset : int;
    var #t~ret1200.base : int, #t~ret1200.offset : int;
    var #t~ret1201.base : int, #t~ret1201.offset : int;
    var #t~ret1202.base : int, #t~ret1202.offset : int;
    var #t~ret1203.base : int, #t~ret1203.offset : int;
    var #t~ret1204.base : int, #t~ret1204.offset : int;
    var #t~ret1205.base : int, #t~ret1205.offset : int;
    var #t~ret1206.base : int, #t~ret1206.offset : int;
    var #t~ret1207.base : int, #t~ret1207.offset : int;
    var #t~ret1208.base : int, #t~ret1208.offset : int;
    var #t~ret1209.base : int, #t~ret1209.offset : int;
    var #t~ret1210.base : int, #t~ret1210.offset : int;
    var #t~ret1211.base : int, #t~ret1211.offset : int;
    var #t~ret1212.base : int, #t~ret1212.offset : int;
    var #t~ret1213.base : int, #t~ret1213.offset : int;
    var #t~ret1214.base : int, #t~ret1214.offset : int;
    var #t~ret1215.base : int, #t~ret1215.offset : int;
    var #t~ret1216.base : int, #t~ret1216.offset : int;
    var #t~ret1217.base : int, #t~ret1217.offset : int;
    var #t~ret1218.base : int, #t~ret1218.offset : int;
    var #t~ret1219.base : int, #t~ret1219.offset : int;
    var #t~ret1220.base : int, #t~ret1220.offset : int;
    var #t~ret1221.base : int, #t~ret1221.offset : int;
    var #t~ret1222.base : int, #t~ret1222.offset : int;
    var #t~ret1223.base : int, #t~ret1223.offset : int;
    var #t~ret1224.base : int, #t~ret1224.offset : int;
    var #t~ret1225.base : int, #t~ret1225.offset : int;
    var #t~ret1226.base : int, #t~ret1226.offset : int;
    var #t~ret1227.base : int, #t~ret1227.offset : int;
    var #t~ret1228.base : int, #t~ret1228.offset : int;
    var #t~ret1229.base : int, #t~ret1229.offset : int;
    var #t~ret1230.base : int, #t~ret1230.offset : int;
    var #t~ret1231.base : int, #t~ret1231.offset : int;
    var #t~ret1232.base : int, #t~ret1232.offset : int;
    var #t~ret1233.base : int, #t~ret1233.offset : int;
    var #t~ret1234.base : int, #t~ret1234.offset : int;
    var #t~ret1235.base : int, #t~ret1235.offset : int;
    var #t~ret1236.base : int, #t~ret1236.offset : int;
    var #t~ret1237.base : int, #t~ret1237.offset : int;
    var #t~ret1238.base : int, #t~ret1238.offset : int;
    var #t~ret1239.base : int, #t~ret1239.offset : int;
    var #t~ret1240.base : int, #t~ret1240.offset : int;
    var #t~ret1241.base : int, #t~ret1241.offset : int;
    var #t~ret1242.base : int, #t~ret1242.offset : int;
    var ~tmp~1072.base : int, ~tmp~1072.offset : int;
    var ~tmp___0~1072.base : int, ~tmp___0~1072.offset : int;
    var ~tmp___1~1072.base : int, ~tmp___1~1072.offset : int;
    var ~tmp___2~1072.base : int, ~tmp___2~1072.offset : int;
    var ~tmp___3~1072.base : int, ~tmp___3~1072.offset : int;
    var ~tmp___4~1072.base : int, ~tmp___4~1072.offset : int;
    var ~tmp___5~1072.base : int, ~tmp___5~1072.offset : int;
    var ~tmp___6~1072.base : int, ~tmp___6~1072.offset : int;
    var ~tmp___7~1072.base : int, ~tmp___7~1072.offset : int;
    var ~tmp___8~1072.base : int, ~tmp___8~1072.offset : int;
    var ~tmp___9~1072.base : int, ~tmp___9~1072.offset : int;
    var ~tmp___10~1072.base : int, ~tmp___10~1072.offset : int;
    var ~tmp___11~1072.base : int, ~tmp___11~1072.offset : int;
    var ~tmp___12~1072.base : int, ~tmp___12~1072.offset : int;
    var ~tmp___13~1072.base : int, ~tmp___13~1072.offset : int;
    var ~tmp___14~1072.base : int, ~tmp___14~1072.offset : int;
    var ~tmp___15~1072.base : int, ~tmp___15~1072.offset : int;
    var ~tmp___16~1072.base : int, ~tmp___16~1072.offset : int;
    var ~tmp___17~1072.base : int, ~tmp___17~1072.offset : int;
    var ~tmp___18~1072.base : int, ~tmp___18~1072.offset : int;
    var ~tmp___19~1072.base : int, ~tmp___19~1072.offset : int;
    var ~tmp___20~1072.base : int, ~tmp___20~1072.offset : int;
    var ~tmp___21~1072.base : int, ~tmp___21~1072.offset : int;
    var ~tmp___22~1072.base : int, ~tmp___22~1072.offset : int;
    var ~tmp___23~1072.base : int, ~tmp___23~1072.offset : int;
    var ~tmp___24~1072.base : int, ~tmp___24~1072.offset : int;
    var ~tmp___25~1072.base : int, ~tmp___25~1072.offset : int;
    var ~tmp___26~1072.base : int, ~tmp___26~1072.offset : int;
    var ~tmp___27~1072.base : int, ~tmp___27~1072.offset : int;
    var ~tmp___28~1072.base : int, ~tmp___28~1072.offset : int;
    var ~tmp___29~1072.base : int, ~tmp___29~1072.offset : int;
    var ~tmp___30~1072.base : int, ~tmp___30~1072.offset : int;
    var ~tmp___31~1072.base : int, ~tmp___31~1072.offset : int;
    var ~tmp___32~1072.base : int, ~tmp___32~1072.offset : int;
    var ~tmp___33~1072.base : int, ~tmp___33~1072.offset : int;
    var ~tmp___34~1072.base : int, ~tmp___34~1072.offset : int;
    var ~tmp___35~1072.base : int, ~tmp___35~1072.offset : int;
    var ~tmp___36~1072.base : int, ~tmp___36~1072.offset : int;
    var ~tmp___37~1072.base : int, ~tmp___37~1072.offset : int;
    var ~tmp___38~1072.base : int, ~tmp___38~1072.offset : int;
    var ~tmp___39~1072.base : int, ~tmp___39~1072.offset : int;
    var ~tmp___40~1072.base : int, ~tmp___40~1072.offset : int;
    var ~tmp___41~1072.base : int, ~tmp___41~1072.offset : int;
    var ~tmp___42~1072.base : int, ~tmp___42~1072.offset : int;
    var ~tmp___43~1072.base : int, ~tmp___43~1072.offset : int;
    var ~tmp___44~1072.base : int, ~tmp___44~1072.offset : int;
    var ~tmp___45~1072.base : int, ~tmp___45~1072.offset : int;
    var ~tmp___46~1072.base : int, ~tmp___46~1072.offset : int;
    var ~tmp___47~1072.base : int, ~tmp___47~1072.offset : int;
    var ~tmp___48~1072.base : int, ~tmp___48~1072.offset : int;

  loc19:
    havoc ~tmp~1072.base, ~tmp~1072.offset;
    havoc ~tmp___0~1072.base, ~tmp___0~1072.offset;
    havoc ~tmp___1~1072.base, ~tmp___1~1072.offset;
    havoc ~tmp___2~1072.base, ~tmp___2~1072.offset;
    havoc ~tmp___3~1072.base, ~tmp___3~1072.offset;
    havoc ~tmp___4~1072.base, ~tmp___4~1072.offset;
    havoc ~tmp___5~1072.base, ~tmp___5~1072.offset;
    havoc ~tmp___6~1072.base, ~tmp___6~1072.offset;
    havoc ~tmp___7~1072.base, ~tmp___7~1072.offset;
    havoc ~tmp___8~1072.base, ~tmp___8~1072.offset;
    havoc ~tmp___9~1072.base, ~tmp___9~1072.offset;
    havoc ~tmp___10~1072.base, ~tmp___10~1072.offset;
    havoc ~tmp___11~1072.base, ~tmp___11~1072.offset;
    havoc ~tmp___12~1072.base, ~tmp___12~1072.offset;
    havoc ~tmp___13~1072.base, ~tmp___13~1072.offset;
    havoc ~tmp___14~1072.base, ~tmp___14~1072.offset;
    havoc ~tmp___15~1072.base, ~tmp___15~1072.offset;
    havoc ~tmp___16~1072.base, ~tmp___16~1072.offset;
    havoc ~tmp___17~1072.base, ~tmp___17~1072.offset;
    havoc ~tmp___18~1072.base, ~tmp___18~1072.offset;
    havoc ~tmp___19~1072.base, ~tmp___19~1072.offset;
    havoc ~tmp___20~1072.base, ~tmp___20~1072.offset;
    havoc ~tmp___21~1072.base, ~tmp___21~1072.offset;
    havoc ~tmp___22~1072.base, ~tmp___22~1072.offset;
    havoc ~tmp___23~1072.base, ~tmp___23~1072.offset;
    havoc ~tmp___24~1072.base, ~tmp___24~1072.offset;
    havoc ~tmp___25~1072.base, ~tmp___25~1072.offset;
    havoc ~tmp___26~1072.base, ~tmp___26~1072.offset;
    havoc ~tmp___27~1072.base, ~tmp___27~1072.offset;
    havoc ~tmp___28~1072.base, ~tmp___28~1072.offset;
    havoc ~tmp___29~1072.base, ~tmp___29~1072.offset;
    havoc ~tmp___30~1072.base, ~tmp___30~1072.offset;
    havoc ~tmp___31~1072.base, ~tmp___31~1072.offset;
    havoc ~tmp___32~1072.base, ~tmp___32~1072.offset;
    havoc ~tmp___33~1072.base, ~tmp___33~1072.offset;
    havoc ~tmp___34~1072.base, ~tmp___34~1072.offset;
    havoc ~tmp___35~1072.base, ~tmp___35~1072.offset;
    havoc ~tmp___36~1072.base, ~tmp___36~1072.offset;
    havoc ~tmp___37~1072.base, ~tmp___37~1072.offset;
    havoc ~tmp___38~1072.base, ~tmp___38~1072.offset;
    havoc ~tmp___39~1072.base, ~tmp___39~1072.offset;
    havoc ~tmp___40~1072.base, ~tmp___40~1072.offset;
    havoc ~tmp___41~1072.base, ~tmp___41~1072.offset;
    havoc ~tmp___42~1072.base, ~tmp___42~1072.offset;
    havoc ~tmp___43~1072.base, ~tmp___43~1072.offset;
    havoc ~tmp___44~1072.base, ~tmp___44~1072.offset;
    havoc ~tmp___45~1072.base, ~tmp___45~1072.offset;
    havoc ~tmp___46~1072.base, ~tmp___46~1072.offset;
    havoc ~tmp___47~1072.base, ~tmp___47~1072.offset;
    havoc ~tmp___48~1072.base, ~tmp___48~1072.offset;
    call #t~ret1193.base, #t~ret1193.offset := external_allocated_data();
    ~tmp~1072.base, ~tmp~1072.offset := #t~ret1193.base, #t~ret1193.offset;
    havoc #t~ret1193.base, #t~ret1193.offset;
    ~ldv_0_container_struct_dvb_frontend_ptr.base, ~ldv_0_container_struct_dvb_frontend_ptr.offset := ~tmp~1072.base, ~tmp~1072.offset;
    call #t~ret1194.base, #t~ret1194.offset := external_allocated_data();
    ~tmp___0~1072.base, ~tmp___0~1072.offset := #t~ret1194.base, #t~ret1194.offset;
    havoc #t~ret1194.base, #t~ret1194.offset;
    ~ldv_0_container_struct_dvb_usb_adapter_ptr.base, ~ldv_0_container_struct_dvb_usb_adapter_ptr.offset := ~tmp___0~1072.base, ~tmp___0~1072.offset;
    call #t~ret1195.base, #t~ret1195.offset := external_allocated_data();
    ~tmp___1~1072.base, ~tmp___1~1072.offset := #t~ret1195.base, #t~ret1195.offset;
    havoc #t~ret1195.base, #t~ret1195.offset;
    ~ldv_0_container_struct_dvb_usb_device_ptr.base, ~ldv_0_container_struct_dvb_usb_device_ptr.offset := ~tmp___1~1072.base, ~tmp___1~1072.offset;
    call #t~ret1196.base, #t~ret1196.offset := external_allocated_data();
    ~tmp___2~1072.base, ~tmp___2~1072.offset := #t~ret1196.base, #t~ret1196.offset;
    havoc #t~ret1196.base, #t~ret1196.offset;
    ~ldv_0_container_struct_i2c_adapter_ptr.base, ~ldv_0_container_struct_i2c_adapter_ptr.offset := ~tmp___2~1072.base, ~tmp___2~1072.offset;
    call #t~ret1197.base, #t~ret1197.offset := external_allocated_data();
    ~tmp___3~1072.base, ~tmp___3~1072.offset := #t~ret1197.base, #t~ret1197.offset;
    havoc #t~ret1197.base, #t~ret1197.offset;
    ~ldv_0_container_struct_i2c_msg_ptr.base, ~ldv_0_container_struct_i2c_msg_ptr.offset := ~tmp___3~1072.base, ~tmp___3~1072.offset;
    call #t~ret1198.base, #t~ret1198.offset := external_allocated_data();
    ~tmp___4~1072.base, ~tmp___4~1072.offset := #t~ret1198.base, #t~ret1198.offset;
    havoc #t~ret1198.base, #t~ret1198.offset;
    ~ldv_0_container_struct_usb_data_stream_properties_ptr.base, ~ldv_0_container_struct_usb_data_stream_properties_ptr.offset := ~tmp___4~1072.base, ~tmp___4~1072.offset;
    call #t~ret1199.base, #t~ret1199.offset := external_allocated_data();
    ~tmp___5~1072.base, ~tmp___5~1072.offset := #t~ret1199.base, #t~ret1199.offset;
    havoc #t~ret1199.base, #t~ret1199.offset;
    ~ldv_0_ldv_param_8_1_default.base, ~ldv_0_ldv_param_8_1_default.offset := ~tmp___5~1072.base, ~tmp___5~1072.offset;
    call #t~ret1200.base, #t~ret1200.offset := external_allocated_data();
    ~tmp___6~1072.base, ~tmp___6~1072.offset := #t~ret1200.base, #t~ret1200.offset;
    havoc #t~ret1200.base, #t~ret1200.offset;
    ~ldv_1_container_struct_dvb_frontend_ptr.base, ~ldv_1_container_struct_dvb_frontend_ptr.offset := ~tmp___6~1072.base, ~tmp___6~1072.offset;
    call #t~ret1201.base, #t~ret1201.offset := external_allocated_data();
    ~tmp___7~1072.base, ~tmp___7~1072.offset := #t~ret1201.base, #t~ret1201.offset;
    havoc #t~ret1201.base, #t~ret1201.offset;
    ~ldv_1_container_struct_dvb_usb_adapter_ptr.base, ~ldv_1_container_struct_dvb_usb_adapter_ptr.offset := ~tmp___7~1072.base, ~tmp___7~1072.offset;
    call #t~ret1202.base, #t~ret1202.offset := external_allocated_data();
    ~tmp___8~1072.base, ~tmp___8~1072.offset := #t~ret1202.base, #t~ret1202.offset;
    havoc #t~ret1202.base, #t~ret1202.offset;
    ~ldv_1_container_struct_dvb_usb_device_ptr.base, ~ldv_1_container_struct_dvb_usb_device_ptr.offset := ~tmp___8~1072.base, ~tmp___8~1072.offset;
    call #t~ret1203.base, #t~ret1203.offset := external_allocated_data();
    ~tmp___9~1072.base, ~tmp___9~1072.offset := #t~ret1203.base, #t~ret1203.offset;
    havoc #t~ret1203.base, #t~ret1203.offset;
    ~ldv_1_container_struct_i2c_adapter_ptr.base, ~ldv_1_container_struct_i2c_adapter_ptr.offset := ~tmp___9~1072.base, ~tmp___9~1072.offset;
    call #t~ret1204.base, #t~ret1204.offset := external_allocated_data();
    ~tmp___10~1072.base, ~tmp___10~1072.offset := #t~ret1204.base, #t~ret1204.offset;
    havoc #t~ret1204.base, #t~ret1204.offset;
    ~ldv_1_container_struct_i2c_msg_ptr.base, ~ldv_1_container_struct_i2c_msg_ptr.offset := ~tmp___10~1072.base, ~tmp___10~1072.offset;
    call #t~ret1205.base, #t~ret1205.offset := external_allocated_data();
    ~tmp___11~1072.base, ~tmp___11~1072.offset := #t~ret1205.base, #t~ret1205.offset;
    havoc #t~ret1205.base, #t~ret1205.offset;
    ~ldv_1_container_struct_usb_data_stream_properties_ptr.base, ~ldv_1_container_struct_usb_data_stream_properties_ptr.offset := ~tmp___11~1072.base, ~tmp___11~1072.offset;
    call #t~ret1206.base, #t~ret1206.offset := external_allocated_data();
    ~tmp___12~1072.base, ~tmp___12~1072.offset := #t~ret1206.base, #t~ret1206.offset;
    havoc #t~ret1206.base, #t~ret1206.offset;
    ~ldv_1_ldv_param_8_1_default.base, ~ldv_1_ldv_param_8_1_default.offset := ~tmp___12~1072.base, ~tmp___12~1072.offset;
    call #t~ret1207.base, #t~ret1207.offset := external_allocated_data();
    ~tmp___13~1072.base, ~tmp___13~1072.offset := #t~ret1207.base, #t~ret1207.offset;
    havoc #t~ret1207.base, #t~ret1207.offset;
    ~ldv_2_container_struct_dvb_frontend_ptr.base, ~ldv_2_container_struct_dvb_frontend_ptr.offset := ~tmp___13~1072.base, ~tmp___13~1072.offset;
    call #t~ret1208.base, #t~ret1208.offset := external_allocated_data();
    ~tmp___14~1072.base, ~tmp___14~1072.offset := #t~ret1208.base, #t~ret1208.offset;
    havoc #t~ret1208.base, #t~ret1208.offset;
    ~ldv_2_container_struct_dvb_usb_adapter_ptr.base, ~ldv_2_container_struct_dvb_usb_adapter_ptr.offset := ~tmp___14~1072.base, ~tmp___14~1072.offset;
    call #t~ret1209.base, #t~ret1209.offset := external_allocated_data();
    ~tmp___15~1072.base, ~tmp___15~1072.offset := #t~ret1209.base, #t~ret1209.offset;
    havoc #t~ret1209.base, #t~ret1209.offset;
    ~ldv_2_container_struct_dvb_usb_device_ptr.base, ~ldv_2_container_struct_dvb_usb_device_ptr.offset := ~tmp___15~1072.base, ~tmp___15~1072.offset;
    call #t~ret1210.base, #t~ret1210.offset := external_allocated_data();
    ~tmp___16~1072.base, ~tmp___16~1072.offset := #t~ret1210.base, #t~ret1210.offset;
    havoc #t~ret1210.base, #t~ret1210.offset;
    ~ldv_2_container_struct_i2c_adapter_ptr.base, ~ldv_2_container_struct_i2c_adapter_ptr.offset := ~tmp___16~1072.base, ~tmp___16~1072.offset;
    call #t~ret1211.base, #t~ret1211.offset := external_allocated_data();
    ~tmp___17~1072.base, ~tmp___17~1072.offset := #t~ret1211.base, #t~ret1211.offset;
    havoc #t~ret1211.base, #t~ret1211.offset;
    ~ldv_2_container_struct_i2c_msg_ptr.base, ~ldv_2_container_struct_i2c_msg_ptr.offset := ~tmp___17~1072.base, ~tmp___17~1072.offset;
    call #t~ret1212.base, #t~ret1212.offset := external_allocated_data();
    ~tmp___18~1072.base, ~tmp___18~1072.offset := #t~ret1212.base, #t~ret1212.offset;
    havoc #t~ret1212.base, #t~ret1212.offset;
    ~ldv_2_container_struct_usb_data_stream_properties_ptr.base, ~ldv_2_container_struct_usb_data_stream_properties_ptr.offset := ~tmp___18~1072.base, ~tmp___18~1072.offset;
    call #t~ret1213.base, #t~ret1213.offset := external_allocated_data();
    ~tmp___19~1072.base, ~tmp___19~1072.offset := #t~ret1213.base, #t~ret1213.offset;
    havoc #t~ret1213.base, #t~ret1213.offset;
    ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset := ~tmp___19~1072.base, ~tmp___19~1072.offset;
    call #t~ret1214.base, #t~ret1214.offset := external_allocated_data();
    ~tmp___20~1072.base, ~tmp___20~1072.offset := #t~ret1214.base, #t~ret1214.offset;
    havoc #t~ret1214.base, #t~ret1214.offset;
    ~ldv_3_container_struct_dvb_frontend_ptr.base, ~ldv_3_container_struct_dvb_frontend_ptr.offset := ~tmp___20~1072.base, ~tmp___20~1072.offset;
    call #t~ret1215.base, #t~ret1215.offset := external_allocated_data();
    ~tmp___21~1072.base, ~tmp___21~1072.offset := #t~ret1215.base, #t~ret1215.offset;
    havoc #t~ret1215.base, #t~ret1215.offset;
    ~ldv_3_container_struct_dvb_usb_adapter_ptr.base, ~ldv_3_container_struct_dvb_usb_adapter_ptr.offset := ~tmp___21~1072.base, ~tmp___21~1072.offset;
    call #t~ret1216.base, #t~ret1216.offset := external_allocated_data();
    ~tmp___22~1072.base, ~tmp___22~1072.offset := #t~ret1216.base, #t~ret1216.offset;
    havoc #t~ret1216.base, #t~ret1216.offset;
    ~ldv_3_container_struct_dvb_usb_device_ptr.base, ~ldv_3_container_struct_dvb_usb_device_ptr.offset := ~tmp___22~1072.base, ~tmp___22~1072.offset;
    call #t~ret1217.base, #t~ret1217.offset := external_allocated_data();
    ~tmp___23~1072.base, ~tmp___23~1072.offset := #t~ret1217.base, #t~ret1217.offset;
    havoc #t~ret1217.base, #t~ret1217.offset;
    ~ldv_3_container_struct_i2c_adapter_ptr.base, ~ldv_3_container_struct_i2c_adapter_ptr.offset := ~tmp___23~1072.base, ~tmp___23~1072.offset;
    call #t~ret1218.base, #t~ret1218.offset := external_allocated_data();
    ~tmp___24~1072.base, ~tmp___24~1072.offset := #t~ret1218.base, #t~ret1218.offset;
    havoc #t~ret1218.base, #t~ret1218.offset;
    ~ldv_3_container_struct_i2c_msg_ptr.base, ~ldv_3_container_struct_i2c_msg_ptr.offset := ~tmp___24~1072.base, ~tmp___24~1072.offset;
    call #t~ret1219.base, #t~ret1219.offset := external_allocated_data();
    ~tmp___25~1072.base, ~tmp___25~1072.offset := #t~ret1219.base, #t~ret1219.offset;
    havoc #t~ret1219.base, #t~ret1219.offset;
    ~ldv_3_container_struct_usb_data_stream_properties_ptr.base, ~ldv_3_container_struct_usb_data_stream_properties_ptr.offset := ~tmp___25~1072.base, ~tmp___25~1072.offset;
    call #t~ret1220.base, #t~ret1220.offset := external_allocated_data();
    ~tmp___26~1072.base, ~tmp___26~1072.offset := #t~ret1220.base, #t~ret1220.offset;
    havoc #t~ret1220.base, #t~ret1220.offset;
    ~ldv_3_ldv_param_8_1_default.base, ~ldv_3_ldv_param_8_1_default.offset := ~tmp___26~1072.base, ~tmp___26~1072.offset;
    call #t~ret1221.base, #t~ret1221.offset := external_allocated_data();
    ~tmp___27~1072.base, ~tmp___27~1072.offset := #t~ret1221.base, #t~ret1221.offset;
    havoc #t~ret1221.base, #t~ret1221.offset;
    ~ldv_4_container_struct_dvb_frontend_ptr.base, ~ldv_4_container_struct_dvb_frontend_ptr.offset := ~tmp___27~1072.base, ~tmp___27~1072.offset;
    call #t~ret1222.base, #t~ret1222.offset := external_allocated_data();
    ~tmp___28~1072.base, ~tmp___28~1072.offset := #t~ret1222.base, #t~ret1222.offset;
    havoc #t~ret1222.base, #t~ret1222.offset;
    ~ldv_4_container_struct_dvb_usb_adapter_ptr.base, ~ldv_4_container_struct_dvb_usb_adapter_ptr.offset := ~tmp___28~1072.base, ~tmp___28~1072.offset;
    call #t~ret1223.base, #t~ret1223.offset := external_allocated_data();
    ~tmp___29~1072.base, ~tmp___29~1072.offset := #t~ret1223.base, #t~ret1223.offset;
    havoc #t~ret1223.base, #t~ret1223.offset;
    ~ldv_4_container_struct_dvb_usb_device_ptr.base, ~ldv_4_container_struct_dvb_usb_device_ptr.offset := ~tmp___29~1072.base, ~tmp___29~1072.offset;
    call #t~ret1224.base, #t~ret1224.offset := external_allocated_data();
    ~tmp___30~1072.base, ~tmp___30~1072.offset := #t~ret1224.base, #t~ret1224.offset;
    havoc #t~ret1224.base, #t~ret1224.offset;
    ~ldv_4_container_struct_i2c_adapter_ptr.base, ~ldv_4_container_struct_i2c_adapter_ptr.offset := ~tmp___30~1072.base, ~tmp___30~1072.offset;
    call #t~ret1225.base, #t~ret1225.offset := external_allocated_data();
    ~tmp___31~1072.base, ~tmp___31~1072.offset := #t~ret1225.base, #t~ret1225.offset;
    havoc #t~ret1225.base, #t~ret1225.offset;
    ~ldv_4_container_struct_i2c_msg_ptr.base, ~ldv_4_container_struct_i2c_msg_ptr.offset := ~tmp___31~1072.base, ~tmp___31~1072.offset;
    call #t~ret1226.base, #t~ret1226.offset := external_allocated_data();
    ~tmp___32~1072.base, ~tmp___32~1072.offset := #t~ret1226.base, #t~ret1226.offset;
    havoc #t~ret1226.base, #t~ret1226.offset;
    ~ldv_4_container_struct_usb_data_stream_properties_ptr.base, ~ldv_4_container_struct_usb_data_stream_properties_ptr.offset := ~tmp___32~1072.base, ~tmp___32~1072.offset;
    call #t~ret1227.base, #t~ret1227.offset := external_allocated_data();
    ~tmp___33~1072.base, ~tmp___33~1072.offset := #t~ret1227.base, #t~ret1227.offset;
    havoc #t~ret1227.base, #t~ret1227.offset;
    ~ldv_4_ldv_param_8_1_default.base, ~ldv_4_ldv_param_8_1_default.offset := ~tmp___33~1072.base, ~tmp___33~1072.offset;
    call #t~ret1228.base, #t~ret1228.offset := external_allocated_data();
    ~tmp___34~1072.base, ~tmp___34~1072.offset := #t~ret1228.base, #t~ret1228.offset;
    havoc #t~ret1228.base, #t~ret1228.offset;
    ~ldv_5_container_struct_dvb_frontend_ptr.base, ~ldv_5_container_struct_dvb_frontend_ptr.offset := ~tmp___34~1072.base, ~tmp___34~1072.offset;
    call #t~ret1229.base, #t~ret1229.offset := external_allocated_data();
    ~tmp___35~1072.base, ~tmp___35~1072.offset := #t~ret1229.base, #t~ret1229.offset;
    havoc #t~ret1229.base, #t~ret1229.offset;
    ~ldv_5_container_struct_dvb_usb_adapter_ptr.base, ~ldv_5_container_struct_dvb_usb_adapter_ptr.offset := ~tmp___35~1072.base, ~tmp___35~1072.offset;
    call #t~ret1230.base, #t~ret1230.offset := external_allocated_data();
    ~tmp___36~1072.base, ~tmp___36~1072.offset := #t~ret1230.base, #t~ret1230.offset;
    havoc #t~ret1230.base, #t~ret1230.offset;
    ~ldv_5_container_struct_dvb_usb_device_ptr.base, ~ldv_5_container_struct_dvb_usb_device_ptr.offset := ~tmp___36~1072.base, ~tmp___36~1072.offset;
    call #t~ret1231.base, #t~ret1231.offset := external_allocated_data();
    ~tmp___37~1072.base, ~tmp___37~1072.offset := #t~ret1231.base, #t~ret1231.offset;
    havoc #t~ret1231.base, #t~ret1231.offset;
    ~ldv_5_container_struct_i2c_adapter_ptr.base, ~ldv_5_container_struct_i2c_adapter_ptr.offset := ~tmp___37~1072.base, ~tmp___37~1072.offset;
    call #t~ret1232.base, #t~ret1232.offset := external_allocated_data();
    ~tmp___38~1072.base, ~tmp___38~1072.offset := #t~ret1232.base, #t~ret1232.offset;
    havoc #t~ret1232.base, #t~ret1232.offset;
    ~ldv_5_container_struct_i2c_msg_ptr.base, ~ldv_5_container_struct_i2c_msg_ptr.offset := ~tmp___38~1072.base, ~tmp___38~1072.offset;
    call #t~ret1233.base, #t~ret1233.offset := external_allocated_data();
    ~tmp___39~1072.base, ~tmp___39~1072.offset := #t~ret1233.base, #t~ret1233.offset;
    havoc #t~ret1233.base, #t~ret1233.offset;
    ~ldv_5_container_struct_usb_data_stream_properties_ptr.base, ~ldv_5_container_struct_usb_data_stream_properties_ptr.offset := ~tmp___39~1072.base, ~tmp___39~1072.offset;
    call #t~ret1234.base, #t~ret1234.offset := external_allocated_data();
    ~tmp___40~1072.base, ~tmp___40~1072.offset := #t~ret1234.base, #t~ret1234.offset;
    havoc #t~ret1234.base, #t~ret1234.offset;
    ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset := ~tmp___40~1072.base, ~tmp___40~1072.offset;
    call #t~ret1235.base, #t~ret1235.offset := external_allocated_data();
    ~tmp___41~1072.base, ~tmp___41~1072.offset := #t~ret1235.base, #t~ret1235.offset;
    havoc #t~ret1235.base, #t~ret1235.offset;
    ~ldv_6_container_struct_dvb_frontend_ptr.base, ~ldv_6_container_struct_dvb_frontend_ptr.offset := ~tmp___41~1072.base, ~tmp___41~1072.offset;
    call #t~ret1236.base, #t~ret1236.offset := external_allocated_data();
    ~tmp___42~1072.base, ~tmp___42~1072.offset := #t~ret1236.base, #t~ret1236.offset;
    havoc #t~ret1236.base, #t~ret1236.offset;
    ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.base, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.offset := ~tmp___42~1072.base, ~tmp___42~1072.offset;
    call #t~ret1237.base, #t~ret1237.offset := external_allocated_data();
    ~tmp___43~1072.base, ~tmp___43~1072.offset := #t~ret1237.base, #t~ret1237.offset;
    havoc #t~ret1237.base, #t~ret1237.offset;
    ~ldv_6_container_struct_mxl111sf_state_ptr.base, ~ldv_6_container_struct_mxl111sf_state_ptr.offset := ~tmp___43~1072.base, ~tmp___43~1072.offset;
    call #t~ret1238.base, #t~ret1238.offset := external_allocated_data();
    ~tmp___44~1072.base, ~tmp___44~1072.offset := #t~ret1238.base, #t~ret1238.offset;
    havoc #t~ret1238.base, #t~ret1238.offset;
    ~ldv_6_ldv_param_8_2_default.base, ~ldv_6_ldv_param_8_2_default.offset := ~tmp___44~1072.base, ~tmp___44~1072.offset;
    call #t~ret1239.base, #t~ret1239.offset := external_allocated_data();
    ~tmp___45~1072.base, ~tmp___45~1072.offset := #t~ret1239.base, #t~ret1239.offset;
    havoc #t~ret1239.base, #t~ret1239.offset;
    ~ldv_7_ldv_param_13_1_default.base, ~ldv_7_ldv_param_13_1_default.offset := ~tmp___45~1072.base, ~tmp___45~1072.offset;
    call #t~ret1240.base, #t~ret1240.offset := external_allocated_data();
    ~tmp___46~1072.base, ~tmp___46~1072.offset := #t~ret1240.base, #t~ret1240.offset;
    havoc #t~ret1240.base, #t~ret1240.offset;
    ~ldv_7_ldv_param_8_1_default.base, ~ldv_7_ldv_param_8_1_default.offset := ~tmp___46~1072.base, ~tmp___46~1072.offset;
    call #t~ret1241.base, #t~ret1241.offset := external_allocated_data();
    ~tmp___47~1072.base, ~tmp___47~1072.offset := #t~ret1241.base, #t~ret1241.offset;
    havoc #t~ret1241.base, #t~ret1241.offset;
    ~ldv_7_resource_usb_interface.base, ~ldv_7_resource_usb_interface.offset := ~tmp___47~1072.base, ~tmp___47~1072.offset;
    call #t~ret1242.base, #t~ret1242.offset := external_allocated_data();
    ~tmp___48~1072.base, ~tmp___48~1072.offset := #t~ret1242.base, #t~ret1242.offset;
    havoc #t~ret1242.base, #t~ret1242.offset;
    ~ldv_7_usb_device_usb_device.base, ~ldv_7_usb_device_usb_device.offset := ~tmp___48~1072.base, ~tmp___48~1072.offset;
    assume true;
    return;
}

procedure ldv_allocate_external_0() returns ();
modifies ~ldv_0_container_struct_dvb_frontend_ptr.base, ~ldv_0_container_struct_dvb_frontend_ptr.offset, ~ldv_0_container_struct_dvb_usb_adapter_ptr.base, ~ldv_0_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_0_container_struct_dvb_usb_device_ptr.base, ~ldv_0_container_struct_dvb_usb_device_ptr.offset, ~ldv_0_container_struct_i2c_adapter_ptr.base, ~ldv_0_container_struct_i2c_adapter_ptr.offset, ~ldv_0_container_struct_i2c_msg_ptr.base, ~ldv_0_container_struct_i2c_msg_ptr.offset, ~ldv_0_container_struct_usb_data_stream_properties_ptr.base, ~ldv_0_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_0_ldv_param_8_1_default.base, ~ldv_0_ldv_param_8_1_default.offset, ~ldv_1_container_struct_dvb_frontend_ptr.base, ~ldv_1_container_struct_dvb_frontend_ptr.offset, ~ldv_1_container_struct_dvb_usb_adapter_ptr.base, ~ldv_1_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_1_container_struct_dvb_usb_device_ptr.base, ~ldv_1_container_struct_dvb_usb_device_ptr.offset, ~ldv_1_container_struct_i2c_adapter_ptr.base, ~ldv_1_container_struct_i2c_adapter_ptr.offset, ~ldv_1_container_struct_i2c_msg_ptr.base, ~ldv_1_container_struct_i2c_msg_ptr.offset, ~ldv_1_container_struct_usb_data_stream_properties_ptr.base, ~ldv_1_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_1_ldv_param_8_1_default.base, ~ldv_1_ldv_param_8_1_default.offset, ~ldv_2_container_struct_dvb_frontend_ptr.base, ~ldv_2_container_struct_dvb_frontend_ptr.offset, ~ldv_2_container_struct_dvb_usb_adapter_ptr.base, ~ldv_2_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_2_container_struct_dvb_usb_device_ptr.base, ~ldv_2_container_struct_dvb_usb_device_ptr.offset, ~ldv_2_container_struct_i2c_adapter_ptr.base, ~ldv_2_container_struct_i2c_adapter_ptr.offset, ~ldv_2_container_struct_i2c_msg_ptr.base, ~ldv_2_container_struct_i2c_msg_ptr.offset, ~ldv_2_container_struct_usb_data_stream_properties_ptr.base, ~ldv_2_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_2_ldv_param_8_1_default.base, ~ldv_2_ldv_param_8_1_default.offset, ~ldv_3_container_struct_dvb_frontend_ptr.base, ~ldv_3_container_struct_dvb_frontend_ptr.offset, ~ldv_3_container_struct_dvb_usb_adapter_ptr.base, ~ldv_3_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_3_container_struct_dvb_usb_device_ptr.base, ~ldv_3_container_struct_dvb_usb_device_ptr.offset, ~ldv_3_container_struct_i2c_adapter_ptr.base, ~ldv_3_container_struct_i2c_adapter_ptr.offset, ~ldv_3_container_struct_i2c_msg_ptr.base, ~ldv_3_container_struct_i2c_msg_ptr.offset, ~ldv_3_container_struct_usb_data_stream_properties_ptr.base, ~ldv_3_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_3_ldv_param_8_1_default.base, ~ldv_3_ldv_param_8_1_default.offset, ~ldv_4_container_struct_dvb_frontend_ptr.base, ~ldv_4_container_struct_dvb_frontend_ptr.offset, ~ldv_4_container_struct_dvb_usb_adapter_ptr.base, ~ldv_4_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_4_container_struct_dvb_usb_device_ptr.base, ~ldv_4_container_struct_dvb_usb_device_ptr.offset, ~ldv_4_container_struct_i2c_adapter_ptr.base, ~ldv_4_container_struct_i2c_adapter_ptr.offset, ~ldv_4_container_struct_i2c_msg_ptr.base, ~ldv_4_container_struct_i2c_msg_ptr.offset, ~ldv_4_container_struct_usb_data_stream_properties_ptr.base, ~ldv_4_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_4_ldv_param_8_1_default.base, ~ldv_4_ldv_param_8_1_default.offset, ~ldv_5_container_struct_dvb_frontend_ptr.base, ~ldv_5_container_struct_dvb_frontend_ptr.offset, ~ldv_5_container_struct_dvb_usb_adapter_ptr.base, ~ldv_5_container_struct_dvb_usb_adapter_ptr.offset, ~ldv_5_container_struct_dvb_usb_device_ptr.base, ~ldv_5_container_struct_dvb_usb_device_ptr.offset, ~ldv_5_container_struct_i2c_adapter_ptr.base, ~ldv_5_container_struct_i2c_adapter_ptr.offset, ~ldv_5_container_struct_i2c_msg_ptr.base, ~ldv_5_container_struct_i2c_msg_ptr.offset, ~ldv_5_container_struct_usb_data_stream_properties_ptr.base, ~ldv_5_container_struct_usb_data_stream_properties_ptr.offset, ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset, ~ldv_6_container_struct_dvb_frontend_ptr.base, ~ldv_6_container_struct_dvb_frontend_ptr.offset, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.base, ~ldv_6_container_struct_mxl111sf_reg_ctrl_info_ptr.offset, ~ldv_6_container_struct_mxl111sf_state_ptr.base, ~ldv_6_container_struct_mxl111sf_state_ptr.offset, ~ldv_6_ldv_param_8_2_default.base, ~ldv_6_ldv_param_8_2_default.offset, ~ldv_7_ldv_param_13_1_default.base, ~ldv_7_ldv_param_13_1_default.offset, ~ldv_7_ldv_param_8_1_default.base, ~ldv_7_ldv_param_8_1_default.offset, ~ldv_7_resource_usb_interface.base, ~ldv_7_resource_usb_interface.offset, ~ldv_7_usb_device_usb_device.base, ~ldv_7_usb_device_usb_device.offset;

procedure msleep(#in~9 : int) returns ();
modifies ;

procedure usb_set_interface(#in~17.base : int, #in~17.offset : int, #in~18 : int, #in~19 : int) returns (#res : int);
modifies ;

procedure C.free(#in~2512.base : int, #in~2512.offset : int) returns ();
modifies ;

procedure __symbol_put(#in~23.base : int, #in~23.offset : int) returns ();
modifies ;

procedure ldv_pre_usb_register_driver() returns (#res : int);
modifies ;

procedure memcpy(#in~0.base : int, #in~0.offset : int, #in~1.base : int, #in~1.offset : int, #in~2 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure dvb_usbv2_suspend(#in~27.base : int, #in~27.offset : int, #in~28.event : int) returns (#res : int);
modifies ;

procedure __request_module(#in~20 : int, #in~21.base : int, #in~21.offset : int) returns (#res : int);
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure printk(#in~6.base : int, #in~6.offset : int) returns (#res : int);
modifies ;

procedure ldv_pre_probe() returns ();
modifies ;

procedure __mutex_init(#in~10.base : int, #in~10.offset : int, #in~11.base : int, #in~11.offset : int, #in~12.base : int, #in~12.offset : int) returns ();
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure usb_deregister(#in~16.base : int, #in~16.offset : int) returns ();
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];

procedure __dynamic_pr_debug(#in~7.base : int, #in~7.offset : int, #in~8.base : int, #in~8.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_error() returns ();
modifies ;

procedure tveeprom_read(#in~41.base : int, #in~41.offset : int, #in~42.base : int, #in~42.offset : int, #in~43 : int) returns (#res : int);
modifies ;

procedure i2c_transfer(#in~1964.base : int, #in~1964.offset : int, #in~1965.base : int, #in~1965.offset : int, #in~1966 : int) returns (#res : int);
modifies ;

procedure malloc(#in~2511 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];

procedure __symbol_get(#in~22.base : int, #in~22.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_register_driver(#in~13.base : int, #in~13.offset : int, #in~14.base : int, #in~14.offset : int, #in~15.base : int, #in~15.offset : int) returns (#res : int);
modifies ;

procedure memset(#in~3.base : int, #in~3.offset : int, #in~4 : int, #in~5 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure tveeprom_hauppauge_analog(#in~38.base : int, #in~38.offset : int, #in~39.base : int, #in~39.offset : int, #in~40.base : int, #in~40.offset : int) returns ();
modifies ;

procedure dvb_usbv2_generic_rw(#in~30.base : int, #in~30.offset : int, #in~31.base : int, #in~31.offset : int, #in~32 : int, #in~33.base : int, #in~33.offset : int, #in~34 : int) returns (#res : int);
modifies ;

procedure dvb_usbv2_disconnect(#in~26.base : int, #in~26.offset : int) returns ();
modifies ;

procedure external_allocated_data() returns (#res.base : int, #res.offset : int);
modifies ;

procedure dvb_usbv2_resume(#in~29.base : int, #in~29.offset : int) returns (#res : int);
modifies ;

procedure dvb_usbv2_generic_write(#in~35.base : int, #in~35.offset : int, #in~36.base : int, #in~36.offset : int, #in~37 : int) returns (#res : int);
modifies ;

procedure dvb_usbv2_probe(#in~24.base : int, #in~24.offset : int, #in~25.base : int, #in~25.offset : int) returns (#res : int);
modifies ;


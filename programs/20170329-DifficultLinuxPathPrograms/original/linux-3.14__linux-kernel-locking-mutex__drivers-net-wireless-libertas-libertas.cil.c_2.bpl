type STRUCT~perf_event;
type STRUCT~kernfs_open_node;
type STRUCT~kernfs_iattrs;
type STRUCT~sock;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~user_namespace;
type STRUCT~pinctrl;
type STRUCT~pinctrl_state;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~acpi_device;
type STRUCT~dma_coherent_mem;
type STRUCT~device_node;
type STRUCT~iommu_group;
type STRUCT~uprobe;
type STRUCT~return_instance;
type STRUCT~xol_area;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~sem_undo_list;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~pid_namespace;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~swap_info_struct;
type STRUCT~backing_dev_info;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~pipe_inode_info;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~mtd_info;
type STRUCT~poll_table_struct;
type STRUCT~nameidata;
type STRUCT~kstatfs;
type STRUCT~seccomp_filter;
type STRUCT~assoc_array_ptr;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~tty_struct;
type STRUCT~autogroup;
type STRUCT~tty_audit_buf;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~mem_cgroup;
type STRUCT~sched_class;
type STRUCT~task_group;
type STRUCT~fs_struct;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~bio_list;
type STRUCT~blk_plug;
type STRUCT~reclaim_state;
type STRUCT~io_context;
type STRUCT~robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~numa_group;
type STRUCT~ftrace_ret_stack;
type STRUCT~kmem_cache_node;
type STRUCT~sec_path;
type STRUCT~prot_inuse;
type STRUCT~proc_dir_entry;
type STRUCT~ipv4_devconf;
type STRUCT~fib_rules_ops;
type STRUCT~fib_table;
type STRUCT~inet_peer_base;
type STRUCT~tcpm_hash_bucket;
type STRUCT~xt_table;
type STRUCT~dst_entry;
type STRUCT~neighbour;
type STRUCT~ipv6_devconf;
type STRUCT~rt6_info;
type STRUCT~rt6_statistics;
type STRUCT~fib6_table;
type STRUCT~sctp_mib;
type STRUCT~nf_logger;
type STRUCT~ebt_table;
type STRUCT~ip_conntrack_stat;
type STRUCT~nf_ct_event_notifier;
type STRUCT~nf_exp_event_notifier;
type STRUCT~nft_af_info;
type STRUCT~net_generic;
type STRUCT~netns_ipvs;
type STRUCT~mii_bus;
type STRUCT~cgroup_subsys;
type STRUCT~uts_namespace;
type STRUCT~ipc_namespace;
type STRUCT~mnt_namespace;
type STRUCT~Qdisc;
type STRUCT~neigh_parms;
type STRUCT~netpoll_info;
type STRUCT~pcpu_lstats;
type STRUCT~pcpu_dstats;
type STRUCT~pcpu_vstats;
type STRUCT~forwarding_accel_ops;
type STRUCT~vlan_info;
type STRUCT~tipc_bearer;
type STRUCT~in_device;
type STRUCT~dn_dev;
type STRUCT~inet6_dev;
type STRUCT~cpu_rmap;
type STRUCT~garp_port;
type STRUCT~mrp_port;
type STRUCT~rtnl_link_ops;
type STRUCT~phy_device;
type STRUCT~cfg80211_cached_keys;
type STRUCT~cfg80211_conn;
type STRUCT~cfg80211_internal_bss;
type STRUCT~libipw_device;
type STRUCT~static_key_mod;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__u64 = int;
type ~s8 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~u_char = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~oom_flags_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~__kernel_sa_family_t = int;
type ~qsize_t = int;
type ~cputime_t = int;
type ~sk_buff_data_t = int;
type ~ldv_func_ret_type___0 = int;
type ~ldv_func_ret_type___1 = int;
type ~ldv_func_ret_type___2 = int;
type ~ldv_func_ret_type___3 = int;
type ~ldv_func_ret_type___4 = int;
type ~ldv_func_ret_type___5 = int;
type ~ldv_func_ret_type___6 = int;
type ~ldv_func_ret_type___9 = int;
type ~ldv_func_ret_type___10 = int;
type ~ldv_func_ret_type___11 = int;
type ~kernel_ulong_t = int;
type ~ldv_set = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_clock_t = ~__kernel_long_t;
type ~__le16 = ~__u16;
type ~__be16 = ~__u16;
type ~__le32 = ~__u32;
type ~__be32 = ~__u32;
type ~__le64 = ~__u64;
type ~__wsum = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint8_t = ~__u8;
type ~uint16_t = ~__u16;
type ~uint32_t = ~__u32;
type ~uint64_t = ~__u64;
type ~dma_addr_t = ~u64;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~dma_cookie_t = ~s32;
type ~sa_family_t = ~__kernel_sa_family_t;
type ~projid_t = ~__kernel_uid32_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~compat_long_t = ~s32;
type ~compat_uptr_t = ~u32;
type ~socket_state = int;
type ~netdev_features_t = ~u64;
type ~netdev_tx_t = int;
type ~rx_handler_result_t = int;
type ~jump_label_t = ~u64;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
const #funAddr~lbs_ret_scan.base : int;
const #funAddr~lbs_ret_scan.offset : int;
const #funAddr~lbs_cmd_copyback.base : int;
const #funAddr~lbs_cmd_copyback.offset : int;
const #funAddr~lbs_change_intf.base : int;
const #funAddr~lbs_change_intf.offset : int;
const #funAddr~lbs_cfg_add_key.base : int;
const #funAddr~lbs_cfg_add_key.offset : int;
const #funAddr~lbs_cfg_del_key.base : int;
const #funAddr~lbs_cfg_del_key.offset : int;
const #funAddr~lbs_cfg_set_default_key.base : int;
const #funAddr~lbs_cfg_set_default_key.offset : int;
const #funAddr~lbs_cfg_get_station.base : int;
const #funAddr~lbs_cfg_get_station.offset : int;
const #funAddr~lbs_cfg_set_mesh_channel.base : int;
const #funAddr~lbs_cfg_set_mesh_channel.offset : int;
const #funAddr~lbs_cfg_set_monitor_channel.base : int;
const #funAddr~lbs_cfg_set_monitor_channel.offset : int;
const #funAddr~lbs_cfg_scan.base : int;
const #funAddr~lbs_cfg_scan.offset : int;
const #funAddr~lbs_cfg_connect.base : int;
const #funAddr~lbs_cfg_connect.offset : int;
const #funAddr~lbs_cfg_disconnect.base : int;
const #funAddr~lbs_cfg_disconnect.offset : int;
const #funAddr~lbs_join_ibss.base : int;
const #funAddr~lbs_join_ibss.offset : int;
const #funAddr~lbs_leave_ibss.base : int;
const #funAddr~lbs_leave_ibss.offset : int;
const #funAddr~lbs_reg_notifier.base : int;
const #funAddr~lbs_reg_notifier.offset : int;
const #funAddr~lbs_scan_worker.base : int;
const #funAddr~lbs_scan_worker.offset : int;
const #funAddr~delayed_work_timer_fn.base : int;
const #funAddr~delayed_work_timer_fn.offset : int;
const #funAddr~lbs_ret_host_sleep_cfg.base : int;
const #funAddr~lbs_ret_host_sleep_cfg.offset : int;
const #funAddr~lbs_host_sleep_cfg.base : int;
const #funAddr~lbs_host_sleep_cfg.offset : int;
const #funAddr~lbs_ret_host_sleep_activate.base : int;
const #funAddr~lbs_ret_host_sleep_activate.offset : int;
const #funAddr~lbs_cmd_async_callback.base : int;
const #funAddr~lbs_cmd_async_callback.offset : int;
const #funAddr~__lbs_cmd.base : int;
const #funAddr~__lbs_cmd.offset : int;
const #funAddr~generic_file_llseek.base : int;
const #funAddr~generic_file_llseek.offset : int;
const #funAddr~lbs_dev_info.base : int;
const #funAddr~lbs_dev_info.offset : int;
const #funAddr~write_file_dummy.base : int;
const #funAddr~write_file_dummy.offset : int;
const #funAddr~simple_open.base : int;
const #funAddr~simple_open.offset : int;
const #funAddr~lbs_sleepparams_read.base : int;
const #funAddr~lbs_sleepparams_read.offset : int;
const #funAddr~lbs_sleepparams_write.base : int;
const #funAddr~lbs_sleepparams_write.offset : int;
const #funAddr~lbs_host_sleep_read.base : int;
const #funAddr~lbs_host_sleep_read.offset : int;
const #funAddr~lbs_host_sleep_write.base : int;
const #funAddr~lbs_host_sleep_write.offset : int;
const #funAddr~lbs_lowrssi_read.base : int;
const #funAddr~lbs_lowrssi_read.offset : int;
const #funAddr~lbs_lowrssi_write.base : int;
const #funAddr~lbs_lowrssi_write.offset : int;
const #funAddr~lbs_lowsnr_read.base : int;
const #funAddr~lbs_lowsnr_read.offset : int;
const #funAddr~lbs_lowsnr_write.base : int;
const #funAddr~lbs_lowsnr_write.offset : int;
const #funAddr~lbs_failcount_read.base : int;
const #funAddr~lbs_failcount_read.offset : int;
const #funAddr~lbs_failcount_write.base : int;
const #funAddr~lbs_failcount_write.offset : int;
const #funAddr~lbs_bcnmiss_read.base : int;
const #funAddr~lbs_bcnmiss_read.offset : int;
const #funAddr~lbs_bcnmiss_write.base : int;
const #funAddr~lbs_bcnmiss_write.offset : int;
const #funAddr~lbs_highrssi_read.base : int;
const #funAddr~lbs_highrssi_read.offset : int;
const #funAddr~lbs_highrssi_write.base : int;
const #funAddr~lbs_highrssi_write.offset : int;
const #funAddr~lbs_highsnr_read.base : int;
const #funAddr~lbs_highsnr_read.offset : int;
const #funAddr~lbs_highsnr_write.base : int;
const #funAddr~lbs_highsnr_write.offset : int;
const #funAddr~lbs_rdmac_read.base : int;
const #funAddr~lbs_rdmac_read.offset : int;
const #funAddr~lbs_rdmac_write.base : int;
const #funAddr~lbs_rdmac_write.offset : int;
const #funAddr~lbs_wrmac_write.base : int;
const #funAddr~lbs_wrmac_write.offset : int;
const #funAddr~lbs_rdbbp_read.base : int;
const #funAddr~lbs_rdbbp_read.offset : int;
const #funAddr~lbs_rdbbp_write.base : int;
const #funAddr~lbs_rdbbp_write.offset : int;
const #funAddr~lbs_wrbbp_write.base : int;
const #funAddr~lbs_wrbbp_write.offset : int;
const #funAddr~lbs_rdrf_read.base : int;
const #funAddr~lbs_rdrf_read.offset : int;
const #funAddr~lbs_rdrf_write.base : int;
const #funAddr~lbs_rdrf_write.offset : int;
const #funAddr~lbs_wrrf_write.base : int;
const #funAddr~lbs_wrrf_write.offset : int;
const #funAddr~default_llseek.base : int;
const #funAddr~default_llseek.offset : int;
const #funAddr~lbs_debugfs_read.base : int;
const #funAddr~lbs_debugfs_read.offset : int;
const #funAddr~lbs_debugfs_write.base : int;
const #funAddr~lbs_debugfs_write.offset : int;
const #funAddr~lbs_ethtool_get_drvinfo.base : int;
const #funAddr~lbs_ethtool_get_drvinfo.offset : int;
const #funAddr~lbs_ethtool_get_wol.base : int;
const #funAddr~lbs_ethtool_get_wol.offset : int;
const #funAddr~lbs_ethtool_set_wol.base : int;
const #funAddr~lbs_ethtool_set_wol.offset : int;
const #funAddr~lbs_ethtool_get_eeprom_len.base : int;
const #funAddr~lbs_ethtool_get_eeprom_len.offset : int;
const #funAddr~lbs_ethtool_get_eeprom.base : int;
const #funAddr~lbs_ethtool_get_eeprom.offset : int;
const #funAddr~lbs_mesh_ethtool_get_strings.base : int;
const #funAddr~lbs_mesh_ethtool_get_strings.offset : int;
const #funAddr~lbs_mesh_ethtool_get_stats.base : int;
const #funAddr~lbs_mesh_ethtool_get_stats.offset : int;
const #funAddr~lbs_mesh_ethtool_get_sset_count.base : int;
const #funAddr~lbs_mesh_ethtool_get_sset_count.offset : int;
const #funAddr~default_wake_function.base : int;
const #funAddr~default_wake_function.offset : int;
const #funAddr~lbs_host_to_card_done.base : int;
const #funAddr~lbs_host_to_card_done.offset : int;
const #funAddr~lbs_suspend.base : int;
const #funAddr~lbs_suspend.offset : int;
const #funAddr~lbs_resume.base : int;
const #funAddr~lbs_resume.offset : int;
const #funAddr~lbs_cmd_timeout_handler.base : int;
const #funAddr~lbs_cmd_timeout_handler.offset : int;
const #funAddr~lbs_tx_lockup_handler.base : int;
const #funAddr~lbs_tx_lockup_handler.offset : int;
const #funAddr~auto_deepsleep_timer_fn.base : int;
const #funAddr~auto_deepsleep_timer_fn.offset : int;
const #funAddr~lbs_dev_open.base : int;
const #funAddr~lbs_dev_open.offset : int;
const #funAddr~lbs_eth_stop.base : int;
const #funAddr~lbs_eth_stop.offset : int;
const #funAddr~lbs_hard_start_xmit.base : int;
const #funAddr~lbs_hard_start_xmit.offset : int;
const #funAddr~lbs_set_multicast_list.base : int;
const #funAddr~lbs_set_multicast_list.offset : int;
const #funAddr~lbs_set_mac_address.base : int;
const #funAddr~lbs_set_mac_address.offset : int;
const #funAddr~eth_validate_addr.base : int;
const #funAddr~eth_validate_addr.offset : int;
const #funAddr~eth_change_mtu.base : int;
const #funAddr~eth_change_mtu.offset : int;
const #funAddr~ether_setup.base : int;
const #funAddr~ether_setup.offset : int;
const #funAddr~lbs_thread.base : int;
const #funAddr~lbs_thread.offset : int;
const #funAddr~lbs_set_mcast_worker.base : int;
const #funAddr~lbs_set_mcast_worker.offset : int;
const #funAddr~lbs_add_card.base : int;
const #funAddr~lbs_add_card.offset : int;
const #funAddr~lbs_remove_card.base : int;
const #funAddr~lbs_remove_card.offset : int;
const #funAddr~lbs_start_card.base : int;
const #funAddr~lbs_start_card.offset : int;
const #funAddr~lbs_stop_card.base : int;
const #funAddr~lbs_stop_card.offset : int;
const #funAddr~lbs_queue_event.base : int;
const #funAddr~lbs_queue_event.offset : int;
const #funAddr~lbs_notify_command_response.base : int;
const #funAddr~lbs_notify_command_response.offset : int;
const #funAddr~lbs_process_rxed_packet.base : int;
const #funAddr~lbs_process_rxed_packet.offset : int;
const #funAddr~lbs_send_tx_feedback.base : int;
const #funAddr~lbs_send_tx_feedback.offset : int;
const #funAddr~main_firmware_cb.base : int;
const #funAddr~main_firmware_cb.offset : int;
const #funAddr~helper_firmware_cb.base : int;
const #funAddr~helper_firmware_cb.offset : int;
const #funAddr~lbs_get_firmware_async.base : int;
const #funAddr~lbs_get_firmware_async.offset : int;
const #funAddr~lbs_get_firmware.base : int;
const #funAddr~lbs_get_firmware.offset : int;
const #funAddr~lbs_mesh_get.base : int;
const #funAddr~lbs_mesh_get.offset : int;
const #funAddr~lbs_mesh_set.base : int;
const #funAddr~lbs_mesh_set.offset : int;
const #funAddr~lbs_anycast_get.base : int;
const #funAddr~lbs_anycast_get.offset : int;
const #funAddr~lbs_anycast_set.base : int;
const #funAddr~lbs_anycast_set.offset : int;
const #funAddr~lbs_prb_rsp_limit_get.base : int;
const #funAddr~lbs_prb_rsp_limit_get.offset : int;
const #funAddr~lbs_prb_rsp_limit_set.base : int;
const #funAddr~lbs_prb_rsp_limit_set.offset : int;
const #funAddr~bootflag_get.base : int;
const #funAddr~bootflag_get.offset : int;
const #funAddr~bootflag_set.base : int;
const #funAddr~bootflag_set.offset : int;
const #funAddr~boottime_get.base : int;
const #funAddr~boottime_get.offset : int;
const #funAddr~boottime_set.base : int;
const #funAddr~boottime_set.offset : int;
const #funAddr~channel_get.base : int;
const #funAddr~channel_get.offset : int;
const #funAddr~channel_set.base : int;
const #funAddr~channel_set.offset : int;
const #funAddr~mesh_id_get.base : int;
const #funAddr~mesh_id_get.offset : int;
const #funAddr~mesh_id_set.base : int;
const #funAddr~mesh_id_set.offset : int;
const #funAddr~protocol_id_get.base : int;
const #funAddr~protocol_id_get.offset : int;
const #funAddr~protocol_id_set.base : int;
const #funAddr~protocol_id_set.offset : int;
const #funAddr~metric_id_get.base : int;
const #funAddr~metric_id_get.offset : int;
const #funAddr~metric_id_set.base : int;
const #funAddr~metric_id_set.offset : int;
const #funAddr~capability_get.base : int;
const #funAddr~capability_get.offset : int;
const #funAddr~capability_set.base : int;
const #funAddr~capability_set.offset : int;
const #funAddr~lbs_mesh_dev_open.base : int;
const #funAddr~lbs_mesh_dev_open.offset : int;
const #funAddr~lbs_mesh_stop.base : int;
const #funAddr~lbs_mesh_stop.offset : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS : int;
const ~pm_qos_type~PM_QOS_UNITIALIZED : int;
const ~pm_qos_type~PM_QOS_MAX : int;
const ~pm_qos_type~PM_QOS_MIN : int;
const ~uprobe_task_state~UTASK_RUNNING : int;
const ~uprobe_task_state~UTASK_SSTEP : int;
const ~uprobe_task_state~UTASK_SSTEP_ACK : int;
const ~uprobe_task_state~UTASK_SSTEP_TRAPPED : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~ldv_21618~SS_FREE : int;
const ~ldv_21618~SS_UNCONNECTED : int;
const ~ldv_21618~SS_CONNECTING : int;
const ~ldv_21618~SS_CONNECTED : int;
const ~ldv_21618~SS_DISCONNECTING : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ON : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_OFF : int;
const ~netdev_tx~__NETDEV_TX_MIN : int;
const ~netdev_tx~NETDEV_TX_OK : int;
const ~netdev_tx~NETDEV_TX_BUSY : int;
const ~netdev_tx~NETDEV_TX_LOCKED : int;
const ~rx_handler_result~RX_HANDLER_CONSUMED : int;
const ~rx_handler_result~RX_HANDLER_ANOTHER : int;
const ~rx_handler_result~RX_HANDLER_EXACT : int;
const ~rx_handler_result~RX_HANDLER_PASS : int;
const ~ldv_27976~NETREG_UNINITIALIZED : int;
const ~ldv_27976~NETREG_REGISTERED : int;
const ~ldv_27976~NETREG_UNREGISTERING : int;
const ~ldv_27976~NETREG_UNREGISTERED : int;
const ~ldv_27976~NETREG_RELEASED : int;
const ~ldv_27976~NETREG_DUMMY : int;
const ~ldv_27977~RTNL_LINK_INITIALIZED : int;
const ~ldv_27977~RTNL_LINK_INITIALIZING : int;
const ~nl80211_iftype~NL80211_IFTYPE_UNSPECIFIED : int;
const ~nl80211_iftype~NL80211_IFTYPE_ADHOC : int;
const ~nl80211_iftype~NL80211_IFTYPE_STATION : int;
const ~nl80211_iftype~NL80211_IFTYPE_AP : int;
const ~nl80211_iftype~NL80211_IFTYPE_AP_VLAN : int;
const ~nl80211_iftype~NL80211_IFTYPE_WDS : int;
const ~nl80211_iftype~NL80211_IFTYPE_MONITOR : int;
const ~nl80211_iftype~NL80211_IFTYPE_MESH_POINT : int;
const ~nl80211_iftype~NL80211_IFTYPE_P2P_CLIENT : int;
const ~nl80211_iftype~NL80211_IFTYPE_P2P_GO : int;
const ~nl80211_iftype~NL80211_IFTYPE_P2P_DEVICE : int;
const ~nl80211_iftype~NUM_NL80211_IFTYPES : int;
const ~nl80211_iftype~NL80211_IFTYPE_MAX : int;
const ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_CORE : int;
const ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_USER : int;
const ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_DRIVER : int;
const ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_COUNTRY_IE : int;
const ~nl80211_dfs_regions~NL80211_DFS_UNSET : int;
const ~nl80211_dfs_regions~NL80211_DFS_FCC : int;
const ~nl80211_dfs_regions~NL80211_DFS_ETSI : int;
const ~nl80211_dfs_regions~NL80211_DFS_JP : int;
const ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_USER : int;
const ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_CELL_BASE : int;
const ~nl80211_mesh_power_mode~NL80211_MESH_POWER_UNKNOWN : int;
const ~nl80211_mesh_power_mode~NL80211_MESH_POWER_ACTIVE : int;
const ~nl80211_mesh_power_mode~NL80211_MESH_POWER_LIGHT_SLEEP : int;
const ~nl80211_mesh_power_mode~NL80211_MESH_POWER_DEEP_SLEEP : int;
const ~nl80211_mesh_power_mode~__NL80211_MESH_POWER_AFTER_LAST : int;
const ~nl80211_mesh_power_mode~NL80211_MESH_POWER_MAX : int;
const ~nl80211_ac~NL80211_AC_VO : int;
const ~nl80211_ac~NL80211_AC_VI : int;
const ~nl80211_ac~NL80211_AC_BE : int;
const ~nl80211_ac~NL80211_AC_BK : int;
const ~nl80211_ac~NL80211_NUM_ACS : int;
const ~nl80211_channel_type~NL80211_CHAN_NO_HT : int;
const ~nl80211_channel_type~NL80211_CHAN_HT20 : int;
const ~nl80211_channel_type~NL80211_CHAN_HT40MINUS : int;
const ~nl80211_channel_type~NL80211_CHAN_HT40PLUS : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_20_NOHT : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_20 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_40 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_80 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_80P80 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_160 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_5 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_10 : int;
const ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_20 : int;
const ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_10 : int;
const ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_5 : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_OPEN_SYSTEM : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_SHARED_KEY : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_FT : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_NETWORK_EAP : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_SAE : int;
const ~nl80211_auth_type~__NL80211_AUTHTYPE_NUM : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_MAX : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_AUTOMATIC : int;
const ~nl80211_key_type~NL80211_KEYTYPE_GROUP : int;
const ~nl80211_key_type~NL80211_KEYTYPE_PAIRWISE : int;
const ~nl80211_key_type~NL80211_KEYTYPE_PEERKEY : int;
const ~nl80211_key_type~NUM_NL80211_KEYTYPES : int;
const ~nl80211_mfp~NL80211_MFP_NO : int;
const ~nl80211_mfp~NL80211_MFP_REQUIRED : int;
const ~nl80211_tx_power_setting~NL80211_TX_POWER_AUTOMATIC : int;
const ~nl80211_tx_power_setting~NL80211_TX_POWER_LIMITED : int;
const ~nl80211_tx_power_setting~NL80211_TX_POWER_FIXED : int;
const ~nl80211_coalesce_condition~NL80211_COALESCE_CONDITION_MATCH : int;
const ~nl80211_coalesce_condition~NL80211_COALESCE_CONDITION_NO_MATCH : int;
const ~nl80211_hidden_ssid~NL80211_HIDDEN_SSID_NOT_IN_USE : int;
const ~nl80211_hidden_ssid~NL80211_HIDDEN_SSID_ZERO_LEN : int;
const ~nl80211_hidden_ssid~NL80211_HIDDEN_SSID_ZERO_CONTENTS : int;
const ~nl80211_tdls_operation~NL80211_TDLS_DISCOVERY_REQ : int;
const ~nl80211_tdls_operation~NL80211_TDLS_SETUP : int;
const ~nl80211_tdls_operation~NL80211_TDLS_TEARDOWN : int;
const ~nl80211_tdls_operation~NL80211_TDLS_ENABLE_LINK : int;
const ~nl80211_tdls_operation~NL80211_TDLS_DISABLE_LINK : int;
const ~nl80211_acl_policy~NL80211_ACL_POLICY_ACCEPT_UNLESS_LISTED : int;
const ~nl80211_acl_policy~NL80211_ACL_POLICY_DENY_UNLESS_LISTED : int;
const ~nl80211_dfs_state~NL80211_DFS_USABLE : int;
const ~nl80211_dfs_state~NL80211_DFS_UNAVAILABLE : int;
const ~nl80211_dfs_state~NL80211_DFS_AVAILABLE : int;
const ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_UNSPEC : int;
const ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_DHCP : int;
const ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_EAPOL : int;
const ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_APIPA : int;
const ~nl80211_crit_proto_id~NUM_NL80211_CRIT_PROTO : int;
const ~environment_cap~ENVIRON_ANY : int;
const ~environment_cap~ENVIRON_INDOOR : int;
const ~environment_cap~ENVIRON_OUTDOOR : int;
const ~ieee80211_band~IEEE80211_BAND_2GHZ : int;
const ~ieee80211_band~IEEE80211_BAND_5GHZ : int;
const ~ieee80211_band~IEEE80211_BAND_60GHZ : int;
const ~ieee80211_band~IEEE80211_NUM_BANDS : int;
const ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_NONE : int;
const ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_MBM : int;
const ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_UNSPEC : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~skb_free_reason~SKB_REASON_CONSUMED : int;
const ~skb_free_reason~SKB_REASON_DROPPED : int;
axiom #funAddr~lbs_ret_scan.base == -1 && #funAddr~lbs_ret_scan.offset == 0;
axiom #funAddr~lbs_cmd_copyback.base == -1 && #funAddr~lbs_cmd_copyback.offset == 1;
axiom #funAddr~lbs_change_intf.base == -1 && #funAddr~lbs_change_intf.offset == 2;
axiom #funAddr~lbs_cfg_add_key.base == -1 && #funAddr~lbs_cfg_add_key.offset == 3;
axiom #funAddr~lbs_cfg_del_key.base == -1 && #funAddr~lbs_cfg_del_key.offset == 4;
axiom #funAddr~lbs_cfg_set_default_key.base == -1 && #funAddr~lbs_cfg_set_default_key.offset == 5;
axiom #funAddr~lbs_cfg_get_station.base == -1 && #funAddr~lbs_cfg_get_station.offset == 6;
axiom #funAddr~lbs_cfg_set_mesh_channel.base == -1 && #funAddr~lbs_cfg_set_mesh_channel.offset == 7;
axiom #funAddr~lbs_cfg_set_monitor_channel.base == -1 && #funAddr~lbs_cfg_set_monitor_channel.offset == 8;
axiom #funAddr~lbs_cfg_scan.base == -1 && #funAddr~lbs_cfg_scan.offset == 9;
axiom #funAddr~lbs_cfg_connect.base == -1 && #funAddr~lbs_cfg_connect.offset == 10;
axiom #funAddr~lbs_cfg_disconnect.base == -1 && #funAddr~lbs_cfg_disconnect.offset == 11;
axiom #funAddr~lbs_join_ibss.base == -1 && #funAddr~lbs_join_ibss.offset == 12;
axiom #funAddr~lbs_leave_ibss.base == -1 && #funAddr~lbs_leave_ibss.offset == 13;
axiom #funAddr~lbs_reg_notifier.base == -1 && #funAddr~lbs_reg_notifier.offset == 14;
axiom #funAddr~lbs_scan_worker.base == -1 && #funAddr~lbs_scan_worker.offset == 15;
axiom #funAddr~delayed_work_timer_fn.base == -1 && #funAddr~delayed_work_timer_fn.offset == 16;
axiom #funAddr~lbs_ret_host_sleep_cfg.base == -1 && #funAddr~lbs_ret_host_sleep_cfg.offset == 17;
axiom #funAddr~lbs_host_sleep_cfg.base == -1 && #funAddr~lbs_host_sleep_cfg.offset == 18;
axiom #funAddr~lbs_ret_host_sleep_activate.base == -1 && #funAddr~lbs_ret_host_sleep_activate.offset == 19;
axiom #funAddr~lbs_cmd_async_callback.base == -1 && #funAddr~lbs_cmd_async_callback.offset == 20;
axiom #funAddr~__lbs_cmd.base == -1 && #funAddr~__lbs_cmd.offset == 21;
axiom #funAddr~generic_file_llseek.base == -1 && #funAddr~generic_file_llseek.offset == 22;
axiom #funAddr~lbs_dev_info.base == -1 && #funAddr~lbs_dev_info.offset == 23;
axiom #funAddr~write_file_dummy.base == -1 && #funAddr~write_file_dummy.offset == 24;
axiom #funAddr~simple_open.base == -1 && #funAddr~simple_open.offset == 25;
axiom #funAddr~lbs_sleepparams_read.base == -1 && #funAddr~lbs_sleepparams_read.offset == 26;
axiom #funAddr~lbs_sleepparams_write.base == -1 && #funAddr~lbs_sleepparams_write.offset == 27;
axiom #funAddr~lbs_host_sleep_read.base == -1 && #funAddr~lbs_host_sleep_read.offset == 28;
axiom #funAddr~lbs_host_sleep_write.base == -1 && #funAddr~lbs_host_sleep_write.offset == 29;
axiom #funAddr~lbs_lowrssi_read.base == -1 && #funAddr~lbs_lowrssi_read.offset == 30;
axiom #funAddr~lbs_lowrssi_write.base == -1 && #funAddr~lbs_lowrssi_write.offset == 31;
axiom #funAddr~lbs_lowsnr_read.base == -1 && #funAddr~lbs_lowsnr_read.offset == 32;
axiom #funAddr~lbs_lowsnr_write.base == -1 && #funAddr~lbs_lowsnr_write.offset == 33;
axiom #funAddr~lbs_failcount_read.base == -1 && #funAddr~lbs_failcount_read.offset == 34;
axiom #funAddr~lbs_failcount_write.base == -1 && #funAddr~lbs_failcount_write.offset == 35;
axiom #funAddr~lbs_bcnmiss_read.base == -1 && #funAddr~lbs_bcnmiss_read.offset == 36;
axiom #funAddr~lbs_bcnmiss_write.base == -1 && #funAddr~lbs_bcnmiss_write.offset == 37;
axiom #funAddr~lbs_highrssi_read.base == -1 && #funAddr~lbs_highrssi_read.offset == 38;
axiom #funAddr~lbs_highrssi_write.base == -1 && #funAddr~lbs_highrssi_write.offset == 39;
axiom #funAddr~lbs_highsnr_read.base == -1 && #funAddr~lbs_highsnr_read.offset == 40;
axiom #funAddr~lbs_highsnr_write.base == -1 && #funAddr~lbs_highsnr_write.offset == 41;
axiom #funAddr~lbs_rdmac_read.base == -1 && #funAddr~lbs_rdmac_read.offset == 42;
axiom #funAddr~lbs_rdmac_write.base == -1 && #funAddr~lbs_rdmac_write.offset == 43;
axiom #funAddr~lbs_wrmac_write.base == -1 && #funAddr~lbs_wrmac_write.offset == 44;
axiom #funAddr~lbs_rdbbp_read.base == -1 && #funAddr~lbs_rdbbp_read.offset == 45;
axiom #funAddr~lbs_rdbbp_write.base == -1 && #funAddr~lbs_rdbbp_write.offset == 46;
axiom #funAddr~lbs_wrbbp_write.base == -1 && #funAddr~lbs_wrbbp_write.offset == 47;
axiom #funAddr~lbs_rdrf_read.base == -1 && #funAddr~lbs_rdrf_read.offset == 48;
axiom #funAddr~lbs_rdrf_write.base == -1 && #funAddr~lbs_rdrf_write.offset == 49;
axiom #funAddr~lbs_wrrf_write.base == -1 && #funAddr~lbs_wrrf_write.offset == 50;
axiom #funAddr~default_llseek.base == -1 && #funAddr~default_llseek.offset == 51;
axiom #funAddr~lbs_debugfs_read.base == -1 && #funAddr~lbs_debugfs_read.offset == 52;
axiom #funAddr~lbs_debugfs_write.base == -1 && #funAddr~lbs_debugfs_write.offset == 53;
axiom #funAddr~lbs_ethtool_get_drvinfo.base == -1 && #funAddr~lbs_ethtool_get_drvinfo.offset == 54;
axiom #funAddr~lbs_ethtool_get_wol.base == -1 && #funAddr~lbs_ethtool_get_wol.offset == 55;
axiom #funAddr~lbs_ethtool_set_wol.base == -1 && #funAddr~lbs_ethtool_set_wol.offset == 56;
axiom #funAddr~lbs_ethtool_get_eeprom_len.base == -1 && #funAddr~lbs_ethtool_get_eeprom_len.offset == 57;
axiom #funAddr~lbs_ethtool_get_eeprom.base == -1 && #funAddr~lbs_ethtool_get_eeprom.offset == 58;
axiom #funAddr~lbs_mesh_ethtool_get_strings.base == -1 && #funAddr~lbs_mesh_ethtool_get_strings.offset == 59;
axiom #funAddr~lbs_mesh_ethtool_get_stats.base == -1 && #funAddr~lbs_mesh_ethtool_get_stats.offset == 60;
axiom #funAddr~lbs_mesh_ethtool_get_sset_count.base == -1 && #funAddr~lbs_mesh_ethtool_get_sset_count.offset == 61;
axiom #funAddr~default_wake_function.base == -1 && #funAddr~default_wake_function.offset == 62;
axiom #funAddr~lbs_host_to_card_done.base == -1 && #funAddr~lbs_host_to_card_done.offset == 63;
axiom #funAddr~lbs_suspend.base == -1 && #funAddr~lbs_suspend.offset == 64;
axiom #funAddr~lbs_resume.base == -1 && #funAddr~lbs_resume.offset == 65;
axiom #funAddr~lbs_cmd_timeout_handler.base == -1 && #funAddr~lbs_cmd_timeout_handler.offset == 66;
axiom #funAddr~lbs_tx_lockup_handler.base == -1 && #funAddr~lbs_tx_lockup_handler.offset == 67;
axiom #funAddr~auto_deepsleep_timer_fn.base == -1 && #funAddr~auto_deepsleep_timer_fn.offset == 68;
axiom #funAddr~lbs_dev_open.base == -1 && #funAddr~lbs_dev_open.offset == 69;
axiom #funAddr~lbs_eth_stop.base == -1 && #funAddr~lbs_eth_stop.offset == 70;
axiom #funAddr~lbs_hard_start_xmit.base == -1 && #funAddr~lbs_hard_start_xmit.offset == 71;
axiom #funAddr~lbs_set_multicast_list.base == -1 && #funAddr~lbs_set_multicast_list.offset == 72;
axiom #funAddr~lbs_set_mac_address.base == -1 && #funAddr~lbs_set_mac_address.offset == 73;
axiom #funAddr~eth_validate_addr.base == -1 && #funAddr~eth_validate_addr.offset == 74;
axiom #funAddr~eth_change_mtu.base == -1 && #funAddr~eth_change_mtu.offset == 75;
axiom #funAddr~ether_setup.base == -1 && #funAddr~ether_setup.offset == 76;
axiom #funAddr~lbs_thread.base == -1 && #funAddr~lbs_thread.offset == 77;
axiom #funAddr~lbs_set_mcast_worker.base == -1 && #funAddr~lbs_set_mcast_worker.offset == 78;
axiom #funAddr~lbs_add_card.base == -1 && #funAddr~lbs_add_card.offset == 79;
axiom #funAddr~lbs_remove_card.base == -1 && #funAddr~lbs_remove_card.offset == 80;
axiom #funAddr~lbs_start_card.base == -1 && #funAddr~lbs_start_card.offset == 81;
axiom #funAddr~lbs_stop_card.base == -1 && #funAddr~lbs_stop_card.offset == 82;
axiom #funAddr~lbs_queue_event.base == -1 && #funAddr~lbs_queue_event.offset == 83;
axiom #funAddr~lbs_notify_command_response.base == -1 && #funAddr~lbs_notify_command_response.offset == 84;
axiom #funAddr~lbs_process_rxed_packet.base == -1 && #funAddr~lbs_process_rxed_packet.offset == 85;
axiom #funAddr~lbs_send_tx_feedback.base == -1 && #funAddr~lbs_send_tx_feedback.offset == 86;
axiom #funAddr~main_firmware_cb.base == -1 && #funAddr~main_firmware_cb.offset == 87;
axiom #funAddr~helper_firmware_cb.base == -1 && #funAddr~helper_firmware_cb.offset == 88;
axiom #funAddr~lbs_get_firmware_async.base == -1 && #funAddr~lbs_get_firmware_async.offset == 89;
axiom #funAddr~lbs_get_firmware.base == -1 && #funAddr~lbs_get_firmware.offset == 90;
axiom #funAddr~lbs_mesh_get.base == -1 && #funAddr~lbs_mesh_get.offset == 91;
axiom #funAddr~lbs_mesh_set.base == -1 && #funAddr~lbs_mesh_set.offset == 92;
axiom #funAddr~lbs_anycast_get.base == -1 && #funAddr~lbs_anycast_get.offset == 93;
axiom #funAddr~lbs_anycast_set.base == -1 && #funAddr~lbs_anycast_set.offset == 94;
axiom #funAddr~lbs_prb_rsp_limit_get.base == -1 && #funAddr~lbs_prb_rsp_limit_get.offset == 95;
axiom #funAddr~lbs_prb_rsp_limit_set.base == -1 && #funAddr~lbs_prb_rsp_limit_set.offset == 96;
axiom #funAddr~bootflag_get.base == -1 && #funAddr~bootflag_get.offset == 97;
axiom #funAddr~bootflag_set.base == -1 && #funAddr~bootflag_set.offset == 98;
axiom #funAddr~boottime_get.base == -1 && #funAddr~boottime_get.offset == 99;
axiom #funAddr~boottime_set.base == -1 && #funAddr~boottime_set.offset == 100;
axiom #funAddr~channel_get.base == -1 && #funAddr~channel_get.offset == 101;
axiom #funAddr~channel_set.base == -1 && #funAddr~channel_set.offset == 102;
axiom #funAddr~mesh_id_get.base == -1 && #funAddr~mesh_id_get.offset == 103;
axiom #funAddr~mesh_id_set.base == -1 && #funAddr~mesh_id_set.offset == 104;
axiom #funAddr~protocol_id_get.base == -1 && #funAddr~protocol_id_get.offset == 105;
axiom #funAddr~protocol_id_set.base == -1 && #funAddr~protocol_id_set.offset == 106;
axiom #funAddr~metric_id_get.base == -1 && #funAddr~metric_id_get.offset == 107;
axiom #funAddr~metric_id_set.base == -1 && #funAddr~metric_id_set.offset == 108;
axiom #funAddr~capability_get.base == -1 && #funAddr~capability_get.offset == 109;
axiom #funAddr~capability_set.base == -1 && #funAddr~capability_set.offset == 110;
axiom #funAddr~lbs_mesh_dev_open.base == -1 && #funAddr~lbs_mesh_dev_open.offset == 111;
axiom #funAddr~lbs_mesh_stop.base == -1 && #funAddr~lbs_mesh_stop.offset == 112;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY == 1;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS == 2;
axiom ~pm_qos_type~PM_QOS_UNITIALIZED == 0;
axiom ~pm_qos_type~PM_QOS_MAX == 1;
axiom ~pm_qos_type~PM_QOS_MIN == 2;
axiom ~uprobe_task_state~UTASK_RUNNING == 0;
axiom ~uprobe_task_state~UTASK_SSTEP == 1;
axiom ~uprobe_task_state~UTASK_SSTEP_ACK == 2;
axiom ~uprobe_task_state~UTASK_SSTEP_TRAPPED == 3;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~ldv_21618~SS_FREE == 0;
axiom ~ldv_21618~SS_UNCONNECTED == 1;
axiom ~ldv_21618~SS_CONNECTING == 2;
axiom ~ldv_21618~SS_CONNECTED == 3;
axiom ~ldv_21618~SS_DISCONNECTING == 4;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE == 0;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE == 1;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ON == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_OFF == 3;
axiom ~netdev_tx~__NETDEV_TX_MIN == -2147483648;
axiom ~netdev_tx~NETDEV_TX_OK == 0;
axiom ~netdev_tx~NETDEV_TX_BUSY == 16;
axiom ~netdev_tx~NETDEV_TX_LOCKED == 32;
axiom ~rx_handler_result~RX_HANDLER_CONSUMED == 0;
axiom ~rx_handler_result~RX_HANDLER_ANOTHER == 1;
axiom ~rx_handler_result~RX_HANDLER_EXACT == 2;
axiom ~rx_handler_result~RX_HANDLER_PASS == 3;
axiom ~ldv_27976~NETREG_UNINITIALIZED == 0;
axiom ~ldv_27976~NETREG_REGISTERED == 1;
axiom ~ldv_27976~NETREG_UNREGISTERING == 2;
axiom ~ldv_27976~NETREG_UNREGISTERED == 3;
axiom ~ldv_27976~NETREG_RELEASED == 4;
axiom ~ldv_27976~NETREG_DUMMY == 5;
axiom ~ldv_27977~RTNL_LINK_INITIALIZED == 0;
axiom ~ldv_27977~RTNL_LINK_INITIALIZING == 1;
axiom ~nl80211_iftype~NL80211_IFTYPE_UNSPECIFIED == 0;
axiom ~nl80211_iftype~NL80211_IFTYPE_ADHOC == 1;
axiom ~nl80211_iftype~NL80211_IFTYPE_STATION == 2;
axiom ~nl80211_iftype~NL80211_IFTYPE_AP == 3;
axiom ~nl80211_iftype~NL80211_IFTYPE_AP_VLAN == 4;
axiom ~nl80211_iftype~NL80211_IFTYPE_WDS == 5;
axiom ~nl80211_iftype~NL80211_IFTYPE_MONITOR == 6;
axiom ~nl80211_iftype~NL80211_IFTYPE_MESH_POINT == 7;
axiom ~nl80211_iftype~NL80211_IFTYPE_P2P_CLIENT == 8;
axiom ~nl80211_iftype~NL80211_IFTYPE_P2P_GO == 9;
axiom ~nl80211_iftype~NL80211_IFTYPE_P2P_DEVICE == 10;
axiom ~nl80211_iftype~NUM_NL80211_IFTYPES == 11;
axiom ~nl80211_iftype~NL80211_IFTYPE_MAX == 10;
axiom ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_CORE == 0;
axiom ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_USER == 1;
axiom ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_DRIVER == 2;
axiom ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_COUNTRY_IE == 3;
axiom ~nl80211_dfs_regions~NL80211_DFS_UNSET == 0;
axiom ~nl80211_dfs_regions~NL80211_DFS_FCC == 1;
axiom ~nl80211_dfs_regions~NL80211_DFS_ETSI == 2;
axiom ~nl80211_dfs_regions~NL80211_DFS_JP == 3;
axiom ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_USER == 0;
axiom ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_CELL_BASE == 1;
axiom ~nl80211_mesh_power_mode~NL80211_MESH_POWER_UNKNOWN == 0;
axiom ~nl80211_mesh_power_mode~NL80211_MESH_POWER_ACTIVE == 1;
axiom ~nl80211_mesh_power_mode~NL80211_MESH_POWER_LIGHT_SLEEP == 2;
axiom ~nl80211_mesh_power_mode~NL80211_MESH_POWER_DEEP_SLEEP == 3;
axiom ~nl80211_mesh_power_mode~__NL80211_MESH_POWER_AFTER_LAST == 4;
axiom ~nl80211_mesh_power_mode~NL80211_MESH_POWER_MAX == 3;
axiom ~nl80211_ac~NL80211_AC_VO == 0;
axiom ~nl80211_ac~NL80211_AC_VI == 1;
axiom ~nl80211_ac~NL80211_AC_BE == 2;
axiom ~nl80211_ac~NL80211_AC_BK == 3;
axiom ~nl80211_ac~NL80211_NUM_ACS == 4;
axiom ~nl80211_channel_type~NL80211_CHAN_NO_HT == 0;
axiom ~nl80211_channel_type~NL80211_CHAN_HT20 == 1;
axiom ~nl80211_channel_type~NL80211_CHAN_HT40MINUS == 2;
axiom ~nl80211_channel_type~NL80211_CHAN_HT40PLUS == 3;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_20_NOHT == 0;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_20 == 1;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_40 == 2;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_80 == 3;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_80P80 == 4;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_160 == 5;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_5 == 6;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_10 == 7;
axiom ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_20 == 0;
axiom ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_10 == 1;
axiom ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_5 == 2;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_OPEN_SYSTEM == 0;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_SHARED_KEY == 1;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_FT == 2;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_NETWORK_EAP == 3;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_SAE == 4;
axiom ~nl80211_auth_type~__NL80211_AUTHTYPE_NUM == 5;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_MAX == 4;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_AUTOMATIC == 5;
axiom ~nl80211_key_type~NL80211_KEYTYPE_GROUP == 0;
axiom ~nl80211_key_type~NL80211_KEYTYPE_PAIRWISE == 1;
axiom ~nl80211_key_type~NL80211_KEYTYPE_PEERKEY == 2;
axiom ~nl80211_key_type~NUM_NL80211_KEYTYPES == 3;
axiom ~nl80211_mfp~NL80211_MFP_NO == 0;
axiom ~nl80211_mfp~NL80211_MFP_REQUIRED == 1;
axiom ~nl80211_tx_power_setting~NL80211_TX_POWER_AUTOMATIC == 0;
axiom ~nl80211_tx_power_setting~NL80211_TX_POWER_LIMITED == 1;
axiom ~nl80211_tx_power_setting~NL80211_TX_POWER_FIXED == 2;
axiom ~nl80211_coalesce_condition~NL80211_COALESCE_CONDITION_MATCH == 0;
axiom ~nl80211_coalesce_condition~NL80211_COALESCE_CONDITION_NO_MATCH == 1;
axiom ~nl80211_hidden_ssid~NL80211_HIDDEN_SSID_NOT_IN_USE == 0;
axiom ~nl80211_hidden_ssid~NL80211_HIDDEN_SSID_ZERO_LEN == 1;
axiom ~nl80211_hidden_ssid~NL80211_HIDDEN_SSID_ZERO_CONTENTS == 2;
axiom ~nl80211_tdls_operation~NL80211_TDLS_DISCOVERY_REQ == 0;
axiom ~nl80211_tdls_operation~NL80211_TDLS_SETUP == 1;
axiom ~nl80211_tdls_operation~NL80211_TDLS_TEARDOWN == 2;
axiom ~nl80211_tdls_operation~NL80211_TDLS_ENABLE_LINK == 3;
axiom ~nl80211_tdls_operation~NL80211_TDLS_DISABLE_LINK == 4;
axiom ~nl80211_acl_policy~NL80211_ACL_POLICY_ACCEPT_UNLESS_LISTED == 0;
axiom ~nl80211_acl_policy~NL80211_ACL_POLICY_DENY_UNLESS_LISTED == 1;
axiom ~nl80211_dfs_state~NL80211_DFS_USABLE == 0;
axiom ~nl80211_dfs_state~NL80211_DFS_UNAVAILABLE == 1;
axiom ~nl80211_dfs_state~NL80211_DFS_AVAILABLE == 2;
axiom ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_UNSPEC == 0;
axiom ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_DHCP == 1;
axiom ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_EAPOL == 2;
axiom ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_APIPA == 3;
axiom ~nl80211_crit_proto_id~NUM_NL80211_CRIT_PROTO == 4;
axiom ~environment_cap~ENVIRON_ANY == 0;
axiom ~environment_cap~ENVIRON_INDOOR == 1;
axiom ~environment_cap~ENVIRON_OUTDOOR == 2;
axiom ~ieee80211_band~IEEE80211_BAND_2GHZ == 0;
axiom ~ieee80211_band~IEEE80211_BAND_5GHZ == 1;
axiom ~ieee80211_band~IEEE80211_BAND_60GHZ == 2;
axiom ~ieee80211_band~IEEE80211_NUM_BANDS == 3;
axiom ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_NONE == 0;
axiom ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_MBM == 1;
axiom ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_UNSPEC == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~skb_free_reason~SKB_REASON_CONSUMED == 0;
axiom ~skb_free_reason~SKB_REASON_DROPPED == 1;
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseComplement" } ~bitwiseComplement(in0 : int) returns (out : int);
var ~lbs_debug : int;

var ~jiffies : int;

var ~szStates.base : [int]int, ~szStates.offset : [int]int;

var ~len : int;

var ~num_of_items : int;

var ~#lbs_driver_version.base : int, ~#lbs_driver_version.offset : int;

var ~#lbs_disablemesh.base : int, ~#lbs_disablemesh.offset : int;

var ~#mesh_stat_strings.base : int, ~#mesh_stat_strings.offset : int;

var ~#rcu_lock_map.base : int, ~#rcu_lock_map.offset : int;

var ~#lbs_2ghz_channels.base : int, ~#lbs_2ghz_channels.offset : int;

var ~#lbs_rates.base : int, ~#lbs_rates.offset : int;

var ~#lbs_band_2ghz.base : int, ~#lbs_band_2ghz.offset : int;

var ~#cipher_suites.base : int, ~#cipher_suites.offset : int;

var ~#lbs_cfg80211_ops.base : int, ~#lbs_cfg80211_ops.offset : int;

var ~lbs_region_code_to_index : [int]~u16;

var ~#confirm_sleep.base : int, ~#confirm_sleep.offset : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~lbs_dir.base : int, ~lbs_dir.offset : int;

var ~#debugfs_files.base : int, ~#debugfs_files.offset : int;

var ~#debugfs_events_files.base : int, ~#debugfs_events_files.offset : int;

var ~#debugfs_regs_files.base : int, ~#debugfs_regs_files.offset : int;

var ~#items.base : int, ~#items.offset : int;

var ~#lbs_debug_fops.base : int, ~#lbs_debug_fops.offset : int;

var ~#lbs_ethtool_ops.base : int, ~#lbs_ethtool_ops.offset : int;

var ~system_wq.base : int, ~system_wq.offset : int;

var ~fw_data_rates : [int]~u8;

var ~#lbs_netdev_ops.base : int, ~#lbs_netdev_ops.offset : int;

var ~#dev_attr_lbs_mesh.base : int, ~#dev_attr_lbs_mesh.offset : int;

var ~#dev_attr_anycast_mask.base : int, ~#dev_attr_anycast_mask.offset : int;

var ~#dev_attr_prb_rsp_limit.base : int, ~#dev_attr_prb_rsp_limit.offset : int;

var ~#lbs_mesh_sysfs_entries.base : int, ~#lbs_mesh_sysfs_entries.offset : int;

var ~#lbs_mesh_attr_group.base : int, ~#lbs_mesh_attr_group.offset : int;

var ~#dev_attr_bootflag.base : int, ~#dev_attr_bootflag.offset : int;

var ~#dev_attr_boottime.base : int, ~#dev_attr_boottime.offset : int;

var ~#dev_attr_channel.base : int, ~#dev_attr_channel.offset : int;

var ~#dev_attr_mesh_id.base : int, ~#dev_attr_mesh_id.offset : int;

var ~#dev_attr_protocol_id.base : int, ~#dev_attr_protocol_id.offset : int;

var ~#dev_attr_metric_id.base : int, ~#dev_attr_metric_id.offset : int;

var ~#dev_attr_capability.base : int, ~#dev_attr_capability.offset : int;

var ~#boot_opts_attrs.base : int, ~#boot_opts_attrs.offset : int;

var ~#boot_opts_group.base : int, ~#boot_opts_group.offset : int;

var ~#mesh_ie_attrs.base : int, ~#mesh_ie_attrs.offset : int;

var ~#mesh_ie_group.base : int, ~#mesh_ie_group.offset : int;

var ~#mesh_netdev_ops.base : int, ~#mesh_netdev_ops.offset : int;

var ~LDV_MUTEXES_i_mutex_of_inode : ~ldv_set;

var ~LDV_MUTEXES_lock : ~ldv_set;

var ~LDV_MUTEXES_lock_of_lbs_private : ~ldv_set;

var ~LDV_MUTEXES_mutex_of_device : ~ldv_set;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_int : [int,int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr4496 : int;

  loc0:
    #t~loopctr4496 := 0;
    goto loc1;
  loc1:
    goto loc1_0, loc1_1;
  loc1_0:
    assume #t~loopctr4496 < #amount;
    #memory_int := #memory_int[#ptr.base,#ptr.offset + #t~loopctr4496 * 1 := #value];
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset + #t~loopctr4496 * 1 := 0], #memory_$Pointer$.offset[#ptr.base,#ptr.offset + #t~loopctr4496 * 1 := #value % 256];
    #t~loopctr4496 := #t~loopctr4496 + 1;
    goto loc1;
  loc1_1:
    assume !(#t~loopctr4496 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation ldv_filter_positive_int(#in~val : int) returns (#res : int){
    var ~val : int;

  loc2:
    ~val := #in~val;
    call ldv_assume((if ~val <= 0 then 1 else 0));
    #res := ~val;
    assume true;
    return;
}

procedure ldv_filter_positive_int(#in~val : int) returns (#res : int);
modifies ;

implementation lbs_init_module() returns (#res : int){
    var #t~ret3537 : int;
    var #t~nondet3538.base : int, #t~nondet3538.offset : int;
    var #t~ret3539 : int;
    var #t~memset3540.base : int, #t~memset3540.offset : int;
    var #t~ret3544 : int;
    var #t~nondet3545.base : int, #t~nondet3545.offset : int;
    var #t~ret3546 : int;
    var ~tmp~4335 : int;
    var ~tmp___0~4335 : int;

  loc3:
    havoc ~tmp~4335;
    havoc ~tmp___0~4335;
    assume !(~bitwiseAnd(~lbs_debug, 5) % 4294967296 == 5);
    call #t~memset3540.base, #t~memset3540.offset := #Ultimate.C_memset(~#confirm_sleep.base, ~#confirm_sleep.offset, 0, 18);
    havoc #t~memset3540.base, #t~memset3540.offset;
    call write~int(33, ~#confirm_sleep.base, ~#confirm_sleep.offset + 0 + 0, 2);
    call write~int(18, ~#confirm_sleep.base, ~#confirm_sleep.offset + 0 + 2, 2);
    call write~int(52, ~#confirm_sleep.base, ~#confirm_sleep.offset + 8, 2);
    call lbs_debugfs_init();
    assume !(~bitwiseAnd(~lbs_debug, 6) % 4294967296 == 6);
    #res := 0;
    assume true;
    return;
}

procedure lbs_init_module() returns (#res : int);
modifies #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~lbs_dir.base, ~lbs_dir.offset;

implementation main() returns (#res : int){
  loc4:
    call ldv_initialize();
    call ldv_entry_EMGentry_38(0, 0);
    return;
}

procedure main() returns (#res : int);
modifies ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_lock_of_lbs_private, ~LDV_MUTEXES_mutex_of_device, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~lbs_dir.base, ~lbs_dir.offset;

implementation ldv_undef_int() returns (#res : int){
    var #t~nondet4477 : int;
    var ~tmp~5539 : int;

  loc5:
    havoc ~tmp~5539;
    assume -2147483648 <= #t~nondet4477 && #t~nondet4477 <= 2147483647;
    ~tmp~5539 := #t~nondet4477;
    havoc #t~nondet4477;
    #res := ~tmp~5539;
    assume true;
    return;
}

procedure ldv_undef_int() returns (#res : int);
modifies ;

implementation ldv_assume(#in~expression : int) returns (){
    var ~expression : int;

  loc6:
    ~expression := #in~expression;
    assume !(~expression == 0);
    assume true;
    return;
}

procedure ldv_assume(#in~expression : int) returns ();
modifies ;

implementation ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(#in~expr : int) returns (){
    var ~expr : int;

  loc7:
    ~expr := #in~expr;
    assume ~expr == 0;
    assume !false;
    goto loc8;
  loc8:
    assert false;
}

procedure ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(#in~expr : int) returns ();
modifies ;

implementation ldv_entry_EMGentry_38(#in~arg0.base : int, #in~arg0.offset : int) returns (){
    var #t~ret3589 : int;
    var #t~ret3590 : int;
    var #t~ret3591 : int;
    var #t~ret3592 : int;
    var ~arg0.base : int, ~arg0.offset : int;
    var ~ldv_38_exit_lbs_exit_module_default~4409.base : int, ~ldv_38_exit_lbs_exit_module_default~4409.offset : int;
    var ~ldv_38_init_lbs_init_module_default~4409.base : int, ~ldv_38_init_lbs_init_module_default~4409.offset : int;
    var ~ldv_38_ret_default~4409 : int;
    var ~tmp~4409 : int;
    var ~tmp___0~4409 : int;

  loc9:
    ~arg0.base, ~arg0.offset := #in~arg0.base, #in~arg0.offset;
    havoc ~ldv_38_exit_lbs_exit_module_default~4409.base, ~ldv_38_exit_lbs_exit_module_default~4409.offset;
    havoc ~ldv_38_init_lbs_init_module_default~4409.base, ~ldv_38_init_lbs_init_module_default~4409.offset;
    havoc ~ldv_38_ret_default~4409;
    havoc ~tmp~4409;
    havoc ~tmp___0~4409;
    call #t~ret3589 := ldv_EMGentry_init_lbs_init_module_38_13(~ldv_38_init_lbs_init_module_default~4409.base, ~ldv_38_init_lbs_init_module_default~4409.offset);
    assume -2147483648 <= #t~ret3589 && #t~ret3589 <= 2147483647;
    ~ldv_38_ret_default~4409 := #t~ret3589;
    havoc #t~ret3589;
    call #t~ret3590 := ldv_post_init(~ldv_38_ret_default~4409);
    assume -2147483648 <= #t~ret3590 && #t~ret3590 <= 2147483647;
    ~ldv_38_ret_default~4409 := #t~ret3590;
    havoc #t~ret3590;
    call #t~ret3591 := ldv_undef_int();
    assume -2147483648 <= #t~ret3591 && #t~ret3591 <= 2147483647;
    ~tmp___0~4409 := #t~ret3591;
    havoc #t~ret3591;
    assume ~tmp___0~4409 != 0;
    call ldv_assume((if ~ldv_38_ret_default~4409 != 0 then 1 else 0));
    call ldv_check_final_state();
    return;
}

procedure ldv_entry_EMGentry_38(#in~arg0.base : int, #in~arg0.offset : int) returns ();
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~lbs_dir.base, ~lbs_dir.offset, ~LDV_MUTEXES_lock_of_lbs_private;

implementation ULTIMATE.init() returns (){
    var #t~nondet0.base : int, #t~nondet0.offset : int;
    var #t~nondet1.base : int, #t~nondet1.offset : int;
    var #t~nondet2.base : int, #t~nondet2.offset : int;
    var #t~nondet3.base : int, #t~nondet3.offset : int;
    var #t~nondet4.base : int, #t~nondet4.offset : int;
    var #t~nondet5.base : int, #t~nondet5.offset : int;
    var #t~nondet6.base : int, #t~nondet6.offset : int;
    var #t~nondet7.base : int, #t~nondet7.offset : int;
    var #t~nondet8.base : int, #t~nondet8.offset : int;
    var #t~nondet9.base : int, #t~nondet9.offset : int;
    var #t~nondet2393.base : int, #t~nondet2393.offset : int;
    var #t~nondet2394.base : int, #t~nondet2394.offset : int;
    var #t~nondet2395.base : int, #t~nondet2395.offset : int;
    var #t~nondet2396.base : int, #t~nondet2396.offset : int;
    var #t~nondet2397.base : int, #t~nondet2397.offset : int;
    var #t~nondet2398.base : int, #t~nondet2398.offset : int;
    var #t~nondet2399.base : int, #t~nondet2399.offset : int;
    var #t~nondet2400.base : int, #t~nondet2400.offset : int;
    var #t~nondet2401.base : int, #t~nondet2401.offset : int;
    var #t~nondet2402.base : int, #t~nondet2402.offset : int;
    var #t~nondet2403.base : int, #t~nondet2403.offset : int;
    var #t~nondet2404.base : int, #t~nondet2404.offset : int;
    var #t~nondet2405.base : int, #t~nondet2405.offset : int;
    var #t~nondet2406.base : int, #t~nondet2406.offset : int;
    var #t~nondet2407.base : int, #t~nondet2407.offset : int;
    var #t~nondet4085.base : int, #t~nondet4085.offset : int;
    var #t~nondet4086.base : int, #t~nondet4086.offset : int;
    var #t~nondet4087.base : int, #t~nondet4087.offset : int;
    var #t~nondet4210.base : int, #t~nondet4210.offset : int;
    var #t~nondet4211.base : int, #t~nondet4211.offset : int;
    var #t~nondet4212.base : int, #t~nondet4212.offset : int;
    var #t~nondet4213.base : int, #t~nondet4213.offset : int;
    var #t~nondet4214.base : int, #t~nondet4214.offset : int;
    var #t~nondet4215.base : int, #t~nondet4215.offset : int;
    var #t~nondet4216.base : int, #t~nondet4216.offset : int;
    var #t~nondet4217.base : int, #t~nondet4217.offset : int;
    var #t~nondet4218.base : int, #t~nondet4218.offset : int;

  loc10:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~lbs_debug := 0;
    call #t~nondet0.base, #t~nondet0.offset := #Ultimate.alloc(10);
    ~szStates.base, ~szStates.offset := ~szStates.base[0 := #t~nondet0.base], ~szStates.offset[0 := #t~nondet0.offset];
    call #t~nondet1.base, #t~nondet1.offset := #Ultimate.alloc(13);
    ~szStates.base, ~szStates.offset := ~szStates.base[1 := #t~nondet1.base], ~szStates.offset[1 := #t~nondet1.offset];
    havoc #t~nondet0.base, #t~nondet0.offset;
    havoc #t~nondet1.base, #t~nondet1.offset;
    ~len := 4096;
    ~num_of_items := 2;
    call ~#lbs_driver_version.base, ~#lbs_driver_version.offset := #Ultimate.alloc(24);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 0, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 1, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 2, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 3, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 4, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 5, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 6, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 7, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 8, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 9, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 10, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 11, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 12, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 13, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 14, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 15, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 16, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 17, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 18, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 19, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 20, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 21, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 22, 1);
    call write~int(0, ~#lbs_driver_version.base, ~#lbs_driver_version.offset + 23, 1);
    call ~#lbs_disablemesh.base, ~#lbs_disablemesh.offset := #Ultimate.alloc(4);
    call write~int(0, ~#lbs_disablemesh.base, ~#lbs_disablemesh.offset, 4);
    call ~#mesh_stat_strings.base, ~#mesh_stat_strings.offset := #Ultimate.alloc(64);
    call #t~nondet2.base, #t~nondet2.offset := #Ultimate.alloc(21);
    call write~$Pointer$(#t~nondet2.base, #t~nondet2.offset, ~#mesh_stat_strings.base, ~#mesh_stat_strings.offset + 0, 8);
    call #t~nondet3.base, #t~nondet3.offset := #Ultimate.alloc(14);
    call write~$Pointer$(#t~nondet3.base, #t~nondet3.offset, ~#mesh_stat_strings.base, ~#mesh_stat_strings.offset + 8, 8);
    call #t~nondet4.base, #t~nondet4.offset := #Ultimate.alloc(18);
    call write~$Pointer$(#t~nondet4.base, #t~nondet4.offset, ~#mesh_stat_strings.base, ~#mesh_stat_strings.offset + 16, 8);
    call #t~nondet5.base, #t~nondet5.offset := #Ultimate.alloc(16);
    call write~$Pointer$(#t~nondet5.base, #t~nondet5.offset, ~#mesh_stat_strings.base, ~#mesh_stat_strings.offset + 24, 8);
    call #t~nondet6.base, #t~nondet6.offset := #Ultimate.alloc(18);
    call write~$Pointer$(#t~nondet6.base, #t~nondet6.offset, ~#mesh_stat_strings.base, ~#mesh_stat_strings.offset + 32, 8);
    call #t~nondet7.base, #t~nondet7.offset := #Ultimate.alloc(16);
    call write~$Pointer$(#t~nondet7.base, #t~nondet7.offset, ~#mesh_stat_strings.base, ~#mesh_stat_strings.offset + 40, 8);
    call #t~nondet8.base, #t~nondet8.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet8.base, #t~nondet8.offset, ~#mesh_stat_strings.base, ~#mesh_stat_strings.offset + 48, 8);
    call #t~nondet9.base, #t~nondet9.offset := #Ultimate.alloc(14);
    call write~$Pointer$(#t~nondet9.base, #t~nondet9.offset, ~#mesh_stat_strings.base, ~#mesh_stat_strings.offset + 56, 8);
    havoc #t~nondet2.base, #t~nondet2.offset;
    havoc #t~nondet3.base, #t~nondet3.offset;
    havoc #t~nondet4.base, #t~nondet4.offset;
    havoc #t~nondet5.base, #t~nondet5.offset;
    havoc #t~nondet6.base, #t~nondet6.offset;
    havoc #t~nondet7.base, #t~nondet7.offset;
    havoc #t~nondet8.base, #t~nondet8.offset;
    havoc #t~nondet9.base, #t~nondet9.offset;
    call ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset := #Ultimate.alloc(686);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 0 + 0, 4);
    call write~int(2412, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 0 + 4, 2);
    call write~int(1, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 0 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 0 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 0 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 0 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 0 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 0 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 0 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 0 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 0 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 0 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 0 + 41, 8);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 49 + 0, 4);
    call write~int(2417, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 49 + 4, 2);
    call write~int(2, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 49 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 49 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 49 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 49 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 49 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 49 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 49 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 49 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 49 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 49 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 49 + 41, 8);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 98 + 0, 4);
    call write~int(2422, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 98 + 4, 2);
    call write~int(3, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 98 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 98 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 98 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 98 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 98 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 98 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 98 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 98 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 98 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 98 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 98 + 41, 8);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 147 + 0, 4);
    call write~int(2427, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 147 + 4, 2);
    call write~int(4, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 147 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 147 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 147 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 147 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 147 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 147 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 147 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 147 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 147 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 147 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 147 + 41, 8);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 196 + 0, 4);
    call write~int(2432, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 196 + 4, 2);
    call write~int(5, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 196 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 196 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 196 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 196 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 196 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 196 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 196 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 196 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 196 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 196 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 196 + 41, 8);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 245 + 0, 4);
    call write~int(2437, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 245 + 4, 2);
    call write~int(6, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 245 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 245 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 245 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 245 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 245 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 245 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 245 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 245 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 245 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 245 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 245 + 41, 8);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 294 + 0, 4);
    call write~int(2442, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 294 + 4, 2);
    call write~int(7, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 294 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 294 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 294 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 294 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 294 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 294 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 294 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 294 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 294 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 294 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 294 + 41, 8);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 343 + 0, 4);
    call write~int(2447, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 343 + 4, 2);
    call write~int(8, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 343 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 343 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 343 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 343 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 343 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 343 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 343 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 343 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 343 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 343 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 343 + 41, 8);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 392 + 0, 4);
    call write~int(2452, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 392 + 4, 2);
    call write~int(9, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 392 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 392 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 392 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 392 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 392 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 392 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 392 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 392 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 392 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 392 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 392 + 41, 8);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 441 + 0, 4);
    call write~int(2457, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 441 + 4, 2);
    call write~int(10, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 441 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 441 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 441 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 441 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 441 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 441 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 441 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 441 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 441 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 441 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 441 + 41, 8);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 490 + 0, 4);
    call write~int(2462, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 490 + 4, 2);
    call write~int(11, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 490 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 490 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 490 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 490 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 490 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 490 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 490 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 490 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 490 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 490 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 490 + 41, 8);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 539 + 0, 4);
    call write~int(2467, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 539 + 4, 2);
    call write~int(12, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 539 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 539 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 539 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 539 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 539 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 539 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 539 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 539 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 539 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 539 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 539 + 41, 8);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 588 + 0, 4);
    call write~int(2472, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 588 + 4, 2);
    call write~int(13, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 588 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 588 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 588 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 588 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 588 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 588 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 588 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 588 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 588 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 588 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 588 + 41, 8);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 637 + 0, 4);
    call write~int(2484, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 637 + 4, 2);
    call write~int(14, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 637 + 6, 2);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 637 + 8, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 637 + 12, 4);
    call write~int(30, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 637 + 16, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 637 + 20, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 637 + 24, 1);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 637 + 25, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 637 + 29, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 637 + 33, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 637 + 37, 4);
    call write~int(0, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset + 637 + 41, 8);
    call ~#lbs_rates.base, ~#lbs_rates.offset := #Ultimate.alloc(120);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 0 + 0, 4);
    call write~int(10, ~#lbs_rates.base, ~#lbs_rates.offset + 0 + 4, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 0 + 6, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 0 + 8, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 10 + 0, 4);
    call write~int(20, ~#lbs_rates.base, ~#lbs_rates.offset + 10 + 4, 2);
    call write~int(1, ~#lbs_rates.base, ~#lbs_rates.offset + 10 + 6, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 10 + 8, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 20 + 0, 4);
    call write~int(55, ~#lbs_rates.base, ~#lbs_rates.offset + 20 + 4, 2);
    call write~int(2, ~#lbs_rates.base, ~#lbs_rates.offset + 20 + 6, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 20 + 8, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 30 + 0, 4);
    call write~int(110, ~#lbs_rates.base, ~#lbs_rates.offset + 30 + 4, 2);
    call write~int(3, ~#lbs_rates.base, ~#lbs_rates.offset + 30 + 6, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 30 + 8, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 40 + 0, 4);
    call write~int(60, ~#lbs_rates.base, ~#lbs_rates.offset + 40 + 4, 2);
    call write~int(9, ~#lbs_rates.base, ~#lbs_rates.offset + 40 + 6, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 40 + 8, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 50 + 0, 4);
    call write~int(90, ~#lbs_rates.base, ~#lbs_rates.offset + 50 + 4, 2);
    call write~int(6, ~#lbs_rates.base, ~#lbs_rates.offset + 50 + 6, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 50 + 8, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 60 + 0, 4);
    call write~int(120, ~#lbs_rates.base, ~#lbs_rates.offset + 60 + 4, 2);
    call write~int(7, ~#lbs_rates.base, ~#lbs_rates.offset + 60 + 6, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 60 + 8, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 70 + 0, 4);
    call write~int(180, ~#lbs_rates.base, ~#lbs_rates.offset + 70 + 4, 2);
    call write~int(8, ~#lbs_rates.base, ~#lbs_rates.offset + 70 + 6, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 70 + 8, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 80 + 0, 4);
    call write~int(240, ~#lbs_rates.base, ~#lbs_rates.offset + 80 + 4, 2);
    call write~int(9, ~#lbs_rates.base, ~#lbs_rates.offset + 80 + 6, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 80 + 8, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 90 + 0, 4);
    call write~int(360, ~#lbs_rates.base, ~#lbs_rates.offset + 90 + 4, 2);
    call write~int(10, ~#lbs_rates.base, ~#lbs_rates.offset + 90 + 6, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 90 + 8, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 100 + 0, 4);
    call write~int(480, ~#lbs_rates.base, ~#lbs_rates.offset + 100 + 4, 2);
    call write~int(11, ~#lbs_rates.base, ~#lbs_rates.offset + 100 + 6, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 100 + 8, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 110 + 0, 4);
    call write~int(540, ~#lbs_rates.base, ~#lbs_rates.offset + 110 + 4, 2);
    call write~int(12, ~#lbs_rates.base, ~#lbs_rates.offset + 110 + 6, 2);
    call write~int(0, ~#lbs_rates.base, ~#lbs_rates.offset + 110 + 8, 2);
    call ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset := #Ultimate.alloc(62);
    call write~$Pointer$(~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 0, 8);
    call write~$Pointer$(~#lbs_rates.base, ~#lbs_rates.offset, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 8, 8);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 16, 4);
    call write~int(14, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 20, 4);
    call write~int(12, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 24, 4);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 0, 2);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 2, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 3, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 4, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 0 + 0, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 0 + 1, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 0 + 2, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 0 + 3, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 0 + 4, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 0 + 5, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 0 + 6, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 0 + 7, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 0 + 8, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 0 + 9, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 10, 2);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 12, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 13 + 0, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 13 + 1, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 28 + 5 + 13 + 2, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 49 + 0, 1);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 49 + 1, 4);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 49 + 5 + 0, 2);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 49 + 5 + 2, 2);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 49 + 5 + 4, 2);
    call write~int(0, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset + 49 + 5 + 6, 2);
    call ~#cipher_suites.base, ~#cipher_suites.offset := #Ultimate.alloc(16);
    call write~int(1027073, ~#cipher_suites.base, ~#cipher_suites.offset + 0, 4);
    call write~int(1027077, ~#cipher_suites.base, ~#cipher_suites.offset + 4, 4);
    call write~int(1027074, ~#cipher_suites.base, ~#cipher_suites.offset + 8, 4);
    call write~int(1027076, ~#cipher_suites.base, ~#cipher_suites.offset + 12, 4);
    call ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset := #Ultimate.alloc(696);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 32, 8);
    call write~$Pointer$(#funAddr~lbs_change_intf.base, #funAddr~lbs_change_intf.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 40, 8);
    call write~$Pointer$(#funAddr~lbs_cfg_add_key.base, #funAddr~lbs_cfg_add_key.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~lbs_cfg_del_key.base, #funAddr~lbs_cfg_del_key.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 64, 8);
    call write~$Pointer$(#funAddr~lbs_cfg_set_default_key.base, #funAddr~lbs_cfg_set_default_key.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 128, 8);
    call write~$Pointer$(#funAddr~lbs_cfg_get_station.base, #funAddr~lbs_cfg_get_station.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 232, 8);
    call write~$Pointer$(#funAddr~lbs_cfg_set_mesh_channel.base, #funAddr~lbs_cfg_set_mesh_channel.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 240, 8);
    call write~$Pointer$(#funAddr~lbs_cfg_set_monitor_channel.base, #funAddr~lbs_cfg_set_monitor_channel.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 248, 8);
    call write~$Pointer$(#funAddr~lbs_cfg_scan.base, #funAddr~lbs_cfg_scan.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 288, 8);
    call write~$Pointer$(#funAddr~lbs_cfg_connect.base, #funAddr~lbs_cfg_connect.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 296, 8);
    call write~$Pointer$(#funAddr~lbs_cfg_disconnect.base, #funAddr~lbs_cfg_disconnect.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 304, 8);
    call write~$Pointer$(#funAddr~lbs_join_ibss.base, #funAddr~lbs_join_ibss.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 312, 8);
    call write~$Pointer$(#funAddr~lbs_leave_ibss.base, #funAddr~lbs_leave_ibss.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 408, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 416, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 424, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 432, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 440, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 448, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 464, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 472, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 480, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 488, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 496, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 504, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 512, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 520, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 528, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 536, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 544, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 552, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 560, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 568, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 576, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 584, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 592, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 600, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 608, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 616, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 624, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 632, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 640, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 648, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 656, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 664, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 672, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 680, 8);
    call write~$Pointer$(0, 0, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset + 688, 8);
    ~lbs_region_code_to_index := ~lbs_region_code_to_index[0 := 0];
    ~lbs_region_code_to_index := ~lbs_region_code_to_index[1 := 0];
    ~lbs_region_code_to_index := ~lbs_region_code_to_index[2 := 0];
    ~lbs_region_code_to_index := ~lbs_region_code_to_index[3 := 0];
    ~lbs_region_code_to_index := ~lbs_region_code_to_index[4 := 0];
    ~lbs_region_code_to_index := ~lbs_region_code_to_index[5 := 0];
    call ~#confirm_sleep.base, ~#confirm_sleep.offset := #Ultimate.alloc(18);
    call write~int(0, ~#confirm_sleep.base, ~#confirm_sleep.offset + 0 + 0, 2);
    call write~int(0, ~#confirm_sleep.base, ~#confirm_sleep.offset + 0 + 2, 2);
    call write~int(0, ~#confirm_sleep.base, ~#confirm_sleep.offset + 0 + 4, 2);
    call write~int(0, ~#confirm_sleep.base, ~#confirm_sleep.offset + 0 + 6, 2);
    call write~int(0, ~#confirm_sleep.base, ~#confirm_sleep.offset + 8, 2);
    call write~int(0, ~#confirm_sleep.base, ~#confirm_sleep.offset + 10, 2);
    call write~int(0, ~#confirm_sleep.base, ~#confirm_sleep.offset + 12, 2);
    call write~int(0, ~#confirm_sleep.base, ~#confirm_sleep.offset + 14, 2);
    call write~int(0, ~#confirm_sleep.base, ~#confirm_sleep.offset + 16, 2);
    ~lbs_dir.base, ~lbs_dir.offset := 0, 0;
    call ~#debugfs_files.base, ~#debugfs_files.offset := #Ultimate.alloc(678);
    call #t~nondet2393.base, #t~nondet2393.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet2393.base,#t~nondet2393.offset + 0 := 105];
    #memory_int := #memory_int[#t~nondet2393.base,#t~nondet2393.offset + 1 := 110];
    #memory_int := #memory_int[#t~nondet2393.base,#t~nondet2393.offset + 2 := 102];
    #memory_int := #memory_int[#t~nondet2393.base,#t~nondet2393.offset + 3 := 111];
    #memory_int := #memory_int[#t~nondet2393.base,#t~nondet2393.offset + 4 := 0];
    call write~$Pointer$(#t~nondet2393.base, #t~nondet2393.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 0, 8);
    call write~int(292, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 8, 8);
    call write~$Pointer$(#funAddr~lbs_dev_info.base, #funAddr~lbs_dev_info.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~write_file_dummy.base, #funAddr~write_file_dummy.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 0 + 10 + 208, 8);
    call #t~nondet2394.base, #t~nondet2394.offset := #Ultimate.alloc(12);
    call write~$Pointer$(#t~nondet2394.base, #t~nondet2394.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 0, 8);
    call write~int(420, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 8, 8);
    call write~$Pointer$(#funAddr~lbs_sleepparams_read.base, #funAddr~lbs_sleepparams_read.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_sleepparams_write.base, #funAddr~lbs_sleepparams_write.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 226 + 10 + 208, 8);
    call #t~nondet2395.base, #t~nondet2395.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet2395.base, #t~nondet2395.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 0, 8);
    call write~int(420, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 8, 8);
    call write~$Pointer$(#funAddr~lbs_host_sleep_read.base, #funAddr~lbs_host_sleep_read.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_host_sleep_write.base, #funAddr~lbs_host_sleep_write.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_files.base, ~#debugfs_files.offset + 452 + 10 + 208, 8);
    havoc #t~nondet2393.base, #t~nondet2393.offset;
    havoc #t~nondet2394.base, #t~nondet2394.offset;
    havoc #t~nondet2395.base, #t~nondet2395.offset;
    call ~#debugfs_events_files.base, ~#debugfs_events_files.offset := #Ultimate.alloc(1356);
    call #t~nondet2396.base, #t~nondet2396.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet2396.base, #t~nondet2396.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 0, 8);
    call write~int(420, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 8, 8);
    call write~$Pointer$(#funAddr~lbs_lowrssi_read.base, #funAddr~lbs_lowrssi_read.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_lowrssi_write.base, #funAddr~lbs_lowrssi_write.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 0 + 10 + 208, 8);
    call #t~nondet2397.base, #t~nondet2397.offset := #Ultimate.alloc(8);
    call write~$Pointer$(#t~nondet2397.base, #t~nondet2397.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 0, 8);
    call write~int(420, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 8, 8);
    call write~$Pointer$(#funAddr~lbs_lowsnr_read.base, #funAddr~lbs_lowsnr_read.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_lowsnr_write.base, #funAddr~lbs_lowsnr_write.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 226 + 10 + 208, 8);
    call #t~nondet2398.base, #t~nondet2398.offset := #Ultimate.alloc(14);
    call write~$Pointer$(#t~nondet2398.base, #t~nondet2398.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 0, 8);
    call write~int(420, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 8, 8);
    call write~$Pointer$(#funAddr~lbs_failcount_read.base, #funAddr~lbs_failcount_read.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_failcount_write.base, #funAddr~lbs_failcount_write.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 452 + 10 + 208, 8);
    call #t~nondet2399.base, #t~nondet2399.offset := #Ultimate.alloc(14);
    call write~$Pointer$(#t~nondet2399.base, #t~nondet2399.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 0, 8);
    call write~int(420, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 8, 8);
    call write~$Pointer$(#funAddr~lbs_bcnmiss_read.base, #funAddr~lbs_bcnmiss_read.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_bcnmiss_write.base, #funAddr~lbs_bcnmiss_write.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 678 + 10 + 208, 8);
    call #t~nondet2400.base, #t~nondet2400.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet2400.base, #t~nondet2400.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 0, 8);
    call write~int(420, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 8, 8);
    call write~$Pointer$(#funAddr~lbs_highrssi_read.base, #funAddr~lbs_highrssi_read.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_highrssi_write.base, #funAddr~lbs_highrssi_write.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 904 + 10 + 208, 8);
    call #t~nondet2401.base, #t~nondet2401.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet2401.base, #t~nondet2401.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 0, 8);
    call write~int(420, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 8, 8);
    call write~$Pointer$(#funAddr~lbs_highsnr_read.base, #funAddr~lbs_highsnr_read.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_highsnr_write.base, #funAddr~lbs_highsnr_write.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_events_files.base, ~#debugfs_events_files.offset + 1130 + 10 + 208, 8);
    havoc #t~nondet2396.base, #t~nondet2396.offset;
    havoc #t~nondet2397.base, #t~nondet2397.offset;
    havoc #t~nondet2398.base, #t~nondet2398.offset;
    havoc #t~nondet2399.base, #t~nondet2399.offset;
    havoc #t~nondet2400.base, #t~nondet2400.offset;
    havoc #t~nondet2401.base, #t~nondet2401.offset;
    call ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset := #Ultimate.alloc(1356);
    call #t~nondet2402.base, #t~nondet2402.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet2402.base,#t~nondet2402.offset + 0 := 114];
    #memory_int := #memory_int[#t~nondet2402.base,#t~nondet2402.offset + 1 := 100];
    #memory_int := #memory_int[#t~nondet2402.base,#t~nondet2402.offset + 2 := 109];
    #memory_int := #memory_int[#t~nondet2402.base,#t~nondet2402.offset + 3 := 97];
    #memory_int := #memory_int[#t~nondet2402.base,#t~nondet2402.offset + 4 := 99];
    #memory_int := #memory_int[#t~nondet2402.base,#t~nondet2402.offset + 5 := 0];
    call write~$Pointer$(#t~nondet2402.base, #t~nondet2402.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 0, 8);
    call write~int(420, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 8, 8);
    call write~$Pointer$(#funAddr~lbs_rdmac_read.base, #funAddr~lbs_rdmac_read.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_rdmac_write.base, #funAddr~lbs_rdmac_write.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 0 + 10 + 208, 8);
    call #t~nondet2403.base, #t~nondet2403.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet2403.base,#t~nondet2403.offset + 0 := 119];
    #memory_int := #memory_int[#t~nondet2403.base,#t~nondet2403.offset + 1 := 114];
    #memory_int := #memory_int[#t~nondet2403.base,#t~nondet2403.offset + 2 := 109];
    #memory_int := #memory_int[#t~nondet2403.base,#t~nondet2403.offset + 3 := 97];
    #memory_int := #memory_int[#t~nondet2403.base,#t~nondet2403.offset + 4 := 99];
    #memory_int := #memory_int[#t~nondet2403.base,#t~nondet2403.offset + 5 := 0];
    call write~$Pointer$(#t~nondet2403.base, #t~nondet2403.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 0, 8);
    call write~int(384, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 8, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_wrmac_write.base, #funAddr~lbs_wrmac_write.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 226 + 10 + 208, 8);
    call #t~nondet2404.base, #t~nondet2404.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet2404.base,#t~nondet2404.offset + 0 := 114];
    #memory_int := #memory_int[#t~nondet2404.base,#t~nondet2404.offset + 1 := 100];
    #memory_int := #memory_int[#t~nondet2404.base,#t~nondet2404.offset + 2 := 98];
    #memory_int := #memory_int[#t~nondet2404.base,#t~nondet2404.offset + 3 := 98];
    #memory_int := #memory_int[#t~nondet2404.base,#t~nondet2404.offset + 4 := 112];
    #memory_int := #memory_int[#t~nondet2404.base,#t~nondet2404.offset + 5 := 0];
    call write~$Pointer$(#t~nondet2404.base, #t~nondet2404.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 0, 8);
    call write~int(420, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 8, 8);
    call write~$Pointer$(#funAddr~lbs_rdbbp_read.base, #funAddr~lbs_rdbbp_read.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_rdbbp_write.base, #funAddr~lbs_rdbbp_write.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 452 + 10 + 208, 8);
    call #t~nondet2405.base, #t~nondet2405.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet2405.base,#t~nondet2405.offset + 0 := 119];
    #memory_int := #memory_int[#t~nondet2405.base,#t~nondet2405.offset + 1 := 114];
    #memory_int := #memory_int[#t~nondet2405.base,#t~nondet2405.offset + 2 := 98];
    #memory_int := #memory_int[#t~nondet2405.base,#t~nondet2405.offset + 3 := 98];
    #memory_int := #memory_int[#t~nondet2405.base,#t~nondet2405.offset + 4 := 112];
    #memory_int := #memory_int[#t~nondet2405.base,#t~nondet2405.offset + 5 := 0];
    call write~$Pointer$(#t~nondet2405.base, #t~nondet2405.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 0, 8);
    call write~int(384, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 8, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_wrbbp_write.base, #funAddr~lbs_wrbbp_write.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 678 + 10 + 208, 8);
    call #t~nondet2406.base, #t~nondet2406.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet2406.base,#t~nondet2406.offset + 0 := 114];
    #memory_int := #memory_int[#t~nondet2406.base,#t~nondet2406.offset + 1 := 100];
    #memory_int := #memory_int[#t~nondet2406.base,#t~nondet2406.offset + 2 := 114];
    #memory_int := #memory_int[#t~nondet2406.base,#t~nondet2406.offset + 3 := 102];
    #memory_int := #memory_int[#t~nondet2406.base,#t~nondet2406.offset + 4 := 0];
    call write~$Pointer$(#t~nondet2406.base, #t~nondet2406.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 0, 8);
    call write~int(420, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 8, 8);
    call write~$Pointer$(#funAddr~lbs_rdrf_read.base, #funAddr~lbs_rdrf_read.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_rdrf_write.base, #funAddr~lbs_rdrf_write.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 904 + 10 + 208, 8);
    call #t~nondet2407.base, #t~nondet2407.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet2407.base,#t~nondet2407.offset + 0 := 119];
    #memory_int := #memory_int[#t~nondet2407.base,#t~nondet2407.offset + 1 := 114];
    #memory_int := #memory_int[#t~nondet2407.base,#t~nondet2407.offset + 2 := 114];
    #memory_int := #memory_int[#t~nondet2407.base,#t~nondet2407.offset + 3 := 102];
    #memory_int := #memory_int[#t~nondet2407.base,#t~nondet2407.offset + 4 := 0];
    call write~$Pointer$(#t~nondet2407.base, #t~nondet2407.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 0, 8);
    call write~int(384, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 8, 2);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 0, 8);
    call write~$Pointer$(#funAddr~generic_file_llseek.base, #funAddr~generic_file_llseek.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 8, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 16, 8);
    call write~$Pointer$(#funAddr~lbs_wrrf_write.base, #funAddr~lbs_wrrf_write.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 24, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 32, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 40, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 48, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 56, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 64, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 72, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 88, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 96, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 104, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 112, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 120, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 128, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 136, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 144, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 152, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 160, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 168, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 176, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 184, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 192, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 200, 8);
    call write~$Pointer$(0, 0, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset + 1130 + 10 + 208, 8);
    havoc #t~nondet2402.base, #t~nondet2402.offset;
    havoc #t~nondet2403.base, #t~nondet2403.offset;
    havoc #t~nondet2404.base, #t~nondet2404.offset;
    havoc #t~nondet2405.base, #t~nondet2405.offset;
    havoc #t~nondet2406.base, #t~nondet2406.offset;
    havoc #t~nondet2407.base, #t~nondet2407.offset;
    call ~#items.base, ~#items.offset := #Ultimate.alloc(80);
    call write~int(112, ~#items.base, ~#items.offset + 0 + 0 + 0, 1);
    call write~int(115, ~#items.base, ~#items.offset + 0 + 0 + 1, 1);
    call write~int(109, ~#items.base, ~#items.offset + 0 + 0 + 2, 1);
    call write~int(111, ~#items.base, ~#items.offset + 0 + 0 + 3, 1);
    call write~int(100, ~#items.base, ~#items.offset + 0 + 0 + 4, 1);
    call write~int(101, ~#items.base, ~#items.offset + 0 + 0 + 5, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 6, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 7, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 8, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 9, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 10, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 11, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 12, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 13, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 14, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 15, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 16, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 17, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 18, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 19, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 20, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 21, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 22, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 23, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 24, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 25, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 26, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 27, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 28, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 29, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 30, 1);
    call write~int(0, ~#items.base, ~#items.offset + 0 + 0 + 31, 1);
    call write~int(2, ~#items.base, ~#items.offset + 0 + 32, 4);
    call write~int(604, ~#items.base, ~#items.offset + 0 + 36, 4);
    call write~int(112, ~#items.base, ~#items.offset + 40 + 0 + 0, 1);
    call write~int(115, ~#items.base, ~#items.offset + 40 + 0 + 1, 1);
    call write~int(115, ~#items.base, ~#items.offset + 40 + 0 + 2, 1);
    call write~int(116, ~#items.base, ~#items.offset + 40 + 0 + 3, 1);
    call write~int(97, ~#items.base, ~#items.offset + 40 + 0 + 4, 1);
    call write~int(116, ~#items.base, ~#items.offset + 40 + 0 + 5, 1);
    call write~int(101, ~#items.base, ~#items.offset + 40 + 0 + 6, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 7, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 8, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 9, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 10, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 11, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 12, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 13, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 14, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 15, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 16, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 17, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 18, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 19, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 20, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 21, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 22, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 23, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 24, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 25, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 26, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 27, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 28, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 29, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 30, 1);
    call write~int(0, ~#items.base, ~#items.offset + 40 + 0 + 31, 1);
    call write~int(4, ~#items.base, ~#items.offset + 40 + 32, 4);
    call write~int(608, ~#items.base, ~#items.offset + 40 + 36, 4);
    call ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset := #Ultimate.alloc(216);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 0, 8);
    call write~$Pointer$(#funAddr~default_llseek.base, #funAddr~default_llseek.offset, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 8, 8);
    call write~$Pointer$(#funAddr~lbs_debugfs_read.base, #funAddr~lbs_debugfs_read.offset, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 16, 8);
    call write~$Pointer$(#funAddr~lbs_debugfs_write.base, #funAddr~lbs_debugfs_write.offset, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 80, 8);
    call write~$Pointer$(#funAddr~simple_open.base, #funAddr~simple_open.offset, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset + 208, 8);
    call ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset := #Ultimate.alloc(368);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~lbs_ethtool_get_drvinfo.base, #funAddr~lbs_ethtool_get_drvinfo.offset, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 32, 8);
    call write~$Pointer$(#funAddr~lbs_ethtool_get_wol.base, #funAddr~lbs_ethtool_get_wol.offset, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 40, 8);
    call write~$Pointer$(#funAddr~lbs_ethtool_set_wol.base, #funAddr~lbs_ethtool_set_wol.offset, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 80, 8);
    call write~$Pointer$(#funAddr~lbs_ethtool_get_eeprom_len.base, #funAddr~lbs_ethtool_get_eeprom_len.offset, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 88, 8);
    call write~$Pointer$(#funAddr~lbs_ethtool_get_eeprom.base, #funAddr~lbs_ethtool_get_eeprom.offset, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 160, 8);
    call write~$Pointer$(#funAddr~lbs_mesh_ethtool_get_strings.base, #funAddr~lbs_mesh_ethtool_get_strings.offset, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 176, 8);
    call write~$Pointer$(#funAddr~lbs_mesh_ethtool_get_stats.base, #funAddr~lbs_mesh_ethtool_get_stats.offset, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 216, 8);
    call write~$Pointer$(#funAddr~lbs_mesh_ethtool_get_sset_count.base, #funAddr~lbs_mesh_ethtool_get_sset_count.offset, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset + 360, 8);
    ~fw_data_rates := ~fw_data_rates[0 := 2];
    ~fw_data_rates := ~fw_data_rates[1 := 4];
    ~fw_data_rates := ~fw_data_rates[2 := 11];
    ~fw_data_rates := ~fw_data_rates[3 := 22];
    ~fw_data_rates := ~fw_data_rates[4 := 0];
    ~fw_data_rates := ~fw_data_rates[5 := 12];
    ~fw_data_rates := ~fw_data_rates[6 := 18];
    ~fw_data_rates := ~fw_data_rates[7 := 24];
    ~fw_data_rates := ~fw_data_rates[8 := 36];
    ~fw_data_rates := ~fw_data_rates[9 := 48];
    ~fw_data_rates := ~fw_data_rates[10 := 72];
    ~fw_data_rates := ~fw_data_rates[11 := 96];
    ~fw_data_rates := ~fw_data_rates[12 := 108];
    ~fw_data_rates := ~fw_data_rates[13 := 0];
    call ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset := #Ultimate.alloc(472);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~lbs_dev_open.base, #funAddr~lbs_dev_open.offset, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~lbs_eth_stop.base, #funAddr~lbs_eth_stop.offset, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~lbs_hard_start_xmit.base, #funAddr~lbs_hard_start_xmit.offset, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~lbs_set_multicast_list.base, #funAddr~lbs_set_multicast_list.offset, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~lbs_set_mac_address.base, #funAddr~lbs_set_mac_address.offset, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 64, 8);
    call write~$Pointer$(#funAddr~eth_validate_addr.base, #funAddr~eth_validate_addr.offset, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 88, 8);
    call write~$Pointer$(#funAddr~eth_change_mtu.base, #funAddr~eth_change_mtu.offset, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 408, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 416, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 424, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 432, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 440, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 448, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset + 464, 8);
    call ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset := #Ultimate.alloc(43);
    call #t~nondet4085.base, #t~nondet4085.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet4085.base, #t~nondet4085.offset, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 0 + 0, 8);
    call write~int(420, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 0 + 8, 2);
    call write~int(0, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 0 + 10, 1);
    call write~$Pointer$(0, 0, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 0 + 11, 8);
    call write~int(0, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 0 + 19 + 0 + 0 + 0, 1);
    call write~int(0, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 0 + 19 + 0 + 1 + 0, 1);
    call write~int(0, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 0 + 19 + 0 + 2 + 0, 1);
    call write~int(0, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 0 + 19 + 0 + 3 + 0, 1);
    call write~int(0, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 0 + 19 + 0 + 4 + 0, 1);
    call write~int(0, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 0 + 19 + 0 + 5 + 0, 1);
    call write~int(0, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 0 + 19 + 0 + 6 + 0, 1);
    call write~int(0, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 0 + 19 + 0 + 7 + 0, 1);
    call write~$Pointer$(#funAddr~lbs_mesh_get.base, #funAddr~lbs_mesh_get.offset, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 27, 8);
    call write~$Pointer$(#funAddr~lbs_mesh_set.base, #funAddr~lbs_mesh_set.offset, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset + 35, 8);
    havoc #t~nondet4085.base, #t~nondet4085.offset;
    call ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset := #Ultimate.alloc(43);
    call #t~nondet4086.base, #t~nondet4086.offset := #Ultimate.alloc(13);
    call write~$Pointer$(#t~nondet4086.base, #t~nondet4086.offset, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 0 + 0, 8);
    call write~int(420, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 0 + 8, 2);
    call write~int(0, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 0 + 10, 1);
    call write~$Pointer$(0, 0, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 0 + 11, 8);
    call write~int(0, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 0 + 19 + 0 + 0 + 0, 1);
    call write~int(0, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 0 + 19 + 0 + 1 + 0, 1);
    call write~int(0, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 0 + 19 + 0 + 2 + 0, 1);
    call write~int(0, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 0 + 19 + 0 + 3 + 0, 1);
    call write~int(0, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 0 + 19 + 0 + 4 + 0, 1);
    call write~int(0, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 0 + 19 + 0 + 5 + 0, 1);
    call write~int(0, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 0 + 19 + 0 + 6 + 0, 1);
    call write~int(0, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 0 + 19 + 0 + 7 + 0, 1);
    call write~$Pointer$(#funAddr~lbs_anycast_get.base, #funAddr~lbs_anycast_get.offset, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 27, 8);
    call write~$Pointer$(#funAddr~lbs_anycast_set.base, #funAddr~lbs_anycast_set.offset, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 35, 8);
    havoc #t~nondet4086.base, #t~nondet4086.offset;
    call ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset := #Ultimate.alloc(43);
    call #t~nondet4087.base, #t~nondet4087.offset := #Ultimate.alloc(14);
    call write~$Pointer$(#t~nondet4087.base, #t~nondet4087.offset, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 0 + 0, 8);
    call write~int(420, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 0 + 8, 2);
    call write~int(0, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 0 + 10, 1);
    call write~$Pointer$(0, 0, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 0 + 11, 8);
    call write~int(0, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 0 + 19 + 0 + 0 + 0, 1);
    call write~int(0, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 0 + 19 + 0 + 1 + 0, 1);
    call write~int(0, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 0 + 19 + 0 + 2 + 0, 1);
    call write~int(0, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 0 + 19 + 0 + 3 + 0, 1);
    call write~int(0, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 0 + 19 + 0 + 4 + 0, 1);
    call write~int(0, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 0 + 19 + 0 + 5 + 0, 1);
    call write~int(0, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 0 + 19 + 0 + 6 + 0, 1);
    call write~int(0, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 0 + 19 + 0 + 7 + 0, 1);
    call write~$Pointer$(#funAddr~lbs_prb_rsp_limit_get.base, #funAddr~lbs_prb_rsp_limit_get.offset, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 27, 8);
    call write~$Pointer$(#funAddr~lbs_prb_rsp_limit_set.base, #funAddr~lbs_prb_rsp_limit_set.offset, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 35, 8);
    havoc #t~nondet4087.base, #t~nondet4087.offset;
    call ~#lbs_mesh_sysfs_entries.base, ~#lbs_mesh_sysfs_entries.offset := #Ultimate.alloc(24);
    call write~$Pointer$(~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset + 0, ~#lbs_mesh_sysfs_entries.base, ~#lbs_mesh_sysfs_entries.offset + 0, 8);
    call write~$Pointer$(~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset + 0, ~#lbs_mesh_sysfs_entries.base, ~#lbs_mesh_sysfs_entries.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#lbs_mesh_sysfs_entries.base, ~#lbs_mesh_sysfs_entries.offset + 16, 8);
    call ~#lbs_mesh_attr_group.base, ~#lbs_mesh_attr_group.offset := #Ultimate.alloc(32);
    call write~$Pointer$(0, 0, ~#lbs_mesh_attr_group.base, ~#lbs_mesh_attr_group.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#lbs_mesh_attr_group.base, ~#lbs_mesh_attr_group.offset + 8, 8);
    call write~$Pointer$(~#lbs_mesh_sysfs_entries.base, ~#lbs_mesh_sysfs_entries.offset, ~#lbs_mesh_attr_group.base, ~#lbs_mesh_attr_group.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#lbs_mesh_attr_group.base, ~#lbs_mesh_attr_group.offset + 24, 8);
    call ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset := #Ultimate.alloc(43);
    call #t~nondet4210.base, #t~nondet4210.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet4210.base, #t~nondet4210.offset, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 0 + 0, 8);
    call write~int(420, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 0 + 8, 2);
    call write~int(0, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 0 + 10, 1);
    call write~$Pointer$(0, 0, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 0 + 11, 8);
    call write~int(0, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 0 + 19 + 0 + 0 + 0, 1);
    call write~int(0, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 0 + 19 + 0 + 1 + 0, 1);
    call write~int(0, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 0 + 19 + 0 + 2 + 0, 1);
    call write~int(0, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 0 + 19 + 0 + 3 + 0, 1);
    call write~int(0, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 0 + 19 + 0 + 4 + 0, 1);
    call write~int(0, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 0 + 19 + 0 + 5 + 0, 1);
    call write~int(0, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 0 + 19 + 0 + 6 + 0, 1);
    call write~int(0, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 0 + 19 + 0 + 7 + 0, 1);
    call write~$Pointer$(#funAddr~bootflag_get.base, #funAddr~bootflag_get.offset, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 27, 8);
    call write~$Pointer$(#funAddr~bootflag_set.base, #funAddr~bootflag_set.offset, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 35, 8);
    havoc #t~nondet4210.base, #t~nondet4210.offset;
    call ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset := #Ultimate.alloc(43);
    call #t~nondet4211.base, #t~nondet4211.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet4211.base, #t~nondet4211.offset, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 0 + 0, 8);
    call write~int(420, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 0 + 8, 2);
    call write~int(0, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 0 + 10, 1);
    call write~$Pointer$(0, 0, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 0 + 11, 8);
    call write~int(0, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 0 + 19 + 0 + 0 + 0, 1);
    call write~int(0, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 0 + 19 + 0 + 1 + 0, 1);
    call write~int(0, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 0 + 19 + 0 + 2 + 0, 1);
    call write~int(0, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 0 + 19 + 0 + 3 + 0, 1);
    call write~int(0, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 0 + 19 + 0 + 4 + 0, 1);
    call write~int(0, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 0 + 19 + 0 + 5 + 0, 1);
    call write~int(0, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 0 + 19 + 0 + 6 + 0, 1);
    call write~int(0, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 0 + 19 + 0 + 7 + 0, 1);
    call write~$Pointer$(#funAddr~boottime_get.base, #funAddr~boottime_get.offset, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 27, 8);
    call write~$Pointer$(#funAddr~boottime_set.base, #funAddr~boottime_set.offset, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 35, 8);
    havoc #t~nondet4211.base, #t~nondet4211.offset;
    call ~#dev_attr_channel.base, ~#dev_attr_channel.offset := #Ultimate.alloc(43);
    call #t~nondet4212.base, #t~nondet4212.offset := #Ultimate.alloc(8);
    call write~$Pointer$(#t~nondet4212.base, #t~nondet4212.offset, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 0 + 0, 8);
    call write~int(420, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 0 + 8, 2);
    call write~int(0, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 0 + 10, 1);
    call write~$Pointer$(0, 0, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 0 + 11, 8);
    call write~int(0, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 0 + 19 + 0 + 0 + 0, 1);
    call write~int(0, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 0 + 19 + 0 + 1 + 0, 1);
    call write~int(0, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 0 + 19 + 0 + 2 + 0, 1);
    call write~int(0, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 0 + 19 + 0 + 3 + 0, 1);
    call write~int(0, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 0 + 19 + 0 + 4 + 0, 1);
    call write~int(0, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 0 + 19 + 0 + 5 + 0, 1);
    call write~int(0, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 0 + 19 + 0 + 6 + 0, 1);
    call write~int(0, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 0 + 19 + 0 + 7 + 0, 1);
    call write~$Pointer$(#funAddr~channel_get.base, #funAddr~channel_get.offset, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 27, 8);
    call write~$Pointer$(#funAddr~channel_set.base, #funAddr~channel_set.offset, ~#dev_attr_channel.base, ~#dev_attr_channel.offset + 35, 8);
    havoc #t~nondet4212.base, #t~nondet4212.offset;
    call ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset := #Ultimate.alloc(43);
    call #t~nondet4213.base, #t~nondet4213.offset := #Ultimate.alloc(8);
    call write~$Pointer$(#t~nondet4213.base, #t~nondet4213.offset, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 0 + 0, 8);
    call write~int(420, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 0 + 8, 2);
    call write~int(0, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 0 + 10, 1);
    call write~$Pointer$(0, 0, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 0 + 11, 8);
    call write~int(0, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 0 + 19 + 0 + 0 + 0, 1);
    call write~int(0, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 0 + 19 + 0 + 1 + 0, 1);
    call write~int(0, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 0 + 19 + 0 + 2 + 0, 1);
    call write~int(0, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 0 + 19 + 0 + 3 + 0, 1);
    call write~int(0, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 0 + 19 + 0 + 4 + 0, 1);
    call write~int(0, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 0 + 19 + 0 + 5 + 0, 1);
    call write~int(0, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 0 + 19 + 0 + 6 + 0, 1);
    call write~int(0, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 0 + 19 + 0 + 7 + 0, 1);
    call write~$Pointer$(#funAddr~mesh_id_get.base, #funAddr~mesh_id_get.offset, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 27, 8);
    call write~$Pointer$(#funAddr~mesh_id_set.base, #funAddr~mesh_id_set.offset, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 35, 8);
    havoc #t~nondet4213.base, #t~nondet4213.offset;
    call ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset := #Ultimate.alloc(43);
    call #t~nondet4214.base, #t~nondet4214.offset := #Ultimate.alloc(12);
    call write~$Pointer$(#t~nondet4214.base, #t~nondet4214.offset, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 0 + 0, 8);
    call write~int(420, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 0 + 8, 2);
    call write~int(0, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 0 + 10, 1);
    call write~$Pointer$(0, 0, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 0 + 11, 8);
    call write~int(0, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 0 + 19 + 0 + 0 + 0, 1);
    call write~int(0, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 0 + 19 + 0 + 1 + 0, 1);
    call write~int(0, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 0 + 19 + 0 + 2 + 0, 1);
    call write~int(0, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 0 + 19 + 0 + 3 + 0, 1);
    call write~int(0, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 0 + 19 + 0 + 4 + 0, 1);
    call write~int(0, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 0 + 19 + 0 + 5 + 0, 1);
    call write~int(0, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 0 + 19 + 0 + 6 + 0, 1);
    call write~int(0, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 0 + 19 + 0 + 7 + 0, 1);
    call write~$Pointer$(#funAddr~protocol_id_get.base, #funAddr~protocol_id_get.offset, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 27, 8);
    call write~$Pointer$(#funAddr~protocol_id_set.base, #funAddr~protocol_id_set.offset, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 35, 8);
    havoc #t~nondet4214.base, #t~nondet4214.offset;
    call ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset := #Ultimate.alloc(43);
    call #t~nondet4215.base, #t~nondet4215.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet4215.base, #t~nondet4215.offset, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 0 + 0, 8);
    call write~int(420, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 0 + 8, 2);
    call write~int(0, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 0 + 10, 1);
    call write~$Pointer$(0, 0, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 0 + 11, 8);
    call write~int(0, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 0 + 19 + 0 + 0 + 0, 1);
    call write~int(0, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 0 + 19 + 0 + 1 + 0, 1);
    call write~int(0, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 0 + 19 + 0 + 2 + 0, 1);
    call write~int(0, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 0 + 19 + 0 + 3 + 0, 1);
    call write~int(0, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 0 + 19 + 0 + 4 + 0, 1);
    call write~int(0, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 0 + 19 + 0 + 5 + 0, 1);
    call write~int(0, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 0 + 19 + 0 + 6 + 0, 1);
    call write~int(0, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 0 + 19 + 0 + 7 + 0, 1);
    call write~$Pointer$(#funAddr~metric_id_get.base, #funAddr~metric_id_get.offset, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 27, 8);
    call write~$Pointer$(#funAddr~metric_id_set.base, #funAddr~metric_id_set.offset, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 35, 8);
    havoc #t~nondet4215.base, #t~nondet4215.offset;
    call ~#dev_attr_capability.base, ~#dev_attr_capability.offset := #Ultimate.alloc(43);
    call #t~nondet4216.base, #t~nondet4216.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet4216.base, #t~nondet4216.offset, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 0 + 0, 8);
    call write~int(420, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 0 + 8, 2);
    call write~int(0, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 0 + 10, 1);
    call write~$Pointer$(0, 0, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 0 + 11, 8);
    call write~int(0, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 0 + 19 + 0 + 0 + 0, 1);
    call write~int(0, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 0 + 19 + 0 + 1 + 0, 1);
    call write~int(0, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 0 + 19 + 0 + 2 + 0, 1);
    call write~int(0, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 0 + 19 + 0 + 3 + 0, 1);
    call write~int(0, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 0 + 19 + 0 + 4 + 0, 1);
    call write~int(0, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 0 + 19 + 0 + 5 + 0, 1);
    call write~int(0, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 0 + 19 + 0 + 6 + 0, 1);
    call write~int(0, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 0 + 19 + 0 + 7 + 0, 1);
    call write~$Pointer$(#funAddr~capability_get.base, #funAddr~capability_get.offset, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 27, 8);
    call write~$Pointer$(#funAddr~capability_set.base, #funAddr~capability_set.offset, ~#dev_attr_capability.base, ~#dev_attr_capability.offset + 35, 8);
    havoc #t~nondet4216.base, #t~nondet4216.offset;
    call ~#boot_opts_attrs.base, ~#boot_opts_attrs.offset := #Ultimate.alloc(32);
    call write~$Pointer$(~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset + 0, ~#boot_opts_attrs.base, ~#boot_opts_attrs.offset + 0, 8);
    call write~$Pointer$(~#dev_attr_boottime.base, ~#dev_attr_boottime.offset + 0, ~#boot_opts_attrs.base, ~#boot_opts_attrs.offset + 8, 8);
    call write~$Pointer$(~#dev_attr_channel.base, ~#dev_attr_channel.offset + 0, ~#boot_opts_attrs.base, ~#boot_opts_attrs.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#boot_opts_attrs.base, ~#boot_opts_attrs.offset + 24, 8);
    call ~#boot_opts_group.base, ~#boot_opts_group.offset := #Ultimate.alloc(32);
    call #t~nondet4217.base, #t~nondet4217.offset := #Ultimate.alloc(13);
    call write~$Pointer$(#t~nondet4217.base, #t~nondet4217.offset, ~#boot_opts_group.base, ~#boot_opts_group.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#boot_opts_group.base, ~#boot_opts_group.offset + 8, 8);
    call write~$Pointer$(~#boot_opts_attrs.base, ~#boot_opts_attrs.offset, ~#boot_opts_group.base, ~#boot_opts_group.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#boot_opts_group.base, ~#boot_opts_group.offset + 24, 8);
    havoc #t~nondet4217.base, #t~nondet4217.offset;
    call ~#mesh_ie_attrs.base, ~#mesh_ie_attrs.offset := #Ultimate.alloc(40);
    call write~$Pointer$(~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset + 0, ~#mesh_ie_attrs.base, ~#mesh_ie_attrs.offset + 0, 8);
    call write~$Pointer$(~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset + 0, ~#mesh_ie_attrs.base, ~#mesh_ie_attrs.offset + 8, 8);
    call write~$Pointer$(~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset + 0, ~#mesh_ie_attrs.base, ~#mesh_ie_attrs.offset + 16, 8);
    call write~$Pointer$(~#dev_attr_capability.base, ~#dev_attr_capability.offset + 0, ~#mesh_ie_attrs.base, ~#mesh_ie_attrs.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#mesh_ie_attrs.base, ~#mesh_ie_attrs.offset + 32, 8);
    call ~#mesh_ie_group.base, ~#mesh_ie_group.offset := #Ultimate.alloc(32);
    call #t~nondet4218.base, #t~nondet4218.offset := #Ultimate.alloc(8);
    call write~$Pointer$(#t~nondet4218.base, #t~nondet4218.offset, ~#mesh_ie_group.base, ~#mesh_ie_group.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#mesh_ie_group.base, ~#mesh_ie_group.offset + 8, 8);
    call write~$Pointer$(~#mesh_ie_attrs.base, ~#mesh_ie_attrs.offset, ~#mesh_ie_group.base, ~#mesh_ie_group.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#mesh_ie_group.base, ~#mesh_ie_group.offset + 24, 8);
    havoc #t~nondet4218.base, #t~nondet4218.offset;
    call ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset := #Ultimate.alloc(472);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~lbs_mesh_dev_open.base, #funAddr~lbs_mesh_dev_open.offset, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~lbs_mesh_stop.base, #funAddr~lbs_mesh_stop.offset, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~lbs_hard_start_xmit.base, #funAddr~lbs_hard_start_xmit.offset, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~lbs_set_multicast_list.base, #funAddr~lbs_set_multicast_list.offset, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~lbs_set_mac_address.base, #funAddr~lbs_set_mac_address.offset, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 408, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 416, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 424, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 432, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 440, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 448, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset + 464, 8);
    ~LDV_MUTEXES_i_mutex_of_inode := 0;
    ~LDV_MUTEXES_lock := 0;
    ~LDV_MUTEXES_lock_of_lbs_private := 0;
    ~LDV_MUTEXES_mutex_of_device := 0;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~lbs_debug, ~szStates.base, ~szStates.offset, ~len, ~num_of_items, ~#lbs_driver_version.base, ~#lbs_driver_version.offset, ~#lbs_disablemesh.base, ~#lbs_disablemesh.offset, ~#mesh_stat_strings.base, ~#mesh_stat_strings.offset, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset, ~#lbs_rates.base, ~#lbs_rates.offset, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset, ~#cipher_suites.base, ~#cipher_suites.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset, ~lbs_region_code_to_index, ~#confirm_sleep.base, ~#confirm_sleep.offset, ~lbs_dir.base, ~lbs_dir.offset, ~#debugfs_files.base, ~#debugfs_files.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset, ~#items.base, ~#items.offset, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset, ~fw_data_rates, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset, ~#lbs_mesh_sysfs_entries.base, ~#lbs_mesh_sysfs_entries.offset, ~#lbs_mesh_attr_group.base, ~#lbs_mesh_attr_group.offset, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset, ~#dev_attr_channel.base, ~#dev_attr_channel.offset, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset, ~#dev_attr_capability.base, ~#dev_attr_capability.offset, ~#boot_opts_attrs.base, ~#boot_opts_attrs.offset, ~#boot_opts_group.base, ~#boot_opts_group.offset, ~#mesh_ie_attrs.base, ~#mesh_ie_attrs.offset, ~#mesh_ie_group.base, ~#mesh_ie_group.offset, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset, ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_lock_of_lbs_private, ~LDV_MUTEXES_mutex_of_device, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_check_final_state() returns (){
  loc11:
    call ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit((if ~LDV_MUTEXES_i_mutex_of_inode % 256 == 0 then 1 else 0));
    return;
}

procedure ldv_check_final_state() returns ();
modifies ;

implementation ULTIMATE.start() returns (){
    var #t~ret4478 : int;

  loc12:
    call ULTIMATE.init();
    call #t~ret4478 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~lbs_debug, ~szStates.base, ~szStates.offset, ~len, ~num_of_items, ~#lbs_driver_version.base, ~#lbs_driver_version.offset, ~#lbs_disablemesh.base, ~#lbs_disablemesh.offset, ~#mesh_stat_strings.base, ~#mesh_stat_strings.offset, ~#lbs_2ghz_channels.base, ~#lbs_2ghz_channels.offset, ~#lbs_rates.base, ~#lbs_rates.offset, ~#lbs_band_2ghz.base, ~#lbs_band_2ghz.offset, ~#cipher_suites.base, ~#cipher_suites.offset, ~#lbs_cfg80211_ops.base, ~#lbs_cfg80211_ops.offset, ~lbs_region_code_to_index, ~#confirm_sleep.base, ~#confirm_sleep.offset, ~lbs_dir.base, ~lbs_dir.offset, ~#debugfs_files.base, ~#debugfs_files.offset, ~#debugfs_events_files.base, ~#debugfs_events_files.offset, ~#debugfs_regs_files.base, ~#debugfs_regs_files.offset, ~#items.base, ~#items.offset, ~#lbs_debug_fops.base, ~#lbs_debug_fops.offset, ~#lbs_ethtool_ops.base, ~#lbs_ethtool_ops.offset, ~fw_data_rates, ~#lbs_netdev_ops.base, ~#lbs_netdev_ops.offset, ~#dev_attr_lbs_mesh.base, ~#dev_attr_lbs_mesh.offset, ~#dev_attr_anycast_mask.base, ~#dev_attr_anycast_mask.offset, ~#dev_attr_prb_rsp_limit.base, ~#dev_attr_prb_rsp_limit.offset, ~#lbs_mesh_sysfs_entries.base, ~#lbs_mesh_sysfs_entries.offset, ~#lbs_mesh_attr_group.base, ~#lbs_mesh_attr_group.offset, ~#dev_attr_bootflag.base, ~#dev_attr_bootflag.offset, ~#dev_attr_boottime.base, ~#dev_attr_boottime.offset, ~#dev_attr_channel.base, ~#dev_attr_channel.offset, ~#dev_attr_mesh_id.base, ~#dev_attr_mesh_id.offset, ~#dev_attr_protocol_id.base, ~#dev_attr_protocol_id.offset, ~#dev_attr_metric_id.base, ~#dev_attr_metric_id.offset, ~#dev_attr_capability.base, ~#dev_attr_capability.offset, ~#boot_opts_attrs.base, ~#boot_opts_attrs.offset, ~#boot_opts_group.base, ~#boot_opts_group.offset, ~#mesh_ie_attrs.base, ~#mesh_ie_attrs.offset, ~#mesh_ie_group.base, ~#mesh_ie_group.offset, ~#mesh_netdev_ops.base, ~#mesh_netdev_ops.offset, ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_lock_of_lbs_private, ~LDV_MUTEXES_mutex_of_device, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_lock_of_lbs_private, ~LDV_MUTEXES_mutex_of_device, ~lbs_dir.base, ~lbs_dir.offset;

implementation ldv_initialize() returns (){
  loc13:
    ~LDV_MUTEXES_i_mutex_of_inode := 0;
    ~LDV_MUTEXES_lock := 0;
    ~LDV_MUTEXES_lock_of_lbs_private := 0;
    ~LDV_MUTEXES_mutex_of_device := 0;
    assume true;
    return;
}

procedure ldv_initialize() returns ();
modifies ~LDV_MUTEXES_i_mutex_of_inode, ~LDV_MUTEXES_lock, ~LDV_MUTEXES_lock_of_lbs_private, ~LDV_MUTEXES_mutex_of_device;

implementation ldv_post_init(#in~init_ret_val : int) returns (#res : int){
    var #t~ret4462 : int;
    var ~init_ret_val : int;
    var ~tmp~5500 : int;

  loc14:
    ~init_ret_val := #in~init_ret_val;
    havoc ~tmp~5500;
    call #t~ret4462 := ldv_filter_positive_int(~init_ret_val);
    assume -2147483648 <= #t~ret4462 && #t~ret4462 <= 2147483647;
    ~tmp~5500 := #t~ret4462;
    havoc #t~ret4462;
    #res := ~tmp~5500;
    assume true;
    return;
}

procedure ldv_post_init(#in~init_ret_val : int) returns (#res : int);
modifies ;

implementation lbs_debugfs_init() returns (){
    var #t~nondet2408.base : int, #t~nondet2408.offset : int;
    var #t~ret2409.base : int, #t~ret2409.offset : int;

  loc15:
    assume !((~lbs_dir.base + ~lbs_dir.offset) % 18446744073709551616 == 0);
    assume true;
    return;
}

procedure lbs_debugfs_init() returns ();
modifies ~lbs_dir.base, ~lbs_dir.offset, #valid, #length;

implementation ldv_EMGentry_init_lbs_init_module_38_13(#in~arg0.base : int, #in~arg0.offset : int) returns (#res : int){
    var #t~ret3559 : int;
    var ~arg0.base : int, ~arg0.offset : int;
    var ~tmp~4385 : int;

  loc16:
    ~arg0.base, ~arg0.offset := #in~arg0.base, #in~arg0.offset;
    havoc ~tmp~4385;
    call #t~ret3559 := lbs_init_module();
    assume -2147483648 <= #t~ret3559 && #t~ret3559 <= 2147483647;
    ~tmp~4385 := #t~ret3559;
    havoc #t~ret3559;
    #res := ~tmp~4385;
    assume true;
    return;
}

procedure ldv_EMGentry_init_lbs_init_module_38_13(#in~arg0.base : int, #in~arg0.offset : int) returns (#res : int);
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~lbs_dir.base, ~lbs_dir.offset;

procedure __xchg_wrong_size() returns ();
modifies ;

procedure wake_up_process(#in~2900.base : int, #in~2900.offset : int) returns (#res : int);
modifies ;

procedure wiphy_register(#in~118.base : int, #in~118.offset : int) returns (#res : int);
modifies ;

procedure debug_lockdep_rcu_enabled() returns (#res : int);
modifies ;

procedure cancel_delayed_work(#in~73.base : int, #in~73.offset : int) returns (#res : ~bool);
modifies ;

procedure __might_sleep(#in~1140.base : int, #in~1140.offset : int, #in~1141 : int, #in~1142 : int) returns ();
modifies ;

procedure lock_release(#in~38.base : int, #in~38.offset : int, #in~39 : int, #in~40 : int) returns ();
modifies ;

procedure netif_carrier_on(#in~99.base : int, #in~99.offset : int) returns ();
modifies ;

procedure kthread_should_stop() returns (#res : ~bool);
modifies ;

procedure generic_file_llseek(#in~2185.base : int, #in~2185.offset : int, #in~2186 : int, #in~2187 : int) returns (#res : ~loff_t);
modifies ;

procedure netdev_err(#in~1156.base : int, #in~1156.offset : int, #in~1157.base : int, #in~1157.offset : int) returns (#res : int);
modifies ;

procedure memcpy(#in~16.base : int, #in~16.offset : int, #in~17.base : int, #in~17.offset : int, #in~18 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure register_netdev(#in~101.base : int, #in~101.offset : int) returns (#res : int);
modifies ;

procedure sprintf(#in~2167.base : int, #in~2167.offset : int, #in~2168.base : int, #in~2168.offset : int) returns (#res : int);
modifies ;

procedure strlen(#in~3966.base : int, #in~3966.offset : int) returns (#res : int);
modifies ;

procedure memcmp(#in~22.base : int, #in~22.offset : int, #in~23.base : int, #in~23.offset : int, #in~24 : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_irq(#in~2875.base : int, #in~2875.offset : int) returns ();
modifies ;

procedure strlcpy(#in~2796.base : int, #in~2796.offset : int, #in~2797.base : int, #in~2797.offset : int, #in~2798 : int) returns (#res : int);
modifies ;

procedure eth_validate_addr(#in~2913.base : int, #in~2913.offset : int) returns (#res : int);
modifies ;

procedure netif_rx(#in~3636.base : int, #in~3636.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_bh(#in~2874.base : int, #in~2874.offset : int) returns ();
modifies ;

procedure regulatory_hint(#in~126.base : int, #in~126.offset : int, #in~127.base : int, #in~127.offset : int) returns (#res : int);
modifies ;

procedure wiphy_unregister(#in~119.base : int, #in~119.offset : int) returns ();
modifies ;

procedure strstr(#in~2176.base : int, #in~2176.offset : int, #in~2177.base : int, #in~2177.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure netif_rx_ni(#in~3637.base : int, #in~3637.offset : int) returns (#res : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure netif_device_attach(#in~2903.base : int, #in~2903.offset : int) returns ();
modifies ;

procedure debugfs_remove(#in~2212.base : int, #in~2212.offset : int) returns ();
modifies ;

procedure ldv_del_timer_sync(#in~3553 : int, #in~3554.base : int, #in~3554.offset : int) returns (#res : int);
modifies ;

procedure cfg80211_scan_done(#in~128.base : int, #in~128.offset : int, #in~129 : int) returns ();
modifies ;

procedure cancel_work_sync(#in~2897.base : int, #in~2897.offset : int) returns (#res : ~bool);
modifies ;

procedure debugfs_create_dir(#in~2210.base : int, #in~2210.offset : int, #in~2211.base : int, #in~2211.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure netif_device_detach(#in~2902.base : int, #in~2902.offset : int) returns ();
modifies ;

procedure eth_change_mtu(#in~2911.base : int, #in~2911.offset : int, #in~2912 : int) returns (#res : int);
modifies ;

procedure netdev_info(#in~1158.base : int, #in~1158.offset : int, #in~1159.base : int, #in~1159.offset : int) returns (#res : int);
modifies ;

procedure schedule() returns ();
modifies ;

procedure _copy_from_user(#in~2198.base : int, #in~2198.offset : int, #in~2199.base : int, #in~2199.offset : int, #in~2200 : int) returns (#res : int);
modifies ;

procedure simple_strtoul(#in~2164.base : int, #in~2164.offset : int, #in~2165.base : int, #in~2165.offset : int, #in~2166 : int) returns (#res : int);
modifies ;

procedure ldv_unregister_netdev(#in~3557.base : int, #in~3557.offset : int, #in~3558.base : int, #in~3558.offset : int) returns ();
modifies ;

procedure __raw_spin_lock_init(#in~2869.base : int, #in~2869.offset : int, #in~2870.base : int, #in~2870.offset : int, #in~2871.base : int, #in~2871.offset : int) returns ();
modifies ;

procedure sysfs_create_group(#in~3967.base : int, #in~3967.offset : int, #in~3968.base : int, #in~3968.offset : int) returns (#res : int);
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure wiphy_free(#in~120.base : int, #in~120.offset : int) returns ();
modifies ;

procedure ldv_after_alloc(#in~4465.base : int, #in~4465.offset : int) returns ();
modifies ;

procedure ldv_switch_to_interrupt_context() returns ();
modifies ;

procedure rcu_is_watching() returns (#res : ~bool);
modifies ;

procedure ldv_check_alloc_flags(#in~4464 : int) returns ();
modifies ;

procedure prepare_to_wait_event(#in~48.base : int, #in~48.offset : int, #in~49.base : int, #in~49.offset : int, #in~50 : int) returns (#res : int);
modifies ;

procedure cfg80211_inform_bss_width(#in~130.base : int, #in~130.offset : int, #in~131.base : int, #in~131.offset : int, #in~132 : int, #in~133.base : int, #in~133.offset : int, #in~134 : int, #in~135 : int, #in~136 : int, #in~137.base : int, #in~137.offset : int, #in~138 : int, #in~139 : int, #in~140 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure malloc(#in~4467 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __kfifo_alloc(#in~2919.base : int, #in~2919.offset : int, #in~2920 : int, #in~2921 : int, #in~2922 : int) returns (#res : int);
modifies ;

procedure __list_add(#in~1133.base : int, #in~1133.offset : int, #in~1134.base : int, #in~1134.offset : int, #in~1135.base : int, #in~1135.offset : int) returns ();
modifies ;

procedure print_ssid(#in~189.base : int, #in~189.offset : int, #in~190.base : int, #in~190.offset : int, #in~191 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __const_udelay(#in~2181 : int) returns ();
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];

procedure __bad_percpu_size() returns ();
modifies ;

procedure cfg80211_put_bss(#in~149.base : int, #in~149.offset : int, #in~150.base : int, #in~150.offset : int) returns ();
modifies ;

procedure kthread_stop(#in~2918.base : int, #in~2918.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_irqrestore(#in~1147.base : int, #in~1147.offset : int, #in~1148 : int) returns ();
modifies ;

procedure netdev_alert(#in~1154.base : int, #in~1154.offset : int, #in~1155.base : int, #in~1155.offset : int) returns (#res : int);
modifies ;

procedure kthread_create_on_node(#in~2914.base : int, #in~2914.offset : int, #in~2915.base : int, #in~2915.offset : int, #in~2916 : int, #in~2917.base : int, #in~2917.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure mod_timer(#in~1152.base : int, #in~1152.offset : int, #in~1153 : int) returns (#res : int);
modifies ;

procedure memset(#in~19.base : int, #in~19.offset : int, #in~20 : int, #in~21 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __init_work(#in~67.base : int, #in~67.offset : int, #in~68 : int) returns ();
modifies ;

procedure warn_slowpath_null(#in~25.base : int, #in~25.offset : int, #in~26 : int) returns ();
modifies ;

procedure __kfifo_out(#in~2927.base : int, #in~2927.offset : int, #in~2928.base : int, #in~2928.offset : int, #in~2929 : int) returns (#res : int);
modifies ;

procedure ldv_free_netdev(#in~3555.base : int, #in~3555.offset : int, #in~3556.base : int, #in~3556.offset : int) returns ();
modifies ;

procedure request_firmware(#in~3870.base : int, #in~3870.offset : int, #in~3871.base : int, #in~3871.offset : int, #in~3872.base : int, #in~3872.offset : int) returns (#res : int);
modifies ;

procedure __init_waitqueue_head(#in~1149.base : int, #in~1149.offset : int, #in~1150.base : int, #in~1150.offset : int, #in~1151.base : int, #in~1151.offset : int) returns ();
modifies ;

procedure schedule_timeout(#in~78 : int) returns (#res : int);
modifies ;

procedure __copy_from_user_overflow() returns ();
modifies ;

procedure finish_wait(#in~51.base : int, #in~51.offset : int, #in~52.base : int, #in~52.offset : int) returns ();
modifies ;

procedure kstrtoull(#in~3962.base : int, #in~3962.offset : int, #in~3963 : int, #in~3964.base : int, #in~3964.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock_bh(#in~2872.base : int, #in~2872.offset : int) returns ();
modifies ;

procedure strchr(#in~2174.base : int, #in~2174.offset : int, #in~2175 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure remove_wait_queue(#in~2885.base : int, #in~2885.offset : int, #in~2886.base : int, #in~2886.offset : int) returns ();
modifies ;

procedure cancel_delayed_work_sync(#in~74.base : int, #in~74.offset : int) returns (#res : ~bool);
modifies ;

procedure skb_push(#in~3630.base : int, #in~3630.offset : int, #in~3631 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure cfg80211_ibss_joined(#in~157.base : int, #in~157.offset : int, #in~158.base : int, #in~158.offset : int, #in~159 : int) returns ();
modifies ;

procedure netif_carrier_off(#in~100.base : int, #in~100.offset : int) returns ();
modifies ;

procedure destroy_workqueue(#in~2893.base : int, #in~2893.offset : int) returns ();
modifies ;

procedure sscanf(#in~2172.base : int, #in~2172.offset : int, #in~2173.base : int, #in~2173.offset : int) returns (#res : int);
modifies ;

procedure ldv_switch_to_process_context() returns ();
modifies ;

procedure ldv_pre_register_netdev() returns (#res : int);
modifies ;

procedure pskb_expand_head(#in~3626.base : int, #in~3626.offset : int, #in~3627 : int, #in~3628 : int, #in~3629 : int) returns (#res : int);
modifies ;

procedure queue_delayed_work_on(#in~69 : int, #in~70.base : int, #in~70.offset : int, #in~71.base : int, #in~71.offset : int, #in~72 : int) returns (#res : ~bool);
modifies ;

procedure device_create_file(#in~3971.base : int, #in~3971.offset : int, #in~3972.base : int, #in~3972.offset : int) returns (#res : int);
modifies ;

procedure C.free(#in~4470.base : int, #in~4470.offset : int) returns ();
modifies ;

procedure alloc_netdev_mqs(#in~2905 : int, #in~2906.base : int, #in~2906.offset : int, #in~2907.base : int, #in~2907.offset : int, #in~2908 : int, #in~2909 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure cfg80211_get_bss(#in~142.base : int, #in~142.offset : int, #in~143.base : int, #in~143.offset : int, #in~144.base : int, #in~144.offset : int, #in~145.base : int, #in~145.offset : int, #in~146 : int, #in~147 : int, #in~148 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure del_timer(#in~1944.base : int, #in~1944.offset : int) returns (#res : int);
modifies ;

procedure msleep_interruptible(#in~1945 : int) returns (#res : int);
modifies ;

procedure __kfifo_free(#in~2923.base : int, #in~2923.offset : int) returns ();
modifies ;

procedure __netif_schedule(#in~81.base : int, #in~81.offset : int) returns ();
modifies ;

procedure __kmalloc(#in~2195 : int, #in~2196 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure consume_skb(#in~3625.base : int, #in~3625.offset : int) returns ();
modifies ;

procedure ieee80211_channel_to_frequency(#in~121 : int, #in~122 : int) returns (#res : int);
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure __list_del_entry(#in~1138.base : int, #in~1138.offset : int) returns ();
modifies ;

procedure might_fault() returns ();
modifies ;

procedure printk(#in~15.base : int, #in~15.offset : int) returns (#res : int);
modifies ;

procedure calloc(#in~4468 : int, #in~4469 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure kfree_skb(#in~1946.base : int, #in~1946.offset : int) returns ();
modifies ;

procedure dev_err(#in~76.base : int, #in~76.offset : int, #in~77.base : int, #in~77.offset : int) returns (#res : int);
modifies ;

procedure __mutex_init(#in~2866.base : int, #in~2866.offset : int, #in~2867.base : int, #in~2867.offset : int, #in~2868.base : int, #in~2868.offset : int) returns ();
modifies ;

procedure queue_work_on(#in~2894 : int, #in~2895.base : int, #in~2895.offset : int, #in~2896.base : int, #in~2896.offset : int) returns (#res : ~bool);
modifies ;

procedure _raw_spin_lock_irqsave(#in~1146.base : int, #in~1146.offset : int) returns (#res : int);
modifies ;

procedure wiphy_new(#in~116.base : int, #in~116.offset : int, #in~117 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure add_wait_queue(#in~2883.base : int, #in~2883.offset : int, #in~2884.base : int, #in~2884.offset : int) returns ();
modifies ;

procedure simple_read_from_buffer(#in~2190.base : int, #in~2190.offset : int, #in~2191 : int, #in~2192.base : int, #in~2192.offset : int, #in~2193.base : int, #in~2193.offset : int, #in~2194 : int) returns (#res : int);
modifies ;

procedure lockdep_init_map(#in~27.base : int, #in~27.offset : int, #in~28.base : int, #in~28.offset : int, #in~29.base : int, #in~29.offset : int, #in~30 : int) returns ();
modifies ;

procedure release_firmware(#in~3880.base : int, #in~3880.offset : int) returns ();
modifies ;

procedure free_pages(#in~2179 : int, #in~2180 : int) returns ();
modifies ;

procedure __kfifo_in(#in~2924.base : int, #in~2924.offset : int, #in~2925.base : int, #in~2925.offset : int, #in~2926 : int) returns (#res : int);
modifies ;

procedure __dev_kfree_skb_any(#in~3764.base : int, #in~3764.offset : int, #in~3765 : int) returns ();
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure ieee80211_bss_get_ie(#in~113.base : int, #in~113.offset : int, #in~114 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure strcpy(#in~2864.base : int, #in~2864.offset : int, #in~2865.base : int, #in~2865.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure get_zeroed_page(#in~2178 : int) returns (#res : int);
modifies ;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure __alloc_workqueue_key(#in~2888.base : int, #in~2888.offset : int, #in~2889 : int, #in~2890 : int, #in~2891.base : int, #in~2891.offset : int, #in~2892.base : int, #in~2892.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure free_netdev(#in~2901.base : int, #in~2901.offset : int) returns ();
modifies ;

procedure del_timer_sync(#in~2887.base : int, #in~2887.offset : int) returns (#res : int);
modifies ;

procedure sysfs_remove_group(#in~3969.base : int, #in~3969.offset : int, #in~3970.base : int, #in~3970.offset : int) returns ();
modifies ;

procedure kfree(#in~79.base : int, #in~79.offset : int) returns ();
modifies ;

procedure ether_setup(#in~2904.base : int, #in~2904.offset : int) returns ();
modifies ;

procedure debugfs_create_file(#in~2205.base : int, #in~2205.offset : int, #in~2206 : int, #in~2207.base : int, #in~2207.offset : int, #in~2208.base : int, #in~2208.offset : int, #in~2209.base : int, #in~2209.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure cfg80211_michael_mic_failure(#in~151.base : int, #in~151.offset : int, #in~152.base : int, #in~152.offset : int, #in~153 : int, #in~154 : int, #in~155.base : int, #in~155.offset : int, #in~156 : int) returns ();
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];

procedure skb_pull(#in~3632.base : int, #in~3632.offset : int, #in~3633 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __VERIFIER_error() returns ();
modifies ;

procedure eth_type_trans(#in~3638.base : int, #in~3638.offset : int, #in~3639.base : int, #in~3639.offset : int) returns (#res : ~__be16);
modifies ;

procedure cfg80211_connect_result(#in~160.base : int, #in~160.offset : int, #in~161.base : int, #in~161.offset : int, #in~162.base : int, #in~162.offset : int, #in~163 : int, #in~164.base : int, #in~164.offset : int, #in~165 : int, #in~166 : int, #in~167 : int) returns ();
modifies ;

procedure request_firmware_nowait(#in~3873.base : int, #in~3873.offset : int, #in~3874 : int, #in~3875.base : int, #in~3875.offset : int, #in~3876.base : int, #in~3876.offset : int, #in~3877 : int, #in~3878.base : int, #in~3878.offset : int, #in~3879.base : int, #in~3879.offset : int) returns (#res : int);
modifies ;

procedure lock_acquire(#in~31.base : int, #in~31.offset : int, #in~32 : int, #in~33 : int, #in~34 : int, #in~35 : int, #in~36.base : int, #in~36.offset : int, #in~37 : int) returns ();
modifies ;

procedure lockdep_rcu_suspicious(#in~41.base : int, #in~41.offset : int, #in~42 : int, #in~43.base : int, #in~43.offset : int) returns ();
modifies ;

procedure __wake_up(#in~44.base : int, #in~44.offset : int, #in~45 : int, #in~46 : int, #in~47.base : int, #in~47.offset : int) returns ();
modifies ;

procedure default_llseek(#in~2182.base : int, #in~2182.offset : int, #in~2183 : int, #in~2184 : int) returns (#res : ~loff_t);
modifies ;

procedure default_wake_function(#in~2876.base : int, #in~2876.offset : int, #in~2877 : int, #in~2878 : int, #in~2879.base : int, #in~2879.offset : int) returns (#res : int);
modifies ;

procedure memmove(#in~1143.base : int, #in~1143.offset : int, #in~1144.base : int, #in~1144.offset : int, #in~1145 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure init_timer_key(#in~62.base : int, #in~62.offset : int, #in~63 : int, #in~64.base : int, #in~64.offset : int, #in~65.base : int, #in~65.offset : int) returns ();
modifies ;

procedure __ieee80211_get_channel(#in~123.base : int, #in~123.offset : int, #in~124 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure cfg80211_disconnected(#in~168.base : int, #in~168.offset : int, #in~169 : int, #in~170.base : int, #in~170.offset : int, #in~171 : int, #in~172 : int) returns ();
modifies ;

procedure msecs_to_jiffies(#in~61 : int) returns (#res : int);
modifies ;

procedure ieee80211_get_num_supported_channels(#in~173.base : int, #in~173.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock_irq(#in~2873.base : int, #in~2873.offset : int) returns ();
modifies ;

procedure simple_open(#in~2188.base : int, #in~2188.offset : int, #in~2189.base : int, #in~2189.offset : int) returns (#res : int);
modifies ;

procedure snprintf(#in~2169.base : int, #in~2169.offset : int, #in~2170 : int, #in~2171.base : int, #in~2171.offset : int) returns (#res : int);
modifies ;

procedure delayed_work_timer_fn(#in~66 : int) returns ();
modifies ;

procedure unregister_netdev(#in~2910.base : int, #in~2910.offset : int) returns ();
modifies ;

procedure netpoll_trap() returns (#res : int);
modifies ;

procedure device_remove_file(#in~3973.base : int, #in~3973.offset : int, #in~3974.base : int, #in~3974.offset : int) returns ();
modifies ;


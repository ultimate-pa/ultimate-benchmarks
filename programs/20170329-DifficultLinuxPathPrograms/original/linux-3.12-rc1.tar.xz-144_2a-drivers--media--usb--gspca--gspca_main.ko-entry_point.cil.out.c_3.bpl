type STRUCT~compat_timespec;
type STRUCT~map_segment;
type STRUCT~perf_event;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~dev_pm_qos;
type STRUCT~sock;
type STRUCT~sysfs_dirent;
type STRUCT~dma_map_ops;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~device_node;
type STRUCT~iommu_group;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~pid_namespace;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~iovec;
type STRUCT~swap_info_struct;
type STRUCT~backing_dev_info;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~pipe_inode_info;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~seq_file;
type STRUCT~nameidata;
type STRUCT~kstatfs;
type STRUCT~return_instance;
type STRUCT~uprobe;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~sem_undo_list;
type STRUCT~seccomp_filter;
type STRUCT~keyring_list;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~tty_struct;
type STRUCT~autogroup;
type STRUCT~taskstats;
type STRUCT~tty_audit_buf;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~mem_cgroup;
type STRUCT~sched_class;
type STRUCT~task_group;
type STRUCT~fs_struct;
type STRUCT~nsproxy;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~bio_list;
type STRUCT~blk_plug;
type STRUCT~reclaim_state;
type STRUCT~io_context;
type STRUCT~css_set;
type STRUCT~robust_list_head;
type STRUCT~compat_robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~ep_device;
type STRUCT~mon_bus;
type STRUCT~usb_tt;
type STRUCT~wusb_dev;
type STRUCT~scatterlist;
type STRUCT~kmem_cache_node;
type STRUCT~v4l2_ctrl_helper;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type STRUCT~vb2_queue;
type STRUCT~tuner_setup;
type STRUCT~v4l2_subdev_fh;
type STRUCT~input_mt;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__s64 = int;
type ~__u64 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~oom_flags_t = int;
type ~kernel_ulong_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~qsize_t = int;
type ~cputime_t = int;
type ~__kernel_suseconds_t = ~__kernel_long_t;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_clock_t = ~__kernel_long_t;
type ~__le16 = ~__u16;
type ~__le32 = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint32_t = ~__u32;
type ~dma_addr_t = ~u64;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~projid_t = ~__kernel_uid32_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~v4l2_std_id = ~__u64;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
const #funAddr~gspca_vm_open.base : int;
const #funAddr~gspca_vm_open.offset : int;
const #funAddr~gspca_vm_close.base : int;
const #funAddr~gspca_vm_close.offset : int;
const #funAddr~int_irq.base : int;
const #funAddr~int_irq.offset : int;
const #funAddr~isoc_irq.base : int;
const #funAddr~isoc_irq.offset : int;
const #funAddr~bulk_irq.base : int;
const #funAddr~bulk_irq.offset : int;
const #funAddr~autoremove_wake_function.base : int;
const #funAddr~autoremove_wake_function.offset : int;
const #funAddr~dev_read.base : int;
const #funAddr~dev_read.offset : int;
const #funAddr~dev_poll.base : int;
const #funAddr~dev_poll.offset : int;
const #funAddr~video_ioctl2.base : int;
const #funAddr~video_ioctl2.offset : int;
const #funAddr~dev_mmap.base : int;
const #funAddr~dev_mmap.offset : int;
const #funAddr~dev_open.base : int;
const #funAddr~dev_open.offset : int;
const #funAddr~dev_close.base : int;
const #funAddr~dev_close.offset : int;
const #funAddr~vidioc_querycap.base : int;
const #funAddr~vidioc_querycap.offset : int;
const #funAddr~vidioc_enum_fmt_vid_cap.base : int;
const #funAddr~vidioc_enum_fmt_vid_cap.offset : int;
const #funAddr~vidioc_g_fmt_vid_cap.base : int;
const #funAddr~vidioc_g_fmt_vid_cap.offset : int;
const #funAddr~vidioc_s_fmt_vid_cap.base : int;
const #funAddr~vidioc_s_fmt_vid_cap.offset : int;
const #funAddr~vidioc_try_fmt_vid_cap.base : int;
const #funAddr~vidioc_try_fmt_vid_cap.offset : int;
const #funAddr~vidioc_reqbufs.base : int;
const #funAddr~vidioc_reqbufs.offset : int;
const #funAddr~vidioc_querybuf.base : int;
const #funAddr~vidioc_querybuf.offset : int;
const #funAddr~vidioc_qbuf.base : int;
const #funAddr~vidioc_qbuf.offset : int;
const #funAddr~vidioc_dqbuf.base : int;
const #funAddr~vidioc_dqbuf.offset : int;
const #funAddr~vidioc_streamon.base : int;
const #funAddr~vidioc_streamon.offset : int;
const #funAddr~vidioc_streamoff.base : int;
const #funAddr~vidioc_streamoff.offset : int;
const #funAddr~vidioc_enum_input.base : int;
const #funAddr~vidioc_enum_input.offset : int;
const #funAddr~vidioc_g_input.base : int;
const #funAddr~vidioc_g_input.offset : int;
const #funAddr~vidioc_s_input.base : int;
const #funAddr~vidioc_s_input.offset : int;
const #funAddr~vidioc_g_jpegcomp.base : int;
const #funAddr~vidioc_g_jpegcomp.offset : int;
const #funAddr~vidioc_s_jpegcomp.base : int;
const #funAddr~vidioc_s_jpegcomp.offset : int;
const #funAddr~vidioc_g_parm.base : int;
const #funAddr~vidioc_g_parm.offset : int;
const #funAddr~vidioc_s_parm.base : int;
const #funAddr~vidioc_s_parm.offset : int;
const #funAddr~vidioc_g_register.base : int;
const #funAddr~vidioc_g_register.offset : int;
const #funAddr~vidioc_s_register.base : int;
const #funAddr~vidioc_s_register.offset : int;
const #funAddr~vidioc_g_chip_info.base : int;
const #funAddr~vidioc_g_chip_info.offset : int;
const #funAddr~vidioc_enum_framesizes.base : int;
const #funAddr~vidioc_enum_framesizes.offset : int;
const #funAddr~vidioc_enum_frameintervals.base : int;
const #funAddr~vidioc_enum_frameintervals.offset : int;
const #funAddr~v4l2_ctrl_subscribe_event.base : int;
const #funAddr~v4l2_ctrl_subscribe_event.offset : int;
const #funAddr~v4l2_event_unsubscribe.base : int;
const #funAddr~v4l2_event_unsubscribe.offset : int;
const #funAddr~video_device_release_empty.base : int;
const #funAddr~video_device_release_empty.offset : int;
const #funAddr~gspca_release.base : int;
const #funAddr~gspca_release.offset : int;
const ~usb_device_speed~USB_SPEED_UNKNOWN : int;
const ~usb_device_speed~USB_SPEED_LOW : int;
const ~usb_device_speed~USB_SPEED_FULL : int;
const ~usb_device_speed~USB_SPEED_HIGH : int;
const ~usb_device_speed~USB_SPEED_WIRELESS : int;
const ~usb_device_speed~USB_SPEED_SUPER : int;
const ~usb_device_state~USB_STATE_NOTATTACHED : int;
const ~usb_device_state~USB_STATE_ATTACHED : int;
const ~usb_device_state~USB_STATE_POWERED : int;
const ~usb_device_state~USB_STATE_RECONNECTING : int;
const ~usb_device_state~USB_STATE_UNAUTHENTICATED : int;
const ~usb_device_state~USB_STATE_DEFAULT : int;
const ~usb_device_state~USB_STATE_ADDRESS : int;
const ~usb_device_state~USB_STATE_CONFIGURED : int;
const ~usb_device_state~USB_STATE_SUSPENDED : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~uprobe_task_state~UTASK_RUNNING : int;
const ~uprobe_task_state~UTASK_SSTEP : int;
const ~uprobe_task_state~UTASK_SSTEP_ACK : int;
const ~uprobe_task_state~UTASK_SSTEP_TRAPPED : int;
const ~usb_interface_condition~USB_INTERFACE_UNBOUND : int;
const ~usb_interface_condition~USB_INTERFACE_BINDING : int;
const ~usb_interface_condition~USB_INTERFACE_BOUND : int;
const ~usb_interface_condition~USB_INTERFACE_UNBINDING : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE : int;
const ~usb_device_removable~USB_DEVICE_FIXED : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OVERLAY : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_PRIVATE : int;
const ~v4l2_memory~V4L2_MEMORY_MMAP : int;
const ~v4l2_memory~V4L2_MEMORY_USERPTR : int;
const ~v4l2_memory~V4L2_MEMORY_OVERLAY : int;
const ~v4l2_memory~V4L2_MEMORY_DMABUF : int;
const ~v4l2_priority~V4L2_PRIORITY_UNSET : int;
const ~v4l2_priority~V4L2_PRIORITY_BACKGROUND : int;
const ~v4l2_priority~V4L2_PRIORITY_INTERACTIVE : int;
const ~v4l2_priority~V4L2_PRIORITY_RECORD : int;
const ~v4l2_priority~V4L2_PRIORITY_DEFAULT : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BOOLEAN : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_MENU : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BUTTON : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER64 : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_CTRL_CLASS : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_STRING : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BITMASK : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER_MENU : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_FIXED : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB666_1X18 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_1X24 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_ARGB8888_1X32 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UV8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_2X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_2X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YDYUYDYV8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_1X20 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_1X20 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUV10_1X30 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_AYUV8_1X32 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_JPEG_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_S5C_UYVY_JPEG_1X8 : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_CUSTOM : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_DEVNAME : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_I2C : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_OF : int;
const ~v4l2_mbus_type~V4L2_MBUS_PARALLEL : int;
const ~v4l2_mbus_type~V4L2_MBUS_BT656 : int;
const ~v4l2_mbus_type~V4L2_MBUS_CSI2 : int;
const ~v4l2_subdev_ir_mode~V4L2_SUBDEV_IR_MODE_PULSE_WIDTH : int;
axiom #funAddr~gspca_vm_open.base == -1 && #funAddr~gspca_vm_open.offset == 0;
axiom #funAddr~gspca_vm_close.base == -1 && #funAddr~gspca_vm_close.offset == 1;
axiom #funAddr~int_irq.base == -1 && #funAddr~int_irq.offset == 2;
axiom #funAddr~isoc_irq.base == -1 && #funAddr~isoc_irq.offset == 3;
axiom #funAddr~bulk_irq.base == -1 && #funAddr~bulk_irq.offset == 4;
axiom #funAddr~autoremove_wake_function.base == -1 && #funAddr~autoremove_wake_function.offset == 5;
axiom #funAddr~dev_read.base == -1 && #funAddr~dev_read.offset == 6;
axiom #funAddr~dev_poll.base == -1 && #funAddr~dev_poll.offset == 7;
axiom #funAddr~video_ioctl2.base == -1 && #funAddr~video_ioctl2.offset == 8;
axiom #funAddr~dev_mmap.base == -1 && #funAddr~dev_mmap.offset == 9;
axiom #funAddr~dev_open.base == -1 && #funAddr~dev_open.offset == 10;
axiom #funAddr~dev_close.base == -1 && #funAddr~dev_close.offset == 11;
axiom #funAddr~vidioc_querycap.base == -1 && #funAddr~vidioc_querycap.offset == 12;
axiom #funAddr~vidioc_enum_fmt_vid_cap.base == -1 && #funAddr~vidioc_enum_fmt_vid_cap.offset == 13;
axiom #funAddr~vidioc_g_fmt_vid_cap.base == -1 && #funAddr~vidioc_g_fmt_vid_cap.offset == 14;
axiom #funAddr~vidioc_s_fmt_vid_cap.base == -1 && #funAddr~vidioc_s_fmt_vid_cap.offset == 15;
axiom #funAddr~vidioc_try_fmt_vid_cap.base == -1 && #funAddr~vidioc_try_fmt_vid_cap.offset == 16;
axiom #funAddr~vidioc_reqbufs.base == -1 && #funAddr~vidioc_reqbufs.offset == 17;
axiom #funAddr~vidioc_querybuf.base == -1 && #funAddr~vidioc_querybuf.offset == 18;
axiom #funAddr~vidioc_qbuf.base == -1 && #funAddr~vidioc_qbuf.offset == 19;
axiom #funAddr~vidioc_dqbuf.base == -1 && #funAddr~vidioc_dqbuf.offset == 20;
axiom #funAddr~vidioc_streamon.base == -1 && #funAddr~vidioc_streamon.offset == 21;
axiom #funAddr~vidioc_streamoff.base == -1 && #funAddr~vidioc_streamoff.offset == 22;
axiom #funAddr~vidioc_enum_input.base == -1 && #funAddr~vidioc_enum_input.offset == 23;
axiom #funAddr~vidioc_g_input.base == -1 && #funAddr~vidioc_g_input.offset == 24;
axiom #funAddr~vidioc_s_input.base == -1 && #funAddr~vidioc_s_input.offset == 25;
axiom #funAddr~vidioc_g_jpegcomp.base == -1 && #funAddr~vidioc_g_jpegcomp.offset == 26;
axiom #funAddr~vidioc_s_jpegcomp.base == -1 && #funAddr~vidioc_s_jpegcomp.offset == 27;
axiom #funAddr~vidioc_g_parm.base == -1 && #funAddr~vidioc_g_parm.offset == 28;
axiom #funAddr~vidioc_s_parm.base == -1 && #funAddr~vidioc_s_parm.offset == 29;
axiom #funAddr~vidioc_g_register.base == -1 && #funAddr~vidioc_g_register.offset == 30;
axiom #funAddr~vidioc_s_register.base == -1 && #funAddr~vidioc_s_register.offset == 31;
axiom #funAddr~vidioc_g_chip_info.base == -1 && #funAddr~vidioc_g_chip_info.offset == 32;
axiom #funAddr~vidioc_enum_framesizes.base == -1 && #funAddr~vidioc_enum_framesizes.offset == 33;
axiom #funAddr~vidioc_enum_frameintervals.base == -1 && #funAddr~vidioc_enum_frameintervals.offset == 34;
axiom #funAddr~v4l2_ctrl_subscribe_event.base == -1 && #funAddr~v4l2_ctrl_subscribe_event.offset == 35;
axiom #funAddr~v4l2_event_unsubscribe.base == -1 && #funAddr~v4l2_event_unsubscribe.offset == 36;
axiom #funAddr~video_device_release_empty.base == -1 && #funAddr~video_device_release_empty.offset == 37;
axiom #funAddr~gspca_release.base == -1 && #funAddr~gspca_release.offset == 38;
axiom ~usb_device_speed~USB_SPEED_UNKNOWN == 0;
axiom ~usb_device_speed~USB_SPEED_LOW == 1;
axiom ~usb_device_speed~USB_SPEED_FULL == 2;
axiom ~usb_device_speed~USB_SPEED_HIGH == 3;
axiom ~usb_device_speed~USB_SPEED_WIRELESS == 4;
axiom ~usb_device_speed~USB_SPEED_SUPER == 5;
axiom ~usb_device_state~USB_STATE_NOTATTACHED == 0;
axiom ~usb_device_state~USB_STATE_ATTACHED == 1;
axiom ~usb_device_state~USB_STATE_POWERED == 2;
axiom ~usb_device_state~USB_STATE_RECONNECTING == 3;
axiom ~usb_device_state~USB_STATE_UNAUTHENTICATED == 4;
axiom ~usb_device_state~USB_STATE_DEFAULT == 5;
axiom ~usb_device_state~USB_STATE_ADDRESS == 6;
axiom ~usb_device_state~USB_STATE_CONFIGURED == 7;
axiom ~usb_device_state~USB_STATE_SUSPENDED == 8;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~uprobe_task_state~UTASK_RUNNING == 0;
axiom ~uprobe_task_state~UTASK_SSTEP == 1;
axiom ~uprobe_task_state~UTASK_SSTEP_ACK == 2;
axiom ~uprobe_task_state~UTASK_SSTEP_TRAPPED == 3;
axiom ~usb_interface_condition~USB_INTERFACE_UNBOUND == 0;
axiom ~usb_interface_condition~USB_INTERFACE_BINDING == 1;
axiom ~usb_interface_condition~USB_INTERFACE_BOUND == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBINDING == 3;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN == 0;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE == 1;
axiom ~usb_device_removable~USB_DEVICE_FIXED == 2;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE == 1;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT == 2;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OVERLAY == 3;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_CAPTURE == 4;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_OUTPUT == 5;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_CAPTURE == 6;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_OUTPUT == 7;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY == 8;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE == 9;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE == 10;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_PRIVATE == 128;
axiom ~v4l2_memory~V4L2_MEMORY_MMAP == 1;
axiom ~v4l2_memory~V4L2_MEMORY_USERPTR == 2;
axiom ~v4l2_memory~V4L2_MEMORY_OVERLAY == 3;
axiom ~v4l2_memory~V4L2_MEMORY_DMABUF == 4;
axiom ~v4l2_priority~V4L2_PRIORITY_UNSET == 0;
axiom ~v4l2_priority~V4L2_PRIORITY_BACKGROUND == 1;
axiom ~v4l2_priority~V4L2_PRIORITY_INTERACTIVE == 2;
axiom ~v4l2_priority~V4L2_PRIORITY_RECORD == 3;
axiom ~v4l2_priority~V4L2_PRIORITY_DEFAULT == 2;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER == 1;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BOOLEAN == 2;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_MENU == 3;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BUTTON == 4;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER64 == 5;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_CTRL_CLASS == 6;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_STRING == 7;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BITMASK == 8;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER_MENU == 9;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_FIXED == 1;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_BE == 4097;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_LE == 4098;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_BE == 4099;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_LE == 4100;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_BE == 4101;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_LE == 4102;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_BE == 4103;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_LE == 4104;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB666_1X18 == 4105;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_1X24 == 4106;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_BE == 4107;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_LE == 4108;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_ARGB8888_1X32 == 4109;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y8_1X8 == 8193;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UV8_1X8 == 8213;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1_5X8 == 8194;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1_5X8 == 8195;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1_5X8 == 8196;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1_5X8 == 8197;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_2X8 == 8198;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_2X8 == 8199;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_2X8 == 8200;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_2X8 == 8201;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y10_1X10 == 8202;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_2X10 == 8203;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_2X10 == 8204;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y12_1X12 == 8211;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1X16 == 8207;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1X16 == 8208;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1X16 == 8209;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1X16 == 8210;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YDYUYDYV8_1X16 == 8212;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_1X20 == 8205;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_1X20 == 8206;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUV10_1X30 == 8214;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_AYUV8_1X32 == 8215;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR8_1X8 == 12289;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG8_1X8 == 12307;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG8_1X8 == 12290;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB8_1X8 == 12308;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_ALAW8_1X8 == 12309;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_ALAW8_1X8 == 12310;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_ALAW8_1X8 == 12311;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_ALAW8_1X8 == 12312;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_DPCM8_1X8 == 12299;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_DPCM8_1X8 == 12300;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_DPCM8_1X8 == 12297;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_DPCM8_1X8 == 12301;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_BE == 12291;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_LE == 12292;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_BE == 12293;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_LE == 12294;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_1X10 == 12295;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_1X10 == 12302;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_1X10 == 12298;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_1X10 == 12303;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR12_1X12 == 12296;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG12_1X12 == 12304;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG12_1X12 == 12305;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB12_1X12 == 12306;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_JPEG_1X8 == 16385;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_S5C_UYVY_JPEG_1X8 == 20481;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_CUSTOM == 0;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_DEVNAME == 1;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_I2C == 2;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_OF == 3;
axiom ~v4l2_mbus_type~V4L2_MBUS_PARALLEL == 0;
axiom ~v4l2_mbus_type~V4L2_MBUS_BT656 == 1;
axiom ~v4l2_mbus_type~V4L2_MBUS_CSI2 == 2;
axiom ~v4l2_subdev_ir_mode~V4L2_SUBDEV_IR_MODE_PULSE_WIDTH == 0;
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
var ~ldv_state_variable_0 : int;

var ~ldv_state_variable_3 : int;

var ~ldv_state_variable_2 : int;

var ~ref_cnt : int;

var ~ldv_state_variable_1 : int;

var ~ldv_state_variable_4 : int;

var ~gspca_debug : int;

var ~ldv_retval_0 : int;

var ~ldv_retval_1 : int;

var ~INTERF_STATE : int;

var ~SERIAL_STATE : int;

var ~dev_counter : int;

var ~completeFnIntCounter : int;

var ~completeFnBulkCounter : int;

var ~dev_ioctl_ops_group4.base : int, ~dev_ioctl_ops_group4.offset : int;

var ~dev_ioctl_ops_group5.base : int, ~dev_ioctl_ops_group5.offset : int;

var ~dev_fops_group0.base : int, ~dev_fops_group0.offset : int;

var ~dev_ioctl_ops_group1.base : int, ~dev_ioctl_ops_group1.offset : int;

var ~gspca_vm_ops_group0.base : int, ~gspca_vm_ops_group0.offset : int;

var ~dev_ioctl_ops_group2.base : int, ~dev_ioctl_ops_group2.offset : int;

var ~dev_ioctl_ops_group3.base : int, ~dev_ioctl_ops_group3.offset : int;

var ~dev_ioctl_ops_group0.base : int, ~dev_ioctl_ops_group0.offset : int;

var ~#gspca_vm_ops.base : int, ~#gspca_vm_ops.offset : int;

var ~usb_urb.base : int, ~usb_urb.offset : int;

var ~usb_dev.base : int, ~usb_dev.offset : int;

var ~completeFnInt.base : int, ~completeFnInt.offset : int;

var ~completeFnBulk.base : int, ~completeFnBulk.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

var #memory_int : [int,int]int;

implementation ULTIMATE.init() returns (){
  loc0:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_state_variable_0 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_state_variable_2 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_4 := 0;
    ~gspca_debug := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_1 := 0;
    ~INTERF_STATE := 0;
    ~SERIAL_STATE := 0;
    ~dev_counter := 0;
    ~completeFnIntCounter := 0;
    ~completeFnBulkCounter := 0;
    ~dev_ioctl_ops_group4.base, ~dev_ioctl_ops_group4.offset := 0, 0;
    ~dev_ioctl_ops_group5.base, ~dev_ioctl_ops_group5.offset := 0, 0;
    ~dev_fops_group0.base, ~dev_fops_group0.offset := 0, 0;
    ~dev_ioctl_ops_group1.base, ~dev_ioctl_ops_group1.offset := 0, 0;
    ~gspca_vm_ops_group0.base, ~gspca_vm_ops_group0.offset := 0, 0;
    ~dev_ioctl_ops_group2.base, ~dev_ioctl_ops_group2.offset := 0, 0;
    ~dev_ioctl_ops_group3.base, ~dev_ioctl_ops_group3.offset := 0, 0;
    ~dev_ioctl_ops_group0.base, ~dev_ioctl_ops_group0.offset := 0, 0;
    call ~#gspca_vm_ops.base, ~#gspca_vm_ops.offset := #Ultimate.alloc(72);
    call write~$Pointer$(#funAddr~gspca_vm_open.base, #funAddr~gspca_vm_open.offset, ~#gspca_vm_ops.base, ~#gspca_vm_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~gspca_vm_close.base, #funAddr~gspca_vm_close.offset, ~#gspca_vm_ops.base, ~#gspca_vm_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#gspca_vm_ops.base, ~#gspca_vm_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#gspca_vm_ops.base, ~#gspca_vm_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#gspca_vm_ops.base, ~#gspca_vm_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#gspca_vm_ops.base, ~#gspca_vm_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#gspca_vm_ops.base, ~#gspca_vm_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#gspca_vm_ops.base, ~#gspca_vm_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#gspca_vm_ops.base, ~#gspca_vm_ops.offset + 64, 8);
    ~usb_urb.base, ~usb_urb.offset := 0, 0;
    ~usb_dev.base, ~usb_dev.offset := 0, 0;
    ~completeFnInt.base, ~completeFnInt.offset := 0, 0;
    ~completeFnBulk.base, ~completeFnBulk.offset := 0, 0;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_0, ~ldv_state_variable_3, ~ldv_state_variable_2, ~ref_cnt, ~ldv_state_variable_1, ~ldv_state_variable_4, ~gspca_debug, ~ldv_retval_0, ~ldv_retval_1, ~INTERF_STATE, ~SERIAL_STATE, ~dev_counter, ~completeFnIntCounter, ~completeFnBulkCounter, ~dev_ioctl_ops_group4.base, ~dev_ioctl_ops_group4.offset, ~dev_ioctl_ops_group5.base, ~dev_ioctl_ops_group5.offset, ~dev_fops_group0.base, ~dev_fops_group0.offset, ~dev_ioctl_ops_group1.base, ~dev_ioctl_ops_group1.offset, ~gspca_vm_ops_group0.base, ~gspca_vm_ops_group0.offset, ~dev_ioctl_ops_group2.base, ~dev_ioctl_ops_group2.offset, ~dev_ioctl_ops_group3.base, ~dev_ioctl_ops_group3.offset, ~dev_ioctl_ops_group0.base, ~dev_ioctl_ops_group0.offset, ~#gspca_vm_ops.base, ~#gspca_vm_ops.offset, ~usb_urb.base, ~usb_urb.offset, ~usb_dev.base, ~usb_dev.offset, ~completeFnInt.base, ~completeFnInt.offset, ~completeFnBulk.base, ~completeFnBulk.offset, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length, #memory_int;

implementation ldv_error() returns (){
  loc1:
    assume !false;
    goto loc2;
  loc2:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation gspca_init() returns (#res : int){
    var #t~nondet960.base : int, #t~nondet960.offset : int;
    var #t~ret961 : int;

  loc3:
    call #t~nondet960.base, #t~nondet960.offset := #Ultimate.alloc(37);
    call #t~ret961 := printk(#t~nondet960.base, #t~nondet960.offset);
    assume -2147483648 <= #t~ret961 && #t~ret961 <= 2147483647;
    havoc #t~nondet960.base, #t~nondet960.offset;
    havoc #t~ret961;
    #res := 0;
    assume true;
    return;
}

procedure gspca_init() returns (#res : int);
modifies #valid, #length;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr1089 : int;

  loc4:
    #t~loopctr1089 := 0;
    goto loc5;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume #t~loopctr1089 < #amount;
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset + #t~loopctr1089 * 1 := 0], #memory_$Pointer$.offset[#ptr.base,#ptr.offset + #t~loopctr1089 * 1 := #value % 256];
    #memory_int := #memory_int[#ptr.base,#ptr.offset + #t~loopctr1089 * 1 := #value];
    #t~loopctr1089 := #t~loopctr1089 + 1;
    goto loc5;
  loc5_1:
    assume !(#t~loopctr1089 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation ldv_check_final_state() returns (){
  loc6:
    assume !((~usb_urb.base + ~usb_urb.offset) % 18446744073709551616 == 0);
    call ldv_error();
    return;
}

procedure ldv_check_final_state() returns ();
modifies ;

implementation ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~nondet73 : int;
    var #t~malloc74.base : int, #t~malloc74.offset : int;
    var ~size : int;
    var ~p~80.base : int, ~p~80.offset : int;
    var ~tmp~80.base : int, ~tmp~80.offset : int;
    var ~tmp___0~80 : int;

  loc7:
    ~size := #in~size;
    havoc ~p~80.base, ~p~80.offset;
    havoc ~tmp~80.base, ~tmp~80.offset;
    havoc ~tmp___0~80;
    assume -2147483648 <= #t~nondet73 && #t~nondet73 <= 2147483647;
    ~tmp___0~80 := #t~nondet73;
    havoc #t~nondet73;
    assume ~tmp___0~80 != 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ULTIMATE.start() returns (){
    var #t~ret1076 : int;

  loc8:
    call ULTIMATE.init();
    call #t~ret1076 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_0, ~ldv_state_variable_3, ~ldv_state_variable_2, ~ref_cnt, ~ldv_state_variable_1, ~ldv_state_variable_4, ~gspca_debug, ~ldv_retval_0, ~ldv_retval_1, ~INTERF_STATE, ~SERIAL_STATE, ~dev_counter, ~completeFnIntCounter, ~completeFnBulkCounter, ~dev_ioctl_ops_group4.base, ~dev_ioctl_ops_group4.offset, ~dev_ioctl_ops_group5.base, ~dev_ioctl_ops_group5.offset, ~dev_fops_group0.base, ~dev_fops_group0.offset, ~dev_ioctl_ops_group1.base, ~dev_ioctl_ops_group1.offset, ~gspca_vm_ops_group0.base, ~gspca_vm_ops_group0.offset, ~dev_ioctl_ops_group2.base, ~dev_ioctl_ops_group2.offset, ~dev_ioctl_ops_group3.base, ~dev_ioctl_ops_group3.offset, ~dev_ioctl_ops_group0.base, ~dev_ioctl_ops_group0.offset, ~#gspca_vm_ops.base, ~#gspca_vm_ops.offset, ~usb_urb.base, ~usb_urb.offset, ~usb_dev.base, ~usb_dev.offset, ~completeFnInt.base, ~completeFnInt.offset, ~completeFnBulk.base, ~completeFnBulk.offset, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_state_variable_4, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_3, ~ldv_state_variable_2, ~ldv_retval_0, ~ldv_retval_1;
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~dev_fops_group0.base, ~dev_fops_group0.offset, ~gspca_vm_ops_group0.base, ~gspca_vm_ops_group0.offset, ~dev_ioctl_ops_group3.base, ~dev_ioctl_ops_group3.offset, ~dev_ioctl_ops_group0.base, ~dev_ioctl_ops_group0.offset, ~dev_ioctl_ops_group1.base, ~dev_ioctl_ops_group1.offset, ~dev_ioctl_ops_group5.base, ~dev_ioctl_ops_group5.offset, ~dev_ioctl_ops_group4.base, ~dev_ioctl_ops_group4.offset, ~dev_ioctl_ops_group2.base, ~dev_ioctl_ops_group2.offset, ~completeFnInt.base, ~completeFnInt.offset, ~completeFnIntCounter, ~usb_urb.base, ~usb_urb.offset, ~completeFnBulkCounter, ~ldv_state_variable_4, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_3, ~ldv_state_variable_2, ~ldv_retval_0, ~ldv_retval_1;

implementation main() returns (#res : int){
    var #t~ret970.base : int, #t~ret970.offset : int;
    var #t~nondet971 : int;
    var #t~ret972.base : int, #t~ret972.offset : int;
    var #t~ret973.base : int, #t~ret973.offset : int;
    var #t~ret974.base : int, #t~ret974.offset : int;
    var #t~nondet975 : int;
    var #t~nondet976 : int;
    var #t~ret977.base : int, #t~ret977.offset : int;
    var #t~ret978.base : int, #t~ret978.offset : int;
    var #t~ret979.base : int, #t~ret979.offset : int;
    var #t~ret980.base : int, #t~ret980.offset : int;
    var #t~ret981.base : int, #t~ret981.offset : int;
    var #t~ret982.base : int, #t~ret982.offset : int;
    var #t~ret983.base : int, #t~ret983.offset : int;
    var #t~nondet984 : int;
    var #t~ret985.base : int, #t~ret985.offset : int;
    var #t~ret986.base : int, #t~ret986.offset : int;
    var #t~ret987.base : int, #t~ret987.offset : int;
    var #t~ret988.base : int, #t~ret988.offset : int;
    var #t~ret989.base : int, #t~ret989.offset : int;
    var #t~ret990.base : int, #t~ret990.offset : int;
    var #t~ret991.base : int, #t~ret991.offset : int;
    var #t~ret992.base : int, #t~ret992.offset : int;
    var #t~ret993.base : int, #t~ret993.offset : int;
    var #t~ret994.base : int, #t~ret994.offset : int;
    var #t~ret995.base : int, #t~ret995.offset : int;
    var #t~ret996.base : int, #t~ret996.offset : int;
    var #t~ret997.base : int, #t~ret997.offset : int;
    var #t~ret998.base : int, #t~ret998.offset : int;
    var #t~ret999.base : int, #t~ret999.offset : int;
    var #t~ret1000.base : int, #t~ret1000.offset : int;
    var #t~ret1001.base : int, #t~ret1001.offset : int;
    var #t~ret1002.base : int, #t~ret1002.offset : int;
    var #t~ret1003.base : int, #t~ret1003.offset : int;
    var #t~ret1004.base : int, #t~ret1004.offset : int;
    var #t~ret1005.base : int, #t~ret1005.offset : int;
    var #t~ret1006.base : int, #t~ret1006.offset : int;
    var #t~ret1007.base : int, #t~ret1007.offset : int;
    var #t~ret1008.base : int, #t~ret1008.offset : int;
    var #t~ret1009.base : int, #t~ret1009.offset : int;
    var #t~ret1010.base : int, #t~ret1010.offset : int;
    var #t~ret1011.base : int, #t~ret1011.offset : int;
    var #t~ret1012.base : int, #t~ret1012.offset : int;
    var #t~ret1013.base : int, #t~ret1013.offset : int;
    var #t~memset1014.base : int, #t~memset1014.offset : int;
    var #t~memset1015.base : int, #t~memset1015.offset : int;
    var #t~nondet1016 : int;
    var #t~switch1017 : bool;
    var #t~nondet1018 : int;
    var #t~switch1019 : bool;
    var #t~nondet1020 : int;
    var #t~switch1021 : bool;
    var #t~ret1022 : int;
    var #t~nondet1023 : int;
    var #t~switch1024 : bool;
    var #t~ret1025 : int;
    var #t~nondet1026 : int;
    var #t~switch1027 : bool;
    var #t~ret1028 : int;
    var #t~ret1029 : int;
    var #t~ret1030 : int;
    var #t~ret1031 : int;
    var #t~ret1032 : int;
    var #t~ret1033 : int;
    var #t~ret1034 : int;
    var #t~ret1035 : int;
    var #t~ret1036 : int;
    var #t~nondet1037 : int;
    var #t~switch1038 : bool;
    var #t~ret1039 : int;
    var #t~ret1040 : int;
    var #t~ret1041 : int;
    var #t~ret1042 : int;
    var #t~ret1043 : int;
    var #t~mem1044 : int;
    var #t~ret1045 : int;
    var #t~ret1046 : int;
    var #t~ret1047 : int;
    var #t~ret1048 : int;
    var #t~ret1049 : int;
    var #t~ret1050 : int;
    var #t~ret1051 : int;
    var #t~ret1052 : int;
    var #t~ret1053 : int;
    var #t~ret1054 : int;
    var #t~ret1055 : int;
    var #t~ret1056 : int;
    var #t~ret1057 : int;
    var #t~ret1058 : int;
    var #t~ret1059 : int;
    var #t~ret1060 : int;
    var #t~ret1061 : int;
    var #t~ret1062 : int;
    var #t~ret1063 : int;
    var #t~mem1064 : int;
    var #t~ret1065 : int;
    var ~ldvarg0~751.base : int, ~ldvarg0~751.offset : int;
    var ~tmp~751.base : int, ~tmp~751.offset : int;
    var ~ldvarg1~751 : int;
    var ~tmp___0~751 : int;
    var ~ldvarg7~751.base : int, ~ldvarg7~751.offset : int;
    var ~tmp___1~751.base : int, ~tmp___1~751.offset : int;
    var ~ldvarg4~751.base : int, ~ldvarg4~751.offset : int;
    var ~tmp___2~751.base : int, ~tmp___2~751.offset : int;
    var ~ldvarg3~751.base : int, ~ldvarg3~751.offset : int;
    var ~tmp___3~751.base : int, ~tmp___3~751.offset : int;
    var ~ldvarg5~751 : int;
    var ~tmp___4~751 : int;
    var ~ldvarg2~751 : int;
    var ~tmp___5~751 : int;
    var ~ldvarg6~751.base : int, ~ldvarg6~751.offset : int;
    var ~tmp___6~751.base : int, ~tmp___6~751.offset : int;
    var ~ldvarg18~751.base : int, ~ldvarg18~751.offset : int;
    var ~tmp___7~751.base : int, ~tmp___7~751.offset : int;
    var ~ldvarg11~751.base : int, ~ldvarg11~751.offset : int;
    var ~tmp___8~751.base : int, ~tmp___8~751.offset : int;
    var ~ldvarg32~751.base : int, ~ldvarg32~751.offset : int;
    var ~tmp___9~751.base : int, ~tmp___9~751.offset : int;
    var ~ldvarg23~751.base : int, ~ldvarg23~751.offset : int;
    var ~tmp___10~751.base : int, ~tmp___10~751.offset : int;
    var ~ldvarg43~751.base : int, ~ldvarg43~751.offset : int;
    var ~tmp___11~751.base : int, ~tmp___11~751.offset : int;
    var ~ldvarg42~751.base : int, ~ldvarg42~751.offset : int;
    var ~tmp___12~751.base : int, ~tmp___12~751.offset : int;
    var ~ldvarg12~751 : int;
    var ~tmp___13~751 : int;
    var ~ldvarg37~751.base : int, ~ldvarg37~751.offset : int;
    var ~tmp___14~751.base : int, ~tmp___14~751.offset : int;
    var ~ldvarg29~751.base : int, ~ldvarg29~751.offset : int;
    var ~tmp___15~751.base : int, ~tmp___15~751.offset : int;
    var ~ldvarg44~751.base : int, ~ldvarg44~751.offset : int;
    var ~tmp___16~751.base : int, ~tmp___16~751.offset : int;
    var ~ldvarg24~751.base : int, ~ldvarg24~751.offset : int;
    var ~tmp___17~751.base : int, ~tmp___17~751.offset : int;
    var ~ldvarg35~751.base : int, ~ldvarg35~751.offset : int;
    var ~tmp___18~751.base : int, ~tmp___18~751.offset : int;
    var ~ldvarg38~751.base : int, ~ldvarg38~751.offset : int;
    var ~tmp___19~751.base : int, ~tmp___19~751.offset : int;
    var ~ldvarg33~751.base : int, ~ldvarg33~751.offset : int;
    var ~tmp___20~751.base : int, ~tmp___20~751.offset : int;
    var ~ldvarg16~751.base : int, ~ldvarg16~751.offset : int;
    var ~tmp___21~751.base : int, ~tmp___21~751.offset : int;
    var ~ldvarg14~751.base : int, ~ldvarg14~751.offset : int;
    var ~tmp___22~751.base : int, ~tmp___22~751.offset : int;
    var ~ldvarg34~751.base : int, ~ldvarg34~751.offset : int;
    var ~tmp___23~751.base : int, ~tmp___23~751.offset : int;
    var ~ldvarg28~751.base : int, ~ldvarg28~751.offset : int;
    var ~tmp___24~751.base : int, ~tmp___24~751.offset : int;
    var ~#ldvarg39~751.base : int, ~#ldvarg39~751.offset : int;
    var ~ldvarg20~751.base : int, ~ldvarg20~751.offset : int;
    var ~tmp___25~751.base : int, ~tmp___25~751.offset : int;
    var ~ldvarg31~751.base : int, ~ldvarg31~751.offset : int;
    var ~tmp___26~751.base : int, ~tmp___26~751.offset : int;
    var ~ldvarg41~751.base : int, ~ldvarg41~751.offset : int;
    var ~tmp___27~751.base : int, ~tmp___27~751.offset : int;
    var ~#ldvarg8~751.base : int, ~#ldvarg8~751.offset : int;
    var ~ldvarg13~751.base : int, ~ldvarg13~751.offset : int;
    var ~tmp___28~751.base : int, ~tmp___28~751.offset : int;
    var ~ldvarg10~751.base : int, ~ldvarg10~751.offset : int;
    var ~tmp___29~751.base : int, ~tmp___29~751.offset : int;
    var ~ldvarg36~751.base : int, ~ldvarg36~751.offset : int;
    var ~tmp___30~751.base : int, ~tmp___30~751.offset : int;
    var ~ldvarg40~751.base : int, ~ldvarg40~751.offset : int;
    var ~tmp___31~751.base : int, ~tmp___31~751.offset : int;
    var ~ldvarg9~751.base : int, ~ldvarg9~751.offset : int;
    var ~tmp___32~751.base : int, ~tmp___32~751.offset : int;
    var ~ldvarg45~751.base : int, ~ldvarg45~751.offset : int;
    var ~tmp___33~751.base : int, ~tmp___33~751.offset : int;
    var ~ldvarg26~751.base : int, ~ldvarg26~751.offset : int;
    var ~tmp___34~751.base : int, ~tmp___34~751.offset : int;
    var ~ldvarg27~751.base : int, ~ldvarg27~751.offset : int;
    var ~tmp___35~751.base : int, ~tmp___35~751.offset : int;
    var ~ldvarg15~751.base : int, ~ldvarg15~751.offset : int;
    var ~tmp___36~751.base : int, ~tmp___36~751.offset : int;
    var ~ldvarg30~751.base : int, ~ldvarg30~751.offset : int;
    var ~tmp___37~751.base : int, ~tmp___37~751.offset : int;
    var ~ldvarg21~751.base : int, ~ldvarg21~751.offset : int;
    var ~tmp___38~751.base : int, ~tmp___38~751.offset : int;
    var ~ldvarg17~751.base : int, ~ldvarg17~751.offset : int;
    var ~tmp___39~751.base : int, ~tmp___39~751.offset : int;
    var ~ldvarg25~751.base : int, ~ldvarg25~751.offset : int;
    var ~tmp___40~751.base : int, ~tmp___40~751.offset : int;
    var ~ldvarg22~751.base : int, ~ldvarg22~751.offset : int;
    var ~tmp___41~751.base : int, ~tmp___41~751.offset : int;
    var ~ldvarg19~751.base : int, ~ldvarg19~751.offset : int;
    var ~tmp___42~751.base : int, ~tmp___42~751.offset : int;
    var ~tmp___43~751 : int;
    var ~tmp___44~751 : int;
    var ~tmp___45~751 : int;
    var ~tmp___46~751 : int;
    var ~tmp___47~751 : int;
    var ~tmp___48~751 : int;

  loc9:
    havoc ~ldvarg0~751.base, ~ldvarg0~751.offset;
    havoc ~tmp~751.base, ~tmp~751.offset;
    havoc ~ldvarg1~751;
    havoc ~tmp___0~751;
    havoc ~ldvarg7~751.base, ~ldvarg7~751.offset;
    havoc ~tmp___1~751.base, ~tmp___1~751.offset;
    havoc ~ldvarg4~751.base, ~ldvarg4~751.offset;
    havoc ~tmp___2~751.base, ~tmp___2~751.offset;
    havoc ~ldvarg3~751.base, ~ldvarg3~751.offset;
    havoc ~tmp___3~751.base, ~tmp___3~751.offset;
    havoc ~ldvarg5~751;
    havoc ~tmp___4~751;
    havoc ~ldvarg2~751;
    havoc ~tmp___5~751;
    havoc ~ldvarg6~751.base, ~ldvarg6~751.offset;
    havoc ~tmp___6~751.base, ~tmp___6~751.offset;
    havoc ~ldvarg18~751.base, ~ldvarg18~751.offset;
    havoc ~tmp___7~751.base, ~tmp___7~751.offset;
    havoc ~ldvarg11~751.base, ~ldvarg11~751.offset;
    havoc ~tmp___8~751.base, ~tmp___8~751.offset;
    havoc ~ldvarg32~751.base, ~ldvarg32~751.offset;
    havoc ~tmp___9~751.base, ~tmp___9~751.offset;
    havoc ~ldvarg23~751.base, ~ldvarg23~751.offset;
    havoc ~tmp___10~751.base, ~tmp___10~751.offset;
    havoc ~ldvarg43~751.base, ~ldvarg43~751.offset;
    havoc ~tmp___11~751.base, ~tmp___11~751.offset;
    havoc ~ldvarg42~751.base, ~ldvarg42~751.offset;
    havoc ~tmp___12~751.base, ~tmp___12~751.offset;
    havoc ~ldvarg12~751;
    havoc ~tmp___13~751;
    havoc ~ldvarg37~751.base, ~ldvarg37~751.offset;
    havoc ~tmp___14~751.base, ~tmp___14~751.offset;
    havoc ~ldvarg29~751.base, ~ldvarg29~751.offset;
    havoc ~tmp___15~751.base, ~tmp___15~751.offset;
    havoc ~ldvarg44~751.base, ~ldvarg44~751.offset;
    havoc ~tmp___16~751.base, ~tmp___16~751.offset;
    havoc ~ldvarg24~751.base, ~ldvarg24~751.offset;
    havoc ~tmp___17~751.base, ~tmp___17~751.offset;
    havoc ~ldvarg35~751.base, ~ldvarg35~751.offset;
    havoc ~tmp___18~751.base, ~tmp___18~751.offset;
    havoc ~ldvarg38~751.base, ~ldvarg38~751.offset;
    havoc ~tmp___19~751.base, ~tmp___19~751.offset;
    havoc ~ldvarg33~751.base, ~ldvarg33~751.offset;
    havoc ~tmp___20~751.base, ~tmp___20~751.offset;
    havoc ~ldvarg16~751.base, ~ldvarg16~751.offset;
    havoc ~tmp___21~751.base, ~tmp___21~751.offset;
    havoc ~ldvarg14~751.base, ~ldvarg14~751.offset;
    havoc ~tmp___22~751.base, ~tmp___22~751.offset;
    havoc ~ldvarg34~751.base, ~ldvarg34~751.offset;
    havoc ~tmp___23~751.base, ~tmp___23~751.offset;
    havoc ~ldvarg28~751.base, ~ldvarg28~751.offset;
    havoc ~tmp___24~751.base, ~tmp___24~751.offset;
    call ~#ldvarg39~751.base, ~#ldvarg39~751.offset := #Ultimate.alloc(4);
    havoc ~ldvarg20~751.base, ~ldvarg20~751.offset;
    havoc ~tmp___25~751.base, ~tmp___25~751.offset;
    havoc ~ldvarg31~751.base, ~ldvarg31~751.offset;
    havoc ~tmp___26~751.base, ~tmp___26~751.offset;
    havoc ~ldvarg41~751.base, ~ldvarg41~751.offset;
    havoc ~tmp___27~751.base, ~tmp___27~751.offset;
    call ~#ldvarg8~751.base, ~#ldvarg8~751.offset := #Ultimate.alloc(4);
    havoc ~ldvarg13~751.base, ~ldvarg13~751.offset;
    havoc ~tmp___28~751.base, ~tmp___28~751.offset;
    havoc ~ldvarg10~751.base, ~ldvarg10~751.offset;
    havoc ~tmp___29~751.base, ~tmp___29~751.offset;
    havoc ~ldvarg36~751.base, ~ldvarg36~751.offset;
    havoc ~tmp___30~751.base, ~tmp___30~751.offset;
    havoc ~ldvarg40~751.base, ~ldvarg40~751.offset;
    havoc ~tmp___31~751.base, ~tmp___31~751.offset;
    havoc ~ldvarg9~751.base, ~ldvarg9~751.offset;
    havoc ~tmp___32~751.base, ~tmp___32~751.offset;
    havoc ~ldvarg45~751.base, ~ldvarg45~751.offset;
    havoc ~tmp___33~751.base, ~tmp___33~751.offset;
    havoc ~ldvarg26~751.base, ~ldvarg26~751.offset;
    havoc ~tmp___34~751.base, ~tmp___34~751.offset;
    havoc ~ldvarg27~751.base, ~ldvarg27~751.offset;
    havoc ~tmp___35~751.base, ~tmp___35~751.offset;
    havoc ~ldvarg15~751.base, ~ldvarg15~751.offset;
    havoc ~tmp___36~751.base, ~tmp___36~751.offset;
    havoc ~ldvarg30~751.base, ~ldvarg30~751.offset;
    havoc ~tmp___37~751.base, ~tmp___37~751.offset;
    havoc ~ldvarg21~751.base, ~ldvarg21~751.offset;
    havoc ~tmp___38~751.base, ~tmp___38~751.offset;
    havoc ~ldvarg17~751.base, ~ldvarg17~751.offset;
    havoc ~tmp___39~751.base, ~tmp___39~751.offset;
    havoc ~ldvarg25~751.base, ~ldvarg25~751.offset;
    havoc ~tmp___40~751.base, ~tmp___40~751.offset;
    havoc ~ldvarg22~751.base, ~ldvarg22~751.offset;
    havoc ~tmp___41~751.base, ~tmp___41~751.offset;
    havoc ~ldvarg19~751.base, ~ldvarg19~751.offset;
    havoc ~tmp___42~751.base, ~tmp___42~751.offset;
    havoc ~tmp___43~751;
    havoc ~tmp___44~751;
    havoc ~tmp___45~751;
    havoc ~tmp___46~751;
    havoc ~tmp___47~751;
    havoc ~tmp___48~751;
    call #t~ret970.base, #t~ret970.offset := ldv_zalloc(1800);
    ~tmp~751.base, ~tmp~751.offset := #t~ret970.base, #t~ret970.offset;
    havoc #t~ret970.base, #t~ret970.offset;
    ~ldvarg0~751.base, ~ldvarg0~751.offset := ~tmp~751.base, ~tmp~751.offset;
    ~tmp___0~751 := #t~nondet971;
    havoc #t~nondet971;
    ~ldvarg1~751 := ~tmp___0~751;
    call #t~ret972.base, #t~ret972.offset := ldv_zalloc(184);
    ~tmp___1~751.base, ~tmp___1~751.offset := #t~ret972.base, #t~ret972.offset;
    havoc #t~ret972.base, #t~ret972.offset;
    ~ldvarg7~751.base, ~ldvarg7~751.offset := ~tmp___1~751.base, ~tmp___1~751.offset;
    call #t~ret973.base, #t~ret973.offset := ldv_zalloc(8);
    ~tmp___2~751.base, ~tmp___2~751.offset := #t~ret973.base, #t~ret973.offset;
    havoc #t~ret973.base, #t~ret973.offset;
    ~ldvarg4~751.base, ~ldvarg4~751.offset := ~tmp___2~751.base, ~tmp___2~751.offset;
    call #t~ret974.base, #t~ret974.offset := ldv_zalloc(16);
    ~tmp___3~751.base, ~tmp___3~751.offset := #t~ret974.base, #t~ret974.offset;
    havoc #t~ret974.base, #t~ret974.offset;
    ~ldvarg3~751.base, ~ldvarg3~751.offset := ~tmp___3~751.base, ~tmp___3~751.offset;
    assume -2147483648 <= #t~nondet975 && #t~nondet975 <= 2147483647;
    ~tmp___4~751 := #t~nondet975;
    havoc #t~nondet975;
    ~ldvarg5~751 := ~tmp___4~751;
    ~tmp___5~751 := #t~nondet976;
    havoc #t~nondet976;
    ~ldvarg2~751 := ~tmp___5~751;
    call #t~ret977.base, #t~ret977.offset := ldv_zalloc(1);
    ~tmp___6~751.base, ~tmp___6~751.offset := #t~ret977.base, #t~ret977.offset;
    havoc #t~ret977.base, #t~ret977.offset;
    ~ldvarg6~751.base, ~ldvarg6~751.offset := ~tmp___6~751.base, ~tmp___6~751.offset;
    call #t~ret978.base, #t~ret978.offset := ldv_zalloc(140);
    ~tmp___7~751.base, ~tmp___7~751.offset := #t~ret978.base, #t~ret978.offset;
    havoc #t~ret978.base, #t~ret978.offset;
    ~ldvarg18~751.base, ~ldvarg18~751.offset := ~tmp___7~751.base, ~tmp___7~751.offset;
    call #t~ret979.base, #t~ret979.offset := ldv_zalloc(1);
    ~tmp___8~751.base, ~tmp___8~751.offset := #t~ret979.base, #t~ret979.offset;
    havoc #t~ret979.base, #t~ret979.offset;
    ~ldvarg11~751.base, ~ldvarg11~751.offset := ~tmp___8~751.base, ~tmp___8~751.offset;
    call #t~ret980.base, #t~ret980.offset := ldv_zalloc(1);
    ~tmp___9~751.base, ~tmp___9~751.offset := #t~ret980.base, #t~ret980.offset;
    havoc #t~ret980.base, #t~ret980.offset;
    ~ldvarg32~751.base, ~ldvarg32~751.offset := ~tmp___9~751.base, ~tmp___9~751.offset;
    call #t~ret981.base, #t~ret981.offset := ldv_zalloc(1);
    ~tmp___10~751.base, ~tmp___10~751.offset := #t~ret981.base, #t~ret981.offset;
    havoc #t~ret981.base, #t~ret981.offset;
    ~ldvarg23~751.base, ~ldvarg23~751.offset := ~tmp___10~751.base, ~tmp___10~751.offset;
    call #t~ret982.base, #t~ret982.offset := ldv_zalloc(1);
    ~tmp___11~751.base, ~tmp___11~751.offset := #t~ret982.base, #t~ret982.offset;
    havoc #t~ret982.base, #t~ret982.offset;
    ~ldvarg43~751.base, ~ldvarg43~751.offset := ~tmp___11~751.base, ~tmp___11~751.offset;
    call #t~ret983.base, #t~ret983.offset := ldv_zalloc(1);
    ~tmp___12~751.base, ~tmp___12~751.offset := #t~ret983.base, #t~ret983.offset;
    havoc #t~ret983.base, #t~ret983.offset;
    ~ldvarg42~751.base, ~ldvarg42~751.offset := ~tmp___12~751.base, ~tmp___12~751.offset;
    ~tmp___13~751 := #t~nondet984;
    havoc #t~nondet984;
    ~ldvarg12~751 := ~tmp___13~751;
    call #t~ret985.base, #t~ret985.offset := ldv_zalloc(64);
    ~tmp___14~751.base, ~tmp___14~751.offset := #t~ret985.base, #t~ret985.offset;
    havoc #t~ret985.base, #t~ret985.offset;
    ~ldvarg37~751.base, ~ldvarg37~751.offset := ~tmp___14~751.base, ~tmp___14~751.offset;
    call #t~ret986.base, #t~ret986.offset := ldv_zalloc(1);
    ~tmp___15~751.base, ~tmp___15~751.offset := #t~ret986.base, #t~ret986.offset;
    havoc #t~ret986.base, #t~ret986.offset;
    ~ldvarg29~751.base, ~ldvarg29~751.offset := ~tmp___15~751.base, ~tmp___15~751.offset;
    call #t~ret987.base, #t~ret987.offset := ldv_zalloc(20);
    ~tmp___16~751.base, ~tmp___16~751.offset := #t~ret987.base, #t~ret987.offset;
    havoc #t~ret987.base, #t~ret987.offset;
    ~ldvarg44~751.base, ~ldvarg44~751.offset := ~tmp___16~751.base, ~tmp___16~751.offset;
    call #t~ret988.base, #t~ret988.offset := ldv_zalloc(52);
    ~tmp___17~751.base, ~tmp___17~751.offset := #t~ret988.base, #t~ret988.offset;
    havoc #t~ret988.base, #t~ret988.offset;
    ~ldvarg24~751.base, ~ldvarg24~751.offset := ~tmp___17~751.base, ~tmp___17~751.offset;
    call #t~ret989.base, #t~ret989.offset := ldv_zalloc(1);
    ~tmp___18~751.base, ~tmp___18~751.offset := #t~ret989.base, #t~ret989.offset;
    havoc #t~ret989.base, #t~ret989.offset;
    ~ldvarg35~751.base, ~ldvarg35~751.offset := ~tmp___18~751.base, ~tmp___18~751.offset;
    call #t~ret990.base, #t~ret990.offset := ldv_zalloc(1);
    ~tmp___19~751.base, ~tmp___19~751.offset := #t~ret990.base, #t~ret990.offset;
    havoc #t~ret990.base, #t~ret990.offset;
    ~ldvarg38~751.base, ~ldvarg38~751.offset := ~tmp___19~751.base, ~tmp___19~751.offset;
    call #t~ret991.base, #t~ret991.offset := ldv_zalloc(1);
    ~tmp___20~751.base, ~tmp___20~751.offset := #t~ret991.base, #t~ret991.offset;
    havoc #t~ret991.base, #t~ret991.offset;
    ~ldvarg33~751.base, ~ldvarg33~751.offset := ~tmp___20~751.base, ~tmp___20~751.offset;
    call #t~ret992.base, #t~ret992.offset := ldv_zalloc(1);
    ~tmp___21~751.base, ~tmp___21~751.offset := #t~ret992.base, #t~ret992.offset;
    havoc #t~ret992.base, #t~ret992.offset;
    ~ldvarg16~751.base, ~ldvarg16~751.offset := ~tmp___21~751.base, ~tmp___21~751.offset;
    call #t~ret993.base, #t~ret993.offset := ldv_zalloc(1);
    ~tmp___22~751.base, ~tmp___22~751.offset := #t~ret993.base, #t~ret993.offset;
    havoc #t~ret993.base, #t~ret993.offset;
    ~ldvarg14~751.base, ~ldvarg14~751.offset := ~tmp___22~751.base, ~tmp___22~751.offset;
    call #t~ret994.base, #t~ret994.offset := ldv_zalloc(200);
    ~tmp___23~751.base, ~tmp___23~751.offset := #t~ret994.base, #t~ret994.offset;
    havoc #t~ret994.base, #t~ret994.offset;
    ~ldvarg34~751.base, ~ldvarg34~751.offset := ~tmp___23~751.base, ~tmp___23~751.offset;
    call #t~ret995.base, #t~ret995.offset := ldv_zalloc(44);
    ~tmp___24~751.base, ~tmp___24~751.offset := #t~ret995.base, #t~ret995.offset;
    havoc #t~ret995.base, #t~ret995.offset;
    ~ldvarg28~751.base, ~ldvarg28~751.offset := ~tmp___24~751.base, ~tmp___24~751.offset;
    call #t~ret996.base, #t~ret996.offset := ldv_zalloc(140);
    ~tmp___25~751.base, ~tmp___25~751.offset := #t~ret996.base, #t~ret996.offset;
    havoc #t~ret996.base, #t~ret996.offset;
    ~ldvarg20~751.base, ~ldvarg20~751.offset := ~tmp___25~751.base, ~tmp___25~751.offset;
    call #t~ret997.base, #t~ret997.offset := ldv_zalloc(4);
    ~tmp___26~751.base, ~tmp___26~751.offset := #t~ret997.base, #t~ret997.offset;
    havoc #t~ret997.base, #t~ret997.offset;
    ~ldvarg31~751.base, ~ldvarg31~751.offset := ~tmp___26~751.base, ~tmp___26~751.offset;
    call #t~ret998.base, #t~ret998.offset := ldv_zalloc(1);
    ~tmp___27~751.base, ~tmp___27~751.offset := #t~ret998.base, #t~ret998.offset;
    havoc #t~ret998.base, #t~ret998.offset;
    ~ldvarg41~751.base, ~ldvarg41~751.offset := ~tmp___27~751.base, ~tmp___27~751.offset;
    call #t~ret999.base, #t~ret999.offset := ldv_zalloc(1);
    ~tmp___28~751.base, ~tmp___28~751.offset := #t~ret999.base, #t~ret999.offset;
    havoc #t~ret999.base, #t~ret999.offset;
    ~ldvarg13~751.base, ~ldvarg13~751.offset := ~tmp___28~751.base, ~tmp___28~751.offset;
    call #t~ret1000.base, #t~ret1000.offset := ldv_zalloc(56);
    ~tmp___29~751.base, ~tmp___29~751.offset := #t~ret1000.base, #t~ret1000.offset;
    havoc #t~ret1000.base, #t~ret1000.offset;
    ~ldvarg10~751.base, ~ldvarg10~751.offset := ~tmp___29~751.base, ~tmp___29~751.offset;
    call #t~ret1001.base, #t~ret1001.offset := ldv_zalloc(1);
    ~tmp___30~751.base, ~tmp___30~751.offset := #t~ret1001.base, #t~ret1001.offset;
    havoc #t~ret1001.base, #t~ret1001.offset;
    ~ldvarg36~751.base, ~ldvarg36~751.offset := ~tmp___30~751.base, ~tmp___30~751.offset;
    call #t~ret1002.base, #t~ret1002.offset := ldv_zalloc(1);
    ~tmp___31~751.base, ~tmp___31~751.offset := #t~ret1002.base, #t~ret1002.offset;
    havoc #t~ret1002.base, #t~ret1002.offset;
    ~ldvarg40~751.base, ~ldvarg40~751.offset := ~tmp___31~751.base, ~tmp___31~751.offset;
    call #t~ret1003.base, #t~ret1003.offset := ldv_zalloc(1);
    ~tmp___32~751.base, ~tmp___32~751.offset := #t~ret1003.base, #t~ret1003.offset;
    havoc #t~ret1003.base, #t~ret1003.offset;
    ~ldvarg9~751.base, ~ldvarg9~751.offset := ~tmp___32~751.base, ~tmp___32~751.offset;
    call #t~ret1004.base, #t~ret1004.offset := ldv_zalloc(1);
    ~tmp___33~751.base, ~tmp___33~751.offset := #t~ret1004.base, #t~ret1004.offset;
    havoc #t~ret1004.base, #t~ret1004.offset;
    ~ldvarg45~751.base, ~ldvarg45~751.offset := ~tmp___33~751.base, ~tmp___33~751.offset;
    call #t~ret1005.base, #t~ret1005.offset := ldv_zalloc(104);
    ~tmp___34~751.base, ~tmp___34~751.offset := #t~ret1005.base, #t~ret1005.offset;
    havoc #t~ret1005.base, #t~ret1005.offset;
    ~ldvarg26~751.base, ~ldvarg26~751.offset := ~tmp___34~751.base, ~tmp___34~751.offset;
    call #t~ret1006.base, #t~ret1006.offset := ldv_zalloc(1);
    ~tmp___35~751.base, ~tmp___35~751.offset := #t~ret1006.base, #t~ret1006.offset;
    havoc #t~ret1006.base, #t~ret1006.offset;
    ~ldvarg27~751.base, ~ldvarg27~751.offset := ~tmp___35~751.base, ~tmp___35~751.offset;
    call #t~ret1007.base, #t~ret1007.offset := ldv_zalloc(80);
    ~tmp___36~751.base, ~tmp___36~751.offset := #t~ret1007.base, #t~ret1007.offset;
    havoc #t~ret1007.base, #t~ret1007.offset;
    ~ldvarg15~751.base, ~ldvarg15~751.offset := ~tmp___36~751.base, ~tmp___36~751.offset;
    call #t~ret1008.base, #t~ret1008.offset := ldv_zalloc(1);
    ~tmp___37~751.base, ~tmp___37~751.offset := #t~ret1008.base, #t~ret1008.offset;
    havoc #t~ret1008.base, #t~ret1008.offset;
    ~ldvarg30~751.base, ~ldvarg30~751.offset := ~tmp___37~751.base, ~tmp___37~751.offset;
    call #t~ret1009.base, #t~ret1009.offset := ldv_zalloc(1);
    ~tmp___38~751.base, ~tmp___38~751.offset := #t~ret1009.base, #t~ret1009.offset;
    havoc #t~ret1009.base, #t~ret1009.offset;
    ~ldvarg21~751.base, ~ldvarg21~751.offset := ~tmp___38~751.base, ~tmp___38~751.offset;
    call #t~ret1010.base, #t~ret1010.offset := ldv_zalloc(1);
    ~tmp___39~751.base, ~tmp___39~751.offset := #t~ret1010.base, #t~ret1010.offset;
    havoc #t~ret1010.base, #t~ret1010.offset;
    ~ldvarg17~751.base, ~ldvarg17~751.offset := ~tmp___39~751.base, ~tmp___39~751.offset;
    call #t~ret1011.base, #t~ret1011.offset := ldv_zalloc(1);
    ~tmp___40~751.base, ~tmp___40~751.offset := #t~ret1011.base, #t~ret1011.offset;
    havoc #t~ret1011.base, #t~ret1011.offset;
    ~ldvarg25~751.base, ~ldvarg25~751.offset := ~tmp___40~751.base, ~tmp___40~751.offset;
    call #t~ret1012.base, #t~ret1012.offset := ldv_zalloc(56);
    ~tmp___41~751.base, ~tmp___41~751.offset := #t~ret1012.base, #t~ret1012.offset;
    havoc #t~ret1012.base, #t~ret1012.offset;
    ~ldvarg22~751.base, ~ldvarg22~751.offset := ~tmp___41~751.base, ~tmp___41~751.offset;
    call #t~ret1013.base, #t~ret1013.offset := ldv_zalloc(1);
    ~tmp___42~751.base, ~tmp___42~751.offset := #t~ret1013.base, #t~ret1013.offset;
    havoc #t~ret1013.base, #t~ret1013.offset;
    ~ldvarg19~751.base, ~ldvarg19~751.offset := ~tmp___42~751.base, ~tmp___42~751.offset;
    call ldv_initialize();
    call #t~memset1014.base, #t~memset1014.offset := #Ultimate.C_memset(~#ldvarg39~751.base, ~#ldvarg39~751.offset, 0, 4);
    havoc #t~memset1014.base, #t~memset1014.offset;
    call #t~memset1015.base, #t~memset1015.offset := #Ultimate.C_memset(~#ldvarg8~751.base, ~#ldvarg8~751.offset, 0, 4);
    havoc #t~memset1015.base, #t~memset1015.offset;
    ~ldv_state_variable_4 := 0;
    ~ldv_state_variable_1 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_3 := 0;
    ~ldv_state_variable_2 := 0;
    assume -2147483648 <= #t~nondet1016 && #t~nondet1016 <= 2147483647;
    ~tmp___43~751 := #t~nondet1016;
    havoc #t~nondet1016;
    #t~switch1017 := ~tmp___43~751 == 0;
    assume !#t~switch1017;
    #t~switch1017 := #t~switch1017 || ~tmp___43~751 == 1;
    assume !#t~switch1017;
    #t~switch1017 := #t~switch1017 || ~tmp___43~751 == 2;
    assume #t~switch1017;
    assume ~ldv_state_variable_0 != 0;
    assume -2147483648 <= #t~nondet1023 && #t~nondet1023 <= 2147483647;
    ~tmp___46~751 := #t~nondet1023;
    havoc #t~nondet1023;
    #t~switch1024 := ~tmp___46~751 == 0;
    assume !#t~switch1024;
    #t~switch1024 := #t~switch1024 || ~tmp___46~751 == 1;
    assume #t~switch1024;
    assume ~ldv_state_variable_0 == 1;
    call #t~ret1025 := gspca_init();
    assume -2147483648 <= #t~ret1025 && #t~ret1025 <= 2147483647;
    ~ldv_retval_0 := #t~ret1025;
    havoc #t~ret1025;
    assume !(~ldv_retval_0 == 0);
    assume ~ldv_retval_0 != 0;
    ~ldv_state_variable_0 := 2;
    call ldv_check_final_state();
    return;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_4, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_3, ~ldv_state_variable_2, ~ldv_retval_0, ~ldv_retval_1, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~dev_fops_group0.base, ~dev_fops_group0.offset, ~gspca_vm_ops_group0.base, ~gspca_vm_ops_group0.offset, ~dev_ioctl_ops_group3.base, ~dev_ioctl_ops_group3.offset, ~dev_ioctl_ops_group0.base, ~dev_ioctl_ops_group0.offset, ~dev_ioctl_ops_group1.base, ~dev_ioctl_ops_group1.offset, ~dev_ioctl_ops_group5.base, ~dev_ioctl_ops_group5.offset, ~dev_ioctl_ops_group4.base, ~dev_ioctl_ops_group4.offset, ~dev_ioctl_ops_group2.base, ~dev_ioctl_ops_group2.offset, ~completeFnInt.base, ~completeFnInt.offset, ~completeFnIntCounter, ~usb_urb.base, ~usb_urb.offset, ~completeFnBulkCounter;

procedure ns_to_timeval(#in~20 : int) returns (#res.tv_sec : int, #res.tv_usec : int);
modifies ;

procedure dev_get_drvdata(#in~46.base : int, #in~46.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure vm_insert_page(#in~78.base : int, #in~78.offset : int, #in~79 : int, #in~80.base : int, #in~80.offset : int) returns (#res : int);
modifies ;

procedure video_ioctl2(#in~90.base : int, #in~90.offset : int, #in~91 : int, #in~92 : int) returns (#res : int);
modifies ;

procedure video_device_release_empty(#in~105.base : int, #in~105.offset : int) returns ();
modifies ;

procedure msleep(#in~15 : int) returns ();
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure autoremove_wake_function(#in~31.base : int, #in~31.offset : int, #in~32 : int, #in~33 : int, #in~34.base : int, #in~34.offset : int) returns (#res : int);
modifies ;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure ldv_initialize() returns ();
modifies ;

procedure usb_set_interface(#in~68.base : int, #in~68.offset : int, #in~69 : int, #in~70 : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_pointer() returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_kill_urb(#in~57.base : int, #in~57.offset : int) returns ();
modifies ;

procedure mutex_lock_interruptible_nested(#in~37.base : int, #in~37.offset : int, #in~38 : int) returns (#res : int);
modifies ;

procedure kfree(#in~72.base : int, #in~72.offset : int) returns ();
modifies ;

procedure vfree(#in~41.base : int, #in~41.offset : int) returns ();
modifies ;

procedure v4l2_fh_open(#in~99.base : int, #in~99.offset : int) returns (#res : int);
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];

procedure mutex_unlock(#in~39.base : int, #in~39.offset : int) returns ();
modifies ;

procedure __memcpy(#in~0.base : int, #in~0.offset : int, #in~1.base : int, #in~1.offset : int, #in~2 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure v4l2_device_unregister(#in~110.base : int, #in~110.offset : int) returns ();
modifies ;

procedure __VERIFIER_error() returns ();
modifies ;

procedure v4l2_ctrl_subscribe_event(#in~95.base : int, #in~95.offset : int, #in~96.base : int, #in~96.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_uint() returns (#res : int);
modifies ;

procedure vmalloc_32(#in~40 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __VERIFIER_assume(#in~expression : int) returns ();
modifies ;

procedure ktime_get() returns (#res.tv64 : int);
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];

procedure __bad_percpu_size() returns ();
modifies ;

procedure _copy_to_user(#in~42.base : int, #in~42.offset : int, #in~43.base : int, #in~43.offset : int, #in~44 : int) returns (#res : int);
modifies ;

procedure usb_free_coherent(#in~62.base : int, #in~62.offset : int, #in~63 : int, #in~64.base : int, #in~64.offset : int, #in~65 : int) returns ();
modifies ;

procedure module_put(#in~104.base : int, #in~104.offset : int) returns ();
modifies ;

procedure usb_alloc_coherent(#in~58.base : int, #in~58.offset : int, #in~59 : int, #in~60 : int, #in~61.base : int, #in~61.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure v4l2_ctrl_handler_free(#in~93.base : int, #in~93.offset : int) returns ();
modifies ;

procedure __wake_up(#in~22.base : int, #in~22.offset : int, #in~23 : int, #in~24 : int, #in~25.base : int, #in~25.offset : int) returns ();
modifies ;

procedure strlcpy(#in~6.base : int, #in~6.offset : int, #in~7.base : int, #in~7.offset : int, #in~8 : int) returns (#res : int);
modifies ;

procedure usb_ifnum_to_if(#in~52.base : int, #in~52.offset : int, #in~53 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure v4l2_ctrl_poll(#in~97.base : int, #in~97.offset : int, #in~98.base : int, #in~98.offset : int) returns (#res : int);
modifies ;

procedure memset(#in~3.base : int, #in~3.offset : int, #in~4 : int, #in~5 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure video_devdata(#in~107.base : int, #in~107.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure v4l2_ctrl_handler_setup(#in~94.base : int, #in~94.offset : int) returns (#res : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure __VERIFIER_nondet_ulong() returns (#res : int);
modifies ;

procedure might_fault() returns ();
modifies ;

procedure prepare_to_wait(#in~26.base : int, #in~26.offset : int, #in~27.base : int, #in~27.offset : int, #in~28 : int) returns ();
modifies ;

procedure printk(#in~11.base : int, #in~11.offset : int) returns (#res : int);
modifies ;

procedure calloc(#in~nmemb : int, #in~size : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure v4l2_fh_release(#in~100.base : int, #in~100.offset : int) returns (#res : int);
modifies ;

procedure msecs_to_jiffies(#in~21 : int) returns (#res : int);
modifies ;

procedure try_module_get(#in~103.base : int, #in~103.offset : int) returns (#res : ~bool);
modifies ;

procedure vmalloc_to_page(#in~77.base : int, #in~77.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure snprintf(#in~12.base : int, #in~12.offset : int, #in~13 : int, #in~14.base : int, #in~14.offset : int) returns (#res : int);
modifies ;

procedure mutex_lock_nested(#in~35.base : int, #in~35.offset : int, #in~36 : int) returns ();
modifies ;

procedure v4l2_event_unsubscribe(#in~101.base : int, #in~101.offset : int, #in~102.base : int, #in~102.offset : int) returns (#res : int);
modifies ;

procedure schedule_timeout(#in~47 : int) returns (#res : int);
modifies ;

procedure usb_clear_halt(#in~66.base : int, #in~66.offset : int, #in~67 : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_size_t() returns (#res : int);
modifies ;

procedure ldv_probe_1() returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure finish_wait(#in~29.base : int, #in~29.offset : int, #in~30.base : int, #in~30.offset : int) returns ();
modifies ;


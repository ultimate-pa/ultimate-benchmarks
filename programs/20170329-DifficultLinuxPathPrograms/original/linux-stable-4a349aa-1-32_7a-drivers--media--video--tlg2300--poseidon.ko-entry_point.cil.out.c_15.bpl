type STRUCT~map_segment;
type STRUCT~perf_event;
type STRUCT~compat_timespec;
type STRUCT~tvec_base;
type STRUCT~sock;
type STRUCT~sysfs_dirent;
type STRUCT~nameidata;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~pid_namespace;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~iovec;
type STRUCT~backing_dev_info;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~pipe_inode_info;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~kstatfs;
type STRUCT~seq_file;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type STRUCT~dma_map_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~mmu_notifier_mm;
type STRUCT~keyring_list;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~tty_struct;
type STRUCT~autogroup;
type STRUCT~tty_audit_buf;
type STRUCT~user_namespace;
type STRUCT~rq;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~mem_cgroup;
type STRUCT~fs_struct;
type STRUCT~nsproxy;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~bio_list;
type STRUCT~io_context;
type STRUCT~robust_list_head;
type STRUCT~compat_robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~ep_device;
type STRUCT~mon_bus;
type STRUCT~usb_tt;
type STRUCT~wusb_dev;
type STRUCT~scatterlist;
type STRUCT~v4l2_fh;
type STRUCT~v4l2_ctrl_handler;
type STRUCT~tuner_setup;
type STRUCT~snd_shutdown_f_ops;
type STRUCT~snd_mixer_oss;
type STRUCT~snd_pcm_plugin;
type STRUCT~snd_pcm_hwptr_log;
type STRUCT~snd_timer;
type STRUCT~css_id;
type STRUCT~cgroupfs_root;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__s64 = int;
type ~__u64 = int;
type ~u8 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~umode_t = int;
type ~__kernel_mode_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid_t = int;
type ~__kernel_gid_t = int;
type ~__kernel_size_t = int;
type ~__kernel_ssize_t = int;
type ~__kernel_time_t = int;
type ~__kernel_suseconds_t = int;
type ~__kernel_clock_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~__kernel_loff_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~rwsem_count_t = int;
type ~qsize_t = int;
type ~kernel_ulong_t = int;
type ~cputime_t = int;
type ~ldv_func_ret_type___0 = int;
type ~__kernel_nlink_t = int;
type ~__kernel_off_t = int;
type ~snd_pcm_uframes_t = int;
type ~snd_pcm_sframes_t = int;
type ~snd_pcm_access_t = int;
type ~snd_pcm_format_t = int;
type ~snd_pcm_subformat_t = int;
type ~snd_pcm_state_t = int;
type ~snd_pcm_hw_param_t = int;
type ~s8 = int;
type ~dma_addr_t = ~u64;
type ~__kernel_uid32_t = ~__kernel_uid_t;
type ~__kernel_gid32_t = ~__kernel_gid_t;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~mode_t = ~__kernel_mode_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint8_t = ~__u8;
type ~uint16_t = ~__u16;
type ~uint32_t = ~__u32;
type ~__le16 = ~__u16;
type ~qid_t = ~__kernel_uid32_t;
type ~v4l2_std_id = ~__u64;
type ~irqreturn_t = int;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~fe_type_t = int;
type ~fe_caps_t = int;
type ~fe_sec_voltage_t = int;
type ~fe_sec_tone_mode_t = int;
type ~fe_sec_mini_cmd_t = int;
type ~fe_status_t = int;
type ~fe_spectral_inversion_t = int;
type ~fe_code_rate_t = int;
type ~fe_modulation_t = int;
type ~fe_transmit_mode_t = int;
type ~fe_bandwidth_t = int;
type ~fe_guard_interval_t = int;
type ~fe_hierarchy_t = int;
type ~fe_pilot_t = int;
type ~fe_rolloff_t = int;
type ~fe_delivery_system_t = int;
type ~dmx_output_t = int;
type ~dmx_input_t = int;
type ~dmx_pes_type_t = int;
type ~dmx_source_t = int;
type ~nlink_t = ~__kernel_nlink_t;
type ~off_t = ~__kernel_off_t;
const #funAddr~urb_complete_iso.base : int;
const #funAddr~urb_complete_iso.offset : int;
const #funAddr~urb_complete_bulk.base : int;
const #funAddr~urb_complete_bulk.offset : int;
const #funAddr~iso_bubble_handler.base : int;
const #funAddr~iso_bubble_handler.offset : int;
const #funAddr~pd_buf_setup.base : int;
const #funAddr~pd_buf_setup.offset : int;
const #funAddr~pd_buf_prepare.base : int;
const #funAddr~pd_buf_prepare.offset : int;
const #funAddr~pd_buf_queue.base : int;
const #funAddr~pd_buf_queue.offset : int;
const #funAddr~pd_buf_release.base : int;
const #funAddr~pd_buf_release.offset : int;
const #funAddr~pm_video_suspend.base : int;
const #funAddr~pm_video_suspend.offset : int;
const #funAddr~pm_video_resume.base : int;
const #funAddr~pm_video_resume.offset : int;
const #funAddr~poseidon_delete.base : int;
const #funAddr~poseidon_delete.offset : int;
const #funAddr~pd_video_read.base : int;
const #funAddr~pd_video_read.offset : int;
const #funAddr~pd_video_poll.base : int;
const #funAddr~pd_video_poll.offset : int;
const #funAddr~video_ioctl2.base : int;
const #funAddr~video_ioctl2.offset : int;
const #funAddr~pd_video_mmap.base : int;
const #funAddr~pd_video_mmap.offset : int;
const #funAddr~pd_video_open.base : int;
const #funAddr~pd_video_open.offset : int;
const #funAddr~pd_video_release.base : int;
const #funAddr~pd_video_release.offset : int;
const #funAddr~vidioc_querycap.base : int;
const #funAddr~vidioc_querycap.offset : int;
const #funAddr~vidioc_enum_fmt.base : int;
const #funAddr~vidioc_enum_fmt.offset : int;
const #funAddr~vidioc_g_fmt.base : int;
const #funAddr~vidioc_g_fmt.offset : int;
const #funAddr~vidioc_g_fmt_vbi.base : int;
const #funAddr~vidioc_g_fmt_vbi.offset : int;
const #funAddr~vidioc_s_fmt.base : int;
const #funAddr~vidioc_s_fmt.offset : int;
const #funAddr~vidioc_try_fmt.base : int;
const #funAddr~vidioc_try_fmt.offset : int;
const #funAddr~vidioc_reqbufs.base : int;
const #funAddr~vidioc_reqbufs.offset : int;
const #funAddr~vidioc_querybuf.base : int;
const #funAddr~vidioc_querybuf.offset : int;
const #funAddr~vidioc_qbuf.base : int;
const #funAddr~vidioc_qbuf.offset : int;
const #funAddr~vidioc_dqbuf.base : int;
const #funAddr~vidioc_dqbuf.offset : int;
const #funAddr~vidioc_streamon.base : int;
const #funAddr~vidioc_streamon.offset : int;
const #funAddr~vidioc_streamoff.base : int;
const #funAddr~vidioc_streamoff.offset : int;
const #funAddr~vidioc_s_std.base : int;
const #funAddr~vidioc_s_std.offset : int;
const #funAddr~vidioc_enum_input.base : int;
const #funAddr~vidioc_enum_input.offset : int;
const #funAddr~vidioc_g_input.base : int;
const #funAddr~vidioc_g_input.offset : int;
const #funAddr~vidioc_s_input.base : int;
const #funAddr~vidioc_s_input.offset : int;
const #funAddr~vidioc_queryctrl.base : int;
const #funAddr~vidioc_queryctrl.offset : int;
const #funAddr~vidioc_g_ctrl.base : int;
const #funAddr~vidioc_g_ctrl.offset : int;
const #funAddr~vidioc_s_ctrl.base : int;
const #funAddr~vidioc_s_ctrl.offset : int;
const #funAddr~vidioc_enumaudio.base : int;
const #funAddr~vidioc_enumaudio.offset : int;
const #funAddr~vidioc_g_audio.base : int;
const #funAddr~vidioc_g_audio.offset : int;
const #funAddr~vidioc_s_audio.base : int;
const #funAddr~vidioc_s_audio.offset : int;
const #funAddr~vidioc_g_tuner.base : int;
const #funAddr~vidioc_g_tuner.offset : int;
const #funAddr~vidioc_s_tuner.base : int;
const #funAddr~vidioc_s_tuner.offset : int;
const #funAddr~vidioc_g_frequency.base : int;
const #funAddr~vidioc_g_frequency.offset : int;
const #funAddr~vidioc_s_frequency.base : int;
const #funAddr~vidioc_s_frequency.offset : int;
const #funAddr~video_device_release.base : int;
const #funAddr~video_device_release.offset : int;
const #funAddr~complete_handler_audio.base : int;
const #funAddr~complete_handler_audio.offset : int;
const #funAddr~snd_pd_capture_open.base : int;
const #funAddr~snd_pd_capture_open.offset : int;
const #funAddr~snd_pd_pcm_close.base : int;
const #funAddr~snd_pd_pcm_close.offset : int;
const #funAddr~snd_pcm_lib_ioctl.base : int;
const #funAddr~snd_pcm_lib_ioctl.offset : int;
const #funAddr~snd_pd_hw_capture_params.base : int;
const #funAddr~snd_pd_hw_capture_params.offset : int;
const #funAddr~snd_pd_hw_capture_free.base : int;
const #funAddr~snd_pd_hw_capture_free.offset : int;
const #funAddr~snd_pd_prepare.base : int;
const #funAddr~snd_pd_prepare.offset : int;
const #funAddr~snd_pd_capture_trigger.base : int;
const #funAddr~snd_pd_capture_trigger.offset : int;
const #funAddr~snd_pd_capture_pointer.base : int;
const #funAddr~snd_pd_capture_pointer.offset : int;
const #funAddr~snd_pcm_pd_get_page.base : int;
const #funAddr~snd_pcm_pd_get_page.offset : int;
const #funAddr~pm_dvb_suspend.base : int;
const #funAddr~pm_dvb_suspend.offset : int;
const #funAddr~pm_dvb_resume.base : int;
const #funAddr~pm_dvb_resume.offset : int;
const #funAddr~poseidon_fe_release.base : int;
const #funAddr~poseidon_fe_release.offset : int;
const #funAddr~poseidon_fe_init.base : int;
const #funAddr~poseidon_fe_init.offset : int;
const #funAddr~poseidon_fe_sleep.base : int;
const #funAddr~poseidon_fe_sleep.offset : int;
const #funAddr~poseidon_set_fe.base : int;
const #funAddr~poseidon_set_fe.offset : int;
const #funAddr~poseidon_fe_get_tune_settings.base : int;
const #funAddr~poseidon_fe_get_tune_settings.offset : int;
const #funAddr~poseidon_get_fe.base : int;
const #funAddr~poseidon_get_fe.offset : int;
const #funAddr~poseidon_read_status.base : int;
const #funAddr~poseidon_read_status.offset : int;
const #funAddr~poseidon_read_ber.base : int;
const #funAddr~poseidon_read_ber.offset : int;
const #funAddr~poseidon_read_signal_strength.base : int;
const #funAddr~poseidon_read_signal_strength.offset : int;
const #funAddr~poseidon_read_snr.base : int;
const #funAddr~poseidon_read_snr.offset : int;
const #funAddr~poseidon_read_unc_blocks.base : int;
const #funAddr~poseidon_read_unc_blocks.offset : int;
const #funAddr~poseidon_ts_bus_ctrl.base : int;
const #funAddr~poseidon_ts_bus_ctrl.offset : int;
const #funAddr~dvb_urb_irq.base : int;
const #funAddr~dvb_urb_irq.offset : int;
const #funAddr~pd_start_feed.base : int;
const #funAddr~pd_start_feed.offset : int;
const #funAddr~pd_stop_feed.base : int;
const #funAddr~pd_stop_feed.offset : int;
const #funAddr~poseidon_fm_open.base : int;
const #funAddr~poseidon_fm_open.offset : int;
const #funAddr~poseidon_fm_close.base : int;
const #funAddr~poseidon_fm_close.offset : int;
const #funAddr~pm_fm_suspend.base : int;
const #funAddr~pm_fm_suspend.offset : int;
const #funAddr~pm_fm_resume.base : int;
const #funAddr~pm_fm_resume.offset : int;
const #funAddr~vidioc_querycap___0.base : int;
const #funAddr~vidioc_querycap___0.offset : int;
const #funAddr~vidioc_g_input___0.base : int;
const #funAddr~vidioc_g_input___0.offset : int;
const #funAddr~vidioc_s_input___0.base : int;
const #funAddr~vidioc_s_input___0.offset : int;
const #funAddr~tlg_fm_vidioc_queryctrl.base : int;
const #funAddr~tlg_fm_vidioc_queryctrl.offset : int;
const #funAddr~tlg_fm_vidioc_g_ctrl.base : int;
const #funAddr~tlg_fm_vidioc_g_ctrl.offset : int;
const #funAddr~tlg_fm_vidioc_s_ctrl.base : int;
const #funAddr~tlg_fm_vidioc_s_ctrl.offset : int;
const #funAddr~tlg_fm_vidioc_g_exts_ctrl.base : int;
const #funAddr~tlg_fm_vidioc_g_exts_ctrl.offset : int;
const #funAddr~tlg_fm_vidioc_s_exts_ctrl.base : int;
const #funAddr~tlg_fm_vidioc_s_exts_ctrl.offset : int;
const #funAddr~tlg_fm_vidioc_querymenu.base : int;
const #funAddr~tlg_fm_vidioc_querymenu.offset : int;
const #funAddr~vidioc_g_audio___0.base : int;
const #funAddr~vidioc_g_audio___0.offset : int;
const #funAddr~vidioc_s_audio___0.base : int;
const #funAddr~vidioc_s_audio___0.offset : int;
const #funAddr~tlg_fm_vidioc_g_tuner.base : int;
const #funAddr~tlg_fm_vidioc_g_tuner.offset : int;
const #funAddr~vidioc_s_tuner___0.base : int;
const #funAddr~vidioc_s_tuner___0.offset : int;
const #funAddr~fm_get_freq.base : int;
const #funAddr~fm_get_freq.offset : int;
const #funAddr~fm_set_freq.base : int;
const #funAddr~fm_set_freq.offset : int;
const #funAddr~pm_notifier_block.base : int;
const #funAddr~pm_notifier_block.offset : int;
const #funAddr~hibernation_resume.base : int;
const #funAddr~hibernation_resume.offset : int;
const #funAddr~poseidon_probe.base : int;
const #funAddr~poseidon_probe.offset : int;
const #funAddr~poseidon_disconnect.base : int;
const #funAddr~poseidon_disconnect.offset : int;
const #funAddr~poseidon_suspend.base : int;
const #funAddr~poseidon_suspend.offset : int;
const #funAddr~poseidon_resume.base : int;
const #funAddr~poseidon_resume.offset : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~v4l2_field~V4L2_FIELD_ANY : int;
const ~v4l2_field~V4L2_FIELD_NONE : int;
const ~v4l2_field~V4L2_FIELD_TOP : int;
const ~v4l2_field~V4L2_FIELD_BOTTOM : int;
const ~v4l2_field~V4L2_FIELD_INTERLACED : int;
const ~v4l2_field~V4L2_FIELD_SEQ_TB : int;
const ~v4l2_field~V4L2_FIELD_SEQ_BT : int;
const ~v4l2_field~V4L2_FIELD_ALTERNATE : int;
const ~v4l2_field~V4L2_FIELD_INTERLACED_TB : int;
const ~v4l2_field~V4L2_FIELD_INTERLACED_BT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OVERLAY : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_PRIVATE : int;
const ~v4l2_tuner_type~V4L2_TUNER_RADIO : int;
const ~v4l2_tuner_type~V4L2_TUNER_ANALOG_TV : int;
const ~v4l2_tuner_type~V4L2_TUNER_DIGITAL_TV : int;
const ~v4l2_memory~V4L2_MEMORY_MMAP : int;
const ~v4l2_memory~V4L2_MEMORY_USERPTR : int;
const ~v4l2_memory~V4L2_MEMORY_OVERLAY : int;
const ~v4l2_colorspace~V4L2_COLORSPACE_SMPTE170M : int;
const ~v4l2_colorspace~V4L2_COLORSPACE_SMPTE240M : int;
const ~v4l2_colorspace~V4L2_COLORSPACE_REC709 : int;
const ~v4l2_colorspace~V4L2_COLORSPACE_BT878 : int;
const ~v4l2_colorspace~V4L2_COLORSPACE_470_SYSTEM_M : int;
const ~v4l2_colorspace~V4L2_COLORSPACE_470_SYSTEM_BG : int;
const ~v4l2_colorspace~V4L2_COLORSPACE_JPEG : int;
const ~v4l2_colorspace~V4L2_COLORSPACE_SRGB : int;
const ~v4l2_priority~V4L2_PRIORITY_UNSET : int;
const ~v4l2_priority~V4L2_PRIORITY_BACKGROUND : int;
const ~v4l2_priority~V4L2_PRIORITY_INTERACTIVE : int;
const ~v4l2_priority~V4L2_PRIORITY_RECORD : int;
const ~v4l2_priority~V4L2_PRIORITY_DEFAULT : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BOOLEAN : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_MENU : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BUTTON : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER64 : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_CTRL_CLASS : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_STRING : int;
const ~usb_device_speed~USB_SPEED_UNKNOWN : int;
const ~usb_device_speed~USB_SPEED_LOW : int;
const ~usb_device_speed~USB_SPEED_FULL : int;
const ~usb_device_speed~USB_SPEED_HIGH : int;
const ~usb_device_speed~USB_SPEED_WIRELESS : int;
const ~usb_device_speed~USB_SPEED_SUPER : int;
const ~usb_device_state~USB_STATE_NOTATTACHED : int;
const ~usb_device_state~USB_STATE_ATTACHED : int;
const ~usb_device_state~USB_STATE_POWERED : int;
const ~usb_device_state~USB_STATE_RECONNECTING : int;
const ~usb_device_state~USB_STATE_UNAUTHENTICATED : int;
const ~usb_device_state~USB_STATE_DEFAULT : int;
const ~usb_device_state~USB_STATE_ADDRESS : int;
const ~usb_device_state~USB_STATE_CONFIGURED : int;
const ~usb_device_state~USB_STATE_SUSPENDED : int;
const ~irqreturn~IRQ_NONE : int;
const ~irqreturn~IRQ_HANDLED : int;
const ~irqreturn~IRQ_WAKE_THREAD : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~usb_interface_condition~USB_INTERFACE_UNBOUND : int;
const ~usb_interface_condition~USB_INTERFACE_BINDING : int;
const ~usb_interface_condition~USB_INTERFACE_BOUND : int;
const ~usb_interface_condition~USB_INTERFACE_UNBINDING : int;
const ~videobuf_state~VIDEOBUF_NEEDS_INIT : int;
const ~videobuf_state~VIDEOBUF_PREPARED : int;
const ~videobuf_state~VIDEOBUF_QUEUED : int;
const ~videobuf_state~VIDEOBUF_ACTIVE : int;
const ~videobuf_state~VIDEOBUF_DONE : int;
const ~videobuf_state~VIDEOBUF_ERROR : int;
const ~videobuf_state~VIDEOBUF_IDLE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_FIXED : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_2X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_2X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_1X20 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_1X20 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_GREY8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1_5X8 : int;
const ~v4l2_subdev_ir_mode~V4L2_SUBDEV_IR_MODE_PULSE_WIDTH : int;
const ~fe_type~FE_QPSK : int;
const ~fe_type~FE_QAM : int;
const ~fe_type~FE_OFDM : int;
const ~fe_type~FE_ATSC : int;
const ~fe_caps~FE_IS_STUPID : int;
const ~fe_caps~FE_CAN_INVERSION_AUTO : int;
const ~fe_caps~FE_CAN_FEC_1_2 : int;
const ~fe_caps~FE_CAN_FEC_2_3 : int;
const ~fe_caps~FE_CAN_FEC_3_4 : int;
const ~fe_caps~FE_CAN_FEC_4_5 : int;
const ~fe_caps~FE_CAN_FEC_5_6 : int;
const ~fe_caps~FE_CAN_FEC_6_7 : int;
const ~fe_caps~FE_CAN_FEC_7_8 : int;
const ~fe_caps~FE_CAN_FEC_8_9 : int;
const ~fe_caps~FE_CAN_FEC_AUTO : int;
const ~fe_caps~FE_CAN_QPSK : int;
const ~fe_caps~FE_CAN_QAM_16 : int;
const ~fe_caps~FE_CAN_QAM_32 : int;
const ~fe_caps~FE_CAN_QAM_64 : int;
const ~fe_caps~FE_CAN_QAM_128 : int;
const ~fe_caps~FE_CAN_QAM_256 : int;
const ~fe_caps~FE_CAN_QAM_AUTO : int;
const ~fe_caps~FE_CAN_TRANSMISSION_MODE_AUTO : int;
const ~fe_caps~FE_CAN_BANDWIDTH_AUTO : int;
const ~fe_caps~FE_CAN_GUARD_INTERVAL_AUTO : int;
const ~fe_caps~FE_CAN_HIERARCHY_AUTO : int;
const ~fe_caps~FE_CAN_8VSB : int;
const ~fe_caps~FE_CAN_16VSB : int;
const ~fe_caps~FE_HAS_EXTENDED_CAPS : int;
const ~fe_caps~FE_CAN_TURBO_FEC : int;
const ~fe_caps~FE_CAN_2G_MODULATION : int;
const ~fe_caps~FE_NEEDS_BENDING : int;
const ~fe_caps~FE_CAN_RECOVER : int;
const ~fe_caps~FE_CAN_MUTE_TS : int;
const ~fe_sec_voltage~SEC_VOLTAGE_13 : int;
const ~fe_sec_voltage~SEC_VOLTAGE_18 : int;
const ~fe_sec_voltage~SEC_VOLTAGE_OFF : int;
const ~fe_sec_tone_mode~SEC_TONE_ON : int;
const ~fe_sec_tone_mode~SEC_TONE_OFF : int;
const ~fe_sec_mini_cmd~SEC_MINI_A : int;
const ~fe_sec_mini_cmd~SEC_MINI_B : int;
const ~fe_status~FE_HAS_SIGNAL : int;
const ~fe_status~FE_HAS_CARRIER : int;
const ~fe_status~FE_HAS_VITERBI : int;
const ~fe_status~FE_HAS_SYNC : int;
const ~fe_status~FE_HAS_LOCK : int;
const ~fe_status~FE_TIMEDOUT : int;
const ~fe_status~FE_REINIT : int;
const ~fe_spectral_inversion~INVERSION_OFF : int;
const ~fe_spectral_inversion~INVERSION_ON : int;
const ~fe_spectral_inversion~INVERSION_AUTO : int;
const ~fe_code_rate~FEC_NONE : int;
const ~fe_code_rate~FEC_1_2 : int;
const ~fe_code_rate~FEC_2_3 : int;
const ~fe_code_rate~FEC_3_4 : int;
const ~fe_code_rate~FEC_4_5 : int;
const ~fe_code_rate~FEC_5_6 : int;
const ~fe_code_rate~FEC_6_7 : int;
const ~fe_code_rate~FEC_7_8 : int;
const ~fe_code_rate~FEC_8_9 : int;
const ~fe_code_rate~FEC_AUTO : int;
const ~fe_code_rate~FEC_3_5 : int;
const ~fe_code_rate~FEC_9_10 : int;
const ~fe_modulation~QPSK : int;
const ~fe_modulation~QAM_16 : int;
const ~fe_modulation~QAM_32 : int;
const ~fe_modulation~QAM_64 : int;
const ~fe_modulation~QAM_128 : int;
const ~fe_modulation~QAM_256 : int;
const ~fe_modulation~QAM_AUTO : int;
const ~fe_modulation~VSB_8 : int;
const ~fe_modulation~VSB_16 : int;
const ~fe_modulation~PSK_8 : int;
const ~fe_modulation~APSK_16 : int;
const ~fe_modulation~APSK_32 : int;
const ~fe_modulation~DQPSK : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_2K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_8K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_AUTO : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_4K : int;
const ~fe_bandwidth~BANDWIDTH_8_MHZ : int;
const ~fe_bandwidth~BANDWIDTH_7_MHZ : int;
const ~fe_bandwidth~BANDWIDTH_6_MHZ : int;
const ~fe_bandwidth~BANDWIDTH_AUTO : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_32 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_16 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_8 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_4 : int;
const ~fe_guard_interval~GUARD_INTERVAL_AUTO : int;
const ~fe_hierarchy~HIERARCHY_NONE : int;
const ~fe_hierarchy~HIERARCHY_1 : int;
const ~fe_hierarchy~HIERARCHY_2 : int;
const ~fe_hierarchy~HIERARCHY_4 : int;
const ~fe_hierarchy~HIERARCHY_AUTO : int;
const ~fe_pilot~PILOT_ON : int;
const ~fe_pilot~PILOT_OFF : int;
const ~fe_pilot~PILOT_AUTO : int;
const ~fe_rolloff~ROLLOFF_35 : int;
const ~fe_rolloff~ROLLOFF_20 : int;
const ~fe_rolloff~ROLLOFF_25 : int;
const ~fe_rolloff~ROLLOFF_AUTO : int;
const ~fe_delivery_system~SYS_UNDEFINED : int;
const ~fe_delivery_system~SYS_DVBC_ANNEX_AC : int;
const ~fe_delivery_system~SYS_DVBC_ANNEX_B : int;
const ~fe_delivery_system~SYS_DVBT : int;
const ~fe_delivery_system~SYS_DSS : int;
const ~fe_delivery_system~SYS_DVBS : int;
const ~fe_delivery_system~SYS_DVBS2 : int;
const ~fe_delivery_system~SYS_DVBH : int;
const ~fe_delivery_system~SYS_ISDBT : int;
const ~fe_delivery_system~SYS_ISDBS : int;
const ~fe_delivery_system~SYS_ISDBC : int;
const ~fe_delivery_system~SYS_ATSC : int;
const ~fe_delivery_system~SYS_ATSCMH : int;
const ~fe_delivery_system~SYS_DMBTH : int;
const ~fe_delivery_system~SYS_CMMB : int;
const ~fe_delivery_system~SYS_DAB : int;
const ~tuner_param~DVBFE_TUNER_FREQUENCY : int;
const ~tuner_param~DVBFE_TUNER_TUNERSTEP : int;
const ~tuner_param~DVBFE_TUNER_IFFREQ : int;
const ~tuner_param~DVBFE_TUNER_BANDWIDTH : int;
const ~tuner_param~DVBFE_TUNER_REFCLOCK : int;
const ~tuner_param~DVBFE_TUNER_IQSENSE : int;
const ~tuner_param~DVBFE_TUNER_DUMMY : int;
const ~dvbfe_algo~DVBFE_ALGO_HW : int;
const ~dvbfe_algo~DVBFE_ALGO_SW : int;
const ~dvbfe_algo~DVBFE_ALGO_CUSTOM : int;
const ~dvbfe_algo~DVBFE_ALGO_RECOVERY : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_SUCCESS : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_ASLEEP : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_FAILED : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_INVALID : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_AGAIN : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_ERROR : int;
const ~ldv_21056~DMX_OUT_DECODER : int;
const ~ldv_21056~DMX_OUT_TAP : int;
const ~ldv_21056~DMX_OUT_TS_TAP : int;
const ~ldv_21056~DMX_OUT_TSDEMUX_TAP : int;
const ~ldv_21058~DMX_IN_FRONTEND : int;
const ~ldv_21058~DMX_IN_DVR : int;
const ~ldv_21060~DMX_PES_AUDIO0 : int;
const ~ldv_21060~DMX_PES_VIDEO0 : int;
const ~ldv_21060~DMX_PES_TELETEXT0 : int;
const ~ldv_21060~DMX_PES_SUBTITLE0 : int;
const ~ldv_21060~DMX_PES_PCR0 : int;
const ~ldv_21060~DMX_PES_AUDIO1 : int;
const ~ldv_21060~DMX_PES_VIDEO1 : int;
const ~ldv_21060~DMX_PES_TELETEXT1 : int;
const ~ldv_21060~DMX_PES_SUBTITLE1 : int;
const ~ldv_21060~DMX_PES_PCR1 : int;
const ~ldv_21060~DMX_PES_AUDIO2 : int;
const ~ldv_21060~DMX_PES_VIDEO2 : int;
const ~ldv_21060~DMX_PES_TELETEXT2 : int;
const ~ldv_21060~DMX_PES_SUBTITLE2 : int;
const ~ldv_21060~DMX_PES_PCR2 : int;
const ~ldv_21060~DMX_PES_AUDIO3 : int;
const ~ldv_21060~DMX_PES_VIDEO3 : int;
const ~ldv_21060~DMX_PES_TELETEXT3 : int;
const ~ldv_21060~DMX_PES_SUBTITLE3 : int;
const ~ldv_21060~DMX_PES_PCR3 : int;
const ~ldv_21060~DMX_PES_OTHER : int;
const ~ldv_21074~DMX_SOURCE_FRONT0 : int;
const ~ldv_21074~DMX_SOURCE_FRONT1 : int;
const ~ldv_21074~DMX_SOURCE_FRONT2 : int;
const ~ldv_21074~DMX_SOURCE_FRONT3 : int;
const ~ldv_21074~DMX_SOURCE_DVR0 : int;
const ~ldv_21074~DMX_SOURCE_DVR1 : int;
const ~ldv_21074~DMX_SOURCE_DVR2 : int;
const ~ldv_21074~DMX_SOURCE_DVR3 : int;
const ~dmx_success~DMX_OK : int;
const ~dmx_success~DMX_LENGTH_ERROR : int;
const ~dmx_success~DMX_OVERRUN_ERROR : int;
const ~dmx_success~DMX_CRC_ERROR : int;
const ~dmx_success~DMX_FRAME_ERROR : int;
const ~dmx_success~DMX_FIFO_ERROR : int;
const ~dmx_success~DMX_MISSED_ERROR : int;
const ~dmx_ts_pes~DMX_TS_PES_AUDIO0 : int;
const ~dmx_ts_pes~DMX_TS_PES_VIDEO0 : int;
const ~dmx_ts_pes~DMX_TS_PES_TELETEXT0 : int;
const ~dmx_ts_pes~DMX_TS_PES_SUBTITLE0 : int;
const ~dmx_ts_pes~DMX_TS_PES_PCR0 : int;
const ~dmx_ts_pes~DMX_TS_PES_AUDIO1 : int;
const ~dmx_ts_pes~DMX_TS_PES_VIDEO1 : int;
const ~dmx_ts_pes~DMX_TS_PES_TELETEXT1 : int;
const ~dmx_ts_pes~DMX_TS_PES_SUBTITLE1 : int;
const ~dmx_ts_pes~DMX_TS_PES_PCR1 : int;
const ~dmx_ts_pes~DMX_TS_PES_AUDIO2 : int;
const ~dmx_ts_pes~DMX_TS_PES_VIDEO2 : int;
const ~dmx_ts_pes~DMX_TS_PES_TELETEXT2 : int;
const ~dmx_ts_pes~DMX_TS_PES_SUBTITLE2 : int;
const ~dmx_ts_pes~DMX_TS_PES_PCR2 : int;
const ~dmx_ts_pes~DMX_TS_PES_AUDIO3 : int;
const ~dmx_ts_pes~DMX_TS_PES_VIDEO3 : int;
const ~dmx_ts_pes~DMX_TS_PES_TELETEXT3 : int;
const ~dmx_ts_pes~DMX_TS_PES_SUBTITLE3 : int;
const ~dmx_ts_pes~DMX_TS_PES_PCR3 : int;
const ~dmx_ts_pes~DMX_TS_PES_OTHER : int;
const ~dmx_frontend_source~DMX_MEMORY_FE : int;
const ~dmx_frontend_source~DMX_FRONTEND_0 : int;
const ~dmx_frontend_source~DMX_FRONTEND_1 : int;
const ~dmx_frontend_source~DMX_FRONTEND_2 : int;
const ~dmx_frontend_source~DMX_FRONTEND_3 : int;
const ~dmx_frontend_source~DMX_STREAM_0 : int;
const ~dmx_frontend_source~DMX_STREAM_1 : int;
const ~dmx_frontend_source~DMX_STREAM_2 : int;
const ~dmx_frontend_source~DMX_STREAM_3 : int;
const ~dmxdev_type~DMXDEV_TYPE_NONE : int;
const ~dmxdev_type~DMXDEV_TYPE_SEC : int;
const ~dmxdev_type~DMXDEV_TYPE_PES : int;
const ~dmxdev_state~DMXDEV_STATE_FREE : int;
const ~dmxdev_state~DMXDEV_STATE_ALLOCATED : int;
const ~dmxdev_state~DMXDEV_STATE_SET : int;
const ~dmxdev_state~DMXDEV_STATE_GO : int;
const ~dmxdev_state~DMXDEV_STATE_DONE : int;
const ~dmxdev_state~DMXDEV_STATE_TIMEDOUT : int;
const ~pcm_stream_state~STREAM_OFF : int;
const ~pcm_stream_state~STREAM_ON : int;
const ~pcm_stream_state~STREAM_SUSPEND : int;
const ~cmd_custom_param_id~CUST_PARM_ID_NONE : int;
const ~cmd_custom_param_id~CUST_PARM_ID_BRIGHTNESS_CTRL : int;
const ~cmd_custom_param_id~CUST_PARM_ID_CONTRAST_CTRL : int;
const ~cmd_custom_param_id~CUST_PARM_ID_HUE_CTRL : int;
const ~cmd_custom_param_id~CUST_PARM_ID_SATURATION_CTRL : int;
const ~cmd_custom_param_id~CUST_PARM_ID_AUDIO_SNR_THRESHOLD : int;
const ~cmd_custom_param_id~CUST_PARM_ID_AUDIO_AGC_THRESHOLD : int;
const ~cmd_custom_param_id~CUST_PARM_ID_MAX : int;
axiom #funAddr~urb_complete_iso.base == -1 && #funAddr~urb_complete_iso.offset == 0;
axiom #funAddr~urb_complete_bulk.base == -1 && #funAddr~urb_complete_bulk.offset == 1;
axiom #funAddr~iso_bubble_handler.base == -1 && #funAddr~iso_bubble_handler.offset == 2;
axiom #funAddr~pd_buf_setup.base == -1 && #funAddr~pd_buf_setup.offset == 3;
axiom #funAddr~pd_buf_prepare.base == -1 && #funAddr~pd_buf_prepare.offset == 4;
axiom #funAddr~pd_buf_queue.base == -1 && #funAddr~pd_buf_queue.offset == 5;
axiom #funAddr~pd_buf_release.base == -1 && #funAddr~pd_buf_release.offset == 6;
axiom #funAddr~pm_video_suspend.base == -1 && #funAddr~pm_video_suspend.offset == 7;
axiom #funAddr~pm_video_resume.base == -1 && #funAddr~pm_video_resume.offset == 8;
axiom #funAddr~poseidon_delete.base == -1 && #funAddr~poseidon_delete.offset == 9;
axiom #funAddr~pd_video_read.base == -1 && #funAddr~pd_video_read.offset == 10;
axiom #funAddr~pd_video_poll.base == -1 && #funAddr~pd_video_poll.offset == 11;
axiom #funAddr~video_ioctl2.base == -1 && #funAddr~video_ioctl2.offset == 12;
axiom #funAddr~pd_video_mmap.base == -1 && #funAddr~pd_video_mmap.offset == 13;
axiom #funAddr~pd_video_open.base == -1 && #funAddr~pd_video_open.offset == 14;
axiom #funAddr~pd_video_release.base == -1 && #funAddr~pd_video_release.offset == 15;
axiom #funAddr~vidioc_querycap.base == -1 && #funAddr~vidioc_querycap.offset == 16;
axiom #funAddr~vidioc_enum_fmt.base == -1 && #funAddr~vidioc_enum_fmt.offset == 17;
axiom #funAddr~vidioc_g_fmt.base == -1 && #funAddr~vidioc_g_fmt.offset == 18;
axiom #funAddr~vidioc_g_fmt_vbi.base == -1 && #funAddr~vidioc_g_fmt_vbi.offset == 19;
axiom #funAddr~vidioc_s_fmt.base == -1 && #funAddr~vidioc_s_fmt.offset == 20;
axiom #funAddr~vidioc_try_fmt.base == -1 && #funAddr~vidioc_try_fmt.offset == 21;
axiom #funAddr~vidioc_reqbufs.base == -1 && #funAddr~vidioc_reqbufs.offset == 22;
axiom #funAddr~vidioc_querybuf.base == -1 && #funAddr~vidioc_querybuf.offset == 23;
axiom #funAddr~vidioc_qbuf.base == -1 && #funAddr~vidioc_qbuf.offset == 24;
axiom #funAddr~vidioc_dqbuf.base == -1 && #funAddr~vidioc_dqbuf.offset == 25;
axiom #funAddr~vidioc_streamon.base == -1 && #funAddr~vidioc_streamon.offset == 26;
axiom #funAddr~vidioc_streamoff.base == -1 && #funAddr~vidioc_streamoff.offset == 27;
axiom #funAddr~vidioc_s_std.base == -1 && #funAddr~vidioc_s_std.offset == 28;
axiom #funAddr~vidioc_enum_input.base == -1 && #funAddr~vidioc_enum_input.offset == 29;
axiom #funAddr~vidioc_g_input.base == -1 && #funAddr~vidioc_g_input.offset == 30;
axiom #funAddr~vidioc_s_input.base == -1 && #funAddr~vidioc_s_input.offset == 31;
axiom #funAddr~vidioc_queryctrl.base == -1 && #funAddr~vidioc_queryctrl.offset == 32;
axiom #funAddr~vidioc_g_ctrl.base == -1 && #funAddr~vidioc_g_ctrl.offset == 33;
axiom #funAddr~vidioc_s_ctrl.base == -1 && #funAddr~vidioc_s_ctrl.offset == 34;
axiom #funAddr~vidioc_enumaudio.base == -1 && #funAddr~vidioc_enumaudio.offset == 35;
axiom #funAddr~vidioc_g_audio.base == -1 && #funAddr~vidioc_g_audio.offset == 36;
axiom #funAddr~vidioc_s_audio.base == -1 && #funAddr~vidioc_s_audio.offset == 37;
axiom #funAddr~vidioc_g_tuner.base == -1 && #funAddr~vidioc_g_tuner.offset == 38;
axiom #funAddr~vidioc_s_tuner.base == -1 && #funAddr~vidioc_s_tuner.offset == 39;
axiom #funAddr~vidioc_g_frequency.base == -1 && #funAddr~vidioc_g_frequency.offset == 40;
axiom #funAddr~vidioc_s_frequency.base == -1 && #funAddr~vidioc_s_frequency.offset == 41;
axiom #funAddr~video_device_release.base == -1 && #funAddr~video_device_release.offset == 42;
axiom #funAddr~complete_handler_audio.base == -1 && #funAddr~complete_handler_audio.offset == 43;
axiom #funAddr~snd_pd_capture_open.base == -1 && #funAddr~snd_pd_capture_open.offset == 44;
axiom #funAddr~snd_pd_pcm_close.base == -1 && #funAddr~snd_pd_pcm_close.offset == 45;
axiom #funAddr~snd_pcm_lib_ioctl.base == -1 && #funAddr~snd_pcm_lib_ioctl.offset == 46;
axiom #funAddr~snd_pd_hw_capture_params.base == -1 && #funAddr~snd_pd_hw_capture_params.offset == 47;
axiom #funAddr~snd_pd_hw_capture_free.base == -1 && #funAddr~snd_pd_hw_capture_free.offset == 48;
axiom #funAddr~snd_pd_prepare.base == -1 && #funAddr~snd_pd_prepare.offset == 49;
axiom #funAddr~snd_pd_capture_trigger.base == -1 && #funAddr~snd_pd_capture_trigger.offset == 50;
axiom #funAddr~snd_pd_capture_pointer.base == -1 && #funAddr~snd_pd_capture_pointer.offset == 51;
axiom #funAddr~snd_pcm_pd_get_page.base == -1 && #funAddr~snd_pcm_pd_get_page.offset == 52;
axiom #funAddr~pm_dvb_suspend.base == -1 && #funAddr~pm_dvb_suspend.offset == 53;
axiom #funAddr~pm_dvb_resume.base == -1 && #funAddr~pm_dvb_resume.offset == 54;
axiom #funAddr~poseidon_fe_release.base == -1 && #funAddr~poseidon_fe_release.offset == 55;
axiom #funAddr~poseidon_fe_init.base == -1 && #funAddr~poseidon_fe_init.offset == 56;
axiom #funAddr~poseidon_fe_sleep.base == -1 && #funAddr~poseidon_fe_sleep.offset == 57;
axiom #funAddr~poseidon_set_fe.base == -1 && #funAddr~poseidon_set_fe.offset == 58;
axiom #funAddr~poseidon_fe_get_tune_settings.base == -1 && #funAddr~poseidon_fe_get_tune_settings.offset == 59;
axiom #funAddr~poseidon_get_fe.base == -1 && #funAddr~poseidon_get_fe.offset == 60;
axiom #funAddr~poseidon_read_status.base == -1 && #funAddr~poseidon_read_status.offset == 61;
axiom #funAddr~poseidon_read_ber.base == -1 && #funAddr~poseidon_read_ber.offset == 62;
axiom #funAddr~poseidon_read_signal_strength.base == -1 && #funAddr~poseidon_read_signal_strength.offset == 63;
axiom #funAddr~poseidon_read_snr.base == -1 && #funAddr~poseidon_read_snr.offset == 64;
axiom #funAddr~poseidon_read_unc_blocks.base == -1 && #funAddr~poseidon_read_unc_blocks.offset == 65;
axiom #funAddr~poseidon_ts_bus_ctrl.base == -1 && #funAddr~poseidon_ts_bus_ctrl.offset == 66;
axiom #funAddr~dvb_urb_irq.base == -1 && #funAddr~dvb_urb_irq.offset == 67;
axiom #funAddr~pd_start_feed.base == -1 && #funAddr~pd_start_feed.offset == 68;
axiom #funAddr~pd_stop_feed.base == -1 && #funAddr~pd_stop_feed.offset == 69;
axiom #funAddr~poseidon_fm_open.base == -1 && #funAddr~poseidon_fm_open.offset == 70;
axiom #funAddr~poseidon_fm_close.base == -1 && #funAddr~poseidon_fm_close.offset == 71;
axiom #funAddr~pm_fm_suspend.base == -1 && #funAddr~pm_fm_suspend.offset == 72;
axiom #funAddr~pm_fm_resume.base == -1 && #funAddr~pm_fm_resume.offset == 73;
axiom #funAddr~vidioc_querycap___0.base == -1 && #funAddr~vidioc_querycap___0.offset == 74;
axiom #funAddr~vidioc_g_input___0.base == -1 && #funAddr~vidioc_g_input___0.offset == 75;
axiom #funAddr~vidioc_s_input___0.base == -1 && #funAddr~vidioc_s_input___0.offset == 76;
axiom #funAddr~tlg_fm_vidioc_queryctrl.base == -1 && #funAddr~tlg_fm_vidioc_queryctrl.offset == 77;
axiom #funAddr~tlg_fm_vidioc_g_ctrl.base == -1 && #funAddr~tlg_fm_vidioc_g_ctrl.offset == 78;
axiom #funAddr~tlg_fm_vidioc_s_ctrl.base == -1 && #funAddr~tlg_fm_vidioc_s_ctrl.offset == 79;
axiom #funAddr~tlg_fm_vidioc_g_exts_ctrl.base == -1 && #funAddr~tlg_fm_vidioc_g_exts_ctrl.offset == 80;
axiom #funAddr~tlg_fm_vidioc_s_exts_ctrl.base == -1 && #funAddr~tlg_fm_vidioc_s_exts_ctrl.offset == 81;
axiom #funAddr~tlg_fm_vidioc_querymenu.base == -1 && #funAddr~tlg_fm_vidioc_querymenu.offset == 82;
axiom #funAddr~vidioc_g_audio___0.base == -1 && #funAddr~vidioc_g_audio___0.offset == 83;
axiom #funAddr~vidioc_s_audio___0.base == -1 && #funAddr~vidioc_s_audio___0.offset == 84;
axiom #funAddr~tlg_fm_vidioc_g_tuner.base == -1 && #funAddr~tlg_fm_vidioc_g_tuner.offset == 85;
axiom #funAddr~vidioc_s_tuner___0.base == -1 && #funAddr~vidioc_s_tuner___0.offset == 86;
axiom #funAddr~fm_get_freq.base == -1 && #funAddr~fm_get_freq.offset == 87;
axiom #funAddr~fm_set_freq.base == -1 && #funAddr~fm_set_freq.offset == 88;
axiom #funAddr~pm_notifier_block.base == -1 && #funAddr~pm_notifier_block.offset == 89;
axiom #funAddr~hibernation_resume.base == -1 && #funAddr~hibernation_resume.offset == 90;
axiom #funAddr~poseidon_probe.base == -1 && #funAddr~poseidon_probe.offset == 91;
axiom #funAddr~poseidon_disconnect.base == -1 && #funAddr~poseidon_disconnect.offset == 92;
axiom #funAddr~poseidon_suspend.base == -1 && #funAddr~poseidon_suspend.offset == 93;
axiom #funAddr~poseidon_resume.base == -1 && #funAddr~poseidon_resume.offset == 94;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~v4l2_field~V4L2_FIELD_ANY == 0;
axiom ~v4l2_field~V4L2_FIELD_NONE == 1;
axiom ~v4l2_field~V4L2_FIELD_TOP == 2;
axiom ~v4l2_field~V4L2_FIELD_BOTTOM == 3;
axiom ~v4l2_field~V4L2_FIELD_INTERLACED == 4;
axiom ~v4l2_field~V4L2_FIELD_SEQ_TB == 5;
axiom ~v4l2_field~V4L2_FIELD_SEQ_BT == 6;
axiom ~v4l2_field~V4L2_FIELD_ALTERNATE == 7;
axiom ~v4l2_field~V4L2_FIELD_INTERLACED_TB == 8;
axiom ~v4l2_field~V4L2_FIELD_INTERLACED_BT == 9;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE == 1;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT == 2;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OVERLAY == 3;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_CAPTURE == 4;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_OUTPUT == 5;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_CAPTURE == 6;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_OUTPUT == 7;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY == 8;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_PRIVATE == 128;
axiom ~v4l2_tuner_type~V4L2_TUNER_RADIO == 1;
axiom ~v4l2_tuner_type~V4L2_TUNER_ANALOG_TV == 2;
axiom ~v4l2_tuner_type~V4L2_TUNER_DIGITAL_TV == 3;
axiom ~v4l2_memory~V4L2_MEMORY_MMAP == 1;
axiom ~v4l2_memory~V4L2_MEMORY_USERPTR == 2;
axiom ~v4l2_memory~V4L2_MEMORY_OVERLAY == 3;
axiom ~v4l2_colorspace~V4L2_COLORSPACE_SMPTE170M == 1;
axiom ~v4l2_colorspace~V4L2_COLORSPACE_SMPTE240M == 2;
axiom ~v4l2_colorspace~V4L2_COLORSPACE_REC709 == 3;
axiom ~v4l2_colorspace~V4L2_COLORSPACE_BT878 == 4;
axiom ~v4l2_colorspace~V4L2_COLORSPACE_470_SYSTEM_M == 5;
axiom ~v4l2_colorspace~V4L2_COLORSPACE_470_SYSTEM_BG == 6;
axiom ~v4l2_colorspace~V4L2_COLORSPACE_JPEG == 7;
axiom ~v4l2_colorspace~V4L2_COLORSPACE_SRGB == 8;
axiom ~v4l2_priority~V4L2_PRIORITY_UNSET == 0;
axiom ~v4l2_priority~V4L2_PRIORITY_BACKGROUND == 1;
axiom ~v4l2_priority~V4L2_PRIORITY_INTERACTIVE == 2;
axiom ~v4l2_priority~V4L2_PRIORITY_RECORD == 3;
axiom ~v4l2_priority~V4L2_PRIORITY_DEFAULT == 2;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER == 1;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BOOLEAN == 2;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_MENU == 3;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BUTTON == 4;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER64 == 5;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_CTRL_CLASS == 6;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_STRING == 7;
axiom ~usb_device_speed~USB_SPEED_UNKNOWN == 0;
axiom ~usb_device_speed~USB_SPEED_LOW == 1;
axiom ~usb_device_speed~USB_SPEED_FULL == 2;
axiom ~usb_device_speed~USB_SPEED_HIGH == 3;
axiom ~usb_device_speed~USB_SPEED_WIRELESS == 4;
axiom ~usb_device_speed~USB_SPEED_SUPER == 5;
axiom ~usb_device_state~USB_STATE_NOTATTACHED == 0;
axiom ~usb_device_state~USB_STATE_ATTACHED == 1;
axiom ~usb_device_state~USB_STATE_POWERED == 2;
axiom ~usb_device_state~USB_STATE_RECONNECTING == 3;
axiom ~usb_device_state~USB_STATE_UNAUTHENTICATED == 4;
axiom ~usb_device_state~USB_STATE_DEFAULT == 5;
axiom ~usb_device_state~USB_STATE_ADDRESS == 6;
axiom ~usb_device_state~USB_STATE_CONFIGURED == 7;
axiom ~usb_device_state~USB_STATE_SUSPENDED == 8;
axiom ~irqreturn~IRQ_NONE == 0;
axiom ~irqreturn~IRQ_HANDLED == 1;
axiom ~irqreturn~IRQ_WAKE_THREAD == 2;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBOUND == 0;
axiom ~usb_interface_condition~USB_INTERFACE_BINDING == 1;
axiom ~usb_interface_condition~USB_INTERFACE_BOUND == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBINDING == 3;
axiom ~videobuf_state~VIDEOBUF_NEEDS_INIT == 0;
axiom ~videobuf_state~VIDEOBUF_PREPARED == 1;
axiom ~videobuf_state~VIDEOBUF_QUEUED == 2;
axiom ~videobuf_state~VIDEOBUF_ACTIVE == 3;
axiom ~videobuf_state~VIDEOBUF_DONE == 4;
axiom ~videobuf_state~VIDEOBUF_ERROR == 5;
axiom ~videobuf_state~VIDEOBUF_IDLE == 6;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_FIXED == 1;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_2X8 == 2;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_2X8 == 3;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_2X8 == 4;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_2X8 == 5;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_2X10 == 6;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_2X10 == 7;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_1X20 == 8;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_1X20 == 9;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_LE == 10;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_BE == 11;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_LE == 12;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_BE == 13;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_LE == 14;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_BE == 15;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_LE == 16;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_BE == 17;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR8_1X8 == 18;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_1X10 == 19;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_GREY8_1X8 == 20;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y10_1X10 == 21;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_LE == 22;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_LE == 23;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_BE == 24;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_BE == 25;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG8_1X8 == 26;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR12_1X12 == 27;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1_5X8 == 28;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1_5X8 == 29;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1_5X8 == 30;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1_5X8 == 31;
axiom ~v4l2_subdev_ir_mode~V4L2_SUBDEV_IR_MODE_PULSE_WIDTH == 0;
axiom ~fe_type~FE_QPSK == 0;
axiom ~fe_type~FE_QAM == 1;
axiom ~fe_type~FE_OFDM == 2;
axiom ~fe_type~FE_ATSC == 3;
axiom ~fe_caps~FE_IS_STUPID == 0;
axiom ~fe_caps~FE_CAN_INVERSION_AUTO == 1;
axiom ~fe_caps~FE_CAN_FEC_1_2 == 2;
axiom ~fe_caps~FE_CAN_FEC_2_3 == 4;
axiom ~fe_caps~FE_CAN_FEC_3_4 == 8;
axiom ~fe_caps~FE_CAN_FEC_4_5 == 16;
axiom ~fe_caps~FE_CAN_FEC_5_6 == 32;
axiom ~fe_caps~FE_CAN_FEC_6_7 == 64;
axiom ~fe_caps~FE_CAN_FEC_7_8 == 128;
axiom ~fe_caps~FE_CAN_FEC_8_9 == 256;
axiom ~fe_caps~FE_CAN_FEC_AUTO == 512;
axiom ~fe_caps~FE_CAN_QPSK == 1024;
axiom ~fe_caps~FE_CAN_QAM_16 == 2048;
axiom ~fe_caps~FE_CAN_QAM_32 == 4096;
axiom ~fe_caps~FE_CAN_QAM_64 == 8192;
axiom ~fe_caps~FE_CAN_QAM_128 == 16384;
axiom ~fe_caps~FE_CAN_QAM_256 == 32768;
axiom ~fe_caps~FE_CAN_QAM_AUTO == 65536;
axiom ~fe_caps~FE_CAN_TRANSMISSION_MODE_AUTO == 131072;
axiom ~fe_caps~FE_CAN_BANDWIDTH_AUTO == 262144;
axiom ~fe_caps~FE_CAN_GUARD_INTERVAL_AUTO == 524288;
axiom ~fe_caps~FE_CAN_HIERARCHY_AUTO == 1048576;
axiom ~fe_caps~FE_CAN_8VSB == 2097152;
axiom ~fe_caps~FE_CAN_16VSB == 4194304;
axiom ~fe_caps~FE_HAS_EXTENDED_CAPS == 8388608;
axiom ~fe_caps~FE_CAN_TURBO_FEC == 134217728;
axiom ~fe_caps~FE_CAN_2G_MODULATION == 268435456;
axiom ~fe_caps~FE_NEEDS_BENDING == 536870912;
axiom ~fe_caps~FE_CAN_RECOVER == 1073741824;
axiom ~fe_caps~FE_CAN_MUTE_TS == 2147483648;
axiom ~fe_sec_voltage~SEC_VOLTAGE_13 == 0;
axiom ~fe_sec_voltage~SEC_VOLTAGE_18 == 1;
axiom ~fe_sec_voltage~SEC_VOLTAGE_OFF == 2;
axiom ~fe_sec_tone_mode~SEC_TONE_ON == 0;
axiom ~fe_sec_tone_mode~SEC_TONE_OFF == 1;
axiom ~fe_sec_mini_cmd~SEC_MINI_A == 0;
axiom ~fe_sec_mini_cmd~SEC_MINI_B == 1;
axiom ~fe_status~FE_HAS_SIGNAL == 1;
axiom ~fe_status~FE_HAS_CARRIER == 2;
axiom ~fe_status~FE_HAS_VITERBI == 4;
axiom ~fe_status~FE_HAS_SYNC == 8;
axiom ~fe_status~FE_HAS_LOCK == 16;
axiom ~fe_status~FE_TIMEDOUT == 32;
axiom ~fe_status~FE_REINIT == 64;
axiom ~fe_spectral_inversion~INVERSION_OFF == 0;
axiom ~fe_spectral_inversion~INVERSION_ON == 1;
axiom ~fe_spectral_inversion~INVERSION_AUTO == 2;
axiom ~fe_code_rate~FEC_NONE == 0;
axiom ~fe_code_rate~FEC_1_2 == 1;
axiom ~fe_code_rate~FEC_2_3 == 2;
axiom ~fe_code_rate~FEC_3_4 == 3;
axiom ~fe_code_rate~FEC_4_5 == 4;
axiom ~fe_code_rate~FEC_5_6 == 5;
axiom ~fe_code_rate~FEC_6_7 == 6;
axiom ~fe_code_rate~FEC_7_8 == 7;
axiom ~fe_code_rate~FEC_8_9 == 8;
axiom ~fe_code_rate~FEC_AUTO == 9;
axiom ~fe_code_rate~FEC_3_5 == 10;
axiom ~fe_code_rate~FEC_9_10 == 11;
axiom ~fe_modulation~QPSK == 0;
axiom ~fe_modulation~QAM_16 == 1;
axiom ~fe_modulation~QAM_32 == 2;
axiom ~fe_modulation~QAM_64 == 3;
axiom ~fe_modulation~QAM_128 == 4;
axiom ~fe_modulation~QAM_256 == 5;
axiom ~fe_modulation~QAM_AUTO == 6;
axiom ~fe_modulation~VSB_8 == 7;
axiom ~fe_modulation~VSB_16 == 8;
axiom ~fe_modulation~PSK_8 == 9;
axiom ~fe_modulation~APSK_16 == 10;
axiom ~fe_modulation~APSK_32 == 11;
axiom ~fe_modulation~DQPSK == 12;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_2K == 0;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_8K == 1;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_AUTO == 2;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_4K == 3;
axiom ~fe_bandwidth~BANDWIDTH_8_MHZ == 0;
axiom ~fe_bandwidth~BANDWIDTH_7_MHZ == 1;
axiom ~fe_bandwidth~BANDWIDTH_6_MHZ == 2;
axiom ~fe_bandwidth~BANDWIDTH_AUTO == 3;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_32 == 0;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_16 == 1;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_8 == 2;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_4 == 3;
axiom ~fe_guard_interval~GUARD_INTERVAL_AUTO == 4;
axiom ~fe_hierarchy~HIERARCHY_NONE == 0;
axiom ~fe_hierarchy~HIERARCHY_1 == 1;
axiom ~fe_hierarchy~HIERARCHY_2 == 2;
axiom ~fe_hierarchy~HIERARCHY_4 == 3;
axiom ~fe_hierarchy~HIERARCHY_AUTO == 4;
axiom ~fe_pilot~PILOT_ON == 0;
axiom ~fe_pilot~PILOT_OFF == 1;
axiom ~fe_pilot~PILOT_AUTO == 2;
axiom ~fe_rolloff~ROLLOFF_35 == 0;
axiom ~fe_rolloff~ROLLOFF_20 == 1;
axiom ~fe_rolloff~ROLLOFF_25 == 2;
axiom ~fe_rolloff~ROLLOFF_AUTO == 3;
axiom ~fe_delivery_system~SYS_UNDEFINED == 0;
axiom ~fe_delivery_system~SYS_DVBC_ANNEX_AC == 1;
axiom ~fe_delivery_system~SYS_DVBC_ANNEX_B == 2;
axiom ~fe_delivery_system~SYS_DVBT == 3;
axiom ~fe_delivery_system~SYS_DSS == 4;
axiom ~fe_delivery_system~SYS_DVBS == 5;
axiom ~fe_delivery_system~SYS_DVBS2 == 6;
axiom ~fe_delivery_system~SYS_DVBH == 7;
axiom ~fe_delivery_system~SYS_ISDBT == 8;
axiom ~fe_delivery_system~SYS_ISDBS == 9;
axiom ~fe_delivery_system~SYS_ISDBC == 10;
axiom ~fe_delivery_system~SYS_ATSC == 11;
axiom ~fe_delivery_system~SYS_ATSCMH == 12;
axiom ~fe_delivery_system~SYS_DMBTH == 13;
axiom ~fe_delivery_system~SYS_CMMB == 14;
axiom ~fe_delivery_system~SYS_DAB == 15;
axiom ~tuner_param~DVBFE_TUNER_FREQUENCY == 1;
axiom ~tuner_param~DVBFE_TUNER_TUNERSTEP == 2;
axiom ~tuner_param~DVBFE_TUNER_IFFREQ == 4;
axiom ~tuner_param~DVBFE_TUNER_BANDWIDTH == 8;
axiom ~tuner_param~DVBFE_TUNER_REFCLOCK == 16;
axiom ~tuner_param~DVBFE_TUNER_IQSENSE == 32;
axiom ~tuner_param~DVBFE_TUNER_DUMMY == -2147483648;
axiom ~dvbfe_algo~DVBFE_ALGO_HW == 1;
axiom ~dvbfe_algo~DVBFE_ALGO_SW == 2;
axiom ~dvbfe_algo~DVBFE_ALGO_CUSTOM == 4;
axiom ~dvbfe_algo~DVBFE_ALGO_RECOVERY == -2147483648;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_SUCCESS == 1;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_ASLEEP == 2;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_FAILED == 4;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_INVALID == 8;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_AGAIN == 16;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_ERROR == -2147483648;
axiom ~ldv_21056~DMX_OUT_DECODER == 0;
axiom ~ldv_21056~DMX_OUT_TAP == 1;
axiom ~ldv_21056~DMX_OUT_TS_TAP == 2;
axiom ~ldv_21056~DMX_OUT_TSDEMUX_TAP == 3;
axiom ~ldv_21058~DMX_IN_FRONTEND == 0;
axiom ~ldv_21058~DMX_IN_DVR == 1;
axiom ~ldv_21060~DMX_PES_AUDIO0 == 0;
axiom ~ldv_21060~DMX_PES_VIDEO0 == 1;
axiom ~ldv_21060~DMX_PES_TELETEXT0 == 2;
axiom ~ldv_21060~DMX_PES_SUBTITLE0 == 3;
axiom ~ldv_21060~DMX_PES_PCR0 == 4;
axiom ~ldv_21060~DMX_PES_AUDIO1 == 5;
axiom ~ldv_21060~DMX_PES_VIDEO1 == 6;
axiom ~ldv_21060~DMX_PES_TELETEXT1 == 7;
axiom ~ldv_21060~DMX_PES_SUBTITLE1 == 8;
axiom ~ldv_21060~DMX_PES_PCR1 == 9;
axiom ~ldv_21060~DMX_PES_AUDIO2 == 10;
axiom ~ldv_21060~DMX_PES_VIDEO2 == 11;
axiom ~ldv_21060~DMX_PES_TELETEXT2 == 12;
axiom ~ldv_21060~DMX_PES_SUBTITLE2 == 13;
axiom ~ldv_21060~DMX_PES_PCR2 == 14;
axiom ~ldv_21060~DMX_PES_AUDIO3 == 15;
axiom ~ldv_21060~DMX_PES_VIDEO3 == 16;
axiom ~ldv_21060~DMX_PES_TELETEXT3 == 17;
axiom ~ldv_21060~DMX_PES_SUBTITLE3 == 18;
axiom ~ldv_21060~DMX_PES_PCR3 == 19;
axiom ~ldv_21060~DMX_PES_OTHER == 20;
axiom ~ldv_21074~DMX_SOURCE_FRONT0 == 0;
axiom ~ldv_21074~DMX_SOURCE_FRONT1 == 1;
axiom ~ldv_21074~DMX_SOURCE_FRONT2 == 2;
axiom ~ldv_21074~DMX_SOURCE_FRONT3 == 3;
axiom ~ldv_21074~DMX_SOURCE_DVR0 == 16;
axiom ~ldv_21074~DMX_SOURCE_DVR1 == 17;
axiom ~ldv_21074~DMX_SOURCE_DVR2 == 18;
axiom ~ldv_21074~DMX_SOURCE_DVR3 == 19;
axiom ~dmx_success~DMX_OK == 0;
axiom ~dmx_success~DMX_LENGTH_ERROR == 1;
axiom ~dmx_success~DMX_OVERRUN_ERROR == 2;
axiom ~dmx_success~DMX_CRC_ERROR == 3;
axiom ~dmx_success~DMX_FRAME_ERROR == 4;
axiom ~dmx_success~DMX_FIFO_ERROR == 5;
axiom ~dmx_success~DMX_MISSED_ERROR == 6;
axiom ~dmx_ts_pes~DMX_TS_PES_AUDIO0 == 0;
axiom ~dmx_ts_pes~DMX_TS_PES_VIDEO0 == 1;
axiom ~dmx_ts_pes~DMX_TS_PES_TELETEXT0 == 2;
axiom ~dmx_ts_pes~DMX_TS_PES_SUBTITLE0 == 3;
axiom ~dmx_ts_pes~DMX_TS_PES_PCR0 == 4;
axiom ~dmx_ts_pes~DMX_TS_PES_AUDIO1 == 5;
axiom ~dmx_ts_pes~DMX_TS_PES_VIDEO1 == 6;
axiom ~dmx_ts_pes~DMX_TS_PES_TELETEXT1 == 7;
axiom ~dmx_ts_pes~DMX_TS_PES_SUBTITLE1 == 8;
axiom ~dmx_ts_pes~DMX_TS_PES_PCR1 == 9;
axiom ~dmx_ts_pes~DMX_TS_PES_AUDIO2 == 10;
axiom ~dmx_ts_pes~DMX_TS_PES_VIDEO2 == 11;
axiom ~dmx_ts_pes~DMX_TS_PES_TELETEXT2 == 12;
axiom ~dmx_ts_pes~DMX_TS_PES_SUBTITLE2 == 13;
axiom ~dmx_ts_pes~DMX_TS_PES_PCR2 == 14;
axiom ~dmx_ts_pes~DMX_TS_PES_AUDIO3 == 15;
axiom ~dmx_ts_pes~DMX_TS_PES_VIDEO3 == 16;
axiom ~dmx_ts_pes~DMX_TS_PES_TELETEXT3 == 17;
axiom ~dmx_ts_pes~DMX_TS_PES_SUBTITLE3 == 18;
axiom ~dmx_ts_pes~DMX_TS_PES_PCR3 == 19;
axiom ~dmx_ts_pes~DMX_TS_PES_OTHER == 20;
axiom ~dmx_frontend_source~DMX_MEMORY_FE == 0;
axiom ~dmx_frontend_source~DMX_FRONTEND_0 == 1;
axiom ~dmx_frontend_source~DMX_FRONTEND_1 == 2;
axiom ~dmx_frontend_source~DMX_FRONTEND_2 == 3;
axiom ~dmx_frontend_source~DMX_FRONTEND_3 == 4;
axiom ~dmx_frontend_source~DMX_STREAM_0 == 5;
axiom ~dmx_frontend_source~DMX_STREAM_1 == 6;
axiom ~dmx_frontend_source~DMX_STREAM_2 == 7;
axiom ~dmx_frontend_source~DMX_STREAM_3 == 8;
axiom ~dmxdev_type~DMXDEV_TYPE_NONE == 0;
axiom ~dmxdev_type~DMXDEV_TYPE_SEC == 1;
axiom ~dmxdev_type~DMXDEV_TYPE_PES == 2;
axiom ~dmxdev_state~DMXDEV_STATE_FREE == 0;
axiom ~dmxdev_state~DMXDEV_STATE_ALLOCATED == 1;
axiom ~dmxdev_state~DMXDEV_STATE_SET == 2;
axiom ~dmxdev_state~DMXDEV_STATE_GO == 3;
axiom ~dmxdev_state~DMXDEV_STATE_DONE == 4;
axiom ~dmxdev_state~DMXDEV_STATE_TIMEDOUT == 5;
axiom ~pcm_stream_state~STREAM_OFF == 0;
axiom ~pcm_stream_state~STREAM_ON == 1;
axiom ~pcm_stream_state~STREAM_SUSPEND == 2;
axiom ~cmd_custom_param_id~CUST_PARM_ID_NONE == 0;
axiom ~cmd_custom_param_id~CUST_PARM_ID_BRIGHTNESS_CTRL == 1;
axiom ~cmd_custom_param_id~CUST_PARM_ID_CONTRAST_CTRL == 2;
axiom ~cmd_custom_param_id~CUST_PARM_ID_HUE_CTRL == 3;
axiom ~cmd_custom_param_id~CUST_PARM_ID_SATURATION_CTRL == 4;
axiom ~cmd_custom_param_id~CUST_PARM_ID_AUDIO_SNR_THRESHOLD == 16;
axiom ~cmd_custom_param_id~CUST_PARM_ID_AUDIO_AGC_THRESHOLD == 17;
axiom ~cmd_custom_param_id~CUST_PARM_ID_MAX == 18;
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
var ~ldv_state_variable_8 : int;

var ~ldv_state_variable_10 : int;

var ~ldv_state_variable_11 : int;

var ~ldv_state_variable_9 : int;

var ~ref_cnt : int;

var ~debug_mode : int;

var ~usb_transfer_mode : int;

var ~POSEIDON_TVNORMS : int;

var ~POSEIDON_AUDIOMODS : int;

var ~POSEIDON_INPUTS : int;

var ~map_size : int;

var ~ldv_retval_1 : int;

var ~ldv_retval_9 : int;

var ~ldv_state_variable_7 : int;

var ~ldv_retval_3 : int;

var ~ldv_retval_2 : int;

var ~jiffies : int;

var ~ldv_state_variable_6 : int;

var ~dvb_bandwidth : [int,int]int;

var ~dvb_bandwidth_length : int;

var ~#adapter_nr.base : int, ~#adapter_nr.offset : int;

var ~ldv_retval_0 : int;

var ~ldv_state_variable_5 : int;

var ~ldv_state_variable_3 : int;

var ~ldv_state_variable_4 : int;

var ~preemphasis : [int]int;

var ~ldv_retval_10 : int;

var ~ldv_state_variable_0 : int;

var ~ldv_state_variable_2 : int;

var ~usb_counter : int;

var ~ldv_state_variable_1 : int;

var ~firmware_name.base : int, ~firmware_name.offset : int;

var ~ldv_retval_5 : int;

var ~ldv_retval_4 : int;

var ~ldv_retval_6 : int;

var ~ldv_retval_8 : int;

var ~ldv_retval_7 : int;

var ~ldv_mutex_lock_of_poseidon : int;

var ~ldv_mutex_mutex_of_device : int;

var ~ldv_mutex_pm_mutex : int;

var ~ldv_mutex_power_lock_of_snd_card : int;

var ~ldv_mutex_vb_lock_of_videobuf_queue : int;

var ~pd_video_ioctl_ops_group1.base : int, ~pd_video_ioctl_ops_group1.offset : int;

var ~pd_video_ioctl_ops_group2.base : int, ~pd_video_ioctl_ops_group2.offset : int;

var ~pd_video_ioctl_ops_group6.base : int, ~pd_video_ioctl_ops_group6.offset : int;

var ~pd_video_ioctl_ops_group0.base : int, ~pd_video_ioctl_ops_group0.offset : int;

var ~pd_video_ioctl_ops_group3.base : int, ~pd_video_ioctl_ops_group3.offset : int;

var ~pd_video_qops_group1.base : int, ~pd_video_qops_group1.offset : int;

var ~pd_video_ioctl_ops_group5.base : int, ~pd_video_ioctl_ops_group5.offset : int;

var ~pd_video_qops_group2.base : int, ~pd_video_qops_group2.offset : int;

var ~pd_video_fops_group0.base : int, ~pd_video_fops_group0.offset : int;

var ~pd_video_ioctl_ops_group4.base : int, ~pd_video_ioctl_ops_group4.offset : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~#poseidon_formats.base : int, ~#poseidon_formats.offset : int;

var ~#poseidon_tvnorms.base : int, ~#poseidon_tvnorms.offset : int;

var ~pd_audio_modes.tlg_audio_mode : [int]int, ~pd_audio_modes.v4l2_audio_sub : [int]int, ~pd_audio_modes.v4l2_audio_mode : [int]int;

var ~#pd_inputs.base : int, ~#pd_inputs.offset : int;

var ~#controls.base : int, ~#controls.offset : int;

var ~video_to_audio_map.video_std : [int]int, ~video_to_audio_map.audio_std : [int]int;

var ~#pd_video_qops.base : int, ~#pd_video_qops.offset : int;

var ~#pd_video_fops.base : int, ~#pd_video_fops.offset : int;

var ~#pd_video_ioctl_ops.base : int, ~#pd_video_ioctl_ops.offset : int;

var ~#pd_video_template.base : int, ~#pd_video_template.offset : int;

var ~pcm_capture_ops_group0.base : int, ~pcm_capture_ops_group0.offset : int;

var ~#snd_pcm_link_rwlock.base : int, ~#snd_pcm_link_rwlock.offset : int;

var ~snd_pd_hw_capture.info : int, ~snd_pd_hw_capture.formats : int, ~snd_pd_hw_capture.rates : int, ~snd_pd_hw_capture.rate_min : int, ~snd_pd_hw_capture.rate_max : int, ~snd_pd_hw_capture.channels_min : int, ~snd_pd_hw_capture.channels_max : int, ~snd_pd_hw_capture.buffer_bytes_max : int, ~snd_pd_hw_capture.period_bytes_min : int, ~snd_pd_hw_capture.period_bytes_max : int, ~snd_pd_hw_capture.periods_min : int, ~snd_pd_hw_capture.periods_max : int, ~snd_pd_hw_capture.fifo_size : int;

var ~#pcm_capture_ops.base : int, ~#pcm_capture_ops.offset : int;

var ~poseidon_frontend_ops_group1.base : int, ~poseidon_frontend_ops_group1.offset : int;

var ~poseidon_frontend_ops_group0.base : int, ~poseidon_frontend_ops_group0.offset : int;

var ~#poseidon_frontend_ops.base : int, ~#poseidon_frontend_ops.offset : int;

var ~poseidon_fm_ioctl_ops_group3.base : int, ~poseidon_fm_ioctl_ops_group3.offset : int;

var ~poseidon_fm_fops_group0.base : int, ~poseidon_fm_fops_group0.offset : int;

var ~poseidon_fm_ioctl_ops_group5.base : int, ~poseidon_fm_ioctl_ops_group5.offset : int;

var ~poseidon_fm_ioctl_ops_group2.base : int, ~poseidon_fm_ioctl_ops_group2.offset : int;

var ~poseidon_fm_ioctl_ops_group1.base : int, ~poseidon_fm_ioctl_ops_group1.offset : int;

var ~poseidon_fm_ioctl_ops_group4.base : int, ~poseidon_fm_ioctl_ops_group4.offset : int;

var ~poseidon_fm_ioctl_ops_group0.base : int, ~poseidon_fm_ioctl_ops_group0.offset : int;

var ~#poseidon_fm_fops.base : int, ~#poseidon_fm_fops.offset : int;

var ~#poseidon_fm_ioctl_ops.base : int, ~#poseidon_fm_ioctl_ops.offset : int;

var ~#poseidon_fm_template.base : int, ~#poseidon_fm_template.offset : int;

var ~poseidon_driver_group1.base : int, ~poseidon_driver_group1.offset : int;

var ~#id_table.base : int, ~#id_table.offset : int;

var ~#pd_device_list.base : int, ~#pd_device_list.offset : int;

var ~#pm_notifer.base : int, ~#pm_notifer.offset : int;

var ~#poseidon_driver.base : int, ~#poseidon_driver.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_int : [int,int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

implementation ldv_initialize_v4l2_file_operations_10() returns (){
    var #t~ret1617.base : int, #t~ret1617.offset : int;
    var ~tmp~623.base : int, ~tmp~623.offset : int;

  loc0:
    havoc ~tmp~623.base, ~tmp~623.offset;
    call #t~ret1617.base, #t~ret1617.offset := ldv_zalloc(336);
    ~tmp~623.base, ~tmp~623.offset := #t~ret1617.base, #t~ret1617.offset;
    havoc #t~ret1617.base, #t~ret1617.offset;
    ~pd_video_fops_group0.base, ~pd_video_fops_group0.offset := ~tmp~623.base, ~tmp~623.offset;
    assume true;
    return;
}

procedure ldv_initialize_v4l2_file_operations_10() returns ();
modifies ~pd_video_fops_group0.base, ~pd_video_fops_group0.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ldv_initialize_v4l2_file_operations_5() returns (){
    var #t~ret2378.base : int, #t~ret2378.offset : int;
    var ~tmp~1388.base : int, ~tmp~1388.offset : int;

  loc1:
    havoc ~tmp~1388.base, ~tmp~1388.offset;
    call #t~ret2378.base, #t~ret2378.offset := ldv_zalloc(336);
    ~tmp~1388.base, ~tmp~1388.offset := #t~ret2378.base, #t~ret2378.offset;
    havoc #t~ret2378.base, #t~ret2378.offset;
    ~poseidon_fm_fops_group0.base, ~poseidon_fm_fops_group0.offset := ~tmp~1388.base, ~tmp~1388.offset;
    assume true;
    return;
}

procedure ldv_initialize_v4l2_file_operations_5() returns ();
modifies ~poseidon_fm_fops_group0.base, ~poseidon_fm_fops_group0.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr2875 : int;

  loc2:
    #t~loopctr2875 := 0;
    goto loc3;
  loc3:
    goto loc3_0, loc3_1;
  loc3_0:
    assume #t~loopctr2875 < #amount;
    #memory_int := #memory_int[#ptr.base,#ptr.offset + #t~loopctr2875 * 1 := #value];
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset + #t~loopctr2875 * 1 := 0], #memory_$Pointer$.offset[#ptr.base,#ptr.offset + #t~loopctr2875 * 1 := #value % 256];
    #t~loopctr2875 := #t~loopctr2875 + 1;
    goto loc3;
  loc3_1:
    assume !(#t~loopctr2875 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation ldv_mutex_unlock_155(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns (){
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;

  loc4:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    call ldv_mutex_unlock_mutex_of_device(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    return;
}

procedure ldv_mutex_unlock_155(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns ();
modifies ~ldv_mutex_mutex_of_device;

implementation main() returns (#res : int){
    var #t~nondet2822 : int;
    var #t~ret2823.base : int, #t~ret2823.offset : int;
    var #t~ret2824.base : int, #t~ret2824.offset : int;
    var #t~ret2825.base : int, #t~ret2825.offset : int;
    var #t~memset2826.base : int, #t~memset2826.offset : int;
    var #t~nondet2827 : int;
    var #t~switch2828 : bool;
    var #t~nondet2829 : int;
    var #t~switch2830 : bool;
    var #t~ret2831 : int;
    var #t~nondet2832 : int;
    var #t~switch2833 : bool;
    var #t~ret2834 : int;
    var #t~mem2835 : int;
    var #t~ret2836 : int;
    var #t~ret2837 : int;
    var #t~ret2838 : int;
    var #t~nondet2839 : int;
    var #t~switch2840 : bool;
    var #t~ret2841 : int;
    var ~ldvarg54~1652 : int;
    var ~tmp~1652 : int;
    var ~ldvarg53~1652.base : int, ~ldvarg53~1652.offset : int;
    var ~tmp___0~1652.base : int, ~tmp___0~1652.offset : int;
    var ~ldvarg52~1652.base : int, ~ldvarg52~1652.offset : int;
    var ~tmp___1~1652.base : int, ~tmp___1~1652.offset : int;
    var ~ldvarg57~1652.base : int, ~ldvarg57~1652.offset : int;
    var ~tmp___2~1652.base : int, ~tmp___2~1652.offset : int;
    var ~#ldvarg56~1652.base : int, ~#ldvarg56~1652.offset : int;
    var ~tmp___3~1652 : int;
    var ~tmp___4~1652 : int;
    var ~tmp___5~1652 : int;
    var ~tmp___6~1652 : int;

  loc5:
    havoc ~ldvarg54~1652;
    havoc ~tmp~1652;
    havoc ~ldvarg53~1652.base, ~ldvarg53~1652.offset;
    havoc ~tmp___0~1652.base, ~tmp___0~1652.offset;
    havoc ~ldvarg52~1652.base, ~ldvarg52~1652.offset;
    havoc ~tmp___1~1652.base, ~tmp___1~1652.offset;
    havoc ~ldvarg57~1652.base, ~ldvarg57~1652.offset;
    havoc ~tmp___2~1652.base, ~tmp___2~1652.offset;
    call ~#ldvarg56~1652.base, ~#ldvarg56~1652.offset := #Ultimate.alloc(4);
    havoc ~tmp___3~1652;
    havoc ~tmp___4~1652;
    havoc ~tmp___5~1652;
    havoc ~tmp___6~1652;
    ~tmp~1652 := #t~nondet2822;
    havoc #t~nondet2822;
    ~ldvarg54~1652 := ~tmp~1652;
    call #t~ret2823.base, #t~ret2823.offset := ldv_zalloc(1);
    ~tmp___0~1652.base, ~tmp___0~1652.offset := #t~ret2823.base, #t~ret2823.offset;
    havoc #t~ret2823.base, #t~ret2823.offset;
    ~ldvarg53~1652.base, ~ldvarg53~1652.offset := ~tmp___0~1652.base, ~tmp___0~1652.offset;
    call #t~ret2824.base, #t~ret2824.offset := ldv_zalloc(24);
    ~tmp___1~1652.base, ~tmp___1~1652.offset := #t~ret2824.base, #t~ret2824.offset;
    havoc #t~ret2824.base, #t~ret2824.offset;
    ~ldvarg52~1652.base, ~ldvarg52~1652.offset := ~tmp___1~1652.base, ~tmp___1~1652.offset;
    call #t~ret2825.base, #t~ret2825.offset := ldv_zalloc(24);
    ~tmp___2~1652.base, ~tmp___2~1652.offset := #t~ret2825.base, #t~ret2825.offset;
    havoc #t~ret2825.base, #t~ret2825.offset;
    ~ldvarg57~1652.base, ~ldvarg57~1652.offset := ~tmp___2~1652.base, ~tmp___2~1652.offset;
    call ldv_initialize();
    call #t~memset2826.base, #t~memset2826.offset := #Ultimate.C_memset(~#ldvarg56~1652.base, ~#ldvarg56~1652.offset, 0, 4);
    havoc #t~memset2826.base, #t~memset2826.offset;
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_11 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_state_variable_9 := 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_state_variable_8 := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_4 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_10 := 0;
    ~ldv_state_variable_5 := 0;
    goto loc6;
  loc6:
    assume -2147483648 <= #t~nondet2827 && #t~nondet2827 <= 2147483647;
    ~tmp___3~1652 := #t~nondet2827;
    havoc #t~nondet2827;
    #t~switch2828 := ~tmp___3~1652 == 0;
    assume !#t~switch2828;
    #t~switch2828 := #t~switch2828 || ~tmp___3~1652 == 1;
    assume !#t~switch2828;
    #t~switch2828 := #t~switch2828 || ~tmp___3~1652 == 2;
    assume !#t~switch2828;
    #t~switch2828 := #t~switch2828 || ~tmp___3~1652 == 3;
    assume !#t~switch2828;
    #t~switch2828 := #t~switch2828 || ~tmp___3~1652 == 4;
    assume !#t~switch2828;
    #t~switch2828 := #t~switch2828 || ~tmp___3~1652 == 5;
    goto loc7;
  loc7:
    goto loc7_0, loc7_1;
  loc7_0:
    assume #t~switch2828;
    assume ~ldv_state_variable_2 != 0;
    assume -2147483648 <= #t~nondet2829 && #t~nondet2829 <= 2147483647;
    ~tmp___4~1652 := #t~nondet2829;
    havoc #t~nondet2829;
    #t~switch2830 := ~tmp___4~1652 == 0;
    assume #t~switch2830;
    assume ~ldv_state_variable_2 == 1;
    call #t~ret2831 := pm_notifier_block(~ldvarg52~1652.base, ~ldvarg52~1652.offset, ~ldvarg54~1652, ~ldvarg53~1652.base, ~ldvarg53~1652.offset);
    return;
  loc7_1:
    assume !#t~switch2828;
    #t~switch2828 := #t~switch2828 || ~tmp___3~1652 == 6;
    assume !#t~switch2828;
    #t~switch2828 := #t~switch2828 || ~tmp___3~1652 == 7;
    assume !#t~switch2828;
    #t~switch2828 := #t~switch2828 || ~tmp___3~1652 == 8;
    assume !#t~switch2828;
    #t~switch2828 := #t~switch2828 || ~tmp___3~1652 == 9;
    assume #t~switch2828;
    assume ~ldv_state_variable_0 != 0;
    assume -2147483648 <= #t~nondet2839 && #t~nondet2839 <= 2147483647;
    ~tmp___6~1652 := #t~nondet2839;
    havoc #t~nondet2839;
    #t~switch2840 := ~tmp___6~1652 == 0;
    assume !#t~switch2840;
    #t~switch2840 := #t~switch2840 || ~tmp___6~1652 == 1;
    assume #t~switch2840;
    assume ~ldv_state_variable_0 == 1;
    call #t~ret2841 := poseidon_init();
    assume -2147483648 <= #t~ret2841 && #t~ret2841 <= 2147483647;
    ~ldv_retval_8 := #t~ret2841;
    havoc #t~ret2841;
    assume !(~ldv_retval_8 != 0);
    assume ~ldv_retval_8 == 0;
    ~ldv_state_variable_0 := 2;
    ~ldv_state_variable_5 := 1;
    call ldv_initialize_v4l2_file_operations_5();
    ~ldv_state_variable_10 := 1;
    call ldv_initialize_v4l2_file_operations_10();
    ~ldv_state_variable_4 := 1;
    call ldv_initialize_v4l2_ioctl_ops_4();
    ~ldv_state_variable_8 := 1;
    ~ldv_state_variable_2 := 1;
    ~ldv_state_variable_9 := 1;
    call ldv_initialize_v4l2_ioctl_ops_9();
    ~ldv_state_variable_7 := 1;
    call ldv_initialize_snd_pcm_ops_7();
    ~ldv_state_variable_3 := 1;
    ~ldv_state_variable_11 := 1;
    call ldv_videobuf_queue_ops_11();
    ~ldv_state_variable_6 := 1;
    call ldv_initialize_dvb_frontend_ops_6();
    goto loc6;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_6, ~ldv_state_variable_11, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_9, ~ldv_state_variable_2, ~ldv_state_variable_8, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_10, ~ldv_state_variable_5, ~ldv_retval_7, ~ldv_retval_6, ~ldv_retval_5, ~ldv_retval_4, ~ldv_retval_8, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_lock_of_poseidon, ~ldv_mutex_mutex_of_device, ~ldv_mutex_pm_mutex, ~ldv_mutex_power_lock_of_snd_card, ~ldv_mutex_vb_lock_of_videobuf_queue, ~pd_video_qops_group1.base, ~pd_video_qops_group1.offset, ~pd_video_qops_group2.base, ~pd_video_qops_group2.offset, ~pd_video_fops_group0.base, ~pd_video_fops_group0.offset, ~pd_video_ioctl_ops_group3.base, ~pd_video_ioctl_ops_group3.offset, ~pd_video_ioctl_ops_group2.base, ~pd_video_ioctl_ops_group2.offset, ~pd_video_ioctl_ops_group1.base, ~pd_video_ioctl_ops_group1.offset, ~pd_video_ioctl_ops_group0.base, ~pd_video_ioctl_ops_group0.offset, ~pd_video_ioctl_ops_group4.base, ~pd_video_ioctl_ops_group4.offset, ~pd_video_ioctl_ops_group5.base, ~pd_video_ioctl_ops_group5.offset, ~pd_video_ioctl_ops_group6.base, ~pd_video_ioctl_ops_group6.offset, ~pcm_capture_ops_group0.base, ~pcm_capture_ops_group0.offset, ~poseidon_frontend_ops_group1.base, ~poseidon_frontend_ops_group1.offset, ~poseidon_frontend_ops_group0.base, ~poseidon_frontend_ops_group0.offset, ~poseidon_fm_ioctl_ops_group2.base, ~poseidon_fm_ioctl_ops_group2.offset, ~poseidon_fm_ioctl_ops_group1.base, ~poseidon_fm_ioctl_ops_group1.offset, ~poseidon_fm_ioctl_ops_group0.base, ~poseidon_fm_ioctl_ops_group0.offset, ~poseidon_fm_ioctl_ops_group4.base, ~poseidon_fm_ioctl_ops_group4.offset, ~poseidon_fm_ioctl_ops_group3.base, ~poseidon_fm_ioctl_ops_group3.offset, ~poseidon_fm_ioctl_ops_group5.base, ~poseidon_fm_ioctl_ops_group5.offset, ~poseidon_fm_fops_group0.base, ~poseidon_fm_fops_group0.offset, ~ldv_retval_3, ~ldv_retval_2, ~poseidon_driver_group1.base, ~poseidon_driver_group1.offset, ~usb_counter, ~ldv_retval_1, ~ldv_retval_9, ~ldv_retval_0, ~ldv_retval_10;

implementation ldv_initialize_v4l2_ioctl_ops_9() returns (){
    var #t~ret1618.base : int, #t~ret1618.offset : int;
    var #t~ret1619.base : int, #t~ret1619.offset : int;
    var #t~ret1620.base : int, #t~ret1620.offset : int;
    var #t~ret1621.base : int, #t~ret1621.offset : int;
    var #t~ret1622.base : int, #t~ret1622.offset : int;
    var #t~ret1623.base : int, #t~ret1623.offset : int;
    var #t~ret1624.base : int, #t~ret1624.offset : int;
    var ~tmp~625.base : int, ~tmp~625.offset : int;
    var ~tmp___0~625.base : int, ~tmp___0~625.offset : int;
    var ~tmp___1~625.base : int, ~tmp___1~625.offset : int;
    var ~tmp___2~625.base : int, ~tmp___2~625.offset : int;
    var ~tmp___3~625.base : int, ~tmp___3~625.offset : int;
    var ~tmp___4~625.base : int, ~tmp___4~625.offset : int;
    var ~tmp___5~625.base : int, ~tmp___5~625.offset : int;

  loc8:
    havoc ~tmp~625.base, ~tmp~625.offset;
    havoc ~tmp___0~625.base, ~tmp___0~625.offset;
    havoc ~tmp___1~625.base, ~tmp___1~625.offset;
    havoc ~tmp___2~625.base, ~tmp___2~625.offset;
    havoc ~tmp___3~625.base, ~tmp___3~625.offset;
    havoc ~tmp___4~625.base, ~tmp___4~625.offset;
    havoc ~tmp___5~625.base, ~tmp___5~625.offset;
    call #t~ret1618.base, #t~ret1618.offset := ldv_zalloc(336);
    ~tmp~625.base, ~tmp~625.offset := #t~ret1618.base, #t~ret1618.offset;
    havoc #t~ret1618.base, #t~ret1618.offset;
    ~pd_video_ioctl_ops_group3.base, ~pd_video_ioctl_ops_group3.offset := ~tmp~625.base, ~tmp~625.offset;
    call #t~ret1619.base, #t~ret1619.offset := ldv_zalloc(52);
    ~tmp___0~625.base, ~tmp___0~625.offset := #t~ret1619.base, #t~ret1619.offset;
    havoc #t~ret1619.base, #t~ret1619.offset;
    ~pd_video_ioctl_ops_group2.base, ~pd_video_ioctl_ops_group2.offset := ~tmp___0~625.base, ~tmp___0~625.offset;
    call #t~ret1620.base, #t~ret1620.offset := ldv_zalloc(208);
    ~tmp___1~625.base, ~tmp___1~625.offset := #t~ret1620.base, #t~ret1620.offset;
    havoc #t~ret1620.base, #t~ret1620.offset;
    ~pd_video_ioctl_ops_group1.base, ~pd_video_ioctl_ops_group1.offset := ~tmp___1~625.base, ~tmp___1~625.offset;
    call #t~ret1621.base, #t~ret1621.offset := ldv_zalloc(44);
    ~tmp___2~625.base, ~tmp___2~625.offset := #t~ret1621.base, #t~ret1621.offset;
    havoc #t~ret1621.base, #t~ret1621.offset;
    ~pd_video_ioctl_ops_group0.base, ~pd_video_ioctl_ops_group0.offset := ~tmp___2~625.base, ~tmp___2~625.offset;
    call #t~ret1622.base, #t~ret1622.offset := ldv_zalloc(84);
    ~tmp___3~625.base, ~tmp___3~625.offset := #t~ret1622.base, #t~ret1622.offset;
    havoc #t~ret1622.base, #t~ret1622.offset;
    ~pd_video_ioctl_ops_group4.base, ~pd_video_ioctl_ops_group4.offset := ~tmp___3~625.base, ~tmp___3~625.offset;
    call #t~ret1623.base, #t~ret1623.offset := ldv_zalloc(88);
    ~tmp___4~625.base, ~tmp___4~625.offset := #t~ret1623.base, #t~ret1623.offset;
    havoc #t~ret1623.base, #t~ret1623.offset;
    ~pd_video_ioctl_ops_group5.base, ~pd_video_ioctl_ops_group5.offset := ~tmp___4~625.base, ~tmp___4~625.offset;
    call #t~ret1624.base, #t~ret1624.offset := ldv_zalloc(8);
    ~tmp___5~625.base, ~tmp___5~625.offset := #t~ret1624.base, #t~ret1624.offset;
    havoc #t~ret1624.base, #t~ret1624.offset;
    ~pd_video_ioctl_ops_group6.base, ~pd_video_ioctl_ops_group6.offset := ~tmp___5~625.base, ~tmp___5~625.offset;
    assume true;
    return;
}

procedure ldv_initialize_v4l2_ioctl_ops_9() returns ();
modifies ~pd_video_ioctl_ops_group3.base, ~pd_video_ioctl_ops_group3.offset, ~pd_video_ioctl_ops_group2.base, ~pd_video_ioctl_ops_group2.offset, ~pd_video_ioctl_ops_group1.base, ~pd_video_ioctl_ops_group1.offset, ~pd_video_ioctl_ops_group0.base, ~pd_video_ioctl_ops_group0.offset, ~pd_video_ioctl_ops_group4.base, ~pd_video_ioctl_ops_group4.offset, ~pd_video_ioctl_ops_group5.base, ~pd_video_ioctl_ops_group5.offset, ~pd_video_ioctl_ops_group6.base, ~pd_video_ioctl_ops_group6.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ldv_initialize_v4l2_ioctl_ops_4() returns (){
    var #t~ret2372.base : int, #t~ret2372.offset : int;
    var #t~ret2373.base : int, #t~ret2373.offset : int;
    var #t~ret2374.base : int, #t~ret2374.offset : int;
    var #t~ret2375.base : int, #t~ret2375.offset : int;
    var #t~ret2376.base : int, #t~ret2376.offset : int;
    var #t~ret2377.base : int, #t~ret2377.offset : int;
    var ~tmp~1386.base : int, ~tmp~1386.offset : int;
    var ~tmp___0~1386.base : int, ~tmp___0~1386.offset : int;
    var ~tmp___1~1386.base : int, ~tmp___1~1386.offset : int;
    var ~tmp___2~1386.base : int, ~tmp___2~1386.offset : int;
    var ~tmp___3~1386.base : int, ~tmp___3~1386.offset : int;
    var ~tmp___4~1386.base : int, ~tmp___4~1386.offset : int;

  loc9:
    havoc ~tmp~1386.base, ~tmp~1386.offset;
    havoc ~tmp___0~1386.base, ~tmp___0~1386.offset;
    havoc ~tmp___1~1386.base, ~tmp___1~1386.offset;
    havoc ~tmp___2~1386.base, ~tmp___2~1386.offset;
    havoc ~tmp___3~1386.base, ~tmp___3~1386.offset;
    havoc ~tmp___4~1386.base, ~tmp___4~1386.offset;
    call #t~ret2372.base, #t~ret2372.offset := ldv_zalloc(336);
    ~tmp~1386.base, ~tmp~1386.offset := #t~ret2372.base, #t~ret2372.offset;
    havoc #t~ret2372.base, #t~ret2372.offset;
    ~poseidon_fm_ioctl_ops_group2.base, ~poseidon_fm_ioctl_ops_group2.offset := ~tmp~1386.base, ~tmp~1386.offset;
    call #t~ret2373.base, #t~ret2373.offset := ldv_zalloc(52);
    ~tmp___0~1386.base, ~tmp___0~1386.offset := #t~ret2373.base, #t~ret2373.offset;
    havoc #t~ret2373.base, #t~ret2373.offset;
    ~poseidon_fm_ioctl_ops_group1.base, ~poseidon_fm_ioctl_ops_group1.offset := ~tmp___0~1386.base, ~tmp___0~1386.offset;
    call #t~ret2374.base, #t~ret2374.offset := ldv_zalloc(44);
    ~tmp___1~1386.base, ~tmp___1~1386.offset := #t~ret2374.base, #t~ret2374.offset;
    havoc #t~ret2374.base, #t~ret2374.offset;
    ~poseidon_fm_ioctl_ops_group0.base, ~poseidon_fm_ioctl_ops_group0.offset := ~tmp___1~1386.base, ~tmp___1~1386.offset;
    call #t~ret2375.base, #t~ret2375.offset := ldv_zalloc(84);
    ~tmp___2~1386.base, ~tmp___2~1386.offset := #t~ret2375.base, #t~ret2375.offset;
    havoc #t~ret2375.base, #t~ret2375.offset;
    ~poseidon_fm_ioctl_ops_group4.base, ~poseidon_fm_ioctl_ops_group4.offset := ~tmp___2~1386.base, ~tmp___2~1386.offset;
    call #t~ret2376.base, #t~ret2376.offset := ldv_zalloc(32);
    ~tmp___3~1386.base, ~tmp___3~1386.offset := #t~ret2376.base, #t~ret2376.offset;
    havoc #t~ret2376.base, #t~ret2376.offset;
    ~poseidon_fm_ioctl_ops_group3.base, ~poseidon_fm_ioctl_ops_group3.offset := ~tmp___3~1386.base, ~tmp___3~1386.offset;
    call #t~ret2377.base, #t~ret2377.offset := ldv_zalloc(8);
    ~tmp___4~1386.base, ~tmp___4~1386.offset := #t~ret2377.base, #t~ret2377.offset;
    havoc #t~ret2377.base, #t~ret2377.offset;
    ~poseidon_fm_ioctl_ops_group5.base, ~poseidon_fm_ioctl_ops_group5.offset := ~tmp___4~1386.base, ~tmp___4~1386.offset;
    assume true;
    return;
}

procedure ldv_initialize_v4l2_ioctl_ops_4() returns ();
modifies ~poseidon_fm_ioctl_ops_group2.base, ~poseidon_fm_ioctl_ops_group2.offset, ~poseidon_fm_ioctl_ops_group1.base, ~poseidon_fm_ioctl_ops_group1.offset, ~poseidon_fm_ioctl_ops_group0.base, ~poseidon_fm_ioctl_ops_group0.offset, ~poseidon_fm_ioctl_ops_group4.base, ~poseidon_fm_ioctl_ops_group4.offset, ~poseidon_fm_ioctl_ops_group3.base, ~poseidon_fm_ioctl_ops_group3.offset, ~poseidon_fm_ioctl_ops_group5.base, ~poseidon_fm_ioctl_ops_group5.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation poseidon_init() returns (#res : int){
    var #t~ret2816 : int;
    var #t~ret2817 : int;
    var ~ret~1641 : int;

  loc10:
    havoc ~ret~1641;
    call #t~ret2816 := usb_register(~#poseidon_driver.base, ~#poseidon_driver.offset);
    assume -2147483648 <= #t~ret2816 && #t~ret2816 <= 2147483647;
    ~ret~1641 := #t~ret2816;
    havoc #t~ret2816;
    assume ~ret~1641 != 0;
    #res := ~ret~1641;
    assume true;
    return;
}

procedure poseidon_init() returns (#res : int);
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~poseidon_driver_group1.base, ~poseidon_driver_group1.offset, ~ldv_state_variable_1, ~usb_counter;

implementation pm_notifier_block(#in~nb.base : int, #in~nb.offset : int, #in~event : int, #in~dummy.base : int, #in~dummy.offset : int) returns (#res : int){
    var #t~switch2657 : bool;
    var #t~mem2658.base : int, #t~mem2658.offset : int;
    var #t~mem2659.base : int, #t~mem2659.offset : int;
    var #t~mem2660.base : int, #t~mem2660.offset : int;
    var #t~mem2661.base : int, #t~mem2661.offset : int;
    var #t~ret2662 : int;
    var #t~ret2663 : int;
    var #t~mem2664.base : int, #t~mem2664.offset : int;
    var #t~nondet2665.base : int, #t~nondet2665.offset : int;
    var #t~ret2666 : int;
    var ~nb.base : int, ~nb.offset : int;
    var ~event : int;
    var ~dummy.base : int, ~dummy.offset : int;
    var ~pd~1527.base : int, ~pd~1527.offset : int;
    var ~node~1527.base : int, ~node~1527.offset : int;
    var ~next~1527.base : int, ~next~1527.offset : int;
    var ~udev~1527.base : int, ~udev~1527.offset : int;
    var ~iface~1527.base : int, ~iface~1527.offset : int;
    var ~rc~1527 : int;
    var ~__mptr~1527.base : int, ~__mptr~1527.offset : int;

  loc11:
    ~nb.base, ~nb.offset := #in~nb.base, #in~nb.offset;
    ~event := #in~event;
    ~dummy.base, ~dummy.offset := #in~dummy.base, #in~dummy.offset;
    havoc ~pd~1527.base, ~pd~1527.offset;
    havoc ~node~1527.base, ~node~1527.offset;
    havoc ~next~1527.base, ~next~1527.offset;
    havoc ~udev~1527.base, ~udev~1527.offset;
    havoc ~iface~1527.base, ~iface~1527.offset;
    havoc ~rc~1527;
    havoc ~__mptr~1527.base, ~__mptr~1527.offset;
    ~pd~1527.base, ~pd~1527.offset := 0, 0;
    #t~switch2657 := ~event == 2;
    assume #t~switch2657;
    call #t~mem2658.base, #t~mem2658.offset := read~$Pointer$(~#pd_device_list.base, ~#pd_device_list.offset + 0, 8);
    ~node~1527.base, ~node~1527.offset := #t~mem2658.base, #t~mem2658.offset;
    havoc #t~mem2658.base, #t~mem2658.offset;
    call #t~mem2659.base, #t~mem2659.offset := read~$Pointer$(~node~1527.base, ~node~1527.offset + 0, 8);
    ~next~1527.base, ~next~1527.offset := #t~mem2659.base, #t~mem2659.offset;
    havoc #t~mem2659.base, #t~mem2659.offset;
    assume (~node~1527.base + ~node~1527.offset) % 18446744073709551616 != (~#pd_device_list.base + ~#pd_device_list.offset) % 18446744073709551616;
    ~rc~1527 := 0;
    ~__mptr~1527.base, ~__mptr~1527.offset := ~node~1527.base, ~node~1527.offset;
    ~pd~1527.base, ~pd~1527.offset := ~__mptr~1527.base, ~__mptr~1527.offset;
    call #t~mem2660.base, #t~mem2660.offset := read~$Pointer$(~pd~1527.base, ~pd~1527.offset + 464, 8);
    ~udev~1527.base, ~udev~1527.offset := #t~mem2660.base, #t~mem2660.offset;
    havoc #t~mem2660.base, #t~mem2660.offset;
    call #t~mem2661.base, #t~mem2661.offset := read~$Pointer$(~pd~1527.base, ~pd~1527.offset + 472, 8);
    ~iface~1527.base, ~iface~1527.offset := #t~mem2661.base, #t~mem2661.offset;
    havoc #t~mem2661.base, #t~mem2661.offset;
    call #t~ret2662 := usb_lock_device_for_reset(~udev~1527.base, ~udev~1527.offset, ~iface~1527.base, ~iface~1527.offset);
    assume -2147483648 <= #t~ret2662 && #t~ret2662 <= 2147483647;
    ~rc~1527 := #t~ret2662;
    havoc #t~ret2662;
    assume ~rc~1527 >= 0;
    call #t~ret2663 := usb_reset_device(~udev~1527.base, ~udev~1527.offset);
    assume -2147483648 <= #t~ret2663 && #t~ret2663 <= 2147483647;
    havoc #t~ret2663;
    call device_unlock(~udev~1527.base, ~udev~1527.offset + 131);
    return;
}

procedure pm_notifier_block(#in~nb.base : int, #in~nb.offset : int, #in~event : int, #in~dummy.base : int, #in~dummy.offset : int) returns (#res : int);
modifies #valid, #length, ~ldv_mutex_mutex_of_device;

implementation ULTIMATE.init() returns (){
    var #t~nondet0.base : int, #t~nondet0.offset : int;
    var #t~nondet138.base : int, #t~nondet138.offset : int;
    var #t~nondet139.base : int, #t~nondet139.offset : int;
    var #t~nondet140.base : int, #t~nondet140.offset : int;
    var #t~nondet141.base : int, #t~nondet141.offset : int;
    var #t~nondet142.base : int, #t~nondet142.offset : int;
    var #t~nondet143.base : int, #t~nondet143.offset : int;
    var #t~union2843.__padding : [int]int, #t~union2843.dep_map.key.base : int, #t~union2843.dep_map.key.offset : int, #t~union2843.dep_map.class_cache.base : [int]int, #t~union2843.dep_map.class_cache.offset : [int]int, #t~union2843.dep_map.name.base : int, #t~union2843.dep_map.name.offset : int, #t~union2843.dep_map.cpu : int, #t~union2843.dep_map.ip : int;
    var #t~union2844.__padding : [int]int, #t~union2844.dep_map.key.base : int, #t~union2844.dep_map.key.offset : int, #t~union2844.dep_map.class_cache.base : [int]int, #t~union2844.dep_map.class_cache.offset : [int]int, #t~union2844.dep_map.name.base : int, #t~union2844.dep_map.name.offset : int, #t~union2844.dep_map.cpu : int, #t~union2844.dep_map.ip : int;
    var #t~union2845.__padding : [int]int, #t~union2845.dep_map.key.base : int, #t~union2845.dep_map.key.offset : int, #t~union2845.dep_map.class_cache.base : [int]int, #t~union2845.dep_map.class_cache.offset : [int]int, #t~union2845.dep_map.name.base : int, #t~union2845.dep_map.name.offset : int, #t~union2845.dep_map.cpu : int, #t~union2845.dep_map.ip : int;
    var #t~union2846.__padding : [int]int, #t~union2846.dep_map.key.base : int, #t~union2846.dep_map.key.offset : int, #t~union2846.dep_map.class_cache.base : [int]int, #t~union2846.dep_map.class_cache.offset : [int]int, #t~union2846.dep_map.name.base : int, #t~union2846.dep_map.name.offset : int, #t~union2846.dep_map.cpu : int, #t~union2846.dep_map.ip : int;
    var #t~union2847.__padding : [int]int, #t~union2847.dep_map.key.base : int, #t~union2847.dep_map.key.offset : int, #t~union2847.dep_map.class_cache.base : [int]int, #t~union2847.dep_map.class_cache.offset : [int]int, #t~union2847.dep_map.name.base : int, #t~union2847.dep_map.name.offset : int, #t~union2847.dep_map.cpu : int, #t~union2847.dep_map.ip : int;
    var #t~union2848.__padding : [int]int, #t~union2848.dep_map.key.base : int, #t~union2848.dep_map.key.offset : int, #t~union2848.dep_map.class_cache.base : [int]int, #t~union2848.dep_map.class_cache.offset : [int]int, #t~union2848.dep_map.name.base : int, #t~union2848.dep_map.name.offset : int, #t~union2848.dep_map.cpu : int, #t~union2848.dep_map.ip : int;
    var #t~union2849.__padding : [int]int, #t~union2849.dep_map.key.base : int, #t~union2849.dep_map.key.offset : int, #t~union2849.dep_map.class_cache.base : [int]int, #t~union2849.dep_map.class_cache.offset : [int]int, #t~union2849.dep_map.name.base : int, #t~union2849.dep_map.name.offset : int, #t~union2849.dep_map.cpu : int, #t~union2849.dep_map.ip : int;
    var #t~union2850.__padding : [int]int, #t~union2850.dep_map.key.base : int, #t~union2850.dep_map.key.offset : int, #t~union2850.dep_map.class_cache.base : [int]int, #t~union2850.dep_map.class_cache.offset : [int]int, #t~union2850.dep_map.name.base : int, #t~union2850.dep_map.name.offset : int, #t~union2850.dep_map.cpu : int, #t~union2850.dep_map.ip : int;
    var #t~union2851.__padding : [int]int, #t~union2851.dep_map.key.base : int, #t~union2851.dep_map.key.offset : int, #t~union2851.dep_map.class_cache.base : [int]int, #t~union2851.dep_map.class_cache.offset : [int]int, #t~union2851.dep_map.name.base : int, #t~union2851.dep_map.name.offset : int, #t~union2851.dep_map.cpu : int, #t~union2851.dep_map.ip : int;
    var #t~union2852.__padding : [int]int, #t~union2852.dep_map.key.base : int, #t~union2852.dep_map.key.offset : int, #t~union2852.dep_map.class_cache.base : [int]int, #t~union2852.dep_map.class_cache.offset : [int]int, #t~union2852.dep_map.name.base : int, #t~union2852.dep_map.name.offset : int, #t~union2852.dep_map.cpu : int, #t~union2852.dep_map.ip : int;
    var #t~union2853.__padding : [int]int, #t~union2853.dep_map.key.base : int, #t~union2853.dep_map.key.offset : int, #t~union2853.dep_map.class_cache.base : [int]int, #t~union2853.dep_map.class_cache.offset : [int]int, #t~union2853.dep_map.name.base : int, #t~union2853.dep_map.name.offset : int, #t~union2853.dep_map.cpu : int, #t~union2853.dep_map.ip : int;
    var #t~union2854.__padding : [int]int, #t~union2854.dep_map.key.base : int, #t~union2854.dep_map.key.offset : int, #t~union2854.dep_map.class_cache.base : [int]int, #t~union2854.dep_map.class_cache.offset : [int]int, #t~union2854.dep_map.name.base : int, #t~union2854.dep_map.name.offset : int, #t~union2854.dep_map.cpu : int, #t~union2854.dep_map.ip : int;
    var #t~nondet2815.base : int, #t~nondet2815.offset : int;
    var #t~union2855.__padding : [int]int, #t~union2855.dep_map.key.base : int, #t~union2855.dep_map.key.offset : int, #t~union2855.dep_map.class_cache.base : [int]int, #t~union2855.dep_map.class_cache.offset : [int]int, #t~union2855.dep_map.name.base : int, #t~union2855.dep_map.name.offset : int, #t~union2855.dep_map.cpu : int, #t~union2855.dep_map.ip : int;

  loc12:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_state_variable_8 := 0;
    ~ldv_state_variable_10 := 0;
    ~ldv_state_variable_11 := 0;
    ~ldv_state_variable_9 := 0;
    ~ref_cnt := 0;
    ~debug_mode := 0;
    ~usb_transfer_mode := 0;
    ~POSEIDON_TVNORMS := 18;
    ~POSEIDON_AUDIOMODS := 5;
    ~POSEIDON_INPUTS := 4;
    ~map_size := 3;
    ~ldv_retval_1 := 0;
    ~ldv_retval_9 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_retval_3 := 0;
    ~ldv_retval_2 := 0;
    ~ldv_state_variable_6 := 0;
    ~dvb_bandwidth := ~dvb_bandwidth[0,0 := 8];
    ~dvb_bandwidth := ~dvb_bandwidth[0,1 := 0];
    ~dvb_bandwidth := ~dvb_bandwidth[1,0 := 7];
    ~dvb_bandwidth := ~dvb_bandwidth[1,1 := 1];
    ~dvb_bandwidth := ~dvb_bandwidth[2,0 := 6];
    ~dvb_bandwidth := ~dvb_bandwidth[2,1 := 2];
    ~dvb_bandwidth_length := 3;
    call ~#adapter_nr.base, ~#adapter_nr.offset := #Ultimate.alloc(16);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 0, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 2, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 4, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 6, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 8, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 10, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 12, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 14, 2);
    ~ldv_retval_0 := 0;
    ~ldv_state_variable_5 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_state_variable_4 := 0;
    ~preemphasis := ~preemphasis[0 := 0];
    ~preemphasis := ~preemphasis[1 := 32];
    ~preemphasis := ~preemphasis[2 := 16];
    ~ldv_retval_10 := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_state_variable_2 := 0;
    ~usb_counter := 0;
    ~ldv_state_variable_1 := 0;
    call #t~nondet0.base, #t~nondet0.offset := #Ultimate.alloc(21);
    ~firmware_name.base, ~firmware_name.offset := #t~nondet0.base, #t~nondet0.offset;
    havoc #t~nondet0.base, #t~nondet0.offset;
    ~ldv_retval_5 := 0;
    ~ldv_retval_4 := 0;
    ~ldv_retval_6 := 0;
    ~ldv_retval_8 := 0;
    ~ldv_retval_7 := 0;
    ~ldv_mutex_lock_of_poseidon := 0;
    ~ldv_mutex_mutex_of_device := 0;
    ~ldv_mutex_pm_mutex := 0;
    ~ldv_mutex_power_lock_of_snd_card := 0;
    ~ldv_mutex_vb_lock_of_videobuf_queue := 0;
    ~pd_video_ioctl_ops_group1.base, ~pd_video_ioctl_ops_group1.offset := 0, 0;
    ~pd_video_ioctl_ops_group2.base, ~pd_video_ioctl_ops_group2.offset := 0, 0;
    ~pd_video_ioctl_ops_group6.base, ~pd_video_ioctl_ops_group6.offset := 0, 0;
    ~pd_video_ioctl_ops_group0.base, ~pd_video_ioctl_ops_group0.offset := 0, 0;
    ~pd_video_ioctl_ops_group3.base, ~pd_video_ioctl_ops_group3.offset := 0, 0;
    ~pd_video_qops_group1.base, ~pd_video_qops_group1.offset := 0, 0;
    ~pd_video_ioctl_ops_group5.base, ~pd_video_ioctl_ops_group5.offset := 0, 0;
    ~pd_video_qops_group2.base, ~pd_video_qops_group2.offset := 0, 0;
    ~pd_video_fops_group0.base, ~pd_video_fops_group0.offset := 0, 0;
    ~pd_video_ioctl_ops_group4.base, ~pd_video_ioctl_ops_group4.offset := 0, 0;
    call ~#poseidon_formats.base, ~#poseidon_formats.offset := #Ultimate.alloc(40);
    call #t~nondet138.base, #t~nondet138.offset := #Ultimate.alloc(8);
    call write~$Pointer$(#t~nondet138.base, #t~nondet138.offset, ~#poseidon_formats.base, ~#poseidon_formats.offset + 0 + 0, 8);
    call write~int(1448695129, ~#poseidon_formats.base, ~#poseidon_formats.offset + 0 + 8, 4);
    call write~int(16, ~#poseidon_formats.base, ~#poseidon_formats.offset + 0 + 12, 4);
    call write~int(0, ~#poseidon_formats.base, ~#poseidon_formats.offset + 0 + 16, 4);
    call #t~nondet139.base, #t~nondet139.offset := #Ultimate.alloc(7);
    #memory_int := #memory_int[#t~nondet139.base,#t~nondet139.offset + 0 := 82];
    #memory_int := #memory_int[#t~nondet139.base,#t~nondet139.offset + 1 := 71];
    #memory_int := #memory_int[#t~nondet139.base,#t~nondet139.offset + 2 := 66];
    #memory_int := #memory_int[#t~nondet139.base,#t~nondet139.offset + 3 := 53];
    #memory_int := #memory_int[#t~nondet139.base,#t~nondet139.offset + 4 := 54];
    #memory_int := #memory_int[#t~nondet139.base,#t~nondet139.offset + 5 := 53];
    #memory_int := #memory_int[#t~nondet139.base,#t~nondet139.offset + 6 := 0];
    call write~$Pointer$(#t~nondet139.base, #t~nondet139.offset, ~#poseidon_formats.base, ~#poseidon_formats.offset + 20 + 0, 8);
    call write~int(1346520914, ~#poseidon_formats.base, ~#poseidon_formats.offset + 20 + 8, 4);
    call write~int(16, ~#poseidon_formats.base, ~#poseidon_formats.offset + 20 + 12, 4);
    call write~int(0, ~#poseidon_formats.base, ~#poseidon_formats.offset + 20 + 16, 4);
    havoc #t~nondet138.base, #t~nondet138.offset;
    havoc #t~nondet139.base, #t~nondet139.offset;
    call ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset := #Ultimate.alloc(432);
    call write~int(32, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 0, 8);
    call write~int(80, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 8 + 0, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 8 + 1, 1);
    call write~int(76, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 8 + 2, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 8 + 3, 1);
    call write~int(68, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 8 + 4, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 8 + 5, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 8 + 11, 1);
    call write~int(32, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 0 + 20, 4);
    call write~int(1, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 0, 8);
    call write~int(80, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 8 + 0, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 8 + 1, 1);
    call write~int(76, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 8 + 2, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 8 + 3, 1);
    call write~int(66, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 8 + 4, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 8 + 5, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 8 + 11, 1);
    call write~int(16, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 24 + 20, 4);
    call write~int(4, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 0, 8);
    call write~int(80, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 8 + 0, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 8 + 1, 1);
    call write~int(76, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 8 + 2, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 8 + 3, 1);
    call write~int(71, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 8 + 4, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 8 + 5, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 8 + 11, 1);
    call write~int(64, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 48 + 20, 4);
    call write~int(8, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 0, 8);
    call write~int(80, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 8 + 0, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 8 + 1, 1);
    call write~int(76, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 8 + 2, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 8 + 3, 1);
    call write~int(72, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 8 + 4, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 8 + 5, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 8 + 11, 1);
    call write~int(128, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 72 + 20, 4);
    call write~int(16, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 0, 8);
    call write~int(80, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 8 + 0, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 8 + 1, 1);
    call write~int(76, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 8 + 2, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 8 + 3, 1);
    call write~int(73, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 8 + 4, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 8 + 5, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 8 + 11, 1);
    call write~int(256, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 96 + 20, 4);
    call write~int(256, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 0, 8);
    call write~int(80, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 8 + 0, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 8 + 1, 1);
    call write~int(76, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 8 + 2, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 8 + 3, 1);
    call write~int(77, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 8 + 4, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 8 + 5, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 8 + 11, 1);
    call write~int(512, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 120 + 20, 4);
    call write~int(512, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 0, 8);
    call write~int(80, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 8 + 0, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 8 + 1, 1);
    call write~int(76, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 8 + 2, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 8 + 3, 1);
    call write~int(78, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 8 + 4, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 8 + 5, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 8 + 11, 1);
    call write~int(1048576, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 144 + 20, 4);
    call write~int(1024, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 0, 8);
    call write~int(80, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 8 + 0, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 8 + 1, 1);
    call write~int(76, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 8 + 2, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 8 + 3, 1);
    call write~int(78, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 8 + 4, 1);
    call write~int(99, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 8 + 5, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 8 + 11, 1);
    call write~int(1048576, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 168 + 20, 4);
    call write~int(4096, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 0, 8);
    call write~int(78, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 8 + 0, 1);
    call write~int(84, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 8 + 1, 1);
    call write~int(83, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 8 + 2, 1);
    call write~int(67, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 8 + 3, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 8 + 4, 1);
    call write~int(77, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 8 + 5, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 8 + 11, 1);
    call write~int(1, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 192 + 20, 4);
    call write~int(8192, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 0, 8);
    call write~int(78, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 8 + 0, 1);
    call write~int(84, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 8 + 1, 1);
    call write~int(83, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 8 + 2, 1);
    call write~int(67, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 8 + 3, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 8 + 4, 1);
    call write~int(74, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 8 + 5, 1);
    call write~int(80, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 8 + 11, 1);
    call write~int(2, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 216 + 20, 4);
    call write~int(65536, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 0, 8);
    call write~int(83, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 8 + 0, 1);
    call write~int(69, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 8 + 1, 1);
    call write~int(67, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 8 + 2, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 8 + 3, 1);
    call write~int(77, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 8 + 4, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 8 + 5, 1);
    call write~int(66, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 8 + 11, 1);
    call write~int(4096, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 240 + 20, 4);
    call write~int(131072, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 0, 8);
    call write~int(83, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 8 + 0, 1);
    call write~int(69, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 8 + 1, 1);
    call write~int(67, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 8 + 2, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 8 + 3, 1);
    call write~int(77, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 8 + 4, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 8 + 5, 1);
    call write~int(68, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 8 + 11, 1);
    call write~int(8192, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 264 + 20, 4);
    call write~int(262144, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 0, 8);
    call write~int(83, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 8 + 0, 1);
    call write~int(69, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 8 + 1, 1);
    call write~int(67, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 8 + 2, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 8 + 3, 1);
    call write~int(77, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 8 + 4, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 8 + 5, 1);
    call write~int(71, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 8 + 11, 1);
    call write~int(16384, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 288 + 20, 4);
    call write~int(524288, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 0, 8);
    call write~int(83, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 8 + 0, 1);
    call write~int(69, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 8 + 1, 1);
    call write~int(67, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 8 + 2, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 8 + 3, 1);
    call write~int(77, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 8 + 4, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 8 + 5, 1);
    call write~int(72, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 8 + 11, 1);
    call write~int(32768, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 312 + 20, 4);
    call write~int(1048576, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 0, 8);
    call write~int(83, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 8 + 0, 1);
    call write~int(69, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 8 + 1, 1);
    call write~int(67, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 8 + 2, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 8 + 3, 1);
    call write~int(77, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 8 + 4, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 8 + 5, 1);
    call write~int(75, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 8 + 11, 1);
    call write~int(65536, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 336 + 20, 4);
    call write~int(2097152, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 0, 8);
    call write~int(83, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 8 + 0, 1);
    call write~int(69, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 8 + 1, 1);
    call write~int(67, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 8 + 2, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 8 + 3, 1);
    call write~int(77, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 8 + 4, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 8 + 5, 1);
    call write~int(75, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 8 + 6, 1);
    call write~int(49, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 8 + 11, 1);
    call write~int(131072, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 360 + 20, 4);
    call write~int(4194304, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 0, 8);
    call write~int(83, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 8 + 0, 1);
    call write~int(69, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 8 + 1, 1);
    call write~int(67, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 8 + 2, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 8 + 3, 1);
    call write~int(77, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 8 + 4, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 8 + 5, 1);
    call write~int(76, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 8 + 6, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 8 + 11, 1);
    call write~int(262144, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 384 + 20, 4);
    call write~int(8388608, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 0, 8);
    call write~int(83, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 8 + 0, 1);
    call write~int(69, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 8 + 1, 1);
    call write~int(67, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 8 + 2, 1);
    call write~int(65, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 8 + 3, 1);
    call write~int(77, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 8 + 4, 1);
    call write~int(45, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 8 + 5, 1);
    call write~int(76, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 8 + 6, 1);
    call write~int(67, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 8 + 7, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 8 + 8, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 8 + 9, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 8 + 10, 1);
    call write~int(0, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 8 + 11, 1);
    call write~int(524288, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset + 408 + 20, 4);
    ~pd_audio_modes.tlg_audio_mode, ~pd_audio_modes.v4l2_audio_sub, ~pd_audio_modes.v4l2_audio_mode := ~pd_audio_modes.tlg_audio_mode[0 := 0], ~pd_audio_modes.v4l2_audio_sub[0 := 0], ~pd_audio_modes.v4l2_audio_mode[0 := 0];
    ~pd_audio_modes.tlg_audio_mode, ~pd_audio_modes.v4l2_audio_sub, ~pd_audio_modes.v4l2_audio_mode := ~pd_audio_modes.tlg_audio_mode[1 := 0], ~pd_audio_modes.v4l2_audio_sub[1 := 0], ~pd_audio_modes.v4l2_audio_mode[1 := 0];
    ~pd_audio_modes.tlg_audio_mode, ~pd_audio_modes.v4l2_audio_sub, ~pd_audio_modes.v4l2_audio_mode := ~pd_audio_modes.tlg_audio_mode[2 := 0], ~pd_audio_modes.v4l2_audio_sub[2 := 0], ~pd_audio_modes.v4l2_audio_mode[2 := 0];
    ~pd_audio_modes.tlg_audio_mode, ~pd_audio_modes.v4l2_audio_sub, ~pd_audio_modes.v4l2_audio_mode := ~pd_audio_modes.tlg_audio_mode[3 := 0], ~pd_audio_modes.v4l2_audio_sub[3 := 0], ~pd_audio_modes.v4l2_audio_mode[3 := 0];
    ~pd_audio_modes.tlg_audio_mode, ~pd_audio_modes.v4l2_audio_sub, ~pd_audio_modes.v4l2_audio_mode := ~pd_audio_modes.tlg_audio_mode[4 := 0], ~pd_audio_modes.v4l2_audio_sub[4 := 0], ~pd_audio_modes.v4l2_audio_mode[4 := 0];
    call ~#pd_inputs.base, ~#pd_inputs.offset := #Ultimate.alloc(48);
    call #t~nondet140.base, #t~nondet140.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet140.base, #t~nondet140.offset, ~#pd_inputs.base, ~#pd_inputs.offset + 0 + 0, 8);
    call write~int(1, ~#pd_inputs.base, ~#pd_inputs.offset + 0 + 8, 4);
    call #t~nondet141.base, #t~nondet141.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet141.base, #t~nondet141.offset, ~#pd_inputs.base, ~#pd_inputs.offset + 12 + 0, 8);
    call write~int(2, ~#pd_inputs.base, ~#pd_inputs.offset + 12 + 8, 4);
    call #t~nondet142.base, #t~nondet142.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet142.base, #t~nondet142.offset, ~#pd_inputs.base, ~#pd_inputs.offset + 24 + 0, 8);
    call write~int(4, ~#pd_inputs.base, ~#pd_inputs.offset + 24 + 8, 4);
    call #t~nondet143.base, #t~nondet143.offset := #Ultimate.alloc(13);
    call write~$Pointer$(#t~nondet143.base, #t~nondet143.offset, ~#pd_inputs.base, ~#pd_inputs.offset + 36 + 0, 8);
    call write~int(8, ~#pd_inputs.base, ~#pd_inputs.offset + 36 + 8, 4);
    havoc #t~nondet140.base, #t~nondet140.offset;
    havoc #t~nondet141.base, #t~nondet141.offset;
    havoc #t~nondet142.base, #t~nondet142.offset;
    havoc #t~nondet143.base, #t~nondet143.offset;
    call ~#controls.base, ~#controls.offset := #Ultimate.alloc(288);
    call write~int(9963776, ~#controls.base, ~#controls.offset + 0 + 0 + 0, 4);
    call write~int(1, ~#controls.base, ~#controls.offset + 0 + 0 + 4, 4);
    call write~int(98, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 0, 1);
    call write~int(114, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 1, 1);
    call write~int(105, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 2, 1);
    call write~int(103, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 3, 1);
    call write~int(104, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 4, 1);
    call write~int(116, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 5, 1);
    call write~int(110, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 6, 1);
    call write~int(101, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 7, 1);
    call write~int(115, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 8, 1);
    call write~int(115, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 9, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 10, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 11, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 12, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 13, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 14, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 15, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 16, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 17, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 18, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 19, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 20, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 21, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 22, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 23, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 24, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 25, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 26, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 27, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 28, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 29, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 30, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 8 + 31, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 40, 4);
    call write~int(10000, ~#controls.base, ~#controls.offset + 0 + 0 + 44, 4);
    call write~int(1, ~#controls.base, ~#controls.offset + 0 + 0 + 48, 4);
    call write~int(100, ~#controls.base, ~#controls.offset + 0 + 0 + 52, 4);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 56, 4);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 60 + 0, 4);
    call write~int(0, ~#controls.base, ~#controls.offset + 0 + 0 + 60 + 4, 4);
    call write~int(1, ~#controls.base, ~#controls.offset + 0 + 68, 4);
    call write~int(9963777, ~#controls.base, ~#controls.offset + 72 + 0 + 0, 4);
    call write~int(1, ~#controls.base, ~#controls.offset + 72 + 0 + 4, 4);
    call write~int(99, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 0, 1);
    call write~int(111, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 1, 1);
    call write~int(110, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 2, 1);
    call write~int(116, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 3, 1);
    call write~int(114, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 4, 1);
    call write~int(97, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 5, 1);
    call write~int(115, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 6, 1);
    call write~int(116, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 7, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 8, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 9, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 10, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 11, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 12, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 13, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 14, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 15, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 16, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 17, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 18, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 19, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 20, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 21, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 22, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 23, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 24, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 25, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 26, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 27, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 28, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 29, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 30, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 8 + 31, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 40, 4);
    call write~int(10000, ~#controls.base, ~#controls.offset + 72 + 0 + 44, 4);
    call write~int(1, ~#controls.base, ~#controls.offset + 72 + 0 + 48, 4);
    call write~int(100, ~#controls.base, ~#controls.offset + 72 + 0 + 52, 4);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 56, 4);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 60 + 0, 4);
    call write~int(0, ~#controls.base, ~#controls.offset + 72 + 0 + 60 + 4, 4);
    call write~int(2, ~#controls.base, ~#controls.offset + 72 + 68, 4);
    call write~int(9963779, ~#controls.base, ~#controls.offset + 144 + 0 + 0, 4);
    call write~int(1, ~#controls.base, ~#controls.offset + 144 + 0 + 4, 4);
    call write~int(104, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 0, 1);
    call write~int(117, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 1, 1);
    call write~int(101, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 2, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 3, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 4, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 5, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 6, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 7, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 8, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 9, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 10, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 11, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 12, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 13, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 14, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 15, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 16, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 17, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 18, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 19, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 20, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 21, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 22, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 23, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 24, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 25, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 26, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 27, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 28, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 29, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 30, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 8 + 31, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 40, 4);
    call write~int(10000, ~#controls.base, ~#controls.offset + 144 + 0 + 44, 4);
    call write~int(1, ~#controls.base, ~#controls.offset + 144 + 0 + 48, 4);
    call write~int(100, ~#controls.base, ~#controls.offset + 144 + 0 + 52, 4);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 56, 4);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 60 + 0, 4);
    call write~int(0, ~#controls.base, ~#controls.offset + 144 + 0 + 60 + 4, 4);
    call write~int(3, ~#controls.base, ~#controls.offset + 144 + 68, 4);
    call write~int(9963778, ~#controls.base, ~#controls.offset + 216 + 0 + 0, 4);
    call write~int(1, ~#controls.base, ~#controls.offset + 216 + 0 + 4, 4);
    call write~int(115, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 0, 1);
    call write~int(97, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 1, 1);
    call write~int(116, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 2, 1);
    call write~int(117, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 3, 1);
    call write~int(114, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 4, 1);
    call write~int(97, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 5, 1);
    call write~int(116, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 6, 1);
    call write~int(105, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 7, 1);
    call write~int(111, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 8, 1);
    call write~int(110, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 9, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 10, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 11, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 12, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 13, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 14, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 15, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 16, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 17, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 18, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 19, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 20, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 21, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 22, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 23, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 24, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 25, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 26, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 27, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 28, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 29, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 30, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 8 + 31, 1);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 40, 4);
    call write~int(10000, ~#controls.base, ~#controls.offset + 216 + 0 + 44, 4);
    call write~int(1, ~#controls.base, ~#controls.offset + 216 + 0 + 48, 4);
    call write~int(100, ~#controls.base, ~#controls.offset + 216 + 0 + 52, 4);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 56, 4);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 60 + 0, 4);
    call write~int(0, ~#controls.base, ~#controls.offset + 216 + 0 + 60 + 4, 4);
    call write~int(4, ~#controls.base, ~#controls.offset + 216 + 68, 4);
    ~video_to_audio_map.video_std, ~video_to_audio_map.audio_std := ~video_to_audio_map.video_std[0 := 0], ~video_to_audio_map.audio_std[0 := 0];
    ~video_to_audio_map.video_std, ~video_to_audio_map.audio_std := ~video_to_audio_map.video_std[1 := 0], ~video_to_audio_map.audio_std[1 := 0];
    ~video_to_audio_map.video_std, ~video_to_audio_map.audio_std := ~video_to_audio_map.video_std[2 := 0], ~video_to_audio_map.audio_std[2 := 0];
    call ~#pd_video_qops.base, ~#pd_video_qops.offset := #Ultimate.alloc(32);
    call write~$Pointer$(#funAddr~pd_buf_setup.base, #funAddr~pd_buf_setup.offset, ~#pd_video_qops.base, ~#pd_video_qops.offset + 0, 8);
    call write~$Pointer$(#funAddr~pd_buf_prepare.base, #funAddr~pd_buf_prepare.offset, ~#pd_video_qops.base, ~#pd_video_qops.offset + 8, 8);
    call write~$Pointer$(#funAddr~pd_buf_queue.base, #funAddr~pd_buf_queue.offset, ~#pd_video_qops.base, ~#pd_video_qops.offset + 16, 8);
    call write~$Pointer$(#funAddr~pd_buf_release.base, #funAddr~pd_buf_release.offset, ~#pd_video_qops.base, ~#pd_video_qops.offset + 24, 8);
    call ~#pd_video_fops.base, ~#pd_video_fops.offset := #Ultimate.alloc(72);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#pd_video_fops.base, ~#pd_video_fops.offset + 0, 8);
    call write~$Pointer$(#funAddr~pd_video_read.base, #funAddr~pd_video_read.offset, ~#pd_video_fops.base, ~#pd_video_fops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_fops.base, ~#pd_video_fops.offset + 16, 8);
    call write~$Pointer$(#funAddr~pd_video_poll.base, #funAddr~pd_video_poll.offset, ~#pd_video_fops.base, ~#pd_video_fops.offset + 24, 8);
    call write~$Pointer$(#funAddr~video_ioctl2.base, #funAddr~video_ioctl2.offset, ~#pd_video_fops.base, ~#pd_video_fops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#pd_video_fops.base, ~#pd_video_fops.offset + 40, 8);
    call write~$Pointer$(#funAddr~pd_video_mmap.base, #funAddr~pd_video_mmap.offset, ~#pd_video_fops.base, ~#pd_video_fops.offset + 48, 8);
    call write~$Pointer$(#funAddr~pd_video_open.base, #funAddr~pd_video_open.offset, ~#pd_video_fops.base, ~#pd_video_fops.offset + 56, 8);
    call write~$Pointer$(#funAddr~pd_video_release.base, #funAddr~pd_video_release.offset, ~#pd_video_fops.base, ~#pd_video_fops.offset + 64, 8);
    call ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset := #Ultimate.alloc(784);
    call write~$Pointer$(#funAddr~vidioc_querycap.base, #funAddr~vidioc_querycap.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~vidioc_enum_fmt.base, #funAddr~vidioc_enum_fmt.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~vidioc_g_fmt.base, #funAddr~vidioc_g_fmt.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 80, 8);
    call write~$Pointer$(#funAddr~vidioc_g_fmt_vbi.base, #funAddr~vidioc_g_fmt_vbi.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 120, 8);
    call write~$Pointer$(#funAddr~vidioc_s_fmt.base, #funAddr~vidioc_s_fmt.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 192, 8);
    call write~$Pointer$(#funAddr~vidioc_try_fmt.base, #funAddr~vidioc_try_fmt.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 264, 8);
    call write~$Pointer$(#funAddr~vidioc_reqbufs.base, #funAddr~vidioc_reqbufs.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 272, 8);
    call write~$Pointer$(#funAddr~vidioc_querybuf.base, #funAddr~vidioc_querybuf.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 280, 8);
    call write~$Pointer$(#funAddr~vidioc_qbuf.base, #funAddr~vidioc_qbuf.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 288, 8);
    call write~$Pointer$(#funAddr~vidioc_dqbuf.base, #funAddr~vidioc_dqbuf.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 320, 8);
    call write~$Pointer$(#funAddr~vidioc_streamon.base, #funAddr~vidioc_streamon.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 328, 8);
    call write~$Pointer$(#funAddr~vidioc_streamoff.base, #funAddr~vidioc_streamoff.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 344, 8);
    call write~$Pointer$(#funAddr~vidioc_s_std.base, #funAddr~vidioc_s_std.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 360, 8);
    call write~$Pointer$(#funAddr~vidioc_enum_input.base, #funAddr~vidioc_enum_input.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 368, 8);
    call write~$Pointer$(#funAddr~vidioc_g_input.base, #funAddr~vidioc_g_input.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 376, 8);
    call write~$Pointer$(#funAddr~vidioc_s_input.base, #funAddr~vidioc_s_input.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 408, 8);
    call write~$Pointer$(#funAddr~vidioc_queryctrl.base, #funAddr~vidioc_queryctrl.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 416, 8);
    call write~$Pointer$(#funAddr~vidioc_g_ctrl.base, #funAddr~vidioc_g_ctrl.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 424, 8);
    call write~$Pointer$(#funAddr~vidioc_s_ctrl.base, #funAddr~vidioc_s_ctrl.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 432, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 440, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 448, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 464, 8);
    call write~$Pointer$(#funAddr~vidioc_enumaudio.base, #funAddr~vidioc_enumaudio.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 472, 8);
    call write~$Pointer$(#funAddr~vidioc_g_audio.base, #funAddr~vidioc_g_audio.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 480, 8);
    call write~$Pointer$(#funAddr~vidioc_s_audio.base, #funAddr~vidioc_s_audio.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 488, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 496, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 504, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 512, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 520, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 528, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 536, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 544, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 552, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 560, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 568, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 576, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 584, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 592, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 600, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 608, 8);
    call write~$Pointer$(#funAddr~vidioc_g_tuner.base, #funAddr~vidioc_g_tuner.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 616, 8);
    call write~$Pointer$(#funAddr~vidioc_s_tuner.base, #funAddr~vidioc_s_tuner.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 624, 8);
    call write~$Pointer$(#funAddr~vidioc_g_frequency.base, #funAddr~vidioc_g_frequency.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 632, 8);
    call write~$Pointer$(#funAddr~vidioc_s_frequency.base, #funAddr~vidioc_s_frequency.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 640, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 648, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 656, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 664, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 672, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 680, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 688, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 696, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 704, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 712, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 720, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 728, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 736, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 744, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 752, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 760, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 768, 8);
    call write~$Pointer$(0, 0, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset + 776, 8);
    call ~#pd_video_template.base, ~#pd_video_template.offset := #Ultimate.alloc(1237);
    call write~$Pointer$(~#pd_video_fops.base, ~#pd_video_fops.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 16 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 16 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 16 + 24, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 16 + 32, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 16 + 40, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 16 + 48, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 16 + 56 + 0 + 0, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 16 + 60, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 16 + 61, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 16 + 62, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 16 + 63, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 16 + 64, 1);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 81, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 89, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 0 + 0, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 4, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2843.__padding[0], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union2843.dep_map.key.base, #t~union2843.dep_map.key.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union2843.dep_map.class_cache.base[0], #t~union2843.dep_map.class_cache.offset[0], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union2843.dep_map.class_cache.base[1], #t~union2843.dep_map.class_cache.offset[1], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union2843.dep_map.name.base, #t~union2843.dep_map.name.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union2843.dep_map.cpu, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union2843.dep_map.ip, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 4 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 68 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 84, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 92, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 100, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 108 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 108 + 8 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 108 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 108 + 24, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 108 + 32, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 97 + 108 + 36, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 249, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 257, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 265, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 0 + 0, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 4, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 5, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 6, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 4, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2844.__padding[0], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union2844.dep_map.key.base, #t~union2844.dep_map.key.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union2844.dep_map.class_cache.base[0], #t~union2844.dep_map.class_cache.offset[0], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union2844.dep_map.class_cache.base[1], #t~union2844.dep_map.class_cache.offset[1], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union2844.dep_map.name.base, #t~union2844.dep_map.name.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union2844.dep_map.cpu, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union2844.dep_map.ip, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 7 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 71 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 71 + 8, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 0, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2845.__padding[0], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union2845.dep_map.key.base, #t~union2845.dep_map.key.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union2845.dep_map.class_cache.base[0], #t~union2845.dep_map.class_cache.offset[0], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union2845.dep_map.class_cache.base[1], #t~union2845.dep_map.class_cache.offset[1], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union2845.dep_map.name.base, #t~union2845.dep_map.name.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union2845.dep_map.cpu, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union2845.dep_map.ip, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 64 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 87 + 4 + 64 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 171, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 0 + 8, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 16, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 24, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 32, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 40, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 48, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 52, 4);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 56, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 0, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 1, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 2, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 3, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 4, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 5, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 6, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 7, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 8, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 9, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 10, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 11, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 12, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 13, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 14, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 64 + 15, 1);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 80 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 80 + 8 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 80 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 80 + 24, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 80 + 32, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 179 + 80 + 36, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 303, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 311 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 311 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 311 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 311 + 24, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 311 + 32 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 311 + 32 + 8 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 311 + 32 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 311 + 32 + 24, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 311 + 32 + 32, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 311 + 32 + 36, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2846.__padding[0], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union2846.dep_map.key.base, #t~union2846.dep_map.key.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union2846.dep_map.class_cache.base[0], #t~union2846.dep_map.class_cache.offset[0], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union2846.dep_map.class_cache.base[1], #t~union2846.dep_map.class_cache.offset[1], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union2846.dep_map.name.base, #t~union2846.dep_map.name.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union2846.dep_map.cpu, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union2846.dep_map.ip, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 64 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 387 + 64 + 8, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 467 + 0, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 471 + 0, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 475, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 476, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 477, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 478, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 479, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 480, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 481, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 482, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 483, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 484, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 485, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 486, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 490, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 494, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 498, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 502, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 510, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 518, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 273 + 526, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 807, 4);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 811, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 819, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 827, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 835 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 835 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 851, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 859 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 859 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 859 + 16, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 883, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 4, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2847.__padding[0], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union2847.dep_map.key.base, #t~union2847.dep_map.key.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union2847.dep_map.class_cache.base[0], #t~union2847.dep_map.class_cache.offset[0], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union2847.dep_map.class_cache.base[1], #t~union2847.dep_map.class_cache.offset[1], ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union2847.dep_map.name.base, #t~union2847.dep_map.name.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union2847.dep_map.cpu, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union2847.dep_map.ip, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 887 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 951 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 951 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 967 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 967 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 967 + 8 + 8, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 967 + 24 + 0 + 0, 4);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 995, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 1003, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 8 + 1011, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 1027, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 1035, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 1043, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 1051, 8);
    call write~int(84, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 0, 1);
    call write~int(101, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 1, 1);
    call write~int(108, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 2, 1);
    call write~int(101, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 3, 1);
    call write~int(103, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 4, 1);
    call write~int(101, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 5, 1);
    call write~int(110, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 6, 1);
    call write~int(116, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 7, 1);
    call write~int(45, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 8, 1);
    call write~int(86, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 9, 1);
    call write~int(105, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 10, 1);
    call write~int(100, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 11, 1);
    call write~int(101, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 12, 1);
    call write~int(111, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 13, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 14, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 15, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 16, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 17, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 18, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 19, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 20, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 21, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 22, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 23, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 24, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 25, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 26, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 27, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 28, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 29, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 30, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1059 + 31, 1);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1091, 4);
    call write~int(-1, ~#pd_video_template.base, ~#pd_video_template.offset + 1095, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1099, 2);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1101, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1109, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 4, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2848.__padding[0], ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union2848.dep_map.key.base, #t~union2848.dep_map.key.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union2848.dep_map.class_cache.base[0], #t~union2848.dep_map.class_cache.offset[0], ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union2848.dep_map.class_cache.base[1], #t~union2848.dep_map.class_cache.offset[1], ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union2848.dep_map.name.base, #t~union2848.dep_map.name.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union2848.dep_map.cpu, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union2848.dep_map.ip, ~#pd_video_template.base, ~#pd_video_template.offset + 1113 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 1177 + 0, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 1177 + 8, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1193, 4);
    call write~int(16777215, ~#pd_video_template.base, ~#pd_video_template.offset + 1197, 8);
    call write~int(0, ~#pd_video_template.base, ~#pd_video_template.offset + 1205, 8);
    call write~$Pointer$(#funAddr~video_device_release.base, #funAddr~video_device_release.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 1213, 8);
    call write~$Pointer$(~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset, ~#pd_video_template.base, ~#pd_video_template.offset + 1221, 8);
    call write~$Pointer$(0, 0, ~#pd_video_template.base, ~#pd_video_template.offset + 1229, 8);
    havoc #t~union2843.__padding, #t~union2843.dep_map.key.base, #t~union2843.dep_map.key.offset, #t~union2843.dep_map.class_cache.base, #t~union2843.dep_map.class_cache.offset, #t~union2843.dep_map.name.base, #t~union2843.dep_map.name.offset, #t~union2843.dep_map.cpu, #t~union2843.dep_map.ip;
    havoc #t~union2844.__padding, #t~union2844.dep_map.key.base, #t~union2844.dep_map.key.offset, #t~union2844.dep_map.class_cache.base, #t~union2844.dep_map.class_cache.offset, #t~union2844.dep_map.name.base, #t~union2844.dep_map.name.offset, #t~union2844.dep_map.cpu, #t~union2844.dep_map.ip;
    havoc #t~union2845.__padding, #t~union2845.dep_map.key.base, #t~union2845.dep_map.key.offset, #t~union2845.dep_map.class_cache.base, #t~union2845.dep_map.class_cache.offset, #t~union2845.dep_map.name.base, #t~union2845.dep_map.name.offset, #t~union2845.dep_map.cpu, #t~union2845.dep_map.ip;
    havoc #t~union2846.__padding, #t~union2846.dep_map.key.base, #t~union2846.dep_map.key.offset, #t~union2846.dep_map.class_cache.base, #t~union2846.dep_map.class_cache.offset, #t~union2846.dep_map.name.base, #t~union2846.dep_map.name.offset, #t~union2846.dep_map.cpu, #t~union2846.dep_map.ip;
    havoc #t~union2847.__padding, #t~union2847.dep_map.key.base, #t~union2847.dep_map.key.offset, #t~union2847.dep_map.class_cache.base, #t~union2847.dep_map.class_cache.offset, #t~union2847.dep_map.name.base, #t~union2847.dep_map.name.offset, #t~union2847.dep_map.cpu, #t~union2847.dep_map.ip;
    havoc #t~union2848.__padding, #t~union2848.dep_map.key.base, #t~union2848.dep_map.key.offset, #t~union2848.dep_map.class_cache.base, #t~union2848.dep_map.class_cache.offset, #t~union2848.dep_map.name.base, #t~union2848.dep_map.name.offset, #t~union2848.dep_map.cpu, #t~union2848.dep_map.ip;
    ~pcm_capture_ops_group0.base, ~pcm_capture_ops_group0.offset := 0, 0;
    ~snd_pd_hw_capture.info, ~snd_pd_hw_capture.formats, ~snd_pd_hw_capture.rates, ~snd_pd_hw_capture.rate_min, ~snd_pd_hw_capture.rate_max, ~snd_pd_hw_capture.channels_min, ~snd_pd_hw_capture.channels_max, ~snd_pd_hw_capture.buffer_bytes_max, ~snd_pd_hw_capture.period_bytes_min, ~snd_pd_hw_capture.period_bytes_max, ~snd_pd_hw_capture.periods_min, ~snd_pd_hw_capture.periods_max, ~snd_pd_hw_capture.fifo_size := 65795, 4, 128, 48000, 48000, 2, 2, 32768, 8192, 8192, 4, 4, 0;
    call ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset := #Ultimate.alloc(104);
    call write~$Pointer$(#funAddr~snd_pd_capture_open.base, #funAddr~snd_pd_capture_open.offset, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~snd_pd_pcm_close.base, #funAddr~snd_pd_pcm_close.offset, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~snd_pcm_lib_ioctl.base, #funAddr~snd_pcm_lib_ioctl.offset, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~snd_pd_hw_capture_params.base, #funAddr~snd_pd_hw_capture_params.offset, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~snd_pd_hw_capture_free.base, #funAddr~snd_pd_hw_capture_free.offset, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset + 32, 8);
    call write~$Pointer$(#funAddr~snd_pd_prepare.base, #funAddr~snd_pd_prepare.offset, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset + 40, 8);
    call write~$Pointer$(#funAddr~snd_pd_capture_trigger.base, #funAddr~snd_pd_capture_trigger.offset, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~snd_pd_capture_pointer.base, #funAddr~snd_pd_capture_pointer.offset, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset + 72, 8);
    call write~$Pointer$(#funAddr~snd_pcm_pd_get_page.base, #funAddr~snd_pcm_pd_get_page.offset, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset + 96, 8);
    ~poseidon_frontend_ops_group1.base, ~poseidon_frontend_ops_group1.offset := 0, 0;
    ~poseidon_frontend_ops_group0.base, ~poseidon_frontend_ops_group0.offset := 0, 0;
    call ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset := #Ultimate.alloc(752);
    call write~int(80, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 0, 1);
    call write~int(111, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 1, 1);
    call write~int(115, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 2, 1);
    call write~int(101, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 3, 1);
    call write~int(105, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 4, 1);
    call write~int(100, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 5, 1);
    call write~int(111, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 6, 1);
    call write~int(110, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 7, 1);
    call write~int(32, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 8, 1);
    call write~int(68, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 9, 1);
    call write~int(86, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 10, 1);
    call write~int(66, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 11, 1);
    call write~int(45, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 12, 1);
    call write~int(84, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 13, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 14, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 15, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 16, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 17, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 18, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 19, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 20, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 21, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 22, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 23, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 24, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 25, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 26, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 27, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 28, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 29, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 30, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 31, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 32, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 33, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 34, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 35, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 36, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 37, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 38, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 39, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 40, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 41, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 42, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 43, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 44, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 45, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 46, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 47, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 48, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 49, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 50, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 51, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 52, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 53, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 54, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 55, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 56, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 57, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 58, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 59, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 60, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 61, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 62, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 63, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 64, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 65, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 66, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 67, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 68, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 69, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 70, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 71, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 72, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 73, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 74, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 75, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 76, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 77, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 78, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 79, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 80, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 81, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 82, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 83, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 84, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 85, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 86, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 87, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 88, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 89, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 90, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 91, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 92, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 93, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 94, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 95, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 96, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 97, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 98, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 99, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 100, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 101, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 102, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 103, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 104, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 105, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 106, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 107, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 108, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 109, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 110, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 111, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 112, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 113, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 114, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 115, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 116, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 117, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 118, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 119, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 120, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 121, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 122, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 123, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 124, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 125, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 126, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 0 + 127, 1);
    call write~int(2, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 128, 4);
    call write~int(174000000, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 132, 4);
    call write~int(862000000, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 136, 4);
    call write~int(62500, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 140, 4);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 144, 4);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 148, 4);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 152, 4);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 156, 4);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 160, 4);
    call write~int(1075523247, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 0 + 164, 4);
    call write~$Pointer$(#funAddr~poseidon_fe_release.base, #funAddr~poseidon_fe_release.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 176, 8);
    call write~$Pointer$(#funAddr~poseidon_fe_init.base, #funAddr~poseidon_fe_init.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 184, 8);
    call write~$Pointer$(#funAddr~poseidon_fe_sleep.base, #funAddr~poseidon_fe_sleep.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 216, 8);
    call write~$Pointer$(#funAddr~poseidon_set_fe.base, #funAddr~poseidon_set_fe.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 224, 8);
    call write~$Pointer$(#funAddr~poseidon_fe_get_tune_settings.base, #funAddr~poseidon_fe_get_tune_settings.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 232, 8);
    call write~$Pointer$(#funAddr~poseidon_get_fe.base, #funAddr~poseidon_get_fe.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 240, 8);
    call write~$Pointer$(#funAddr~poseidon_read_status.base, #funAddr~poseidon_read_status.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 248, 8);
    call write~$Pointer$(#funAddr~poseidon_read_ber.base, #funAddr~poseidon_read_ber.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 256, 8);
    call write~$Pointer$(#funAddr~poseidon_read_signal_strength.base, #funAddr~poseidon_read_signal_strength.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 264, 8);
    call write~$Pointer$(#funAddr~poseidon_read_snr.base, #funAddr~poseidon_read_snr.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 272, 8);
    call write~$Pointer$(#funAddr~poseidon_read_unc_blocks.base, #funAddr~poseidon_read_unc_blocks.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 352, 8);
    call write~$Pointer$(#funAddr~poseidon_ts_bus_ctrl.base, #funAddr~poseidon_ts_bus_ctrl.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 376, 8);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 0, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 1, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 2, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 3, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 4, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 5, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 6, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 7, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 8, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 9, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 10, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 11, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 12, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 13, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 14, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 15, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 16, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 17, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 18, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 19, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 20, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 21, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 22, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 23, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 24, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 25, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 26, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 27, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 28, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 29, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 30, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 31, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 32, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 33, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 34, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 35, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 36, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 37, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 38, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 39, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 40, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 41, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 42, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 43, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 44, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 45, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 46, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 47, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 48, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 49, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 50, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 51, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 52, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 53, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 54, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 55, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 56, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 57, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 58, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 59, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 60, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 61, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 62, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 63, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 64, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 65, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 66, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 67, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 68, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 69, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 70, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 71, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 72, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 73, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 74, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 75, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 76, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 77, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 78, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 79, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 80, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 81, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 82, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 83, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 84, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 85, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 86, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 87, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 88, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 89, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 90, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 91, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 92, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 93, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 94, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 95, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 96, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 97, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 98, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 99, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 100, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 101, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 102, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 103, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 104, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 105, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 106, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 107, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 108, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 109, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 110, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 111, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 112, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 113, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 114, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 115, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 116, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 117, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 118, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 119, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 120, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 121, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 122, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 123, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 124, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 125, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 126, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 0 + 127, 1);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 128, 4);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 132, 4);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 136, 4);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 140, 4);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 144, 4);
    call write~int(0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 0 + 148, 4);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 152, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 160, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 168, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 176, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 184, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 192, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 200, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 208, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 216, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 224, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 232, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 240, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 248, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 256, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 384 + 264, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 656 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 656 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 656 + 16, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 656 + 24, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 656 + 32, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 656 + 40, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 656 + 48, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 656 + 56, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 656 + 64, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 656 + 72, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 736, 8);
    call write~$Pointer$(0, 0, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset + 744, 8);
    ~poseidon_fm_ioctl_ops_group3.base, ~poseidon_fm_ioctl_ops_group3.offset := 0, 0;
    ~poseidon_fm_fops_group0.base, ~poseidon_fm_fops_group0.offset := 0, 0;
    ~poseidon_fm_ioctl_ops_group5.base, ~poseidon_fm_ioctl_ops_group5.offset := 0, 0;
    ~poseidon_fm_ioctl_ops_group2.base, ~poseidon_fm_ioctl_ops_group2.offset := 0, 0;
    ~poseidon_fm_ioctl_ops_group1.base, ~poseidon_fm_ioctl_ops_group1.offset := 0, 0;
    ~poseidon_fm_ioctl_ops_group4.base, ~poseidon_fm_ioctl_ops_group4.offset := 0, 0;
    ~poseidon_fm_ioctl_ops_group0.base, ~poseidon_fm_ioctl_ops_group0.offset := 0, 0;
    call ~#poseidon_fm_fops.base, ~#poseidon_fm_fops.offset := #Ultimate.alloc(72);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#poseidon_fm_fops.base, ~#poseidon_fm_fops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_fops.base, ~#poseidon_fm_fops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_fops.base, ~#poseidon_fm_fops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_fops.base, ~#poseidon_fm_fops.offset + 24, 8);
    call write~$Pointer$(#funAddr~video_ioctl2.base, #funAddr~video_ioctl2.offset, ~#poseidon_fm_fops.base, ~#poseidon_fm_fops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_fops.base, ~#poseidon_fm_fops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_fops.base, ~#poseidon_fm_fops.offset + 48, 8);
    call write~$Pointer$(#funAddr~poseidon_fm_open.base, #funAddr~poseidon_fm_open.offset, ~#poseidon_fm_fops.base, ~#poseidon_fm_fops.offset + 56, 8);
    call write~$Pointer$(#funAddr~poseidon_fm_close.base, #funAddr~poseidon_fm_close.offset, ~#poseidon_fm_fops.base, ~#poseidon_fm_fops.offset + 64, 8);
    call ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset := #Ultimate.alloc(784);
    call write~$Pointer$(#funAddr~vidioc_querycap___0.base, #funAddr~vidioc_querycap___0.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 368, 8);
    call write~$Pointer$(#funAddr~vidioc_g_input___0.base, #funAddr~vidioc_g_input___0.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 376, 8);
    call write~$Pointer$(#funAddr~vidioc_s_input___0.base, #funAddr~vidioc_s_input___0.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 408, 8);
    call write~$Pointer$(#funAddr~tlg_fm_vidioc_queryctrl.base, #funAddr~tlg_fm_vidioc_queryctrl.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 416, 8);
    call write~$Pointer$(#funAddr~tlg_fm_vidioc_g_ctrl.base, #funAddr~tlg_fm_vidioc_g_ctrl.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 424, 8);
    call write~$Pointer$(#funAddr~tlg_fm_vidioc_s_ctrl.base, #funAddr~tlg_fm_vidioc_s_ctrl.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 432, 8);
    call write~$Pointer$(#funAddr~tlg_fm_vidioc_g_exts_ctrl.base, #funAddr~tlg_fm_vidioc_g_exts_ctrl.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 440, 8);
    call write~$Pointer$(#funAddr~tlg_fm_vidioc_s_exts_ctrl.base, #funAddr~tlg_fm_vidioc_s_exts_ctrl.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 448, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 456, 8);
    call write~$Pointer$(#funAddr~tlg_fm_vidioc_querymenu.base, #funAddr~tlg_fm_vidioc_querymenu.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 464, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 472, 8);
    call write~$Pointer$(#funAddr~vidioc_g_audio___0.base, #funAddr~vidioc_g_audio___0.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 480, 8);
    call write~$Pointer$(#funAddr~vidioc_s_audio___0.base, #funAddr~vidioc_s_audio___0.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 488, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 496, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 504, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 512, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 520, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 528, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 536, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 544, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 552, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 560, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 568, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 576, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 584, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 592, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 600, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 608, 8);
    call write~$Pointer$(#funAddr~tlg_fm_vidioc_g_tuner.base, #funAddr~tlg_fm_vidioc_g_tuner.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 616, 8);
    call write~$Pointer$(#funAddr~vidioc_s_tuner___0.base, #funAddr~vidioc_s_tuner___0.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 624, 8);
    call write~$Pointer$(#funAddr~fm_get_freq.base, #funAddr~fm_get_freq.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 632, 8);
    call write~$Pointer$(#funAddr~fm_set_freq.base, #funAddr~fm_set_freq.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 640, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 648, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 656, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 664, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 672, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 680, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 688, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 696, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 704, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 712, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 720, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 728, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 736, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 744, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 752, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 760, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 768, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset + 776, 8);
    call ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset := #Ultimate.alloc(1237);
    call write~$Pointer$(~#poseidon_fm_fops.base, ~#poseidon_fm_fops.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 16 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 16 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 16 + 24, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 16 + 32, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 16 + 40, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 16 + 48, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 16 + 56 + 0 + 0, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 16 + 60, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 16 + 61, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 16 + 62, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 16 + 63, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 16 + 64, 1);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 81, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 89, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 0 + 0, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 4, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2849.__padding[0], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union2849.dep_map.key.base, #t~union2849.dep_map.key.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union2849.dep_map.class_cache.base[0], #t~union2849.dep_map.class_cache.offset[0], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union2849.dep_map.class_cache.base[1], #t~union2849.dep_map.class_cache.offset[1], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union2849.dep_map.name.base, #t~union2849.dep_map.name.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union2849.dep_map.cpu, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union2849.dep_map.ip, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 4 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 68 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 84, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 92, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 100, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 108 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 108 + 8 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 108 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 108 + 24, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 108 + 32, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 97 + 108 + 36, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 249, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 257, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 265, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 0 + 0, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 4, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 5, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 6, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 4, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2850.__padding[0], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union2850.dep_map.key.base, #t~union2850.dep_map.key.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union2850.dep_map.class_cache.base[0], #t~union2850.dep_map.class_cache.offset[0], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union2850.dep_map.class_cache.base[1], #t~union2850.dep_map.class_cache.offset[1], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union2850.dep_map.name.base, #t~union2850.dep_map.name.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union2850.dep_map.cpu, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union2850.dep_map.ip, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 7 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 71 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 71 + 8, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 0, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2851.__padding[0], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union2851.dep_map.key.base, #t~union2851.dep_map.key.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union2851.dep_map.class_cache.base[0], #t~union2851.dep_map.class_cache.offset[0], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union2851.dep_map.class_cache.base[1], #t~union2851.dep_map.class_cache.offset[1], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union2851.dep_map.name.base, #t~union2851.dep_map.name.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union2851.dep_map.cpu, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union2851.dep_map.ip, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 0 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 64 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 87 + 4 + 64 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 171, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 0 + 8, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 16, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 24, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 32, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 40, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 48, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 52, 4);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 56, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 0, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 1, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 2, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 3, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 4, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 5, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 6, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 7, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 8, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 9, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 10, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 11, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 12, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 13, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 14, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 64 + 15, 1);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 80 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 80 + 8 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 80 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 80 + 24, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 80 + 32, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 179 + 80 + 36, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 303, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 311 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 311 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 311 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 311 + 24, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 311 + 32 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 311 + 32 + 8 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 311 + 32 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 311 + 32 + 24, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 311 + 32 + 32, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 311 + 32 + 36, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2852.__padding[0], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union2852.dep_map.key.base, #t~union2852.dep_map.key.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union2852.dep_map.class_cache.base[0], #t~union2852.dep_map.class_cache.offset[0], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union2852.dep_map.class_cache.base[1], #t~union2852.dep_map.class_cache.offset[1], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union2852.dep_map.name.base, #t~union2852.dep_map.name.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union2852.dep_map.cpu, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union2852.dep_map.ip, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 0 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 64 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 387 + 64 + 8, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 467 + 0, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 471 + 0, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 475, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 476, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 477, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 478, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 479, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 480, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 481, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 482, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 483, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 484, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 485, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 486, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 490, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 494, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 498, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 502, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 510, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 518, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 273 + 526, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 807, 4);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 811, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 819, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 827, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 835 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 835 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 851, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 859 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 859 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 859 + 16, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 883, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 4, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2853.__padding[0], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union2853.dep_map.key.base, #t~union2853.dep_map.key.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union2853.dep_map.class_cache.base[0], #t~union2853.dep_map.class_cache.offset[0], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union2853.dep_map.class_cache.base[1], #t~union2853.dep_map.class_cache.offset[1], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union2853.dep_map.name.base, #t~union2853.dep_map.name.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union2853.dep_map.cpu, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union2853.dep_map.ip, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 887 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 951 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 951 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 967 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 967 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 967 + 8 + 8, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 967 + 24 + 0 + 0, 4);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 995, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 1003, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 8 + 1011, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1027, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1035, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1043, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1051, 8);
    call write~int(84, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 0, 1);
    call write~int(101, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 1, 1);
    call write~int(108, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 2, 1);
    call write~int(101, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 3, 1);
    call write~int(103, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 4, 1);
    call write~int(101, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 5, 1);
    call write~int(110, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 6, 1);
    call write~int(116, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 7, 1);
    call write~int(45, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 8, 1);
    call write~int(82, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 9, 1);
    call write~int(97, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 10, 1);
    call write~int(100, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 11, 1);
    call write~int(105, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 12, 1);
    call write~int(111, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 13, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 14, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 15, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 16, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 17, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 18, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 19, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 20, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 21, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 22, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 23, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 24, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 25, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 26, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 27, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 28, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 29, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 30, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1059 + 31, 1);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1091, 4);
    call write~int(-1, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1095, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1099, 2);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1101, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1109, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 4, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2854.__padding[0], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union2854.dep_map.key.base, #t~union2854.dep_map.key.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union2854.dep_map.class_cache.base[0], #t~union2854.dep_map.class_cache.offset[0], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union2854.dep_map.class_cache.base[1], #t~union2854.dep_map.class_cache.offset[1], ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union2854.dep_map.name.base, #t~union2854.dep_map.name.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union2854.dep_map.cpu, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union2854.dep_map.ip, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1113 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1177 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1177 + 8, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1193, 4);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1197, 8);
    call write~int(0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1205, 8);
    call write~$Pointer$(#funAddr~video_device_release.base, #funAddr~video_device_release.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1213, 8);
    call write~$Pointer$(~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1221, 8);
    call write~$Pointer$(0, 0, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset + 1229, 8);
    havoc #t~union2849.__padding, #t~union2849.dep_map.key.base, #t~union2849.dep_map.key.offset, #t~union2849.dep_map.class_cache.base, #t~union2849.dep_map.class_cache.offset, #t~union2849.dep_map.name.base, #t~union2849.dep_map.name.offset, #t~union2849.dep_map.cpu, #t~union2849.dep_map.ip;
    havoc #t~union2850.__padding, #t~union2850.dep_map.key.base, #t~union2850.dep_map.key.offset, #t~union2850.dep_map.class_cache.base, #t~union2850.dep_map.class_cache.offset, #t~union2850.dep_map.name.base, #t~union2850.dep_map.name.offset, #t~union2850.dep_map.cpu, #t~union2850.dep_map.ip;
    havoc #t~union2851.__padding, #t~union2851.dep_map.key.base, #t~union2851.dep_map.key.offset, #t~union2851.dep_map.class_cache.base, #t~union2851.dep_map.class_cache.offset, #t~union2851.dep_map.name.base, #t~union2851.dep_map.name.offset, #t~union2851.dep_map.cpu, #t~union2851.dep_map.ip;
    havoc #t~union2852.__padding, #t~union2852.dep_map.key.base, #t~union2852.dep_map.key.offset, #t~union2852.dep_map.class_cache.base, #t~union2852.dep_map.class_cache.offset, #t~union2852.dep_map.name.base, #t~union2852.dep_map.name.offset, #t~union2852.dep_map.cpu, #t~union2852.dep_map.ip;
    havoc #t~union2853.__padding, #t~union2853.dep_map.key.base, #t~union2853.dep_map.key.offset, #t~union2853.dep_map.class_cache.base, #t~union2853.dep_map.class_cache.offset, #t~union2853.dep_map.name.base, #t~union2853.dep_map.name.offset, #t~union2853.dep_map.cpu, #t~union2853.dep_map.ip;
    havoc #t~union2854.__padding, #t~union2854.dep_map.key.base, #t~union2854.dep_map.key.offset, #t~union2854.dep_map.class_cache.base, #t~union2854.dep_map.class_cache.offset, #t~union2854.dep_map.name.base, #t~union2854.dep_map.name.offset, #t~union2854.dep_map.cpu, #t~union2854.dep_map.ip;
    ~poseidon_driver_group1.base, ~poseidon_driver_group1.offset := 0, 0;
    call ~#id_table.base, ~#id_table.offset := #Ultimate.alloc(72);
    call write~int(899, ~#id_table.base, ~#id_table.offset + 0 + 0, 2);
    call write~int(6948, ~#id_table.base, ~#id_table.offset + 0 + 2, 2);
    call write~int(16385, ~#id_table.base, ~#id_table.offset + 0 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 12, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 0 + 13, 1);
    call write~int(1, ~#id_table.base, ~#id_table.offset + 0 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 16, 8);
    call write~int(899, ~#id_table.base, ~#id_table.offset + 24 + 0, 2);
    call write~int(6948, ~#id_table.base, ~#id_table.offset + 24 + 2, 2);
    call write~int(16385, ~#id_table.base, ~#id_table.offset + 24 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 12, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 24 + 13, 1);
    call write~int(1, ~#id_table.base, ~#id_table.offset + 24 + 14, 1);
    call write~int(1, ~#id_table.base, ~#id_table.offset + 24 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 24 + 16, 8);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 0, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 2, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 48 + 16, 8);
    call ~#pd_device_list.base, ~#pd_device_list.offset := #Ultimate.alloc(16);
    call write~$Pointer$(~#pd_device_list.base, ~#pd_device_list.offset, ~#pd_device_list.base, ~#pd_device_list.offset + 0, 8);
    call write~$Pointer$(~#pd_device_list.base, ~#pd_device_list.offset, ~#pd_device_list.base, ~#pd_device_list.offset + 8, 8);
    call ~#pm_notifer.base, ~#pm_notifer.offset := #Ultimate.alloc(20);
    call write~$Pointer$(#funAddr~pm_notifier_block.base, #funAddr~pm_notifier_block.offset, ~#pm_notifer.base, ~#pm_notifer.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#pm_notifer.base, ~#pm_notifer.offset + 8, 8);
    call write~int(0, ~#pm_notifer.base, ~#pm_notifer.offset + 16, 4);
    call ~#poseidon_driver.base, ~#poseidon_driver.offset := #Ultimate.alloc(264);
    call #t~nondet2815.base, #t~nondet2815.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet2815.base, #t~nondet2815.offset, ~#poseidon_driver.base, ~#poseidon_driver.offset + 0, 8);
    call write~$Pointer$(#funAddr~poseidon_probe.base, #funAddr~poseidon_probe.offset, ~#poseidon_driver.base, ~#poseidon_driver.offset + 8, 8);
    call write~$Pointer$(#funAddr~poseidon_disconnect.base, #funAddr~poseidon_disconnect.offset, ~#poseidon_driver.base, ~#poseidon_driver.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 24, 8);
    call write~$Pointer$(#funAddr~poseidon_suspend.base, #funAddr~poseidon_suspend.offset, ~#poseidon_driver.base, ~#poseidon_driver.offset + 32, 8);
    call write~$Pointer$(#funAddr~poseidon_resume.base, #funAddr~poseidon_resume.offset, ~#poseidon_driver.base, ~#poseidon_driver.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 64, 8);
    call write~$Pointer$(~#id_table.base, ~#id_table.offset, ~#poseidon_driver.base, ~#poseidon_driver.offset + 72, 8);
    call write~int(0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2855.__padding[0], ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 0, 1);
    call write~$Pointer$(#t~union2855.dep_map.key.base, #t~union2855.dep_map.key.offset, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 1 + 0, 8);
    call write~$Pointer$(#t~union2855.dep_map.class_cache.base[0], #t~union2855.dep_map.class_cache.offset[0], ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 1 + 8, 8);
    call write~$Pointer$(#t~union2855.dep_map.class_cache.base[1], #t~union2855.dep_map.class_cache.offset[1], ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 1 + 8 + 8, 8);
    call write~$Pointer$(#t~union2855.dep_map.name.base, #t~union2855.dep_map.name.offset, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 1 + 24, 8);
    call write~int(#t~union2855.dep_map.cpu, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 1 + 32, 4);
    call write~int(#t~union2855.dep_map.ip, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 0 + 0 + 0 + 1 + 36, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 64 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 80 + 64 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 0 + 16, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 0 + 24, 8);
    call write~int(0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 0 + 32, 1);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 0 + 33, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 0 + 41, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 0 + 49, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 0 + 57, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 0 + 65, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 0 + 73, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 0 + 81, 8);
    call write~$Pointer$(0, 0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 0 + 89, 8);
    call write~int(0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 160 + 97, 4);
    call write~int(0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 261, 1);
    call write~int(1, ~#poseidon_driver.base, ~#poseidon_driver.offset + 262, 1);
    call write~int(0, ~#poseidon_driver.base, ~#poseidon_driver.offset + 263, 1);
    havoc #t~nondet2815.base, #t~nondet2815.offset;
    havoc #t~union2855.__padding, #t~union2855.dep_map.key.base, #t~union2855.dep_map.key.offset, #t~union2855.dep_map.class_cache.base, #t~union2855.dep_map.class_cache.offset, #t~union2855.dep_map.name.base, #t~union2855.dep_map.name.offset, #t~union2855.dep_map.cpu, #t~union2855.dep_map.ip;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_8, ~ldv_state_variable_10, ~ldv_state_variable_11, ~ldv_state_variable_9, ~ref_cnt, ~debug_mode, ~usb_transfer_mode, ~POSEIDON_TVNORMS, ~POSEIDON_AUDIOMODS, ~POSEIDON_INPUTS, ~map_size, ~ldv_retval_1, ~ldv_retval_9, ~ldv_state_variable_7, ~ldv_retval_3, ~ldv_retval_2, ~ldv_state_variable_6, ~dvb_bandwidth, ~dvb_bandwidth_length, ~#adapter_nr.base, ~#adapter_nr.offset, ~ldv_retval_0, ~ldv_state_variable_5, ~ldv_state_variable_3, ~ldv_state_variable_4, ~preemphasis, ~ldv_retval_10, ~ldv_state_variable_0, ~ldv_state_variable_2, ~usb_counter, ~ldv_state_variable_1, ~firmware_name.base, ~firmware_name.offset, ~ldv_retval_5, ~ldv_retval_4, ~ldv_retval_6, ~ldv_retval_8, ~ldv_retval_7, ~ldv_mutex_lock_of_poseidon, ~ldv_mutex_mutex_of_device, ~ldv_mutex_pm_mutex, ~ldv_mutex_power_lock_of_snd_card, ~ldv_mutex_vb_lock_of_videobuf_queue, ~pd_video_ioctl_ops_group1.base, ~pd_video_ioctl_ops_group1.offset, ~pd_video_ioctl_ops_group2.base, ~pd_video_ioctl_ops_group2.offset, ~pd_video_ioctl_ops_group6.base, ~pd_video_ioctl_ops_group6.offset, ~pd_video_ioctl_ops_group0.base, ~pd_video_ioctl_ops_group0.offset, ~pd_video_ioctl_ops_group3.base, ~pd_video_ioctl_ops_group3.offset, ~pd_video_qops_group1.base, ~pd_video_qops_group1.offset, ~pd_video_ioctl_ops_group5.base, ~pd_video_ioctl_ops_group5.offset, ~pd_video_qops_group2.base, ~pd_video_qops_group2.offset, ~pd_video_fops_group0.base, ~pd_video_fops_group0.offset, ~pd_video_ioctl_ops_group4.base, ~pd_video_ioctl_ops_group4.offset, ~#poseidon_formats.base, ~#poseidon_formats.offset, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset, ~pd_audio_modes.tlg_audio_mode, ~pd_audio_modes.v4l2_audio_sub, ~pd_audio_modes.v4l2_audio_mode, ~#pd_inputs.base, ~#pd_inputs.offset, ~#controls.base, ~#controls.offset, ~video_to_audio_map.video_std, ~video_to_audio_map.audio_std, ~#pd_video_qops.base, ~#pd_video_qops.offset, ~#pd_video_fops.base, ~#pd_video_fops.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset, ~#pd_video_template.base, ~#pd_video_template.offset, ~pcm_capture_ops_group0.base, ~pcm_capture_ops_group0.offset, ~snd_pd_hw_capture.info, ~snd_pd_hw_capture.formats, ~snd_pd_hw_capture.rates, ~snd_pd_hw_capture.rate_min, ~snd_pd_hw_capture.rate_max, ~snd_pd_hw_capture.channels_min, ~snd_pd_hw_capture.channels_max, ~snd_pd_hw_capture.buffer_bytes_max, ~snd_pd_hw_capture.period_bytes_min, ~snd_pd_hw_capture.period_bytes_max, ~snd_pd_hw_capture.periods_min, ~snd_pd_hw_capture.periods_max, ~snd_pd_hw_capture.fifo_size, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset, ~poseidon_frontend_ops_group1.base, ~poseidon_frontend_ops_group1.offset, ~poseidon_frontend_ops_group0.base, ~poseidon_frontend_ops_group0.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset, ~poseidon_fm_ioctl_ops_group3.base, ~poseidon_fm_ioctl_ops_group3.offset, ~poseidon_fm_fops_group0.base, ~poseidon_fm_fops_group0.offset, ~poseidon_fm_ioctl_ops_group5.base, ~poseidon_fm_ioctl_ops_group5.offset, ~poseidon_fm_ioctl_ops_group2.base, ~poseidon_fm_ioctl_ops_group2.offset, ~poseidon_fm_ioctl_ops_group1.base, ~poseidon_fm_ioctl_ops_group1.offset, ~poseidon_fm_ioctl_ops_group4.base, ~poseidon_fm_ioctl_ops_group4.offset, ~poseidon_fm_ioctl_ops_group0.base, ~poseidon_fm_ioctl_ops_group0.offset, ~#poseidon_fm_fops.base, ~#poseidon_fm_fops.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset, ~poseidon_driver_group1.base, ~poseidon_driver_group1.offset, ~#id_table.base, ~#id_table.offset, ~#pd_device_list.base, ~#pd_device_list.offset, ~#pm_notifer.base, ~#pm_notifer.offset, ~#poseidon_driver.base, ~#poseidon_driver.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_error() returns (){
  loc13:
    assume !false;
    goto loc14;
  loc14:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation ldv_usb_register_driver_156(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2.base : int, #in~ldv_func_arg2.offset : int, #in~ldv_func_arg3.base : int, #in~ldv_func_arg3.offset : int) returns (#res : int){
    var #t~ret2842 : int;
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;
    var ~ldv_func_arg2.base : int, ~ldv_func_arg2.offset : int;
    var ~ldv_func_arg3.base : int, ~ldv_func_arg3.offset : int;
    var ~ldv_func_res~1714 : ~ldv_func_ret_type___0;
    var ~tmp~1714 : int;

  loc15:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    ~ldv_func_arg2.base, ~ldv_func_arg2.offset := #in~ldv_func_arg2.base, #in~ldv_func_arg2.offset;
    ~ldv_func_arg3.base, ~ldv_func_arg3.offset := #in~ldv_func_arg3.base, #in~ldv_func_arg3.offset;
    havoc ~ldv_func_res~1714;
    havoc ~tmp~1714;
    call #t~ret2842 := usb_register_driver(~ldv_func_arg1.base, ~ldv_func_arg1.offset, ~ldv_func_arg2.base, ~ldv_func_arg2.offset, ~ldv_func_arg3.base, ~ldv_func_arg3.offset);
    assume -2147483648 <= #t~ret2842 && #t~ret2842 <= 2147483647;
    ~tmp~1714 := #t~ret2842;
    havoc #t~ret2842;
    ~ldv_func_res~1714 := ~tmp~1714;
    ~ldv_state_variable_1 := 1;
    ~usb_counter := 0;
    call ldv_usb_driver_1();
    #res := ~ldv_func_res~1714;
    assume true;
    return;
}

procedure ldv_usb_register_driver_156(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2.base : int, #in~ldv_func_arg2.offset : int, #in~ldv_func_arg3.base : int, #in~ldv_func_arg3.offset : int) returns (#res : int);
modifies ~ldv_state_variable_1, ~usb_counter, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~poseidon_driver_group1.base, ~poseidon_driver_group1.offset;

implementation usb_register(#in~driver.base : int, #in~driver.offset : int) returns (#res : int){
    var #t~nondet2461.base : int, #t~nondet2461.offset : int;
    var #t~ret2462 : int;
    var ~driver.base : int, ~driver.offset : int;
    var ~tmp~1495 : int;

  loc16:
    ~driver.base, ~driver.offset := #in~driver.base, #in~driver.offset;
    havoc ~tmp~1495;
    call #t~nondet2461.base, #t~nondet2461.offset := #Ultimate.alloc(9);
    call #t~ret2462 := ldv_usb_register_driver_156(~driver.base, ~driver.offset, ~#__this_module.base, ~#__this_module.offset, #t~nondet2461.base, #t~nondet2461.offset);
    assume -2147483648 <= #t~ret2462 && #t~ret2462 <= 2147483647;
    ~tmp~1495 := #t~ret2462;
    havoc #t~nondet2461.base, #t~nondet2461.offset;
    havoc #t~ret2462;
    #res := ~tmp~1495;
    assume true;
    return;
}

procedure usb_register(#in~driver.base : int, #in~driver.offset : int) returns (#res : int);
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~poseidon_driver_group1.base, ~poseidon_driver_group1.offset, ~ldv_state_variable_1, ~usb_counter;

implementation ldv_usb_driver_1() returns (){
    var #t~ret2821.base : int, #t~ret2821.offset : int;
    var ~tmp~1650.base : int, ~tmp~1650.offset : int;

  loc17:
    havoc ~tmp~1650.base, ~tmp~1650.offset;
    call #t~ret2821.base, #t~ret2821.offset := ldv_zalloc(1232);
    ~tmp~1650.base, ~tmp~1650.offset := #t~ret2821.base, #t~ret2821.offset;
    havoc #t~ret2821.base, #t~ret2821.offset;
    ~poseidon_driver_group1.base, ~poseidon_driver_group1.offset := ~tmp~1650.base, ~tmp~1650.offset;
    assume true;
    return;
}

procedure ldv_usb_driver_1() returns ();
modifies ~poseidon_driver_group1.base, ~poseidon_driver_group1.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~nondet51 : int;
    var #t~malloc52.base : int, #t~malloc52.offset : int;
    var ~size : int;
    var ~p~84.base : int, ~p~84.offset : int;
    var ~tmp~84.base : int, ~tmp~84.offset : int;
    var ~tmp___0~84 : int;

  loc18:
    ~size := #in~size;
    havoc ~p~84.base, ~p~84.offset;
    havoc ~tmp~84.base, ~tmp~84.offset;
    havoc ~tmp___0~84;
    assume -2147483648 <= #t~nondet51 && #t~nondet51 <= 2147483647;
    ~tmp___0~84 := #t~nondet51;
    havoc #t~nondet51;
    assume ~tmp___0~84 != 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ldv_initialize_snd_pcm_ops_7() returns (){
    var #t~ret1903.base : int, #t~ret1903.offset : int;
    var ~tmp~891.base : int, ~tmp~891.offset : int;

  loc19:
    havoc ~tmp~891.base, ~tmp~891.offset;
    call #t~ret1903.base, #t~ret1903.offset := ldv_zalloc(504);
    ~tmp~891.base, ~tmp~891.offset := #t~ret1903.base, #t~ret1903.offset;
    havoc #t~ret1903.base, #t~ret1903.offset;
    ~pcm_capture_ops_group0.base, ~pcm_capture_ops_group0.offset := ~tmp~891.base, ~tmp~891.offset;
    assume true;
    return;
}

procedure ldv_initialize_snd_pcm_ops_7() returns ();
modifies ~pcm_capture_ops_group0.base, ~pcm_capture_ops_group0.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation device_unlock(#in~dev.base : int, #in~dev.offset : int) returns (){
    var ~dev.base : int, ~dev.offset : int;

  loc20:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    call ldv_mutex_unlock_155(~dev.base, ~dev.offset + 97);
    return;
}

procedure device_unlock(#in~dev.base : int, #in~dev.offset : int) returns ();
modifies ~ldv_mutex_mutex_of_device;

implementation ULTIMATE.start() returns (){
    var #t~ret2856 : int;

  loc21:
    call ULTIMATE.init();
    call #t~ret2856 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_8, ~ldv_state_variable_10, ~ldv_state_variable_11, ~ldv_state_variable_9, ~ref_cnt, ~debug_mode, ~usb_transfer_mode, ~POSEIDON_TVNORMS, ~POSEIDON_AUDIOMODS, ~POSEIDON_INPUTS, ~map_size, ~ldv_retval_1, ~ldv_retval_9, ~ldv_state_variable_7, ~ldv_retval_3, ~ldv_retval_2, ~ldv_state_variable_6, ~dvb_bandwidth, ~dvb_bandwidth_length, ~#adapter_nr.base, ~#adapter_nr.offset, ~ldv_retval_0, ~ldv_state_variable_5, ~ldv_state_variable_3, ~ldv_state_variable_4, ~preemphasis, ~ldv_retval_10, ~ldv_state_variable_0, ~ldv_state_variable_2, ~usb_counter, ~ldv_state_variable_1, ~firmware_name.base, ~firmware_name.offset, ~ldv_retval_5, ~ldv_retval_4, ~ldv_retval_6, ~ldv_retval_8, ~ldv_retval_7, ~ldv_mutex_lock_of_poseidon, ~ldv_mutex_mutex_of_device, ~ldv_mutex_pm_mutex, ~ldv_mutex_power_lock_of_snd_card, ~ldv_mutex_vb_lock_of_videobuf_queue, ~pd_video_ioctl_ops_group1.base, ~pd_video_ioctl_ops_group1.offset, ~pd_video_ioctl_ops_group2.base, ~pd_video_ioctl_ops_group2.offset, ~pd_video_ioctl_ops_group6.base, ~pd_video_ioctl_ops_group6.offset, ~pd_video_ioctl_ops_group0.base, ~pd_video_ioctl_ops_group0.offset, ~pd_video_ioctl_ops_group3.base, ~pd_video_ioctl_ops_group3.offset, ~pd_video_qops_group1.base, ~pd_video_qops_group1.offset, ~pd_video_ioctl_ops_group5.base, ~pd_video_ioctl_ops_group5.offset, ~pd_video_qops_group2.base, ~pd_video_qops_group2.offset, ~pd_video_fops_group0.base, ~pd_video_fops_group0.offset, ~pd_video_ioctl_ops_group4.base, ~pd_video_ioctl_ops_group4.offset, ~#poseidon_formats.base, ~#poseidon_formats.offset, ~#poseidon_tvnorms.base, ~#poseidon_tvnorms.offset, ~pd_audio_modes.tlg_audio_mode, ~pd_audio_modes.v4l2_audio_sub, ~pd_audio_modes.v4l2_audio_mode, ~#pd_inputs.base, ~#pd_inputs.offset, ~#controls.base, ~#controls.offset, ~video_to_audio_map.video_std, ~video_to_audio_map.audio_std, ~#pd_video_qops.base, ~#pd_video_qops.offset, ~#pd_video_fops.base, ~#pd_video_fops.offset, ~#pd_video_ioctl_ops.base, ~#pd_video_ioctl_ops.offset, ~#pd_video_template.base, ~#pd_video_template.offset, ~pcm_capture_ops_group0.base, ~pcm_capture_ops_group0.offset, ~snd_pd_hw_capture.info, ~snd_pd_hw_capture.formats, ~snd_pd_hw_capture.rates, ~snd_pd_hw_capture.rate_min, ~snd_pd_hw_capture.rate_max, ~snd_pd_hw_capture.channels_min, ~snd_pd_hw_capture.channels_max, ~snd_pd_hw_capture.buffer_bytes_max, ~snd_pd_hw_capture.period_bytes_min, ~snd_pd_hw_capture.period_bytes_max, ~snd_pd_hw_capture.periods_min, ~snd_pd_hw_capture.periods_max, ~snd_pd_hw_capture.fifo_size, ~#pcm_capture_ops.base, ~#pcm_capture_ops.offset, ~poseidon_frontend_ops_group1.base, ~poseidon_frontend_ops_group1.offset, ~poseidon_frontend_ops_group0.base, ~poseidon_frontend_ops_group0.offset, ~#poseidon_frontend_ops.base, ~#poseidon_frontend_ops.offset, ~poseidon_fm_ioctl_ops_group3.base, ~poseidon_fm_ioctl_ops_group3.offset, ~poseidon_fm_fops_group0.base, ~poseidon_fm_fops_group0.offset, ~poseidon_fm_ioctl_ops_group5.base, ~poseidon_fm_ioctl_ops_group5.offset, ~poseidon_fm_ioctl_ops_group2.base, ~poseidon_fm_ioctl_ops_group2.offset, ~poseidon_fm_ioctl_ops_group1.base, ~poseidon_fm_ioctl_ops_group1.offset, ~poseidon_fm_ioctl_ops_group4.base, ~poseidon_fm_ioctl_ops_group4.offset, ~poseidon_fm_ioctl_ops_group0.base, ~poseidon_fm_ioctl_ops_group0.offset, ~#poseidon_fm_fops.base, ~#poseidon_fm_fops.offset, ~#poseidon_fm_ioctl_ops.base, ~#poseidon_fm_ioctl_ops.offset, ~#poseidon_fm_template.base, ~#poseidon_fm_template.offset, ~poseidon_driver_group1.base, ~poseidon_driver_group1.offset, ~#id_table.base, ~#id_table.offset, ~#pd_device_list.base, ~#pd_device_list.offset, ~#pm_notifer.base, ~#pm_notifer.offset, ~#poseidon_driver.base, ~#poseidon_driver.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_state_variable_6, ~ldv_state_variable_11, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_9, ~ldv_state_variable_2, ~ldv_state_variable_8, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_10, ~ldv_state_variable_5, ~ldv_retval_7, ~ldv_retval_6, ~ldv_retval_5, ~ldv_retval_4, ~ldv_retval_8;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_lock_of_poseidon, ~ldv_mutex_mutex_of_device, ~ldv_mutex_pm_mutex, ~ldv_mutex_power_lock_of_snd_card, ~ldv_mutex_vb_lock_of_videobuf_queue, ~pd_video_qops_group1.base, ~pd_video_qops_group1.offset, ~pd_video_qops_group2.base, ~pd_video_qops_group2.offset, ~pd_video_fops_group0.base, ~pd_video_fops_group0.offset, ~pd_video_ioctl_ops_group3.base, ~pd_video_ioctl_ops_group3.offset, ~pd_video_ioctl_ops_group2.base, ~pd_video_ioctl_ops_group2.offset, ~pd_video_ioctl_ops_group1.base, ~pd_video_ioctl_ops_group1.offset, ~pd_video_ioctl_ops_group0.base, ~pd_video_ioctl_ops_group0.offset, ~pd_video_ioctl_ops_group4.base, ~pd_video_ioctl_ops_group4.offset, ~pd_video_ioctl_ops_group5.base, ~pd_video_ioctl_ops_group5.offset, ~pd_video_ioctl_ops_group6.base, ~pd_video_ioctl_ops_group6.offset, ~ldv_state_variable_8, ~ref_cnt, ~pcm_capture_ops_group0.base, ~pcm_capture_ops_group0.offset, ~poseidon_frontend_ops_group1.base, ~poseidon_frontend_ops_group1.offset, ~poseidon_frontend_ops_group0.base, ~poseidon_frontend_ops_group0.offset, ~poseidon_fm_ioctl_ops_group2.base, ~poseidon_fm_ioctl_ops_group2.offset, ~poseidon_fm_ioctl_ops_group1.base, ~poseidon_fm_ioctl_ops_group1.offset, ~poseidon_fm_ioctl_ops_group0.base, ~poseidon_fm_ioctl_ops_group0.offset, ~poseidon_fm_ioctl_ops_group4.base, ~poseidon_fm_ioctl_ops_group4.offset, ~poseidon_fm_ioctl_ops_group3.base, ~poseidon_fm_ioctl_ops_group3.offset, ~poseidon_fm_ioctl_ops_group5.base, ~poseidon_fm_ioctl_ops_group5.offset, ~poseidon_fm_fops_group0.base, ~poseidon_fm_fops_group0.offset, ~ldv_state_variable_3, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_retval_3, ~ldv_retval_2, ~ldv_state_variable_9, ~ldv_state_variable_4, ~poseidon_driver_group1.base, ~poseidon_driver_group1.offset, ~usb_counter, ~ldv_state_variable_11, ~ldv_retval_1, ~ldv_state_variable_10, ~ldv_retval_9, ~ldv_state_variable_6, ~ldv_retval_0, ~ldv_retval_10, ~ldv_state_variable_5, ~ldv_state_variable_2, ~ldv_state_variable_0, ~ldv_retval_7, ~ldv_retval_6, ~ldv_retval_5, ~ldv_retval_4, ~ldv_retval_8;

implementation ldv_videobuf_queue_ops_11() returns (){
    var #t~ret1615.base : int, #t~ret1615.offset : int;
    var #t~ret1616.base : int, #t~ret1616.offset : int;
    var ~tmp~621.base : int, ~tmp~621.offset : int;
    var ~tmp___0~621.base : int, ~tmp___0~621.offset : int;

  loc22:
    havoc ~tmp~621.base, ~tmp~621.offset;
    havoc ~tmp___0~621.base, ~tmp___0~621.offset;
    call #t~ret1615.base, #t~ret1615.offset := ldv_zalloc(624);
    ~tmp~621.base, ~tmp~621.offset := #t~ret1615.base, #t~ret1615.offset;
    havoc #t~ret1615.base, #t~ret1615.offset;
    ~pd_video_qops_group1.base, ~pd_video_qops_group1.offset := ~tmp~621.base, ~tmp~621.offset;
    call #t~ret1616.base, #t~ret1616.offset := ldv_zalloc(248);
    ~tmp___0~621.base, ~tmp___0~621.offset := #t~ret1616.base, #t~ret1616.offset;
    havoc #t~ret1616.base, #t~ret1616.offset;
    ~pd_video_qops_group2.base, ~pd_video_qops_group2.offset := ~tmp___0~621.base, ~tmp___0~621.offset;
    assume true;
    return;
}

procedure ldv_videobuf_queue_ops_11() returns ();
modifies ~pd_video_qops_group1.base, ~pd_video_qops_group1.offset, ~pd_video_qops_group2.base, ~pd_video_qops_group2.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ldv_initialize() returns (){
  loc23:
    ~ldv_mutex_lock_of_poseidon := 1;
    ~ldv_mutex_mutex_of_device := 1;
    ~ldv_mutex_pm_mutex := 1;
    ~ldv_mutex_power_lock_of_snd_card := 1;
    ~ldv_mutex_vb_lock_of_videobuf_queue := 1;
    assume true;
    return;
}

procedure ldv_initialize() returns ();
modifies ~ldv_mutex_lock_of_poseidon, ~ldv_mutex_mutex_of_device, ~ldv_mutex_pm_mutex, ~ldv_mutex_power_lock_of_snd_card, ~ldv_mutex_vb_lock_of_videobuf_queue;

implementation ldv_initialize_dvb_frontend_ops_6() returns (){
    var #t~ret2153.base : int, #t~ret2153.offset : int;
    var #t~ret2154.base : int, #t~ret2154.offset : int;
    var ~tmp~1150.base : int, ~tmp~1150.offset : int;
    var ~tmp___0~1150.base : int, ~tmp___0~1150.offset : int;

  loc24:
    havoc ~tmp~1150.base, ~tmp~1150.offset;
    havoc ~tmp___0~1150.base, ~tmp___0~1150.offset;
    call #t~ret2153.base, #t~ret2153.offset := ldv_zalloc(36);
    ~tmp~1150.base, ~tmp~1150.offset := #t~ret2153.base, #t~ret2153.offset;
    havoc #t~ret2153.base, #t~ret2153.offset;
    ~poseidon_frontend_ops_group1.base, ~poseidon_frontend_ops_group1.offset := ~tmp~1150.base, ~tmp~1150.offset;
    call #t~ret2154.base, #t~ret2154.offset := ldv_zalloc(952);
    ~tmp___0~1150.base, ~tmp___0~1150.offset := #t~ret2154.base, #t~ret2154.offset;
    havoc #t~ret2154.base, #t~ret2154.offset;
    ~poseidon_frontend_ops_group0.base, ~poseidon_frontend_ops_group0.offset := ~tmp___0~1150.base, ~tmp___0~1150.offset;
    assume true;
    return;
}

procedure ldv_initialize_dvb_frontend_ops_6() returns ();
modifies ~poseidon_frontend_ops_group1.base, ~poseidon_frontend_ops_group1.offset, ~poseidon_frontend_ops_group0.base, ~poseidon_frontend_ops_group0.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ldv_mutex_unlock_mutex_of_device(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc25:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    assume !(~ldv_mutex_mutex_of_device == 2);
    call ldv_error();
    return;
}

procedure ldv_mutex_unlock_mutex_of_device(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ~ldv_mutex_mutex_of_device;

procedure videobuf_streamoff(#in~113.base : int, #in~113.offset : int) returns (#res : int);
modifies ;

procedure usb_submit_urb(#in~74.base : int, #in~74.offset : int, #in~75 : int) returns (#res : int);
modifies ;

procedure strncmp(#in~12.base : int, #in~12.offset : int, #in~13.base : int, #in~13.offset : int, #in~14 : int) returns (#res : int);
modifies ;

procedure __xchg_wrong_size() returns ();
modifies ;

procedure videobuf_reqbufs(#in~103.base : int, #in~103.offset : int, #in~104.base : int, #in~104.offset : int) returns (#res : int);
modifies ;

procedure dvb_dmxdev_init(#in~1946.base : int, #in~1946.offset : int, #in~1947.base : int, #in~1947.offset : int) returns (#res : int);
modifies ;

procedure usb_put_dev(#in~2456.base : int, #in~2456.offset : int) returns ();
modifies ;

procedure usb_get_dev(#in~2455.base : int, #in~2455.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ldv_reset_resume_1() returns (#res : int);
modifies ;

procedure usb_autopm_get_interface(#in~57.base : int, #in~57.offset : int) returns (#res : int);
modifies ;

procedure v4l2_device_unregister(#in~2481.base : int, #in~2481.offset : int) returns ();
modifies ;

procedure snd_pcm_set_ops(#in~1742.base : int, #in~1742.offset : int, #in~1743 : int, #in~1744.base : int, #in~1744.offset : int) returns ();
modifies ;

procedure usb_free_coherent(#in~81.base : int, #in~81.offset : int, #in~82 : int, #in~83.base : int, #in~83.offset : int, #in~84 : int) returns ();
modifies ;

procedure pm_runtime_set_autosuspend_delay(#in~2449.base : int, #in~2449.offset : int, #in~2450 : int) returns ();
modifies ;

procedure videobuf_to_vmalloc(#in~136.base : int, #in~136.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure strlcpy(#in~2194.base : int, #in~2194.offset : int, #in~2195.base : int, #in~2195.offset : int, #in~2196 : int) returns (#res : int);
modifies ;

procedure dvb_dmx_swfilter(#in~1943.base : int, #in~1943.offset : int, #in~1944.base : int, #in~1944.offset : int, #in~1945 : int) returns ();
modifies ;

procedure video_devdata(#in~98.base : int, #in~98.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure videobuf_dqbuf(#in~109.base : int, #in~109.offset : int, #in~110.base : int, #in~110.offset : int, #in~111 : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_size_t() returns (#res : int);
modifies ;

procedure ldv_probe_3() returns (#res : int);
modifies ;

procedure ldv_probe_8() returns (#res : int);
modifies ;

procedure dvb_register_adapter(#in~1933.base : int, #in~1933.offset : int, #in~1934.base : int, #in~1934.offset : int, #in~1935.base : int, #in~1935.offset : int, #in~1936.base : int, #in~1936.offset : int, #in~1937.base : int, #in~1937.offset : int) returns (#res : int);
modifies ;

procedure dev_get_drvdata(#in~53.base : int, #in~53.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __raw_spin_lock_init(#in~29.base : int, #in~29.offset : int, #in~30.base : int, #in~30.offset : int, #in~31.base : int, #in~31.offset : int) returns ();
modifies ;

procedure video_ioctl2(#in~89.base : int, #in~89.offset : int, #in~90 : int, #in~91 : int) returns (#res : int);
modifies ;

procedure videobuf_qbuf(#in~107.base : int, #in~107.offset : int, #in~108.base : int, #in~108.offset : int) returns (#res : int);
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure kref_get(#in~44.base : int, #in~44.offset : int) returns ();
modifies ;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure usb_autopm_put_interface(#in~58.base : int, #in~58.offset : int) returns ();
modifies ;

procedure snd_pcm_hw_constraint_integer(#in~1740.base : int, #in~1740.offset : int, #in~1741 : int) returns (#res : int);
modifies ;

procedure usb_kill_urb(#in~76.base : int, #in~76.offset : int) returns ();
modifies ;

procedure dvb_unregister_frontend(#in~1941.base : int, #in~1941.offset : int) returns (#res : int);
modifies ;

procedure v4l2_ctrl_query_menu(#in~2202.base : int, #in~2202.offset : int, #in~2203.base : int, #in~2203.offset : int, #in~2204.base : int, #in~2204.offset : int) returns (#res : int);
modifies ;

procedure vfree(#in~1725.base : int, #in~1725.offset : int) returns ();
modifies ;

procedure kref_put(#in~45.base : int, #in~45.offset : int, #in~46.base : int, #in~46.offset : int) returns (#res : int);
modifies ;

procedure video_unregister_device(#in~95.base : int, #in~95.offset : int) returns ();
modifies ;

procedure usb_lock_device_for_reset(#in~2457.base : int, #in~2457.offset : int, #in~2458.base : int, #in~2458.offset : int) returns (#res : int);
modifies ;

procedure v4l2_ctrl_query_fill(#in~2197.base : int, #in~2197.offset : int, #in~2198 : int, #in~2199 : int, #in~2200 : int, #in~2201 : int) returns (#res : int);
modifies ;

procedure dvb_register_frontend(#in~1939.base : int, #in~1939.offset : int, #in~1940.base : int, #in~1940.offset : int) returns (#res : int);
modifies ;

procedure __list_add(#in~17.base : int, #in~17.offset : int, #in~18.base : int, #in~18.offset : int, #in~19.base : int, #in~19.offset : int) returns ();
modifies ;

procedure __VERIFIER_assume(#in~expression : int) returns ();
modifies ;

procedure __const_udelay(#in~2435 : int) returns ();
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];

procedure __bad_percpu_size() returns ();
modifies ;

procedure register_pm_notifier(#in~2438.base : int, #in~2438.offset : int) returns (#res : int);
modifies ;

procedure usb_control_msg(#in~2464.base : int, #in~2464.offset : int, #in~2465 : int, #in~2466 : int, #in~2467 : int, #in~2468 : int, #in~2469 : int, #in~2470.base : int, #in~2470.offset : int, #in~2471 : int, #in~2472 : int) returns (#res : int);
modifies ;

procedure usb_register_driver(#in~62.base : int, #in~62.offset : int, #in~63.base : int, #in~63.offset : int, #in~64.base : int, #in~64.offset : int) returns (#res : int);
modifies ;

procedure usb_free_urb(#in~73.base : int, #in~73.offset : int) returns ();
modifies ;

procedure memset(#in~7.base : int, #in~7.offset : int, #in~8 : int, #in~9 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure videobuf_streamon(#in~112.base : int, #in~112.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_ulong() returns (#res : int);
modifies ;

procedure __init_work(#in~40.base : int, #in~40.offset : int, #in~41 : int) returns ();
modifies ;

procedure videobuf_iolock(#in~100.base : int, #in~100.offset : int, #in~101.base : int, #in~101.offset : int, #in~102.base : int, #in~102.offset : int) returns (#res : int);
modifies ;

procedure request_firmware(#in~2440.base : int, #in~2440.offset : int, #in~2441.base : int, #in~2441.offset : int, #in~2442.base : int, #in~2442.offset : int) returns (#res : int);
modifies ;

procedure schedule_timeout(#in~56 : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock(#in~32.base : int, #in~32.offset : int) returns ();
modifies ;

procedure _raw_read_unlock(#in~1723.base : int, #in~1723.offset : int) returns ();
modifies ;

procedure usb_enable_autosuspend(#in~2460.base : int, #in~2460.offset : int) returns ();
modifies ;

procedure _raw_read_lock(#in~1722.base : int, #in~1722.offset : int) returns ();
modifies ;

procedure video_device_alloc() returns (#res.base : int, #res.offset : int);
modifies ;

procedure msleep(#in~38 : int) returns ();
modifies ;

procedure ldv_setup_6() returns (#res : int);
modifies ;

procedure usb_set_interface(#in~85.base : int, #in~85.offset : int, #in~86 : int, #in~87 : int) returns (#res : int);
modifies ;

procedure snd_pcm_period_elapsed(#in~1748.base : int, #in~1748.offset : int) returns ();
modifies ;

procedure dvb_unregister_adapter(#in~1938.base : int, #in~1938.offset : int) returns (#res : int);
modifies ;

procedure video_device_release(#in~96.base : int, #in~96.offset : int) returns ();
modifies ;

procedure videobuf_mmap_mapper(#in~125.base : int, #in~125.offset : int, #in~126.base : int, #in~126.offset : int) returns (#res : int);
modifies ;

procedure unregister_pm_notifier(#in~2439.base : int, #in~2439.offset : int) returns (#res : int);
modifies ;

procedure mutex_unlock(#in~27.base : int, #in~27.offset : int) returns ();
modifies ;

procedure __memcpy(#in~1927.base : int, #in~1927.offset : int, #in~1928.base : int, #in~1928.offset : int, #in~1929 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure videobuf_mmap_free(#in~124.base : int, #in~124.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_uint() returns (#res : int);
modifies ;

procedure usb_put_intf(#in~2453.base : int, #in~2453.offset : int) returns ();
modifies ;

procedure mutex_lock(#in~28.base : int, #in~28.offset : int) returns ();
modifies ;

procedure snd_pcm_new(#in~1734.base : int, #in~1734.offset : int, #in~1735.base : int, #in~1735.offset : int, #in~1736 : int, #in~1737 : int, #in~1738 : int, #in~1739.base : int, #in~1739.offset : int) returns (#res : int);
modifies ;

procedure __kmalloc(#in~47 : int, #in~48 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure videobuf_read_stream(#in~115.base : int, #in~115.offset : int, #in~116.base : int, #in~116.offset : int, #in~117 : int, #in~118.base : int, #in~118.offset : int, #in~119 : int, #in~120 : int) returns (#res : int);
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure __list_del_entry(#in~21.base : int, #in~21.offset : int) returns ();
modifies ;

procedure _raw_spin_unlock(#in~33.base : int, #in~33.offset : int) returns ();
modifies ;

procedure dev_set_drvdata(#in~54.base : int, #in~54.offset : int, #in~55.base : int, #in~55.offset : int) returns ();
modifies ;

procedure printk(#in~2.base : int, #in~2.offset : int) returns (#res : int);
modifies ;

procedure calloc(#in~nmemb : int, #in~size : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure do_gettimeofday(#in~39.base : int, #in~39.offset : int) returns ();
modifies ;

procedure __mutex_init(#in~2432.base : int, #in~2432.offset : int, #in~2433.base : int, #in~2433.offset : int, #in~2434.base : int, #in~2434.offset : int) returns ();
modifies ;

procedure vmalloc_to_page(#in~1733.base : int, #in~1733.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure videobuf_stop(#in~114.base : int, #in~114.offset : int) returns ();
modifies ;

procedure lockdep_init_map(#in~23.base : int, #in~23.offset : int, #in~24.base : int, #in~24.offset : int, #in~25.base : int, #in~25.offset : int, #in~26 : int) returns ();
modifies ;

procedure release_firmware(#in~2443.base : int, #in~2443.offset : int) returns ();
modifies ;

procedure usb_alloc_urb(#in~71 : int, #in~72 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure jiffies_to_msecs(#in~1932 : int) returns (#res : int);
modifies ;

procedure strcpy(#in~10.base : int, #in~10.offset : int, #in~11.base : int, #in~11.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure videobuf_vmalloc_free(#in~137.base : int, #in~137.offset : int) returns ();
modifies ;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure videobuf_poll_stream(#in~121.base : int, #in~121.offset : int, #in~122.base : int, #in~122.offset : int, #in~123.base : int, #in~123.offset : int) returns (#res : int);
modifies ;

procedure usb_bulk_msg(#in~2473.base : int, #in~2473.offset : int, #in~2474 : int, #in~2475.base : int, #in~2475.offset : int, #in~2476 : int, #in~2477.base : int, #in~2477.offset : int, #in~2478 : int) returns (#res : int);
modifies ;

procedure video_register_device(#in~92.base : int, #in~92.offset : int, #in~93 : int, #in~94 : int) returns (#res : int);
modifies ;

procedure usb_deregister(#in~2463.base : int, #in~2463.offset : int) returns ();
modifies ;

procedure videobuf_querybuf(#in~105.base : int, #in~105.offset : int, #in~106.base : int, #in~106.offset : int) returns (#res : int);
modifies ;

procedure v4l2_device_register(#in~2479.base : int, #in~2479.offset : int, #in~2480.base : int, #in~2480.offset : int) returns (#res : int);
modifies ;

procedure kfree(#in~43.base : int, #in~43.offset : int) returns ();
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];

procedure __VERIFIER_error() returns ();
modifies ;

procedure snd_card_register(#in~1732.base : int, #in~1732.offset : int) returns (#res : int);
modifies ;

procedure vmalloc(#in~1724 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __builtin_prefetch(#in~2428.base : int, #in~2428.offset : int) returns ();
modifies ;

procedure kref_init(#in~2436.base : int, #in~2436.offset : int) returns ();
modifies ;

procedure snd_pcm_lib_ioctl(#in~1745.base : int, #in~1745.offset : int, #in~1746 : int, #in~1747.base : int, #in~1747.offset : int) returns (#res : int);
modifies ;

procedure usb_alloc_coherent(#in~77.base : int, #in~77.offset : int, #in~78 : int, #in~79 : int, #in~80.base : int, #in~80.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __wake_up(#in~34.base : int, #in~34.offset : int, #in~35 : int, #in~36 : int, #in~37.base : int, #in~37.offset : int) returns ();
modifies ;

procedure videobuf_queue_vmalloc_init(#in~127.base : int, #in~127.offset : int, #in~128.base : int, #in~128.offset : int, #in~129.base : int, #in~129.offset : int, #in~130.base : int, #in~130.offset : int, #in~131 : int, #in~132 : int, #in~133 : int, #in~134.base : int, #in~134.offset : int, #in~135.base : int, #in~135.offset : int) returns ();
modifies ;

procedure snd_card_create(#in~1726 : int, #in~1727.base : int, #in~1727.offset : int, #in~1728.base : int, #in~1728.offset : int, #in~1729 : int, #in~1730.base : int, #in~1730.offset : int) returns (#res : int);
modifies ;

procedure schedule_work(#in~42.base : int, #in~42.offset : int) returns (#res : int);
modifies ;

procedure snd_card_free(#in~1731.base : int, #in~1731.offset : int) returns (#res : int);
modifies ;

procedure usb_get_intf(#in~2452.base : int, #in~2452.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure kmemdup(#in~2429.base : int, #in~2429.offset : int, #in~2430 : int, #in~2431 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure dvb_dmxdev_release(#in~1948.base : int, #in~1948.offset : int) returns ();
modifies ;

procedure usb_reset_device(#in~2459.base : int, #in~2459.offset : int) returns (#res : int);
modifies ;

procedure snprintf(#in~3.base : int, #in~3.offset : int, #in~4 : int, #in~5.base : int, #in~5.offset : int) returns (#res : int);
modifies ;

procedure dvb_dmx_init(#in~1942.base : int, #in~1942.offset : int) returns (#res : int);
modifies ;

procedure device_init_wakeup(#in~2444.base : int, #in~2444.offset : int, #in~2445 : int) returns (#res : int);
modifies ;


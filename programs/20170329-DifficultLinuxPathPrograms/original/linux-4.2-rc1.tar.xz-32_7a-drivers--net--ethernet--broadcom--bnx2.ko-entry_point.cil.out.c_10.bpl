type STRUCT~task_struct;
type STRUCT~nsproxy;
type STRUCT~workqueue_struct;
type STRUCT~wake_irq;
type STRUCT~dev_pm_qos;
type STRUCT~xol_area;
type STRUCT~slab;
type STRUCT~kmem_cache;
type STRUCT~mem_cgroup;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~pid_namespace;
type STRUCT~assoc_array_ptr;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~cgroup_taskset;
type STRUCT~kernfs_open_node;
type STRUCT~kernfs_iattrs;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~tracepoint;
type STRUCT~trace_event_call;
type STRUCT~trace_enum_map;
type STRUCT~pinctrl;
type STRUCT~pinctrl_state;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~cma;
type STRUCT~iommu_group;
type STRUCT~hotplug_slot;
type STRUCT~pci_sriov;
type STRUCT~proc_dir_entry;
type STRUCT~pcie_link_state;
type STRUCT~pci_vpd;
type STRUCT~pci_ats;
type STRUCT~msi_controller;
type STRUCT~vfsmount;
type STRUCT~writeback_control;
type STRUCT~swap_info_struct;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~cdev;
type STRUCT~posix_acl;
type STRUCT~bdi_writeback;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~backing_dev_info;
type STRUCT~mtd_info;
type STRUCT~poll_table_struct;
type STRUCT~kstatfs;
type STRUCT~sec_path;
type STRUCT~prot_inuse;
type STRUCT~ipv4_devconf;
type STRUCT~fib_rules_ops;
type STRUCT~fib_table;
type STRUCT~xt_table;
type STRUCT~rt6_info;
type STRUCT~rt6_statistics;
type STRUCT~fib6_table;
type STRUCT~sctp_mib;
type STRUCT~nf_logger;
type STRUCT~ebt_table;
type STRUCT~ip_conntrack_stat;
type STRUCT~nf_ct_event_notifier;
type STRUCT~nf_exp_event_notifier;
type STRUCT~nft_af_info;
type STRUCT~mpls_route;
type STRUCT~proc_ns_operations;
type STRUCT~net_generic;
type STRUCT~netns_ipvs;
type STRUCT~packet_type;
type STRUCT~Qdisc;
type STRUCT~netpoll_info;
type STRUCT~pcpu_lstats;
type STRUCT~pcpu_dstats;
type STRUCT~pcpu_vstats;
type STRUCT~iw_handler_def;
type STRUCT~iw_public_data;
type STRUCT~switchdev_ops;
type STRUCT~vlan_info;
type STRUCT~tipc_bearer;
type STRUCT~in_device;
type STRUCT~dn_dev;
type STRUCT~inet6_dev;
type STRUCT~wireless_dev;
type STRUCT~wpan_dev;
type STRUCT~mpls_dev;
type STRUCT~tcf_proto;
type STRUCT~cpu_rmap;
type STRUCT~garp_port;
type STRUCT~mrp_port;
type STRUCT~bpf_prog_aux;
type STRUCT~dn_route;
type STRUCT~xfrm_state;
type STRUCT~xfrm_policy;
type STRUCT~udp_table;
type STRUCT~raw_hashinfo;
type STRUCT~request_sock;
type STRUCT~uncached_list;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__u64 = int;
type ~s8 = int;
type ~u8 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~pteval_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~kernel_ulong_t = int;
type ~pci_power_t = int;
type ~pci_channel_state_t = int;
type ~pci_dev_flags_t = int;
type ~pci_bus_flags_t = int;
type ~pci_ers_result_t = int;
type ~__kernel_sa_family_t = int;
type ~qsize_t = int;
type ~sk_buff_data_t = int;
type ~ldv_func_ret_type___4 = int;
type ~ldv_func_ret_type___5 = int;
type ~ldv_func_ret_type___6 = int;
type ~ldv_func_ret_type___7 = int;
type ~ldv_func_ret_type___8 = int;
type ~ldv_func_ret_type___9 = int;
type ~ldv_func_ret_type___10 = int;
type ~ldv_func_ret_type___11 = int;
type ~ldv_func_ret_type___14 = int;
type ~ldv_func_ret_type___15 = int;
type ~ldv_func_ret_type___16 = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__be16 = ~__u16;
type ~__be32 = ~__u32;
type ~__sum16 = ~__u16;
type ~__wsum = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint8_t = ~__u8;
type ~uint32_t = ~__u32;
type ~uint64_t = ~__u64;
type ~dma_addr_t = ~u64;
type ~phys_addr_t = ~u64;
type ~resource_size_t = ~phys_addr_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~irqreturn_t = int;
type ~sa_family_t = ~__kernel_sa_family_t;
type ~projid_t = ~__kernel_uid32_t;
type ~socket_state = int;
type ~netdev_features_t = ~u64;
type ~phandle = ~u32;
type ~phy_interface_t = int;
type ~netdev_tx_t = int;
type ~gro_result_t = int;
type ~rx_handler_result_t = int;
type ~__portpair = ~__u32;
type ~__addrpair = ~__u64;
type ~ldv_func_ret_type = ~bool;
type ~ldv_func_ret_type___12 = ~bool;
type ~ldv_func_ret_type___13 = ~bool;
const #funAddr~bnx2_drv_ctl.base : int;
const #funAddr~bnx2_drv_ctl.offset : int;
const #funAddr~bnx2_register_cnic.base : int;
const #funAddr~bnx2_register_cnic.offset : int;
const #funAddr~bnx2_unregister_cnic.base : int;
const #funAddr~bnx2_unregister_cnic.offset : int;
const #funAddr~bnx2_msi_1shot.base : int;
const #funAddr~bnx2_msi_1shot.offset : int;
const #funAddr~bnx2_interrupt.base : int;
const #funAddr~bnx2_interrupt.offset : int;
const #funAddr~bnx2_msi.base : int;
const #funAddr~bnx2_msi.offset : int;
const #funAddr~bnx2_get_settings.base : int;
const #funAddr~bnx2_get_settings.offset : int;
const #funAddr~bnx2_set_settings.base : int;
const #funAddr~bnx2_set_settings.offset : int;
const #funAddr~bnx2_get_drvinfo.base : int;
const #funAddr~bnx2_get_drvinfo.offset : int;
const #funAddr~bnx2_get_regs_len.base : int;
const #funAddr~bnx2_get_regs_len.offset : int;
const #funAddr~bnx2_get_regs.base : int;
const #funAddr~bnx2_get_regs.offset : int;
const #funAddr~bnx2_get_wol.base : int;
const #funAddr~bnx2_get_wol.offset : int;
const #funAddr~bnx2_set_wol.base : int;
const #funAddr~bnx2_set_wol.offset : int;
const #funAddr~bnx2_nway_reset.base : int;
const #funAddr~bnx2_nway_reset.offset : int;
const #funAddr~bnx2_get_link.base : int;
const #funAddr~bnx2_get_link.offset : int;
const #funAddr~bnx2_get_eeprom_len.base : int;
const #funAddr~bnx2_get_eeprom_len.offset : int;
const #funAddr~bnx2_get_eeprom.base : int;
const #funAddr~bnx2_get_eeprom.offset : int;
const #funAddr~bnx2_set_eeprom.base : int;
const #funAddr~bnx2_set_eeprom.offset : int;
const #funAddr~bnx2_get_coalesce.base : int;
const #funAddr~bnx2_get_coalesce.offset : int;
const #funAddr~bnx2_set_coalesce.base : int;
const #funAddr~bnx2_set_coalesce.offset : int;
const #funAddr~bnx2_get_ringparam.base : int;
const #funAddr~bnx2_get_ringparam.offset : int;
const #funAddr~bnx2_set_ringparam.base : int;
const #funAddr~bnx2_set_ringparam.offset : int;
const #funAddr~bnx2_get_pauseparam.base : int;
const #funAddr~bnx2_get_pauseparam.offset : int;
const #funAddr~bnx2_set_pauseparam.base : int;
const #funAddr~bnx2_set_pauseparam.offset : int;
const #funAddr~bnx2_self_test.base : int;
const #funAddr~bnx2_self_test.offset : int;
const #funAddr~bnx2_get_strings.base : int;
const #funAddr~bnx2_get_strings.offset : int;
const #funAddr~bnx2_set_phys_id.base : int;
const #funAddr~bnx2_set_phys_id.offset : int;
const #funAddr~bnx2_get_ethtool_stats.base : int;
const #funAddr~bnx2_get_ethtool_stats.offset : int;
const #funAddr~bnx2_get_sset_count.base : int;
const #funAddr~bnx2_get_sset_count.offset : int;
const #funAddr~bnx2_get_channels.base : int;
const #funAddr~bnx2_get_channels.offset : int;
const #funAddr~bnx2_set_channels.base : int;
const #funAddr~bnx2_set_channels.offset : int;
const #funAddr~bnx2_reset_task.base : int;
const #funAddr~bnx2_reset_task.offset : int;
const #funAddr~bnx2_timer.base : int;
const #funAddr~bnx2_timer.offset : int;
const #funAddr~bnx2_cnic_probe.base : int;
const #funAddr~bnx2_cnic_probe.offset : int;
const #funAddr~bnx2_poll.base : int;
const #funAddr~bnx2_poll.offset : int;
const #funAddr~bnx2_poll_msix.base : int;
const #funAddr~bnx2_poll_msix.offset : int;
const #funAddr~bnx2_open.base : int;
const #funAddr~bnx2_open.offset : int;
const #funAddr~bnx2_close.base : int;
const #funAddr~bnx2_close.offset : int;
const #funAddr~bnx2_start_xmit.base : int;
const #funAddr~bnx2_start_xmit.offset : int;
const #funAddr~bnx2_set_rx_mode.base : int;
const #funAddr~bnx2_set_rx_mode.offset : int;
const #funAddr~bnx2_change_mac_addr.base : int;
const #funAddr~bnx2_change_mac_addr.offset : int;
const #funAddr~eth_validate_addr.base : int;
const #funAddr~eth_validate_addr.offset : int;
const #funAddr~bnx2_ioctl.base : int;
const #funAddr~bnx2_ioctl.offset : int;
const #funAddr~bnx2_change_mtu.base : int;
const #funAddr~bnx2_change_mtu.offset : int;
const #funAddr~bnx2_tx_timeout.base : int;
const #funAddr~bnx2_tx_timeout.offset : int;
const #funAddr~bnx2_get_stats64.base : int;
const #funAddr~bnx2_get_stats64.offset : int;
const #funAddr~poll_bnx2.base : int;
const #funAddr~poll_bnx2.offset : int;
const #funAddr~bnx2_set_features.base : int;
const #funAddr~bnx2_set_features.offset : int;
const #funAddr~bnx2_suspend.base : int;
const #funAddr~bnx2_suspend.offset : int;
const #funAddr~bnx2_resume.base : int;
const #funAddr~bnx2_resume.offset : int;
const #funAddr~bnx2_io_error_detected.base : int;
const #funAddr~bnx2_io_error_detected.offset : int;
const #funAddr~bnx2_io_slot_reset.base : int;
const #funAddr~bnx2_io_slot_reset.offset : int;
const #funAddr~bnx2_io_resume.base : int;
const #funAddr~bnx2_io_resume.offset : int;
const #funAddr~bnx2_init_one.base : int;
const #funAddr~bnx2_init_one.offset : int;
const #funAddr~bnx2_remove_one.base : int;
const #funAddr~bnx2_remove_one.offset : int;
const #funAddr~bnx2_shutdown.base : int;
const #funAddr~bnx2_shutdown.offset : int;
const ~system_states~SYSTEM_BOOTING : int;
const ~system_states~SYSTEM_RUNNING : int;
const ~system_states~SYSTEM_HALT : int;
const ~system_states~SYSTEM_POWER_OFF : int;
const ~system_states~SYSTEM_RESTART : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~irqreturn~IRQ_NONE : int;
const ~irqreturn~IRQ_HANDLED : int;
const ~irqreturn~IRQ_WAKE_THREAD : int;
const ~probe_type~PROBE_DEFAULT_STRATEGY : int;
const ~probe_type~PROBE_PREFER_ASYNCHRONOUS : int;
const ~probe_type~PROBE_FORCE_SYNCHRONOUS : int;
const ~pci_channel_state~pci_channel_io_normal : int;
const ~pci_channel_state~pci_channel_io_frozen : int;
const ~pci_channel_state~pci_channel_io_perm_failure : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~ldv_26394~SS_FREE : int;
const ~ldv_26394~SS_UNCONNECTED : int;
const ~ldv_26394~SS_CONNECTING : int;
const ~ldv_26394~SS_CONNECTED : int;
const ~ldv_26394~SS_DISCONNECTING : int;
const ~pkt_hash_types~PKT_HASH_TYPE_NONE : int;
const ~pkt_hash_types~PKT_HASH_TYPE_L2 : int;
const ~pkt_hash_types~PKT_HASH_TYPE_L3 : int;
const ~pkt_hash_types~PKT_HASH_TYPE_L4 : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ON : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_OFF : int;
const ~fwnode_type~FWNODE_INVALID : int;
const ~fwnode_type~FWNODE_OF : int;
const ~fwnode_type~FWNODE_ACPI : int;
const ~fwnode_type~FWNODE_PDATA : int;
const ~ldv_28629~PHY_INTERFACE_MODE_NA : int;
const ~ldv_28629~PHY_INTERFACE_MODE_MII : int;
const ~ldv_28629~PHY_INTERFACE_MODE_GMII : int;
const ~ldv_28629~PHY_INTERFACE_MODE_SGMII : int;
const ~ldv_28629~PHY_INTERFACE_MODE_TBI : int;
const ~ldv_28629~PHY_INTERFACE_MODE_REVMII : int;
const ~ldv_28629~PHY_INTERFACE_MODE_RMII : int;
const ~ldv_28629~PHY_INTERFACE_MODE_RGMII : int;
const ~ldv_28629~PHY_INTERFACE_MODE_RGMII_ID : int;
const ~ldv_28629~PHY_INTERFACE_MODE_RGMII_RXID : int;
const ~ldv_28629~PHY_INTERFACE_MODE_RGMII_TXID : int;
const ~ldv_28629~PHY_INTERFACE_MODE_RTBI : int;
const ~ldv_28629~PHY_INTERFACE_MODE_SMII : int;
const ~ldv_28629~PHY_INTERFACE_MODE_XGMII : int;
const ~ldv_28629~PHY_INTERFACE_MODE_MOCA : int;
const ~ldv_28629~PHY_INTERFACE_MODE_QSGMII : int;
const ~ldv_28629~PHY_INTERFACE_MODE_MAX : int;
const ~ldv_28683~MDIOBUS_ALLOCATED : int;
const ~ldv_28683~MDIOBUS_REGISTERED : int;
const ~ldv_28683~MDIOBUS_UNREGISTERED : int;
const ~ldv_28683~MDIOBUS_RELEASED : int;
const ~phy_state~PHY_DOWN : int;
const ~phy_state~PHY_STARTING : int;
const ~phy_state~PHY_READY : int;
const ~phy_state~PHY_PENDING : int;
const ~phy_state~PHY_UP : int;
const ~phy_state~PHY_AN : int;
const ~phy_state~PHY_RUNNING : int;
const ~phy_state~PHY_NOLINK : int;
const ~phy_state~PHY_FORCING : int;
const ~phy_state~PHY_CHANGELINK : int;
const ~phy_state~PHY_HALTED : int;
const ~phy_state~PHY_RESUMING : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_NONE : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_DSA : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_TRAILER : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_EDSA : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_BRCM : int;
const ~netdev_tx~__NETDEV_TX_MIN : int;
const ~netdev_tx~NETDEV_TX_OK : int;
const ~netdev_tx~NETDEV_TX_BUSY : int;
const ~netdev_tx~NETDEV_TX_LOCKED : int;
const ~gro_result~GRO_MERGED : int;
const ~gro_result~GRO_MERGED_FREE : int;
const ~gro_result~GRO_HELD : int;
const ~gro_result~GRO_NORMAL : int;
const ~gro_result~GRO_DROP : int;
const ~rx_handler_result~RX_HANDLER_CONSUMED : int;
const ~rx_handler_result~RX_HANDLER_ANOTHER : int;
const ~rx_handler_result~RX_HANDLER_EXACT : int;
const ~rx_handler_result~RX_HANDLER_PASS : int;
const ~skb_free_reason~SKB_REASON_CONSUMED : int;
const ~skb_free_reason~SKB_REASON_DROPPED : int;
const ~bpf_prog_type~BPF_PROG_TYPE_UNSPEC : int;
const ~bpf_prog_type~BPF_PROG_TYPE_SOCKET_FILTER : int;
const ~bpf_prog_type~BPF_PROG_TYPE_KPROBE : int;
const ~bpf_prog_type~BPF_PROG_TYPE_SCHED_CLS : int;
const ~bpf_prog_type~BPF_PROG_TYPE_SCHED_ACT : int;
axiom #funAddr~bnx2_drv_ctl.base == -1 && #funAddr~bnx2_drv_ctl.offset == 0;
axiom #funAddr~bnx2_register_cnic.base == -1 && #funAddr~bnx2_register_cnic.offset == 1;
axiom #funAddr~bnx2_unregister_cnic.base == -1 && #funAddr~bnx2_unregister_cnic.offset == 2;
axiom #funAddr~bnx2_msi_1shot.base == -1 && #funAddr~bnx2_msi_1shot.offset == 3;
axiom #funAddr~bnx2_interrupt.base == -1 && #funAddr~bnx2_interrupt.offset == 4;
axiom #funAddr~bnx2_msi.base == -1 && #funAddr~bnx2_msi.offset == 5;
axiom #funAddr~bnx2_get_settings.base == -1 && #funAddr~bnx2_get_settings.offset == 6;
axiom #funAddr~bnx2_set_settings.base == -1 && #funAddr~bnx2_set_settings.offset == 7;
axiom #funAddr~bnx2_get_drvinfo.base == -1 && #funAddr~bnx2_get_drvinfo.offset == 8;
axiom #funAddr~bnx2_get_regs_len.base == -1 && #funAddr~bnx2_get_regs_len.offset == 9;
axiom #funAddr~bnx2_get_regs.base == -1 && #funAddr~bnx2_get_regs.offset == 10;
axiom #funAddr~bnx2_get_wol.base == -1 && #funAddr~bnx2_get_wol.offset == 11;
axiom #funAddr~bnx2_set_wol.base == -1 && #funAddr~bnx2_set_wol.offset == 12;
axiom #funAddr~bnx2_nway_reset.base == -1 && #funAddr~bnx2_nway_reset.offset == 13;
axiom #funAddr~bnx2_get_link.base == -1 && #funAddr~bnx2_get_link.offset == 14;
axiom #funAddr~bnx2_get_eeprom_len.base == -1 && #funAddr~bnx2_get_eeprom_len.offset == 15;
axiom #funAddr~bnx2_get_eeprom.base == -1 && #funAddr~bnx2_get_eeprom.offset == 16;
axiom #funAddr~bnx2_set_eeprom.base == -1 && #funAddr~bnx2_set_eeprom.offset == 17;
axiom #funAddr~bnx2_get_coalesce.base == -1 && #funAddr~bnx2_get_coalesce.offset == 18;
axiom #funAddr~bnx2_set_coalesce.base == -1 && #funAddr~bnx2_set_coalesce.offset == 19;
axiom #funAddr~bnx2_get_ringparam.base == -1 && #funAddr~bnx2_get_ringparam.offset == 20;
axiom #funAddr~bnx2_set_ringparam.base == -1 && #funAddr~bnx2_set_ringparam.offset == 21;
axiom #funAddr~bnx2_get_pauseparam.base == -1 && #funAddr~bnx2_get_pauseparam.offset == 22;
axiom #funAddr~bnx2_set_pauseparam.base == -1 && #funAddr~bnx2_set_pauseparam.offset == 23;
axiom #funAddr~bnx2_self_test.base == -1 && #funAddr~bnx2_self_test.offset == 24;
axiom #funAddr~bnx2_get_strings.base == -1 && #funAddr~bnx2_get_strings.offset == 25;
axiom #funAddr~bnx2_set_phys_id.base == -1 && #funAddr~bnx2_set_phys_id.offset == 26;
axiom #funAddr~bnx2_get_ethtool_stats.base == -1 && #funAddr~bnx2_get_ethtool_stats.offset == 27;
axiom #funAddr~bnx2_get_sset_count.base == -1 && #funAddr~bnx2_get_sset_count.offset == 28;
axiom #funAddr~bnx2_get_channels.base == -1 && #funAddr~bnx2_get_channels.offset == 29;
axiom #funAddr~bnx2_set_channels.base == -1 && #funAddr~bnx2_set_channels.offset == 30;
axiom #funAddr~bnx2_reset_task.base == -1 && #funAddr~bnx2_reset_task.offset == 31;
axiom #funAddr~bnx2_timer.base == -1 && #funAddr~bnx2_timer.offset == 32;
axiom #funAddr~bnx2_cnic_probe.base == -1 && #funAddr~bnx2_cnic_probe.offset == 33;
axiom #funAddr~bnx2_poll.base == -1 && #funAddr~bnx2_poll.offset == 34;
axiom #funAddr~bnx2_poll_msix.base == -1 && #funAddr~bnx2_poll_msix.offset == 35;
axiom #funAddr~bnx2_open.base == -1 && #funAddr~bnx2_open.offset == 36;
axiom #funAddr~bnx2_close.base == -1 && #funAddr~bnx2_close.offset == 37;
axiom #funAddr~bnx2_start_xmit.base == -1 && #funAddr~bnx2_start_xmit.offset == 38;
axiom #funAddr~bnx2_set_rx_mode.base == -1 && #funAddr~bnx2_set_rx_mode.offset == 39;
axiom #funAddr~bnx2_change_mac_addr.base == -1 && #funAddr~bnx2_change_mac_addr.offset == 40;
axiom #funAddr~eth_validate_addr.base == -1 && #funAddr~eth_validate_addr.offset == 41;
axiom #funAddr~bnx2_ioctl.base == -1 && #funAddr~bnx2_ioctl.offset == 42;
axiom #funAddr~bnx2_change_mtu.base == -1 && #funAddr~bnx2_change_mtu.offset == 43;
axiom #funAddr~bnx2_tx_timeout.base == -1 && #funAddr~bnx2_tx_timeout.offset == 44;
axiom #funAddr~bnx2_get_stats64.base == -1 && #funAddr~bnx2_get_stats64.offset == 45;
axiom #funAddr~poll_bnx2.base == -1 && #funAddr~poll_bnx2.offset == 46;
axiom #funAddr~bnx2_set_features.base == -1 && #funAddr~bnx2_set_features.offset == 47;
axiom #funAddr~bnx2_suspend.base == -1 && #funAddr~bnx2_suspend.offset == 48;
axiom #funAddr~bnx2_resume.base == -1 && #funAddr~bnx2_resume.offset == 49;
axiom #funAddr~bnx2_io_error_detected.base == -1 && #funAddr~bnx2_io_error_detected.offset == 50;
axiom #funAddr~bnx2_io_slot_reset.base == -1 && #funAddr~bnx2_io_slot_reset.offset == 51;
axiom #funAddr~bnx2_io_resume.base == -1 && #funAddr~bnx2_io_resume.offset == 52;
axiom #funAddr~bnx2_init_one.base == -1 && #funAddr~bnx2_init_one.offset == 53;
axiom #funAddr~bnx2_remove_one.base == -1 && #funAddr~bnx2_remove_one.offset == 54;
axiom #funAddr~bnx2_shutdown.base == -1 && #funAddr~bnx2_shutdown.offset == 55;
axiom ~system_states~SYSTEM_BOOTING == 0;
axiom ~system_states~SYSTEM_RUNNING == 1;
axiom ~system_states~SYSTEM_HALT == 2;
axiom ~system_states~SYSTEM_POWER_OFF == 3;
axiom ~system_states~SYSTEM_RESTART == 4;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~irqreturn~IRQ_NONE == 0;
axiom ~irqreturn~IRQ_HANDLED == 1;
axiom ~irqreturn~IRQ_WAKE_THREAD == 2;
axiom ~probe_type~PROBE_DEFAULT_STRATEGY == 0;
axiom ~probe_type~PROBE_PREFER_ASYNCHRONOUS == 1;
axiom ~probe_type~PROBE_FORCE_SYNCHRONOUS == 2;
axiom ~pci_channel_state~pci_channel_io_normal == 1;
axiom ~pci_channel_state~pci_channel_io_frozen == 2;
axiom ~pci_channel_state~pci_channel_io_perm_failure == 3;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~ldv_26394~SS_FREE == 0;
axiom ~ldv_26394~SS_UNCONNECTED == 1;
axiom ~ldv_26394~SS_CONNECTING == 2;
axiom ~ldv_26394~SS_CONNECTED == 3;
axiom ~ldv_26394~SS_DISCONNECTING == 4;
axiom ~pkt_hash_types~PKT_HASH_TYPE_NONE == 0;
axiom ~pkt_hash_types~PKT_HASH_TYPE_L2 == 1;
axiom ~pkt_hash_types~PKT_HASH_TYPE_L3 == 2;
axiom ~pkt_hash_types~PKT_HASH_TYPE_L4 == 3;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE == 0;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE == 1;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ON == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_OFF == 3;
axiom ~fwnode_type~FWNODE_INVALID == 0;
axiom ~fwnode_type~FWNODE_OF == 1;
axiom ~fwnode_type~FWNODE_ACPI == 2;
axiom ~fwnode_type~FWNODE_PDATA == 3;
axiom ~ldv_28629~PHY_INTERFACE_MODE_NA == 0;
axiom ~ldv_28629~PHY_INTERFACE_MODE_MII == 1;
axiom ~ldv_28629~PHY_INTERFACE_MODE_GMII == 2;
axiom ~ldv_28629~PHY_INTERFACE_MODE_SGMII == 3;
axiom ~ldv_28629~PHY_INTERFACE_MODE_TBI == 4;
axiom ~ldv_28629~PHY_INTERFACE_MODE_REVMII == 5;
axiom ~ldv_28629~PHY_INTERFACE_MODE_RMII == 6;
axiom ~ldv_28629~PHY_INTERFACE_MODE_RGMII == 7;
axiom ~ldv_28629~PHY_INTERFACE_MODE_RGMII_ID == 8;
axiom ~ldv_28629~PHY_INTERFACE_MODE_RGMII_RXID == 9;
axiom ~ldv_28629~PHY_INTERFACE_MODE_RGMII_TXID == 10;
axiom ~ldv_28629~PHY_INTERFACE_MODE_RTBI == 11;
axiom ~ldv_28629~PHY_INTERFACE_MODE_SMII == 12;
axiom ~ldv_28629~PHY_INTERFACE_MODE_XGMII == 13;
axiom ~ldv_28629~PHY_INTERFACE_MODE_MOCA == 14;
axiom ~ldv_28629~PHY_INTERFACE_MODE_QSGMII == 15;
axiom ~ldv_28629~PHY_INTERFACE_MODE_MAX == 16;
axiom ~ldv_28683~MDIOBUS_ALLOCATED == 1;
axiom ~ldv_28683~MDIOBUS_REGISTERED == 2;
axiom ~ldv_28683~MDIOBUS_UNREGISTERED == 3;
axiom ~ldv_28683~MDIOBUS_RELEASED == 4;
axiom ~phy_state~PHY_DOWN == 0;
axiom ~phy_state~PHY_STARTING == 1;
axiom ~phy_state~PHY_READY == 2;
axiom ~phy_state~PHY_PENDING == 3;
axiom ~phy_state~PHY_UP == 4;
axiom ~phy_state~PHY_AN == 5;
axiom ~phy_state~PHY_RUNNING == 6;
axiom ~phy_state~PHY_NOLINK == 7;
axiom ~phy_state~PHY_FORCING == 8;
axiom ~phy_state~PHY_CHANGELINK == 9;
axiom ~phy_state~PHY_HALTED == 10;
axiom ~phy_state~PHY_RESUMING == 11;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_NONE == 0;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_DSA == 1;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_TRAILER == 2;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_EDSA == 3;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_BRCM == 4;
axiom ~netdev_tx~__NETDEV_TX_MIN == -2147483648;
axiom ~netdev_tx~NETDEV_TX_OK == 0;
axiom ~netdev_tx~NETDEV_TX_BUSY == 16;
axiom ~netdev_tx~NETDEV_TX_LOCKED == 32;
axiom ~gro_result~GRO_MERGED == 0;
axiom ~gro_result~GRO_MERGED_FREE == 1;
axiom ~gro_result~GRO_HELD == 2;
axiom ~gro_result~GRO_NORMAL == 3;
axiom ~gro_result~GRO_DROP == 4;
axiom ~rx_handler_result~RX_HANDLER_CONSUMED == 0;
axiom ~rx_handler_result~RX_HANDLER_ANOTHER == 1;
axiom ~rx_handler_result~RX_HANDLER_EXACT == 2;
axiom ~rx_handler_result~RX_HANDLER_PASS == 3;
axiom ~skb_free_reason~SKB_REASON_CONSUMED == 0;
axiom ~skb_free_reason~SKB_REASON_DROPPED == 1;
axiom ~bpf_prog_type~BPF_PROG_TYPE_UNSPEC == 0;
axiom ~bpf_prog_type~BPF_PROG_TYPE_SOCKET_FILTER == 1;
axiom ~bpf_prog_type~BPF_PROG_TYPE_KPROBE == 2;
axiom ~bpf_prog_type~BPF_PROG_TYPE_SCHED_CLS == 3;
axiom ~bpf_prog_type~BPF_PROG_TYPE_SCHED_ACT == 4;
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseXor" } ~bitwiseXor(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseComplement" } ~bitwiseComplement(in0 : int) returns (out : int);
var ~jiffies : int;

var ~ldv_work_1_3 : int;

var ~ldv_state_variable_6 : int;

var ~ldv_state_variable_0 : int;

var ~ldv_state_variable_5 : int;

var ~ldv_state_variable_2 : int;

var ~ldv_work_1_1 : int;

var ~ldv_work_1_2 : int;

var ~LDV_IN_INTERRUPT : int;

var ~ldv_timer_state_2 : int;

var ~ldv_state_variable_3 : int;

var ~ref_cnt : int;

var ~ldv_work_1_0 : int;

var ~ldv_state_variable_1 : int;

var ~ldv_state_variable_7 : int;

var ~ldv_state_variable_4 : int;

var ~#version.base : int, ~#version.offset : int;

var ~disable_msi : int;

var ~bnx2_stats_offset_arr : [int]int;

var ~ldv_retval_20 : int;

var ~ldv_retval_18 : int;

var ~ldv_retval_2 : int;

var ~ldv_retval_5 : int;

var ~ldv_retval_0 : int;

var ~ldv_retval_11 : int;

var ~ldv_retval_1 : int;

var ~ldv_retval_22 : int;

var ~ldv_retval_15 : int;

var ~ldv_retval_16 : int;

var ~ldv_retval_8 : int;

var ~ldv_retval_7 : int;

var ~ldv_retval_19 : int;

var ~ldv_retval_14 : int;

var ~ldv_retval_17 : int;

var ~ldv_retval_12 : int;

var ~ldv_retval_6 : int;

var ~ldv_retval_21 : int;

var ~ldv_retval_13 : int;

var ~ldv_retval_9 : int;

var ~ldv_retval_10 : int;

var ~ldv_retval_4 : int;

var ~ldv_retval_3 : int;

var ~ldv_mutex_cnic_lock_of_bnx2 : int;

var ~ldv_mutex_i_mutex_of_inode : int;

var ~ldv_mutex_lock : int;

var ~ldv_mutex_mutex_of_device : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~system_state : int;

var ~#rcu_lock_map.base : int, ~#rcu_lock_map.offset : int;

var ~system_wq.base : int, ~system_wq.offset : int;

var ~bnx2_ethtool_ops_group2.base : int, ~bnx2_ethtool_ops_group2.offset : int;

var ~ldv_work_struct_1_0.base : int, ~ldv_work_struct_1_0.offset : int;

var ~ldv_work_struct_1_1.base : int, ~ldv_work_struct_1_1.offset : int;

var ~ldv_work_struct_1_3.base : int, ~ldv_work_struct_1_3.offset : int;

var ~bnx2_pm_ops_group1.base : int, ~bnx2_pm_ops_group1.offset : int;

var ~bnx2_pci_driver_group1.base : int, ~bnx2_pci_driver_group1.offset : int;

var ~bnx2_ethtool_ops_group0.base : int, ~bnx2_ethtool_ops_group0.offset : int;

var ~bnx2_netdev_ops_group1.base : int, ~bnx2_netdev_ops_group1.offset : int;

var ~bnx2_err_handler_group0.base : int, ~bnx2_err_handler_group0.offset : int;

var ~bnx2_ethtool_ops_group3.base : int, ~bnx2_ethtool_ops_group3.offset : int;

var ~ldv_work_struct_1_2.base : int, ~ldv_work_struct_1_2.offset : int;

var ~bnx2_ethtool_ops_group5.base : int, ~bnx2_ethtool_ops_group5.offset : int;

var ~ldv_timer_list_2.base : int, ~ldv_timer_list_2.offset : int;

var ~bnx2_ethtool_ops_group4.base : int, ~bnx2_ethtool_ops_group4.offset : int;

var ~bnx2_ethtool_ops_group7.base : int, ~bnx2_ethtool_ops_group7.offset : int;

var ~bnx2_ethtool_ops_group6.base : int, ~bnx2_ethtool_ops_group6.offset : int;

var ~bnx2_ethtool_ops_group1.base : int, ~bnx2_ethtool_ops_group1.offset : int;

var ~dma_ops.base : int, ~dma_ops.offset : int;

var ~#cpu_reg_com.base : int, ~#cpu_reg_com.offset : int;

var ~#cpu_reg_cp.base : int, ~#cpu_reg_cp.offset : int;

var ~#cpu_reg_rxp.base : int, ~#cpu_reg_rxp.offset : int;

var ~#cpu_reg_tpat.base : int, ~#cpu_reg_tpat.offset : int;

var ~#cpu_reg_txp.base : int, ~#cpu_reg_txp.offset : int;

var ~board_info.name.base : [int]int, ~board_info.name.offset : [int]int;

var ~#bnx2_pci_tbl.base : int, ~#bnx2_pci_tbl.offset : int;

var ~#flash_table.base : int, ~#flash_table.offset : int;

var ~#flash_5709.base : int, ~#flash_5709.offset : int;

var ~#bnx2_stats_str_arr.base : int, ~#bnx2_stats_str_arr.offset : int;

var ~#bnx2_5706_stats_len_arr.base : int, ~#bnx2_5706_stats_len_arr.offset : int;

var ~#bnx2_5708_stats_len_arr.base : int, ~#bnx2_5708_stats_len_arr.offset : int;

var ~#bnx2_tests_str_arr.base : int, ~#bnx2_tests_str_arr.offset : int;

var ~#bnx2_ethtool_ops.base : int, ~#bnx2_ethtool_ops.offset : int;

var ~#bnx2_netdev_ops.base : int, ~#bnx2_netdev_ops.offset : int;

var ~#bnx2_pm_ops.base : int, ~#bnx2_pm_ops.offset : int;

var ~#bnx2_err_handler.base : int, ~#bnx2_err_handler.offset : int;

var ~#bnx2_pci_driver.base : int, ~#bnx2_pci_driver.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_int : [int,int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

implementation netdev_priv(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int){
    var ~dev.base : int, ~dev.offset : int;

  loc0:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    #res.base, #res.offset := ~dev.base, ~dev.offset + 3008;
    assume true;
    return;
}

procedure netdev_priv(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation ldv_mutex_lock_cnic_lock_of_bnx2(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc1:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    goto loc2;
  loc2:
    goto loc2_0, loc2_1;
  loc2_0:
    assume ~ldv_mutex_cnic_lock_of_bnx2 != 1;
    call ldv_error();
    return;
  loc2_1:
    assume !(~ldv_mutex_cnic_lock_of_bnx2 != 1);
    ~ldv_mutex_cnic_lock_of_bnx2 := 2;
    assume true;
    return;
}

procedure ldv_mutex_lock_cnic_lock_of_bnx2(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ~ldv_mutex_cnic_lock_of_bnx2;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr4341 : int;

  loc3:
    #t~loopctr4341 := 0;
    assume !(#t~loopctr4341 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation ldv_mutex_lock_19(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns (){
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;

  loc4:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    call ldv_mutex_lock_cnic_lock_of_bnx2(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    call mutex_lock(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    assume true;
    return;
}

procedure ldv_mutex_lock_19(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns ();
modifies ~ldv_mutex_cnic_lock_of_bnx2;

implementation main() returns (#res : int){
    var #t~ret4189.base : int, #t~ret4189.offset : int;
    var #t~ret4190.base : int, #t~ret4190.offset : int;
    var #t~ret4191.base : int, #t~ret4191.offset : int;
    var #t~ret4192.base : int, #t~ret4192.offset : int;
    var #t~ret4193.base : int, #t~ret4193.offset : int;
    var #t~ret4194.base : int, #t~ret4194.offset : int;
    var #t~ret4195.base : int, #t~ret4195.offset : int;
    var #t~ret4196.base : int, #t~ret4196.offset : int;
    var #t~ret4197.base : int, #t~ret4197.offset : int;
    var #t~ret4198.base : int, #t~ret4198.offset : int;
    var #t~ret4199.base : int, #t~ret4199.offset : int;
    var #t~ret4200.base : int, #t~ret4200.offset : int;
    var #t~ret4201.base : int, #t~ret4201.offset : int;
    var #t~ret4202.base : int, #t~ret4202.offset : int;
    var #t~ret4203.base : int, #t~ret4203.offset : int;
    var #t~ret4204.base : int, #t~ret4204.offset : int;
    var #t~ret4205.base : int, #t~ret4205.offset : int;
    var #t~ret4206.base : int, #t~ret4206.offset : int;
    var #t~ret4207.base : int, #t~ret4207.offset : int;
    var #t~ret4208.base : int, #t~ret4208.offset : int;
    var #t~ret4209.base : int, #t~ret4209.offset : int;
    var #t~ret4210.base : int, #t~ret4210.offset : int;
    var #t~nondet4211 : int;
    var #t~switch4212 : bool;
    var #t~nondet4213 : int;
    var #t~switch4214 : bool;
    var #t~mem4215 : int;
    var #t~ret4216 : int;
    var #t~mem4217 : int;
    var #t~ret4218 : int;
    var #t~mem4219 : int;
    var #t~ret4220 : int;
    var #t~ret4221 : int;
    var #t~ret4222 : ~netdev_tx_t;
    var #t~ret4223 : int;
    var #t~ret4224 : int;
    var #t~ret4225 : int;
    var #t~ret4226 : int;
    var #t~mem4227 : int;
    var #t~ret4228 : int;
    var #t~mem4229 : int;
    var #t~ret4230 : int;
    var #t~mem4231 : int;
    var #t~ret4232 : int;
    var #t~mem4233 : int;
    var #t~ret4234 : int;
    var #t~mem4235 : int;
    var #t~ret4236 : int;
    var #t~ret4237 : int;
    var #t~ret4238 : int;
    var #t~ret4239 : int;
    var #t~ret4240.base : int, #t~ret4240.offset : int;
    var #t~ret4241.base : int, #t~ret4241.offset : int;
    var #t~ret4242.base : int, #t~ret4242.offset : int;
    var #t~ret4243 : int;
    var #t~ret4244 : int;
    var #t~nondet4245 : int;
    var #t~switch4246 : bool;
    var #t~ret4247 : int;
    var #t~nondet4248 : int;
    var #t~switch4249 : bool;
    var #t~ret4250 : int;
    var #t~ret4251 : int;
    var #t~mem4252 : int;
    var #t~ret4253 : int;
    var #t~ret4254 : int;
    var #t~mem4255 : int;
    var #t~ret4256 : int;
    var #t~ret4257 : int;
    var #t~ret4258 : int;
    var #t~ret4259 : int;
    var #t~ret4260 : int;
    var #t~ret4261 : int;
    var #t~ret4262 : int;
    var #t~mem4263 : int;
    var #t~ret4264 : int;
    var #t~ret4265 : int;
    var #t~ret4266 : int;
    var #t~ret4267 : int;
    var #t~ret4268 : ~u32;
    var #t~nondet4269 : int;
    var #t~switch4270 : bool;
    var #t~ret4271 : ~pci_ers_result_t;
    var #t~ret4272 : ~pci_ers_result_t;
    var #t~ret4273 : ~pci_ers_result_t;
    var #t~mem4274 : int;
    var #t~ret4275 : ~pci_ers_result_t;
    var #t~mem4276 : int;
    var #t~ret4277 : ~pci_ers_result_t;
    var #t~mem4278 : int;
    var #t~ret4279 : ~pci_ers_result_t;
    var #t~ret4280 : int;
    var #t~ret4281 : int;
    var #t~ret4282 : int;
    var #t~ret4283 : int;
    var #t~nondet4284 : int;
    var #t~switch4285 : bool;
    var #t~ret4286 : int;
    var #t~nondet4287 : int;
    var #t~switch4288 : bool;
    var #t~ret4289 : int;
    var #t~ret4290 : int;
    var #t~ret4291 : int;
    var #t~ret4292 : int;
    var #t~ret4293 : int;
    var #t~ret4294 : int;
    var #t~ret4295 : int;
    var #t~ret4296 : int;
    var #t~ret4297 : int;
    var #t~ret4298 : int;
    var #t~ret4299 : int;
    var #t~ret4300 : int;
    var #t~ret4301 : int;
    var #t~ret4302 : int;
    var #t~ret4303 : int;
    var #t~ret4304 : int;
    var #t~ret4305 : int;
    var #t~ret4306 : int;
    var #t~ret4307 : int;
    var #t~ret4308 : int;
    var ~ldvarg1~2886.base : int, ~ldvarg1~2886.offset : int;
    var ~tmp~2886.base : int, ~tmp~2886.offset : int;
    var ~ldvarg4~2886.base : int, ~ldvarg4~2886.offset : int;
    var ~tmp___0~2886.base : int, ~tmp___0~2886.offset : int;
    var ~#ldvarg3~2886.base : int, ~#ldvarg3~2886.offset : int;
    var ~ldvarg0~2886.base : int, ~ldvarg0~2886.offset : int;
    var ~tmp___1~2886.base : int, ~tmp___1~2886.offset : int;
    var ~#ldvarg5~2886.base : int, ~#ldvarg5~2886.offset : int;
    var ~#ldvarg2~2886.base : int, ~#ldvarg2~2886.offset : int;
    var ~ldvarg6~2886.base : int, ~ldvarg6~2886.offset : int;
    var ~tmp___2~2886.base : int, ~tmp___2~2886.offset : int;
    var ~ldvarg7~2886.base : int, ~ldvarg7~2886.offset : int;
    var ~tmp___3~2886.base : int, ~tmp___3~2886.offset : int;
    var ~ldvarg18~2886.base : int, ~ldvarg18~2886.offset : int;
    var ~tmp___4~2886.base : int, ~tmp___4~2886.offset : int;
    var ~ldvarg11~2886.base : int, ~ldvarg11~2886.offset : int;
    var ~tmp___5~2886.base : int, ~tmp___5~2886.offset : int;
    var ~ldvarg20~2886.base : int, ~ldvarg20~2886.offset : int;
    var ~tmp___6~2886.base : int, ~tmp___6~2886.offset : int;
    var ~ldvarg12~2886.base : int, ~ldvarg12~2886.offset : int;
    var ~tmp___7~2886.base : int, ~tmp___7~2886.offset : int;
    var ~ldvarg16~2886.base : int, ~ldvarg16~2886.offset : int;
    var ~tmp___8~2886.base : int, ~tmp___8~2886.offset : int;
    var ~#ldvarg15~2886.base : int, ~#ldvarg15~2886.offset : int;
    var ~ldvarg8~2886.base : int, ~ldvarg8~2886.offset : int;
    var ~tmp___9~2886.base : int, ~tmp___9~2886.offset : int;
    var ~ldvarg17~2886.base : int, ~ldvarg17~2886.offset : int;
    var ~tmp___10~2886.base : int, ~tmp___10~2886.offset : int;
    var ~#ldvarg14~2886.base : int, ~#ldvarg14~2886.offset : int;
    var ~ldvarg13~2886.base : int, ~ldvarg13~2886.offset : int;
    var ~tmp___11~2886.base : int, ~tmp___11~2886.offset : int;
    var ~#ldvarg10~2886.base : int, ~#ldvarg10~2886.offset : int;
    var ~ldvarg19~2886.base : int, ~ldvarg19~2886.offset : int;
    var ~tmp___12~2886.base : int, ~tmp___12~2886.offset : int;
    var ~ldvarg9~2886.base : int, ~ldvarg9~2886.offset : int;
    var ~tmp___13~2886.base : int, ~tmp___13~2886.offset : int;
    var ~#ldvarg21~2886.base : int, ~#ldvarg21~2886.offset : int;
    var ~tmp___14~2886 : int;
    var ~tmp___15~2886 : int;
    var ~tmp___16~2886 : int;
    var ~tmp___17~2886 : int;
    var ~tmp___18~2886 : int;
    var ~tmp___19~2886 : int;
    var ~tmp___20~2886 : int;

  loc5:
    havoc ~ldvarg1~2886.base, ~ldvarg1~2886.offset;
    havoc ~tmp~2886.base, ~tmp~2886.offset;
    havoc ~ldvarg4~2886.base, ~ldvarg4~2886.offset;
    havoc ~tmp___0~2886.base, ~tmp___0~2886.offset;
    call ~#ldvarg3~2886.base, ~#ldvarg3~2886.offset := #Ultimate.alloc(8);
    havoc ~ldvarg0~2886.base, ~ldvarg0~2886.offset;
    havoc ~tmp___1~2886.base, ~tmp___1~2886.offset;
    call ~#ldvarg5~2886.base, ~#ldvarg5~2886.offset := #Ultimate.alloc(4);
    call ~#ldvarg2~2886.base, ~#ldvarg2~2886.offset := #Ultimate.alloc(4);
    havoc ~ldvarg6~2886.base, ~ldvarg6~2886.offset;
    havoc ~tmp___2~2886.base, ~tmp___2~2886.offset;
    havoc ~ldvarg7~2886.base, ~ldvarg7~2886.offset;
    havoc ~tmp___3~2886.base, ~tmp___3~2886.offset;
    havoc ~ldvarg18~2886.base, ~ldvarg18~2886.offset;
    havoc ~tmp___4~2886.base, ~tmp___4~2886.offset;
    havoc ~ldvarg11~2886.base, ~ldvarg11~2886.offset;
    havoc ~tmp___5~2886.base, ~tmp___5~2886.offset;
    havoc ~ldvarg20~2886.base, ~ldvarg20~2886.offset;
    havoc ~tmp___6~2886.base, ~tmp___6~2886.offset;
    havoc ~ldvarg12~2886.base, ~ldvarg12~2886.offset;
    havoc ~tmp___7~2886.base, ~tmp___7~2886.offset;
    havoc ~ldvarg16~2886.base, ~ldvarg16~2886.offset;
    havoc ~tmp___8~2886.base, ~tmp___8~2886.offset;
    call ~#ldvarg15~2886.base, ~#ldvarg15~2886.offset := #Ultimate.alloc(4);
    havoc ~ldvarg8~2886.base, ~ldvarg8~2886.offset;
    havoc ~tmp___9~2886.base, ~tmp___9~2886.offset;
    havoc ~ldvarg17~2886.base, ~ldvarg17~2886.offset;
    havoc ~tmp___10~2886.base, ~tmp___10~2886.offset;
    call ~#ldvarg14~2886.base, ~#ldvarg14~2886.offset := #Ultimate.alloc(4);
    havoc ~ldvarg13~2886.base, ~ldvarg13~2886.offset;
    havoc ~tmp___11~2886.base, ~tmp___11~2886.offset;
    call ~#ldvarg10~2886.base, ~#ldvarg10~2886.offset := #Ultimate.alloc(4);
    havoc ~ldvarg19~2886.base, ~ldvarg19~2886.offset;
    havoc ~tmp___12~2886.base, ~tmp___12~2886.offset;
    havoc ~ldvarg9~2886.base, ~ldvarg9~2886.offset;
    havoc ~tmp___13~2886.base, ~tmp___13~2886.offset;
    call ~#ldvarg21~2886.base, ~#ldvarg21~2886.offset := #Ultimate.alloc(4);
    havoc ~tmp___14~2886;
    havoc ~tmp___15~2886;
    havoc ~tmp___16~2886;
    havoc ~tmp___17~2886;
    havoc ~tmp___18~2886;
    havoc ~tmp___19~2886;
    havoc ~tmp___20~2886;
    call #t~ret4189.base, #t~ret4189.offset := ldv_init_zalloc(1);
    ~tmp~2886.base, ~tmp~2886.offset := #t~ret4189.base, #t~ret4189.offset;
    havoc #t~ret4189.base, #t~ret4189.offset;
    ~ldvarg1~2886.base, ~ldvarg1~2886.offset := ~tmp~2886.base, ~tmp~2886.offset;
    call #t~ret4190.base, #t~ret4190.offset := ldv_init_zalloc(232);
    ~tmp___0~2886.base, ~tmp___0~2886.offset := #t~ret4190.base, #t~ret4190.offset;
    havoc #t~ret4190.base, #t~ret4190.offset;
    ~ldvarg4~2886.base, ~ldvarg4~2886.offset := ~tmp___0~2886.base, ~tmp___0~2886.offset;
    call #t~ret4191.base, #t~ret4191.offset := ldv_init_zalloc(184);
    ~tmp___1~2886.base, ~tmp___1~2886.offset := #t~ret4191.base, #t~ret4191.offset;
    havoc #t~ret4191.base, #t~ret4191.offset;
    ~ldvarg0~2886.base, ~ldvarg0~2886.offset := ~tmp___1~2886.base, ~tmp___1~2886.offset;
    call #t~ret4192.base, #t~ret4192.offset := ldv_init_zalloc(40);
    ~tmp___2~2886.base, ~tmp___2~2886.offset := #t~ret4192.base, #t~ret4192.offset;
    havoc #t~ret4192.base, #t~ret4192.offset;
    ~ldvarg6~2886.base, ~ldvarg6~2886.offset := ~tmp___2~2886.base, ~tmp___2~2886.offset;
    call #t~ret4193.base, #t~ret4193.offset := ldv_init_zalloc(32);
    ~tmp___3~2886.base, ~tmp___3~2886.offset := #t~ret4193.base, #t~ret4193.offset;
    havoc #t~ret4193.base, #t~ret4193.offset;
    ~ldvarg7~2886.base, ~ldvarg7~2886.offset := ~tmp___3~2886.base, ~tmp___3~2886.offset;
    call #t~ret4194.base, #t~ret4194.offset := ldv_init_zalloc(8);
    ~tmp___4~2886.base, ~tmp___4~2886.offset := #t~ret4194.base, #t~ret4194.offset;
    havoc #t~ret4194.base, #t~ret4194.offset;
    ~ldvarg18~2886.base, ~ldvarg18~2886.offset := ~tmp___4~2886.base, ~tmp___4~2886.offset;
    call #t~ret4195.base, #t~ret4195.offset := ldv_init_zalloc(1);
    ~tmp___5~2886.base, ~tmp___5~2886.offset := #t~ret4195.base, #t~ret4195.offset;
    havoc #t~ret4195.base, #t~ret4195.offset;
    ~ldvarg11~2886.base, ~ldvarg11~2886.offset := ~tmp___5~2886.base, ~tmp___5~2886.offset;
    call #t~ret4196.base, #t~ret4196.offset := ldv_init_zalloc(196);
    ~tmp___6~2886.base, ~tmp___6~2886.offset := #t~ret4196.base, #t~ret4196.offset;
    havoc #t~ret4196.base, #t~ret4196.offset;
    ~ldvarg20~2886.base, ~ldvarg20~2886.offset := ~tmp___6~2886.base, ~tmp___6~2886.offset;
    call #t~ret4197.base, #t~ret4197.offset := ldv_init_zalloc(8);
    ~tmp___7~2886.base, ~tmp___7~2886.offset := #t~ret4197.base, #t~ret4197.offset;
    havoc #t~ret4197.base, #t~ret4197.offset;
    ~ldvarg12~2886.base, ~ldvarg12~2886.offset := ~tmp___7~2886.base, ~tmp___7~2886.offset;
    call #t~ret4198.base, #t~ret4198.offset := ldv_init_zalloc(1);
    ~tmp___8~2886.base, ~tmp___8~2886.offset := #t~ret4198.base, #t~ret4198.offset;
    havoc #t~ret4198.base, #t~ret4198.offset;
    ~ldvarg16~2886.base, ~ldvarg16~2886.offset := ~tmp___8~2886.base, ~tmp___8~2886.offset;
    call #t~ret4199.base, #t~ret4199.offset := ldv_init_zalloc(1);
    ~tmp___9~2886.base, ~tmp___9~2886.offset := #t~ret4199.base, #t~ret4199.offset;
    havoc #t~ret4199.base, #t~ret4199.offset;
    ~ldvarg8~2886.base, ~ldvarg8~2886.offset := ~tmp___9~2886.base, ~tmp___9~2886.offset;
    call #t~ret4200.base, #t~ret4200.offset := ldv_init_zalloc(12);
    ~tmp___10~2886.base, ~tmp___10~2886.offset := #t~ret4200.base, #t~ret4200.offset;
    havoc #t~ret4200.base, #t~ret4200.offset;
    ~ldvarg17~2886.base, ~ldvarg17~2886.offset := ~tmp___10~2886.base, ~tmp___10~2886.offset;
    call #t~ret4201.base, #t~ret4201.offset := ldv_init_zalloc(16);
    ~tmp___11~2886.base, ~tmp___11~2886.offset := #t~ret4201.base, #t~ret4201.offset;
    havoc #t~ret4201.base, #t~ret4201.offset;
    ~ldvarg13~2886.base, ~ldvarg13~2886.offset := ~tmp___11~2886.base, ~tmp___11~2886.offset;
    call #t~ret4202.base, #t~ret4202.offset := ldv_init_zalloc(8);
    ~tmp___12~2886.base, ~tmp___12~2886.offset := #t~ret4202.base, #t~ret4202.offset;
    havoc #t~ret4202.base, #t~ret4202.offset;
    ~ldvarg19~2886.base, ~ldvarg19~2886.offset := ~tmp___12~2886.base, ~tmp___12~2886.offset;
    call #t~ret4203.base, #t~ret4203.offset := ldv_init_zalloc(1);
    ~tmp___13~2886.base, ~tmp___13~2886.offset := #t~ret4203.base, #t~ret4203.offset;
    havoc #t~ret4203.base, #t~ret4203.offset;
    ~ldvarg9~2886.base, ~ldvarg9~2886.offset := ~tmp___13~2886.base, ~tmp___13~2886.offset;
    call ldv_initialize();
    call #t~ret4204.base, #t~ret4204.offset := ldv_memset(~#ldvarg3~2886.base, ~#ldvarg3~2886.offset, 0, 8);
    havoc #t~ret4204.base, #t~ret4204.offset;
    call #t~ret4205.base, #t~ret4205.offset := ldv_memset(~#ldvarg5~2886.base, ~#ldvarg5~2886.offset, 0, 4);
    havoc #t~ret4205.base, #t~ret4205.offset;
    call #t~ret4206.base, #t~ret4206.offset := ldv_memset(~#ldvarg2~2886.base, ~#ldvarg2~2886.offset, 0, 4);
    havoc #t~ret4206.base, #t~ret4206.offset;
    call #t~ret4207.base, #t~ret4207.offset := ldv_memset(~#ldvarg15~2886.base, ~#ldvarg15~2886.offset, 0, 4);
    havoc #t~ret4207.base, #t~ret4207.offset;
    call #t~ret4208.base, #t~ret4208.offset := ldv_memset(~#ldvarg14~2886.base, ~#ldvarg14~2886.offset, 0, 4);
    havoc #t~ret4208.base, #t~ret4208.offset;
    call #t~ret4209.base, #t~ret4209.offset := ldv_memset(~#ldvarg10~2886.base, ~#ldvarg10~2886.offset, 0, 4);
    havoc #t~ret4209.base, #t~ret4209.offset;
    call #t~ret4210.base, #t~ret4210.offset := ldv_memset(~#ldvarg21~2886.base, ~#ldvarg21~2886.offset, 0, 4);
    havoc #t~ret4210.base, #t~ret4210.offset;
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_state_variable_2 := 1;
    call work_init_1();
    ~ldv_state_variable_1 := 1;
    ~ldv_state_variable_4 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_5 := 0;
    assume -2147483648 <= #t~nondet4211 && #t~nondet4211 <= 2147483647;
    ~tmp___14~2886 := #t~nondet4211;
    havoc #t~nondet4211;
    #t~switch4212 := ~tmp___14~2886 == 0;
    assume !#t~switch4212;
    #t~switch4212 := #t~switch4212 || ~tmp___14~2886 == 1;
    assume !#t~switch4212;
    #t~switch4212 := #t~switch4212 || ~tmp___14~2886 == 2;
    assume !#t~switch4212;
    #t~switch4212 := #t~switch4212 || ~tmp___14~2886 == 3;
    assume !#t~switch4212;
    #t~switch4212 := #t~switch4212 || ~tmp___14~2886 == 4;
    assume #t~switch4212;
    assume ~ldv_state_variable_1 != 0;
    call invoke_work_1();
    return;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_2, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_2, ~ldv_retval_3, ~ldv_retval_22, ~ldv_retval_21, ~ldv_retval_20, ~ldv_retval_19, ~ldv_retval_18, ~ldv_retval_17, ~ldv_retval_16, ~ldv_retval_15, ~ldv_retval_14, ~ldv_retval_13, ~ldv_retval_12, ~ldv_retval_11, ~ldv_retval_10, ~ldv_retval_9, ~ldv_retval_8, ~ldv_retval_7, ~ldv_retval_6, ~ldv_retval_5, ~ldv_retval_4, #valid, #length, ~bnx2_err_handler_group0.base, ~bnx2_err_handler_group0.offset, ~ldv_work_1_0, ~ldv_work_1_1, ~ldv_work_1_2, ~ldv_work_1_3, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~bnx2_ethtool_ops_group0.base, ~bnx2_ethtool_ops_group0.offset, ~bnx2_ethtool_ops_group2.base, ~bnx2_ethtool_ops_group2.offset, ~bnx2_ethtool_ops_group1.base, ~bnx2_ethtool_ops_group1.offset, ~bnx2_ethtool_ops_group3.base, ~bnx2_ethtool_ops_group3.offset, ~bnx2_ethtool_ops_group4.base, ~bnx2_ethtool_ops_group4.offset, ~bnx2_ethtool_ops_group5.base, ~bnx2_ethtool_ops_group5.offset, ~bnx2_ethtool_ops_group6.base, ~bnx2_ethtool_ops_group6.offset, ~bnx2_ethtool_ops_group7.base, ~bnx2_ethtool_ops_group7.offset, ~bnx2_pm_ops_group1.base, ~bnx2_pm_ops_group1.offset, ~ldv_timer_state_2, ~bnx2_pci_driver_group1.base, ~bnx2_pci_driver_group1.offset, ~ldv_work_struct_1_0.base, ~ldv_work_struct_1_0.offset, ~ldv_work_struct_1_1.base, ~ldv_work_struct_1_1.offset, ~ldv_work_struct_1_2.base, ~ldv_work_struct_1_2.offset, ~ldv_work_struct_1_3.base, ~ldv_work_struct_1_3.offset, ~bnx2_netdev_ops_group1.base, ~bnx2_netdev_ops_group1.offset, ~ldv_timer_list_2.base, ~ldv_timer_list_2.offset, ~disable_msi, ~LDV_IN_INTERRUPT, ~ldv_mutex_cnic_lock_of_bnx2;

implementation work_init_1() returns (){
  loc6:
    ~ldv_work_1_0 := 0;
    ~ldv_work_1_1 := 0;
    ~ldv_work_1_2 := 0;
    ~ldv_work_1_3 := 0;
    assume true;
    return;
}

procedure work_init_1() returns ();
modifies ~ldv_work_1_0, ~ldv_work_1_1, ~ldv_work_1_2, ~ldv_work_1_3;

implementation ldv_init_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~malloc66.base : int, #t~malloc66.offset : int;
    var ~size : int;
    var ~p~64.base : int, ~p~64.offset : int;
    var ~tmp~64.base : int, ~tmp~64.offset : int;

  loc7:
    ~size := #in~size;
    havoc ~p~64.base, ~p~64.offset;
    havoc ~tmp~64.base, ~tmp~64.offset;
    call #t~malloc66.base, #t~malloc66.offset := #Ultimate.alloc(1 * (if ~size % 4294967296 % 4294967296 <= 2147483647 then ~size % 4294967296 % 4294967296 else ~size % 4294967296 % 4294967296 - 4294967296));
    call #Ultimate.meminit(#t~malloc66.base, #t~malloc66.offset, 1, (if ~size % 4294967296 % 4294967296 <= 2147483647 then ~size % 4294967296 % 4294967296 else ~size % 4294967296 % 4294967296 - 4294967296), 1 * (if ~size % 4294967296 % 4294967296 <= 2147483647 then ~size % 4294967296 % 4294967296 else ~size % 4294967296 % 4294967296 - 4294967296));
    ~tmp~64.base, ~tmp~64.offset := #t~malloc66.base, #t~malloc66.offset;
    ~p~64.base, ~p~64.offset := ~tmp~64.base, ~tmp~64.offset;
    assume (~p~64.base + ~p~64.offset) % 18446744073709551616 != 0;
    #res.base, #res.offset := ~p~64.base, ~p~64.offset;
    assume true;
    return;
}

procedure ldv_init_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation bnx2_netif_stop(#in~bp.base : int, #in~bp.offset : int, #in~stop_cnic : int) returns (){
    var #t~mem664.base : int, #t~mem664.offset : int;
    var #t~ret665 : ~bool;
    var #t~mem666.base : int, #t~mem666.offset : int;
    var #t~mem667.base : int, #t~mem667.offset : int;
    var ~bp.base : int, ~bp.offset : int;
    var ~stop_cnic : int;
    var ~tmp~697 : ~bool;

  loc8:
    ~bp.base, ~bp.offset := #in~bp.base, #in~bp.offset;
    ~stop_cnic := #in~stop_cnic;
    havoc ~tmp~697;
    assume ~stop_cnic % 256 != 0;
    call bnx2_cnic_stop(~bp.base, ~bp.offset);
    return;
}

procedure bnx2_netif_stop(#in~bp.base : int, #in~bp.offset : int, #in~stop_cnic : int) returns ();
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_cnic_lock_of_bnx2, ~ldv_state_variable_6, ~bnx2_netdev_ops_group1.base, ~bnx2_netdev_ops_group1.offset, ~ldv_timer_list_2.base, ~ldv_timer_list_2.offset, ~ldv_timer_state_2, ~disable_msi;

implementation bnx2_save_stats(#in~bp.base : int, #in~bp.offset : int) returns (){
    var #t~mem3198.base : int, #t~mem3198.offset : int;
    var #t~mem3199.base : int, #t~mem3199.offset : int;
    var #t~mem3200 : int;
    var #t~mem3201 : int;
    var #t~mem3202 : int;
    var #t~mem3203 : int;
    var #t~mem3206 : int;
    var #t~mem3207 : int;
    var ~bp.base : int, ~bp.offset : int;
    var ~hw_stats~2296.base : int, ~hw_stats~2296.offset : int;
    var ~temp_stats~2296.base : int, ~temp_stats~2296.offset : int;
    var ~i~2296 : int;
    var ~hi~2296 : ~u32;
    var ~lo~2296 : ~u64;

  loc9:
    ~bp.base, ~bp.offset := #in~bp.base, #in~bp.offset;
    havoc ~hw_stats~2296.base, ~hw_stats~2296.offset;
    havoc ~temp_stats~2296.base, ~temp_stats~2296.offset;
    havoc ~i~2296;
    havoc ~hi~2296;
    havoc ~lo~2296;
    call #t~mem3198.base, #t~mem3198.offset := read~$Pointer$(~bp.base, ~bp.offset + 9830, 8);
    ~hw_stats~2296.base, ~hw_stats~2296.offset := #t~mem3198.base, #t~mem3198.offset;
    havoc #t~mem3198.base, #t~mem3198.offset;
    call #t~mem3199.base, #t~mem3199.offset := read~$Pointer$(~bp.base, ~bp.offset + 9838, 8);
    ~temp_stats~2296.base, ~temp_stats~2296.offset := #t~mem3199.base, #t~mem3199.offset;
    havoc #t~mem3199.base, #t~mem3199.offset;
    ~i~2296 := 0;
    goto loc10;
  loc10:
    goto loc10_0, loc10_1;
  loc10_0:
    assume ~i~2296 <= 19;
    call #t~mem3200 := read~int(~temp_stats~2296.base, ~temp_stats~2296.offset + (if ~i~2296 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~i~2296 % 18446744073709551616 % 18446744073709551616 else ~i~2296 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616) * 4, 4);
    call #t~mem3201 := read~int(~hw_stats~2296.base, ~hw_stats~2296.offset + (if ~i~2296 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~i~2296 % 18446744073709551616 % 18446744073709551616 else ~i~2296 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616) * 4, 4);
    ~hi~2296 := #t~mem3200 + #t~mem3201;
    havoc #t~mem3200;
    havoc #t~mem3201;
    call #t~mem3202 := read~int(~temp_stats~2296.base, ~temp_stats~2296.offset + (if (~i~2296 + 1) % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then (~i~2296 + 1) % 18446744073709551616 % 18446744073709551616 else (~i~2296 + 1) % 18446744073709551616 % 18446744073709551616 - 18446744073709551616) * 4, 4);
    call #t~mem3203 := read~int(~hw_stats~2296.base, ~hw_stats~2296.offset + (if (~i~2296 + 1) % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then (~i~2296 + 1) % 18446744073709551616 % 18446744073709551616 else (~i~2296 + 1) % 18446744073709551616 % 18446744073709551616 - 18446744073709551616) * 4, 4);
    ~lo~2296 := #t~mem3202 % 4294967296 + #t~mem3203 % 4294967296;
    havoc #t~mem3202;
    havoc #t~mem3203;
    assume ~lo~2296 % 18446744073709551616 > 4294967295;
    ~hi~2296 := ~hi~2296 + 1;
    call write~int(~hi~2296, ~temp_stats~2296.base, ~temp_stats~2296.offset + (if ~i~2296 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~i~2296 % 18446744073709551616 % 18446744073709551616 else ~i~2296 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616) * 4, 4);
    call write~int(~lo~2296, ~temp_stats~2296.base, ~temp_stats~2296.offset + (if (~i~2296 + 1) % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then (~i~2296 + 1) % 18446744073709551616 % 18446744073709551616 else (~i~2296 + 1) % 18446744073709551616 % 18446744073709551616 - 18446744073709551616) * 4, 4);
    ~i~2296 := ~i~2296 + 2;
    goto loc10;
  loc10_1:
    assume !(~i~2296 <= 19);
    assume !(~i~2296 % 4294967296 <= 80);
    assume true;
    return;
}

procedure bnx2_save_stats(#in~bp.base : int, #in~bp.offset : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation bnx2_cnic_stop(#in~bp.base : int, #in~bp.offset : int) returns (){
    var #t~ret583 : int;
    var #t~ret584 : int;
    var #t~nondet585.base : int, #t~nondet585.offset : int;
    var #t~nondet586.base : int, #t~nondet586.offset : int;
    var #t~mem587.base : int, #t~mem587.offset : int;
    var #t~mem592.base : int, #t~mem592.offset : int;
    var #t~mem593.base : int, #t~mem593.offset : int;
    var #t~ret594 : int;
    var ~bp.base : int, ~bp.offset : int;
    var ~c_ops~630.base : int, ~c_ops~630.offset : int;
    var ~#info~630.base : int, ~#info~630.offset : int;
    var ~__warned~630 : ~bool;
    var ~tmp~630 : int;
    var ~tmp___0~630 : int;

  loc11:
    ~bp.base, ~bp.offset := #in~bp.base, #in~bp.offset;
    havoc ~c_ops~630.base, ~c_ops~630.offset;
    call ~#info~630.base, ~#info~630.offset := #Ultimate.alloc(68);
    havoc ~__warned~630;
    havoc ~tmp~630;
    havoc ~tmp___0~630;
    call ldv_mutex_lock_19(~bp.base, ~bp.offset + 10317);
    call #t~ret583 := debug_lockdep_rcu_enabled();
    assume -2147483648 <= #t~ret583 && #t~ret583 <= 2147483647;
    ~tmp~630 := #t~ret583;
    havoc #t~ret583;
    assume !(~tmp~630 != 0 && ~__warned~630 % 256 == 0);
    call #t~mem587.base, #t~mem587.offset := read~$Pointer$(~bp.base, ~bp.offset + 9370, 8);
    ~c_ops~630.base, ~c_ops~630.offset := #t~mem587.base, #t~mem587.offset;
    havoc #t~mem587.base, #t~mem587.offset;
    assume (~c_ops~630.base + ~c_ops~630.offset) % 18446744073709551616 != 0;
    call write~int(1, ~#info~630.base, ~#info~630.offset + 0, 4);
    call #t~mem592.base, #t~mem592.offset := read~$Pointer$(~bp.base, ~bp.offset + 9378, 8);
    call #t~mem593.base, #t~mem593.offset := read~$Pointer$(~c_ops~630.base, ~c_ops~630.offset + 16, 8);
    call #t~ret594 := ##fun~$Pointer$~X~$Pointer$~TO~int(#t~mem592.base, #t~mem592.offset, ~#info~630.base, ~#info~630.offset, #t~mem593.base, #t~mem593.offset);
    return;
}

procedure bnx2_cnic_stop(#in~bp.base : int, #in~bp.offset : int) returns ();
modifies #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_cnic_lock_of_bnx2, ~ldv_state_variable_6, ~bnx2_netdev_ops_group1.base, ~bnx2_netdev_ops_group1.offset, ~ldv_timer_list_2.base, ~ldv_timer_list_2.offset, ~ldv_timer_state_2, ~disable_msi;

implementation bnx2_change_ring_size(#in~bp.base : int, #in~bp.offset : int, #in~rx : int, #in~tx : int, #in~reset_irq : int) returns (#res : int){
    var #t~mem3576.base : int, #t~mem3576.offset : int;
    var #t~ret3577 : ~bool;
    var #t~ret3578 : int;
    var #t~mem3580.base : int, #t~mem3580.offset : int;
    var #t~ret3581 : ~bool;
    var #t~ret3582 : int;
    var #t~ret3583 : int;
    var #t~ret3584 : int;
    var #t~ret3585 : int;
    var #t~mem3586.base : int, #t~mem3586.offset : int;
    var #t~ret3587 : int;
    var #t~mem3588 : int;
    var ~bp.base : int, ~bp.offset : int;
    var ~rx : int;
    var ~tx : int;
    var ~reset_irq : int;
    var ~tmp~2436 : ~bool;
    var ~rc~2436 : int;
    var ~tmp___0~2436 : ~bool;

  loc12:
    ~bp.base, ~bp.offset := #in~bp.base, #in~bp.offset;
    ~rx := #in~rx;
    ~tx := #in~tx;
    ~reset_irq := #in~reset_irq;
    havoc ~tmp~2436;
    havoc ~rc~2436;
    havoc ~tmp___0~2436;
    call #t~mem3576.base, #t~mem3576.offset := read~$Pointer$(~bp.base, ~bp.offset + 8, 8);
    call #t~ret3577 := netif_running(#t~mem3576.base, #t~mem3576.offset);
    ~tmp~2436 := #t~ret3577;
    havoc #t~mem3576.base, #t~mem3576.offset;
    havoc #t~ret3577;
    assume ~tmp~2436 % 256 != 0;
    call bnx2_save_stats(~bp.base, ~bp.offset);
    call bnx2_netif_stop(~bp.base, ~bp.offset, 1);
    return;
}

procedure bnx2_change_ring_size(#in~bp.base : int, #in~bp.offset : int, #in~rx : int, #in~tx : int, #in~reset_irq : int) returns (#res : int);
modifies #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_cnic_lock_of_bnx2, ~ldv_state_variable_6, ~bnx2_netdev_ops_group1.base, ~bnx2_netdev_ops_group1.offset, ~ldv_timer_list_2.base, ~ldv_timer_list_2.offset, ~ldv_timer_state_2, ~disable_msi;

implementation bnx2_set_channels(#in~dev.base : int, #in~dev.offset : int, #in~channels.base : int, #in~channels.offset : int) returns (#res : int){
    var #t~ret3714.base : int, #t~ret3714.offset : int;
    var #t~mem3715 : int;
    var #t~mem3716 : int;
    var #t~mem3717 : int;
    var #t~short3718 : bool;
    var #t~mem3719 : int;
    var #t~mem3721 : int;
    var #t~ret3723 : ~bool;
    var #t~mem3724 : int;
    var #t~mem3725 : int;
    var #t~ret3726 : int;
    var ~dev.base : int, ~dev.offset : int;
    var ~channels.base : int, ~channels.offset : int;
    var ~bp~2529.base : int, ~bp~2529.offset : int;
    var ~tmp~2529.base : int, ~tmp~2529.offset : int;
    var ~max_rx_rings~2529 : ~u32;
    var ~max_tx_rings~2529 : ~u32;
    var ~rc~2529 : int;
    var ~tmp___0~2529 : ~bool;

  loc13:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    ~channels.base, ~channels.offset := #in~channels.base, #in~channels.offset;
    havoc ~bp~2529.base, ~bp~2529.offset;
    havoc ~tmp~2529.base, ~tmp~2529.offset;
    havoc ~max_rx_rings~2529;
    havoc ~max_tx_rings~2529;
    havoc ~rc~2529;
    havoc ~tmp___0~2529;
    call #t~ret3714.base, #t~ret3714.offset := netdev_priv(~dev.base, ~dev.offset);
    ~tmp~2529.base, ~tmp~2529.offset := #t~ret3714.base, #t~ret3714.offset;
    havoc #t~ret3714.base, #t~ret3714.offset;
    ~bp~2529.base, ~bp~2529.offset := ~tmp~2529.base, ~tmp~2529.offset;
    ~max_rx_rings~2529 := 1;
    ~max_tx_rings~2529 := 1;
    ~rc~2529 := 0;
    call #t~mem3715 := read~int(~bp~2529.base, ~bp~2529.offset + 28, 4);
    assume ~bitwiseAnd(#t~mem3715, 4) % 4294967296 != 0 && ~disable_msi == 0;
    havoc #t~mem3715;
    ~max_rx_rings~2529 := 8;
    ~max_tx_rings~2529 := 8;
    call #t~mem3716 := read~int(~channels.base, ~channels.offset + 20, 4);
    #t~short3718 := #t~mem3716 % 4294967296 > ~max_rx_rings~2529 % 4294967296;
    assume !#t~short3718;
    call #t~mem3717 := read~int(~channels.base, ~channels.offset + 24, 4);
    #t~short3718 := #t~mem3717 % 4294967296 > ~max_tx_rings~2529 % 4294967296;
    assume !#t~short3718;
    havoc #t~mem3716;
    havoc #t~mem3717;
    havoc #t~short3718;
    call #t~mem3719 := read~int(~channels.base, ~channels.offset + 20, 4);
    call write~int((if #t~mem3719 % 4294967296 % 4294967296 <= 2147483647 then #t~mem3719 % 4294967296 % 4294967296 else #t~mem3719 % 4294967296 % 4294967296 - 4294967296), ~bp~2529.base, ~bp~2529.offset + 10305, 4);
    havoc #t~mem3719;
    call #t~mem3721 := read~int(~channels.base, ~channels.offset + 24, 4);
    call write~int((if #t~mem3721 % 4294967296 % 4294967296 <= 2147483647 then #t~mem3721 % 4294967296 % 4294967296 else #t~mem3721 % 4294967296 % 4294967296 - 4294967296), ~bp~2529.base, ~bp~2529.offset + 10301, 4);
    havoc #t~mem3721;
    call #t~ret3723 := netif_running(~dev.base, ~dev.offset);
    ~tmp___0~2529 := #t~ret3723;
    havoc #t~ret3723;
    assume ~tmp___0~2529 % 256 != 0;
    call #t~mem3724 := read~int(~bp~2529.base, ~bp~2529.offset + 9778, 4);
    call #t~mem3725 := read~int(~bp~2529.base, ~bp~2529.offset + 9362, 4);
    call #t~ret3726 := bnx2_change_ring_size(~bp~2529.base, ~bp~2529.offset, #t~mem3724, #t~mem3725, 1);
    return;
}

procedure bnx2_set_channels(#in~dev.base : int, #in~dev.offset : int, #in~channels.base : int, #in~channels.offset : int) returns (#res : int);
modifies #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_cnic_lock_of_bnx2, ~ldv_state_variable_6, ~bnx2_netdev_ops_group1.base, ~bnx2_netdev_ops_group1.offset, ~ldv_timer_list_2.base, ~ldv_timer_list_2.offset, ~ldv_timer_state_2, ~disable_msi;

implementation ULTIMATE.init() returns (){
    var #t~nondet493.base : int, #t~nondet493.offset : int;
    var #t~nondet494.base : int, #t~nondet494.offset : int;
    var #t~nondet495.base : int, #t~nondet495.offset : int;
    var #t~nondet496.base : int, #t~nondet496.offset : int;
    var #t~nondet497.base : int, #t~nondet497.offset : int;
    var #t~nondet498.base : int, #t~nondet498.offset : int;
    var #t~nondet499.base : int, #t~nondet499.offset : int;
    var #t~nondet500.base : int, #t~nondet500.offset : int;
    var #t~nondet501.base : int, #t~nondet501.offset : int;
    var #t~nondet502.base : int, #t~nondet502.offset : int;
    var #t~nondet503.base : int, #t~nondet503.offset : int;
    var #t~nondet504.base : int, #t~nondet504.offset : int;
    var #t~nondet505.base : int, #t~nondet505.offset : int;
    var #t~nondet506.base : int, #t~nondet506.offset : int;
    var #t~nondet507.base : int, #t~nondet507.offset : int;
    var #t~nondet508.base : int, #t~nondet508.offset : int;
    var #t~nondet509.base : int, #t~nondet509.offset : int;
    var #t~nondet4165.base : int, #t~nondet4165.offset : int;
    var #t~union4323.__padding : [int]int, #t~union4323.dep_map.key.base : int, #t~union4323.dep_map.key.offset : int, #t~union4323.dep_map.class_cache.base : [int]int, #t~union4323.dep_map.class_cache.offset : [int]int, #t~union4323.dep_map.name.base : int, #t~union4323.dep_map.name.offset : int, #t~union4323.dep_map.cpu : int, #t~union4323.dep_map.ip : int;

  loc14:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_work_1_3 := 0;
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_state_variable_5 := 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_work_1_1 := 0;
    ~ldv_work_1_2 := 0;
    ~LDV_IN_INTERRUPT := 1;
    ~ldv_timer_state_2 := 0;
    ~ldv_state_variable_3 := 0;
    ~ref_cnt := 0;
    ~ldv_work_1_0 := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_state_variable_4 := 0;
    call ~#version.base, ~#version.offset := #Ultimate.alloc(63);
    call write~int(81, ~#version.base, ~#version.offset + 0, 1);
    call write~int(76, ~#version.base, ~#version.offset + 1, 1);
    call write~int(111, ~#version.base, ~#version.offset + 2, 1);
    call write~int(103, ~#version.base, ~#version.offset + 3, 1);
    call write~int(105, ~#version.base, ~#version.offset + 4, 1);
    call write~int(99, ~#version.base, ~#version.offset + 5, 1);
    call write~int(32, ~#version.base, ~#version.offset + 6, 1);
    call write~int(98, ~#version.base, ~#version.offset + 7, 1);
    call write~int(110, ~#version.base, ~#version.offset + 8, 1);
    call write~int(120, ~#version.base, ~#version.offset + 9, 1);
    call write~int(50, ~#version.base, ~#version.offset + 10, 1);
    call write~int(32, ~#version.base, ~#version.offset + 11, 1);
    call write~int(71, ~#version.base, ~#version.offset + 12, 1);
    call write~int(105, ~#version.base, ~#version.offset + 13, 1);
    call write~int(103, ~#version.base, ~#version.offset + 14, 1);
    call write~int(97, ~#version.base, ~#version.offset + 15, 1);
    call write~int(98, ~#version.base, ~#version.offset + 16, 1);
    call write~int(105, ~#version.base, ~#version.offset + 17, 1);
    call write~int(116, ~#version.base, ~#version.offset + 18, 1);
    call write~int(32, ~#version.base, ~#version.offset + 19, 1);
    call write~int(69, ~#version.base, ~#version.offset + 20, 1);
    call write~int(116, ~#version.base, ~#version.offset + 21, 1);
    call write~int(104, ~#version.base, ~#version.offset + 22, 1);
    call write~int(101, ~#version.base, ~#version.offset + 23, 1);
    call write~int(114, ~#version.base, ~#version.offset + 24, 1);
    call write~int(110, ~#version.base, ~#version.offset + 25, 1);
    call write~int(101, ~#version.base, ~#version.offset + 26, 1);
    call write~int(116, ~#version.base, ~#version.offset + 27, 1);
    call write~int(32, ~#version.base, ~#version.offset + 28, 1);
    call write~int(68, ~#version.base, ~#version.offset + 29, 1);
    call write~int(114, ~#version.base, ~#version.offset + 30, 1);
    call write~int(105, ~#version.base, ~#version.offset + 31, 1);
    call write~int(118, ~#version.base, ~#version.offset + 32, 1);
    call write~int(101, ~#version.base, ~#version.offset + 33, 1);
    call write~int(114, ~#version.base, ~#version.offset + 34, 1);
    call write~int(32, ~#version.base, ~#version.offset + 35, 1);
    call write~int(118, ~#version.base, ~#version.offset + 36, 1);
    call write~int(50, ~#version.base, ~#version.offset + 37, 1);
    call write~int(46, ~#version.base, ~#version.offset + 38, 1);
    call write~int(50, ~#version.base, ~#version.offset + 39, 1);
    call write~int(46, ~#version.base, ~#version.offset + 40, 1);
    call write~int(54, ~#version.base, ~#version.offset + 41, 1);
    call write~int(32, ~#version.base, ~#version.offset + 42, 1);
    call write~int(40, ~#version.base, ~#version.offset + 43, 1);
    call write~int(74, ~#version.base, ~#version.offset + 44, 1);
    call write~int(97, ~#version.base, ~#version.offset + 45, 1);
    call write~int(110, ~#version.base, ~#version.offset + 46, 1);
    call write~int(117, ~#version.base, ~#version.offset + 47, 1);
    call write~int(97, ~#version.base, ~#version.offset + 48, 1);
    call write~int(114, ~#version.base, ~#version.offset + 49, 1);
    call write~int(121, ~#version.base, ~#version.offset + 50, 1);
    call write~int(32, ~#version.base, ~#version.offset + 51, 1);
    call write~int(50, ~#version.base, ~#version.offset + 52, 1);
    call write~int(57, ~#version.base, ~#version.offset + 53, 1);
    call write~int(44, ~#version.base, ~#version.offset + 54, 1);
    call write~int(32, ~#version.base, ~#version.offset + 55, 1);
    call write~int(50, ~#version.base, ~#version.offset + 56, 1);
    call write~int(48, ~#version.base, ~#version.offset + 57, 1);
    call write~int(49, ~#version.base, ~#version.offset + 58, 1);
    call write~int(52, ~#version.base, ~#version.offset + 59, 1);
    call write~int(41, ~#version.base, ~#version.offset + 60, 1);
    call write~int(10, ~#version.base, ~#version.offset + 61, 1);
    call write~int(0, ~#version.base, ~#version.offset + 62, 1);
    ~disable_msi := 0;
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[0 := 0];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[1 := 2];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[2 := 4];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[3 := 6];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[4 := 8];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[5 := 10];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[6 := 12];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[7 := 14];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[8 := 16];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[9 := 18];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[10 := 20];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[11 := 21];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[12 := 22];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[13 := 23];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[14 := 24];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[15 := 25];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[16 := 26];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[17 := 27];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[18 := 28];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[19 := 29];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[20 := 30];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[21 := 31];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[22 := 32];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[23 := 33];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[24 := 34];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[25 := 35];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[26 := 36];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[27 := 37];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[28 := 38];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[29 := 39];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[30 := 40];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[31 := 41];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[32 := 42];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[33 := 43];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[34 := 44];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[35 := 45];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[36 := 46];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[37 := 47];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[38 := 48];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[39 := 49];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[40 := 50];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[41 := 51];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[42 := 53];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[43 := 55];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[44 := 57];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[45 := 58];
    ~bnx2_stats_offset_arr := ~bnx2_stats_offset_arr[46 := 80];
    ~ldv_retval_20 := 0;
    ~ldv_retval_18 := 0;
    ~ldv_retval_2 := 0;
    ~ldv_retval_5 := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_11 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_retval_22 := 0;
    ~ldv_retval_15 := 0;
    ~ldv_retval_16 := 0;
    ~ldv_retval_8 := 0;
    ~ldv_retval_7 := 0;
    ~ldv_retval_19 := 0;
    ~ldv_retval_14 := 0;
    ~ldv_retval_17 := 0;
    ~ldv_retval_12 := 0;
    ~ldv_retval_6 := 0;
    ~ldv_retval_21 := 0;
    ~ldv_retval_13 := 0;
    ~ldv_retval_9 := 0;
    ~ldv_retval_10 := 0;
    ~ldv_retval_4 := 0;
    ~ldv_retval_3 := 0;
    ~ldv_mutex_cnic_lock_of_bnx2 := 1;
    ~ldv_mutex_i_mutex_of_inode := 1;
    ~ldv_mutex_lock := 1;
    ~ldv_mutex_mutex_of_device := 1;
    ~bnx2_ethtool_ops_group2.base, ~bnx2_ethtool_ops_group2.offset := 0, 0;
    ~ldv_work_struct_1_0.base, ~ldv_work_struct_1_0.offset := 0, 0;
    ~ldv_work_struct_1_1.base, ~ldv_work_struct_1_1.offset := 0, 0;
    ~ldv_work_struct_1_3.base, ~ldv_work_struct_1_3.offset := 0, 0;
    ~bnx2_pm_ops_group1.base, ~bnx2_pm_ops_group1.offset := 0, 0;
    ~bnx2_pci_driver_group1.base, ~bnx2_pci_driver_group1.offset := 0, 0;
    ~bnx2_ethtool_ops_group0.base, ~bnx2_ethtool_ops_group0.offset := 0, 0;
    ~bnx2_netdev_ops_group1.base, ~bnx2_netdev_ops_group1.offset := 0, 0;
    ~bnx2_err_handler_group0.base, ~bnx2_err_handler_group0.offset := 0, 0;
    ~bnx2_ethtool_ops_group3.base, ~bnx2_ethtool_ops_group3.offset := 0, 0;
    ~ldv_work_struct_1_2.base, ~ldv_work_struct_1_2.offset := 0, 0;
    ~bnx2_ethtool_ops_group5.base, ~bnx2_ethtool_ops_group5.offset := 0, 0;
    ~ldv_timer_list_2.base, ~ldv_timer_list_2.offset := 0, 0;
    ~bnx2_ethtool_ops_group4.base, ~bnx2_ethtool_ops_group4.offset := 0, 0;
    ~bnx2_ethtool_ops_group7.base, ~bnx2_ethtool_ops_group7.offset := 0, 0;
    ~bnx2_ethtool_ops_group6.base, ~bnx2_ethtool_ops_group6.offset := 0, 0;
    ~bnx2_ethtool_ops_group1.base, ~bnx2_ethtool_ops_group1.offset := 0, 0;
    call ~#cpu_reg_com.base, ~#cpu_reg_com.offset := #Ultimate.alloc(48);
    call write~int(1069056, ~#cpu_reg_com.base, ~#cpu_reg_com.offset + 0, 4);
    call write~int(1024, ~#cpu_reg_com.base, ~#cpu_reg_com.offset + 4, 4);
    call write~int(2, ~#cpu_reg_com.base, ~#cpu_reg_com.offset + 8, 4);
    call write~int(1069060, ~#cpu_reg_com.base, ~#cpu_reg_com.offset + 12, 4);
    call write~int(16777215, ~#cpu_reg_com.base, ~#cpu_reg_com.offset + 16, 4);
    call write~int(1069568, ~#cpu_reg_com.base, ~#cpu_reg_com.offset + 20, 4);
    call write~int(1069064, ~#cpu_reg_com.base, ~#cpu_reg_com.offset + 24, 4);
    call write~int(1069084, ~#cpu_reg_com.base, ~#cpu_reg_com.offset + 28, 4);
    call write~int(1069088, ~#cpu_reg_com.base, ~#cpu_reg_com.offset + 32, 4);
    call write~int(1069108, ~#cpu_reg_com.base, ~#cpu_reg_com.offset + 36, 4);
    call write~int(1179648, ~#cpu_reg_com.base, ~#cpu_reg_com.offset + 40, 4);
    call write~int(134217728, ~#cpu_reg_com.base, ~#cpu_reg_com.offset + 44, 4);
    call ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset := #Ultimate.alloc(48);
    call write~int(1593344, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset + 0, 4);
    call write~int(1024, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset + 4, 4);
    call write~int(2, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset + 8, 4);
    call write~int(1593348, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset + 12, 4);
    call write~int(16777215, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset + 16, 4);
    call write~int(1593856, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset + 20, 4);
    call write~int(1593352, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset + 24, 4);
    call write~int(1593372, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset + 28, 4);
    call write~int(1593376, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset + 32, 4);
    call write~int(1593396, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset + 36, 4);
    call write~int(1703936, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset + 40, 4);
    call write~int(134217728, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset + 44, 4);
    call ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset := #Ultimate.alloc(48);
    call write~int(806912, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset + 0, 4);
    call write~int(1024, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset + 4, 4);
    call write~int(2, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset + 8, 4);
    call write~int(806916, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset + 12, 4);
    call write~int(16777215, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset + 16, 4);
    call write~int(807424, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset + 20, 4);
    call write~int(806920, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset + 24, 4);
    call write~int(806940, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset + 28, 4);
    call write~int(806944, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset + 32, 4);
    call write~int(806964, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset + 36, 4);
    call write~int(917504, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset + 40, 4);
    call write~int(134217728, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset + 44, 4);
    call ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset := #Ultimate.alloc(48);
    call write~int(544768, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset + 0, 4);
    call write~int(1024, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset + 4, 4);
    call write~int(2, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset + 8, 4);
    call write~int(544772, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset + 12, 4);
    call write~int(16777215, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset + 16, 4);
    call write~int(545280, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset + 20, 4);
    call write~int(544776, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset + 24, 4);
    call write~int(544796, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset + 28, 4);
    call write~int(544800, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset + 32, 4);
    call write~int(544820, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset + 36, 4);
    call write~int(655360, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset + 40, 4);
    call write~int(134217728, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset + 44, 4);
    call ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset := #Ultimate.alloc(48);
    call write~int(282624, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset + 0, 4);
    call write~int(1024, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset + 4, 4);
    call write~int(2, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset + 8, 4);
    call write~int(282628, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset + 12, 4);
    call write~int(16777215, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset + 16, 4);
    call write~int(283136, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset + 20, 4);
    call write~int(282632, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset + 24, 4);
    call write~int(282652, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset + 28, 4);
    call write~int(282656, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset + 32, 4);
    call write~int(282676, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset + 36, 4);
    call write~int(393216, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset + 40, 4);
    call write~int(134217728, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset + 44, 4);
    ~board_info.name.base, ~board_info.name.offset := ~board_info.name.base[0 := 0], ~board_info.name.offset[0 := 0];
    ~board_info.name.base, ~board_info.name.offset := ~board_info.name.base[1 := 0], ~board_info.name.offset[1 := 0];
    ~board_info.name.base, ~board_info.name.offset := ~board_info.name.base[2 := 0], ~board_info.name.offset[2 := 0];
    ~board_info.name.base, ~board_info.name.offset := ~board_info.name.base[3 := 0], ~board_info.name.offset[3 := 0];
    ~board_info.name.base, ~board_info.name.offset := ~board_info.name.base[4 := 0], ~board_info.name.offset[4 := 0];
    ~board_info.name.base, ~board_info.name.offset := ~board_info.name.base[5 := 0], ~board_info.name.offset[5 := 0];
    ~board_info.name.base, ~board_info.name.offset := ~board_info.name.base[6 := 0], ~board_info.name.offset[6 := 0];
    ~board_info.name.base, ~board_info.name.offset := ~board_info.name.base[7 := 0], ~board_info.name.offset[7 := 0];
    ~board_info.name.base, ~board_info.name.offset := ~board_info.name.base[8 := 0], ~board_info.name.offset[8 := 0];
    ~board_info.name.base, ~board_info.name.offset := ~board_info.name.base[9 := 0], ~board_info.name.offset[9 := 0];
    ~board_info.name.base, ~board_info.name.offset := ~board_info.name.base[10 := 0], ~board_info.name.offset[10 := 0];
    call ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset := #Ultimate.alloc(384);
    call write~int(5348, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 0 + 0, 4);
    call write~int(5706, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 0 + 4, 4);
    call write~int(4156, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 0 + 8, 4);
    call write~int(12545, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 0 + 12, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 0 + 16, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 0 + 20, 4);
    call write~int(1, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 0 + 24, 8);
    call write~int(5348, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 32 + 0, 4);
    call write~int(5706, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 32 + 4, 4);
    call write~int(4156, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 32 + 8, 4);
    call write~int(12550, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 32 + 12, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 32 + 16, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 32 + 20, 4);
    call write~int(2, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 32 + 24, 8);
    call write~int(5348, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 64 + 0, 4);
    call write~int(5706, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 64 + 4, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 64 + 8, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 64 + 12, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 64 + 16, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 64 + 20, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 64 + 24, 8);
    call write~int(5348, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 96 + 0, 4);
    call write~int(5708, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 96 + 4, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 96 + 8, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 96 + 12, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 96 + 16, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 96 + 20, 4);
    call write~int(5, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 96 + 24, 8);
    call write~int(5348, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 128 + 0, 4);
    call write~int(5802, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 128 + 4, 4);
    call write~int(4156, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 128 + 8, 4);
    call write~int(12546, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 128 + 12, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 128 + 16, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 128 + 20, 4);
    call write~int(4, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 128 + 24, 8);
    call write~int(5348, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 160 + 0, 4);
    call write~int(5802, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 160 + 4, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 160 + 8, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 160 + 12, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 160 + 16, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 160 + 20, 4);
    call write~int(3, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 160 + 24, 8);
    call write~int(5348, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 192 + 0, 4);
    call write~int(5804, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 192 + 4, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 192 + 8, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 192 + 12, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 192 + 16, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 192 + 20, 4);
    call write~int(6, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 192 + 24, 8);
    call write~int(5348, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 224 + 0, 4);
    call write~int(5689, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 224 + 4, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 224 + 8, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 224 + 12, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 224 + 16, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 224 + 20, 4);
    call write~int(7, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 224 + 24, 8);
    call write~int(5348, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 256 + 0, 4);
    call write~int(5690, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 256 + 4, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 256 + 8, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 256 + 12, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 256 + 16, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 256 + 20, 4);
    call write~int(8, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 256 + 24, 8);
    call write~int(5348, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 288 + 0, 4);
    call write~int(5691, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 288 + 4, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 288 + 8, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 288 + 12, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 288 + 16, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 288 + 20, 4);
    call write~int(9, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 288 + 24, 8);
    call write~int(5348, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 320 + 0, 4);
    call write~int(5692, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 320 + 4, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 320 + 8, 4);
    call write~int(4294967295, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 320 + 12, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 320 + 16, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 320 + 20, 4);
    call write~int(10, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 320 + 24, 8);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 352 + 0, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 352 + 4, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 352 + 8, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 352 + 12, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 352 + 16, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 352 + 20, 4);
    call write~int(0, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset + 352 + 24, 8);
    call ~#flash_table.base, ~#flash_table.offset := #Ultimate.alloc(768);
    call write~int(0, ~#flash_table.base, ~#flash_table.offset + 0 + 0, 4);
    call write~int(1082327936, ~#flash_table.base, ~#flash_table.offset + 0 + 4, 4);
    call write~int(10420353, ~#flash_table.base, ~#flash_table.offset + 0 + 8, 4);
    call write~int(2709823571, ~#flash_table.base, ~#flash_table.offset + 0 + 12, 4);
    call write~int(2936013824, ~#flash_table.base, ~#flash_table.offset + 0 + 16, 4);
    call write~int(3, ~#flash_table.base, ~#flash_table.offset + 0 + 20, 4);
    call write~int(2, ~#flash_table.base, ~#flash_table.offset + 0 + 24, 4);
    call write~int(4, ~#flash_table.base, ~#flash_table.offset + 0 + 28, 4);
    call write~int(3, ~#flash_table.base, ~#flash_table.offset + 0 + 32, 4);
    call write~int(65536, ~#flash_table.base, ~#flash_table.offset + 0 + 36, 4);
    call #t~nondet493.base, #t~nondet493.offset := #Ultimate.alloc(14);
    call write~$Pointer$(#t~nondet493.base, #t~nondet493.offset, ~#flash_table.base, ~#flash_table.offset + 0 + 40, 8);
    call write~int(134217730, ~#flash_table.base, ~#flash_table.offset + 48 + 0, 4);
    call write~int(1266713089, ~#flash_table.base, ~#flash_table.offset + 48 + 4, 4);
    call write~int(327809, ~#flash_table.base, ~#flash_table.offset + 48 + 8, 4);
    call write~int(58982995, ~#flash_table.base, ~#flash_table.offset + 48 + 12, 4);
    call write~int(2936144902, ~#flash_table.base, ~#flash_table.offset + 48 + 16, 4);
    call write~int(4, ~#flash_table.base, ~#flash_table.offset + 48 + 20, 4);
    call write~int(8, ~#flash_table.base, ~#flash_table.offset + 48 + 24, 4);
    call write~int(256, ~#flash_table.base, ~#flash_table.offset + 48 + 28, 4);
    call write~int(255, ~#flash_table.base, ~#flash_table.offset + 48 + 32, 4);
    call write~int(0, ~#flash_table.base, ~#flash_table.offset + 48 + 36, 4);
    call #t~nondet494.base, #t~nondet494.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet494.base, #t~nondet494.offset, ~#flash_table.base, ~#flash_table.offset + 48 + 40, 8);
    call write~int(67108865, ~#flash_table.base, ~#flash_table.offset + 96 + 0, 4);
    call write~int(1199604225, ~#flash_table.base, ~#flash_table.offset + 96 + 4, 4);
    call write~int(327809, ~#flash_table.base, ~#flash_table.offset + 96 + 8, 4);
    call write~int(58982995, ~#flash_table.base, ~#flash_table.offset + 96 + 12, 4);
    call write~int(2936144902, ~#flash_table.base, ~#flash_table.offset + 96 + 16, 4);
    call write~int(4, ~#flash_table.base, ~#flash_table.offset + 96 + 20, 4);
    call write~int(8, ~#flash_table.base, ~#flash_table.offset + 96 + 24, 4);
    call write~int(256, ~#flash_table.base, ~#flash_table.offset + 96 + 28, 4);
    call write~int(255, ~#flash_table.base, ~#flash_table.offset + 96 + 32, 4);
    call write~int(131072, ~#flash_table.base, ~#flash_table.offset + 96 + 36, 4);
    call #t~nondet495.base, #t~nondet495.offset := #Ultimate.alloc(27);
    call write~$Pointer$(#t~nondet495.base, #t~nondet495.offset, ~#flash_table.base, ~#flash_table.offset + 96 + 40, 8);
    call write~int(201326595, ~#flash_table.base, ~#flash_table.offset + 144 + 0, 4);
    call write~int(1333821953, ~#flash_table.base, ~#flash_table.offset + 144 + 4, 4);
    call write~int(327809, ~#flash_table.base, ~#flash_table.offset + 144 + 8, 4);
    call write~int(58982995, ~#flash_table.base, ~#flash_table.offset + 144 + 12, 4);
    call write~int(2936144902, ~#flash_table.base, ~#flash_table.offset + 144 + 16, 4);
    call write~int(4, ~#flash_table.base, ~#flash_table.offset + 144 + 20, 4);
    call write~int(8, ~#flash_table.base, ~#flash_table.offset + 144 + 24, 4);
    call write~int(256, ~#flash_table.base, ~#flash_table.offset + 144 + 28, 4);
    call write~int(255, ~#flash_table.base, ~#flash_table.offset + 144 + 32, 4);
    call write~int(262144, ~#flash_table.base, ~#flash_table.offset + 144 + 36, 4);
    call #t~nondet496.base, #t~nondet496.offset := #Ultimate.alloc(27);
    call write~$Pointer$(#t~nondet496.base, #t~nondet496.offset, ~#flash_table.base, ~#flash_table.offset + 144 + 40, 8);
    call write~int(285212672, ~#flash_table.base, ~#flash_table.offset + 192 + 0, 4);
    call write~int(1400930817, ~#flash_table.base, ~#flash_table.offset + 192 + 4, 4);
    call write~int(327809, ~#flash_table.base, ~#flash_table.offset + 192 + 8, 4);
    call write~int(58982995, ~#flash_table.base, ~#flash_table.offset + 192 + 12, 4);
    call write~int(2936144902, ~#flash_table.base, ~#flash_table.offset + 192 + 16, 4);
    call write~int(4, ~#flash_table.base, ~#flash_table.offset + 192 + 20, 4);
    call write~int(8, ~#flash_table.base, ~#flash_table.offset + 192 + 24, 4);
    call write~int(256, ~#flash_table.base, ~#flash_table.offset + 192 + 28, 4);
    call write~int(255, ~#flash_table.base, ~#flash_table.offset + 192 + 32, 4);
    call write~int(0, ~#flash_table.base, ~#flash_table.offset + 192 + 36, 4);
    call #t~nondet497.base, #t~nondet497.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet497.base, #t~nondet497.offset, ~#flash_table.base, ~#flash_table.offset + 192 + 40, 8);
    call write~int(419430402, ~#flash_table.base, ~#flash_table.offset + 240 + 0, 4);
    call write~int(1535148545, ~#flash_table.base, ~#flash_table.offset + 240 + 4, 4);
    call write~int(327899, ~#flash_table.base, ~#flash_table.offset + 240 + 8, 4);
    call write~int(58982995, ~#flash_table.base, ~#flash_table.offset + 240 + 12, 4);
    call write~int(2936144902, ~#flash_table.base, ~#flash_table.offset + 240 + 16, 4);
    call write~int(4, ~#flash_table.base, ~#flash_table.offset + 240 + 20, 4);
    call write~int(8, ~#flash_table.base, ~#flash_table.offset + 240 + 24, 4);
    call write~int(256, ~#flash_table.base, ~#flash_table.offset + 240 + 28, 4);
    call write~int(255, ~#flash_table.base, ~#flash_table.offset + 240 + 32, 4);
    call write~int(131072, ~#flash_table.base, ~#flash_table.offset + 240 + 36, 4);
    call #t~nondet498.base, #t~nondet498.offset := #Ultimate.alloc(45);
    call write~$Pointer$(#t~nondet498.base, #t~nondet498.offset, ~#flash_table.base, ~#flash_table.offset + 240 + 40, 8);
    call write~int(352321537, ~#flash_table.base, ~#flash_table.offset + 288 + 0, 4);
    call write~int(1468039681, ~#flash_table.base, ~#flash_table.offset + 288 + 4, 4);
    call write~int(327899, ~#flash_table.base, ~#flash_table.offset + 288 + 8, 4);
    call write~int(58982995, ~#flash_table.base, ~#flash_table.offset + 288 + 12, 4);
    call write~int(2936144902, ~#flash_table.base, ~#flash_table.offset + 288 + 16, 4);
    call write~int(4, ~#flash_table.base, ~#flash_table.offset + 288 + 20, 4);
    call write~int(8, ~#flash_table.base, ~#flash_table.offset + 288 + 24, 4);
    call write~int(256, ~#flash_table.base, ~#flash_table.offset + 288 + 28, 4);
    call write~int(255, ~#flash_table.base, ~#flash_table.offset + 288 + 32, 4);
    call write~int(262144, ~#flash_table.base, ~#flash_table.offset + 288 + 36, 4);
    call #t~nondet499.base, #t~nondet499.offset := #Ultimate.alloc(45);
    call write~$Pointer$(#t~nondet499.base, #t~nondet499.offset, ~#flash_table.base, ~#flash_table.offset + 288 + 40, 8);
    call write~int(486539267, ~#flash_table.base, ~#flash_table.offset + 336 + 0, 4);
    call write~int(1602257409, ~#flash_table.base, ~#flash_table.offset + 336 + 4, 4);
    call write~int(327809, ~#flash_table.base, ~#flash_table.offset + 336 + 8, 4);
    call write~int(58982995, ~#flash_table.base, ~#flash_table.offset + 336 + 12, 4);
    call write~int(2936144902, ~#flash_table.base, ~#flash_table.offset + 336 + 16, 4);
    call write~int(4, ~#flash_table.base, ~#flash_table.offset + 336 + 20, 4);
    call write~int(8, ~#flash_table.base, ~#flash_table.offset + 336 + 24, 4);
    call write~int(256, ~#flash_table.base, ~#flash_table.offset + 336 + 28, 4);
    call write~int(255, ~#flash_table.base, ~#flash_table.offset + 336 + 32, 4);
    call write~int(65536, ~#flash_table.base, ~#flash_table.offset + 336 + 36, 4);
    call #t~nondet500.base, #t~nondet500.offset := #Ultimate.alloc(26);
    call write~$Pointer$(#t~nondet500.base, #t~nondet500.offset, ~#flash_table.base, ~#flash_table.offset + 336 + 40, 8);
    call write~int(570425344, ~#flash_table.base, ~#flash_table.offset + 384 + 0, 4);
    call write~int(1652589440, ~#flash_table.base, ~#flash_table.offset + 384 + 4, 4);
    call write~int(10420353, ~#flash_table.base, ~#flash_table.offset + 384 + 8, 4);
    call write~int(2709823571, ~#flash_table.base, ~#flash_table.offset + 384 + 12, 4);
    call write~int(2936013824, ~#flash_table.base, ~#flash_table.offset + 384 + 16, 4);
    call write~int(3, ~#flash_table.base, ~#flash_table.offset + 384 + 20, 4);
    call write~int(2, ~#flash_table.base, ~#flash_table.offset + 384 + 24, 4);
    call write~int(4, ~#flash_table.base, ~#flash_table.offset + 384 + 28, 4);
    call write~int(3, ~#flash_table.base, ~#flash_table.offset + 384 + 32, 4);
    call write~int(65536, ~#flash_table.base, ~#flash_table.offset + 384 + 36, 4);
    call #t~nondet501.base, #t~nondet501.offset := #Ultimate.alloc(14);
    call write~$Pointer$(#t~nondet501.base, #t~nondet501.offset, ~#flash_table.base, ~#flash_table.offset + 384 + 40, 8);
    call write~int(704643074, ~#flash_table.base, ~#flash_table.offset + 432 + 0, 4);
    call write~int(1803584001, ~#flash_table.base, ~#flash_table.offset + 432 + 4, 4);
    call write~int(327809, ~#flash_table.base, ~#flash_table.offset + 432 + 8, 4);
    call write~int(58982995, ~#flash_table.base, ~#flash_table.offset + 432 + 12, 4);
    call write~int(2936144902, ~#flash_table.base, ~#flash_table.offset + 432 + 16, 4);
    call write~int(4, ~#flash_table.base, ~#flash_table.offset + 432 + 20, 4);
    call write~int(8, ~#flash_table.base, ~#flash_table.offset + 432 + 24, 4);
    call write~int(256, ~#flash_table.base, ~#flash_table.offset + 432 + 28, 4);
    call write~int(255, ~#flash_table.base, ~#flash_table.offset + 432 + 32, 4);
    call write~int(0, ~#flash_table.base, ~#flash_table.offset + 432 + 36, 4);
    call #t~nondet502.base, #t~nondet502.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet502.base, #t~nondet502.offset, ~#flash_table.base, ~#flash_table.offset + 432 + 40, 8);
    call write~int(637534209, ~#flash_table.base, ~#flash_table.offset + 480 + 0, 4);
    call write~int(1736475137, ~#flash_table.base, ~#flash_table.offset + 480 + 4, 4);
    call write~int(327809, ~#flash_table.base, ~#flash_table.offset + 480 + 8, 4);
    call write~int(58982995, ~#flash_table.base, ~#flash_table.offset + 480 + 12, 4);
    call write~int(2936144902, ~#flash_table.base, ~#flash_table.offset + 480 + 16, 4);
    call write~int(4, ~#flash_table.base, ~#flash_table.offset + 480 + 20, 4);
    call write~int(8, ~#flash_table.base, ~#flash_table.offset + 480 + 24, 4);
    call write~int(256, ~#flash_table.base, ~#flash_table.offset + 480 + 28, 4);
    call write~int(255, ~#flash_table.base, ~#flash_table.offset + 480 + 32, 4);
    call write~int(0, ~#flash_table.base, ~#flash_table.offset + 480 + 36, 4);
    call #t~nondet503.base, #t~nondet503.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet503.base, #t~nondet503.offset, ~#flash_table.base, ~#flash_table.offset + 480 + 40, 8);
    call write~int(771751939, ~#flash_table.base, ~#flash_table.offset + 528 + 0, 4);
    call write~int(1853915763, ~#flash_table.base, ~#flash_table.offset + 528 + 4, 4);
    call write~int(5701761, ~#flash_table.base, ~#flash_table.offset + 528 + 8, 4);
    call write~int(1753514835, ~#flash_table.base, ~#flash_table.offset + 528 + 12, 4);
    call write~int(2936013824, ~#flash_table.base, ~#flash_table.offset + 528 + 16, 4);
    call write~int(3, ~#flash_table.base, ~#flash_table.offset + 528 + 20, 4);
    call write~int(9, ~#flash_table.base, ~#flash_table.offset + 528 + 24, 4);
    call write~int(264, ~#flash_table.base, ~#flash_table.offset + 528 + 28, 4);
    call write~int(511, ~#flash_table.base, ~#flash_table.offset + 528 + 32, 4);
    call write~int(135168, ~#flash_table.base, ~#flash_table.offset + 528 + 36, 4);
    call #t~nondet504.base, #t~nondet504.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet504.base, #t~nondet504.offset, ~#flash_table.base, ~#flash_table.offset + 528 + 40, 8);
    call write~int(855638016, ~#flash_table.base, ~#flash_table.offset + 576 + 0, 4);
    call write~int(1937801729, ~#flash_table.base, ~#flash_table.offset + 576 + 4, 4);
    call write~int(327809, ~#flash_table.base, ~#flash_table.offset + 576 + 8, 4);
    call write~int(58982995, ~#flash_table.base, ~#flash_table.offset + 576 + 12, 4);
    call write~int(2936144902, ~#flash_table.base, ~#flash_table.offset + 576 + 16, 4);
    call write~int(4, ~#flash_table.base, ~#flash_table.offset + 576 + 20, 4);
    call write~int(8, ~#flash_table.base, ~#flash_table.offset + 576 + 24, 4);
    call write~int(256, ~#flash_table.base, ~#flash_table.offset + 576 + 28, 4);
    call write~int(255, ~#flash_table.base, ~#flash_table.offset + 576 + 32, 4);
    call write~int(0, ~#flash_table.base, ~#flash_table.offset + 576 + 36, 4);
    call #t~nondet505.base, #t~nondet505.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet505.base, #t~nondet505.offset, ~#flash_table.base, ~#flash_table.offset + 576 + 40, 8);
    call write~int(989855746, ~#flash_table.base, ~#flash_table.offset + 624 + 0, 4);
    call write~int(2072019457, ~#flash_table.base, ~#flash_table.offset + 624 + 4, 4);
    call write~int(327809, ~#flash_table.base, ~#flash_table.offset + 624 + 8, 4);
    call write~int(58982995, ~#flash_table.base, ~#flash_table.offset + 624 + 12, 4);
    call write~int(2936144902, ~#flash_table.base, ~#flash_table.offset + 624 + 16, 4);
    call write~int(4, ~#flash_table.base, ~#flash_table.offset + 624 + 20, 4);
    call write~int(8, ~#flash_table.base, ~#flash_table.offset + 624 + 24, 4);
    call write~int(256, ~#flash_table.base, ~#flash_table.offset + 624 + 28, 4);
    call write~int(255, ~#flash_table.base, ~#flash_table.offset + 624 + 32, 4);
    call write~int(0, ~#flash_table.base, ~#flash_table.offset + 624 + 36, 4);
    call #t~nondet506.base, #t~nondet506.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet506.base, #t~nondet506.offset, ~#flash_table.base, ~#flash_table.offset + 624 + 40, 8);
    call write~int(922746881, ~#flash_table.base, ~#flash_table.offset + 672 + 0, 4);
    call write~int(1988133491, ~#flash_table.base, ~#flash_table.offset + 672 + 4, 4);
    call write~int(5701761, ~#flash_table.base, ~#flash_table.offset + 672 + 8, 4);
    call write~int(1753514835, ~#flash_table.base, ~#flash_table.offset + 672 + 12, 4);
    call write~int(2936013824, ~#flash_table.base, ~#flash_table.offset + 672 + 16, 4);
    call write~int(3, ~#flash_table.base, ~#flash_table.offset + 672 + 20, 4);
    call write~int(9, ~#flash_table.base, ~#flash_table.offset + 672 + 24, 4);
    call write~int(264, ~#flash_table.base, ~#flash_table.offset + 672 + 28, 4);
    call write~int(511, ~#flash_table.base, ~#flash_table.offset + 672 + 32, 4);
    call write~int(0, ~#flash_table.base, ~#flash_table.offset + 672 + 36, 4);
    call #t~nondet507.base, #t~nondet507.offset := #Ultimate.alloc(19);
    call write~$Pointer$(#t~nondet507.base, #t~nondet507.offset, ~#flash_table.base, ~#flash_table.offset + 672 + 40, 8);
    call write~int(1056964611, ~#flash_table.base, ~#flash_table.offset + 720 + 0, 4);
    call write~int(2122351219, ~#flash_table.base, ~#flash_table.offset + 720 + 4, 4);
    call write~int(5701761, ~#flash_table.base, ~#flash_table.offset + 720 + 8, 4);
    call write~int(1753514835, ~#flash_table.base, ~#flash_table.offset + 720 + 12, 4);
    call write~int(2936013824, ~#flash_table.base, ~#flash_table.offset + 720 + 16, 4);
    call write~int(3, ~#flash_table.base, ~#flash_table.offset + 720 + 20, 4);
    call write~int(9, ~#flash_table.base, ~#flash_table.offset + 720 + 24, 4);
    call write~int(264, ~#flash_table.base, ~#flash_table.offset + 720 + 28, 4);
    call write~int(511, ~#flash_table.base, ~#flash_table.offset + 720 + 32, 4);
    call write~int(270336, ~#flash_table.base, ~#flash_table.offset + 720 + 36, 4);
    call #t~nondet508.base, #t~nondet508.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet508.base, #t~nondet508.offset, ~#flash_table.base, ~#flash_table.offset + 720 + 40, 8);
    havoc #t~nondet493.base, #t~nondet493.offset;
    havoc #t~nondet494.base, #t~nondet494.offset;
    havoc #t~nondet495.base, #t~nondet495.offset;
    havoc #t~nondet496.base, #t~nondet496.offset;
    havoc #t~nondet497.base, #t~nondet497.offset;
    havoc #t~nondet498.base, #t~nondet498.offset;
    havoc #t~nondet499.base, #t~nondet499.offset;
    havoc #t~nondet500.base, #t~nondet500.offset;
    havoc #t~nondet501.base, #t~nondet501.offset;
    havoc #t~nondet502.base, #t~nondet502.offset;
    havoc #t~nondet503.base, #t~nondet503.offset;
    havoc #t~nondet504.base, #t~nondet504.offset;
    havoc #t~nondet505.base, #t~nondet505.offset;
    havoc #t~nondet506.base, #t~nondet506.offset;
    havoc #t~nondet507.base, #t~nondet507.offset;
    havoc #t~nondet508.base, #t~nondet508.offset;
    call ~#flash_5709.base, ~#flash_5709.offset := #Ultimate.alloc(48);
    call write~int(0, ~#flash_5709.base, ~#flash_5709.offset + 0, 4);
    call write~int(0, ~#flash_5709.base, ~#flash_5709.offset + 4, 4);
    call write~int(0, ~#flash_5709.base, ~#flash_5709.offset + 8, 4);
    call write~int(0, ~#flash_5709.base, ~#flash_5709.offset + 12, 4);
    call write~int(0, ~#flash_5709.base, ~#flash_5709.offset + 16, 4);
    call write~int(1, ~#flash_5709.base, ~#flash_5709.offset + 20, 4);
    call write~int(8, ~#flash_5709.base, ~#flash_5709.offset + 24, 4);
    call write~int(256, ~#flash_5709.base, ~#flash_5709.offset + 28, 4);
    call write~int(255, ~#flash_5709.base, ~#flash_5709.offset + 32, 4);
    call write~int(270336, ~#flash_5709.base, ~#flash_5709.offset + 36, 4);
    call #t~nondet509.base, #t~nondet509.offset := #Ultimate.alloc(28);
    call write~$Pointer$(#t~nondet509.base, #t~nondet509.offset, ~#flash_5709.base, ~#flash_5709.offset + 40, 8);
    havoc #t~nondet509.base, #t~nondet509.offset;
    call ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset := #Ultimate.alloc(1504);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 2, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 3, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 4, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 5, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 6, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 7, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 8, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 9, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 10, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 11, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 12, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 0 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 2, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 3, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 4, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 5, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 6, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 7, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 8, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 9, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 10, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 11, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 12, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 32 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 2, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 3, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 4, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 5, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 6, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 7, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 8, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 9, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 10, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 11, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 12, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 64 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 2, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 3, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 4, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 5, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 6, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 7, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 8, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 9, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 10, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 11, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 12, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 96 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 2, 1);
    call write~int(117, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 3, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 4, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 5, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 6, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 7, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 8, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 9, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 10, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 11, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 12, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 13, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 14, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 128 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 2, 1);
    call write~int(109, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 3, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 4, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 5, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 6, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 7, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 8, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 9, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 10, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 11, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 12, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 13, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 14, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 160 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 2, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 3, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 4, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 5, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 6, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 7, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 8, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 9, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 10, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 11, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 12, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 13, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 14, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 192 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 2, 1);
    call write~int(117, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 3, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 4, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 5, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 6, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 7, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 8, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 9, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 10, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 11, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 12, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 13, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 14, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 224 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 2, 1);
    call write~int(109, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 3, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 4, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 5, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 6, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 7, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 8, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 9, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 10, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 11, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 12, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 13, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 14, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 256 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 2, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 3, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 4, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 5, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 6, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 7, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 8, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 9, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 10, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 11, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 12, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 13, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 14, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 288 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 2, 1);
    call write~int(109, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 3, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 4, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 5, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 6, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 7, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 8, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 9, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 10, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 11, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 12, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 320 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 2, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 3, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 4, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 5, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 6, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 7, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 8, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 9, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 10, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 11, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 12, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 13, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 14, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 15, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 352 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 2, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 3, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 4, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 5, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 6, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 7, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 8, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 9, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 10, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 11, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 12, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 384 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 2, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 3, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 4, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 5, 1);
    call write~int(103, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 6, 1);
    call write~int(110, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 7, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 8, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 9, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 10, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 11, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 12, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 13, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 416 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 2, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 3, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 4, 1);
    call write~int(110, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 5, 1);
    call write~int(103, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 6, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 7, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 8, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 9, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 10, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 11, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 12, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 13, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 14, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 15, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 16, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 17, 1);
    call write~int(110, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 18, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 448 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 2, 1);
    call write~int(109, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 3, 1);
    call write~int(117, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 4, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 5, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 6, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 7, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 8, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 9, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 10, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 11, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 12, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 13, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 14, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 15, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 16, 1);
    call write~int(110, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 17, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 480 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 2, 1);
    call write~int(100, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 3, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 4, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 5, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 6, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 7, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 8, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 9, 1);
    call write~int(100, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 10, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 11, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 12, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 512 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 2, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 3, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 4, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 5, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 6, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 7, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 8, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 9, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 10, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 11, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 12, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 13, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 14, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 15, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 16, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 17, 1);
    call write~int(110, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 18, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 544 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 2, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 3, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 4, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 5, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 6, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 7, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 8, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 9, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 10, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 11, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 12, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 13, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 14, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 15, 1);
    call write~int(110, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 16, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 576 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 2, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 3, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 4, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 5, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 6, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 7, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 8, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 9, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 10, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 11, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 12, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 13, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 14, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 15, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 16, 1);
    call write~int(110, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 17, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 608 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 2, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 3, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 4, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 5, 1);
    call write~int(103, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 6, 1);
    call write~int(109, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 7, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 8, 1);
    call write~int(110, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 9, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 10, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 11, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 12, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 640 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 2, 1);
    call write~int(106, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 3, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 4, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 5, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 6, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 7, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 8, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 9, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 10, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 11, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 12, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 672 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 2, 1);
    call write~int(117, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 3, 1);
    call write~int(110, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 4, 1);
    call write~int(100, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 5, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 6, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 7, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 8, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 9, 1);
    call write~int(122, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 10, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 11, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 12, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 13, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 14, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 15, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 16, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 17, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 18, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 704 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 2, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 3, 1);
    call write~int(118, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 4, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 5, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 6, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 7, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 8, 1);
    call write~int(122, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 9, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 10, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 11, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 12, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 13, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 14, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 15, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 16, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 17, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 736 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 2, 1);
    call write~int(54, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 3, 1);
    call write~int(52, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 4, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 5, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 6, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 7, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 8, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 9, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 10, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 11, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 12, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 13, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 14, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 15, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 16, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 768 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 2, 1);
    call write~int(54, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 3, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 4, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 5, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 6, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 7, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 8, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 9, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 10, 1);
    call write~int(55, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 11, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 12, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 13, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 14, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 15, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 16, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 17, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 18, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 19, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 20, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 21, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 22, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 23, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 800 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 2, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 3, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 4, 1);
    call write~int(56, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 5, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 6, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 7, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 8, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 9, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 10, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 11, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 12, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 13, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 14, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 15, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 16, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 17, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 18, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 19, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 20, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 21, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 22, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 23, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 24, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 832 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 2, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 3, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 4, 1);
    call write~int(54, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 5, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 6, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 7, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 8, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 9, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 10, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 11, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 12, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 13, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 14, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 15, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 16, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 17, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 18, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 19, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 20, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 21, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 22, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 23, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 24, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 864 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 2, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 3, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 4, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 5, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 6, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 7, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 8, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 9, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 10, 1);
    call write~int(48, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 11, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 12, 1);
    call write~int(51, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 13, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 14, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 15, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 16, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 17, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 18, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 19, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 20, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 21, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 22, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 23, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 24, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 25, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 896 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 2, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 3, 1);
    call write~int(48, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 4, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 5, 1);
    call write~int(52, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 6, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 7, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 8, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 9, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 10, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 11, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 12, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 13, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 14, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 15, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 16, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 17, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 18, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 19, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 20, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 21, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 22, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 23, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 24, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 25, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 26, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 928 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 2, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 3, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 4, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 5, 1);
    call write~int(51, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 6, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 7, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 8, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 9, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 10, 1);
    call write~int(57, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 11, 1);
    call write~int(48, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 12, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 13, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 14, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 15, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 16, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 17, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 18, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 19, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 20, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 21, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 22, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 23, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 24, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 25, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 26, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 960 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 2, 1);
    call write~int(54, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 3, 1);
    call write~int(52, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 4, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 5, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 6, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 7, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 8, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 9, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 10, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 11, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 12, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 13, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 14, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 15, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 16, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 992 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 2, 1);
    call write~int(54, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 3, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 4, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 5, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 6, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 7, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 8, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 9, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 10, 1);
    call write~int(55, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 11, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 12, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 13, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 14, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 15, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 16, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 17, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 18, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 19, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 20, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 21, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 22, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 23, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1024 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 2, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 3, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 4, 1);
    call write~int(56, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 5, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 6, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 7, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 8, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 9, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 10, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 11, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 12, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 13, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 14, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 15, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 16, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 17, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 18, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 19, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 20, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 21, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 22, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 23, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 24, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1056 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 2, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 3, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 4, 1);
    call write~int(54, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 5, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 6, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 7, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 8, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 9, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 10, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 11, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 12, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 13, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 14, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 15, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 16, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 17, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 18, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 19, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 20, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 21, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 22, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 23, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 24, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1088 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 2, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 3, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 4, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 5, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 6, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 7, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 8, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 9, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 10, 1);
    call write~int(48, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 11, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 12, 1);
    call write~int(51, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 13, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 14, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 15, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 16, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 17, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 18, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 19, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 20, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 21, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 22, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 23, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 24, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 25, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1120 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 2, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 3, 1);
    call write~int(48, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 4, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 5, 1);
    call write~int(52, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 6, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 7, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 8, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 9, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 10, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 11, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 12, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 13, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 14, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 15, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 16, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 17, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 18, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 19, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 20, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 21, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 22, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 23, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 24, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 25, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 26, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1152 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 2, 1);
    call write~int(49, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 3, 1);
    call write~int(53, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 4, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 5, 1);
    call write~int(51, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 6, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 7, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 8, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 9, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 10, 1);
    call write~int(57, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 11, 1);
    call write~int(48, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 12, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 13, 1);
    call write~int(50, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 14, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 15, 1);
    call write~int(98, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 16, 1);
    call write~int(121, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 17, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 18, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 19, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 20, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 21, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 22, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 23, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 24, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 25, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 26, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1184 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 2, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 3, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 4, 1);
    call write~int(110, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 5, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 6, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 7, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 8, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 9, 1);
    call write~int(109, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 10, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 11, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 12, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1216 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 2, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 3, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 4, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 5, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 6, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 7, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 8, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 9, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 10, 1);
    call write~int(109, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 11, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 12, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1248 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 2, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 3, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 4, 1);
    call write~int(110, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 5, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 6, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 7, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 8, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 9, 1);
    call write~int(109, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 10, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 11, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 12, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1280 + 0 + 31, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 2, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 3, 1);
    call write~int(111, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 4, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 5, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 6, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 7, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 8, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 9, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 10, 1);
    call write~int(109, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 11, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 12, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1312 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 2, 1);
    call write~int(109, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 3, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 4, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 5, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 6, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 7, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 8, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 9, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 10, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 11, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 12, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 13, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 14, 1);
    call write~int(109, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 15, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 16, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1344 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 2, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 3, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 4, 1);
    call write~int(108, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 5, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 6, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 7, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 8, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 9, 1);
    call write~int(100, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 10, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 11, 1);
    call write~int(112, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 12, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 13, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 14, 1);
    call write~int(107, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 15, 1);
    call write~int(101, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 16, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 17, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1376 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 2, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 3, 1);
    call write~int(116, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 4, 1);
    call write~int(113, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 5, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 6, 1);
    call write~int(100, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 7, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 8, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 9, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 10, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 11, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 12, 1);
    call write~int(100, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 13, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1408 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 2, 1);
    call write~int(100, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 3, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 4, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 5, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 6, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 7, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 8, 1);
    call write~int(100, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 9, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 10, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 11, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 12, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1440 + 0 + 31, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 0, 1);
    call write~int(120, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 1, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 2, 1);
    call write~int(102, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 3, 1);
    call write~int(119, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 4, 1);
    call write~int(95, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 5, 1);
    call write~int(100, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 6, 1);
    call write~int(105, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 7, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 8, 1);
    call write~int(99, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 9, 1);
    call write~int(97, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 10, 1);
    call write~int(114, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 11, 1);
    call write~int(100, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 12, 1);
    call write~int(115, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 13, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 14, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 15, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 16, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 17, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 18, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 19, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 20, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 21, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 22, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 23, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 24, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 25, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 26, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 27, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 28, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 29, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 30, 1);
    call write~int(0, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset + 1472 + 0 + 31, 1);
    call ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset := #Ultimate.alloc(47);
    call write~int(8, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 0, 1);
    call write~int(0, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 1, 1);
    call write~int(8, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 2, 1);
    call write~int(8, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 3, 1);
    call write~int(8, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 4, 1);
    call write~int(8, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 5, 1);
    call write~int(8, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 6, 1);
    call write~int(8, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 7, 1);
    call write~int(8, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 8, 1);
    call write~int(8, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 9, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 10, 1);
    call write~int(0, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 11, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 12, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 13, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 14, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 15, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 16, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 17, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 18, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 19, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 20, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 21, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 22, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 23, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 24, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 25, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 26, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 27, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 28, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 29, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 30, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 31, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 32, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 33, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 34, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 35, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 36, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 37, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 38, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 39, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 40, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 41, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 42, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 43, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 44, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 45, 1);
    call write~int(4, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset + 46, 1);
    call ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset := #Ultimate.alloc(47);
    call write~int(8, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 0, 1);
    call write~int(0, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 1, 1);
    call write~int(8, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 2, 1);
    call write~int(8, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 3, 1);
    call write~int(8, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 4, 1);
    call write~int(8, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 5, 1);
    call write~int(8, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 6, 1);
    call write~int(8, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 7, 1);
    call write~int(8, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 8, 1);
    call write~int(8, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 9, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 10, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 11, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 12, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 13, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 14, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 15, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 16, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 17, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 18, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 19, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 20, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 21, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 22, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 23, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 24, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 25, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 26, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 27, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 28, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 29, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 30, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 31, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 32, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 33, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 34, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 35, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 36, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 37, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 38, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 39, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 40, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 41, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 42, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 43, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 44, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 45, 1);
    call write~int(4, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset + 46, 1);
    call ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset := #Ultimate.alloc(192);
    call write~int(114, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 0, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 1, 1);
    call write~int(103, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 2, 1);
    call write~int(105, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 3, 1);
    call write~int(115, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 4, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 5, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 6, 1);
    call write~int(114, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 7, 1);
    call write~int(95, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 8, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 9, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 10, 1);
    call write~int(115, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 11, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 12, 1);
    call write~int(32, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 13, 1);
    call write~int(40, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 14, 1);
    call write~int(111, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 15, 1);
    call write~int(102, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 16, 1);
    call write~int(102, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 17, 1);
    call write~int(108, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 18, 1);
    call write~int(105, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 19, 1);
    call write~int(110, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 20, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 21, 1);
    call write~int(41, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 22, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 23, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 24, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 25, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 26, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 27, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 28, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 29, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 30, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 0 + 0 + 31, 1);
    call write~int(109, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 0, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 1, 1);
    call write~int(109, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 2, 1);
    call write~int(111, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 3, 1);
    call write~int(114, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 4, 1);
    call write~int(121, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 5, 1);
    call write~int(95, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 6, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 7, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 8, 1);
    call write~int(115, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 9, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 10, 1);
    call write~int(32, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 11, 1);
    call write~int(40, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 12, 1);
    call write~int(111, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 13, 1);
    call write~int(102, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 14, 1);
    call write~int(102, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 15, 1);
    call write~int(108, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 16, 1);
    call write~int(105, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 17, 1);
    call write~int(110, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 18, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 19, 1);
    call write~int(41, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 20, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 21, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 22, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 23, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 24, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 25, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 26, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 27, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 28, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 29, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 30, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 32 + 0 + 31, 1);
    call write~int(108, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 0, 1);
    call write~int(111, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 1, 1);
    call write~int(111, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 2, 1);
    call write~int(112, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 3, 1);
    call write~int(98, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 4, 1);
    call write~int(97, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 5, 1);
    call write~int(99, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 6, 1);
    call write~int(107, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 7, 1);
    call write~int(95, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 8, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 9, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 10, 1);
    call write~int(115, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 11, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 12, 1);
    call write~int(32, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 13, 1);
    call write~int(40, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 14, 1);
    call write~int(111, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 15, 1);
    call write~int(102, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 16, 1);
    call write~int(102, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 17, 1);
    call write~int(108, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 18, 1);
    call write~int(105, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 19, 1);
    call write~int(110, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 20, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 21, 1);
    call write~int(41, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 22, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 23, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 24, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 25, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 26, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 27, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 28, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 29, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 30, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 64 + 0 + 31, 1);
    call write~int(110, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 0, 1);
    call write~int(118, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 1, 1);
    call write~int(114, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 2, 1);
    call write~int(97, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 3, 1);
    call write~int(109, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 4, 1);
    call write~int(95, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 5, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 6, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 7, 1);
    call write~int(115, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 8, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 9, 1);
    call write~int(32, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 10, 1);
    call write~int(40, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 11, 1);
    call write~int(111, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 12, 1);
    call write~int(110, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 13, 1);
    call write~int(108, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 14, 1);
    call write~int(105, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 15, 1);
    call write~int(110, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 16, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 17, 1);
    call write~int(41, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 18, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 19, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 20, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 21, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 22, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 23, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 24, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 25, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 26, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 27, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 28, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 29, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 30, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 96 + 0 + 31, 1);
    call write~int(105, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 0, 1);
    call write~int(110, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 1, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 2, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 3, 1);
    call write~int(114, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 4, 1);
    call write~int(114, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 5, 1);
    call write~int(117, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 6, 1);
    call write~int(112, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 7, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 8, 1);
    call write~int(95, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 9, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 10, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 11, 1);
    call write~int(115, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 12, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 13, 1);
    call write~int(32, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 14, 1);
    call write~int(40, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 15, 1);
    call write~int(111, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 16, 1);
    call write~int(110, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 17, 1);
    call write~int(108, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 18, 1);
    call write~int(105, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 19, 1);
    call write~int(110, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 20, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 21, 1);
    call write~int(41, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 22, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 23, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 24, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 25, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 26, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 27, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 28, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 29, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 30, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 128 + 0 + 31, 1);
    call write~int(108, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 0, 1);
    call write~int(105, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 1, 1);
    call write~int(110, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 2, 1);
    call write~int(107, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 3, 1);
    call write~int(95, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 4, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 5, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 6, 1);
    call write~int(115, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 7, 1);
    call write~int(116, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 8, 1);
    call write~int(32, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 9, 1);
    call write~int(40, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 10, 1);
    call write~int(111, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 11, 1);
    call write~int(110, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 12, 1);
    call write~int(108, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 13, 1);
    call write~int(105, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 14, 1);
    call write~int(110, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 15, 1);
    call write~int(101, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 16, 1);
    call write~int(41, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 17, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 18, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 19, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 20, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 21, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 22, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 23, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 24, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 25, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 26, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 27, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 28, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 29, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 30, 1);
    call write~int(0, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset + 160 + 0 + 31, 1);
    call ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset := #Ultimate.alloc(392);
    call write~$Pointer$(#funAddr~bnx2_get_settings.base, #funAddr~bnx2_get_settings.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~bnx2_set_settings.base, #funAddr~bnx2_set_settings.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~bnx2_get_drvinfo.base, #funAddr~bnx2_get_drvinfo.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~bnx2_get_regs_len.base, #funAddr~bnx2_get_regs_len.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~bnx2_get_regs.base, #funAddr~bnx2_get_regs.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 32, 8);
    call write~$Pointer$(#funAddr~bnx2_get_wol.base, #funAddr~bnx2_get_wol.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 40, 8);
    call write~$Pointer$(#funAddr~bnx2_set_wol.base, #funAddr~bnx2_set_wol.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 64, 8);
    call write~$Pointer$(#funAddr~bnx2_nway_reset.base, #funAddr~bnx2_nway_reset.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 72, 8);
    call write~$Pointer$(#funAddr~bnx2_get_link.base, #funAddr~bnx2_get_link.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 80, 8);
    call write~$Pointer$(#funAddr~bnx2_get_eeprom_len.base, #funAddr~bnx2_get_eeprom_len.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 88, 8);
    call write~$Pointer$(#funAddr~bnx2_get_eeprom.base, #funAddr~bnx2_get_eeprom.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 96, 8);
    call write~$Pointer$(#funAddr~bnx2_set_eeprom.base, #funAddr~bnx2_set_eeprom.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 104, 8);
    call write~$Pointer$(#funAddr~bnx2_get_coalesce.base, #funAddr~bnx2_get_coalesce.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 112, 8);
    call write~$Pointer$(#funAddr~bnx2_set_coalesce.base, #funAddr~bnx2_set_coalesce.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 120, 8);
    call write~$Pointer$(#funAddr~bnx2_get_ringparam.base, #funAddr~bnx2_get_ringparam.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 128, 8);
    call write~$Pointer$(#funAddr~bnx2_set_ringparam.base, #funAddr~bnx2_set_ringparam.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 136, 8);
    call write~$Pointer$(#funAddr~bnx2_get_pauseparam.base, #funAddr~bnx2_get_pauseparam.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 144, 8);
    call write~$Pointer$(#funAddr~bnx2_set_pauseparam.base, #funAddr~bnx2_set_pauseparam.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 152, 8);
    call write~$Pointer$(#funAddr~bnx2_self_test.base, #funAddr~bnx2_self_test.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 160, 8);
    call write~$Pointer$(#funAddr~bnx2_get_strings.base, #funAddr~bnx2_get_strings.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 168, 8);
    call write~$Pointer$(#funAddr~bnx2_set_phys_id.base, #funAddr~bnx2_set_phys_id.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 176, 8);
    call write~$Pointer$(#funAddr~bnx2_get_ethtool_stats.base, #funAddr~bnx2_get_ethtool_stats.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 216, 8);
    call write~$Pointer$(#funAddr~bnx2_get_sset_count.base, #funAddr~bnx2_get_sset_count.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 288, 8);
    call write~$Pointer$(#funAddr~bnx2_get_channels.base, #funAddr~bnx2_get_channels.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 296, 8);
    call write~$Pointer$(#funAddr~bnx2_set_channels.base, #funAddr~bnx2_set_channels.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset + 384, 8);
    call ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset := #Ultimate.alloc(528);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~bnx2_open.base, #funAddr~bnx2_open.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~bnx2_close.base, #funAddr~bnx2_close.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~bnx2_start_xmit.base, #funAddr~bnx2_start_xmit.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~bnx2_set_rx_mode.base, #funAddr~bnx2_set_rx_mode.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~bnx2_change_mac_addr.base, #funAddr~bnx2_change_mac_addr.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 64, 8);
    call write~$Pointer$(#funAddr~eth_validate_addr.base, #funAddr~eth_validate_addr.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 72, 8);
    call write~$Pointer$(#funAddr~bnx2_ioctl.base, #funAddr~bnx2_ioctl.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 88, 8);
    call write~$Pointer$(#funAddr~bnx2_change_mtu.base, #funAddr~bnx2_change_mtu.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 104, 8);
    call write~$Pointer$(#funAddr~bnx2_tx_timeout.base, #funAddr~bnx2_tx_timeout.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 112, 8);
    call write~$Pointer$(#funAddr~bnx2_get_stats64.base, #funAddr~bnx2_get_stats64.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 144, 8);
    call write~$Pointer$(#funAddr~poll_bnx2.base, #funAddr~poll_bnx2.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 352, 8);
    call write~$Pointer$(#funAddr~bnx2_set_features.base, #funAddr~bnx2_set_features.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 408, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 416, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 424, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 432, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 440, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 448, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 464, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 472, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 480, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 488, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 496, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 504, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 512, 8);
    call write~$Pointer$(0, 0, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset + 520, 8);
    call ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset := #Ultimate.alloc(184);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~bnx2_suspend.base, #funAddr~bnx2_suspend.offset, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~bnx2_resume.base, #funAddr~bnx2_resume.offset, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~bnx2_suspend.base, #funAddr~bnx2_suspend.offset, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 32, 8);
    call write~$Pointer$(#funAddr~bnx2_resume.base, #funAddr~bnx2_resume.offset, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 40, 8);
    call write~$Pointer$(#funAddr~bnx2_suspend.base, #funAddr~bnx2_suspend.offset, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~bnx2_resume.base, #funAddr~bnx2_resume.offset, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset + 176, 8);
    call ~#bnx2_err_handler.base, ~#bnx2_err_handler.offset := #Ultimate.alloc(48);
    call write~$Pointer$(#funAddr~bnx2_io_error_detected.base, #funAddr~bnx2_io_error_detected.offset, ~#bnx2_err_handler.base, ~#bnx2_err_handler.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#bnx2_err_handler.base, ~#bnx2_err_handler.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#bnx2_err_handler.base, ~#bnx2_err_handler.offset + 16, 8);
    call write~$Pointer$(#funAddr~bnx2_io_slot_reset.base, #funAddr~bnx2_io_slot_reset.offset, ~#bnx2_err_handler.base, ~#bnx2_err_handler.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#bnx2_err_handler.base, ~#bnx2_err_handler.offset + 32, 8);
    call write~$Pointer$(#funAddr~bnx2_io_resume.base, #funAddr~bnx2_io_resume.offset, ~#bnx2_err_handler.base, ~#bnx2_err_handler.offset + 40, 8);
    call ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset := #Ultimate.alloc(305);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 0 + 8, 8);
    call #t~nondet4165.base, #t~nondet4165.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet4165.base,#t~nondet4165.offset + 0 := 98];
    #memory_int := #memory_int[#t~nondet4165.base,#t~nondet4165.offset + 1 := 110];
    #memory_int := #memory_int[#t~nondet4165.base,#t~nondet4165.offset + 2 := 120];
    #memory_int := #memory_int[#t~nondet4165.base,#t~nondet4165.offset + 3 := 50];
    #memory_int := #memory_int[#t~nondet4165.base,#t~nondet4165.offset + 4 := 0];
    call write~$Pointer$(#t~nondet4165.base, #t~nondet4165.offset, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 16, 8);
    call write~$Pointer$(~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 24, 8);
    call write~$Pointer$(#funAddr~bnx2_init_one.base, #funAddr~bnx2_init_one.offset, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 32, 8);
    call write~$Pointer$(#funAddr~bnx2_remove_one.base, #funAddr~bnx2_remove_one.offset, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 72, 8);
    call write~$Pointer$(#funAddr~bnx2_shutdown.base, #funAddr~bnx2_shutdown.offset, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 88, 8);
    call write~$Pointer$(~#bnx2_err_handler.base, ~#bnx2_err_handler.offset, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 0, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 8, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 16, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 24, 8);
    call write~int(0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 32, 1);
    call write~int(0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 33, 4);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 37, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 45, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 53, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 61, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 69, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 77, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 85, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 93, 8);
    call write~$Pointer$(~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 101, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 104 + 109, 8);
    call write~int(0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union4323.__padding[0], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union4323.__padding[1], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union4323.__padding[2], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[3], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[4], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[5], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[6], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[7], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[8], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[9], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[10], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[11], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[12], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[13], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[14], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[15], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[16], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[17], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[18], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[19], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[20], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[21], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[22], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4323.__padding[23], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union4323.dep_map.key.base, #t~union4323.dep_map.key.offset, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union4323.dep_map.class_cache.base[0], #t~union4323.dep_map.class_cache.offset[0], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union4323.dep_map.class_cache.base[1], #t~union4323.dep_map.class_cache.offset[1], ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union4323.dep_map.name.base, #t~union4323.dep_map.name.offset, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union4323.dep_map.cpu, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union4323.dep_map.ip, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset + 221 + 68 + 8, 8);
    havoc #t~nondet4165.base, #t~nondet4165.offset;
    havoc #t~union4323.__padding, #t~union4323.dep_map.key.base, #t~union4323.dep_map.key.offset, #t~union4323.dep_map.class_cache.base, #t~union4323.dep_map.class_cache.offset, #t~union4323.dep_map.name.base, #t~union4323.dep_map.name.offset, #t~union4323.dep_map.cpu, #t~union4323.dep_map.ip;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_work_1_3, ~ldv_state_variable_6, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_state_variable_2, ~ldv_work_1_1, ~ldv_work_1_2, ~LDV_IN_INTERRUPT, ~ldv_timer_state_2, ~ldv_state_variable_3, ~ref_cnt, ~ldv_work_1_0, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_state_variable_4, ~#version.base, ~#version.offset, ~disable_msi, ~bnx2_stats_offset_arr, ~ldv_retval_20, ~ldv_retval_18, ~ldv_retval_2, ~ldv_retval_5, ~ldv_retval_0, ~ldv_retval_11, ~ldv_retval_1, ~ldv_retval_22, ~ldv_retval_15, ~ldv_retval_16, ~ldv_retval_8, ~ldv_retval_7, ~ldv_retval_19, ~ldv_retval_14, ~ldv_retval_17, ~ldv_retval_12, ~ldv_retval_6, ~ldv_retval_21, ~ldv_retval_13, ~ldv_retval_9, ~ldv_retval_10, ~ldv_retval_4, ~ldv_retval_3, ~ldv_mutex_cnic_lock_of_bnx2, ~ldv_mutex_i_mutex_of_inode, ~ldv_mutex_lock, ~ldv_mutex_mutex_of_device, ~bnx2_ethtool_ops_group2.base, ~bnx2_ethtool_ops_group2.offset, ~ldv_work_struct_1_0.base, ~ldv_work_struct_1_0.offset, ~ldv_work_struct_1_1.base, ~ldv_work_struct_1_1.offset, ~ldv_work_struct_1_3.base, ~ldv_work_struct_1_3.offset, ~bnx2_pm_ops_group1.base, ~bnx2_pm_ops_group1.offset, ~bnx2_pci_driver_group1.base, ~bnx2_pci_driver_group1.offset, ~bnx2_ethtool_ops_group0.base, ~bnx2_ethtool_ops_group0.offset, ~bnx2_netdev_ops_group1.base, ~bnx2_netdev_ops_group1.offset, ~bnx2_err_handler_group0.base, ~bnx2_err_handler_group0.offset, ~bnx2_ethtool_ops_group3.base, ~bnx2_ethtool_ops_group3.offset, ~ldv_work_struct_1_2.base, ~ldv_work_struct_1_2.offset, ~bnx2_ethtool_ops_group5.base, ~bnx2_ethtool_ops_group5.offset, ~ldv_timer_list_2.base, ~ldv_timer_list_2.offset, ~bnx2_ethtool_ops_group4.base, ~bnx2_ethtool_ops_group4.offset, ~bnx2_ethtool_ops_group7.base, ~bnx2_ethtool_ops_group7.offset, ~bnx2_ethtool_ops_group6.base, ~bnx2_ethtool_ops_group6.offset, ~bnx2_ethtool_ops_group1.base, ~bnx2_ethtool_ops_group1.offset, ~#cpu_reg_com.base, ~#cpu_reg_com.offset, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset, ~board_info.name.base, ~board_info.name.offset, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset, ~#flash_table.base, ~#flash_table.offset, ~#flash_5709.base, ~#flash_5709.offset, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset, ~#bnx2_err_handler.base, ~#bnx2_err_handler.offset, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation invoke_work_1() returns (){
    var #t~nondet4186 : int;
    var #t~switch4187 : bool;
    var ~tmp~2863 : int;

  loc15:
    havoc ~tmp~2863;
    assume -2147483648 <= #t~nondet4186 && #t~nondet4186 <= 2147483647;
    ~tmp~2863 := #t~nondet4186;
    havoc #t~nondet4186;
    #t~switch4187 := ~tmp~2863 == 0;
    assume !#t~switch4187;
    #t~switch4187 := #t~switch4187 || ~tmp~2863 == 1;
    assume #t~switch4187;
    assume ~ldv_work_1_1 == 2 || ~ldv_work_1_1 == 3;
    ~ldv_work_1_1 := 4;
    call bnx2_reset_task(~ldv_work_struct_1_0.base, ~ldv_work_struct_1_0.offset);
    return;
}

procedure invoke_work_1() returns ();
modifies ~ldv_work_1_0, ~ldv_work_1_1, ~ldv_work_1_2, ~ldv_work_1_3, #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_timer_list_2.base, ~ldv_timer_list_2.offset, ~ldv_timer_state_2, ~ldv_mutex_cnic_lock_of_bnx2, ~ldv_state_variable_6, ~bnx2_netdev_ops_group1.base, ~bnx2_netdev_ops_group1.offset, ~disable_msi;

implementation ldv_error() returns (){
  loc16:
    assume !false;
    goto loc17;
  loc17:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation bnx2_reset_task(#in~work.base : int, #in~work.offset : int) returns (){
    var #t~mem3022.base : int, #t~mem3022.offset : int;
    var #t~ret3023 : ~bool;
    var #t~mem3024.base : int, #t~mem3024.offset : int;
    var #t~ret3025 : int;
    var #t~mem3026 : int;
    var #t~mem3027.base : int, #t~mem3027.offset : int;
    var #t~mem3028.base : int, #t~mem3028.offset : int;
    var #t~ret3029 : int;
    var #t~ret3030 : int;
    var #t~mem3031.base : int, #t~mem3031.offset : int;
    var #t~nondet3032.base : int, #t~nondet3032.offset : int;
    var #t~mem3033.base : int, #t~mem3033.offset : int;
    var #t~ret3034 : int;
    var ~work.base : int, ~work.offset : int;
    var ~bp~2240.base : int, ~bp~2240.offset : int;
    var ~__mptr~2240.base : int, ~__mptr~2240.offset : int;
    var ~rc~2240 : int;
    var ~#pcicmd~2240.base : int, ~#pcicmd~2240.offset : int;
    var ~tmp~2240 : ~bool;
    var ~tmp___0~2240 : int;

  loc18:
    ~work.base, ~work.offset := #in~work.base, #in~work.offset;
    havoc ~bp~2240.base, ~bp~2240.offset;
    havoc ~__mptr~2240.base, ~__mptr~2240.offset;
    havoc ~rc~2240;
    call ~#pcicmd~2240.base, ~#pcicmd~2240.offset := #Ultimate.alloc(2);
    havoc ~tmp~2240;
    havoc ~tmp___0~2240;
    ~__mptr~2240.base, ~__mptr~2240.offset := ~work.base, ~work.offset;
    ~bp~2240.base, ~bp~2240.offset := ~__mptr~2240.base, ~__mptr~2240.offset + -109064520;
    call rtnl_lock();
    call #t~mem3022.base, #t~mem3022.offset := read~$Pointer$(~bp~2240.base, ~bp~2240.offset + 8, 8);
    call #t~ret3023 := netif_running(#t~mem3022.base, #t~mem3022.offset);
    ~tmp~2240 := #t~ret3023;
    havoc #t~mem3022.base, #t~mem3022.offset;
    havoc #t~ret3023;
    assume ~tmp~2240 % 256 != 0;
    ~tmp___0~2240 := 0;
    assume !(~tmp___0~2240 != 0);
    call bnx2_netif_stop(~bp~2240.base, ~bp~2240.offset, 1);
    return;
}

procedure bnx2_reset_task(#in~work.base : int, #in~work.offset : int) returns ();
modifies #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_timer_list_2.base, ~ldv_timer_list_2.offset, ~ldv_timer_state_2, ~ldv_mutex_cnic_lock_of_bnx2, ~ldv_state_variable_6, ~bnx2_netdev_ops_group1.base, ~bnx2_netdev_ops_group1.offset, ~disable_msi;

implementation constant_test_bit(#in~nr : int, #in~addr.base : int, #in~addr.offset : int) returns (#res : int){
    var #t~mem11 : int;
    var ~nr : int;
    var ~addr.base : int, ~addr.offset : int;

  loc19:
    ~nr := #in~nr;
    ~addr.base, ~addr.offset := #in~addr.base, #in~addr.offset;
    call #t~mem11 := read~int(~addr.base, ~addr.offset + (if ~shiftRight(~nr, 6) % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~shiftRight(~nr, 6) % 18446744073709551616 % 18446744073709551616 else ~shiftRight(~nr, 6) % 18446744073709551616 % 18446744073709551616 - 18446744073709551616) * 8, 8);
    #res := ~bitwiseAnd((if ~shiftRight(#t~mem11, ~bitwiseAnd((if ~nr % 4294967296 <= 2147483647 then ~nr % 4294967296 else ~nr % 4294967296 - 4294967296), 63)) % 18446744073709551616 % 4294967296 <= 2147483647 then ~shiftRight(#t~mem11, ~bitwiseAnd((if ~nr % 4294967296 <= 2147483647 then ~nr % 4294967296 else ~nr % 4294967296 - 4294967296), 63)) % 18446744073709551616 % 4294967296 else ~shiftRight(#t~mem11, ~bitwiseAnd((if ~nr % 4294967296 <= 2147483647 then ~nr % 4294967296 else ~nr % 4294967296 - 4294967296), 63)) % 18446744073709551616 % 4294967296 - 4294967296), 1);
    havoc #t~mem11;
    assume true;
    return;
}

procedure constant_test_bit(#in~nr : int, #in~addr.base : int, #in~addr.offset : int) returns (#res : int);
modifies ;

implementation ULTIMATE.start() returns (){
    var #t~ret4324 : int;

  loc20:
    call ULTIMATE.init();
    call #t~ret4324 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_work_1_3, ~ldv_state_variable_6, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_state_variable_2, ~ldv_work_1_1, ~ldv_work_1_2, ~LDV_IN_INTERRUPT, ~ldv_timer_state_2, ~ldv_state_variable_3, ~ref_cnt, ~ldv_work_1_0, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_state_variable_4, ~#version.base, ~#version.offset, ~disable_msi, ~bnx2_stats_offset_arr, ~ldv_retval_20, ~ldv_retval_18, ~ldv_retval_2, ~ldv_retval_5, ~ldv_retval_0, ~ldv_retval_11, ~ldv_retval_1, ~ldv_retval_22, ~ldv_retval_15, ~ldv_retval_16, ~ldv_retval_8, ~ldv_retval_7, ~ldv_retval_19, ~ldv_retval_14, ~ldv_retval_17, ~ldv_retval_12, ~ldv_retval_6, ~ldv_retval_21, ~ldv_retval_13, ~ldv_retval_9, ~ldv_retval_10, ~ldv_retval_4, ~ldv_retval_3, ~ldv_mutex_cnic_lock_of_bnx2, ~ldv_mutex_i_mutex_of_inode, ~ldv_mutex_lock, ~ldv_mutex_mutex_of_device, ~bnx2_ethtool_ops_group2.base, ~bnx2_ethtool_ops_group2.offset, ~ldv_work_struct_1_0.base, ~ldv_work_struct_1_0.offset, ~ldv_work_struct_1_1.base, ~ldv_work_struct_1_1.offset, ~ldv_work_struct_1_3.base, ~ldv_work_struct_1_3.offset, ~bnx2_pm_ops_group1.base, ~bnx2_pm_ops_group1.offset, ~bnx2_pci_driver_group1.base, ~bnx2_pci_driver_group1.offset, ~bnx2_ethtool_ops_group0.base, ~bnx2_ethtool_ops_group0.offset, ~bnx2_netdev_ops_group1.base, ~bnx2_netdev_ops_group1.offset, ~bnx2_err_handler_group0.base, ~bnx2_err_handler_group0.offset, ~bnx2_ethtool_ops_group3.base, ~bnx2_ethtool_ops_group3.offset, ~ldv_work_struct_1_2.base, ~ldv_work_struct_1_2.offset, ~bnx2_ethtool_ops_group5.base, ~bnx2_ethtool_ops_group5.offset, ~ldv_timer_list_2.base, ~ldv_timer_list_2.offset, ~bnx2_ethtool_ops_group4.base, ~bnx2_ethtool_ops_group4.offset, ~bnx2_ethtool_ops_group7.base, ~bnx2_ethtool_ops_group7.offset, ~bnx2_ethtool_ops_group6.base, ~bnx2_ethtool_ops_group6.offset, ~bnx2_ethtool_ops_group1.base, ~bnx2_ethtool_ops_group1.offset, ~#cpu_reg_com.base, ~#cpu_reg_com.offset, ~#cpu_reg_cp.base, ~#cpu_reg_cp.offset, ~#cpu_reg_rxp.base, ~#cpu_reg_rxp.offset, ~#cpu_reg_tpat.base, ~#cpu_reg_tpat.offset, ~#cpu_reg_txp.base, ~#cpu_reg_txp.offset, ~board_info.name.base, ~board_info.name.offset, ~#bnx2_pci_tbl.base, ~#bnx2_pci_tbl.offset, ~#flash_table.base, ~#flash_table.offset, ~#flash_5709.base, ~#flash_5709.offset, ~#bnx2_stats_str_arr.base, ~#bnx2_stats_str_arr.offset, ~#bnx2_5706_stats_len_arr.base, ~#bnx2_5706_stats_len_arr.offset, ~#bnx2_5708_stats_len_arr.base, ~#bnx2_5708_stats_len_arr.offset, ~#bnx2_tests_str_arr.base, ~#bnx2_tests_str_arr.offset, ~#bnx2_ethtool_ops.base, ~#bnx2_ethtool_ops.offset, ~#bnx2_netdev_ops.base, ~#bnx2_netdev_ops.offset, ~#bnx2_pm_ops.base, ~#bnx2_pm_ops.offset, ~#bnx2_err_handler.base, ~#bnx2_err_handler.offset, ~#bnx2_pci_driver.base, ~#bnx2_pci_driver.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_2, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_2, ~ldv_retval_3, ~ldv_retval_22, ~ldv_retval_21, ~ldv_retval_20, ~ldv_retval_19, ~ldv_retval_18, ~ldv_retval_17, ~ldv_retval_16, ~ldv_retval_15, ~ldv_retval_14, ~ldv_retval_13, ~ldv_retval_12, ~ldv_retval_11, ~ldv_retval_10, ~ldv_retval_9, ~ldv_retval_8, ~ldv_retval_7, ~ldv_retval_6, ~ldv_retval_5, ~ldv_retval_4;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~bnx2_err_handler_group0.base, ~bnx2_err_handler_group0.offset, ~ldv_work_1_0, ~ldv_work_1_1, ~ldv_work_1_2, ~ldv_work_1_3, ~bnx2_ethtool_ops_group0.base, ~bnx2_ethtool_ops_group0.offset, ~bnx2_ethtool_ops_group2.base, ~bnx2_ethtool_ops_group2.offset, ~bnx2_ethtool_ops_group1.base, ~bnx2_ethtool_ops_group1.offset, ~bnx2_ethtool_ops_group3.base, ~bnx2_ethtool_ops_group3.offset, ~bnx2_ethtool_ops_group4.base, ~bnx2_ethtool_ops_group4.offset, ~bnx2_ethtool_ops_group5.base, ~bnx2_ethtool_ops_group5.offset, ~bnx2_ethtool_ops_group6.base, ~bnx2_ethtool_ops_group6.offset, ~bnx2_ethtool_ops_group7.base, ~bnx2_ethtool_ops_group7.offset, ~bnx2_pm_ops_group1.base, ~bnx2_pm_ops_group1.offset, ~ldv_state_variable_3, ~ldv_timer_state_2, ~ldv_state_variable_6, ~bnx2_pci_driver_group1.base, ~bnx2_pci_driver_group1.offset, ~ldv_work_struct_1_0.base, ~ldv_work_struct_1_0.offset, ~ldv_work_struct_1_1.base, ~ldv_work_struct_1_1.offset, ~ldv_work_struct_1_2.base, ~ldv_work_struct_1_2.offset, ~ldv_work_struct_1_3.base, ~ldv_work_struct_1_3.offset, ~bnx2_netdev_ops_group1.base, ~bnx2_netdev_ops_group1.offset, ~ldv_timer_list_2.base, ~ldv_timer_list_2.offset, ~disable_msi, ~LDV_IN_INTERRUPT, ~ldv_mutex_cnic_lock_of_bnx2, ~ldv_state_variable_7, ~ldv_state_variable_2, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_2, ~ldv_retval_3, ~ldv_retval_22, ~ldv_retval_21, ~ldv_retval_20, ~ldv_retval_19, ~ldv_retval_18, ~ldv_retval_17, ~ldv_retval_16, ~ldv_retval_15, ~ldv_retval_14, ~ldv_retval_13, ~ldv_retval_12, ~ldv_retval_11, ~ldv_retval_10, ~ldv_retval_9, ~ldv_retval_8, ~ldv_retval_7, ~ldv_retval_6, ~ldv_retval_5, ~ldv_retval_4;

implementation ldv_memset(#in~s.base : int, #in~s.offset : int, #in~c : int, #in~n : int) returns (#res.base : int, #res.offset : int){
    var #t~memset67.base : int, #t~memset67.offset : int;
    var ~s.base : int, ~s.offset : int;
    var ~c : int;
    var ~n : int;
    var ~tmp~66.base : int, ~tmp~66.offset : int;

  loc21:
    ~s.base, ~s.offset := #in~s.base, #in~s.offset;
    ~c := #in~c;
    ~n := #in~n;
    havoc ~tmp~66.base, ~tmp~66.offset;
    call #t~memset67.base, #t~memset67.offset := #Ultimate.C_memset(~s.base, ~s.offset, ~c, (if ~n % 4294967296 % 4294967296 <= 2147483647 then ~n % 4294967296 % 4294967296 else ~n % 4294967296 % 4294967296 - 4294967296));
    ~tmp~66.base, ~tmp~66.offset := ~s.base, ~s.offset;
    havoc #t~memset67.base, #t~memset67.offset;
    #res.base, #res.offset := ~tmp~66.base, ~tmp~66.offset;
    assume true;
    return;
}

procedure ldv_memset(#in~s.base : int, #in~s.offset : int, #in~c : int, #in~n : int) returns (#res.base : int, #res.offset : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation #Ultimate.meminit(#ptr.base : int, #ptr.offset : int, #amountOfFields : int, #sizeOfFields : int, #product : int) returns (){
    var #t~loopctr4342 : int;

  loc22:
    #t~loopctr4342 := 0;
    assume !(#t~loopctr4342 < #product);
    assume true;
    return;
}

procedure #Ultimate.meminit(#ptr.base : int, #ptr.offset : int, #amountOfFields : int, #sizeOfFields : int, #product : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ##fun~$Pointer$~X~$Pointer$~TO~int(#in~590.base : int, #in~590.offset : int, #in~591.base : int, #in~591.offset : int, #in~#fp.base : int, #in~#fp.offset : int) returns (#res : int){
    var #~590.base : int, #~590.offset : int;
    var #~591.base : int, #~591.offset : int;
    var #t~funptrres4325 : int;
    var #t~ret4326 : int;
    var #t~ret4327 : int;
    var #t~ret4328 : int;
    var #t~ret4329 : int;
    var #t~ret4330 : int;
    var #t~ret4331 : int;
    var #t~ret4332 : int;
    var #t~ret4333 : int;
    var #t~ret4334 : int;
    var #t~ret4335 : int;
    var #t~ret4336 : int;

  loc23:
    #~590.base, #~590.offset := #in~590.base, #in~590.offset;
    #~591.base, #~591.offset := #in~591.base, #in~591.offset;
    assume !(#in~#fp.base == #funAddr~bnx2_init_one.base && #in~#fp.offset == #funAddr~bnx2_init_one.offset);
    assume !(#in~#fp.base == #funAddr~bnx2_change_mac_addr.base && #in~#fp.offset == #funAddr~bnx2_change_mac_addr.offset);
    assume #in~#fp.base == #funAddr~bnx2_set_channels.base && #in~#fp.offset == #funAddr~bnx2_set_channels.offset;
    call #t~ret4334 := bnx2_set_channels(#~590.base, #~590.offset, #~591.base, #~591.offset);
    return;
}

procedure ##fun~$Pointer$~X~$Pointer$~TO~int(#in~590.base : int, #in~590.offset : int, #in~591.base : int, #in~591.offset : int, #in~#fp.base : int, #in~#fp.offset : int) returns (#res : int);
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_cnic_lock_of_bnx2, ~ldv_state_variable_6, ~bnx2_netdev_ops_group1.base, ~bnx2_netdev_ops_group1.offset, ~ldv_timer_list_2.base, ~ldv_timer_list_2.offset, ~ldv_timer_state_2, ~disable_msi;

implementation netif_running(#in~dev.base : int, #in~dev.offset : int) returns (#res : ~bool){
    var #t~ret423 : int;
    var ~dev.base : int, ~dev.offset : int;
    var ~tmp~512 : int;

  loc24:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    havoc ~tmp~512;
    call #t~ret423 := constant_test_bit(0, ~dev.base, ~dev.offset + 72);
    assume -2147483648 <= #t~ret423 && #t~ret423 <= 2147483647;
    ~tmp~512 := #t~ret423;
    havoc #t~ret423;
    #res := (if (if ~tmp~512 != 0 then 1 else 0) == 0 then 0 else 1);
    assume true;
    return;
}

procedure netif_running(#in~dev.base : int, #in~dev.offset : int) returns (#res : ~bool);
modifies ;

procedure ldv_ndo_uninit_6() returns (#res : int);
modifies ;

procedure pci_enable_pcie_error_reporting(#in~478.base : int, #in~478.offset : int) returns (#res : int);
modifies ;

procedure device_set_wakeup_enable(#in~133.base : int, #in~133.offset : int, #in~134 : int) returns (#res : int);
modifies ;

procedure netif_tx_wake_queue(#in~412.base : int, #in~412.offset : int) returns ();
modifies ;

procedure pci_release_regions(#in~185.base : int, #in~185.offset : int) returns ();
modifies ;

procedure debug_lockdep_rcu_enabled() returns (#res : int);
modifies ;

procedure free_irq(#in~127 : int, #in~128.base : int, #in~128.offset : int) returns ();
modifies ;

procedure dma_set_mask(#in~296.base : int, #in~296.offset : int, #in~297 : int) returns (#res : int);
modifies ;

procedure dql_reset(#in~339.base : int, #in~339.offset : int) returns ();
modifies ;

procedure lock_release(#in~52.base : int, #in~52.offset : int, #in~53 : int, #in~54 : int) returns ();
modifies ;

procedure netif_napi_del(#in~406.base : int, #in~406.offset : int) returns ();
modifies ;

procedure netif_carrier_on(#in~433.base : int, #in~433.offset : int) returns ();
modifies ;

procedure pci_disable_pcie_error_reporting(#in~479.base : int, #in~479.offset : int) returns (#res : int);
modifies ;

procedure pci_bus_read_config_dword(#in~152.base : int, #in~152.offset : int, #in~153 : int, #in~154 : int, #in~155.base : int, #in~155.offset : int) returns (#res : int);
modifies ;

procedure netdev_err(#in~448.base : int, #in~448.offset : int, #in~449.base : int, #in~449.offset : int) returns ();
modifies ;

procedure crc32_le(#in~471 : int, #in~472.base : int, #in~472.offset : int, #in~473 : int) returns (#res : ~u32);
modifies ;

procedure memcpy(#in~24.base : int, #in~24.offset : int, #in~25.base : int, #in~25.offset : int, #in~26 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure register_netdev(#in~446.base : int, #in~446.offset : int) returns (#res : int);
modifies ;

procedure sprintf(#in~16.base : int, #in~16.offset : int, #in~17.base : int, #in~17.offset : int) returns (#res : int);
modifies ;

procedure strlen(#in~33.base : int, #in~33.offset : int) returns (#res : int);
modifies ;

procedure memcmp(#in~30.base : int, #in~30.offset : int, #in~31.base : int, #in~31.offset : int, #in~32 : int) returns (#res : int);
modifies ;

procedure netif_set_real_num_rx_queues(#in~426.base : int, #in~426.offset : int, #in~427 : int) returns (#res : int);
modifies ;

procedure strlcpy(#in~36.base : int, #in~36.offset : int, #in~37.base : int, #in~37.offset : int, #in~38 : int) returns (#res : int);
modifies ;

procedure dma_supported(#in~294.base : int, #in~294.offset : int, #in~295 : int) returns (#res : int);
modifies ;

procedure eth_validate_addr(#in~456.base : int, #in~456.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_bh(#in~81.base : int, #in~81.offset : int) returns ();
modifies ;

procedure pci_get_device(#in~145 : int, #in~146 : int, #in~147.base : int, #in~147.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure debug_dma_mapping_error(#in~214.base : int, #in~214.offset : int, #in~215 : int) returns ();
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure netif_device_attach(#in~436.base : int, #in~436.offset : int) returns ();
modifies ;

procedure cancel_work_sync(#in~98.base : int, #in~98.offset : int) returns (#res : ~bool);
modifies ;

procedure netif_schedule_queue(#in~409.base : int, #in~409.offset : int) returns ();
modifies ;

procedure netif_device_detach(#in~435.base : int, #in~435.offset : int) returns ();
modifies ;

procedure alloc_etherdev_mqs(#in~457 : int, #in~458 : int, #in~459 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure netdev_info(#in~452.base : int, #in~452.offset : int, #in~453.base : int, #in~453.offset : int) returns ();
modifies ;

procedure netif_napi_add(#in~402.base : int, #in~402.offset : int, #in~403.base : int, #in~403.offset : int, #in~404.base : int, #in~404.offset : int, #in~405 : int) returns ();
modifies ;

procedure ldv_prepare_5() returns (#res : int);
modifies ;

procedure ldv_probe_4() returns (#res : int);
modifies ;

procedure pci_save_state(#in~172.base : int, #in~172.offset : int) returns (#res : int);
modifies ;

procedure __napi_schedule(#in~393.base : int, #in~393.offset : int) returns ();
modifies ;

procedure __raw_spin_lock_init(#in~75.base : int, #in~75.offset : int, #in~76.base : int, #in~76.offset : int, #in~77.base : int, #in~77.offset : int) returns ();
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure ldv_initialize() returns ();
modifies ;

procedure __phys_addr(#in~23 : int) returns (#res : int);
modifies ;

procedure pci_bus_write_config_word(#in~156.base : int, #in~156.offset : int, #in~157 : int, #in~158 : int, #in~159 : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_pointer() returns (#res.base : int, #res.offset : int);
modifies ;

procedure vzalloc(#in~117 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure alloc_pages_current(#in~106 : int, #in~107 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure rcu_is_watching() returns (#res : ~bool);
modifies ;

procedure dev_close(#in~407.base : int, #in~407.offset : int) returns (#res : int);
modifies ;

procedure pci_enable_msi_range(#in~199.base : int, #in~199.offset : int, #in~200 : int, #in~201 : int) returns (#res : int);
modifies ;

procedure pci_iomap(#in~103.base : int, #in~103.offset : int, #in~104 : int, #in~105 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __netdev_alloc_skb(#in~376.base : int, #in~376.offset : int, #in~377 : int, #in~378 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure vfree(#in~118.base : int, #in~118.offset : int) returns ();
modifies ;

procedure pci_disable_device(#in~170.base : int, #in~170.offset : int) returns ();
modifies ;

procedure __compiletime_assert_394() returns ();
modifies ;

procedure pci_wake_from_d3(#in~180.base : int, #in~180.offset : int, #in~181 : int) returns (#res : int);
modifies ;

procedure pci_request_regions(#in~183.base : int, #in~183.offset : int, #in~184.base : int, #in~184.offset : int) returns (#res : int);
modifies ;

procedure ldv_restore_early_5() returns (#res : int);
modifies ;

procedure __VERIFIER_assume(#in~65 : int) returns ();
modifies ;

procedure __const_udelay(#in~328 : int) returns ();
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];

procedure __bad_percpu_size() returns ();
modifies ;

procedure ldv_suspend_noirq_5() returns (#res : int);
modifies ;

procedure mod_timer(#in~82.base : int, #in~82.offset : int, #in~83 : int) returns (#res : int);
modifies ;

procedure memset(#in~27.base : int, #in~27.offset : int, #in~28 : int, #in~29 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure pci_vpd_find_info_keyword(#in~324.base : int, #in~324.offset : int, #in~325 : int, #in~326 : int, #in~327.base : int, #in~327.offset : int) returns (#res : int);
modifies ;

procedure ldv_suspend_4() returns (#res : int);
modifies ;

procedure __init_work(#in~93.base : int, #in~93.offset : int, #in~94 : int) returns ();
modifies ;

procedure debug_dma_map_page(#in~207.base : int, #in~207.offset : int, #in~208.base : int, #in~208.offset : int, #in~209 : int, #in~210 : int, #in~211 : int, #in~212 : int, #in~213 : int) returns ();
modifies ;

procedure napi_disable(#in~398.base : int, #in~398.offset : int) returns ();
modifies ;

procedure ldv_freeze_noirq_5() returns (#res : int);
modifies ;

procedure ldv_resume_noirq_5() returns (#res : int);
modifies ;

procedure __pci_register_driver(#in~186.base : int, #in~186.offset : int, #in~187.base : int, #in~187.offset : int, #in~188.base : int, #in~188.offset : int) returns (#res : int);
modifies ;

procedure skb_put(#in~364.base : int, #in~364.offset : int, #in~365 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure lock_is_held(#in~55.base : int, #in~55.offset : int) returns (#res : int);
modifies ;

procedure request_firmware(#in~474.base : int, #in~474.offset : int, #in~475.base : int, #in~475.offset : int, #in~476.base : int, #in~476.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock(#in~78.base : int, #in~78.offset : int) returns ();
modifies ;

procedure pci_bus_read_config_word(#in~148.base : int, #in~148.offset : int, #in~149 : int, #in~150 : int, #in~151.base : int, #in~151.offset : int) returns (#res : int);
modifies ;

procedure debug_dma_sync_single_for_device(#in~225.base : int, #in~225.offset : int, #in~226 : int, #in~227 : int, #in~228 : int) returns ();
modifies ;

procedure ldv_thaw_noirq_5() returns (#res : int);
modifies ;

procedure _raw_spin_lock_bh(#in~79.base : int, #in~79.offset : int) returns ();
modifies ;

procedure msleep(#in~329 : int) returns ();
modifies ;

procedure pci_unregister_driver(#in~189.base : int, #in~189.offset : int) returns ();
modifies ;

procedure pci_cleanup_aer_uncorrect_error_status(#in~480.base : int, #in~480.offset : int) returns (#res : int);
modifies ;

procedure debug_dma_sync_single_for_cpu(#in~221.base : int, #in~221.offset : int, #in~222 : int, #in~223 : int, #in~224 : int) returns ();
modifies ;

procedure netif_carrier_off(#in~434.base : int, #in~434.offset : int) returns ();
modifies ;

procedure ldv_suspend_late_5() returns (#res : int);
modifies ;

procedure __bad_size_call_parameter() returns ();
modifies ;

procedure synchronize_sched() returns ();
modifies ;

procedure disable_irq(#in~129 : int) returns ();
modifies ;

procedure rtnl_unlock() returns ();
modifies ;

procedure napi_gro_receive(#in~430.base : int, #in~430.offset : int, #in~431.base : int, #in~431.offset : int) returns (#res : ~gro_result_t);
modifies ;

procedure mutex_unlock(#in~62.base : int, #in~62.offset : int) returns ();
modifies ;

procedure ldv_release_4() returns (#res : int);
modifies ;

procedure ldv_freeze_late_5() returns (#res : int);
modifies ;

procedure __local_bh_enable_ip(#in~73 : int, #in~74 : int) returns ();
modifies ;

procedure ldv_ndo_init_6() returns (#res : int);
modifies ;

procedure netif_set_real_num_tx_queues(#in~424.base : int, #in~424.offset : int, #in~425 : int) returns (#res : int);
modifies ;

procedure pci_disable_msix(#in~198.base : int, #in~198.offset : int) returns ();
modifies ;

procedure msleep_interruptible(#in~330 : int) returns (#res : int);
modifies ;

procedure mutex_lock(#in~68.base : int, #in~68.offset : int) returns ();
modifies ;

procedure debug_dma_unmap_page(#in~216.base : int, #in~216.offset : int, #in~217 : int, #in~218 : int, #in~219 : int, #in~220 : int) returns ();
modifies ;

procedure __kmalloc(#in~112 : int, #in~113 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure consume_skb(#in~344.base : int, #in~344.offset : int) returns ();
modifies ;

procedure pci_set_master(#in~171.base : int, #in~171.offset : int) returns ();
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure ldv_poweroff_noirq_5() returns (#res : int);
modifies ;

procedure ldv_complete_5() returns (#res : int);
modifies ;

procedure __free_pages(#in~109.base : int, #in~109.offset : int, #in~110 : int) returns ();
modifies ;

procedure _raw_spin_unlock(#in~80.base : int, #in~80.offset : int) returns ();
modifies ;

procedure __local_bh_disable_ip(#in~71 : int, #in~72 : int) returns ();
modifies ;

procedure printk(#in~15.base : int, #in~15.offset : int) returns (#res : int);
modifies ;

procedure calloc(#in~63 : int, #in~64 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure dev_err(#in~140.base : int, #in~140.offset : int, #in~141.base : int, #in~141.offset : int) returns ();
modifies ;

procedure netdev_warn(#in~450.base : int, #in~450.offset : int, #in~451.base : int, #in~451.offset : int) returns ();
modifies ;

procedure __mutex_init(#in~59.base : int, #in~59.offset : int, #in~60.base : int, #in~60.offset : int, #in~61.base : int, #in~61.offset : int) returns ();
modifies ;

procedure queue_work_on(#in~95 : int, #in~96.base : int, #in~96.offset : int, #in~97.base : int, #in~97.offset : int) returns (#res : ~bool);
modifies ;

procedure lockdep_init_map(#in~41.base : int, #in~41.offset : int, #in~42.base : int, #in~42.offset : int, #in~43.base : int, #in~43.offset : int, #in~44 : int) returns ();
modifies ;

procedure release_firmware(#in~477.base : int, #in~477.offset : int) returns ();
modifies ;

procedure __dev_kfree_skb_any(#in~428.base : int, #in~428.offset : int, #in~429 : int) returns ();
modifies ;

procedure pci_find_capability(#in~143.base : int, #in~143.offset : int, #in~144 : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure strcpy(#in~34.base : int, #in~34.offset : int, #in~35.base : int, #in~35.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure pci_restore_state(#in~173.base : int, #in~173.offset : int) returns ();
modifies ;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure dma_free_attrs(#in~303.base : int, #in~303.offset : int, #in~304 : int, #in~305.base : int, #in~305.offset : int, #in~306 : int, #in~307.base : int, #in~307.offset : int) returns ();
modifies ;

procedure free_netdev(#in~408.base : int, #in~408.offset : int) returns ();
modifies ;

procedure del_timer_sync(#in~84.base : int, #in~84.offset : int) returns (#res : int);
modifies ;

procedure synchronize_irq(#in~119 : int) returns ();
modifies ;

procedure build_skb(#in~345.base : int, #in~345.offset : int, #in~346 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure rcu_read_lock_held() returns (#res : int);
modifies ;

procedure dql_completed(#in~337.base : int, #in~337.offset : int, #in~338 : int) returns ();
modifies ;

procedure pci_vpd_find_tag(#in~320.base : int, #in~320.offset : int, #in~321 : int, #in~322 : int, #in~323 : int) returns (#res : int);
modifies ;

procedure kfree(#in~111.base : int, #in~111.offset : int) returns ();
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];

procedure ldv_poweroff_late_5() returns (#res : int);
modifies ;

procedure __VERIFIER_error() returns ();
modifies ;

procedure eth_type_trans(#in~454.base : int, #in~454.offset : int, #in~455.base : int, #in~455.offset : int) returns (#res : ~__be16);
modifies ;

procedure enable_irq(#in~130 : int) returns ();
modifies ;

procedure pci_dev_put(#in~142.base : int, #in~142.offset : int) returns ();
modifies ;

procedure __pci_enable_wake(#in~176.base : int, #in~176.offset : int, #in~177 : int, #in~178 : int, #in~179 : int) returns (#res : int);
modifies ;

procedure lock_acquire(#in~45.base : int, #in~45.offset : int, #in~46 : int, #in~47 : int, #in~48 : int, #in~49 : int, #in~50.base : int, #in~50.offset : int, #in~51 : int) returns ();
modifies ;

procedure __builtin_prefetch(#in~0.base : int, #in~0.offset : int) returns ();
modifies ;

procedure pci_enable_device(#in~169.base : int, #in~169.offset : int) returns (#res : int);
modifies ;

procedure lockdep_rcu_suspicious(#in~56.base : int, #in~56.offset : int, #in~57 : int, #in~58.base : int, #in~58.offset : int) returns ();
modifies ;

procedure ldv_restore_noirq_5() returns (#res : int);
modifies ;

procedure device_set_wakeup_capable(#in~131.base : int, #in~131.offset : int, #in~132 : int) returns ();
modifies ;

procedure rtnl_lock() returns ();
modifies ;

procedure ldv_resume_early_5() returns (#res : int);
modifies ;

procedure pci_enable_msix_range(#in~203.base : int, #in~203.offset : int, #in~204.base : int, #in~204.offset : int, #in~205 : int, #in~206 : int) returns (#res : int);
modifies ;

procedure netif_get_num_default_rss_queues() returns (#res : int);
modifies ;

procedure pci_iounmap(#in~101.base : int, #in~101.offset : int, #in~102.base : int, #in~102.offset : int) returns ();
modifies ;

procedure pci_set_power_state(#in~174.base : int, #in~174.offset : int, #in~175 : int) returns (#res : int);
modifies ;

procedure dma_alloc_attrs(#in~298.base : int, #in~298.offset : int, #in~299 : int, #in~300.base : int, #in~300.offset : int, #in~301 : int, #in~302.base : int, #in~302.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure snprintf(#in~18.base : int, #in~18.offset : int, #in~19 : int, #in~20.base : int, #in~20.offset : int) returns (#res : int);
modifies ;

procedure pci_disable_msi(#in~197.base : int, #in~197.offset : int) returns ();
modifies ;

procedure ldv_thaw_early_5() returns (#res : int);
modifies ;

procedure request_threaded_irq(#in~120 : int, #in~121.base : int, #in~121.offset : int, #in~122.base : int, #in~122.offset : int, #in~123 : int, #in~124.base : int, #in~124.offset : int, #in~125.base : int, #in~125.offset : int) returns (#res : int);
modifies ;

procedure unregister_netdev(#in~447.base : int, #in~447.offset : int) returns ();
modifies ;


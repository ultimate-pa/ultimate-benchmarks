type STRUCT~perf_event;
type STRUCT~static_key_mod;
type STRUCT~kernfs_open_node;
type STRUCT~kernfs_iattrs;
type STRUCT~sock;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~dev_pm_qos;
type STRUCT~user_namespace;
type STRUCT~pinctrl;
type STRUCT~pinctrl_state;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~acpi_device;
type STRUCT~dma_coherent_mem;
type STRUCT~device_node;
type STRUCT~iommu_group;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~pid_namespace;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~iovec;
type STRUCT~swap_info_struct;
type STRUCT~backing_dev_info;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~pipe_inode_info;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~nameidata;
type STRUCT~kstatfs;
type STRUCT~uprobe;
type STRUCT~return_instance;
type STRUCT~xol_area;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~sem_undo_list;
type STRUCT~seccomp_filter;
type STRUCT~assoc_array_ptr;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~tty_struct;
type STRUCT~autogroup;
type STRUCT~taskstats;
type STRUCT~tty_audit_buf;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~mem_cgroup;
type STRUCT~sched_class;
type STRUCT~task_group;
type STRUCT~fs_struct;
type STRUCT~nsproxy;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~bio_list;
type STRUCT~blk_plug;
type STRUCT~reclaim_state;
type STRUCT~io_context;
type STRUCT~css_set;
type STRUCT~robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~numa_group;
type STRUCT~ftrace_ret_stack;
type STRUCT~ep_device;
type STRUCT~mon_bus;
type STRUCT~usb_tt;
type STRUCT~wusb_dev;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type STRUCT~kmem_cache_node;
type STRUCT~v4l2_ctrl_handler;
type STRUCT~v4l2_m2m_ctx;
type STRUCT~tuner_setup;
type STRUCT~v4l2_subdev_fh;
type STRUCT~regulator_bulk_data;
type STRUCT~dma_buf_attachment;
type STRUCT~vb2_fileio_data;
type STRUCT~map_segment;
type STRUCT~input_mt;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__s64 = int;
type ~__u64 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~oom_flags_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~kernel_ulong_t = int;
type ~qsize_t = int;
type ~cputime_t = int;
type ~ldv_func_ret_type = int;
type ~s8 = int;
type ~ldv_map = int;
type ~__kernel_suseconds_t = ~__kernel_long_t;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_clock_t = ~__kernel_long_t;
type ~__le16 = ~__u16;
type ~__le32 = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint32_t = ~__u32;
type ~dma_addr_t = ~u64;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~jump_label_t = ~u64;
type ~projid_t = ~__kernel_uid32_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~v4l2_std_id = ~__u64;
type ~compat_time_t = ~s32;
type ~compat_caddr_t = ~u32;
type ~compat_long_t = ~s32;
type ~compat_uptr_t = ~u32;
const #funAddr~uvc_release.base : int;
const #funAddr~uvc_release.offset : int;
const #funAddr~uvc_probe.base : int;
const #funAddr~uvc_probe.offset : int;
const #funAddr~uvc_disconnect.base : int;
const #funAddr~uvc_disconnect.offset : int;
const #funAddr~uvc_suspend.base : int;
const #funAddr~uvc_suspend.offset : int;
const #funAddr~uvc_resume.base : int;
const #funAddr~uvc_resume.offset : int;
const #funAddr~uvc_reset_resume.base : int;
const #funAddr~uvc_reset_resume.offset : int;
const #funAddr~uvc_cleanup.base : int;
const #funAddr~uvc_cleanup.offset : int;
const #funAddr~uvc_init.base : int;
const #funAddr~uvc_init.offset : int;
const #funAddr~uvc_clock_param_get.base : int;
const #funAddr~uvc_clock_param_get.offset : int;
const #funAddr~uvc_clock_param_set.base : int;
const #funAddr~uvc_clock_param_set.offset : int;
const #funAddr~uvc_queue_setup.base : int;
const #funAddr~uvc_queue_setup.offset : int;
const #funAddr~uvc_wait_prepare.base : int;
const #funAddr~uvc_wait_prepare.offset : int;
const #funAddr~uvc_wait_finish.base : int;
const #funAddr~uvc_wait_finish.offset : int;
const #funAddr~uvc_buffer_prepare.base : int;
const #funAddr~uvc_buffer_prepare.offset : int;
const #funAddr~uvc_buffer_finish.base : int;
const #funAddr~uvc_buffer_finish.offset : int;
const #funAddr~uvc_buffer_queue.base : int;
const #funAddr~uvc_buffer_queue.offset : int;
const #funAddr~uvc_v4l2_do_ioctl.base : int;
const #funAddr~uvc_v4l2_do_ioctl.offset : int;
const #funAddr~uvc_v4l2_read.base : int;
const #funAddr~uvc_v4l2_read.offset : int;
const #funAddr~uvc_v4l2_poll.base : int;
const #funAddr~uvc_v4l2_poll.offset : int;
const #funAddr~uvc_v4l2_ioctl.base : int;
const #funAddr~uvc_v4l2_ioctl.offset : int;
const #funAddr~uvc_v4l2_compat_ioctl32.base : int;
const #funAddr~uvc_v4l2_compat_ioctl32.offset : int;
const #funAddr~uvc_v4l2_mmap.base : int;
const #funAddr~uvc_v4l2_mmap.offset : int;
const #funAddr~uvc_v4l2_open.base : int;
const #funAddr~uvc_v4l2_open.offset : int;
const #funAddr~uvc_v4l2_release.base : int;
const #funAddr~uvc_v4l2_release.offset : int;
const #funAddr~uvc_video_complete.base : int;
const #funAddr~uvc_video_complete.offset : int;
const #funAddr~uvc_video_decode_isight.base : int;
const #funAddr~uvc_video_decode_isight.offset : int;
const #funAddr~uvc_video_decode_isoc.base : int;
const #funAddr~uvc_video_decode_isoc.offset : int;
const #funAddr~uvc_video_decode_bulk.base : int;
const #funAddr~uvc_video_decode_bulk.offset : int;
const #funAddr~uvc_video_encode_bulk.base : int;
const #funAddr~uvc_video_encode_bulk.offset : int;
const #funAddr~uvc_ctrl_get_zoom.base : int;
const #funAddr~uvc_ctrl_get_zoom.offset : int;
const #funAddr~uvc_ctrl_set_zoom.base : int;
const #funAddr~uvc_ctrl_set_zoom.offset : int;
const #funAddr~uvc_ctrl_add_event.base : int;
const #funAddr~uvc_ctrl_add_event.offset : int;
const #funAddr~uvc_ctrl_del_event.base : int;
const #funAddr~uvc_ctrl_del_event.offset : int;
const #funAddr~v4l2_ctrl_replace.base : int;
const #funAddr~v4l2_ctrl_replace.offset : int;
const #funAddr~v4l2_ctrl_merge.base : int;
const #funAddr~v4l2_ctrl_merge.offset : int;
const #funAddr~uvc_get_le_value.base : int;
const #funAddr~uvc_get_le_value.offset : int;
const #funAddr~uvc_set_le_value.base : int;
const #funAddr~uvc_set_le_value.offset : int;
const #funAddr~uvc_status_complete.base : int;
const #funAddr~uvc_status_complete.offset : int;
const #funAddr~no_llseek.base : int;
const #funAddr~no_llseek.offset : int;
const #funAddr~uvc_debugfs_stats_read.base : int;
const #funAddr~uvc_debugfs_stats_read.offset : int;
const #funAddr~uvc_debugfs_stats_open.base : int;
const #funAddr~uvc_debugfs_stats_open.offset : int;
const #funAddr~uvc_debugfs_stats_release.base : int;
const #funAddr~uvc_debugfs_stats_release.offset : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~usb_device_speed~USB_SPEED_UNKNOWN : int;
const ~usb_device_speed~USB_SPEED_LOW : int;
const ~usb_device_speed~USB_SPEED_FULL : int;
const ~usb_device_speed~USB_SPEED_HIGH : int;
const ~usb_device_speed~USB_SPEED_WIRELESS : int;
const ~usb_device_speed~USB_SPEED_SUPER : int;
const ~usb_device_state~USB_STATE_NOTATTACHED : int;
const ~usb_device_state~USB_STATE_ATTACHED : int;
const ~usb_device_state~USB_STATE_POWERED : int;
const ~usb_device_state~USB_STATE_RECONNECTING : int;
const ~usb_device_state~USB_STATE_UNAUTHENTICATED : int;
const ~usb_device_state~USB_STATE_DEFAULT : int;
const ~usb_device_state~USB_STATE_ADDRESS : int;
const ~usb_device_state~USB_STATE_CONFIGURED : int;
const ~usb_device_state~USB_STATE_SUSPENDED : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~uprobe_task_state~UTASK_RUNNING : int;
const ~uprobe_task_state~UTASK_SSTEP : int;
const ~uprobe_task_state~UTASK_SSTEP_ACK : int;
const ~uprobe_task_state~UTASK_SSTEP_TRAPPED : int;
const ~usb_interface_condition~USB_INTERFACE_UNBOUND : int;
const ~usb_interface_condition~USB_INTERFACE_BINDING : int;
const ~usb_interface_condition~USB_INTERFACE_BOUND : int;
const ~usb_interface_condition~USB_INTERFACE_UNBINDING : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE : int;
const ~usb_device_removable~USB_DEVICE_FIXED : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OVERLAY : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_PRIVATE : int;
const ~v4l2_memory~V4L2_MEMORY_MMAP : int;
const ~v4l2_memory~V4L2_MEMORY_USERPTR : int;
const ~v4l2_memory~V4L2_MEMORY_OVERLAY : int;
const ~v4l2_memory~V4L2_MEMORY_DMABUF : int;
const ~v4l2_priority~V4L2_PRIORITY_UNSET : int;
const ~v4l2_priority~V4L2_PRIORITY_BACKGROUND : int;
const ~v4l2_priority~V4L2_PRIORITY_INTERACTIVE : int;
const ~v4l2_priority~V4L2_PRIORITY_RECORD : int;
const ~v4l2_priority~V4L2_PRIORITY_DEFAULT : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BOOLEAN : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_MENU : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BUTTON : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER64 : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_CTRL_CLASS : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_STRING : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BITMASK : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER_MENU : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_FIXED : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB666_1X18 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_1X24 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_ARGB8888_1X32 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UV8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_2X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_2X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YDYUYDYV8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_1X20 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_1X20 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUV10_1X30 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_AYUV8_1X32 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_JPEG_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_S5C_UYVY_JPEG_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_AHSV8888_1X32 : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_CUSTOM : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_DEVNAME : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_I2C : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_OF : int;
const ~v4l2_mbus_type~V4L2_MBUS_PARALLEL : int;
const ~v4l2_mbus_type~V4L2_MBUS_BT656 : int;
const ~v4l2_mbus_type~V4L2_MBUS_CSI2 : int;
const ~v4l2_subdev_ir_mode~V4L2_SUBDEV_IR_MODE_PULSE_WIDTH : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~vb2_buffer_state~VB2_BUF_STATE_DEQUEUED : int;
const ~vb2_buffer_state~VB2_BUF_STATE_PREPARING : int;
const ~vb2_buffer_state~VB2_BUF_STATE_PREPARED : int;
const ~vb2_buffer_state~VB2_BUF_STATE_QUEUED : int;
const ~vb2_buffer_state~VB2_BUF_STATE_ACTIVE : int;
const ~vb2_buffer_state~VB2_BUF_STATE_DONE : int;
const ~vb2_buffer_state~VB2_BUF_STATE_ERROR : int;
const ~uvc_buffer_state~UVC_BUF_STATE_IDLE : int;
const ~uvc_buffer_state~UVC_BUF_STATE_QUEUED : int;
const ~uvc_buffer_state~UVC_BUF_STATE_ACTIVE : int;
const ~uvc_buffer_state~UVC_BUF_STATE_READY : int;
const ~uvc_buffer_state~UVC_BUF_STATE_DONE : int;
const ~uvc_buffer_state~UVC_BUF_STATE_ERROR : int;
const ~uvc_device_state~UVC_DEV_DISCONNECTED : int;
const ~uvc_handle_state~UVC_HANDLE_PASSIVE : int;
const ~uvc_handle_state~UVC_HANDLE_ACTIVE : int;
axiom #funAddr~uvc_release.base == -1 && #funAddr~uvc_release.offset == 0;
axiom #funAddr~uvc_probe.base == -1 && #funAddr~uvc_probe.offset == 1;
axiom #funAddr~uvc_disconnect.base == -1 && #funAddr~uvc_disconnect.offset == 2;
axiom #funAddr~uvc_suspend.base == -1 && #funAddr~uvc_suspend.offset == 3;
axiom #funAddr~uvc_resume.base == -1 && #funAddr~uvc_resume.offset == 4;
axiom #funAddr~uvc_reset_resume.base == -1 && #funAddr~uvc_reset_resume.offset == 5;
axiom #funAddr~uvc_cleanup.base == -1 && #funAddr~uvc_cleanup.offset == 6;
axiom #funAddr~uvc_init.base == -1 && #funAddr~uvc_init.offset == 7;
axiom #funAddr~uvc_clock_param_get.base == -1 && #funAddr~uvc_clock_param_get.offset == 8;
axiom #funAddr~uvc_clock_param_set.base == -1 && #funAddr~uvc_clock_param_set.offset == 9;
axiom #funAddr~uvc_queue_setup.base == -1 && #funAddr~uvc_queue_setup.offset == 10;
axiom #funAddr~uvc_wait_prepare.base == -1 && #funAddr~uvc_wait_prepare.offset == 11;
axiom #funAddr~uvc_wait_finish.base == -1 && #funAddr~uvc_wait_finish.offset == 12;
axiom #funAddr~uvc_buffer_prepare.base == -1 && #funAddr~uvc_buffer_prepare.offset == 13;
axiom #funAddr~uvc_buffer_finish.base == -1 && #funAddr~uvc_buffer_finish.offset == 14;
axiom #funAddr~uvc_buffer_queue.base == -1 && #funAddr~uvc_buffer_queue.offset == 15;
axiom #funAddr~uvc_v4l2_do_ioctl.base == -1 && #funAddr~uvc_v4l2_do_ioctl.offset == 16;
axiom #funAddr~uvc_v4l2_read.base == -1 && #funAddr~uvc_v4l2_read.offset == 17;
axiom #funAddr~uvc_v4l2_poll.base == -1 && #funAddr~uvc_v4l2_poll.offset == 18;
axiom #funAddr~uvc_v4l2_ioctl.base == -1 && #funAddr~uvc_v4l2_ioctl.offset == 19;
axiom #funAddr~uvc_v4l2_compat_ioctl32.base == -1 && #funAddr~uvc_v4l2_compat_ioctl32.offset == 20;
axiom #funAddr~uvc_v4l2_mmap.base == -1 && #funAddr~uvc_v4l2_mmap.offset == 21;
axiom #funAddr~uvc_v4l2_open.base == -1 && #funAddr~uvc_v4l2_open.offset == 22;
axiom #funAddr~uvc_v4l2_release.base == -1 && #funAddr~uvc_v4l2_release.offset == 23;
axiom #funAddr~uvc_video_complete.base == -1 && #funAddr~uvc_video_complete.offset == 24;
axiom #funAddr~uvc_video_decode_isight.base == -1 && #funAddr~uvc_video_decode_isight.offset == 25;
axiom #funAddr~uvc_video_decode_isoc.base == -1 && #funAddr~uvc_video_decode_isoc.offset == 26;
axiom #funAddr~uvc_video_decode_bulk.base == -1 && #funAddr~uvc_video_decode_bulk.offset == 27;
axiom #funAddr~uvc_video_encode_bulk.base == -1 && #funAddr~uvc_video_encode_bulk.offset == 28;
axiom #funAddr~uvc_ctrl_get_zoom.base == -1 && #funAddr~uvc_ctrl_get_zoom.offset == 29;
axiom #funAddr~uvc_ctrl_set_zoom.base == -1 && #funAddr~uvc_ctrl_set_zoom.offset == 30;
axiom #funAddr~uvc_ctrl_add_event.base == -1 && #funAddr~uvc_ctrl_add_event.offset == 31;
axiom #funAddr~uvc_ctrl_del_event.base == -1 && #funAddr~uvc_ctrl_del_event.offset == 32;
axiom #funAddr~v4l2_ctrl_replace.base == -1 && #funAddr~v4l2_ctrl_replace.offset == 33;
axiom #funAddr~v4l2_ctrl_merge.base == -1 && #funAddr~v4l2_ctrl_merge.offset == 34;
axiom #funAddr~uvc_get_le_value.base == -1 && #funAddr~uvc_get_le_value.offset == 35;
axiom #funAddr~uvc_set_le_value.base == -1 && #funAddr~uvc_set_le_value.offset == 36;
axiom #funAddr~uvc_status_complete.base == -1 && #funAddr~uvc_status_complete.offset == 37;
axiom #funAddr~no_llseek.base == -1 && #funAddr~no_llseek.offset == 38;
axiom #funAddr~uvc_debugfs_stats_read.base == -1 && #funAddr~uvc_debugfs_stats_read.offset == 39;
axiom #funAddr~uvc_debugfs_stats_open.base == -1 && #funAddr~uvc_debugfs_stats_open.offset == 40;
axiom #funAddr~uvc_debugfs_stats_release.base == -1 && #funAddr~uvc_debugfs_stats_release.offset == 41;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~usb_device_speed~USB_SPEED_UNKNOWN == 0;
axiom ~usb_device_speed~USB_SPEED_LOW == 1;
axiom ~usb_device_speed~USB_SPEED_FULL == 2;
axiom ~usb_device_speed~USB_SPEED_HIGH == 3;
axiom ~usb_device_speed~USB_SPEED_WIRELESS == 4;
axiom ~usb_device_speed~USB_SPEED_SUPER == 5;
axiom ~usb_device_state~USB_STATE_NOTATTACHED == 0;
axiom ~usb_device_state~USB_STATE_ATTACHED == 1;
axiom ~usb_device_state~USB_STATE_POWERED == 2;
axiom ~usb_device_state~USB_STATE_RECONNECTING == 3;
axiom ~usb_device_state~USB_STATE_UNAUTHENTICATED == 4;
axiom ~usb_device_state~USB_STATE_DEFAULT == 5;
axiom ~usb_device_state~USB_STATE_ADDRESS == 6;
axiom ~usb_device_state~USB_STATE_CONFIGURED == 7;
axiom ~usb_device_state~USB_STATE_SUSPENDED == 8;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~uprobe_task_state~UTASK_RUNNING == 0;
axiom ~uprobe_task_state~UTASK_SSTEP == 1;
axiom ~uprobe_task_state~UTASK_SSTEP_ACK == 2;
axiom ~uprobe_task_state~UTASK_SSTEP_TRAPPED == 3;
axiom ~usb_interface_condition~USB_INTERFACE_UNBOUND == 0;
axiom ~usb_interface_condition~USB_INTERFACE_BINDING == 1;
axiom ~usb_interface_condition~USB_INTERFACE_BOUND == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBINDING == 3;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN == 0;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE == 1;
axiom ~usb_device_removable~USB_DEVICE_FIXED == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE == 1;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT == 2;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OVERLAY == 3;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_CAPTURE == 4;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_OUTPUT == 5;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_CAPTURE == 6;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_OUTPUT == 7;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY == 8;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE == 9;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE == 10;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_PRIVATE == 128;
axiom ~v4l2_memory~V4L2_MEMORY_MMAP == 1;
axiom ~v4l2_memory~V4L2_MEMORY_USERPTR == 2;
axiom ~v4l2_memory~V4L2_MEMORY_OVERLAY == 3;
axiom ~v4l2_memory~V4L2_MEMORY_DMABUF == 4;
axiom ~v4l2_priority~V4L2_PRIORITY_UNSET == 0;
axiom ~v4l2_priority~V4L2_PRIORITY_BACKGROUND == 1;
axiom ~v4l2_priority~V4L2_PRIORITY_INTERACTIVE == 2;
axiom ~v4l2_priority~V4L2_PRIORITY_RECORD == 3;
axiom ~v4l2_priority~V4L2_PRIORITY_DEFAULT == 2;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER == 1;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BOOLEAN == 2;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_MENU == 3;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BUTTON == 4;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER64 == 5;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_CTRL_CLASS == 6;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_STRING == 7;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BITMASK == 8;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER_MENU == 9;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_FIXED == 1;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_BE == 4097;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_LE == 4098;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_BE == 4099;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_LE == 4100;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_BE == 4101;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_LE == 4102;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_BE == 4103;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_LE == 4104;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB666_1X18 == 4105;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_1X24 == 4106;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_BE == 4107;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_LE == 4108;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_ARGB8888_1X32 == 4109;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y8_1X8 == 8193;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UV8_1X8 == 8213;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1_5X8 == 8194;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1_5X8 == 8195;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1_5X8 == 8196;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1_5X8 == 8197;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_2X8 == 8198;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_2X8 == 8199;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_2X8 == 8200;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_2X8 == 8201;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y10_1X10 == 8202;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_2X10 == 8203;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_2X10 == 8204;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y12_1X12 == 8211;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1X16 == 8207;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1X16 == 8208;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1X16 == 8209;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1X16 == 8210;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YDYUYDYV8_1X16 == 8212;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_1X20 == 8205;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_1X20 == 8206;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUV10_1X30 == 8214;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_AYUV8_1X32 == 8215;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR8_1X8 == 12289;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG8_1X8 == 12307;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG8_1X8 == 12290;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB8_1X8 == 12308;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_ALAW8_1X8 == 12309;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_ALAW8_1X8 == 12310;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_ALAW8_1X8 == 12311;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_ALAW8_1X8 == 12312;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_DPCM8_1X8 == 12299;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_DPCM8_1X8 == 12300;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_DPCM8_1X8 == 12297;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_DPCM8_1X8 == 12301;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_BE == 12291;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_LE == 12292;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_BE == 12293;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_LE == 12294;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_1X10 == 12295;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_1X10 == 12302;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_1X10 == 12298;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_1X10 == 12303;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR12_1X12 == 12296;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG12_1X12 == 12304;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG12_1X12 == 12305;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB12_1X12 == 12306;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_JPEG_1X8 == 16385;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_S5C_UYVY_JPEG_1X8 == 20481;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_AHSV8888_1X32 == 24577;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_CUSTOM == 0;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_DEVNAME == 1;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_I2C == 2;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_OF == 3;
axiom ~v4l2_mbus_type~V4L2_MBUS_PARALLEL == 0;
axiom ~v4l2_mbus_type~V4L2_MBUS_BT656 == 1;
axiom ~v4l2_mbus_type~V4L2_MBUS_CSI2 == 2;
axiom ~v4l2_subdev_ir_mode~V4L2_SUBDEV_IR_MODE_PULSE_WIDTH == 0;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~vb2_buffer_state~VB2_BUF_STATE_DEQUEUED == 0;
axiom ~vb2_buffer_state~VB2_BUF_STATE_PREPARING == 1;
axiom ~vb2_buffer_state~VB2_BUF_STATE_PREPARED == 2;
axiom ~vb2_buffer_state~VB2_BUF_STATE_QUEUED == 3;
axiom ~vb2_buffer_state~VB2_BUF_STATE_ACTIVE == 4;
axiom ~vb2_buffer_state~VB2_BUF_STATE_DONE == 5;
axiom ~vb2_buffer_state~VB2_BUF_STATE_ERROR == 6;
axiom ~uvc_buffer_state~UVC_BUF_STATE_IDLE == 0;
axiom ~uvc_buffer_state~UVC_BUF_STATE_QUEUED == 1;
axiom ~uvc_buffer_state~UVC_BUF_STATE_ACTIVE == 2;
axiom ~uvc_buffer_state~UVC_BUF_STATE_READY == 3;
axiom ~uvc_buffer_state~UVC_BUF_STATE_DONE == 4;
axiom ~uvc_buffer_state~UVC_BUF_STATE_ERROR == 5;
axiom ~uvc_device_state~UVC_DEV_DISCONNECTED == 1;
axiom ~uvc_handle_state~UVC_HANDLE_PASSIVE == 0;
axiom ~uvc_handle_state~UVC_HANDLE_ACTIVE == 1;
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseXor" } ~bitwiseXor(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseComplement" } ~bitwiseComplement(in0 : int) returns (out : int);
var ~uvc_no_drop_param : int;

var ~uvc_trace_param : int;

var ~uvc_clock_param : int;

var ~uvc_quirks_param : int;

var ~uvc_timeout_param : int;

var ~ldv_0_ldv_param_4_1_default.base : int, ~ldv_0_ldv_param_4_1_default.offset : int;

var ~ldv_0_ldv_param_4_3_default.base : int, ~ldv_0_ldv_param_4_3_default.offset : int;

var ~ldv_0_ret_default : int;

var ~ldv_0_size_cnt_write_size : int;

var ~ldv_10_ret_default : int;

var ~ldv_1_ldv_param_3_0_default.base : int, ~ldv_1_ldv_param_3_0_default.offset : int;

var ~ldv_1_ldv_param_9_0_default.base : int, ~ldv_1_ldv_param_9_0_default.offset : int;

var ~ldv_2_ldv_param_3_1_default : int;

var ~ldv_2_ldv_param_3_2_default.base : int, ~ldv_2_ldv_param_3_2_default.offset : int;

var ~ldv_2_ldv_param_9_1_default : int;

var ~ldv_2_ldv_param_9_2_default.base : int, ~ldv_2_ldv_param_9_2_default.offset : int;

var ~ldv_3_ldv_param_3_1_default : int;

var ~ldv_4_container_void_ptr_ptr.base : int, ~ldv_4_container_void_ptr_ptr.offset : int;

var ~ldv_4_ldv_param_9_3_default.base : int, ~ldv_4_ldv_param_9_3_default.offset : int;

var ~ldv_4_ldv_param_9_4_default.base : int, ~ldv_4_ldv_param_9_4_default.offset : int;

var ~ldv_5_probe_retval_default : int;

var ~ldv_5_reset_flag_default : int;

var ~ldv_7_ldv_param_19_1_default : int;

var ~ldv_7_ldv_param_19_2_default : int;

var ~ldv_7_ldv_param_24_1_default.base : int, ~ldv_7_ldv_param_24_1_default.offset : int;

var ~ldv_7_ldv_param_24_2_default : int;

var ~ldv_7_ldv_param_24_3_default.base : int, ~ldv_7_ldv_param_24_3_default.offset : int;

var ~ldv_7_ldv_param_27_1_default : int;

var ~ldv_7_ldv_param_27_2_default : int;

var ~ldv_7_ldv_param_4_1_default : int;

var ~ldv_7_ldv_param_4_2_default : int;

var ~ldv_7_ret_default : int;

var ~ldv_statevar_0 : int;

var ~ldv_statevar_1 : int;

var ~ldv_statevar_10 : int;

var ~ldv_statevar_2 : int;

var ~ldv_statevar_3 : int;

var ~ldv_statevar_4 : int;

var ~ldv_statevar_5 : int;

var ~ldv_statevar_6 : int;

var ~ldv_statevar_7 : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~#uvc_fops.base : int, ~#uvc_fops.offset : int;

var ~#uvc_fmts.base : int, ~#uvc_fmts.offset : int;

var ~#uvc_ids.base : int, ~#uvc_ids.offset : int;

var ~#uvc_driver.base : int, ~#uvc_driver.offset : int;

var ~ldv_0_resource_file.base : int, ~ldv_0_resource_file.offset : int;

var ~ldv_0_resource_inode.base : int, ~ldv_0_resource_inode.offset : int;

var ~ldv_1_container_struct_kernel_param.base : int, ~ldv_1_container_struct_kernel_param.offset : int;

var ~ldv_2_callback_get.base : int, ~ldv_2_callback_get.offset : int;

var ~ldv_2_callback_set.base : int, ~ldv_2_callback_set.offset : int;

var ~ldv_2_container_struct_uvc_control_mapping.base : int, ~ldv_2_container_struct_uvc_control_mapping.offset : int;

var ~ldv_3_callback_add.base : int, ~ldv_3_callback_add.offset : int;

var ~ldv_3_callback_del.base : int, ~ldv_3_callback_del.offset : int;

var ~ldv_3_callback_merge.base : int, ~ldv_3_callback_merge.offset : int;

var ~ldv_3_callback_replace.base : int, ~ldv_3_callback_replace.offset : int;

var ~ldv_3_container_struct_v4l2_event_ptr.base : int, ~ldv_3_container_struct_v4l2_event_ptr.offset : int;

var ~ldv_3_container_struct_v4l2_subscribed_event_ptr.base : int, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.offset : int;

var ~ldv_3_ldv_param_10_1_default.base : int, ~ldv_3_ldv_param_10_1_default.offset : int;

var ~ldv_3_ldv_param_13_1_default.base : int, ~ldv_3_ldv_param_13_1_default.offset : int;

var ~ldv_4_callback_buf_finish.base : int, ~ldv_4_callback_buf_finish.offset : int;

var ~ldv_4_callback_buf_prepare.base : int, ~ldv_4_callback_buf_prepare.offset : int;

var ~ldv_4_callback_buf_queue.base : int, ~ldv_4_callback_buf_queue.offset : int;

var ~ldv_4_callback_queue_setup.base : int, ~ldv_4_callback_queue_setup.offset : int;

var ~ldv_4_callback_wait_finish.base : int, ~ldv_4_callback_wait_finish.offset : int;

var ~ldv_4_callback_wait_prepare.base : int, ~ldv_4_callback_wait_prepare.offset : int;

var ~ldv_4_container_struct_v4l2_format_ptr.base : int, ~ldv_4_container_struct_v4l2_format_ptr.offset : int;

var ~ldv_4_container_struct_vb2_buffer_ptr.base : int, ~ldv_4_container_struct_vb2_buffer_ptr.offset : int;

var ~ldv_4_container_struct_vb2_queue_ptr.base : int, ~ldv_4_container_struct_vb2_queue_ptr.offset : int;

var ~ldv_5_container_usb_driver.base : int, ~ldv_5_container_usb_driver.offset : int;

var ~ldv_5_ldv_param_13_1_default.base : int, ~ldv_5_ldv_param_13_1_default.offset : int;

var ~ldv_5_ldv_param_8_1_default.base : int, ~ldv_5_ldv_param_8_1_default.offset : int;

var ~ldv_5_resource_usb_interface.base : int, ~ldv_5_resource_usb_interface.offset : int;

var ~ldv_5_usb_device_usb_device.base : int, ~ldv_5_usb_device_usb_device.offset : int;

var ~ldv_6_container_usb_driver.base : int, ~ldv_6_container_usb_driver.offset : int;

var ~ldv_7_resource_file.base : int, ~ldv_7_resource_file.offset : int;

var ~ldv_7_resource_struct_poll_table_struct_ptr.base : int, ~ldv_7_resource_struct_poll_table_struct_ptr.offset : int;

var ~ldv_7_resource_struct_vm_area_struct_ptr.base : int, ~ldv_7_resource_struct_vm_area_struct_ptr.offset : int;

var ~ldv_10_exit_uvc_cleanup_default.base : int, ~ldv_10_exit_uvc_cleanup_default.offset : int;

var ~ldv_10_init_uvc_init_default.base : int, ~ldv_10_init_uvc_init_default.offset : int;

var ~ldv_1_callback_get.base : int, ~ldv_1_callback_get.offset : int;

var ~ldv_1_callback_set.base : int, ~ldv_1_callback_set.offset : int;

var ~ldv_5_callback_reset_resume.base : int, ~ldv_5_callback_reset_resume.offset : int;

var ~#vb2_vmalloc_memops.base : int, ~#vb2_vmalloc_memops.offset : int;

var ~#uvc_queue_qops.base : int, ~#uvc_queue_qops.offset : int;

var ~#uvc_ctrl_sub_ev_ops.base : int, ~#uvc_ctrl_sub_ev_ops.offset : int;

var ~ldv_7_callback_llseek.base : int, ~ldv_7_callback_llseek.offset : int;

var ~ldv_7_container_v4l2_file_operations.base : int, ~ldv_7_container_v4l2_file_operations.offset : int;

var ~ldv_7_callback_compat_ioctl32.base : int, ~ldv_7_callback_compat_ioctl32.offset : int;

var ~ldv_7_callback_mmap.base : int, ~ldv_7_callback_mmap.offset : int;

var ~ldv_7_callback_poll.base : int, ~ldv_7_callback_poll.offset : int;

var ~ldv_7_callback_read.base : int, ~ldv_7_callback_read.offset : int;

var ~ldv_7_callback_unlocked_ioctl.base : int, ~ldv_7_callback_unlocked_ioctl.offset : int;

var ~#uvc_ctrls.base : int, ~#uvc_ctrls.offset : int;

var ~#power_line_frequency_controls.base : int, ~#power_line_frequency_controls.offset : int;

var ~#exposure_auto_controls.base : int, ~#exposure_auto_controls.offset : int;

var ~#uvc_ctrl_mappings.base : int, ~#uvc_ctrl_mappings.offset : int;

var ~#uvc_processing_guid.base : int, ~#uvc_processing_guid.offset : int;

var ~#uvc_camera_guid.base : int, ~#uvc_camera_guid.offset : int;

var ~#uvc_media_transport_input_guid.base : int, ~#uvc_media_transport_input_guid.offset : int;

var ~usb_debug_root.base : int, ~usb_debug_root.offset : int;

var ~#uvc_debugfs_stats_fops.base : int, ~#uvc_debugfs_stats_fops.offset : int;

var ~uvc_debugfs_root_dir.base : int, ~uvc_debugfs_root_dir.offset : int;

var ~ldv_0_container_file_operations.base : int, ~ldv_0_container_file_operations.offset : int;

var ~#uvc_subdev_ops.base : int, ~#uvc_subdev_ops.offset : int;

var ~LDV_USB_DEV_REF_COUNTS : ~ldv_map;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

var #memory_int : [int,int]int;

implementation ldv_usb_register_driver_26(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2.base : int, #in~ldv_func_arg2.offset : int, #in~ldv_func_arg3.base : int, #in~ldv_func_arg3.offset : int) returns (#res : int){
    var #t~ret1096 : int;
    var #t~ret1097 : int;
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;
    var ~ldv_func_arg2.base : int, ~ldv_func_arg2.offset : int;
    var ~ldv_func_arg3.base : int, ~ldv_func_arg3.offset : int;
    var ~ldv_func_res~1615 : ~ldv_func_ret_type;
    var ~tmp~1615 : int;
    var ~tmp___0~1615 : int;

  loc0:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    ~ldv_func_arg2.base, ~ldv_func_arg2.offset := #in~ldv_func_arg2.base, #in~ldv_func_arg2.offset;
    ~ldv_func_arg3.base, ~ldv_func_arg3.offset := #in~ldv_func_arg3.base, #in~ldv_func_arg3.offset;
    havoc ~ldv_func_res~1615;
    havoc ~tmp~1615;
    havoc ~tmp___0~1615;
    call #t~ret1096 := usb_register_driver(~ldv_func_arg1.base, ~ldv_func_arg1.offset, ~ldv_func_arg2.base, ~ldv_func_arg2.offset, ~ldv_func_arg3.base, ~ldv_func_arg3.offset);
    assume -2147483648 <= #t~ret1096 && #t~ret1096 <= 2147483647;
    ~tmp~1615 := #t~ret1096;
    havoc #t~ret1096;
    ~ldv_func_res~1615 := ~tmp~1615;
    call #t~ret1097 := ldv_usb_register_driver(~ldv_func_res~1615, ~ldv_func_arg1.base, ~ldv_func_arg1.offset, ~ldv_func_arg2.base, ~ldv_func_arg2.offset, ~ldv_func_arg3.base, ~ldv_func_arg3.offset);
    assume -2147483648 <= #t~ret1097 && #t~ret1097 <= 2147483647;
    ~tmp___0~1615 := #t~ret1097;
    havoc #t~ret1097;
    #res := ~tmp___0~1615;
    assume true;
    return;
}

procedure ldv_usb_register_driver_26(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2.base : int, #in~ldv_func_arg2.offset : int, #in~ldv_func_arg3.base : int, #in~ldv_func_arg3.offset : int) returns (#res : int);
modifies ~ldv_statevar_6, ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset;

implementation ldv_is_err_or_null(#in~ptr.base : int, #in~ptr.offset : int) returns (#res : int){
    var #t~ret3974 : int;
    var ~ptr.base : int, ~ptr.offset : int;
    var ~tmp~4382 : int;
    var ~tmp___0~4382 : int;

  loc1:
    ~ptr.base, ~ptr.offset := #in~ptr.base, #in~ptr.offset;
    havoc ~tmp~4382;
    havoc ~tmp___0~4382;
    assume (~ptr.base + ~ptr.offset) % 18446744073709551616 == 0;
    ~tmp___0~4382 := 1;
    #res := ~tmp___0~4382;
    assume true;
    return;
}

procedure ldv_is_err_or_null(#in~ptr.base : int, #in~ptr.offset : int) returns (#res : int);
modifies ;

implementation uvc_probe(#in~intf.base : int, #in~intf.offset : int, #in~id.base : int, #in~id.offset : int) returns (#res : int){
    var #t~ret884.base : int, #t~ret884.offset : int;
    var #t~mem885 : int;
    var #t~mem886 : int;
    var #t~short887 : bool;
    var #t~nondet888.base : int, #t~nondet888.offset : int;
    var #t~ret889 : int;
    var #t~nondet890.base : int, #t~nondet890.offset : int;
    var #t~ret891 : int;
    var #t~ret892.base : int, #t~ret892.offset : int;
    var #t~nondet893.base : int, #t~nondet893.offset : int;
    var #t~ret894.base : int, #t~ret894.offset : int;
    var #t~ret896.base : int, #t~ret896.offset : int;
    var #t~mem898.base : int, #t~mem898.offset : int;
    var #t~mem899 : int;
    var #t~ite902 : int;
    var #t~mem901 : int;
    var #t~mem904.base : int, #t~mem904.offset : int;
    var #t~mem905.base : int, #t~mem905.offset : int;
    var #t~ret906 : int;
    var #t~nondet907.base : int, #t~nondet907.offset : int;
    var #t~ret908 : int;
    var #t~ret909 : int;
    var #t~nondet910.base : int, #t~nondet910.offset : int;
    var #t~ret911 : int;
    var #t~nondet912.base : int, #t~nondet912.offset : int;
    var #t~ret913 : int;
    var #t~mem914 : int;
    var #t~mem915 : int;
    var #t~nondet916.base : int, #t~nondet916.offset : int;
    var #t~ret917 : int;
    var #t~nondet918.base : int, #t~nondet918.offset : int;
    var #t~ret919 : int;
    var #t~ret921 : int;
    var #t~mem922.base : int, #t~mem922.offset : int;
    var #t~mem923.base : int, #t~mem923.offset : int;
    var #t~ret924 : int;
    var #t~ret925.base : int, #t~ret925.offset : int;
    var #t~mem926 : int;
    var #t~ret929 : int;
    var #t~ret931 : int;
    var #t~ret932 : int;
    var #t~ret933 : int;
    var #t~ret934 : int;
    var #t~ret935 : int;
    var #t~nondet936.base : int, #t~nondet936.offset : int;
    var #t~ret937 : int;
    var #t~nondet938.base : int, #t~nondet938.offset : int;
    var #t~ret939 : int;
    var ~intf.base : int, ~intf.offset : int;
    var ~id.base : int, ~id.offset : int;
    var ~udev~908.base : int, ~udev~908.offset : int;
    var ~tmp~908.base : int, ~tmp~908.offset : int;
    var ~dev~908.base : int, ~dev~908.offset : int;
    var ~ret~908 : int;
    var ~tmp___0~908.base : int, ~tmp___0~908.offset : int;
    var ~#__key~908.base : int, ~#__key~908.offset : int;
    var ~tmp___1~908 : int;
    var ~tmp___2~908 : int;
    var ~tmp___3~908 : int;
    var ~tmp___4~908 : int;
    var ~tmp___5~908 : int;
    var ~tmp___6~908 : int;

  loc2:
    ~intf.base, ~intf.offset := #in~intf.base, #in~intf.offset;
    ~id.base, ~id.offset := #in~id.base, #in~id.offset;
    havoc ~udev~908.base, ~udev~908.offset;
    havoc ~tmp~908.base, ~tmp~908.offset;
    havoc ~dev~908.base, ~dev~908.offset;
    havoc ~ret~908;
    havoc ~tmp___0~908.base, ~tmp___0~908.offset;
    call ~#__key~908.base, ~#__key~908.offset := #Ultimate.alloc(8);
    havoc ~tmp___1~908;
    havoc ~tmp___2~908;
    havoc ~tmp___3~908;
    havoc ~tmp___4~908;
    havoc ~tmp___5~908;
    havoc ~tmp___6~908;
    call #t~ret884.base, #t~ret884.offset := interface_to_usbdev(~intf.base, ~intf.offset);
    ~tmp~908.base, ~tmp~908.offset := #t~ret884.base, #t~ret884.offset;
    havoc #t~ret884.base, #t~ret884.offset;
    ~udev~908.base, ~udev~908.offset := ~tmp~908.base, ~tmp~908.offset;
    call #t~mem885 := read~int(~id.base, ~id.offset + 2, 2);
    #t~short887 := #t~mem885 % 65536 % 4294967296 != 0;
    assume !#t~short887;
    assume !#t~short887;
    havoc #t~mem885;
    havoc #t~mem886;
    havoc #t~short887;
    assume !(~bitwiseAnd((if ~uvc_trace_param % 4294967296 % 4294967296 <= 2147483647 then ~uvc_trace_param % 4294967296 % 4294967296 else ~uvc_trace_param % 4294967296 % 4294967296 - 4294967296), 1) != 0);
    call #t~ret892.base, #t~ret892.offset := kzalloc(2920, 208);
    ~tmp___0~908.base, ~tmp___0~908.offset := #t~ret892.base, #t~ret892.offset;
    havoc #t~ret892.base, #t~ret892.offset;
    ~dev~908.base, ~dev~908.offset := ~tmp___0~908.base, ~tmp___0~908.offset;
    assume (~dev~908.base + ~dev~908.offset) % 18446744073709551616 == 0;
    #res := -12;
    call ULTIMATE.dealloc(~#__key~908.base, ~#__key~908.offset);
    havoc ~#__key~908.base, ~#__key~908.offset;
    assume true;
    return;
}

procedure uvc_probe(#in~intf.base : int, #in~intf.offset : int, #in~id.base : int, #in~id.offset : int) returns (#res : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, #valid, #length, ~LDV_USB_DEV_REF_COUNTS;

implementation ldv_initialize_external_data() returns (){
  loc3:
    call ldv_allocate_external_0();
    assume true;
    return;
}

procedure ldv_initialize_external_data() returns ();
modifies ~ldv_0_ldv_param_4_1_default.base, ~ldv_0_ldv_param_4_1_default.offset, ~ldv_0_ldv_param_4_3_default.base, ~ldv_0_ldv_param_4_3_default.offset, ~ldv_0_resource_file.base, ~ldv_0_resource_file.offset, ~ldv_0_resource_inode.base, ~ldv_0_resource_inode.offset, ~ldv_1_container_struct_kernel_param.base, ~ldv_1_container_struct_kernel_param.offset, ~ldv_1_ldv_param_3_0_default.base, ~ldv_1_ldv_param_3_0_default.offset, ~ldv_1_ldv_param_9_0_default.base, ~ldv_1_ldv_param_9_0_default.offset, ~ldv_2_container_struct_uvc_control_mapping.base, ~ldv_2_container_struct_uvc_control_mapping.offset, ~ldv_2_ldv_param_3_2_default.base, ~ldv_2_ldv_param_3_2_default.offset, ~ldv_2_ldv_param_9_2_default.base, ~ldv_2_ldv_param_9_2_default.offset, ~ldv_3_container_struct_v4l2_event_ptr.base, ~ldv_3_container_struct_v4l2_event_ptr.offset, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.base, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.offset, ~ldv_3_ldv_param_10_1_default.base, ~ldv_3_ldv_param_10_1_default.offset, ~ldv_3_ldv_param_13_1_default.base, ~ldv_3_ldv_param_13_1_default.offset, ~ldv_4_container_struct_v4l2_format_ptr.base, ~ldv_4_container_struct_v4l2_format_ptr.offset, ~ldv_4_container_struct_vb2_buffer_ptr.base, ~ldv_4_container_struct_vb2_buffer_ptr.offset, ~ldv_4_container_struct_vb2_queue_ptr.base, ~ldv_4_container_struct_vb2_queue_ptr.offset, ~ldv_4_container_void_ptr_ptr.base, ~ldv_4_container_void_ptr_ptr.offset, ~ldv_4_ldv_param_9_3_default.base, ~ldv_4_ldv_param_9_3_default.offset, ~ldv_4_ldv_param_9_4_default.base, ~ldv_4_ldv_param_9_4_default.offset, ~ldv_5_container_usb_driver.base, ~ldv_5_container_usb_driver.offset, ~ldv_5_ldv_param_13_1_default.base, ~ldv_5_ldv_param_13_1_default.offset, ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset, ~ldv_5_resource_usb_interface.base, ~ldv_5_resource_usb_interface.offset, ~ldv_5_usb_device_usb_device.base, ~ldv_5_usb_device_usb_device.offset, ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset, ~ldv_7_ldv_param_24_1_default.base, ~ldv_7_ldv_param_24_1_default.offset, ~ldv_7_ldv_param_24_3_default.base, ~ldv_7_ldv_param_24_3_default.offset, ~ldv_7_resource_file.base, ~ldv_7_resource_file.offset, ~ldv_7_resource_struct_poll_table_struct_ptr.base, ~ldv_7_resource_struct_poll_table_struct_ptr.offset, ~ldv_7_resource_struct_vm_area_struct_ptr.base, ~ldv_7_resource_struct_vm_area_struct_ptr.offset;

implementation ldv_undef_int() returns (#res : int){
    var #t~nondet3994 : int;
    var ~tmp~4462 : int;

  loc4:
    havoc ~tmp~4462;
    assume -2147483648 <= #t~nondet3994 && #t~nondet3994 <= 2147483647;
    ~tmp~4462 := #t~nondet3994;
    havoc #t~nondet3994;
    #res := ~tmp~4462;
    assume true;
    return;
}

procedure ldv_undef_int() returns (#res : int);
modifies ;

implementation main() returns (#res : int){
    var #t~ret1031 : int;
    var ~tmp~1246 : int;

  loc5:
    havoc ~tmp~1246;
    call ldv_initialize();
    call ldv_initialize_external_data();
    ~ldv_statevar_10 := 19;
    ~ldv_0_ret_default := 1;
    ~ldv_statevar_0 := 15;
    ~ldv_statevar_1 := 5;
    ~ldv_statevar_2 := 5;
    ~ldv_statevar_3 := 5;
    ~ldv_statevar_4 := 5;
    ~ldv_5_reset_flag_default := 0;
    ~ldv_statevar_5 := 15;
    ~ldv_statevar_6 := 4;
    ~ldv_7_ret_default := 1;
    ~ldv_statevar_7 := 14;
    goto loc6;
  loc6:
    call #t~ret1031 := ldv_undef_int();
    assume -2147483648 <= #t~ret1031 && #t~ret1031 <= 2147483647;
    ~tmp~1246 := #t~ret1031;
    havoc #t~ret1031;
    goto loc7;
  loc7:
    goto loc7_0, loc7_1;
  loc7_0:
    assume ~tmp~1246 == 0;
    call ldv_entry_EMGentry_10(0, 0);
    goto loc6;
  loc7_1:
    assume !(~tmp~1246 == 0);
    assume !(~tmp~1246 == 1);
    assume !(~tmp~1246 == 2);
    assume !(~tmp~1246 == 3);
    assume !(~tmp~1246 == 4);
    assume !(~tmp~1246 == 5);
    goto loc8;
  loc8:
    goto loc8_0, loc8_1;
  loc8_0:
    assume ~tmp~1246 == 6;
    call ldv_usb_usb_instance_5(0, 0);
    goto loc6;
  loc8_1:
    assume !(~tmp~1246 == 6);
    assume ~tmp~1246 == 7;
    call ldv_usb_dummy_factory_6(0, 0);
    goto loc6;
}

procedure main() returns (#res : int);
modifies ~ldv_statevar_10, ~ldv_0_ret_default, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_statevar_2, ~ldv_statevar_3, ~ldv_statevar_4, ~ldv_5_reset_flag_default, ~ldv_statevar_5, ~ldv_statevar_6, ~ldv_7_ret_default, ~ldv_statevar_7, ~LDV_USB_DEV_REF_COUNTS, ~ldv_0_ldv_param_4_1_default.base, ~ldv_0_ldv_param_4_1_default.offset, ~ldv_0_ldv_param_4_3_default.base, ~ldv_0_ldv_param_4_3_default.offset, ~ldv_0_resource_file.base, ~ldv_0_resource_file.offset, ~ldv_0_resource_inode.base, ~ldv_0_resource_inode.offset, ~ldv_1_container_struct_kernel_param.base, ~ldv_1_container_struct_kernel_param.offset, ~ldv_1_ldv_param_3_0_default.base, ~ldv_1_ldv_param_3_0_default.offset, ~ldv_1_ldv_param_9_0_default.base, ~ldv_1_ldv_param_9_0_default.offset, ~ldv_2_container_struct_uvc_control_mapping.base, ~ldv_2_container_struct_uvc_control_mapping.offset, ~ldv_2_ldv_param_3_2_default.base, ~ldv_2_ldv_param_3_2_default.offset, ~ldv_2_ldv_param_9_2_default.base, ~ldv_2_ldv_param_9_2_default.offset, ~ldv_3_container_struct_v4l2_event_ptr.base, ~ldv_3_container_struct_v4l2_event_ptr.offset, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.base, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.offset, ~ldv_3_ldv_param_10_1_default.base, ~ldv_3_ldv_param_10_1_default.offset, ~ldv_3_ldv_param_13_1_default.base, ~ldv_3_ldv_param_13_1_default.offset, ~ldv_4_container_struct_v4l2_format_ptr.base, ~ldv_4_container_struct_v4l2_format_ptr.offset, ~ldv_4_container_struct_vb2_buffer_ptr.base, ~ldv_4_container_struct_vb2_buffer_ptr.offset, ~ldv_4_container_struct_vb2_queue_ptr.base, ~ldv_4_container_struct_vb2_queue_ptr.offset, ~ldv_4_container_void_ptr_ptr.base, ~ldv_4_container_void_ptr_ptr.offset, ~ldv_4_ldv_param_9_3_default.base, ~ldv_4_ldv_param_9_3_default.offset, ~ldv_4_ldv_param_9_4_default.base, ~ldv_4_ldv_param_9_4_default.offset, ~ldv_5_container_usb_driver.base, ~ldv_5_container_usb_driver.offset, ~ldv_5_ldv_param_13_1_default.base, ~ldv_5_ldv_param_13_1_default.offset, ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset, ~ldv_5_resource_usb_interface.base, ~ldv_5_resource_usb_interface.offset, ~ldv_5_usb_device_usb_device.base, ~ldv_5_usb_device_usb_device.offset, ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset, ~ldv_7_ldv_param_24_1_default.base, ~ldv_7_ldv_param_24_1_default.offset, ~ldv_7_ldv_param_24_3_default.base, ~ldv_7_ldv_param_24_3_default.offset, ~ldv_7_resource_file.base, ~ldv_7_resource_file.offset, ~ldv_7_resource_struct_poll_table_struct_ptr.base, ~ldv_7_resource_struct_poll_table_struct_ptr.offset, ~ldv_7_resource_struct_vm_area_struct_ptr.base, ~ldv_7_resource_struct_vm_area_struct_ptr.offset, #valid, #length, #memory_int, ~uvc_clock_param, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_0_size_cnt_write_size, ~uvc_debugfs_root_dir.base, ~uvc_debugfs_root_dir.offset, ~ldv_10_ret_default, ~ldv_5_probe_retval_default;

implementation ldv_dispatch_register_9_2(#in~arg0.base : int, #in~arg0.offset : int) returns (){
    var ~arg0.base : int, ~arg0.offset : int;

  loc9:
    ~arg0.base, ~arg0.offset := #in~arg0.base, #in~arg0.offset;
    ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset := ~arg0.base, ~arg0.offset;
    call ldv_switch_automaton_state_6_4();
    assume true;
    return;
}

procedure ldv_dispatch_register_9_2(#in~arg0.base : int, #in~arg0.offset : int) returns ();
modifies ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset, ~ldv_statevar_6;

implementation ldv_assume(#in~expression : int) returns (){
    var ~expression : int;

  loc10:
    ~expression := #in~expression;
    assume !(~expression == 0);
    assume true;
    return;
}

procedure ldv_assume(#in~expression : int) returns ();
modifies ;

implementation ldv_entry_EMGentry_10(#in~arg0.base : int, #in~arg0.offset : int) returns (){
    var #t~ret1027 : int;
    var #t~ret1028 : int;
    var #t~ret1029 : int;
    var #t~ret1030 : int;
    var ~arg0.base : int, ~arg0.offset : int;
    var ~tmp~1188 : int;
    var ~tmp___0~1188 : int;

  loc11:
    ~arg0.base, ~arg0.offset := #in~arg0.base, #in~arg0.offset;
    havoc ~tmp~1188;
    havoc ~tmp___0~1188;
    assume !(~ldv_statevar_10 == 2);
    assume !(~ldv_statevar_10 == 3);
    assume !(~ldv_statevar_10 == 4);
    assume !(~ldv_statevar_10 == 5);
    assume !(~ldv_statevar_10 == 6);
    assume !(~ldv_statevar_10 == 7);
    assume !(~ldv_statevar_10 == 8);
    assume !(~ldv_statevar_10 == 9);
    assume !(~ldv_statevar_10 == 10);
    assume !(~ldv_statevar_10 == 11);
    assume !(~ldv_statevar_10 == 12);
    assume !(~ldv_statevar_10 == 13);
    assume !(~ldv_statevar_10 == 14);
    assume !(~ldv_statevar_10 == 15);
    assume !(~ldv_statevar_10 == 16);
    assume !(~ldv_statevar_10 == 18);
    assume ~ldv_statevar_10 == 19;
    call ldv_assume((if ~ldv_statevar_6 == 4 then 1 else 0));
    call #t~ret1028 := ldv_EMGentry_init_uvc_init_10_19(~ldv_10_init_uvc_init_default.base, ~ldv_10_init_uvc_init_default.offset);
    assume -2147483648 <= #t~ret1028 && #t~ret1028 <= 2147483647;
    ~ldv_10_ret_default := #t~ret1028;
    havoc #t~ret1028;
    call #t~ret1029 := ldv_post_init(~ldv_10_ret_default);
    assume -2147483648 <= #t~ret1029 && #t~ret1029 <= 2147483647;
    ~ldv_10_ret_default := #t~ret1029;
    havoc #t~ret1029;
    call #t~ret1030 := ldv_undef_int();
    assume -2147483648 <= #t~ret1030 && #t~ret1030 <= 2147483647;
    ~tmp___0~1188 := #t~ret1030;
    havoc #t~ret1030;
    assume ~tmp___0~1188 != 0;
    ~ldv_statevar_10 := 16;
    assume true;
    return;
}

procedure ldv_entry_EMGentry_10(#in~arg0.base : int, #in~arg0.offset : int) returns ();
modifies ~ldv_statevar_10, ~ldv_10_ret_default, ~ldv_statevar_1, ~ldv_statevar_2, ~ldv_statevar_3, ~ldv_statevar_4, ~ldv_0_ret_default, ~ldv_statevar_0, ~ldv_7_ret_default, ~ldv_statevar_7, #valid, #length, ~uvc_debugfs_root_dir.base, ~uvc_debugfs_root_dir.offset, ~ldv_statevar_6, ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset;

implementation kzalloc(#in~size : int, #in~flags : int) returns (#res.base : int, #res.offset : int){
    var #t~ret1092.base : int, #t~ret1092.offset : int;
    var ~size : int;
    var ~flags : int;
    var ~tmp~1600.base : int, ~tmp~1600.offset : int;

  loc12:
    ~size := #in~size;
    ~flags := #in~flags;
    havoc ~tmp~1600.base, ~tmp~1600.offset;
    call #t~ret1092.base, #t~ret1092.offset := ldv_kzalloc(~size, ~flags);
    ~tmp~1600.base, ~tmp~1600.offset := #t~ret1092.base, #t~ret1092.offset;
    havoc #t~ret1092.base, #t~ret1092.offset;
    #res.base, #res.offset := ~tmp~1600.base, ~tmp~1600.offset;
    assume true;
    return;
}

procedure kzalloc(#in~size : int, #in~flags : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ldv_usb_instance_probe_5_13(#in~arg0.base : int, #in~arg0.offset : int, #in~arg1.base : int, #in~arg1.offset : int, #in~arg2.base : int, #in~arg2.offset : int) returns (#res : int){
    var #t~ret1065 : int;
    var ~arg0.base : int, ~arg0.offset : int;
    var ~arg1.base : int, ~arg1.offset : int;
    var ~arg2.base : int, ~arg2.offset : int;
    var ~tmp~1526 : int;

  loc13:
    ~arg0.base, ~arg0.offset := #in~arg0.base, #in~arg0.offset;
    ~arg1.base, ~arg1.offset := #in~arg1.base, #in~arg1.offset;
    ~arg2.base, ~arg2.offset := #in~arg2.base, #in~arg2.offset;
    havoc ~tmp~1526;
    call #t~ret1065 := uvc_probe(~arg1.base, ~arg1.offset, ~arg2.base, ~arg2.offset);
    assume -2147483648 <= #t~ret1065 && #t~ret1065 <= 2147483647;
    ~tmp~1526 := #t~ret1065;
    havoc #t~ret1065;
    #res := ~tmp~1526;
    assume true;
    return;
}

procedure ldv_usb_instance_probe_5_13(#in~arg0.base : int, #in~arg0.offset : int, #in~arg1.base : int, #in~arg1.offset : int, #in~arg2.base : int, #in~arg2.offset : int) returns (#res : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~LDV_USB_DEV_REF_COUNTS;

implementation ldv_initialize() returns (){
  loc14:
    ~LDV_USB_DEV_REF_COUNTS := 0;
    assume true;
    return;
}

procedure ldv_initialize() returns ();
modifies ~LDV_USB_DEV_REF_COUNTS;

implementation ldv_allocate_external_0() returns (){
    var #t~ret994.base : int, #t~ret994.offset : int;
    var #t~ret995.base : int, #t~ret995.offset : int;
    var #t~ret996.base : int, #t~ret996.offset : int;
    var #t~ret997.base : int, #t~ret997.offset : int;
    var #t~ret998.base : int, #t~ret998.offset : int;
    var #t~ret999.base : int, #t~ret999.offset : int;
    var #t~ret1000.base : int, #t~ret1000.offset : int;
    var #t~ret1001.base : int, #t~ret1001.offset : int;
    var #t~ret1002.base : int, #t~ret1002.offset : int;
    var #t~ret1003.base : int, #t~ret1003.offset : int;
    var #t~ret1004.base : int, #t~ret1004.offset : int;
    var #t~ret1005.base : int, #t~ret1005.offset : int;
    var #t~ret1006.base : int, #t~ret1006.offset : int;
    var #t~ret1007.base : int, #t~ret1007.offset : int;
    var #t~ret1008.base : int, #t~ret1008.offset : int;
    var #t~ret1009.base : int, #t~ret1009.offset : int;
    var #t~ret1010.base : int, #t~ret1010.offset : int;
    var #t~ret1011.base : int, #t~ret1011.offset : int;
    var #t~ret1012.base : int, #t~ret1012.offset : int;
    var #t~ret1013.base : int, #t~ret1013.offset : int;
    var #t~ret1014.base : int, #t~ret1014.offset : int;
    var #t~ret1015.base : int, #t~ret1015.offset : int;
    var #t~ret1016.base : int, #t~ret1016.offset : int;
    var #t~ret1017.base : int, #t~ret1017.offset : int;
    var #t~ret1018.base : int, #t~ret1018.offset : int;
    var #t~ret1019.base : int, #t~ret1019.offset : int;
    var #t~ret1020.base : int, #t~ret1020.offset : int;
    var #t~ret1021.base : int, #t~ret1021.offset : int;
    var #t~ret1022.base : int, #t~ret1022.offset : int;
    var #t~ret1023.base : int, #t~ret1023.offset : int;
    var #t~ret1024.base : int, #t~ret1024.offset : int;
    var ~tmp~1131.base : int, ~tmp~1131.offset : int;
    var ~tmp___0~1131.base : int, ~tmp___0~1131.offset : int;
    var ~tmp___1~1131.base : int, ~tmp___1~1131.offset : int;
    var ~tmp___2~1131.base : int, ~tmp___2~1131.offset : int;
    var ~tmp___3~1131.base : int, ~tmp___3~1131.offset : int;
    var ~tmp___4~1131.base : int, ~tmp___4~1131.offset : int;
    var ~tmp___5~1131.base : int, ~tmp___5~1131.offset : int;
    var ~tmp___6~1131.base : int, ~tmp___6~1131.offset : int;
    var ~tmp___7~1131.base : int, ~tmp___7~1131.offset : int;
    var ~tmp___8~1131.base : int, ~tmp___8~1131.offset : int;
    var ~tmp___9~1131.base : int, ~tmp___9~1131.offset : int;
    var ~tmp___10~1131.base : int, ~tmp___10~1131.offset : int;
    var ~tmp___11~1131.base : int, ~tmp___11~1131.offset : int;
    var ~tmp___12~1131.base : int, ~tmp___12~1131.offset : int;
    var ~tmp___13~1131.base : int, ~tmp___13~1131.offset : int;
    var ~tmp___14~1131.base : int, ~tmp___14~1131.offset : int;
    var ~tmp___15~1131.base : int, ~tmp___15~1131.offset : int;
    var ~tmp___16~1131.base : int, ~tmp___16~1131.offset : int;
    var ~tmp___17~1131.base : int, ~tmp___17~1131.offset : int;
    var ~tmp___18~1131.base : int, ~tmp___18~1131.offset : int;
    var ~tmp___19~1131.base : int, ~tmp___19~1131.offset : int;
    var ~tmp___20~1131.base : int, ~tmp___20~1131.offset : int;
    var ~tmp___21~1131.base : int, ~tmp___21~1131.offset : int;
    var ~tmp___22~1131.base : int, ~tmp___22~1131.offset : int;
    var ~tmp___23~1131.base : int, ~tmp___23~1131.offset : int;
    var ~tmp___24~1131.base : int, ~tmp___24~1131.offset : int;
    var ~tmp___25~1131.base : int, ~tmp___25~1131.offset : int;
    var ~tmp___26~1131.base : int, ~tmp___26~1131.offset : int;
    var ~tmp___27~1131.base : int, ~tmp___27~1131.offset : int;
    var ~tmp___28~1131.base : int, ~tmp___28~1131.offset : int;
    var ~tmp___29~1131.base : int, ~tmp___29~1131.offset : int;

  loc15:
    havoc ~tmp~1131.base, ~tmp~1131.offset;
    havoc ~tmp___0~1131.base, ~tmp___0~1131.offset;
    havoc ~tmp___1~1131.base, ~tmp___1~1131.offset;
    havoc ~tmp___2~1131.base, ~tmp___2~1131.offset;
    havoc ~tmp___3~1131.base, ~tmp___3~1131.offset;
    havoc ~tmp___4~1131.base, ~tmp___4~1131.offset;
    havoc ~tmp___5~1131.base, ~tmp___5~1131.offset;
    havoc ~tmp___6~1131.base, ~tmp___6~1131.offset;
    havoc ~tmp___7~1131.base, ~tmp___7~1131.offset;
    havoc ~tmp___8~1131.base, ~tmp___8~1131.offset;
    havoc ~tmp___9~1131.base, ~tmp___9~1131.offset;
    havoc ~tmp___10~1131.base, ~tmp___10~1131.offset;
    havoc ~tmp___11~1131.base, ~tmp___11~1131.offset;
    havoc ~tmp___12~1131.base, ~tmp___12~1131.offset;
    havoc ~tmp___13~1131.base, ~tmp___13~1131.offset;
    havoc ~tmp___14~1131.base, ~tmp___14~1131.offset;
    havoc ~tmp___15~1131.base, ~tmp___15~1131.offset;
    havoc ~tmp___16~1131.base, ~tmp___16~1131.offset;
    havoc ~tmp___17~1131.base, ~tmp___17~1131.offset;
    havoc ~tmp___18~1131.base, ~tmp___18~1131.offset;
    havoc ~tmp___19~1131.base, ~tmp___19~1131.offset;
    havoc ~tmp___20~1131.base, ~tmp___20~1131.offset;
    havoc ~tmp___21~1131.base, ~tmp___21~1131.offset;
    havoc ~tmp___22~1131.base, ~tmp___22~1131.offset;
    havoc ~tmp___23~1131.base, ~tmp___23~1131.offset;
    havoc ~tmp___24~1131.base, ~tmp___24~1131.offset;
    havoc ~tmp___25~1131.base, ~tmp___25~1131.offset;
    havoc ~tmp___26~1131.base, ~tmp___26~1131.offset;
    havoc ~tmp___27~1131.base, ~tmp___27~1131.offset;
    havoc ~tmp___28~1131.base, ~tmp___28~1131.offset;
    havoc ~tmp___29~1131.base, ~tmp___29~1131.offset;
    call #t~ret994.base, #t~ret994.offset := external_allocated_data();
    ~tmp~1131.base, ~tmp~1131.offset := #t~ret994.base, #t~ret994.offset;
    havoc #t~ret994.base, #t~ret994.offset;
    ~ldv_0_ldv_param_4_1_default.base, ~ldv_0_ldv_param_4_1_default.offset := ~tmp~1131.base, ~tmp~1131.offset;
    call #t~ret995.base, #t~ret995.offset := external_allocated_data();
    ~tmp___0~1131.base, ~tmp___0~1131.offset := #t~ret995.base, #t~ret995.offset;
    havoc #t~ret995.base, #t~ret995.offset;
    ~ldv_0_ldv_param_4_3_default.base, ~ldv_0_ldv_param_4_3_default.offset := ~tmp___0~1131.base, ~tmp___0~1131.offset;
    call #t~ret996.base, #t~ret996.offset := external_allocated_data();
    ~tmp___1~1131.base, ~tmp___1~1131.offset := #t~ret996.base, #t~ret996.offset;
    havoc #t~ret996.base, #t~ret996.offset;
    ~ldv_0_resource_file.base, ~ldv_0_resource_file.offset := ~tmp___1~1131.base, ~tmp___1~1131.offset;
    call #t~ret997.base, #t~ret997.offset := external_allocated_data();
    ~tmp___2~1131.base, ~tmp___2~1131.offset := #t~ret997.base, #t~ret997.offset;
    havoc #t~ret997.base, #t~ret997.offset;
    ~ldv_0_resource_inode.base, ~ldv_0_resource_inode.offset := ~tmp___2~1131.base, ~tmp___2~1131.offset;
    call #t~ret998.base, #t~ret998.offset := external_allocated_data();
    ~tmp___3~1131.base, ~tmp___3~1131.offset := #t~ret998.base, #t~ret998.offset;
    havoc #t~ret998.base, #t~ret998.offset;
    ~ldv_1_container_struct_kernel_param.base, ~ldv_1_container_struct_kernel_param.offset := ~tmp___3~1131.base, ~tmp___3~1131.offset;
    call #t~ret999.base, #t~ret999.offset := external_allocated_data();
    ~tmp___4~1131.base, ~tmp___4~1131.offset := #t~ret999.base, #t~ret999.offset;
    havoc #t~ret999.base, #t~ret999.offset;
    ~ldv_1_ldv_param_3_0_default.base, ~ldv_1_ldv_param_3_0_default.offset := ~tmp___4~1131.base, ~tmp___4~1131.offset;
    call #t~ret1000.base, #t~ret1000.offset := external_allocated_data();
    ~tmp___5~1131.base, ~tmp___5~1131.offset := #t~ret1000.base, #t~ret1000.offset;
    havoc #t~ret1000.base, #t~ret1000.offset;
    ~ldv_1_ldv_param_9_0_default.base, ~ldv_1_ldv_param_9_0_default.offset := ~tmp___5~1131.base, ~tmp___5~1131.offset;
    call #t~ret1001.base, #t~ret1001.offset := external_allocated_data();
    ~tmp___6~1131.base, ~tmp___6~1131.offset := #t~ret1001.base, #t~ret1001.offset;
    havoc #t~ret1001.base, #t~ret1001.offset;
    ~ldv_2_container_struct_uvc_control_mapping.base, ~ldv_2_container_struct_uvc_control_mapping.offset := ~tmp___6~1131.base, ~tmp___6~1131.offset;
    call #t~ret1002.base, #t~ret1002.offset := external_allocated_data();
    ~tmp___7~1131.base, ~tmp___7~1131.offset := #t~ret1002.base, #t~ret1002.offset;
    havoc #t~ret1002.base, #t~ret1002.offset;
    ~ldv_2_ldv_param_3_2_default.base, ~ldv_2_ldv_param_3_2_default.offset := ~tmp___7~1131.base, ~tmp___7~1131.offset;
    call #t~ret1003.base, #t~ret1003.offset := external_allocated_data();
    ~tmp___8~1131.base, ~tmp___8~1131.offset := #t~ret1003.base, #t~ret1003.offset;
    havoc #t~ret1003.base, #t~ret1003.offset;
    ~ldv_2_ldv_param_9_2_default.base, ~ldv_2_ldv_param_9_2_default.offset := ~tmp___8~1131.base, ~tmp___8~1131.offset;
    call #t~ret1004.base, #t~ret1004.offset := external_allocated_data();
    ~tmp___9~1131.base, ~tmp___9~1131.offset := #t~ret1004.base, #t~ret1004.offset;
    havoc #t~ret1004.base, #t~ret1004.offset;
    ~ldv_3_container_struct_v4l2_event_ptr.base, ~ldv_3_container_struct_v4l2_event_ptr.offset := ~tmp___9~1131.base, ~tmp___9~1131.offset;
    call #t~ret1005.base, #t~ret1005.offset := external_allocated_data();
    ~tmp___10~1131.base, ~tmp___10~1131.offset := #t~ret1005.base, #t~ret1005.offset;
    havoc #t~ret1005.base, #t~ret1005.offset;
    ~ldv_3_container_struct_v4l2_subscribed_event_ptr.base, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.offset := ~tmp___10~1131.base, ~tmp___10~1131.offset;
    call #t~ret1006.base, #t~ret1006.offset := external_allocated_data();
    ~tmp___11~1131.base, ~tmp___11~1131.offset := #t~ret1006.base, #t~ret1006.offset;
    havoc #t~ret1006.base, #t~ret1006.offset;
    ~ldv_3_ldv_param_10_1_default.base, ~ldv_3_ldv_param_10_1_default.offset := ~tmp___11~1131.base, ~tmp___11~1131.offset;
    call #t~ret1007.base, #t~ret1007.offset := external_allocated_data();
    ~tmp___12~1131.base, ~tmp___12~1131.offset := #t~ret1007.base, #t~ret1007.offset;
    havoc #t~ret1007.base, #t~ret1007.offset;
    ~ldv_3_ldv_param_13_1_default.base, ~ldv_3_ldv_param_13_1_default.offset := ~tmp___12~1131.base, ~tmp___12~1131.offset;
    call #t~ret1008.base, #t~ret1008.offset := external_allocated_data();
    ~tmp___13~1131.base, ~tmp___13~1131.offset := #t~ret1008.base, #t~ret1008.offset;
    havoc #t~ret1008.base, #t~ret1008.offset;
    ~ldv_4_container_struct_v4l2_format_ptr.base, ~ldv_4_container_struct_v4l2_format_ptr.offset := ~tmp___13~1131.base, ~tmp___13~1131.offset;
    call #t~ret1009.base, #t~ret1009.offset := external_allocated_data();
    ~tmp___14~1131.base, ~tmp___14~1131.offset := #t~ret1009.base, #t~ret1009.offset;
    havoc #t~ret1009.base, #t~ret1009.offset;
    ~ldv_4_container_struct_vb2_buffer_ptr.base, ~ldv_4_container_struct_vb2_buffer_ptr.offset := ~tmp___14~1131.base, ~tmp___14~1131.offset;
    call #t~ret1010.base, #t~ret1010.offset := external_allocated_data();
    ~tmp___15~1131.base, ~tmp___15~1131.offset := #t~ret1010.base, #t~ret1010.offset;
    havoc #t~ret1010.base, #t~ret1010.offset;
    ~ldv_4_container_struct_vb2_queue_ptr.base, ~ldv_4_container_struct_vb2_queue_ptr.offset := ~tmp___15~1131.base, ~tmp___15~1131.offset;
    call #t~ret1011.base, #t~ret1011.offset := external_allocated_data();
    ~tmp___16~1131.base, ~tmp___16~1131.offset := #t~ret1011.base, #t~ret1011.offset;
    havoc #t~ret1011.base, #t~ret1011.offset;
    ~ldv_4_container_void_ptr_ptr.base, ~ldv_4_container_void_ptr_ptr.offset := ~tmp___16~1131.base, ~tmp___16~1131.offset;
    call #t~ret1012.base, #t~ret1012.offset := external_allocated_data();
    ~tmp___17~1131.base, ~tmp___17~1131.offset := #t~ret1012.base, #t~ret1012.offset;
    havoc #t~ret1012.base, #t~ret1012.offset;
    ~ldv_4_ldv_param_9_3_default.base, ~ldv_4_ldv_param_9_3_default.offset := ~tmp___17~1131.base, ~tmp___17~1131.offset;
    call #t~ret1013.base, #t~ret1013.offset := external_allocated_data();
    ~tmp___18~1131.base, ~tmp___18~1131.offset := #t~ret1013.base, #t~ret1013.offset;
    havoc #t~ret1013.base, #t~ret1013.offset;
    ~ldv_4_ldv_param_9_4_default.base, ~ldv_4_ldv_param_9_4_default.offset := ~tmp___18~1131.base, ~tmp___18~1131.offset;
    call #t~ret1014.base, #t~ret1014.offset := external_allocated_data();
    ~tmp___19~1131.base, ~tmp___19~1131.offset := #t~ret1014.base, #t~ret1014.offset;
    havoc #t~ret1014.base, #t~ret1014.offset;
    ~ldv_5_container_usb_driver.base, ~ldv_5_container_usb_driver.offset := ~tmp___19~1131.base, ~tmp___19~1131.offset;
    call #t~ret1015.base, #t~ret1015.offset := external_allocated_data();
    ~tmp___20~1131.base, ~tmp___20~1131.offset := #t~ret1015.base, #t~ret1015.offset;
    havoc #t~ret1015.base, #t~ret1015.offset;
    ~ldv_5_ldv_param_13_1_default.base, ~ldv_5_ldv_param_13_1_default.offset := ~tmp___20~1131.base, ~tmp___20~1131.offset;
    call #t~ret1016.base, #t~ret1016.offset := external_allocated_data();
    ~tmp___21~1131.base, ~tmp___21~1131.offset := #t~ret1016.base, #t~ret1016.offset;
    havoc #t~ret1016.base, #t~ret1016.offset;
    ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset := ~tmp___21~1131.base, ~tmp___21~1131.offset;
    call #t~ret1017.base, #t~ret1017.offset := external_allocated_data();
    ~tmp___22~1131.base, ~tmp___22~1131.offset := #t~ret1017.base, #t~ret1017.offset;
    havoc #t~ret1017.base, #t~ret1017.offset;
    ~ldv_5_resource_usb_interface.base, ~ldv_5_resource_usb_interface.offset := ~tmp___22~1131.base, ~tmp___22~1131.offset;
    call #t~ret1018.base, #t~ret1018.offset := external_allocated_data();
    ~tmp___23~1131.base, ~tmp___23~1131.offset := #t~ret1018.base, #t~ret1018.offset;
    havoc #t~ret1018.base, #t~ret1018.offset;
    ~ldv_5_usb_device_usb_device.base, ~ldv_5_usb_device_usb_device.offset := ~tmp___23~1131.base, ~tmp___23~1131.offset;
    call #t~ret1019.base, #t~ret1019.offset := external_allocated_data();
    ~tmp___24~1131.base, ~tmp___24~1131.offset := #t~ret1019.base, #t~ret1019.offset;
    havoc #t~ret1019.base, #t~ret1019.offset;
    ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset := ~tmp___24~1131.base, ~tmp___24~1131.offset;
    call #t~ret1020.base, #t~ret1020.offset := external_allocated_data();
    ~tmp___25~1131.base, ~tmp___25~1131.offset := #t~ret1020.base, #t~ret1020.offset;
    havoc #t~ret1020.base, #t~ret1020.offset;
    ~ldv_7_ldv_param_24_1_default.base, ~ldv_7_ldv_param_24_1_default.offset := ~tmp___25~1131.base, ~tmp___25~1131.offset;
    call #t~ret1021.base, #t~ret1021.offset := external_allocated_data();
    ~tmp___26~1131.base, ~tmp___26~1131.offset := #t~ret1021.base, #t~ret1021.offset;
    havoc #t~ret1021.base, #t~ret1021.offset;
    ~ldv_7_ldv_param_24_3_default.base, ~ldv_7_ldv_param_24_3_default.offset := ~tmp___26~1131.base, ~tmp___26~1131.offset;
    call #t~ret1022.base, #t~ret1022.offset := external_allocated_data();
    ~tmp___27~1131.base, ~tmp___27~1131.offset := #t~ret1022.base, #t~ret1022.offset;
    havoc #t~ret1022.base, #t~ret1022.offset;
    ~ldv_7_resource_file.base, ~ldv_7_resource_file.offset := ~tmp___27~1131.base, ~tmp___27~1131.offset;
    call #t~ret1023.base, #t~ret1023.offset := external_allocated_data();
    ~tmp___28~1131.base, ~tmp___28~1131.offset := #t~ret1023.base, #t~ret1023.offset;
    havoc #t~ret1023.base, #t~ret1023.offset;
    ~ldv_7_resource_struct_poll_table_struct_ptr.base, ~ldv_7_resource_struct_poll_table_struct_ptr.offset := ~tmp___28~1131.base, ~tmp___28~1131.offset;
    call #t~ret1024.base, #t~ret1024.offset := external_allocated_data();
    ~tmp___29~1131.base, ~tmp___29~1131.offset := #t~ret1024.base, #t~ret1024.offset;
    havoc #t~ret1024.base, #t~ret1024.offset;
    ~ldv_7_resource_struct_vm_area_struct_ptr.base, ~ldv_7_resource_struct_vm_area_struct_ptr.offset := ~tmp___29~1131.base, ~tmp___29~1131.offset;
    assume true;
    return;
}

procedure ldv_allocate_external_0() returns ();
modifies ~ldv_0_ldv_param_4_1_default.base, ~ldv_0_ldv_param_4_1_default.offset, ~ldv_0_ldv_param_4_3_default.base, ~ldv_0_ldv_param_4_3_default.offset, ~ldv_0_resource_file.base, ~ldv_0_resource_file.offset, ~ldv_0_resource_inode.base, ~ldv_0_resource_inode.offset, ~ldv_1_container_struct_kernel_param.base, ~ldv_1_container_struct_kernel_param.offset, ~ldv_1_ldv_param_3_0_default.base, ~ldv_1_ldv_param_3_0_default.offset, ~ldv_1_ldv_param_9_0_default.base, ~ldv_1_ldv_param_9_0_default.offset, ~ldv_2_container_struct_uvc_control_mapping.base, ~ldv_2_container_struct_uvc_control_mapping.offset, ~ldv_2_ldv_param_3_2_default.base, ~ldv_2_ldv_param_3_2_default.offset, ~ldv_2_ldv_param_9_2_default.base, ~ldv_2_ldv_param_9_2_default.offset, ~ldv_3_container_struct_v4l2_event_ptr.base, ~ldv_3_container_struct_v4l2_event_ptr.offset, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.base, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.offset, ~ldv_3_ldv_param_10_1_default.base, ~ldv_3_ldv_param_10_1_default.offset, ~ldv_3_ldv_param_13_1_default.base, ~ldv_3_ldv_param_13_1_default.offset, ~ldv_4_container_struct_v4l2_format_ptr.base, ~ldv_4_container_struct_v4l2_format_ptr.offset, ~ldv_4_container_struct_vb2_buffer_ptr.base, ~ldv_4_container_struct_vb2_buffer_ptr.offset, ~ldv_4_container_struct_vb2_queue_ptr.base, ~ldv_4_container_struct_vb2_queue_ptr.offset, ~ldv_4_container_void_ptr_ptr.base, ~ldv_4_container_void_ptr_ptr.offset, ~ldv_4_ldv_param_9_3_default.base, ~ldv_4_ldv_param_9_3_default.offset, ~ldv_4_ldv_param_9_4_default.base, ~ldv_4_ldv_param_9_4_default.offset, ~ldv_5_container_usb_driver.base, ~ldv_5_container_usb_driver.offset, ~ldv_5_ldv_param_13_1_default.base, ~ldv_5_ldv_param_13_1_default.offset, ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset, ~ldv_5_resource_usb_interface.base, ~ldv_5_resource_usb_interface.offset, ~ldv_5_usb_device_usb_device.base, ~ldv_5_usb_device_usb_device.offset, ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset, ~ldv_7_ldv_param_24_1_default.base, ~ldv_7_ldv_param_24_1_default.offset, ~ldv_7_ldv_param_24_3_default.base, ~ldv_7_ldv_param_24_3_default.offset, ~ldv_7_resource_file.base, ~ldv_7_resource_file.offset, ~ldv_7_resource_struct_poll_table_struct_ptr.base, ~ldv_7_resource_struct_poll_table_struct_ptr.offset, ~ldv_7_resource_struct_vm_area_struct_ptr.base, ~ldv_7_resource_struct_vm_area_struct_ptr.offset;

implementation ldv_kzalloc(#in~size : int, #in~flags : int) returns (#res.base : int, #res.offset : int){
    var #t~ret3980.base : int, #t~ret3980.offset : int;
    var ~size : int;
    var ~flags : int;
    var ~res~4403.base : int, ~res~4403.offset : int;

  loc16:
    ~size := #in~size;
    ~flags := #in~flags;
    havoc ~res~4403.base, ~res~4403.offset;
    call ldv_check_alloc_flags(~flags);
    call #t~ret3980.base, #t~ret3980.offset := ldv_zalloc(~size);
    ~res~4403.base, ~res~4403.offset := #t~ret3980.base, #t~ret3980.offset;
    havoc #t~ret3980.base, #t~ret3980.offset;
    call ldv_after_alloc(~res~4403.base, ~res~4403.offset);
    #res.base, #res.offset := ~res~4403.base, ~res~4403.offset;
    assume true;
    return;
}

procedure ldv_kzalloc(#in~size : int, #in~flags : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ldv_switch_automaton_state_6_4() returns (){
  loc17:
    ~ldv_statevar_6 := 3;
    assume true;
    return;
}

procedure ldv_switch_automaton_state_6_4() returns ();
modifies ~ldv_statevar_6;

implementation ldv_check_return_value_probe(#in~retval : int) returns (){
    var ~retval : int;

  loc18:
    ~retval := #in~retval;
    assume ~retval != 0;
    call ldv_assert_linux_usb_dev__probe_failed((if ~LDV_USB_DEV_REF_COUNTS == 0 then 1 else 0));
    return;
}

procedure ldv_check_return_value_probe(#in~retval : int) returns ();
modifies ;

implementation ldv_usb_register_driver(#in~arg0 : int, #in~arg1.base : int, #in~arg1.offset : int, #in~arg2.base : int, #in~arg2.offset : int, #in~arg3.base : int, #in~arg3.offset : int) returns (#res : int){
    var #t~ret1069 : int;
    var #t~ret1070 : int;
    var ~arg0 : int;
    var ~arg1.base : int, ~arg1.offset : int;
    var ~arg2.base : int, ~arg2.offset : int;
    var ~arg3.base : int, ~arg3.offset : int;
    var ~ldv_9_usb_driver_usb_driver~1538.base : int, ~ldv_9_usb_driver_usb_driver~1538.offset : int;
    var ~tmp~1538 : int;

  loc19:
    ~arg0 := #in~arg0;
    ~arg1.base, ~arg1.offset := #in~arg1.base, #in~arg1.offset;
    ~arg2.base, ~arg2.offset := #in~arg2.base, #in~arg2.offset;
    ~arg3.base, ~arg3.offset := #in~arg3.base, #in~arg3.offset;
    havoc ~ldv_9_usb_driver_usb_driver~1538.base, ~ldv_9_usb_driver_usb_driver~1538.offset;
    havoc ~tmp~1538;
    call #t~ret1069 := ldv_pre_usb_register_driver();
    assume -2147483648 <= #t~ret1069 && #t~ret1069 <= 2147483647;
    ~arg0 := #t~ret1069;
    havoc #t~ret1069;
    call #t~ret1070 := ldv_undef_int();
    assume -2147483648 <= #t~ret1070 && #t~ret1070 <= 2147483647;
    ~tmp~1538 := #t~ret1070;
    havoc #t~ret1070;
    assume ~tmp~1538 != 0;
    call ldv_assume((if ~arg0 == 0 then 1 else 0));
    ~ldv_9_usb_driver_usb_driver~1538.base, ~ldv_9_usb_driver_usb_driver~1538.offset := ~arg1.base, ~arg1.offset;
    call ldv_assume((if ~ldv_statevar_6 == 4 then 1 else 0));
    call ldv_dispatch_register_9_2(~ldv_9_usb_driver_usb_driver~1538.base, ~ldv_9_usb_driver_usb_driver~1538.offset);
    #res := ~arg0;
    assume true;
    return;
}

procedure ldv_usb_register_driver(#in~arg0 : int, #in~arg1.base : int, #in~arg1.offset : int, #in~arg2.base : int, #in~arg2.offset : int, #in~arg3.base : int, #in~arg3.offset : int) returns (#res : int);
modifies ~ldv_statevar_6, ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset;

implementation ldv_xmalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~malloc3990.base : int, #t~malloc3990.offset : int;
    var #t~ret3991 : int;
    var ~size : int;
    var ~res~4455.base : int, ~res~4455.offset : int;
    var ~tmp~4455.base : int, ~tmp~4455.offset : int;
    var ~tmp___0~4455 : int;

  loc20:
    ~size := #in~size;
    havoc ~res~4455.base, ~res~4455.offset;
    havoc ~tmp~4455.base, ~tmp~4455.offset;
    havoc ~tmp___0~4455;
    call #t~malloc3990.base, #t~malloc3990.offset := #Ultimate.alloc((if ~size % 4294967296 % 4294967296 <= 2147483647 then ~size % 4294967296 % 4294967296 else ~size % 4294967296 % 4294967296 - 4294967296));
    ~tmp~4455.base, ~tmp~4455.offset := #t~malloc3990.base, #t~malloc3990.offset;
    ~res~4455.base, ~res~4455.offset := ~tmp~4455.base, ~tmp~4455.offset;
    call ldv_assume((if (~res~4455.base + ~res~4455.offset) % 18446744073709551616 != 0 then 1 else 0));
    call #t~ret3991 := ldv_is_err(~res~4455.base, ~res~4455.offset);
    assume -9223372036854775808 <= #t~ret3991 && #t~ret3991 <= 9223372036854775807;
    ~tmp___0~4455 := #t~ret3991;
    havoc #t~ret3991;
    call ldv_assume((if ~tmp___0~4455 == 0 then 1 else 0));
    #res.base, #res.offset := ~res~4455.base, ~res~4455.offset;
    assume true;
    return;
}

procedure ldv_xmalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length;

implementation ldv_filter_positive_int(#in~val : int) returns (#res : int){
    var ~val : int;

  loc21:
    ~val := #in~val;
    call ldv_assume((if ~val <= 0 then 1 else 0));
    #res := ~val;
    assume true;
    return;
}

procedure ldv_filter_positive_int(#in~val : int) returns (#res : int);
modifies ;

implementation uvc_init() returns (#res : int){
    var #t~ret988 : int;
    var #t~nondet989.base : int, #t~nondet989.offset : int;
    var #t~ret990 : int;
    var #t~nondet991.base : int, #t~nondet991.offset : int;
    var #t~ret992 : int;
    var ~ret~1041 : int;

  loc22:
    havoc ~ret~1041;
    call #t~ret988 := uvc_debugfs_init();
    assume -2147483648 <= #t~ret988 && #t~ret988 <= 2147483647;
    havoc #t~ret988;
    call #t~nondet989.base, #t~nondet989.offset := #Ultimate.alloc(9);
    call #t~ret990 := ldv_usb_register_driver_26(~#uvc_driver.base, ~#uvc_driver.offset + 0, ~#__this_module.base, ~#__this_module.offset, #t~nondet989.base, #t~nondet989.offset);
    assume -2147483648 <= #t~ret990 && #t~ret990 <= 2147483647;
    ~ret~1041 := #t~ret990;
    havoc #t~nondet989.base, #t~nondet989.offset;
    havoc #t~ret990;
    assume !(~ret~1041 < 0);
    call #t~nondet991.base, #t~nondet991.offset := #Ultimate.alloc(37);
    call #t~ret992 := printk(#t~nondet991.base, #t~nondet991.offset);
    assume -2147483648 <= #t~ret992 && #t~ret992 <= 2147483647;
    havoc #t~nondet991.base, #t~nondet991.offset;
    havoc #t~ret992;
    #res := 0;
    assume true;
    return;
}

procedure uvc_init() returns (#res : int);
modifies #valid, #length, ~uvc_debugfs_root_dir.base, ~uvc_debugfs_root_dir.offset, ~ldv_statevar_6, ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset;

implementation ldv_usb_dummy_factory_6(#in~arg0.base : int, #in~arg0.offset : int) returns (){
    var ~arg0.base : int, ~arg0.offset : int;

  loc23:
    ~arg0.base, ~arg0.offset := #in~arg0.base, #in~arg0.offset;
    assume !(~ldv_statevar_6 == 2);
    assume ~ldv_statevar_6 == 3;
    call ldv_assume((if ~ldv_statevar_5 == 15 then 1 else 0));
    call ldv_dispatch_instance_register_6_3(~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset);
    ~ldv_statevar_6 := 2;
    assume true;
    return;
}

procedure ldv_usb_dummy_factory_6(#in~arg0.base : int, #in~arg0.offset : int) returns ();
modifies ~ldv_statevar_6, ~ldv_5_reset_flag_default, ~ldv_statevar_5, ~ldv_5_container_usb_driver.base, ~ldv_5_container_usb_driver.offset;

implementation ldv_EMGentry_init_uvc_init_10_19(#in~arg0.base : int, #in~arg0.offset : int) returns (#res : int){
    var #t~ret993 : int;
    var ~arg0.base : int, ~arg0.offset : int;
    var ~tmp~1128 : int;

  loc24:
    ~arg0.base, ~arg0.offset := #in~arg0.base, #in~arg0.offset;
    havoc ~tmp~1128;
    call #t~ret993 := uvc_init();
    assume -2147483648 <= #t~ret993 && #t~ret993 <= 2147483647;
    ~tmp~1128 := #t~ret993;
    havoc #t~ret993;
    #res := ~tmp~1128;
    assume true;
    return;
}

procedure ldv_EMGentry_init_uvc_init_10_19(#in~arg0.base : int, #in~arg0.offset : int) returns (#res : int);
modifies #valid, #length, ~uvc_debugfs_root_dir.base, ~uvc_debugfs_root_dir.offset, ~ldv_statevar_6, ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset;

implementation ldv_is_err(#in~ptr.base : int, #in~ptr.offset : int) returns (#res : int){
    var ~ptr.base : int, ~ptr.offset : int;

  loc25:
    ~ptr.base, ~ptr.offset := #in~ptr.base, #in~ptr.offset;
    #res := (if (~ptr.base + ~ptr.offset) % 18446744073709551616 > 4294967295 then 1 else 0);
    assume true;
    return;
}

procedure ldv_is_err(#in~ptr.base : int, #in~ptr.offset : int) returns (#res : int);
modifies ;

implementation IS_ERR_OR_NULL(#in~ptr.base : int, #in~ptr.offset : int) returns (#res : int){
    var #t~ret3891 : int;
    var ~ptr.base : int, ~ptr.offset : int;
    var ~tmp~4304 : int;

  loc26:
    ~ptr.base, ~ptr.offset := #in~ptr.base, #in~ptr.offset;
    havoc ~tmp~4304;
    call #t~ret3891 := ldv_is_err_or_null(~ptr.base, ~ptr.offset);
    assume -9223372036854775808 <= #t~ret3891 && #t~ret3891 <= 9223372036854775807;
    ~tmp~4304 := #t~ret3891;
    havoc #t~ret3891;
    #res := ~tmp~4304;
    assume true;
    return;
}

procedure IS_ERR_OR_NULL(#in~ptr.base : int, #in~ptr.offset : int) returns (#res : int);
modifies ;

implementation ULTIMATE.init() returns (){
    var #t~nondet99.base : int, #t~nondet99.offset : int;
    var #t~nondet100.base : int, #t~nondet100.offset : int;
    var #t~nondet101.base : int, #t~nondet101.offset : int;
    var #t~nondet102.base : int, #t~nondet102.offset : int;
    var #t~nondet103.base : int, #t~nondet103.offset : int;
    var #t~nondet104.base : int, #t~nondet104.offset : int;
    var #t~nondet105.base : int, #t~nondet105.offset : int;
    var #t~nondet106.base : int, #t~nondet106.offset : int;
    var #t~nondet107.base : int, #t~nondet107.offset : int;
    var #t~nondet108.base : int, #t~nondet108.offset : int;
    var #t~nondet109.base : int, #t~nondet109.offset : int;
    var #t~nondet110.base : int, #t~nondet110.offset : int;
    var #t~nondet111.base : int, #t~nondet111.offset : int;
    var #t~nondet112.base : int, #t~nondet112.offset : int;
    var #t~nondet113.base : int, #t~nondet113.offset : int;
    var #t~nondet114.base : int, #t~nondet114.offset : int;
    var #t~nondet987.base : int, #t~nondet987.offset : int;
    var #t~union3995.head : int, #t~union3995.tail : int;
    var #t~union3996.__padding : [int]int, #t~union3996.dep_map.key.base : int, #t~union3996.dep_map.key.offset : int, #t~union3996.dep_map.class_cache.base : [int]int, #t~union3996.dep_map.class_cache.offset : [int]int, #t~union3996.dep_map.name.base : int, #t~union3996.dep_map.name.offset : int, #t~union3996.dep_map.cpu : int, #t~union3996.dep_map.ip : int;

  loc27:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~uvc_no_drop_param := 0;
    ~uvc_trace_param := 0;
    ~uvc_clock_param := 1;
    ~uvc_quirks_param := 4294967295;
    ~uvc_timeout_param := 5000;
    ~ldv_0_ldv_param_4_1_default.base, ~ldv_0_ldv_param_4_1_default.offset := 0, 0;
    ~ldv_0_ldv_param_4_3_default.base, ~ldv_0_ldv_param_4_3_default.offset := 0, 0;
    ~ldv_0_ret_default := 0;
    ~ldv_0_size_cnt_write_size := 0;
    ~ldv_10_ret_default := 0;
    ~ldv_1_ldv_param_3_0_default.base, ~ldv_1_ldv_param_3_0_default.offset := 0, 0;
    ~ldv_1_ldv_param_9_0_default.base, ~ldv_1_ldv_param_9_0_default.offset := 0, 0;
    ~ldv_2_ldv_param_3_1_default := 0;
    ~ldv_2_ldv_param_3_2_default.base, ~ldv_2_ldv_param_3_2_default.offset := 0, 0;
    ~ldv_2_ldv_param_9_1_default := 0;
    ~ldv_2_ldv_param_9_2_default.base, ~ldv_2_ldv_param_9_2_default.offset := 0, 0;
    ~ldv_3_ldv_param_3_1_default := 0;
    ~ldv_4_container_void_ptr_ptr.base, ~ldv_4_container_void_ptr_ptr.offset := 0, 0;
    ~ldv_4_ldv_param_9_3_default.base, ~ldv_4_ldv_param_9_3_default.offset := 0, 0;
    ~ldv_4_ldv_param_9_4_default.base, ~ldv_4_ldv_param_9_4_default.offset := 0, 0;
    ~ldv_5_probe_retval_default := 0;
    ~ldv_5_reset_flag_default := 0;
    ~ldv_7_ldv_param_19_1_default := 0;
    ~ldv_7_ldv_param_19_2_default := 0;
    ~ldv_7_ldv_param_24_1_default.base, ~ldv_7_ldv_param_24_1_default.offset := 0, 0;
    ~ldv_7_ldv_param_24_2_default := 0;
    ~ldv_7_ldv_param_24_3_default.base, ~ldv_7_ldv_param_24_3_default.offset := 0, 0;
    ~ldv_7_ldv_param_27_1_default := 0;
    ~ldv_7_ldv_param_27_2_default := 0;
    ~ldv_7_ldv_param_4_1_default := 0;
    ~ldv_7_ldv_param_4_2_default := 0;
    ~ldv_7_ret_default := 0;
    ~ldv_statevar_0 := 0;
    ~ldv_statevar_1 := 0;
    ~ldv_statevar_10 := 0;
    ~ldv_statevar_2 := 0;
    ~ldv_statevar_3 := 0;
    ~ldv_statevar_4 := 0;
    ~ldv_statevar_5 := 0;
    ~ldv_statevar_6 := 0;
    ~ldv_statevar_7 := 0;
    call ~#uvc_fops.base, ~#uvc_fops.offset := #Ultimate.alloc(88);
    call write~$Pointer$(0, 0, ~#uvc_fops.base, ~#uvc_fops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_fops.base, ~#uvc_fops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_fops.base, ~#uvc_fops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#uvc_fops.base, ~#uvc_fops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#uvc_fops.base, ~#uvc_fops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#uvc_fops.base, ~#uvc_fops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#uvc_fops.base, ~#uvc_fops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#uvc_fops.base, ~#uvc_fops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#uvc_fops.base, ~#uvc_fops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#uvc_fops.base, ~#uvc_fops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#uvc_fops.base, ~#uvc_fops.offset + 80, 8);
    call ~#uvc_fmts.base, ~#uvc_fmts.offset := #Ultimate.alloc(448);
    call #t~nondet99.base, #t~nondet99.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet99.base, #t~nondet99.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 0, 8);
    call write~int(89, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 0, 1);
    call write~int(85, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 1, 1);
    call write~int(89, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 2, 1);
    call write~int(50, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 8 + 15, 1);
    call write~int(1448695129, ~#uvc_fmts.base, ~#uvc_fmts.offset + 0 + 24, 4);
    call #t~nondet100.base, #t~nondet100.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet100.base, #t~nondet100.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 0, 8);
    call write~int(89, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 0, 1);
    call write~int(85, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 1, 1);
    call write~int(89, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 2, 1);
    call write~int(50, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 10, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 8 + 15, 1);
    call write~int(1448695129, ~#uvc_fmts.base, ~#uvc_fmts.offset + 28 + 24, 4);
    call #t~nondet101.base, #t~nondet101.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet101.base, #t~nondet101.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 0, 8);
    call write~int(78, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 0, 1);
    call write~int(86, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 1, 1);
    call write~int(49, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 2, 1);
    call write~int(50, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 8 + 15, 1);
    call write~int(842094158, ~#uvc_fmts.base, ~#uvc_fmts.offset + 56 + 24, 4);
    call #t~nondet102.base, #t~nondet102.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet102.base,#t~nondet102.offset + 0 := 77];
    #memory_int := #memory_int[#t~nondet102.base,#t~nondet102.offset + 1 := 74];
    #memory_int := #memory_int[#t~nondet102.base,#t~nondet102.offset + 2 := 80];
    #memory_int := #memory_int[#t~nondet102.base,#t~nondet102.offset + 3 := 69];
    #memory_int := #memory_int[#t~nondet102.base,#t~nondet102.offset + 4 := 71];
    #memory_int := #memory_int[#t~nondet102.base,#t~nondet102.offset + 5 := 0];
    call write~$Pointer$(#t~nondet102.base, #t~nondet102.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 0, 8);
    call write~int(77, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 0, 1);
    call write~int(74, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 1, 1);
    call write~int(80, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 2, 1);
    call write~int(71, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 8 + 15, 1);
    call write~int(1196444237, ~#uvc_fmts.base, ~#uvc_fmts.offset + 84 + 24, 4);
    call #t~nondet103.base, #t~nondet103.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet103.base, #t~nondet103.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 0, 8);
    call write~int(89, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 0, 1);
    call write~int(86, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 1, 1);
    call write~int(49, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 2, 1);
    call write~int(50, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 8 + 15, 1);
    call write~int(842094169, ~#uvc_fmts.base, ~#uvc_fmts.offset + 112 + 24, 4);
    call #t~nondet104.base, #t~nondet104.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet104.base, #t~nondet104.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 0, 8);
    call write~int(73, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 0, 1);
    call write~int(52, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 1, 1);
    call write~int(50, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 2, 1);
    call write~int(48, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 8 + 15, 1);
    call write~int(842093913, ~#uvc_fmts.base, ~#uvc_fmts.offset + 140 + 24, 4);
    call #t~nondet105.base, #t~nondet105.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet105.base, #t~nondet105.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 0, 8);
    call write~int(77, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 0, 1);
    call write~int(52, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 1, 1);
    call write~int(50, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 2, 1);
    call write~int(48, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 8 + 15, 1);
    call write~int(808596557, ~#uvc_fmts.base, ~#uvc_fmts.offset + 168 + 24, 4);
    call #t~nondet106.base, #t~nondet106.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet106.base, #t~nondet106.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 0, 8);
    call write~int(85, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 0, 1);
    call write~int(89, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 1, 1);
    call write~int(86, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 2, 1);
    call write~int(89, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 8 + 15, 1);
    call write~int(1498831189, ~#uvc_fmts.base, ~#uvc_fmts.offset + 196 + 24, 4);
    call #t~nondet107.base, #t~nondet107.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet107.base, #t~nondet107.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 0, 8);
    call write~int(89, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 0, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 1, 1);
    call write~int(48, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 2, 1);
    call write~int(48, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 8 + 15, 1);
    call write~int(1497715271, ~#uvc_fmts.base, ~#uvc_fmts.offset + 224 + 24, 4);
    call #t~nondet108.base, #t~nondet108.offset := #Ultimate.alloc(23);
    call write~$Pointer$(#t~nondet108.base, #t~nondet108.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 0, 8);
    call write~int(89, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 0, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 1, 1);
    call write~int(32, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 2, 1);
    call write~int(32, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 8 + 15, 1);
    call write~int(1497715271, ~#uvc_fmts.base, ~#uvc_fmts.offset + 252 + 24, 4);
    call #t~nondet109.base, #t~nondet109.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet109.base, #t~nondet109.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 0, 8);
    call write~int(89, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 0, 1);
    call write~int(49, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 1, 1);
    call write~int(48, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 2, 1);
    call write~int(32, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 8 + 15, 1);
    call write~int(540029273, ~#uvc_fmts.base, ~#uvc_fmts.offset + 280 + 24, 4);
    call #t~nondet110.base, #t~nondet110.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet110.base, #t~nondet110.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 0, 8);
    call write~int(89, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 0, 1);
    call write~int(49, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 1, 1);
    call write~int(50, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 2, 1);
    call write~int(32, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 8 + 15, 1);
    call write~int(540160345, ~#uvc_fmts.base, ~#uvc_fmts.offset + 308 + 24, 4);
    call #t~nondet111.base, #t~nondet111.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet111.base, #t~nondet111.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 0, 8);
    call write~int(89, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 0, 1);
    call write~int(49, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 1, 1);
    call write~int(54, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 2, 1);
    call write~int(32, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 8 + 15, 1);
    call write~int(540422489, ~#uvc_fmts.base, ~#uvc_fmts.offset + 336 + 24, 4);
    call #t~nondet112.base, #t~nondet112.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet112.base, #t~nondet112.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 0, 8);
    call write~int(66, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 0, 1);
    call write~int(89, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 1, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 2, 1);
    call write~int(32, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 8 + 15, 1);
    call write~int(825770306, ~#uvc_fmts.base, ~#uvc_fmts.offset + 364 + 24, 4);
    call #t~nondet113.base, #t~nondet113.offset := #Ultimate.alloc(7);
    #memory_int := #memory_int[#t~nondet113.base,#t~nondet113.offset + 0 := 82];
    #memory_int := #memory_int[#t~nondet113.base,#t~nondet113.offset + 1 := 71];
    #memory_int := #memory_int[#t~nondet113.base,#t~nondet113.offset + 2 := 66];
    #memory_int := #memory_int[#t~nondet113.base,#t~nondet113.offset + 3 := 53];
    #memory_int := #memory_int[#t~nondet113.base,#t~nondet113.offset + 4 := 54];
    #memory_int := #memory_int[#t~nondet113.base,#t~nondet113.offset + 5 := 53];
    #memory_int := #memory_int[#t~nondet113.base,#t~nondet113.offset + 6 := 0];
    call write~$Pointer$(#t~nondet113.base, #t~nondet113.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 0, 8);
    call write~int(82, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 0, 1);
    call write~int(71, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 1, 1);
    call write~int(66, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 2, 1);
    call write~int(80, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 8 + 15, 1);
    call write~int(1346520914, ~#uvc_fmts.base, ~#uvc_fmts.offset + 392 + 24, 4);
    call #t~nondet114.base, #t~nondet114.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet114.base,#t~nondet114.offset + 0 := 72];
    #memory_int := #memory_int[#t~nondet114.base,#t~nondet114.offset + 1 := 46];
    #memory_int := #memory_int[#t~nondet114.base,#t~nondet114.offset + 2 := 50];
    #memory_int := #memory_int[#t~nondet114.base,#t~nondet114.offset + 3 := 54];
    #memory_int := #memory_int[#t~nondet114.base,#t~nondet114.offset + 4 := 52];
    #memory_int := #memory_int[#t~nondet114.base,#t~nondet114.offset + 5 := 0];
    call write~$Pointer$(#t~nondet114.base, #t~nondet114.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 0, 8);
    call write~int(72, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 0, 1);
    call write~int(50, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 1, 1);
    call write~int(54, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 2, 1);
    call write~int(52, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 3, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 4, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 5, 1);
    call write~int(16, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 6, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 7, 1);
    call write~int(128, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 8, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 9, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 10, 1);
    call write~int(170, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 11, 1);
    call write~int(0, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 12, 1);
    call write~int(56, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 13, 1);
    call write~int(155, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 14, 1);
    call write~int(113, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 8 + 15, 1);
    call write~int(875967048, ~#uvc_fmts.base, ~#uvc_fmts.offset + 420 + 24, 4);
    havoc #t~nondet99.base, #t~nondet99.offset;
    havoc #t~nondet100.base, #t~nondet100.offset;
    havoc #t~nondet101.base, #t~nondet101.offset;
    havoc #t~nondet102.base, #t~nondet102.offset;
    havoc #t~nondet103.base, #t~nondet103.offset;
    havoc #t~nondet104.base, #t~nondet104.offset;
    havoc #t~nondet105.base, #t~nondet105.offset;
    havoc #t~nondet106.base, #t~nondet106.offset;
    havoc #t~nondet107.base, #t~nondet107.offset;
    havoc #t~nondet108.base, #t~nondet108.offset;
    havoc #t~nondet109.base, #t~nondet109.offset;
    havoc #t~nondet110.base, #t~nondet110.offset;
    havoc #t~nondet111.base, #t~nondet111.offset;
    havoc #t~nondet112.base, #t~nondet112.offset;
    havoc #t~nondet113.base, #t~nondet113.offset;
    havoc #t~nondet114.base, #t~nondet114.offset;
    call ~#uvc_ids.base, ~#uvc_ids.offset := #Ultimate.alloc(1175);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 0 + 0, 2);
    call write~int(1046, ~#uvc_ids.base, ~#uvc_ids.offset + 0 + 2, 2);
    call write~int(43290, ~#uvc_ids.base, ~#uvc_ids.offset + 0 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 0 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 0 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 0 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 0 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 0 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 0 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 0 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 0 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 0 + 16, 1);
    call write~int(2, ~#uvc_ids.base, ~#uvc_ids.offset + 0 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 25 + 0, 2);
    call write~int(1112, ~#uvc_ids.base, ~#uvc_ids.offset + 25 + 2, 2);
    call write~int(28782, ~#uvc_ids.base, ~#uvc_ids.offset + 25 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 25 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 25 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 25 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 25 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 25 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 25 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 25 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 25 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 25 + 16, 1);
    call write~int(2, ~#uvc_ids.base, ~#uvc_ids.offset + 25 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 50 + 0, 2);
    call write~int(1118, ~#uvc_ids.base, ~#uvc_ids.offset + 50 + 2, 2);
    call write~int(248, ~#uvc_ids.base, ~#uvc_ids.offset + 50 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 50 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 50 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 50 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 50 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 50 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 50 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 50 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 50 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 50 + 16, 1);
    call write~int(2, ~#uvc_ids.base, ~#uvc_ids.offset + 50 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 75 + 0, 2);
    call write~int(1118, ~#uvc_ids.base, ~#uvc_ids.offset + 75 + 2, 2);
    call write~int(1825, ~#uvc_ids.base, ~#uvc_ids.offset + 75 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 75 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 75 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 75 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 75 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 75 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 75 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 75 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 75 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 75 + 16, 1);
    call write~int(256, ~#uvc_ids.base, ~#uvc_ids.offset + 75 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 100 + 0, 2);
    call write~int(1118, ~#uvc_ids.base, ~#uvc_ids.offset + 100 + 2, 2);
    call write~int(1827, ~#uvc_ids.base, ~#uvc_ids.offset + 100 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 100 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 100 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 100 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 100 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 100 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 100 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 100 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 100 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 100 + 16, 1);
    call write~int(2, ~#uvc_ids.base, ~#uvc_ids.offset + 100 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 125 + 0, 2);
    call write~int(1133, ~#uvc_ids.base, ~#uvc_ids.offset + 125 + 2, 2);
    call write~int(2241, ~#uvc_ids.base, ~#uvc_ids.offset + 125 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 125 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 125 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 125 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 125 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 125 + 12, 1);
    call write~int(255, ~#uvc_ids.base, ~#uvc_ids.offset + 125 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 125 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 125 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 125 + 16, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 125 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 150 + 0, 2);
    call write~int(1133, ~#uvc_ids.base, ~#uvc_ids.offset + 150 + 2, 2);
    call write~int(2242, ~#uvc_ids.base, ~#uvc_ids.offset + 150 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 150 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 150 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 150 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 150 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 150 + 12, 1);
    call write~int(255, ~#uvc_ids.base, ~#uvc_ids.offset + 150 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 150 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 150 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 150 + 16, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 150 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 175 + 0, 2);
    call write~int(1133, ~#uvc_ids.base, ~#uvc_ids.offset + 175 + 2, 2);
    call write~int(2243, ~#uvc_ids.base, ~#uvc_ids.offset + 175 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 175 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 175 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 175 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 175 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 175 + 12, 1);
    call write~int(255, ~#uvc_ids.base, ~#uvc_ids.offset + 175 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 175 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 175 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 175 + 16, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 175 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 200 + 0, 2);
    call write~int(1133, ~#uvc_ids.base, ~#uvc_ids.offset + 200 + 2, 2);
    call write~int(2245, ~#uvc_ids.base, ~#uvc_ids.offset + 200 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 200 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 200 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 200 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 200 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 200 + 12, 1);
    call write~int(255, ~#uvc_ids.base, ~#uvc_ids.offset + 200 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 200 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 200 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 200 + 16, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 200 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 225 + 0, 2);
    call write~int(1133, ~#uvc_ids.base, ~#uvc_ids.offset + 225 + 2, 2);
    call write~int(2246, ~#uvc_ids.base, ~#uvc_ids.offset + 225 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 225 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 225 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 225 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 225 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 225 + 12, 1);
    call write~int(255, ~#uvc_ids.base, ~#uvc_ids.offset + 225 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 225 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 225 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 225 + 16, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 225 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 250 + 0, 2);
    call write~int(1133, ~#uvc_ids.base, ~#uvc_ids.offset + 250 + 2, 2);
    call write~int(2247, ~#uvc_ids.base, ~#uvc_ids.offset + 250 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 250 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 250 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 250 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 250 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 250 + 12, 1);
    call write~int(255, ~#uvc_ids.base, ~#uvc_ids.offset + 250 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 250 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 250 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 250 + 16, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 250 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 275 + 0, 2);
    call write~int(1266, ~#uvc_ids.base, ~#uvc_ids.offset + 275 + 2, 2);
    call write~int(45169, ~#uvc_ids.base, ~#uvc_ids.offset + 275 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 275 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 275 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 275 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 275 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 275 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 275 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 275 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 275 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 275 + 16, 1);
    call write~int(512, ~#uvc_ids.base, ~#uvc_ids.offset + 275 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 300 + 0, 2);
    call write~int(1423, ~#uvc_ids.base, ~#uvc_ids.offset + 300 + 2, 2);
    call write~int(14368, ~#uvc_ids.base, ~#uvc_ids.offset + 300 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 300 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 300 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 300 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 300 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 300 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 300 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 300 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 300 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 300 + 16, 1);
    call write~int(2, ~#uvc_ids.base, ~#uvc_ids.offset + 300 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 325 + 0, 2);
    call write~int(1449, ~#uvc_ids.base, ~#uvc_ids.offset + 325 + 2, 2);
    call write~int(9792, ~#uvc_ids.base, ~#uvc_ids.offset + 325 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 325 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 325 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 325 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 325 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 325 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 325 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 325 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 325 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 325 + 16, 1);
    call write~int(256, ~#uvc_ids.base, ~#uvc_ids.offset + 325 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 350 + 0, 2);
    call write~int(1449, ~#uvc_ids.base, ~#uvc_ids.offset + 350 + 2, 2);
    call write~int(9793, ~#uvc_ids.base, ~#uvc_ids.offset + 350 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 350 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 350 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 350 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 350 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 350 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 350 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 350 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 350 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 350 + 16, 1);
    call write~int(256, ~#uvc_ids.base, ~#uvc_ids.offset + 350 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 375 + 0, 2);
    call write~int(1449, ~#uvc_ids.base, ~#uvc_ids.offset + 375 + 2, 2);
    call write~int(9795, ~#uvc_ids.base, ~#uvc_ids.offset + 375 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 375 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 375 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 375 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 375 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 375 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 375 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 375 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 375 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 375 + 16, 1);
    call write~int(256, ~#uvc_ids.base, ~#uvc_ids.offset + 375 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 400 + 0, 2);
    call write~int(1449, ~#uvc_ids.base, ~#uvc_ids.offset + 400 + 2, 2);
    call write~int(9802, ~#uvc_ids.base, ~#uvc_ids.offset + 400 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 400 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 400 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 400 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 400 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 400 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 400 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 400 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 400 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 400 + 16, 1);
    call write~int(256, ~#uvc_ids.base, ~#uvc_ids.offset + 400 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 425 + 0, 2);
    call write~int(1452, ~#uvc_ids.base, ~#uvc_ids.offset + 425 + 2, 2);
    call write~int(34049, ~#uvc_ids.base, ~#uvc_ids.offset + 425 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 425 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 425 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 425 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 425 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 425 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 425 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 425 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 425 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 425 + 16, 1);
    call write~int(10, ~#uvc_ids.base, ~#uvc_ids.offset + 425 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 450 + 0, 2);
    call write~int(1480, ~#uvc_ids.base, ~#uvc_ids.offset + 450 + 2, 2);
    call write~int(1027, ~#uvc_ids.base, ~#uvc_ids.offset + 450 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 450 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 450 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 450 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 450 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 450 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 450 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 450 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 450 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 450 + 16, 1);
    call write~int(128, ~#uvc_ids.base, ~#uvc_ids.offset + 450 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 475 + 0, 2);
    call write~int(1507, ~#uvc_ids.base, ~#uvc_ids.offset + 475 + 2, 2);
    call write~int(1285, ~#uvc_ids.base, ~#uvc_ids.offset + 475 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 475 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 475 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 475 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 475 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 475 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 475 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 475 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 475 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 475 + 16, 1);
    call write~int(16, ~#uvc_ids.base, ~#uvc_ids.offset + 475 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 500 + 0, 2);
    call write~int(1784, ~#uvc_ids.base, ~#uvc_ids.offset + 500 + 2, 2);
    call write~int(12300, ~#uvc_ids.base, ~#uvc_ids.offset + 500 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 500 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 500 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 500 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 500 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 500 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 500 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 500 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 500 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 500 + 16, 1);
    call write~int(128, ~#uvc_ids.base, ~#uvc_ids.offset + 500 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 525 + 0, 2);
    call write~int(2760, ~#uvc_ids.base, ~#uvc_ids.offset + 525 + 2, 2);
    call write~int(13101, ~#uvc_ids.base, ~#uvc_ids.offset + 525 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 525 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 525 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 525 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 525 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 525 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 525 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 525 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 525 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 525 + 16, 1);
    call write~int(128, ~#uvc_ids.base, ~#uvc_ids.offset + 525 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 550 + 0, 2);
    call write~int(2760, ~#uvc_ids.base, ~#uvc_ids.offset + 550 + 2, 2);
    call write~int(13328, ~#uvc_ids.base, ~#uvc_ids.offset + 550 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 550 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 550 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 550 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 550 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 550 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 550 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 550 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 550 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 550 + 16, 1);
    call write~int(128, ~#uvc_ids.base, ~#uvc_ids.offset + 550 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 575 + 0, 2);
    call write~int(2760, ~#uvc_ids.base, ~#uvc_ids.offset + 575 + 2, 2);
    call write~int(13344, ~#uvc_ids.base, ~#uvc_ids.offset + 575 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 575 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 575 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 575 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 575 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 575 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 575 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 575 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 575 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 575 + 16, 1);
    call write~int(128, ~#uvc_ids.base, ~#uvc_ids.offset + 575 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 600 + 0, 2);
    call write~int(3027, ~#uvc_ids.base, ~#uvc_ids.offset + 600 + 2, 2);
    call write~int(1365, ~#uvc_ids.base, ~#uvc_ids.offset + 600 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 600 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 600 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 600 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 600 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 600 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 600 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 600 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 600 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 600 + 16, 1);
    call write~int(2, ~#uvc_ids.base, ~#uvc_ids.offset + 600 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 625 + 0, 2);
    call write~int(3725, ~#uvc_ids.base, ~#uvc_ids.offset + 625 + 2, 2);
    call write~int(4, ~#uvc_ids.base, ~#uvc_ids.offset + 625 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 625 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 625 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 625 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 625 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 625 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 625 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 625 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 625 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 625 + 16, 1);
    call write~int(258, ~#uvc_ids.base, ~#uvc_ids.offset + 625 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 650 + 0, 2);
    call write~int(5075, ~#uvc_ids.base, ~#uvc_ids.offset + 650 + 2, 2);
    call write~int(20739, ~#uvc_ids.base, ~#uvc_ids.offset + 650 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 650 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 650 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 650 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 650 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 650 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 650 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 650 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 650 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 650 + 16, 1);
    call write~int(16, ~#uvc_ids.base, ~#uvc_ids.offset + 650 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 675 + 0, 2);
    call write~int(5421, ~#uvc_ids.base, ~#uvc_ids.offset + 675 + 2, 2);
    call write~int(784, ~#uvc_ids.base, ~#uvc_ids.offset + 675 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 675 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 675 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 675 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 675 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 675 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 675 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 675 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 675 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 675 + 16, 1);
    call write~int(2, ~#uvc_ids.base, ~#uvc_ids.offset + 675 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 700 + 0, 2);
    call write~int(5967, ~#uvc_ids.base, ~#uvc_ids.offset + 700 + 2, 2);
    call write~int(21010, ~#uvc_ids.base, ~#uvc_ids.offset + 700 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 700 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 700 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 700 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 700 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 700 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 700 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 700 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 700 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 700 + 16, 1);
    call write~int(16, ~#uvc_ids.base, ~#uvc_ids.offset + 700 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 725 + 0, 2);
    call write~int(5967, ~#uvc_ids.base, ~#uvc_ids.offset + 725 + 2, 2);
    call write~int(22833, ~#uvc_ids.base, ~#uvc_ids.offset + 725 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 725 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 725 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 725 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 725 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 725 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 725 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 725 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 725 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 725 + 16, 1);
    call write~int(16, ~#uvc_ids.base, ~#uvc_ids.offset + 725 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 750 + 0, 2);
    call write~int(5967, ~#uvc_ids.base, ~#uvc_ids.offset + 750 + 2, 2);
    call write~int(35346, ~#uvc_ids.base, ~#uvc_ids.offset + 750 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 750 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 750 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 750 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 750 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 750 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 750 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 750 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 750 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 750 + 16, 1);
    call write~int(16, ~#uvc_ids.base, ~#uvc_ids.offset + 750 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 775 + 0, 2);
    call write~int(5967, ~#uvc_ids.base, ~#uvc_ids.offset + 775 + 2, 2);
    call write~int(35377, ~#uvc_ids.base, ~#uvc_ids.offset + 775 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 775 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 775 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 775 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 775 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 775 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 775 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 775 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 775 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 775 + 16, 1);
    call write~int(16, ~#uvc_ids.base, ~#uvc_ids.offset + 775 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 800 + 0, 2);
    call write~int(5967, ~#uvc_ids.base, ~#uvc_ids.offset + 800 + 2, 2);
    call write~int(35379, ~#uvc_ids.base, ~#uvc_ids.offset + 800 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 800 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 800 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 800 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 800 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 800 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 800 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 800 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 800 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 800 + 16, 1);
    call write~int(16, ~#uvc_ids.base, ~#uvc_ids.offset + 800 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 825 + 0, 2);
    call write~int(5967, ~#uvc_ids.base, ~#uvc_ids.offset + 825 + 2, 2);
    call write~int(35380, ~#uvc_ids.base, ~#uvc_ids.offset + 825 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 825 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 825 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 825 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 825 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 825 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 825 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 825 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 825 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 825 + 16, 1);
    call write~int(16, ~#uvc_ids.base, ~#uvc_ids.offset + 825 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 850 + 0, 2);
    call write~int(6108, ~#uvc_ids.base, ~#uvc_ids.offset + 850 + 2, 2);
    call write~int(514, ~#uvc_ids.base, ~#uvc_ids.offset + 850 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 850 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 850 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 850 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 850 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 850 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 850 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 850 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 850 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 850 + 16, 1);
    call write~int(16, ~#uvc_ids.base, ~#uvc_ids.offset + 850 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 875 + 0, 2);
    call write~int(6127, ~#uvc_ids.base, ~#uvc_ids.offset + 875 + 2, 2);
    call write~int(18443, ~#uvc_ids.base, ~#uvc_ids.offset + 875 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 875 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 875 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 875 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 875 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 875 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 875 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 875 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 875 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 875 + 16, 1);
    call write~int(16, ~#uvc_ids.base, ~#uvc_ids.offset + 875 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 900 + 0, 2);
    call write~int(6257, ~#uvc_ids.base, ~#uvc_ids.offset + 900 + 2, 2);
    call write~int(774, ~#uvc_ids.base, ~#uvc_ids.offset + 900 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 900 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 900 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 900 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 900 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 900 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 900 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 900 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 900 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 900 + 16, 1);
    call write~int(6, ~#uvc_ids.base, ~#uvc_ids.offset + 900 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 925 + 0, 2);
    call write~int(6349, ~#uvc_ids.base, ~#uvc_ids.offset + 925 + 2, 2);
    call write~int(51966, ~#uvc_ids.base, ~#uvc_ids.offset + 925 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 925 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 925 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 925 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 925 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 925 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 925 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 925 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 925 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 925 + 16, 1);
    call write~int(4, ~#uvc_ids.base, ~#uvc_ids.offset + 925 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 950 + 0, 2);
    call write~int(6380, ~#uvc_ids.base, ~#uvc_ids.offset + 950 + 2, 2);
    call write~int(12680, ~#uvc_ids.base, ~#uvc_ids.offset + 950 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 950 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 950 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 950 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 950 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 950 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 950 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 950 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 950 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 950 + 16, 1);
    call write~int(2, ~#uvc_ids.base, ~#uvc_ids.offset + 950 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 975 + 0, 2);
    call write~int(6380, ~#uvc_ids.base, ~#uvc_ids.offset + 975 + 2, 2);
    call write~int(12936, ~#uvc_ids.base, ~#uvc_ids.offset + 975 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 975 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 975 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 975 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 975 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 975 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 975 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 975 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 975 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 975 + 16, 1);
    call write~int(2, ~#uvc_ids.base, ~#uvc_ids.offset + 975 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 1000 + 0, 2);
    call write~int(6380, ~#uvc_ids.base, ~#uvc_ids.offset + 1000 + 2, 2);
    call write~int(12944, ~#uvc_ids.base, ~#uvc_ids.offset + 1000 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1000 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1000 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1000 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1000 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1000 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 1000 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 1000 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1000 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1000 + 16, 1);
    call write~int(256, ~#uvc_ids.base, ~#uvc_ids.offset + 1000 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 1025 + 0, 2);
    call write~int(6558, ~#uvc_ids.base, ~#uvc_ids.offset + 1025 + 2, 2);
    call write~int(33026, ~#uvc_ids.base, ~#uvc_ids.offset + 1025 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1025 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1025 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1025 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1025 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1025 + 12, 1);
    call write~int(255, ~#uvc_ids.base, ~#uvc_ids.offset + 1025 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 1025 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1025 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1025 + 16, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1025 + 17, 8);
    call write~int(907, ~#uvc_ids.base, ~#uvc_ids.offset + 1050 + 0, 2);
    call write~int(6571, ~#uvc_ids.base, ~#uvc_ids.offset + 1050 + 2, 2);
    call write~int(4096, ~#uvc_ids.base, ~#uvc_ids.offset + 1050 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1050 + 6, 2);
    call write~int(294, ~#uvc_ids.base, ~#uvc_ids.offset + 1050 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1050 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1050 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1050 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 1050 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 1050 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1050 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1050 + 16, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 1050 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 1075 + 0, 2);
    call write~int(6971, ~#uvc_ids.base, ~#uvc_ids.offset + 1075 + 2, 2);
    call write~int(10577, ~#uvc_ids.base, ~#uvc_ids.offset + 1075 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1075 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1075 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1075 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1075 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1075 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 1075 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 1075 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1075 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1075 + 16, 1);
    call write~int(2, ~#uvc_ids.base, ~#uvc_ids.offset + 1075 + 17, 8);
    call write~int(899, ~#uvc_ids.base, ~#uvc_ids.offset + 1100 + 0, 2);
    call write~int(7247, ~#uvc_ids.base, ~#uvc_ids.offset + 1100 + 2, 2);
    call write~int(12288, ~#uvc_ids.base, ~#uvc_ids.offset + 1100 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1100 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1100 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1100 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1100 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1100 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 1100 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 1100 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1100 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1100 + 16, 1);
    call write~int(34, ~#uvc_ids.base, ~#uvc_ids.offset + 1100 + 17, 8);
    call write~int(896, ~#uvc_ids.base, ~#uvc_ids.offset + 1125 + 0, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1125 + 2, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1125 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1125 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1125 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1125 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1125 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1125 + 12, 1);
    call write~int(14, ~#uvc_ids.base, ~#uvc_ids.offset + 1125 + 13, 1);
    call write~int(1, ~#uvc_ids.base, ~#uvc_ids.offset + 1125 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1125 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1125 + 16, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1125 + 17, 8);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1150 + 0, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1150 + 2, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1150 + 4, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1150 + 6, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1150 + 8, 2);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1150 + 10, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1150 + 11, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1150 + 12, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1150 + 13, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1150 + 14, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1150 + 15, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1150 + 16, 1);
    call write~int(0, ~#uvc_ids.base, ~#uvc_ids.offset + 1150 + 17, 8);
    call ~#uvc_driver.base, ~#uvc_driver.offset := #Ultimate.alloc(297);
    call #t~nondet987.base, #t~nondet987.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet987.base, #t~nondet987.offset, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 0, 8);
    call write~$Pointer$(#funAddr~uvc_probe.base, #funAddr~uvc_probe.offset, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 8, 8);
    call write~$Pointer$(#funAddr~uvc_disconnect.base, #funAddr~uvc_disconnect.offset, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 16, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 24, 8);
    call write~$Pointer$(#funAddr~uvc_suspend.base, #funAddr~uvc_suspend.offset, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 32, 8);
    call write~$Pointer$(#funAddr~uvc_resume.base, #funAddr~uvc_resume.offset, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 40, 8);
    call write~$Pointer$(#funAddr~uvc_reset_resume.base, #funAddr~uvc_reset_resume.offset, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 48, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 56, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 64, 8);
    call write~$Pointer$(~#uvc_ids.base, ~#uvc_ids.offset, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 72, 8);
    call write~int(0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union3995.head, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union3995.tail, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union3996.__padding[0], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union3996.__padding[1], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union3996.__padding[2], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[3], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[4], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[5], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[6], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[7], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[8], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[9], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[10], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[11], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[12], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[13], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[14], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[15], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[16], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[17], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[18], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[19], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[20], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[21], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[22], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union3996.__padding[23], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union3996.dep_map.key.base, #t~union3996.dep_map.key.offset, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union3996.dep_map.class_cache.base[0], #t~union3996.dep_map.class_cache.offset[0], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union3996.dep_map.class_cache.base[1], #t~union3996.dep_map.class_cache.offset[1], ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union3996.dep_map.name.base, #t~union3996.dep_map.name.offset, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union3996.dep_map.cpu, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union3996.dep_map.ip, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 80 + 68 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 16, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 24, 8);
    call write~int(0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 32, 1);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 33, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 41, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 49, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 57, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 65, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 73, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 81, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 89, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 97, 8);
    call write~$Pointer$(0, 0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 0 + 105, 8);
    call write~int(0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 164 + 113, 4);
    call write~int(0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 281, 4);
    call write~int(1, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 285, 4);
    call write~int(0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 289, 4);
    call write~int(0, ~#uvc_driver.base, ~#uvc_driver.offset + 0 + 293, 4);
    havoc #t~nondet987.base, #t~nondet987.offset;
    havoc #t~union3995.head, #t~union3995.tail;
    havoc #t~union3996.__padding, #t~union3996.dep_map.key.base, #t~union3996.dep_map.key.offset, #t~union3996.dep_map.class_cache.base, #t~union3996.dep_map.class_cache.offset, #t~union3996.dep_map.name.base, #t~union3996.dep_map.name.offset, #t~union3996.dep_map.cpu, #t~union3996.dep_map.ip;
    ~ldv_0_resource_file.base, ~ldv_0_resource_file.offset := 0, 0;
    ~ldv_0_resource_inode.base, ~ldv_0_resource_inode.offset := 0, 0;
    ~ldv_1_container_struct_kernel_param.base, ~ldv_1_container_struct_kernel_param.offset := 0, 0;
    ~ldv_2_callback_get.base, ~ldv_2_callback_get.offset := 0, 0;
    ~ldv_2_callback_set.base, ~ldv_2_callback_set.offset := 0, 0;
    ~ldv_2_container_struct_uvc_control_mapping.base, ~ldv_2_container_struct_uvc_control_mapping.offset := 0, 0;
    ~ldv_3_callback_add.base, ~ldv_3_callback_add.offset := 0, 0;
    ~ldv_3_callback_del.base, ~ldv_3_callback_del.offset := 0, 0;
    ~ldv_3_callback_merge.base, ~ldv_3_callback_merge.offset := 0, 0;
    ~ldv_3_callback_replace.base, ~ldv_3_callback_replace.offset := 0, 0;
    ~ldv_3_container_struct_v4l2_event_ptr.base, ~ldv_3_container_struct_v4l2_event_ptr.offset := 0, 0;
    ~ldv_3_container_struct_v4l2_subscribed_event_ptr.base, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.offset := 0, 0;
    ~ldv_3_ldv_param_10_1_default.base, ~ldv_3_ldv_param_10_1_default.offset := 0, 0;
    ~ldv_3_ldv_param_13_1_default.base, ~ldv_3_ldv_param_13_1_default.offset := 0, 0;
    ~ldv_4_callback_buf_finish.base, ~ldv_4_callback_buf_finish.offset := 0, 0;
    ~ldv_4_callback_buf_prepare.base, ~ldv_4_callback_buf_prepare.offset := 0, 0;
    ~ldv_4_callback_buf_queue.base, ~ldv_4_callback_buf_queue.offset := 0, 0;
    ~ldv_4_callback_queue_setup.base, ~ldv_4_callback_queue_setup.offset := 0, 0;
    ~ldv_4_callback_wait_finish.base, ~ldv_4_callback_wait_finish.offset := 0, 0;
    ~ldv_4_callback_wait_prepare.base, ~ldv_4_callback_wait_prepare.offset := 0, 0;
    ~ldv_4_container_struct_v4l2_format_ptr.base, ~ldv_4_container_struct_v4l2_format_ptr.offset := 0, 0;
    ~ldv_4_container_struct_vb2_buffer_ptr.base, ~ldv_4_container_struct_vb2_buffer_ptr.offset := 0, 0;
    ~ldv_4_container_struct_vb2_queue_ptr.base, ~ldv_4_container_struct_vb2_queue_ptr.offset := 0, 0;
    ~ldv_5_container_usb_driver.base, ~ldv_5_container_usb_driver.offset := 0, 0;
    ~ldv_5_ldv_param_13_1_default.base, ~ldv_5_ldv_param_13_1_default.offset := 0, 0;
    ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset := 0, 0;
    ~ldv_5_resource_usb_interface.base, ~ldv_5_resource_usb_interface.offset := 0, 0;
    ~ldv_5_usb_device_usb_device.base, ~ldv_5_usb_device_usb_device.offset := 0, 0;
    ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset := 0, 0;
    ~ldv_7_resource_file.base, ~ldv_7_resource_file.offset := 0, 0;
    ~ldv_7_resource_struct_poll_table_struct_ptr.base, ~ldv_7_resource_struct_poll_table_struct_ptr.offset := 0, 0;
    ~ldv_7_resource_struct_vm_area_struct_ptr.base, ~ldv_7_resource_struct_vm_area_struct_ptr.offset := 0, 0;
    ~ldv_10_exit_uvc_cleanup_default.base, ~ldv_10_exit_uvc_cleanup_default.offset := #funAddr~uvc_cleanup.base, #funAddr~uvc_cleanup.offset;
    ~ldv_10_init_uvc_init_default.base, ~ldv_10_init_uvc_init_default.offset := #funAddr~uvc_init.base, #funAddr~uvc_init.offset;
    ~ldv_1_callback_get.base, ~ldv_1_callback_get.offset := #funAddr~uvc_clock_param_get.base, #funAddr~uvc_clock_param_get.offset;
    ~ldv_1_callback_set.base, ~ldv_1_callback_set.offset := #funAddr~uvc_clock_param_set.base, #funAddr~uvc_clock_param_set.offset;
    ~ldv_5_callback_reset_resume.base, ~ldv_5_callback_reset_resume.offset := #funAddr~uvc_reset_resume.base, #funAddr~uvc_reset_resume.offset;
    call ~#uvc_queue_qops.base, ~#uvc_queue_qops.offset := #Ultimate.alloc(80);
    call write~$Pointer$(#funAddr~uvc_queue_setup.base, #funAddr~uvc_queue_setup.offset, ~#uvc_queue_qops.base, ~#uvc_queue_qops.offset + 0, 8);
    call write~$Pointer$(#funAddr~uvc_wait_prepare.base, #funAddr~uvc_wait_prepare.offset, ~#uvc_queue_qops.base, ~#uvc_queue_qops.offset + 8, 8);
    call write~$Pointer$(#funAddr~uvc_wait_finish.base, #funAddr~uvc_wait_finish.offset, ~#uvc_queue_qops.base, ~#uvc_queue_qops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#uvc_queue_qops.base, ~#uvc_queue_qops.offset + 24, 8);
    call write~$Pointer$(#funAddr~uvc_buffer_prepare.base, #funAddr~uvc_buffer_prepare.offset, ~#uvc_queue_qops.base, ~#uvc_queue_qops.offset + 32, 8);
    call write~$Pointer$(#funAddr~uvc_buffer_finish.base, #funAddr~uvc_buffer_finish.offset, ~#uvc_queue_qops.base, ~#uvc_queue_qops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#uvc_queue_qops.base, ~#uvc_queue_qops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#uvc_queue_qops.base, ~#uvc_queue_qops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#uvc_queue_qops.base, ~#uvc_queue_qops.offset + 64, 8);
    call write~$Pointer$(#funAddr~uvc_buffer_queue.base, #funAddr~uvc_buffer_queue.offset, ~#uvc_queue_qops.base, ~#uvc_queue_qops.offset + 72, 8);
    call ~#uvc_ctrl_sub_ev_ops.base, ~#uvc_ctrl_sub_ev_ops.offset := #Ultimate.alloc(32);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_sub_ev_ops.base, ~#uvc_ctrl_sub_ev_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_sub_ev_ops.base, ~#uvc_ctrl_sub_ev_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_sub_ev_ops.base, ~#uvc_ctrl_sub_ev_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_sub_ev_ops.base, ~#uvc_ctrl_sub_ev_ops.offset + 24, 8);
    ~ldv_7_callback_llseek.base, ~ldv_7_callback_llseek.offset := 0, 0;
    ~ldv_7_container_v4l2_file_operations.base, ~ldv_7_container_v4l2_file_operations.offset := 0, 0;
    ~ldv_7_callback_compat_ioctl32.base, ~ldv_7_callback_compat_ioctl32.offset := #funAddr~uvc_v4l2_compat_ioctl32.base, #funAddr~uvc_v4l2_compat_ioctl32.offset;
    ~ldv_7_callback_mmap.base, ~ldv_7_callback_mmap.offset := #funAddr~uvc_v4l2_mmap.base, #funAddr~uvc_v4l2_mmap.offset;
    ~ldv_7_callback_poll.base, ~ldv_7_callback_poll.offset := #funAddr~uvc_v4l2_poll.base, #funAddr~uvc_v4l2_poll.offset;
    ~ldv_7_callback_read.base, ~ldv_7_callback_read.offset := #funAddr~uvc_v4l2_read.base, #funAddr~uvc_v4l2_read.offset;
    ~ldv_7_callback_unlocked_ioctl.base, ~ldv_7_callback_unlocked_ioctl.offset := #funAddr~uvc_v4l2_ioctl.base, #funAddr~uvc_v4l2_ioctl.offset;
    call ~#uvc_ctrls.base, ~#uvc_ctrls.offset := #Ultimate.alloc(1400);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 16 + 15, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 32, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 34, 2);
    call write~int(127, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 0 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 16 + 15, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 32, 1);
    call write~int(3, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 34, 2);
    call write~int(127, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 40 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 16 + 15, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 32, 1);
    call write~int(6, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 34, 2);
    call write~int(255, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 80 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 16 + 15, 1);
    call write~int(3, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 32, 1);
    call write~int(7, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 34, 2);
    call write~int(127, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 120 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 16 + 15, 1);
    call write~int(4, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 32, 1);
    call write~int(8, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 34, 2);
    call write~int(127, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 160 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 16 + 15, 1);
    call write~int(5, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 32, 1);
    call write~int(9, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 34, 2);
    call write~int(127, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 200 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 16 + 15, 1);
    call write~int(6, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 32, 1);
    call write~int(10, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 34, 2);
    call write~int(255, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 240 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 16 + 15, 1);
    call write~int(7, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 32, 1);
    call write~int(12, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 33, 1);
    call write~int(4, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 34, 2);
    call write~int(255, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 280 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 16 + 15, 1);
    call write~int(8, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 32, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 34, 2);
    call write~int(127, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 320 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 16 + 15, 1);
    call write~int(9, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 32, 1);
    call write~int(4, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 34, 2);
    call write~int(127, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 360 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 16 + 15, 1);
    call write~int(10, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 32, 1);
    call write~int(5, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 33, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 34, 2);
    call write~int(99, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 400 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 16 + 15, 1);
    call write~int(11, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 32, 1);
    call write~int(16, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 33, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 34, 2);
    call write~int(99, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 440 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 16 + 15, 1);
    call write~int(12, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 32, 1);
    call write~int(11, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 33, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 34, 2);
    call write~int(99, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 480 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 16 + 15, 1);
    call write~int(13, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 32, 1);
    call write~int(13, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 33, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 34, 2);
    call write~int(99, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 520 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 16 + 15, 1);
    call write~int(14, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 32, 1);
    call write~int(14, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 34, 2);
    call write~int(127, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 560 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 16 + 15, 1);
    call write~int(15, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 32, 1);
    call write~int(15, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 34, 2);
    call write~int(127, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 600 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 16 + 15, 1);
    call write~int(16, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 32, 1);
    call write~int(17, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 33, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 34, 2);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 640 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 13, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 16 + 15, 1);
    call write~int(17, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 32, 1);
    call write~int(18, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 33, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 34, 2);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 680 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 16 + 15, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 32, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 33, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 34, 2);
    call write~int(67, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 720 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 16 + 15, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 32, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 33, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 34, 2);
    call write~int(115, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 760 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 16 + 15, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 32, 1);
    call write~int(3, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 33, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 34, 2);
    call write~int(67, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 800 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 16 + 15, 1);
    call write~int(3, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 32, 1);
    call write~int(4, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 33, 1);
    call write~int(4, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 34, 2);
    call write~int(127, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 840 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 16 + 15, 1);
    call write~int(4, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 32, 1);
    call write~int(5, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 33, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 34, 2);
    call write~int(65, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 880 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 16 + 15, 1);
    call write~int(5, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 32, 1);
    call write~int(6, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 34, 2);
    call write~int(255, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 920 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 16 + 15, 1);
    call write~int(6, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 32, 1);
    call write~int(7, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 34, 2);
    call write~int(189, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 960 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 16 + 15, 1);
    call write~int(7, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 32, 1);
    call write~int(9, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 34, 2);
    call write~int(255, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1000 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 16 + 15, 1);
    call write~int(8, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 32, 1);
    call write~int(10, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 33, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 34, 2);
    call write~int(129, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1040 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 16 + 15, 1);
    call write~int(9, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 32, 1);
    call write~int(11, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 34, 2);
    call write~int(255, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1080 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 16 + 15, 1);
    call write~int(10, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 32, 1);
    call write~int(12, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 33, 1);
    call write~int(3, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 34, 2);
    call write~int(189, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1120 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 16 + 15, 1);
    call write~int(11, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 32, 1);
    call write~int(13, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 33, 1);
    call write~int(8, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 34, 2);
    call write~int(255, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1160 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 16 + 15, 1);
    call write~int(12, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 32, 1);
    call write~int(14, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 33, 1);
    call write~int(4, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 34, 2);
    call write~int(189, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1200 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 16 + 15, 1);
    call write~int(13, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 32, 1);
    call write~int(15, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 34, 2);
    call write~int(255, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1240 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 16 + 15, 1);
    call write~int(14, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 32, 1);
    call write~int(16, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 33, 1);
    call write~int(2, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 34, 2);
    call write~int(189, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1280 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 16 + 15, 1);
    call write~int(17, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 32, 1);
    call write~int(8, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 33, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 34, 2);
    call write~int(99, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1320 + 36, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 0 + 8, 8);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 0, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 1, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 2, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 3, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 4, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 5, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 6, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 7, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 8, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 9, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 10, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 11, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 12, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 13, 1);
    call write~int(0, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 14, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 16 + 15, 1);
    call write~int(18, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 32, 1);
    call write~int(17, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 33, 1);
    call write~int(1, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 34, 2);
    call write~int(195, ~#uvc_ctrls.base, ~#uvc_ctrls.offset + 1360 + 36, 4);
    call ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset := #Ultimate.alloc(108);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 0, 4);
    call write~int(68, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 0, 1);
    call write~int(105, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 1, 1);
    call write~int(115, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 2, 1);
    call write~int(97, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 3, 1);
    call write~int(98, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 4, 1);
    call write~int(108, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 5, 1);
    call write~int(101, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 6, 1);
    call write~int(100, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 7, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 8, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 9, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 10, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 11, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 12, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 13, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 14, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 15, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 16, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 17, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 18, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 19, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 20, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 21, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 22, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 23, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 24, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 25, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 26, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 27, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 28, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 29, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 30, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 0 + 4 + 31, 1);
    call write~int(1, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 0, 4);
    call write~int(53, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 0, 1);
    call write~int(48, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 1, 1);
    call write~int(32, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 2, 1);
    call write~int(72, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 3, 1);
    call write~int(122, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 4, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 5, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 6, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 7, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 8, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 9, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 10, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 11, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 12, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 13, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 14, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 15, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 16, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 17, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 18, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 19, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 20, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 21, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 22, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 23, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 24, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 25, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 26, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 27, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 28, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 29, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 30, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 36 + 4 + 31, 1);
    call write~int(2, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 0, 4);
    call write~int(54, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 0, 1);
    call write~int(48, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 1, 1);
    call write~int(32, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 2, 1);
    call write~int(72, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 3, 1);
    call write~int(122, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 4, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 5, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 6, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 7, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 8, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 9, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 10, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 11, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 12, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 13, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 14, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 15, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 16, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 17, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 18, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 19, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 20, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 21, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 22, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 23, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 24, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 25, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 26, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 27, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 28, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 29, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 30, 1);
    call write~int(0, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset + 72 + 4 + 31, 1);
    call ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset := #Ultimate.alloc(144);
    call write~int(2, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 0, 4);
    call write~int(65, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 0, 1);
    call write~int(117, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 1, 1);
    call write~int(116, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 2, 1);
    call write~int(111, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 3, 1);
    call write~int(32, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 4, 1);
    call write~int(77, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 5, 1);
    call write~int(111, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 6, 1);
    call write~int(100, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 7, 1);
    call write~int(101, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 8, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 9, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 10, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 11, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 12, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 13, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 14, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 15, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 16, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 17, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 18, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 19, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 20, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 21, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 22, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 23, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 24, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 25, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 26, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 27, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 28, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 29, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 30, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 0 + 4 + 31, 1);
    call write~int(1, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 0, 4);
    call write~int(77, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 0, 1);
    call write~int(97, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 1, 1);
    call write~int(110, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 2, 1);
    call write~int(117, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 3, 1);
    call write~int(97, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 4, 1);
    call write~int(108, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 5, 1);
    call write~int(32, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 6, 1);
    call write~int(77, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 7, 1);
    call write~int(111, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 8, 1);
    call write~int(100, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 9, 1);
    call write~int(101, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 10, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 11, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 12, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 13, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 14, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 15, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 16, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 17, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 18, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 19, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 20, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 21, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 22, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 23, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 24, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 25, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 26, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 27, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 28, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 29, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 30, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 36 + 4 + 31, 1);
    call write~int(4, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 0, 4);
    call write~int(83, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 0, 1);
    call write~int(104, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 1, 1);
    call write~int(117, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 2, 1);
    call write~int(116, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 3, 1);
    call write~int(116, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 4, 1);
    call write~int(101, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 5, 1);
    call write~int(114, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 6, 1);
    call write~int(32, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 7, 1);
    call write~int(80, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 8, 1);
    call write~int(114, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 9, 1);
    call write~int(105, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 10, 1);
    call write~int(111, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 11, 1);
    call write~int(114, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 12, 1);
    call write~int(105, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 13, 1);
    call write~int(116, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 14, 1);
    call write~int(121, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 15, 1);
    call write~int(32, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 16, 1);
    call write~int(77, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 17, 1);
    call write~int(111, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 18, 1);
    call write~int(100, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 19, 1);
    call write~int(101, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 20, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 21, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 22, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 23, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 24, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 25, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 26, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 27, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 28, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 29, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 30, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 72 + 4 + 31, 1);
    call write~int(8, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 0, 4);
    call write~int(65, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 0, 1);
    call write~int(112, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 1, 1);
    call write~int(101, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 2, 1);
    call write~int(114, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 3, 1);
    call write~int(116, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 4, 1);
    call write~int(117, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 5, 1);
    call write~int(114, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 6, 1);
    call write~int(101, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 7, 1);
    call write~int(32, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 8, 1);
    call write~int(80, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 9, 1);
    call write~int(114, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 10, 1);
    call write~int(105, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 11, 1);
    call write~int(111, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 12, 1);
    call write~int(114, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 13, 1);
    call write~int(105, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 14, 1);
    call write~int(116, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 15, 1);
    call write~int(121, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 16, 1);
    call write~int(32, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 17, 1);
    call write~int(77, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 18, 1);
    call write~int(111, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 19, 1);
    call write~int(100, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 20, 1);
    call write~int(101, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 21, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 22, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 23, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 24, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 25, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 26, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 27, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 28, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 29, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 30, 1);
    call write~int(0, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset + 108 + 4 + 31, 1);
    call ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset := #Ultimate.alloc(3753);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 16 + 8, 8);
    call write~int(9963776, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 32, 4);
    call write~int(66, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 0, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 1, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 2, 1);
    call write~int(103, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 3, 1);
    call write~int(104, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 4, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 5, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 6, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 7, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 8, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 68 + 15, 1);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 87, 4);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 0 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 16 + 8, 8);
    call write~int(9963777, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 32, 4);
    call write~int(67, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 0, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 1, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 2, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 3, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 4, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 5, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 6, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 68 + 15, 1);
    call write~int(3, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 87, 4);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 139 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 16 + 8, 8);
    call write~int(9963779, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 32, 4);
    call write~int(72, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 0, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 1, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 68 + 15, 1);
    call write~int(6, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 87, 4);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 103, 4);
    call write~int(9963801, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 278 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 16 + 8, 8);
    call write~int(9963778, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 32, 4);
    call write~int(83, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 0, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 1, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 2, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 3, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 4, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 5, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 6, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 7, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 8, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 68 + 15, 1);
    call write~int(7, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 87, 4);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 417 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 16 + 8, 8);
    call write~int(9963803, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 32, 4);
    call write~int(83, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 0, 1);
    call write~int(104, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 1, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 2, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 3, 1);
    call write~int(112, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 4, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 5, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 6, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 7, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 68 + 15, 1);
    call write~int(8, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 87, 4);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 556 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 16 + 8, 8);
    call write~int(9963792, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 32, 4);
    call write~int(71, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 0, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 1, 1);
    call write~int(109, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 2, 1);
    call write~int(109, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 3, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 68 + 15, 1);
    call write~int(9, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 87, 4);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 695 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 16 + 8, 8);
    call write~int(9963804, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 32, 4);
    call write~int(66, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 0, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 1, 1);
    call write~int(99, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 2, 1);
    call write~int(107, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 3, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 4, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 5, 1);
    call write~int(103, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 6, 1);
    call write~int(104, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 7, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 8, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 9, 1);
    call write~int(67, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 10, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 11, 1);
    call write~int(109, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 12, 1);
    call write~int(112, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 13, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 14, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 15, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 16, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 17, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 18, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 19, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 20, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 68 + 15, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 87, 4);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 834 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 16 + 8, 8);
    call write~int(9963795, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 32, 4);
    call write~int(71, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 0, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 1, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 2, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 68 + 15, 1);
    call write~int(4, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 87, 4);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 973 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 16 + 8, 8);
    call write~int(9963800, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 32, 4);
    call write~int(80, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 0, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 1, 1);
    call write~int(119, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 2, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 3, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 4, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 5, 1);
    call write~int(76, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 6, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 7, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 8, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 9, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 10, 1);
    call write~int(70, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 11, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 12, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 13, 1);
    call write~int(113, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 14, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 15, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 16, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 17, 1);
    call write~int(99, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 18, 1);
    call write~int(121, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 68 + 15, 1);
    call write~int(5, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 84, 1);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 86, 1);
    call write~int(3, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 87, 4);
    call write~int(4, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 91, 4);
    call write~$Pointer$(~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 95, 8);
    call write~int(3, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1112 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 16 + 8, 8);
    call write~int(9963801, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 32, 4);
    call write~int(72, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 0, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 1, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 2, 1);
    call write~int(44, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 3, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 4, 1);
    call write~int(65, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 5, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 6, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 7, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 68 + 15, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 84, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 86, 1);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 87, 4);
    call write~int(3, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 111, 4);
    call write~int(9963779, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1251 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 16 + 8, 8);
    call write~int(10094849, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 32, 4);
    call write~int(69, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 0, 1);
    call write~int(120, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 1, 1);
    call write~int(112, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 2, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 3, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 4, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 5, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 6, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 7, 1);
    call write~int(44, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 8, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 9, 1);
    call write~int(65, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 10, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 11, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 12, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 68 + 15, 1);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 84, 1);
    call write~int(4, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 86, 1);
    call write~int(3, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 87, 4);
    call write~int(5, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 91, 4);
    call write~$Pointer$(~#exposure_auto_controls.base, ~#exposure_auto_controls.offset, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 95, 8);
    call write~int(4, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 111, 4);
    call write~int(10094850, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1390 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 16 + 8, 8);
    call write~int(10094851, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 32, 4);
    call write~int(69, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 0, 1);
    call write~int(120, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 1, 1);
    call write~int(112, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 2, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 3, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 4, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 5, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 6, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 7, 1);
    call write~int(44, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 8, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 9, 1);
    call write~int(65, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 10, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 11, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 12, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 13, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 14, 1);
    call write~int(80, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 15, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 16, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 17, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 18, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 19, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 20, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 21, 1);
    call write~int(121, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 68 + 15, 1);
    call write~int(3, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 84, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 86, 1);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 87, 4);
    call write~int(3, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1529 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 16 + 8, 8);
    call write~int(10094850, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 32, 4);
    call write~int(69, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 0, 1);
    call write~int(120, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 1, 1);
    call write~int(112, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 2, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 3, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 4, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 5, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 6, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 7, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 8, 1);
    call write~int(40, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 9, 1);
    call write~int(65, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 10, 1);
    call write~int(98, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 11, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 12, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 13, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 14, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 15, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 16, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 17, 1);
    call write~int(41, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 68 + 15, 1);
    call write~int(4, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 84, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 87, 4);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 103, 4);
    call write~int(10094849, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 107, 4);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1668 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 16 + 8, 8);
    call write~int(9963788, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 32, 4);
    call write~int(87, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 0, 1);
    call write~int(104, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 1, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 2, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 3, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 4, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 5, 1);
    call write~int(66, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 6, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 7, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 8, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 9, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 10, 1);
    call write~int(99, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 11, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 12, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 13, 1);
    call write~int(84, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 14, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 15, 1);
    call write~int(109, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 16, 1);
    call write~int(112, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 17, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 18, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 19, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 20, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 21, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 22, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 23, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 24, 1);
    call write~int(44, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 25, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 26, 1);
    call write~int(65, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 27, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 28, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 29, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 68 + 15, 1);
    call write~int(11, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 84, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 86, 1);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 87, 4);
    call write~int(3, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 111, 4);
    call write~int(9963802, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1807 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 16 + 8, 8);
    call write~int(9963802, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 32, 4);
    call write~int(87, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 0, 1);
    call write~int(104, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 1, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 2, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 3, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 4, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 5, 1);
    call write~int(66, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 6, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 7, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 8, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 9, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 10, 1);
    call write~int(99, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 11, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 12, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 13, 1);
    call write~int(84, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 14, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 15, 1);
    call write~int(109, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 16, 1);
    call write~int(112, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 17, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 18, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 19, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 20, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 21, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 22, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 23, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 68 + 15, 1);
    call write~int(10, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 87, 4);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 103, 4);
    call write~int(9963788, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 1946 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 16 + 8, 8);
    call write~int(9963788, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 32, 4);
    call write~int(87, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 0, 1);
    call write~int(104, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 1, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 2, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 3, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 4, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 5, 1);
    call write~int(66, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 6, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 7, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 8, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 9, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 10, 1);
    call write~int(99, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 11, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 12, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 13, 1);
    call write~int(67, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 14, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 15, 1);
    call write~int(109, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 16, 1);
    call write~int(112, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 17, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 18, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 19, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 20, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 21, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 22, 1);
    call write~int(44, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 23, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 24, 1);
    call write~int(65, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 25, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 26, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 27, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 68 + 15, 1);
    call write~int(13, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 84, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 86, 1);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 87, 4);
    call write~int(3, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 111, 4);
    call write~int(9963791, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 115 + 0, 4);
    call write~int(9963790, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2085 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 16 + 8, 8);
    call write~int(9963791, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 32, 4);
    call write~int(87, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 0, 1);
    call write~int(104, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 1, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 2, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 3, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 4, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 5, 1);
    call write~int(66, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 6, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 7, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 8, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 9, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 10, 1);
    call write~int(99, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 11, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 12, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 13, 1);
    call write~int(66, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 14, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 15, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 16, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 17, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 18, 1);
    call write~int(67, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 19, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 20, 1);
    call write~int(109, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 21, 1);
    call write~int(112, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 22, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 23, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 24, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 25, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 26, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 68 + 15, 1);
    call write~int(12, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 87, 4);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 103, 4);
    call write~int(9963788, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2224 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 16 + 8, 8);
    call write~int(9963790, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 32, 4);
    call write~int(87, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 0, 1);
    call write~int(104, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 1, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 2, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 3, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 4, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 5, 1);
    call write~int(66, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 6, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 7, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 8, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 9, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 10, 1);
    call write~int(99, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 11, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 12, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 13, 1);
    call write~int(82, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 14, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 15, 1);
    call write~int(100, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 16, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 17, 1);
    call write~int(67, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 18, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 19, 1);
    call write~int(109, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 20, 1);
    call write~int(112, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 21, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 22, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 23, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 24, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 25, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 13, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 68 + 15, 1);
    call write~int(12, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 85, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 87, 4);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 103, 4);
    call write~int(9963788, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2363 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 16 + 8, 8);
    call write~int(10094858, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 32, 4);
    call write~int(70, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 0, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 1, 1);
    call write~int(99, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 2, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 3, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 4, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 5, 1);
    call write~int(40, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 6, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 7, 1);
    call write~int(98, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 8, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 9, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 10, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 11, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 12, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 13, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 14, 1);
    call write~int(41, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 68 + 15, 1);
    call write~int(6, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 87, 4);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 103, 4);
    call write~int(10094860, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2502 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 16 + 8, 8);
    call write~int(10094860, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 32, 4);
    call write~int(70, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 0, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 1, 1);
    call write~int(99, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 2, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 3, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 4, 1);
    call write~int(44, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 5, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 6, 1);
    call write~int(65, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 7, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 8, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 9, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 68 + 15, 1);
    call write~int(8, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 84, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 86, 1);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 87, 4);
    call write~int(3, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 111, 4);
    call write~int(10094858, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2641 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 16 + 8, 8);
    call write~int(10094865, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 32, 4);
    call write~int(73, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 0, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 1, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 2, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 3, 1);
    call write~int(44, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 4, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 5, 1);
    call write~int(65, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 6, 1);
    call write~int(98, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 7, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 8, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 9, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 10, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 11, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 12, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 68 + 15, 1);
    call write~int(9, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 87, 4);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2780 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 16 + 8, 8);
    call write~int(10094866, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 32, 4);
    call write~int(73, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 0, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 1, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 2, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 3, 1);
    call write~int(44, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 4, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 5, 1);
    call write~int(82, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 6, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 7, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 8, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 9, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 10, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 11, 1);
    call write~int(118, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 12, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 68 + 15, 1);
    call write~int(10, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 84, 1);
    call write~int(8, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 87, 4);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 2919 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 16 + 8, 8);
    call write~int(10094861, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 32, 4);
    call write~int(90, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 0, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 1, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 2, 1);
    call write~int(109, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 3, 1);
    call write~int(44, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 4, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 5, 1);
    call write~int(65, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 6, 1);
    call write~int(98, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 7, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 8, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 9, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 10, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 11, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 12, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 68 + 15, 1);
    call write~int(11, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 84, 1);
    call write~int(16, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 87, 4);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3058 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 16 + 8, 8);
    call write~int(10094863, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 32, 4);
    call write~int(90, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 0, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 1, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 2, 1);
    call write~int(109, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 3, 1);
    call write~int(44, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 4, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 5, 1);
    call write~int(67, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 6, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 7, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 8, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 9, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 10, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 11, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 12, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 13, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 14, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 68 + 15, 1);
    call write~int(12, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 84, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 87, 4);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 115 + 4, 4);
    call write~$Pointer$(#funAddr~uvc_ctrl_get_zoom.base, #funAddr~uvc_ctrl_get_zoom.offset, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 123, 8);
    call write~$Pointer$(#funAddr~uvc_ctrl_set_zoom.base, #funAddr~uvc_ctrl_set_zoom.offset, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3197 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 16 + 8, 8);
    call write~int(10094856, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 32, 4);
    call write~int(80, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 0, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 1, 1);
    call write~int(110, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 2, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 3, 1);
    call write~int(40, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 4, 1);
    call write~int(65, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 5, 1);
    call write~int(98, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 6, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 7, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 8, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 9, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 10, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 11, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 12, 1);
    call write~int(41, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 68 + 15, 1);
    call write~int(13, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 84, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 87, 4);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3336 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 16 + 8, 8);
    call write~int(10094857, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 32, 4);
    call write~int(84, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 0, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 1, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 2, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 3, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 4, 1);
    call write~int(40, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 5, 1);
    call write~int(65, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 6, 1);
    call write~int(98, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 7, 1);
    call write~int(115, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 8, 1);
    call write~int(111, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 9, 1);
    call write~int(108, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 10, 1);
    call write~int(117, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 11, 1);
    call write~int(116, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 12, 1);
    call write~int(101, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 13, 1);
    call write~int(41, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 68 + 15, 1);
    call write~int(13, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 84, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 85, 1);
    call write~int(32, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 86, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 87, 4);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3475 + 131, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 16 + 8, 8);
    call write~int(10094864, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 32, 4);
    call write~int(80, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 0, 1);
    call write~int(114, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 1, 1);
    call write~int(105, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 2, 1);
    call write~int(118, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 3, 1);
    call write~int(97, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 4, 1);
    call write~int(99, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 5, 1);
    call write~int(121, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 14, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 15, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 16, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 17, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 18, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 19, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 20, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 21, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 22, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 23, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 24, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 25, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 26, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 27, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 28, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 29, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 30, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 36 + 31, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 0, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 1, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 2, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 3, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 4, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 5, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 6, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 7, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 8, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 9, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 10, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 11, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 12, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 13, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 14, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 68 + 15, 1);
    call write~int(17, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 84, 1);
    call write~int(1, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 85, 1);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 86, 1);
    call write~int(2, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 87, 4);
    call write~int(3, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 91, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 95, 8);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 103, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 107, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 111, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 115 + 0, 4);
    call write~int(0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 115 + 4, 4);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 123, 8);
    call write~$Pointer$(0, 0, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset + 3614 + 131, 8);
    call ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset := #Ultimate.alloc(16);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 0, 1);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 1, 1);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 2, 1);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 3, 1);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 4, 1);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 5, 1);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 6, 1);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 7, 1);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 8, 1);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 9, 1);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 10, 1);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 11, 1);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 12, 1);
    call write~int(0, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 13, 1);
    call write~int(1, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 14, 1);
    call write~int(1, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset + 15, 1);
    call ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset := #Ultimate.alloc(16);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 0, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 1, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 2, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 3, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 4, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 5, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 6, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 7, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 8, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 9, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 10, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 11, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 12, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 13, 1);
    call write~int(0, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 14, 1);
    call write~int(1, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset + 15, 1);
    call ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset := #Ultimate.alloc(16);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 0, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 1, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 2, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 3, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 4, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 5, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 6, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 7, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 8, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 9, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 10, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 11, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 12, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 13, 1);
    call write~int(0, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 14, 1);
    call write~int(3, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset + 15, 1);
    call ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset := #Ultimate.alloc(216);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 0, 8);
    call write~$Pointer$(#funAddr~no_llseek.base, #funAddr~no_llseek.offset, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 8, 8);
    call write~$Pointer$(#funAddr~uvc_debugfs_stats_read.base, #funAddr~uvc_debugfs_stats_read.offset, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 80, 8);
    call write~$Pointer$(#funAddr~uvc_debugfs_stats_open.base, #funAddr~uvc_debugfs_stats_open.offset, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 96, 8);
    call write~$Pointer$(#funAddr~uvc_debugfs_stats_release.base, #funAddr~uvc_debugfs_stats_release.offset, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset + 208, 8);
    ~uvc_debugfs_root_dir.base, ~uvc_debugfs_root_dir.offset := 0, 0;
    ~ldv_0_container_file_operations.base, ~ldv_0_container_file_operations.offset := 0, 0;
    call ~#uvc_subdev_ops.base, ~#uvc_subdev_ops.offset := #Ultimate.alloc(64);
    call write~$Pointer$(0, 0, ~#uvc_subdev_ops.base, ~#uvc_subdev_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#uvc_subdev_ops.base, ~#uvc_subdev_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#uvc_subdev_ops.base, ~#uvc_subdev_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#uvc_subdev_ops.base, ~#uvc_subdev_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#uvc_subdev_ops.base, ~#uvc_subdev_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#uvc_subdev_ops.base, ~#uvc_subdev_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#uvc_subdev_ops.base, ~#uvc_subdev_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#uvc_subdev_ops.base, ~#uvc_subdev_ops.offset + 56, 8);
    ~LDV_USB_DEV_REF_COUNTS := 0;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~uvc_no_drop_param, ~uvc_trace_param, ~uvc_clock_param, ~uvc_quirks_param, ~uvc_timeout_param, ~ldv_0_ldv_param_4_1_default.base, ~ldv_0_ldv_param_4_1_default.offset, ~ldv_0_ldv_param_4_3_default.base, ~ldv_0_ldv_param_4_3_default.offset, ~ldv_0_ret_default, ~ldv_0_size_cnt_write_size, ~ldv_10_ret_default, ~ldv_1_ldv_param_3_0_default.base, ~ldv_1_ldv_param_3_0_default.offset, ~ldv_1_ldv_param_9_0_default.base, ~ldv_1_ldv_param_9_0_default.offset, ~ldv_2_ldv_param_3_1_default, ~ldv_2_ldv_param_3_2_default.base, ~ldv_2_ldv_param_3_2_default.offset, ~ldv_2_ldv_param_9_1_default, ~ldv_2_ldv_param_9_2_default.base, ~ldv_2_ldv_param_9_2_default.offset, ~ldv_3_ldv_param_3_1_default, ~ldv_4_container_void_ptr_ptr.base, ~ldv_4_container_void_ptr_ptr.offset, ~ldv_4_ldv_param_9_3_default.base, ~ldv_4_ldv_param_9_3_default.offset, ~ldv_4_ldv_param_9_4_default.base, ~ldv_4_ldv_param_9_4_default.offset, ~ldv_5_probe_retval_default, ~ldv_5_reset_flag_default, ~ldv_7_ldv_param_19_1_default, ~ldv_7_ldv_param_19_2_default, ~ldv_7_ldv_param_24_1_default.base, ~ldv_7_ldv_param_24_1_default.offset, ~ldv_7_ldv_param_24_2_default, ~ldv_7_ldv_param_24_3_default.base, ~ldv_7_ldv_param_24_3_default.offset, ~ldv_7_ldv_param_27_1_default, ~ldv_7_ldv_param_27_2_default, ~ldv_7_ldv_param_4_1_default, ~ldv_7_ldv_param_4_2_default, ~ldv_7_ret_default, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_statevar_10, ~ldv_statevar_2, ~ldv_statevar_3, ~ldv_statevar_4, ~ldv_statevar_5, ~ldv_statevar_6, ~ldv_statevar_7, ~#uvc_fops.base, ~#uvc_fops.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset, ~#uvc_ids.base, ~#uvc_ids.offset, ~#uvc_driver.base, ~#uvc_driver.offset, ~ldv_0_resource_file.base, ~ldv_0_resource_file.offset, ~ldv_0_resource_inode.base, ~ldv_0_resource_inode.offset, ~ldv_1_container_struct_kernel_param.base, ~ldv_1_container_struct_kernel_param.offset, ~ldv_2_callback_get.base, ~ldv_2_callback_get.offset, ~ldv_2_callback_set.base, ~ldv_2_callback_set.offset, ~ldv_2_container_struct_uvc_control_mapping.base, ~ldv_2_container_struct_uvc_control_mapping.offset, ~ldv_3_callback_add.base, ~ldv_3_callback_add.offset, ~ldv_3_callback_del.base, ~ldv_3_callback_del.offset, ~ldv_3_callback_merge.base, ~ldv_3_callback_merge.offset, ~ldv_3_callback_replace.base, ~ldv_3_callback_replace.offset, ~ldv_3_container_struct_v4l2_event_ptr.base, ~ldv_3_container_struct_v4l2_event_ptr.offset, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.base, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.offset, ~ldv_3_ldv_param_10_1_default.base, ~ldv_3_ldv_param_10_1_default.offset, ~ldv_3_ldv_param_13_1_default.base, ~ldv_3_ldv_param_13_1_default.offset, ~ldv_4_callback_buf_finish.base, ~ldv_4_callback_buf_finish.offset, ~ldv_4_callback_buf_prepare.base, ~ldv_4_callback_buf_prepare.offset, ~ldv_4_callback_buf_queue.base, ~ldv_4_callback_buf_queue.offset, ~ldv_4_callback_queue_setup.base, ~ldv_4_callback_queue_setup.offset, ~ldv_4_callback_wait_finish.base, ~ldv_4_callback_wait_finish.offset, ~ldv_4_callback_wait_prepare.base, ~ldv_4_callback_wait_prepare.offset, ~ldv_4_container_struct_v4l2_format_ptr.base, ~ldv_4_container_struct_v4l2_format_ptr.offset, ~ldv_4_container_struct_vb2_buffer_ptr.base, ~ldv_4_container_struct_vb2_buffer_ptr.offset, ~ldv_4_container_struct_vb2_queue_ptr.base, ~ldv_4_container_struct_vb2_queue_ptr.offset, ~ldv_5_container_usb_driver.base, ~ldv_5_container_usb_driver.offset, ~ldv_5_ldv_param_13_1_default.base, ~ldv_5_ldv_param_13_1_default.offset, ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset, ~ldv_5_resource_usb_interface.base, ~ldv_5_resource_usb_interface.offset, ~ldv_5_usb_device_usb_device.base, ~ldv_5_usb_device_usb_device.offset, ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset, ~ldv_7_resource_file.base, ~ldv_7_resource_file.offset, ~ldv_7_resource_struct_poll_table_struct_ptr.base, ~ldv_7_resource_struct_poll_table_struct_ptr.offset, ~ldv_7_resource_struct_vm_area_struct_ptr.base, ~ldv_7_resource_struct_vm_area_struct_ptr.offset, ~ldv_10_exit_uvc_cleanup_default.base, ~ldv_10_exit_uvc_cleanup_default.offset, ~ldv_10_init_uvc_init_default.base, ~ldv_10_init_uvc_init_default.offset, ~ldv_1_callback_get.base, ~ldv_1_callback_get.offset, ~ldv_1_callback_set.base, ~ldv_1_callback_set.offset, ~ldv_5_callback_reset_resume.base, ~ldv_5_callback_reset_resume.offset, ~#uvc_queue_qops.base, ~#uvc_queue_qops.offset, ~#uvc_ctrl_sub_ev_ops.base, ~#uvc_ctrl_sub_ev_ops.offset, ~ldv_7_callback_llseek.base, ~ldv_7_callback_llseek.offset, ~ldv_7_container_v4l2_file_operations.base, ~ldv_7_container_v4l2_file_operations.offset, ~ldv_7_callback_compat_ioctl32.base, ~ldv_7_callback_compat_ioctl32.offset, ~ldv_7_callback_mmap.base, ~ldv_7_callback_mmap.offset, ~ldv_7_callback_poll.base, ~ldv_7_callback_poll.offset, ~ldv_7_callback_read.base, ~ldv_7_callback_read.offset, ~ldv_7_callback_unlocked_ioctl.base, ~ldv_7_callback_unlocked_ioctl.offset, ~#uvc_ctrls.base, ~#uvc_ctrls.offset, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset, ~uvc_debugfs_root_dir.base, ~uvc_debugfs_root_dir.offset, ~ldv_0_container_file_operations.base, ~ldv_0_container_file_operations.offset, ~#uvc_subdev_ops.base, ~#uvc_subdev_ops.offset, ~LDV_USB_DEV_REF_COUNTS, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, #valid, #length;

implementation interface_to_usbdev(#in~intf.base : int, #in~intf.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~mem57.base : int, #t~mem57.offset : int;
    var ~intf.base : int, ~intf.offset : int;
    var ~__mptr~82.base : int, ~__mptr~82.offset : int;

  loc28:
    ~intf.base, ~intf.offset := #in~intf.base, #in~intf.offset;
    havoc ~__mptr~82.base, ~__mptr~82.offset;
    call #t~mem57.base, #t~mem57.offset := read~$Pointer$(~intf.base, ~intf.offset + 68 + 0, 8);
    ~__mptr~82.base, ~__mptr~82.offset := #t~mem57.base, #t~mem57.offset;
    havoc #t~mem57.base, #t~mem57.offset;
    #res.base, #res.offset := ~__mptr~82.base, ~__mptr~82.offset + -271592;
    assume true;
    return;
}

procedure interface_to_usbdev(#in~intf.base : int, #in~intf.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation ldv_dispatch_instance_register_6_3(#in~arg0.base : int, #in~arg0.offset : int) returns (){
    var ~arg0.base : int, ~arg0.offset : int;

  loc29:
    ~arg0.base, ~arg0.offset := #in~arg0.base, #in~arg0.offset;
    ~ldv_5_container_usb_driver.base, ~ldv_5_container_usb_driver.offset := ~arg0.base, ~arg0.offset;
    call ldv_switch_automaton_state_5_15();
    assume true;
    return;
}

procedure ldv_dispatch_instance_register_6_3(#in~arg0.base : int, #in~arg0.offset : int) returns ();
modifies ~ldv_5_container_usb_driver.base, ~ldv_5_container_usb_driver.offset, ~ldv_statevar_5;

implementation ldv_assert_linux_usb_dev__probe_failed(#in~expr : int) returns (){
    var ~expr : int;

  loc30:
    ~expr := #in~expr;
    assume ~expr == 0;
    assume !false;
    goto loc31;
  loc31:
    assert false;
}

procedure ldv_assert_linux_usb_dev__probe_failed(#in~expr : int) returns ();
modifies ;

implementation ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~ret3989.base : int, #t~ret3989.offset : int;
    var ~size : int;
    var ~tmp~4449.base : int, ~tmp~4449.offset : int;

  loc32:
    ~size := #in~size;
    havoc ~tmp~4449.base, ~tmp~4449.offset;
    call #t~ret3989.base, #t~ret3989.offset := ldv_calloc(1, ~size);
    ~tmp~4449.base, ~tmp~4449.offset := #t~ret3989.base, #t~ret3989.offset;
    havoc #t~ret3989.base, #t~ret3989.offset;
    #res.base, #res.offset := ~tmp~4449.base, ~tmp~4449.offset;
    assume true;
    return;
}

procedure ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ldv_switch_3() returns (#res : int){
    var #t~ret1059 : int;
    var ~tmp~1448 : int;

  loc33:
    havoc ~tmp~1448;
    call #t~ret1059 := ldv_undef_int();
    assume -2147483648 <= #t~ret1059 && #t~ret1059 <= 2147483647;
    ~tmp~1448 := #t~ret1059;
    havoc #t~ret1059;
    assume ~tmp~1448 == 0;
    #res := 5;
    assume true;
    return;
}

procedure ldv_switch_3() returns (#res : int);
modifies ;

implementation ldv_ldv_post_probe_28(#in~ldv_func_arg1 : int) returns (#res : int){
    var #t~ret1098 : int;
    var ~ldv_func_arg1 : int;
    var ~tmp~1621 : int;

  loc34:
    ~ldv_func_arg1 := #in~ldv_func_arg1;
    havoc ~tmp~1621;
    call ldv_check_return_value_probe(~ldv_func_arg1);
    return;
}

procedure ldv_ldv_post_probe_28(#in~ldv_func_arg1 : int) returns (#res : int);
modifies ;

implementation ldv_calloc(#in~nmemb : int, #in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~ret3986 : int;
    var #t~malloc3987.base : int, #t~malloc3987.offset : int;
    var #t~ret3988 : int;
    var ~nmemb : int;
    var ~size : int;
    var ~res~4443.base : int, ~res~4443.offset : int;
    var ~tmp~4443.base : int, ~tmp~4443.offset : int;
    var ~tmp___0~4443 : int;
    var ~tmp___1~4443 : int;

  loc35:
    ~nmemb := #in~nmemb;
    ~size := #in~size;
    havoc ~res~4443.base, ~res~4443.offset;
    havoc ~tmp~4443.base, ~tmp~4443.offset;
    havoc ~tmp___0~4443;
    havoc ~tmp___1~4443;
    call #t~ret3986 := ldv_undef_int();
    assume -2147483648 <= #t~ret3986 && #t~ret3986 <= 2147483647;
    ~tmp___1~4443 := #t~ret3986;
    havoc #t~ret3986;
    assume !(~tmp___1~4443 != 0);
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure ldv_calloc(#in~nmemb : int, #in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ldv_switch_automaton_state_5_15() returns (){
  loc36:
    ~ldv_statevar_5 := 14;
    assume true;
    return;
}

procedure ldv_switch_automaton_state_5_15() returns ();
modifies ~ldv_statevar_5;

implementation ULTIMATE.start() returns (){
    var #t~ret3997 : int;

  loc37:
    call ULTIMATE.init();
    call #t~ret3997 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~uvc_no_drop_param, ~uvc_trace_param, ~uvc_clock_param, ~uvc_quirks_param, ~uvc_timeout_param, ~ldv_0_ldv_param_4_1_default.base, ~ldv_0_ldv_param_4_1_default.offset, ~ldv_0_ldv_param_4_3_default.base, ~ldv_0_ldv_param_4_3_default.offset, ~ldv_0_ret_default, ~ldv_0_size_cnt_write_size, ~ldv_10_ret_default, ~ldv_1_ldv_param_3_0_default.base, ~ldv_1_ldv_param_3_0_default.offset, ~ldv_1_ldv_param_9_0_default.base, ~ldv_1_ldv_param_9_0_default.offset, ~ldv_2_ldv_param_3_1_default, ~ldv_2_ldv_param_3_2_default.base, ~ldv_2_ldv_param_3_2_default.offset, ~ldv_2_ldv_param_9_1_default, ~ldv_2_ldv_param_9_2_default.base, ~ldv_2_ldv_param_9_2_default.offset, ~ldv_3_ldv_param_3_1_default, ~ldv_4_container_void_ptr_ptr.base, ~ldv_4_container_void_ptr_ptr.offset, ~ldv_4_ldv_param_9_3_default.base, ~ldv_4_ldv_param_9_3_default.offset, ~ldv_4_ldv_param_9_4_default.base, ~ldv_4_ldv_param_9_4_default.offset, ~ldv_5_probe_retval_default, ~ldv_5_reset_flag_default, ~ldv_7_ldv_param_19_1_default, ~ldv_7_ldv_param_19_2_default, ~ldv_7_ldv_param_24_1_default.base, ~ldv_7_ldv_param_24_1_default.offset, ~ldv_7_ldv_param_24_2_default, ~ldv_7_ldv_param_24_3_default.base, ~ldv_7_ldv_param_24_3_default.offset, ~ldv_7_ldv_param_27_1_default, ~ldv_7_ldv_param_27_2_default, ~ldv_7_ldv_param_4_1_default, ~ldv_7_ldv_param_4_2_default, ~ldv_7_ret_default, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_statevar_10, ~ldv_statevar_2, ~ldv_statevar_3, ~ldv_statevar_4, ~ldv_statevar_5, ~ldv_statevar_6, ~ldv_statevar_7, ~#uvc_fops.base, ~#uvc_fops.offset, ~#uvc_fmts.base, ~#uvc_fmts.offset, ~#uvc_ids.base, ~#uvc_ids.offset, ~#uvc_driver.base, ~#uvc_driver.offset, ~ldv_0_resource_file.base, ~ldv_0_resource_file.offset, ~ldv_0_resource_inode.base, ~ldv_0_resource_inode.offset, ~ldv_1_container_struct_kernel_param.base, ~ldv_1_container_struct_kernel_param.offset, ~ldv_2_callback_get.base, ~ldv_2_callback_get.offset, ~ldv_2_callback_set.base, ~ldv_2_callback_set.offset, ~ldv_2_container_struct_uvc_control_mapping.base, ~ldv_2_container_struct_uvc_control_mapping.offset, ~ldv_3_callback_add.base, ~ldv_3_callback_add.offset, ~ldv_3_callback_del.base, ~ldv_3_callback_del.offset, ~ldv_3_callback_merge.base, ~ldv_3_callback_merge.offset, ~ldv_3_callback_replace.base, ~ldv_3_callback_replace.offset, ~ldv_3_container_struct_v4l2_event_ptr.base, ~ldv_3_container_struct_v4l2_event_ptr.offset, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.base, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.offset, ~ldv_3_ldv_param_10_1_default.base, ~ldv_3_ldv_param_10_1_default.offset, ~ldv_3_ldv_param_13_1_default.base, ~ldv_3_ldv_param_13_1_default.offset, ~ldv_4_callback_buf_finish.base, ~ldv_4_callback_buf_finish.offset, ~ldv_4_callback_buf_prepare.base, ~ldv_4_callback_buf_prepare.offset, ~ldv_4_callback_buf_queue.base, ~ldv_4_callback_buf_queue.offset, ~ldv_4_callback_queue_setup.base, ~ldv_4_callback_queue_setup.offset, ~ldv_4_callback_wait_finish.base, ~ldv_4_callback_wait_finish.offset, ~ldv_4_callback_wait_prepare.base, ~ldv_4_callback_wait_prepare.offset, ~ldv_4_container_struct_v4l2_format_ptr.base, ~ldv_4_container_struct_v4l2_format_ptr.offset, ~ldv_4_container_struct_vb2_buffer_ptr.base, ~ldv_4_container_struct_vb2_buffer_ptr.offset, ~ldv_4_container_struct_vb2_queue_ptr.base, ~ldv_4_container_struct_vb2_queue_ptr.offset, ~ldv_5_container_usb_driver.base, ~ldv_5_container_usb_driver.offset, ~ldv_5_ldv_param_13_1_default.base, ~ldv_5_ldv_param_13_1_default.offset, ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset, ~ldv_5_resource_usb_interface.base, ~ldv_5_resource_usb_interface.offset, ~ldv_5_usb_device_usb_device.base, ~ldv_5_usb_device_usb_device.offset, ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset, ~ldv_7_resource_file.base, ~ldv_7_resource_file.offset, ~ldv_7_resource_struct_poll_table_struct_ptr.base, ~ldv_7_resource_struct_poll_table_struct_ptr.offset, ~ldv_7_resource_struct_vm_area_struct_ptr.base, ~ldv_7_resource_struct_vm_area_struct_ptr.offset, ~ldv_10_exit_uvc_cleanup_default.base, ~ldv_10_exit_uvc_cleanup_default.offset, ~ldv_10_init_uvc_init_default.base, ~ldv_10_init_uvc_init_default.offset, ~ldv_1_callback_get.base, ~ldv_1_callback_get.offset, ~ldv_1_callback_set.base, ~ldv_1_callback_set.offset, ~ldv_5_callback_reset_resume.base, ~ldv_5_callback_reset_resume.offset, ~#uvc_queue_qops.base, ~#uvc_queue_qops.offset, ~#uvc_ctrl_sub_ev_ops.base, ~#uvc_ctrl_sub_ev_ops.offset, ~ldv_7_callback_llseek.base, ~ldv_7_callback_llseek.offset, ~ldv_7_container_v4l2_file_operations.base, ~ldv_7_container_v4l2_file_operations.offset, ~ldv_7_callback_compat_ioctl32.base, ~ldv_7_callback_compat_ioctl32.offset, ~ldv_7_callback_mmap.base, ~ldv_7_callback_mmap.offset, ~ldv_7_callback_poll.base, ~ldv_7_callback_poll.offset, ~ldv_7_callback_read.base, ~ldv_7_callback_read.offset, ~ldv_7_callback_unlocked_ioctl.base, ~ldv_7_callback_unlocked_ioctl.offset, ~#uvc_ctrls.base, ~#uvc_ctrls.offset, ~#power_line_frequency_controls.base, ~#power_line_frequency_controls.offset, ~#exposure_auto_controls.base, ~#exposure_auto_controls.offset, ~#uvc_ctrl_mappings.base, ~#uvc_ctrl_mappings.offset, ~#uvc_processing_guid.base, ~#uvc_processing_guid.offset, ~#uvc_camera_guid.base, ~#uvc_camera_guid.offset, ~#uvc_media_transport_input_guid.base, ~#uvc_media_transport_input_guid.offset, ~#uvc_debugfs_stats_fops.base, ~#uvc_debugfs_stats_fops.offset, ~uvc_debugfs_root_dir.base, ~uvc_debugfs_root_dir.offset, ~ldv_0_container_file_operations.base, ~ldv_0_container_file_operations.offset, ~#uvc_subdev_ops.base, ~#uvc_subdev_ops.offset, ~LDV_USB_DEV_REF_COUNTS, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~ldv_statevar_10, ~ldv_0_ret_default, ~ldv_statevar_0, ~ldv_statevar_1, ~ldv_statevar_2, ~ldv_statevar_3, ~ldv_statevar_4, ~ldv_5_reset_flag_default, ~ldv_statevar_5, ~ldv_statevar_6, ~ldv_7_ret_default, ~ldv_statevar_7;
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~LDV_USB_DEV_REF_COUNTS, ~ldv_0_ldv_param_4_1_default.base, ~ldv_0_ldv_param_4_1_default.offset, ~ldv_0_ldv_param_4_3_default.base, ~ldv_0_ldv_param_4_3_default.offset, ~ldv_0_resource_file.base, ~ldv_0_resource_file.offset, ~ldv_0_resource_inode.base, ~ldv_0_resource_inode.offset, ~ldv_1_container_struct_kernel_param.base, ~ldv_1_container_struct_kernel_param.offset, ~ldv_1_ldv_param_3_0_default.base, ~ldv_1_ldv_param_3_0_default.offset, ~ldv_1_ldv_param_9_0_default.base, ~ldv_1_ldv_param_9_0_default.offset, ~ldv_2_container_struct_uvc_control_mapping.base, ~ldv_2_container_struct_uvc_control_mapping.offset, ~ldv_2_ldv_param_3_2_default.base, ~ldv_2_ldv_param_3_2_default.offset, ~ldv_2_ldv_param_9_2_default.base, ~ldv_2_ldv_param_9_2_default.offset, ~ldv_3_container_struct_v4l2_event_ptr.base, ~ldv_3_container_struct_v4l2_event_ptr.offset, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.base, ~ldv_3_container_struct_v4l2_subscribed_event_ptr.offset, ~ldv_3_ldv_param_10_1_default.base, ~ldv_3_ldv_param_10_1_default.offset, ~ldv_3_ldv_param_13_1_default.base, ~ldv_3_ldv_param_13_1_default.offset, ~ldv_4_container_struct_v4l2_format_ptr.base, ~ldv_4_container_struct_v4l2_format_ptr.offset, ~ldv_4_container_struct_vb2_buffer_ptr.base, ~ldv_4_container_struct_vb2_buffer_ptr.offset, ~ldv_4_container_struct_vb2_queue_ptr.base, ~ldv_4_container_struct_vb2_queue_ptr.offset, ~ldv_4_container_void_ptr_ptr.base, ~ldv_4_container_void_ptr_ptr.offset, ~ldv_4_ldv_param_9_3_default.base, ~ldv_4_ldv_param_9_3_default.offset, ~ldv_4_ldv_param_9_4_default.base, ~ldv_4_ldv_param_9_4_default.offset, ~ldv_5_container_usb_driver.base, ~ldv_5_container_usb_driver.offset, ~ldv_5_ldv_param_13_1_default.base, ~ldv_5_ldv_param_13_1_default.offset, ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset, ~ldv_5_resource_usb_interface.base, ~ldv_5_resource_usb_interface.offset, ~ldv_5_usb_device_usb_device.base, ~ldv_5_usb_device_usb_device.offset, ~ldv_6_container_usb_driver.base, ~ldv_6_container_usb_driver.offset, ~ldv_7_ldv_param_24_1_default.base, ~ldv_7_ldv_param_24_1_default.offset, ~ldv_7_ldv_param_24_3_default.base, ~ldv_7_ldv_param_24_3_default.offset, ~ldv_7_resource_file.base, ~ldv_7_resource_file.offset, ~ldv_7_resource_struct_poll_table_struct_ptr.base, ~ldv_7_resource_struct_poll_table_struct_ptr.offset, ~ldv_7_resource_struct_vm_area_struct_ptr.base, ~ldv_7_resource_struct_vm_area_struct_ptr.offset, ~ldv_5_reset_flag_default, ~ldv_statevar_5, ~ldv_statevar_6, ~ldv_statevar_2, ~uvc_clock_param, ~ldv_statevar_1, ~ldv_statevar_0, ~ldv_0_ret_default, ~ldv_0_size_cnt_write_size, ~ldv_statevar_4, ~ldv_statevar_3, ~ldv_7_ret_default, ~ldv_statevar_7, ~uvc_debugfs_root_dir.base, ~uvc_debugfs_root_dir.offset, ~ldv_statevar_10, ~ldv_10_ret_default, ~ldv_5_probe_retval_default;

implementation ldv_usb_usb_instance_5(#in~arg0.base : int, #in~arg0.offset : int) returns (){
    var #t~mem1071.base : int, #t~mem1071.offset : int;
    var #t~mem1072.base : int, #t~mem1072.offset : int;
    var #t~mem1073.base : int, #t~mem1073.offset : int;
    var #t~mem1074.base : int, #t~mem1074.offset : int;
    var #t~mem1075.base : int, #t~mem1075.offset : int;
    var #t~mem1076.base : int, #t~mem1076.offset : int;
    var #t~mem1077.base : int, #t~mem1077.offset : int;
    var #t~ret1078 : int;
    var #t~ret1079.base : int, #t~ret1079.offset : int;
    var #t~ret1080.base : int, #t~ret1080.offset : int;
    var #t~ret1082.base : int, #t~ret1082.offset : int;
    var #t~mem1083.base : int, #t~mem1083.offset : int;
    var #t~ret1084 : int;
    var #t~ret1085 : int;
    var #t~ret1086 : int;
    var #t~ret1087.base : int, #t~ret1087.offset : int;
    var #t~mem1088.base : int, #t~mem1088.offset : int;
    var ~arg0.base : int, ~arg0.offset : int;
    var ~tmp~1545.base : int, ~tmp~1545.offset : int;
    var ~tmp___0~1545.base : int, ~tmp___0~1545.offset : int;
    var ~tmp___1~1545.base : int, ~tmp___1~1545.offset : int;
    var ~tmp___2~1545 : int;
    var ~tmp___3~1545.base : int, ~tmp___3~1545.offset : int;

  loc38:
    ~arg0.base, ~arg0.offset := #in~arg0.base, #in~arg0.offset;
    havoc ~tmp~1545.base, ~tmp~1545.offset;
    havoc ~tmp___0~1545.base, ~tmp___0~1545.offset;
    havoc ~tmp___1~1545.base, ~tmp___1~1545.offset;
    havoc ~tmp___2~1545;
    havoc ~tmp___3~1545.base, ~tmp___3~1545.offset;
    assume !(~ldv_statevar_5 == 3);
    assume !(~ldv_statevar_5 == 4);
    assume !(~ldv_statevar_5 == 5);
    assume !(~ldv_statevar_5 == 6);
    assume !(~ldv_statevar_5 == 7);
    assume !(~ldv_statevar_5 == 9);
    assume !(~ldv_statevar_5 == 10);
    assume !(~ldv_statevar_5 == 11);
    goto loc39;
  loc39:
    goto loc39_0, loc39_1;
  loc39_0:
    assume ~ldv_statevar_5 == 12;
    call ldv_assume((if ~ldv_5_probe_retval_default == 0 then 1 else 0));
    call #t~ret1078 := ldv_switch_3();
    assume -2147483648 <= #t~ret1078 && #t~ret1078 <= 2147483647;
    ~ldv_statevar_5 := #t~ret1078;
    havoc #t~ret1078;
    assume true;
    return;
  loc39_1:
    assume !(~ldv_statevar_5 == 12);
    assume ~ldv_statevar_5 == 14;
    call #t~ret1079.base, #t~ret1079.offset := ldv_xmalloc(1528);
    ~tmp~1545.base, ~tmp~1545.offset := #t~ret1079.base, #t~ret1079.offset;
    havoc #t~ret1079.base, #t~ret1079.offset;
    ~ldv_5_resource_usb_interface.base, ~ldv_5_resource_usb_interface.offset := ~tmp~1545.base, ~tmp~1545.offset;
    call #t~ret1080.base, #t~ret1080.offset := ldv_xmalloc(1992);
    ~tmp___0~1545.base, ~tmp___0~1545.offset := #t~ret1080.base, #t~ret1080.offset;
    havoc #t~ret1080.base, #t~ret1080.offset;
    ~ldv_5_usb_device_usb_device.base, ~ldv_5_usb_device_usb_device.offset := ~tmp___0~1545.base, ~tmp___0~1545.offset;
    call write~$Pointer$(~ldv_5_usb_device_usb_device.base, ~ldv_5_usb_device_usb_device.offset + 131, ~ldv_5_resource_usb_interface.base, ~ldv_5_resource_usb_interface.offset + 68 + 0, 8);
    call #t~ret1082.base, #t~ret1082.offset := ldv_xmalloc(32);
    ~tmp___1~1545.base, ~tmp___1~1545.offset := #t~ret1082.base, #t~ret1082.offset;
    havoc #t~ret1082.base, #t~ret1082.offset;
    ~ldv_5_ldv_param_13_1_default.base, ~ldv_5_ldv_param_13_1_default.offset := ~tmp___1~1545.base, ~tmp___1~1545.offset;
    call ldv_pre_probe();
    call #t~mem1083.base, #t~mem1083.offset := read~$Pointer$(~ldv_5_container_usb_driver.base, ~ldv_5_container_usb_driver.offset + 8, 8);
    call #t~ret1084 := ldv_usb_instance_probe_5_13(#t~mem1083.base, #t~mem1083.offset, ~ldv_5_resource_usb_interface.base, ~ldv_5_resource_usb_interface.offset, ~ldv_5_ldv_param_13_1_default.base, ~ldv_5_ldv_param_13_1_default.offset);
    assume -2147483648 <= #t~ret1084 && #t~ret1084 <= 2147483647;
    ~ldv_5_probe_retval_default := #t~ret1084;
    havoc #t~mem1083.base, #t~mem1083.offset;
    havoc #t~ret1084;
    call #t~ret1085 := ldv_ldv_post_probe_28(~ldv_5_probe_retval_default);
    return;
}

procedure ldv_usb_usb_instance_5(#in~arg0.base : int, #in~arg0.offset : int) returns ();
modifies ~ldv_5_reset_flag_default, ~ldv_statevar_5, ~ldv_5_resource_usb_interface.base, ~ldv_5_resource_usb_interface.offset, ~ldv_5_usb_device_usb_device.base, ~ldv_5_usb_device_usb_device.offset, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_5_ldv_param_13_1_default.base, ~ldv_5_ldv_param_13_1_default.offset, ~ldv_5_probe_retval_default, ~ldv_5_ldv_param_8_1_default.base, ~ldv_5_ldv_param_8_1_default.offset, #valid, #length, #memory_int, ~LDV_USB_DEV_REF_COUNTS;

implementation ldv_post_init(#in~init_ret_val : int) returns (#res : int){
    var #t~ret3975 : int;
    var ~init_ret_val : int;
    var ~tmp~4392 : int;

  loc40:
    ~init_ret_val := #in~init_ret_val;
    havoc ~tmp~4392;
    call #t~ret3975 := ldv_filter_positive_int(~init_ret_val);
    assume -2147483648 <= #t~ret3975 && #t~ret3975 <= 2147483647;
    ~tmp~4392 := #t~ret3975;
    havoc #t~ret3975;
    #res := ~tmp~4392;
    assume true;
    return;
}

procedure ldv_post_init(#in~init_ret_val : int) returns (#res : int);
modifies ;

implementation uvc_debugfs_init() returns (#res : int){
    var #t~nondet3868.base : int, #t~nondet3868.offset : int;
    var #t~ret3869.base : int, #t~ret3869.offset : int;
    var #t~ret3870 : int;
    var #t~nondet3871.base : int, #t~nondet3871.offset : int;
    var #t~ret3872 : int;
    var ~dir~4237.base : int, ~dir~4237.offset : int;
    var ~tmp~4237 : int;

  loc41:
    havoc ~dir~4237.base, ~dir~4237.offset;
    havoc ~tmp~4237;
    call #t~nondet3868.base, #t~nondet3868.offset := #Ultimate.alloc(9);
    call #t~ret3869.base, #t~ret3869.offset := debugfs_create_dir(#t~nondet3868.base, #t~nondet3868.offset, ~usb_debug_root.base, ~usb_debug_root.offset);
    ~dir~4237.base, ~dir~4237.offset := #t~ret3869.base, #t~ret3869.offset;
    havoc #t~nondet3868.base, #t~nondet3868.offset;
    havoc #t~ret3869.base, #t~ret3869.offset;
    call #t~ret3870 := IS_ERR_OR_NULL(~dir~4237.base, ~dir~4237.offset);
    assume -9223372036854775808 <= #t~ret3870 && #t~ret3870 <= 9223372036854775807;
    ~tmp~4237 := #t~ret3870;
    havoc #t~ret3870;
    assume ~tmp~4237 != 0;
    call #t~nondet3871.base, #t~nondet3871.offset := #Ultimate.alloc(51);
    call #t~ret3872 := printk(#t~nondet3871.base, #t~nondet3871.offset);
    assume -2147483648 <= #t~ret3872 && #t~ret3872 <= 2147483647;
    havoc #t~nondet3871.base, #t~nondet3871.offset;
    havoc #t~ret3872;
    #res := -61;
    assume true;
    return;
}

procedure uvc_debugfs_init() returns (#res : int);
modifies ~uvc_debugfs_root_dir.base, ~uvc_debugfs_root_dir.offset, #valid, #length;

procedure usb_submit_urb(#in~2050.base : int, #in~2050.offset : int, #in~2051 : int) returns (#res : int);
modifies ;

procedure media_device_register(#in~94.base : int, #in~94.offset : int) returns (#res : int);
modifies ;

procedure v4l2_ctrl_merge(#in~2834.base : int, #in~2834.offset : int, #in~2835.base : int, #in~2835.offset : int) returns ();
modifies ;

procedure vb2_queue_init(#in~1114.base : int, #in~1114.offset : int) returns (#res : int);
modifies ;

procedure usb_autopm_get_interface(#in~1249.base : int, #in~1249.offset : int) returns (#res : int);
modifies ;

procedure v4l2_device_unregister(#in~98.base : int, #in~98.offset : int) returns ();
modifies ;

procedure __put_user_bad() returns ();
modifies ;

procedure v4l2_fh_exit(#in~1284.base : int, #in~1284.offset : int) returns ();
modifies ;

procedure vb2_querybuf(#in~1110.base : int, #in~1110.offset : int, #in~1111.base : int, #in~1111.offset : int) returns (#res : int);
modifies ;

procedure ldv_pre_usb_register_driver() returns (#res : int);
modifies ;

procedure vb2_streamoff(#in~1123.base : int, #in~1123.offset : int, #in~1124 : int) returns (#res : int);
modifies ;

procedure memcpy(#in~16.base : int, #in~16.offset : int, #in~17.base : int, #in~17.offset : int, #in~18 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_match_one_id(#in~2828.base : int, #in~2828.offset : int, #in~2829.base : int, #in~2829.offset : int) returns (#res : int);
modifies ;

procedure input_event(#in~3678.base : int, #in~3678.offset : int, #in~3679 : int, #in~3680 : int, #in~3681 : int) returns ();
modifies ;

procedure sprintf(#in~11.base : int, #in~11.offset : int, #in~12.base : int, #in~12.offset : int) returns (#res : int);
modifies ;

procedure strlen(#in~25.base : int, #in~25.offset : int) returns (#res : int);
modifies ;

procedure memcmp(#in~22.base : int, #in~22.offset : int, #in~23.base : int, #in~23.offset : int, #in~24 : int) returns (#res : int);
modifies ;

procedure usb_free_coherent(#in~2057.base : int, #in~2057.offset : int, #in~2058 : int, #in~2059.base : int, #in~2059.offset : int, #in~2060 : int) returns ();
modifies ;

procedure ktime_get_ts(#in~2038.base : int, #in~2038.offset : int) returns ();
modifies ;

procedure strlcpy(#in~28.base : int, #in~28.offset : int, #in~29.base : int, #in~29.offset : int, #in~30 : int) returns (#res : int);
modifies ;

procedure v4l2_fh_init(#in~1280.base : int, #in~1280.offset : int, #in~1281.base : int, #in~1281.offset : int) returns ();
modifies ;

procedure video_devdata(#in~1262.base : int, #in~1262.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure vb2_dqbuf(#in~1118.base : int, #in~1118.offset : int, #in~1119.base : int, #in~1119.offset : int, #in~1120 : int) returns (#res : int);
modifies ;

procedure list_del(#in~1099.base : int, #in~1099.offset : int) returns ();
modifies ;

procedure debugfs_create_dir(#in~3837.base : int, #in~3837.offset : int, #in~3838.base : int, #in~3838.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_driver_claim_interface(#in~59.base : int, #in~59.offset : int, #in~60.base : int, #in~60.offset : int, #in~61.base : int, #in~61.offset : int) returns (#res : int);
modifies ;

procedure _copy_from_user(#in~1242.base : int, #in~1242.offset : int, #in~1243.base : int, #in~1243.offset : int, #in~1244 : int) returns (#res : int);
modifies ;

procedure v4l2_device_register_subdev(#in~3904.base : int, #in~3904.offset : int, #in~3905.base : int, #in~3905.offset : int) returns (#res : int);
modifies ;

procedure media_device_unregister(#in~95.base : int, #in~95.offset : int) returns ();
modifies ;

procedure __raw_spin_lock_init(#in~1100.base : int, #in~1100.offset : int, #in~1101.base : int, #in~1101.offset : int, #in~1102.base : int, #in~1102.offset : int) returns ();
modifies ;

procedure vb2_buffer_done(#in~1108.base : int, #in~1108.offset : int, #in~1109 : int) returns ();
modifies ;

procedure input_free_device(#in~3675.base : int, #in~3675.offset : int) returns ();
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure usb_autopm_put_interface(#in~1250.base : int, #in~1250.offset : int) returns ();
modifies ;

procedure v4l2_prio_check(#in~1259.base : int, #in~1259.offset : int, #in~1260 : int) returns (#res : int);
modifies ;

procedure ldv_after_alloc(#in~3979.base : int, #in~3979.offset : int) returns ();
modifies ;

procedure usb_kill_urb(#in~2052.base : int, #in~2052.offset : int) returns ();
modifies ;

procedure ldv_check_alloc_flags(#in~3978 : int) returns ();
modifies ;

procedure v4l2_prio_init(#in~80.base : int, #in~80.offset : int) returns ();
modifies ;

procedure debugfs_remove_recursive(#in~3839.base : int, #in~3839.offset : int) returns ();
modifies ;

procedure __get_user_bad() returns (#res : int);
modifies ;

procedure vb2_qbuf(#in~1116.base : int, #in~1116.offset : int, #in~1117.base : int, #in~1117.offset : int) returns (#res : int);
modifies ;

procedure malloc(#in~3982 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure video_unregister_device(#in~89.base : int, #in~89.offset : int) returns ();
modifies ;

procedure v4l_printk_ioctl(#in~1274.base : int, #in~1274.offset : int, #in~1275 : int) returns ();
modifies ;

procedure vb2_reqbufs(#in~1112.base : int, #in~1112.offset : int, #in~1113.base : int, #in~1113.offset : int) returns (#res : int);
modifies ;

procedure __list_add(#in~2.base : int, #in~2.offset : int, #in~3.base : int, #in~3.offset : int, #in~4.base : int, #in~4.offset : int) returns ();
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];

procedure __bad_percpu_size() returns ();
modifies ;

procedure _copy_to_user(#in~2821.base : int, #in~2821.offset : int, #in~2822.base : int, #in~2822.offset : int, #in~2823 : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_irqrestore(#in~1104.base : int, #in~1104.offset : int, #in~1105 : int) returns ();
modifies ;

procedure usb_control_msg(#in~2061.base : int, #in~2061.offset : int, #in~2062 : int, #in~2063 : int, #in~2064 : int, #in~2065 : int, #in~2066 : int, #in~2067.base : int, #in~2067.offset : int, #in~2068 : int, #in~2069 : int) returns (#res : int);
modifies ;

procedure usb_register_driver(#in~66.base : int, #in~66.offset : int, #in~67.base : int, #in~67.offset : int, #in~68.base : int, #in~68.offset : int) returns (#res : int);
modifies ;

procedure usb_free_urb(#in~2049.base : int, #in~2049.offset : int) returns ();
modifies ;

procedure memset(#in~19.base : int, #in~19.offset : int, #in~20 : int, #in~21 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure input_unregister_device(#in~3677.base : int, #in~3677.offset : int) returns ();
modifies ;

procedure v4l2_ctrl_replace(#in~2832.base : int, #in~2832.offset : int, #in~2833.base : int, #in~2833.offset : int) returns ();
modifies ;

procedure v4l2_event_unsubscribe(#in~1272.base : int, #in~1272.offset : int, #in~1273.base : int, #in~1273.offset : int) returns (#res : int);
modifies ;

procedure __copy_from_user_overflow() returns ();
modifies ;

procedure vb2_poll(#in~1127.base : int, #in~1127.offset : int, #in~1128.base : int, #in~1128.offset : int, #in~1129.base : int, #in~1129.offset : int) returns (#res : int);
modifies ;

procedure usb_enable_autosuspend(#in~58.base : int, #in~58.offset : int) returns ();
modifies ;

procedure video_usercopy(#in~1276.base : int, #in~1276.offset : int, #in~1277 : int, #in~1278 : int, #in~1279.base : int, #in~1279.offset : int) returns (#res : int);
modifies ;

procedure video_device_alloc() returns (#res.base : int, #res.offset : int);
modifies ;

procedure v4l2_prio_change(#in~1255.base : int, #in~1255.offset : int, #in~1256.base : int, #in~1256.offset : int, #in~1257 : int) returns (#res : int);
modifies ;

procedure usb_set_interface(#in~2070.base : int, #in~2070.offset : int, #in~2071 : int, #in~2072 : int) returns (#res : int);
modifies ;

procedure video_device_release(#in~90.base : int, #in~90.offset : int) returns ();
modifies ;

procedure __clear_user(#in~1227.base : int, #in~1227.offset : int, #in~1228 : int) returns (#res : int);
modifies ;

procedure mutex_lock_interruptible_nested(#in~2819.base : int, #in~2819.offset : int, #in~2820 : int) returns (#res : int);
modifies ;

procedure v4l2_subdev_init(#in~3902.base : int, #in~3902.offset : int, #in~3903.base : int, #in~3903.offset : int) returns ();
modifies ;

procedure strlcat(#in~31.base : int, #in~31.offset : int, #in~32.base : int, #in~32.offset : int, #in~33 : int) returns (#res : int);
modifies ;

procedure mutex_unlock(#in~48.base : int, #in~48.offset : int) returns ();
modifies ;

procedure v4l2_event_queue_fh(#in~2836.base : int, #in~2836.offset : int, #in~2837.base : int, #in~2837.offset : int) returns ();
modifies ;

procedure C.free(#in~3985.base : int, #in~3985.offset : int) returns ();
modifies ;

procedure usb_put_intf(#in~56.base : int, #in~56.offset : int) returns ();
modifies ;

procedure media_entity_create_link(#in~3897.base : int, #in~3897.offset : int, #in~3898 : int, #in~3899.base : int, #in~3899.offset : int, #in~3900 : int, #in~3901 : int) returns (#res : int);
modifies ;

procedure __kmalloc(#in~75 : int, #in~76 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure copy_in_user(#in~1229.base : int, #in~1229.offset : int, #in~1230.base : int, #in~1230.offset : int, #in~1231 : int) returns (#res : int);
modifies ;

procedure usb_ifnum_to_if(#in~64.base : int, #in~64.offset : int, #in~65 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure input_allocate_device() returns (#res.base : int, #res.offset : int);
modifies ;

procedure getnstimeofday(#in~2037.base : int, #in~2037.offset : int) returns ();
modifies ;

procedure might_fault() returns ();
modifies ;

procedure printk(#in~10.base : int, #in~10.offset : int) returns (#res : int);
modifies ;

procedure v4l2_event_dequeue(#in~1265.base : int, #in~1265.offset : int, #in~1266.base : int, #in~1266.offset : int, #in~1267 : int) returns (#res : int);
modifies ;

procedure calloc(#in~3983 : int, #in~3984 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ldv_pre_probe() returns ();
modifies ;

procedure __mutex_init(#in~43.base : int, #in~43.offset : int, #in~44.base : int, #in~44.offset : int, #in~45.base : int, #in~45.offset : int) returns ();
modifies ;

procedure _raw_spin_lock_irqsave(#in~1103.base : int, #in~1103.offset : int) returns (#res : int);
modifies ;

procedure usb_get_current_frame_number(#in~2040.base : int, #in~2040.offset : int) returns (#res : int);
modifies ;

procedure mutex_lock_nested(#in~46.base : int, #in~46.offset : int, #in~47 : int) returns ();
modifies ;

procedure simple_read_from_buffer(#in~3827.base : int, #in~3827.offset : int, #in~3828 : int, #in~3829.base : int, #in~3829.offset : int, #in~3830.base : int, #in~3830.offset : int, #in~3831 : int) returns (#res : int);
modifies ;

procedure usb_alloc_urb(#in~2047 : int, #in~2048 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure strcpy(#in~26.base : int, #in~26.offset : int, #in~27.base : int, #in~27.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure usb_deregister(#in~69.base : int, #in~69.offset : int) returns ();
modifies ;

procedure compat_alloc_user_space(#in~1254 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_driver_release_interface(#in~62.base : int, #in~62.offset : int, #in~63.base : int, #in~63.offset : int) returns ();
modifies ;

procedure v4l2_device_register(#in~96.base : int, #in~96.offset : int, #in~97.base : int, #in~97.offset : int) returns (#res : int);
modifies ;

procedure kfree(#in~74.base : int, #in~74.offset : int) returns ();
modifies ;

procedure strncasecmp(#in~36.base : int, #in~36.offset : int, #in~37.base : int, #in~37.offset : int, #in~38 : int) returns (#res : int);
modifies ;

procedure debugfs_create_file(#in~3832.base : int, #in~3832.offset : int, #in~3833 : int, #in~3834.base : int, #in~3834.offset : int, #in~3835.base : int, #in~3835.offset : int, #in~3836.base : int, #in~3836.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];

procedure __VERIFIER_error() returns ();
modifies ;

procedure memweight(#in~2817.base : int, #in~2817.offset : int, #in~2818 : int) returns (#res : int);
modifies ;

procedure v4l2_fh_add(#in~1282.base : int, #in~1282.offset : int) returns ();
modifies ;

procedure media_entity_init(#in~3892.base : int, #in~3892.offset : int, #in~3893 : int, #in~3894.base : int, #in~3894.offset : int, #in~3895 : int) returns (#res : int);
modifies ;

procedure __video_register_device(#in~81.base : int, #in~81.offset : int, #in~82 : int, #in~83 : int, #in~84 : int, #in~85.base : int, #in~85.offset : int) returns (#res : int);
modifies ;

procedure input_register_device(#in~3676.base : int, #in~3676.offset : int) returns (#res : int);
modifies ;

procedure vb2_streamon(#in~1121.base : int, #in~1121.offset : int, #in~1122 : int) returns (#res : int);
modifies ;

procedure v4l2_event_subscribe(#in~1268.base : int, #in~1268.offset : int, #in~1269.base : int, #in~1269.offset : int, #in~1270 : int, #in~1271.base : int, #in~1271.offset : int) returns (#res : int);
modifies ;

procedure strcasecmp(#in~34.base : int, #in~34.offset : int, #in~35.base : int, #in~35.offset : int) returns (#res : int);
modifies ;

procedure usb_alloc_coherent(#in~2053.base : int, #in~2053.offset : int, #in~2054 : int, #in~2055 : int, #in~2056.base : int, #in~2056.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure scnprintf(#in~2027.base : int, #in~2027.offset : int, #in~2028 : int, #in~2029.base : int, #in~2029.offset : int) returns (#res : int);
modifies ;

procedure set_normalized_timespec(#in~2032.base : int, #in~2032.offset : int, #in~2033 : int, #in~2034 : int) returns ();
modifies ;

procedure vb2_mmap(#in~1125.base : int, #in~1125.offset : int, #in~1126.base : int, #in~1126.offset : int) returns (#res : int);
modifies ;

procedure usb_get_intf(#in~55.base : int, #in~55.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure kmemdup(#in~39.base : int, #in~39.offset : int, #in~40 : int, #in~41 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure vb2_queue_release(#in~1115.base : int, #in~1115.offset : int) returns ();
modifies ;

procedure media_entity_cleanup(#in~3896.base : int, #in~3896.offset : int) returns ();
modifies ;

procedure v4l2_prio_max(#in~1258.base : int, #in~1258.offset : int) returns (#res : int);
modifies ;

procedure no_llseek(#in~3824.base : int, #in~3824.offset : int, #in~3825 : int, #in~3826 : int) returns (#res : ~loff_t);
modifies ;

procedure __copy_to_user_overflow() returns ();
modifies ;

procedure snprintf(#in~13.base : int, #in~13.offset : int, #in~14 : int, #in~15.base : int, #in~15.offset : int) returns (#res : int);
modifies ;

procedure external_allocated_data() returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_string(#in~70.base : int, #in~70.offset : int, #in~71 : int, #in~72.base : int, #in~72.offset : int, #in~73 : int) returns (#res : int);
modifies ;

procedure vb2_plane_vaddr(#in~1106.base : int, #in~1106.offset : int, #in~1107 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure v4l2_fh_del(#in~1283.base : int, #in~1283.offset : int) returns ();
modifies ;


type STRUCT~tss_struct;
type STRUCT~compat_timespec;
type STRUCT~pollfd;
type STRUCT~map_segment;
type STRUCT~perf_event;
type STRUCT~optimistic_spin_queue;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~dev_pm_qos;
type STRUCT~uprobe;
type STRUCT~return_instance;
type STRUCT~xol_area;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~kernfs_open_node;
type STRUCT~kernfs_iattrs;
type STRUCT~seq_file;
type STRUCT~sock;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~tracepoint;
type STRUCT~ftrace_event_call;
type STRUCT~kmem_cache_node;
type STRUCT~mem_cgroup;
type STRUCT~sem_undo_list;
type STRUCT~seccomp_filter;
type STRUCT~assoc_array_ptr;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~autogroup;
type STRUCT~taskstats;
type STRUCT~tty_audit_buf;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~sched_class;
type STRUCT~task_group;
type STRUCT~fs_struct;
type STRUCT~files_struct;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~bio_list;
type STRUCT~blk_plug;
type STRUCT~reclaim_state;
type STRUCT~backing_dev_info;
type STRUCT~io_context;
type STRUCT~css_set;
type STRUCT~robust_list_head;
type STRUCT~compat_robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~numa_group;
type STRUCT~pipe_inode_info;
type STRUCT~ftrace_ret_stack;
type STRUCT~vfsmount;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~iov_iter;
type STRUCT~swap_info_struct;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~posix_acl;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~iovec;
type STRUCT~poll_table_struct;
type STRUCT~nameidata;
type STRUCT~kstatfs;
type STRUCT~serial_icounter_struct;
type STRUCT~proc_dir_entry;
type STRUCT~uts_namespace;
type STRUCT~ipc_namespace;
type STRUCT~mnt_namespace;
type STRUCT~net;
type STRUCT~bsd_acct_struct;
type STRUCT~pinctrl;
type STRUCT~pinctrl_state;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~acpi_device;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~cma;
type STRUCT~device_node;
type STRUCT~iommu_group;
type STRUCT~hotplug_slot;
type STRUCT~pci_sriov;
type STRUCT~pcie_link_state;
type STRUCT~pci_vpd;
type STRUCT~pci_ats;
type STRUCT~msi_chip;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__u64 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~oom_flags_t = int;
type ~pteval_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~cputime_t = int;
type ~qsize_t = int;
type ~cc_t = int;
type ~speed_t = int;
type ~tcflag_t = int;
type ~kernel_ulong_t = int;
type ~pci_power_t = int;
type ~pci_channel_state_t = int;
type ~pci_dev_flags_t = int;
type ~pci_bus_flags_t = int;
type ~pci_ers_result_t = int;
type ~Byte_t = int;
type ~ByteIO_t = int;
type ~Word_t = int;
type ~WordIO_t = int;
type ~DWordIO_t = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_clock_t = ~__kernel_long_t;
type ~__le32 = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint32_t = ~__u32;
type ~dma_addr_t = ~u64;
type ~phys_addr_t = ~u64;
type ~resource_size_t = ~phys_addr_t;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~projid_t = ~__kernel_uid32_t;
const #funAddr~rp_do_poll.base : int;
const #funAddr~rp_do_poll.offset : int;
const #funAddr~rp_open.base : int;
const #funAddr~rp_open.offset : int;
const #funAddr~rp_close.base : int;
const #funAddr~rp_close.offset : int;
const #funAddr~rp_write.base : int;
const #funAddr~rp_write.offset : int;
const #funAddr~rp_put_char.base : int;
const #funAddr~rp_put_char.offset : int;
const #funAddr~rp_write_room.base : int;
const #funAddr~rp_write_room.offset : int;
const #funAddr~rp_chars_in_buffer.base : int;
const #funAddr~rp_chars_in_buffer.offset : int;
const #funAddr~rp_ioctl.base : int;
const #funAddr~rp_ioctl.offset : int;
const #funAddr~rp_set_termios.base : int;
const #funAddr~rp_set_termios.offset : int;
const #funAddr~rp_throttle.base : int;
const #funAddr~rp_throttle.offset : int;
const #funAddr~rp_unthrottle.base : int;
const #funAddr~rp_unthrottle.offset : int;
const #funAddr~rp_stop.base : int;
const #funAddr~rp_stop.offset : int;
const #funAddr~rp_start.base : int;
const #funAddr~rp_start.offset : int;
const #funAddr~rp_hangup.base : int;
const #funAddr~rp_hangup.offset : int;
const #funAddr~rp_break.base : int;
const #funAddr~rp_break.offset : int;
const #funAddr~rp_flush_buffer.base : int;
const #funAddr~rp_flush_buffer.offset : int;
const #funAddr~rp_wait_until_sent.base : int;
const #funAddr~rp_wait_until_sent.offset : int;
const #funAddr~rp_send_xchar.base : int;
const #funAddr~rp_send_xchar.offset : int;
const #funAddr~rp_tiocmget.base : int;
const #funAddr~rp_tiocmget.offset : int;
const #funAddr~rp_tiocmset.base : int;
const #funAddr~rp_tiocmset.offset : int;
const #funAddr~carrier_raised.base : int;
const #funAddr~carrier_raised.offset : int;
const #funAddr~dtr_rts.base : int;
const #funAddr~dtr_rts.offset : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~uprobe_task_state~UTASK_RUNNING : int;
const ~uprobe_task_state~UTASK_SSTEP : int;
const ~uprobe_task_state~UTASK_SSTEP_ACK : int;
const ~uprobe_task_state~UTASK_SSTEP_TRAPPED : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~pci_channel_state~pci_channel_io_normal : int;
const ~pci_channel_state~pci_channel_io_frozen : int;
const ~pci_channel_state~pci_channel_io_perm_failure : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
axiom #funAddr~rp_do_poll.base == -1 && #funAddr~rp_do_poll.offset == 0;
axiom #funAddr~rp_open.base == -1 && #funAddr~rp_open.offset == 1;
axiom #funAddr~rp_close.base == -1 && #funAddr~rp_close.offset == 2;
axiom #funAddr~rp_write.base == -1 && #funAddr~rp_write.offset == 3;
axiom #funAddr~rp_put_char.base == -1 && #funAddr~rp_put_char.offset == 4;
axiom #funAddr~rp_write_room.base == -1 && #funAddr~rp_write_room.offset == 5;
axiom #funAddr~rp_chars_in_buffer.base == -1 && #funAddr~rp_chars_in_buffer.offset == 6;
axiom #funAddr~rp_ioctl.base == -1 && #funAddr~rp_ioctl.offset == 7;
axiom #funAddr~rp_set_termios.base == -1 && #funAddr~rp_set_termios.offset == 8;
axiom #funAddr~rp_throttle.base == -1 && #funAddr~rp_throttle.offset == 9;
axiom #funAddr~rp_unthrottle.base == -1 && #funAddr~rp_unthrottle.offset == 10;
axiom #funAddr~rp_stop.base == -1 && #funAddr~rp_stop.offset == 11;
axiom #funAddr~rp_start.base == -1 && #funAddr~rp_start.offset == 12;
axiom #funAddr~rp_hangup.base == -1 && #funAddr~rp_hangup.offset == 13;
axiom #funAddr~rp_break.base == -1 && #funAddr~rp_break.offset == 14;
axiom #funAddr~rp_flush_buffer.base == -1 && #funAddr~rp_flush_buffer.offset == 15;
axiom #funAddr~rp_wait_until_sent.base == -1 && #funAddr~rp_wait_until_sent.offset == 16;
axiom #funAddr~rp_send_xchar.base == -1 && #funAddr~rp_send_xchar.offset == 17;
axiom #funAddr~rp_tiocmget.base == -1 && #funAddr~rp_tiocmget.offset == 18;
axiom #funAddr~rp_tiocmset.base == -1 && #funAddr~rp_tiocmset.offset == 19;
axiom #funAddr~carrier_raised.base == -1 && #funAddr~carrier_raised.offset == 20;
axiom #funAddr~dtr_rts.base == -1 && #funAddr~dtr_rts.offset == 21;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~uprobe_task_state~UTASK_RUNNING == 0;
axiom ~uprobe_task_state~UTASK_SSTEP == 1;
axiom ~uprobe_task_state~UTASK_SSTEP_ACK == 2;
axiom ~uprobe_task_state~UTASK_SSTEP_TRAPPED == 3;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~pci_channel_state~pci_channel_io_normal == 1;
axiom ~pci_channel_state~pci_channel_io_frozen == 2;
axiom ~pci_channel_state~pci_channel_io_perm_failure == 3;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseComplement" } ~bitwiseComplement(in0 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseXor" } ~bitwiseXor(in0 : int, in1 : int) returns (out : int);
var ~jiffies : int;

var ~ldv_state_variable_3 : int;

var ~ldv_state_variable_2 : int;

var ~rocket_port_ops_group1.base : int, ~rocket_port_ops_group1.offset : int;

var ~ref_cnt : int;

var ~ldv_state_variable_1 : int;

var ~ldv_state_variable_0 : int;

var ~#xmit_flags.base : int, ~#xmit_flags.offset : int;

var ~board1 : int;

var ~board2 : int;

var ~board3 : int;

var ~board4 : int;

var ~controller : int;

var ~modem1 : int;

var ~modem2 : int;

var ~modem3 : int;

var ~modem4 : int;

var ~#pc104_1.base : int, ~#pc104_1.offset : int;

var ~#pc104_2.base : int, ~#pc104_2.offset : int;

var ~#pc104_3.base : int, ~#pc104_3.offset : int;

var ~#pc104_4.base : int, ~#pc104_4.offset : int;

var ~pc104.base : [int]int, ~pc104.offset : [int]int;

var ~rp_baud_base : [int]int;

var ~rcktpt_io_addr : [int]int;

var ~rcktpt_type : [int]int;

var ~is_PCI : [int]int;

var ~max_board : int;

var ~sClockPrescale : int;

var ~lineNumbers : [int]int;

var ~nextLineNumber : int;

var ~ldv_retval_2 : int;

var ~ldv_retval_0 : int;

var ~ldv_retval_1 : int;

var ~ldv_spin : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~pv_cpu_ops.get_debugreg.base : int, ~pv_cpu_ops.get_debugreg.offset : int, ~pv_cpu_ops.set_debugreg.base : int, ~pv_cpu_ops.set_debugreg.offset : int, ~pv_cpu_ops.clts.base : int, ~pv_cpu_ops.clts.offset : int, ~pv_cpu_ops.read_cr0.base : int, ~pv_cpu_ops.read_cr0.offset : int, ~pv_cpu_ops.write_cr0.base : int, ~pv_cpu_ops.write_cr0.offset : int, ~pv_cpu_ops.read_cr4_safe.base : int, ~pv_cpu_ops.read_cr4_safe.offset : int, ~pv_cpu_ops.read_cr4.base : int, ~pv_cpu_ops.read_cr4.offset : int, ~pv_cpu_ops.write_cr4.base : int, ~pv_cpu_ops.write_cr4.offset : int, ~pv_cpu_ops.read_cr8.base : int, ~pv_cpu_ops.read_cr8.offset : int, ~pv_cpu_ops.write_cr8.base : int, ~pv_cpu_ops.write_cr8.offset : int, ~pv_cpu_ops.load_tr_desc.base : int, ~pv_cpu_ops.load_tr_desc.offset : int, ~pv_cpu_ops.load_gdt.base : int, ~pv_cpu_ops.load_gdt.offset : int, ~pv_cpu_ops.load_idt.base : int, ~pv_cpu_ops.load_idt.offset : int, ~pv_cpu_ops.store_idt.base : int, ~pv_cpu_ops.store_idt.offset : int, ~pv_cpu_ops.set_ldt.base : int, ~pv_cpu_ops.set_ldt.offset : int, ~pv_cpu_ops.store_tr.base : int, ~pv_cpu_ops.store_tr.offset : int, ~pv_cpu_ops.load_tls.base : int, ~pv_cpu_ops.load_tls.offset : int, ~pv_cpu_ops.load_gs_index.base : int, ~pv_cpu_ops.load_gs_index.offset : int, ~pv_cpu_ops.write_ldt_entry.base : int, ~pv_cpu_ops.write_ldt_entry.offset : int, ~pv_cpu_ops.write_gdt_entry.base : int, ~pv_cpu_ops.write_gdt_entry.offset : int, ~pv_cpu_ops.write_idt_entry.base : int, ~pv_cpu_ops.write_idt_entry.offset : int, ~pv_cpu_ops.alloc_ldt.base : int, ~pv_cpu_ops.alloc_ldt.offset : int, ~pv_cpu_ops.free_ldt.base : int, ~pv_cpu_ops.free_ldt.offset : int, ~pv_cpu_ops.load_sp0.base : int, ~pv_cpu_ops.load_sp0.offset : int, ~pv_cpu_ops.set_iopl_mask.base : int, ~pv_cpu_ops.set_iopl_mask.offset : int, ~pv_cpu_ops.wbinvd.base : int, ~pv_cpu_ops.wbinvd.offset : int, ~pv_cpu_ops.io_delay.base : int, ~pv_cpu_ops.io_delay.offset : int, ~pv_cpu_ops.cpuid.base : int, ~pv_cpu_ops.cpuid.offset : int, ~pv_cpu_ops.read_msr.base : int, ~pv_cpu_ops.read_msr.offset : int, ~pv_cpu_ops.write_msr.base : int, ~pv_cpu_ops.write_msr.offset : int, ~pv_cpu_ops.read_tsc.base : int, ~pv_cpu_ops.read_tsc.offset : int, ~pv_cpu_ops.read_pmc.base : int, ~pv_cpu_ops.read_pmc.offset : int, ~pv_cpu_ops.read_tscp.base : int, ~pv_cpu_ops.read_tscp.offset : int, ~pv_cpu_ops.irq_enable_sysexit.base : int, ~pv_cpu_ops.irq_enable_sysexit.offset : int, ~pv_cpu_ops.usergs_sysret64.base : int, ~pv_cpu_ops.usergs_sysret64.offset : int, ~pv_cpu_ops.usergs_sysret32.base : int, ~pv_cpu_ops.usergs_sysret32.offset : int, ~pv_cpu_ops.iret.base : int, ~pv_cpu_ops.iret.offset : int, ~pv_cpu_ops.swapgs.base : int, ~pv_cpu_ops.swapgs.offset : int, ~pv_cpu_ops.start_context_switch.base : int, ~pv_cpu_ops.start_context_switch.offset : int, ~pv_cpu_ops.end_context_switch.base : int, ~pv_cpu_ops.end_context_switch.offset : int;

var ~#ioport_resource.base : int, ~#ioport_resource.offset : int;

var ~#boot_tvec_bases.base : int, ~#boot_tvec_bases.offset : int;

var ~rocket_ops_group0.base : int, ~rocket_ops_group0.offset : int;

var ~rocket_ops_group1.base : int, ~rocket_ops_group1.offset : int;

var ~tty_std_termios.c_iflag : int, ~tty_std_termios.c_oflag : int, ~tty_std_termios.c_cflag : int, ~tty_std_termios.c_lflag : int, ~tty_std_termios.c_line : int, ~tty_std_termios.c_cc : [int]int, ~tty_std_termios.c_ispeed : int, ~tty_std_termios.c_ospeed : int;

var ~rocket_driver.base : int, ~rocket_driver.offset : int;

var ~#driver_version.base : int, ~#driver_version.offset : int;

var ~#rp_table.base : int, ~#rp_table.offset : int;

var ~#rp_num_ports_open.base : int, ~#rp_num_ports_open.offset : int;

var ~#rocket_timer.base : int, ~#rocket_timer.offset : int;

var ~support_low_speed : ~bool;

var ~#rocketModel.base : int, ~#rocketModel.offset : int;

var ~#rocket_port_ops.base : int, ~#rocket_port_ops.offset : int;

var ~#aiop_intr_bits.base : int, ~#aiop_intr_bits.offset : int;

var ~#upci_aiop_intr_bits.base : int, ~#upci_aiop_intr_bits.offset : int;

var ~RData : [int]~Byte_t;

var ~RRegData : [int]~Byte_t;

var ~#sController.base : int, ~#sController.offset : int;

var ~sBitMapClrTbl : [int]~Byte_t;

var ~sBitMapSetTbl : [int]~Byte_t;

var ~#rocket_pci_ids.base : int, ~#rocket_pci_ids.offset : int;

var ~#rocket_ops.base : int, ~#rocket_ops.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

var #memory_int : [int,int]int;

implementation rp_init() returns (#res : int){
    var #t~nondet1017.base : int, #t~nondet1017.offset : int;
    var #t~ret1018 : int;
    var #t~ret1019.base : int, #t~ret1019.offset : int;
    var #t~nondet1020.base : int, #t~nondet1020.offset : int;
    var #t~ret1021.base : int, #t~ret1021.offset : int;
    var #t~nondet1022.base : int, #t~nondet1022.offset : int;
    var #t~ret1023 : int;
    var #t~mem1024 : int;
    var #t~ite1025 : int;
    var #t~mem1026 : int;
    var #t~ite1027 : int;
    var #t~mem1028 : int;
    var #t~ite1029 : int;
    var #t~mem1030 : int;
    var #t~ite1031 : int;
    var #t~nondet1033.base : int, #t~nondet1033.offset : int;
    var #t~nondet1035.base : int, #t~nondet1035.offset : int;
    var #t~ret1071 : int;
    var #t~nondet1072.base : int, #t~nondet1072.offset : int;
    var #t~ret1073 : int;
    var #t~ret1074 : int;
    var #t~ret1075 : int;
    var #t~nondet1076.base : int, #t~nondet1076.offset : int;
    var #t~ret1077 : int;
    var #t~ret1078 : int;
    var ~ret~716 : int;
    var ~pci_boards_found~716 : int;
    var ~isa_boards_found~716 : int;
    var ~i~716 : int;
    var ~tmp~716.base : int, ~tmp~716.offset : int;
    var ~tmp___0~716 : int;

  loc0:
    havoc ~ret~716;
    havoc ~pci_boards_found~716;
    havoc ~isa_boards_found~716;
    havoc ~i~716;
    havoc ~tmp~716.base, ~tmp~716.offset;
    havoc ~tmp___0~716;
    ~ret~716 := -12;
    call #t~nondet1017.base, #t~nondet1017.offset := #Ultimate.alloc(54);
    call #t~ret1018 := printk(#t~nondet1017.base, #t~nondet1017.offset);
    assume -2147483648 <= #t~ret1018 && #t~ret1018 <= 2147483647;
    havoc #t~nondet1017.base, #t~nondet1017.offset;
    havoc #t~ret1018;
    call #t~ret1019.base, #t~ret1019.offset := alloc_tty_driver(256);
    ~rocket_driver.base, ~rocket_driver.offset := #t~ret1019.base, #t~ret1019.offset;
    havoc #t~ret1019.base, #t~ret1019.offset;
    assume !((~rocket_driver.base + ~rocket_driver.offset) % 18446744073709551616 == 0);
    assume !(~board1 % 18446744073709551616 != 0);
    ~controller := 0;
    assume !(~controller % 18446744073709551616 != 0);
    ~rcktpt_io_addr := ~rcktpt_io_addr[0 := ~board1];
    ~rcktpt_io_addr := ~rcktpt_io_addr[1 := ~board2];
    ~rcktpt_io_addr := ~rcktpt_io_addr[2 := ~board3];
    ~rcktpt_io_addr := ~rcktpt_io_addr[3 := ~board4];
    ~rcktpt_type := ~rcktpt_type[0 := (if ~modem1 % 18446744073709551616 != 0 then 1 else 0)];
    call #t~mem1024 := read~int(~#pc104_1.base, ~#pc104_1.offset + 0, 8);
    assume !(#t~mem1024 % 18446744073709551616 == 0);
    #t~ite1025 := 4;
    ~rcktpt_type := ~rcktpt_type[0 := #t~ite1025];
    havoc #t~mem1024;
    havoc #t~ite1025;
    ~rcktpt_type := ~rcktpt_type[1 := (if ~modem2 % 18446744073709551616 != 0 then 1 else 0)];
    call #t~mem1026 := read~int(~#pc104_2.base, ~#pc104_2.offset + 0, 8);
    assume #t~mem1026 % 18446744073709551616 == 0;
    #t~ite1027 := ~rcktpt_type[1];
    ~rcktpt_type := ~rcktpt_type[1 := #t~ite1027];
    havoc #t~mem1026;
    havoc #t~ite1027;
    ~rcktpt_type := ~rcktpt_type[2 := (if ~modem3 % 18446744073709551616 != 0 then 1 else 0)];
    call #t~mem1028 := read~int(~#pc104_3.base, ~#pc104_3.offset + 0, 8);
    assume !(#t~mem1028 % 18446744073709551616 == 0);
    #t~ite1029 := 4;
    ~rcktpt_type := ~rcktpt_type[2 := #t~ite1029];
    havoc #t~mem1028;
    havoc #t~ite1029;
    ~rcktpt_type := ~rcktpt_type[3 := (if ~modem4 % 18446744073709551616 != 0 then 1 else 0)];
    call #t~mem1030 := read~int(~#pc104_4.base, ~#pc104_4.offset + 0, 8);
    assume #t~mem1030 % 18446744073709551616 == 0;
    #t~ite1031 := ~rcktpt_type[3];
    ~rcktpt_type := ~rcktpt_type[3 := #t~ite1031];
    havoc #t~mem1030;
    havoc #t~ite1031;
    call write~int(8, ~rocket_driver.base, ~rocket_driver.offset + 104, 8);
    call #t~nondet1033.base, #t~nondet1033.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet1033.base,#t~nondet1033.offset + 0 := 116];
    #memory_int := #memory_int[#t~nondet1033.base,#t~nondet1033.offset + 1 := 116];
    #memory_int := #memory_int[#t~nondet1033.base,#t~nondet1033.offset + 2 := 121];
    #memory_int := #memory_int[#t~nondet1033.base,#t~nondet1033.offset + 3 := 82];
    #memory_int := #memory_int[#t~nondet1033.base,#t~nondet1033.offset + 4 := 0];
    call write~$Pointer$(#t~nondet1033.base, #t~nondet1033.offset, ~rocket_driver.base, ~rocket_driver.offset + 32, 8);
    havoc #t~nondet1033.base, #t~nondet1033.offset;
    call #t~nondet1035.base, #t~nondet1035.offset := #Ultimate.alloc(19);
    call write~$Pointer$(#t~nondet1035.base, #t~nondet1035.offset, ~rocket_driver.base, ~rocket_driver.offset + 24, 8);
    havoc #t~nondet1035.base, #t~nondet1035.offset;
    call write~int(46, ~rocket_driver.base, ~rocket_driver.offset + 44, 4);
    call write~int(0, ~rocket_driver.base, ~rocket_driver.offset + 48, 4);
    call write~int(3, ~rocket_driver.base, ~rocket_driver.offset + 56, 2);
    call write~int(1, ~rocket_driver.base, ~rocket_driver.offset + 58, 2);
    call write~int(~tty_std_termios.c_iflag, ~rocket_driver.base, ~rocket_driver.offset + 60 + 0, 4);
    call write~int(~tty_std_termios.c_oflag, ~rocket_driver.base, ~rocket_driver.offset + 60 + 4, 4);
    call write~int(~tty_std_termios.c_cflag, ~rocket_driver.base, ~rocket_driver.offset + 60 + 8, 4);
    call write~int(~tty_std_termios.c_lflag, ~rocket_driver.base, ~rocket_driver.offset + 60 + 12, 4);
    call write~int(~tty_std_termios.c_line, ~rocket_driver.base, ~rocket_driver.offset + 60 + 16, 1);
    call write~int(~tty_std_termios.c_cc[0], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17, 1);
    call write~int(~tty_std_termios.c_cc[1], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1, 1);
    call write~int(~tty_std_termios.c_cc[2], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[3], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[4], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[5], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[6], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[7], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[8], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[9], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[10], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[11], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[12], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[13], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[14], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[15], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[16], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[17], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_cc[18], ~rocket_driver.base, ~rocket_driver.offset + 60 + 17 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(~tty_std_termios.c_ispeed, ~rocket_driver.base, ~rocket_driver.offset + 60 + 36, 4);
    call write~int(~tty_std_termios.c_ospeed, ~rocket_driver.base, ~rocket_driver.offset + 60 + 40, 4);
    call write~int(3261, ~rocket_driver.base, ~rocket_driver.offset + 60 + 8, 4);
    call write~int(9600, ~rocket_driver.base, ~rocket_driver.offset + 60 + 36, 4);
    call write~int(9600, ~rocket_driver.base, ~rocket_driver.offset + 60 + 40, 4);
    call tty_set_operations(~rocket_driver.base, ~rocket_driver.offset, ~#rocket_ops.base, ~#rocket_ops.offset);
    call #t~ret1071 := tty_register_driver(~rocket_driver.base, ~rocket_driver.offset);
    assume -2147483648 <= #t~ret1071 && #t~ret1071 <= 2147483647;
    ~ret~716 := #t~ret1071;
    havoc #t~ret1071;
    assume !(~ret~716 < 0);
    ~isa_boards_found~716 := 0;
    ~pci_boards_found~716 := 0;
    ~i~716 := 0;
    goto loc1;
  loc1:
    goto loc1_0, loc1_1;
  loc1_0:
    assume ~i~716 <= 7;
    call #t~ret1074 := init_ISA(~i~716);
    assume -2147483648 <= #t~ret1074 && #t~ret1074 <= 2147483647;
    ~tmp___0~716 := #t~ret1074;
    havoc #t~ret1074;
    assume ~tmp___0~716 != 0;
    ~isa_boards_found~716 := ~isa_boards_found~716 + 1;
    ~i~716 := ~i~716 + 1;
    goto loc1;
  loc1_1:
    assume !(~i~716 <= 7);
    assume !(~isa_boards_found~716 <= 7);
    ~max_board := ~pci_boards_found~716 + ~isa_boards_found~716;
    assume !(~max_board == 0);
    #res := 0;
    assume true;
    return;
}

procedure rp_init() returns (#res : int);
modifies ~rocket_driver.base, ~rocket_driver.offset, ~controller, ~rcktpt_io_addr, ~rcktpt_type, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~max_board, #valid, #length, ~nextLineNumber, ~lineNumbers, ~sClockPrescale, ~rp_baud_base, ~is_PCI;

implementation ldv_tty_port_operations_1() returns (){
    var #t~ret1325.base : int, #t~ret1325.offset : int;

  loc2:
    call #t~ret1325.base, #t~ret1325.offset := ldv_zalloc(1064);
    ~rocket_port_ops_group1.base, ~rocket_port_ops_group1.offset := #t~ret1325.base, #t~ret1325.offset;
    havoc #t~ret1325.base, #t~ret1325.offset;
    assume true;
    return;
}

procedure ldv_tty_port_operations_1() returns ();
modifies ~rocket_port_ops_group1.base, ~rocket_port_ops_group1.offset, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ldv___get_free_pages_20(#in~flags : int, #in~ldv_func_arg2 : int) returns (#res : int){
    var #t~ret1400 : int;
    var ~flags : int;
    var ~ldv_func_arg2 : int;
    var ~tmp~1061 : int;

  loc3:
    ~flags := #in~flags;
    ~ldv_func_arg2 := #in~ldv_func_arg2;
    havoc ~tmp~1061;
    call ldv_check_alloc_flags(~flags);
    return;
}

procedure ldv___get_free_pages_20(#in~flags : int, #in~ldv_func_arg2 : int) returns (#res : int);
modifies ;

implementation main() returns (#res : int){
    var #t~ret1326.base : int, #t~ret1326.offset : int;
    var #t~ret1327.base : int, #t~ret1327.offset : int;
    var #t~nondet1328 : int;
    var #t~nondet1329 : int;
    var #t~nondet1330 : int;
    var #t~ret1331.base : int, #t~ret1331.offset : int;
    var #t~ret1332.base : int, #t~ret1332.offset : int;
    var #t~nondet1333 : int;
    var #t~nondet1334 : int;
    var #t~nondet1335 : int;
    var #t~nondet1336 : int;
    var #t~nondet1337 : int;
    var #t~nondet1338 : int;
    var #t~nondet1339 : int;
    var #t~nondet1340 : int;
    var #t~nondet1341 : int;
    var #t~switch1342 : bool;
    var #t~nondet1343 : int;
    var #t~switch1344 : bool;
    var #t~ret1345 : int;
    var #t~ret1346 : int;
    var #t~ret1347 : int;
    var #t~ret1348 : int;
    var #t~ret1349 : int;
    var #t~ret1350 : int;
    var #t~nondet1351 : int;
    var #t~switch1352 : bool;
    var #t~ret1353 : int;
    var #t~nondet1354 : int;
    var #t~switch1355 : bool;
    var #t~nondet1356 : int;
    var #t~switch1357 : bool;
    var #t~ret1358 : int;
    var #t~ret1359 : int;
    var #t~ret1360 : int;
    var #t~ret1361 : int;
    var #t~ret1362 : int;
    var #t~ret1363 : int;
    var #t~ret1364 : int;
    var #t~ret1365 : int;
    var #t~ret1366 : int;
    var #t~ret1367 : int;
    var #t~ret1368 : int;
    var #t~ret1369 : int;
    var #t~ret1370 : int;
    var #t~ret1371 : int;
    var #t~ret1372 : int;
    var #t~ret1373 : int;
    var #t~ret1374 : int;
    var #t~ret1375 : int;
    var #t~ret1376 : int;
    var #t~ret1377 : int;
    var #t~ret1378 : int;
    var #t~ret1379 : int;
    var #t~ret1380 : int;
    var #t~ret1381 : int;
    var #t~ret1382 : int;
    var #t~ret1383 : int;
    var #t~ret1384 : int;
    var #t~ret1385 : int;
    var #t~ret1386 : int;
    var #t~ret1387 : int;
    var #t~ret1388 : int;
    var #t~ret1389 : int;
    var #t~ret1390 : int;
    var #t~ret1391 : int;
    var #t~ret1392 : int;
    var #t~ret1393 : int;
    var #t~ret1394 : int;
    var #t~ret1395 : int;
    var #t~ret1396 : int;
    var #t~ret1397 : int;
    var #t~ret1398 : int;
    var #t~ret1399 : int;
    var ~ldvarg1~846.base : int, ~ldvarg1~846.offset : int;
    var ~tmp~846.base : int, ~tmp~846.offset : int;
    var ~ldvarg0~846.base : int, ~ldvarg0~846.offset : int;
    var ~tmp___0~846.base : int, ~tmp___0~846.offset : int;
    var ~ldvarg2~846 : int;
    var ~tmp___1~846 : int;
    var ~ldvarg3~846 : int;
    var ~tmp___2~846 : int;
    var ~ldvarg11~846 : int;
    var ~tmp___3~846 : int;
    var ~ldvarg7~846.base : int, ~ldvarg7~846.offset : int;
    var ~tmp___4~846.base : int, ~tmp___4~846.offset : int;
    var ~ldvarg12~846.base : int, ~ldvarg12~846.offset : int;
    var ~tmp___5~846.base : int, ~tmp___5~846.offset : int;
    var ~ldvarg5~846 : int;
    var ~tmp___6~846 : int;
    var ~ldvarg6~846 : int;
    var ~tmp___7~846 : int;
    var ~ldvarg8~846 : int;
    var ~tmp___8~846 : int;
    var ~ldvarg14~846 : int;
    var ~tmp___9~846 : int;
    var ~ldvarg4~846 : int;
    var ~tmp___10~846 : int;
    var ~ldvarg13~846 : int;
    var ~tmp___11~846 : int;
    var ~ldvarg10~846 : int;
    var ~tmp___12~846 : int;
    var ~ldvarg9~846 : int;
    var ~tmp___13~846 : int;
    var ~tmp___14~846 : int;
    var ~tmp___15~846 : int;
    var ~tmp___16~846 : int;
    var ~tmp___17~846 : int;
    var ~tmp___18~846 : int;

  loc4:
    havoc ~ldvarg1~846.base, ~ldvarg1~846.offset;
    havoc ~tmp~846.base, ~tmp~846.offset;
    havoc ~ldvarg0~846.base, ~ldvarg0~846.offset;
    havoc ~tmp___0~846.base, ~tmp___0~846.offset;
    havoc ~ldvarg2~846;
    havoc ~tmp___1~846;
    havoc ~ldvarg3~846;
    havoc ~tmp___2~846;
    havoc ~ldvarg11~846;
    havoc ~tmp___3~846;
    havoc ~ldvarg7~846.base, ~ldvarg7~846.offset;
    havoc ~tmp___4~846.base, ~tmp___4~846.offset;
    havoc ~ldvarg12~846.base, ~ldvarg12~846.offset;
    havoc ~tmp___5~846.base, ~tmp___5~846.offset;
    havoc ~ldvarg5~846;
    havoc ~tmp___6~846;
    havoc ~ldvarg6~846;
    havoc ~tmp___7~846;
    havoc ~ldvarg8~846;
    havoc ~tmp___8~846;
    havoc ~ldvarg14~846;
    havoc ~tmp___9~846;
    havoc ~ldvarg4~846;
    havoc ~tmp___10~846;
    havoc ~ldvarg13~846;
    havoc ~tmp___11~846;
    havoc ~ldvarg10~846;
    havoc ~tmp___12~846;
    havoc ~ldvarg9~846;
    havoc ~tmp___13~846;
    havoc ~tmp___14~846;
    havoc ~tmp___15~846;
    havoc ~tmp___16~846;
    havoc ~tmp___17~846;
    havoc ~tmp___18~846;
    call #t~ret1326.base, #t~ret1326.offset := ldv_zalloc(1064);
    ~tmp~846.base, ~tmp~846.offset := #t~ret1326.base, #t~ret1326.offset;
    havoc #t~ret1326.base, #t~ret1326.offset;
    ~ldvarg1~846.base, ~ldvarg1~846.offset := ~tmp~846.base, ~tmp~846.offset;
    call #t~ret1327.base, #t~ret1327.offset := ldv_zalloc(1064);
    ~tmp___0~846.base, ~tmp___0~846.offset := #t~ret1327.base, #t~ret1327.offset;
    havoc #t~ret1327.base, #t~ret1327.offset;
    ~ldvarg0~846.base, ~ldvarg0~846.offset := ~tmp___0~846.base, ~tmp___0~846.offset;
    assume -2147483648 <= #t~nondet1328 && #t~nondet1328 <= 2147483647;
    ~tmp___1~846 := #t~nondet1328;
    havoc #t~nondet1328;
    ~ldvarg2~846 := ~tmp___1~846;
    ~tmp___2~846 := #t~nondet1329;
    havoc #t~nondet1329;
    ~ldvarg3~846 := ~tmp___2~846;
    ~tmp___3~846 := #t~nondet1330;
    havoc #t~nondet1330;
    ~ldvarg11~846 := ~tmp___3~846;
    call #t~ret1331.base, #t~ret1331.offset := ldv_zalloc(1);
    ~tmp___4~846.base, ~tmp___4~846.offset := #t~ret1331.base, #t~ret1331.offset;
    havoc #t~ret1331.base, #t~ret1331.offset;
    ~ldvarg7~846.base, ~ldvarg7~846.offset := ~tmp___4~846.base, ~tmp___4~846.offset;
    call #t~ret1332.base, #t~ret1332.offset := ldv_zalloc(44);
    ~tmp___5~846.base, ~tmp___5~846.offset := #t~ret1332.base, #t~ret1332.offset;
    havoc #t~ret1332.base, #t~ret1332.offset;
    ~ldvarg12~846.base, ~ldvarg12~846.offset := ~tmp___5~846.base, ~tmp___5~846.offset;
    assume -2147483648 <= #t~nondet1333 && #t~nondet1333 <= 2147483647;
    ~tmp___6~846 := #t~nondet1333;
    havoc #t~nondet1333;
    ~ldvarg5~846 := ~tmp___6~846;
    assume -2147483648 <= #t~nondet1334 && #t~nondet1334 <= 2147483647;
    ~tmp___7~846 := #t~nondet1334;
    havoc #t~nondet1334;
    ~ldvarg6~846 := ~tmp___7~846;
    ~tmp___8~846 := #t~nondet1335;
    havoc #t~nondet1335;
    ~ldvarg8~846 := ~tmp___8~846;
    ~tmp___9~846 := #t~nondet1336;
    havoc #t~nondet1336;
    ~ldvarg14~846 := ~tmp___9~846;
    assume -2147483648 <= #t~nondet1337 && #t~nondet1337 <= 2147483647;
    ~tmp___10~846 := #t~nondet1337;
    havoc #t~nondet1337;
    ~ldvarg4~846 := ~tmp___10~846;
    assume -128 <= #t~nondet1338 && #t~nondet1338 <= 127;
    ~tmp___11~846 := #t~nondet1338;
    havoc #t~nondet1338;
    ~ldvarg13~846 := ~tmp___11~846;
    ~tmp___12~846 := #t~nondet1339;
    havoc #t~nondet1339;
    ~ldvarg10~846 := ~tmp___12~846;
    ~tmp___13~846 := #t~nondet1340;
    havoc #t~nondet1340;
    ~ldvarg9~846 := ~tmp___13~846;
    call ldv_initialize();
    ~ldv_state_variable_1 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_3 := 0;
    ~ldv_state_variable_2 := 0;
    goto loc5;
  loc5:
    assume -2147483648 <= #t~nondet1341 && #t~nondet1341 <= 2147483647;
    ~tmp___14~846 := #t~nondet1341;
    havoc #t~nondet1341;
    #t~switch1342 := ~tmp___14~846 == 0;
    assume !#t~switch1342;
    #t~switch1342 := #t~switch1342 || ~tmp___14~846 == 1;
    goto loc6;
  loc6:
    goto loc6_0, loc6_1;
  loc6_0:
    assume #t~switch1342;
    assume ~ldv_state_variable_0 != 0;
    assume -2147483648 <= #t~nondet1351 && #t~nondet1351 <= 2147483647;
    ~tmp___16~846 := #t~nondet1351;
    havoc #t~nondet1351;
    #t~switch1352 := ~tmp___16~846 == 0;
    assume !#t~switch1352;
    #t~switch1352 := #t~switch1352 || ~tmp___16~846 == 1;
    assume #t~switch1352;
    assume ~ldv_state_variable_0 == 1;
    call #t~ret1353 := rp_init();
    assume -2147483648 <= #t~ret1353 && #t~ret1353 <= 2147483647;
    ~ldv_retval_1 := #t~ret1353;
    havoc #t~ret1353;
    assume ~ldv_retval_1 == 0;
    ~ldv_state_variable_0 := 3;
    ~ldv_state_variable_2 := 1;
    call ldv_initialize_tty_operations_2();
    ~ldv_state_variable_3 := 1;
    ~ldv_state_variable_1 := 1;
    call ldv_tty_port_operations_1();
    assume !(~ldv_retval_1 != 0);
    goto loc5;
  loc6_1:
    assume !#t~switch1342;
    #t~switch1342 := #t~switch1342 || ~tmp___14~846 == 2;
    assume !#t~switch1342;
    #t~switch1342 := #t~switch1342 || ~tmp___14~846 == 3;
    assume #t~switch1342;
    assume ~ldv_state_variable_2 != 0;
    assume -2147483648 <= #t~nondet1356 && #t~nondet1356 <= 2147483647;
    ~tmp___18~846 := #t~nondet1356;
    havoc #t~nondet1356;
    #t~switch1357 := ~tmp___18~846 == 0;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 1;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 2;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 3;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 4;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 5;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 6;
    goto loc7;
  loc7:
    goto loc7_0, loc7_1;
  loc7_0:
    assume #t~switch1357;
    assume ~ldv_state_variable_2 == 2;
    call #t~ret1363 := rp_open(~rocket_ops_group1.base, ~rocket_ops_group1.offset, ~rocket_ops_group0.base, ~rocket_ops_group0.offset);
    return;
  loc7_1:
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 7;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 8;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 9;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 10;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 11;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 12;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 13;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 14;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 15;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 16;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 17;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 18;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 19;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 20;
    assume !#t~switch1357;
    #t~switch1357 := #t~switch1357 || ~tmp___18~846 == 21;
    assume #t~switch1357;
    assume ~ldv_state_variable_2 == 1;
    call #t~ret1399 := ldv_setup_2();
    assume -2147483648 <= #t~ret1399 && #t~ret1399 <= 2147483647;
    havoc #t~ret1399;
    ~ldv_state_variable_2 := 2;
    ~ref_cnt := ~ref_cnt + 1;
    goto loc5;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_3, ~ldv_state_variable_2, ~ldv_retval_0, ~ldv_retval_1, ~ldv_retval_2, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~rocket_ops_group0.base, ~rocket_ops_group0.offset, ~rocket_ops_group1.base, ~rocket_ops_group1.offset, ~rocket_port_ops_group1.base, ~rocket_port_ops_group1.offset, ~ldv_spin, ~nextLineNumber, ~lineNumbers, ~rcktpt_io_addr, ~sClockPrescale, ~rp_baud_base, ~is_PCI, ~rcktpt_type, ~rocket_driver.base, ~rocket_driver.offset, ~controller, ~max_board;

implementation init_ISA(#in~i : int) returns (#res : int){
    var #t~nondet977.base : int, #t~nondet977.offset : int;
    var #t~ret978.base : int, #t~ret978.offset : int;
    var #t~nondet979.base : int, #t~nondet979.offset : int;
    var #t~ret980 : int;
    var #t~switch982 : bool;
    var #t~nondet983.base : int, #t~nondet983.offset : int;
    var #t~nondet984.base : int, #t~nondet984.offset : int;
    var #t~nondet985.base : int, #t~nondet985.offset : int;
    var #t~nondet986.base : int, #t~nondet986.offset : int;
    var #t~ret988 : int;
    var #t~mem989 : int;
    var #t~mem990 : int;
    var #t~mem992 : int;
    var #t~mem993 : int;
    var #t~mem994 : int;
    var #t~mem996 : int;
    var #t~mem997 : int;
    var #t~mem999 : int;
    var #t~mem1000 : int;
    var #t~mem1001 : int;
    var #t~mem1003 : int;
    var #t~mem1004 : int;
    var #t~mem1005 : int;
    var #t~mem1006 : int;
    var #t~nondet1007.base : int, #t~nondet1007.offset : int;
    var #t~ret1008.base : int, #t~ret1008.offset : int;
    var #t~nondet1009.base : int, #t~nondet1009.offset : int;
    var #t~ret1010.base : int, #t~ret1010.offset : int;
    var #t~nondet1013.base : int, #t~nondet1013.offset : int;
    var #t~ret1014 : int;
    var #t~nondet1015.base : int, #t~nondet1015.offset : int;
    var #t~ret1016 : int;
    var ~i : int;
    var ~num_aiops~691 : int;
    var ~num_chan~691 : int;
    var ~total_num_chan~691 : int;
    var ~aiop~691 : int;
    var ~chan~691 : int;
    var ~#aiopio~691.base : int, ~#aiopio~691.offset : int;
    var ~ctlp~691.base : int, ~ctlp~691.offset : int;
    var ~type_string~691.base : int, ~type_string~691.offset : int;
    var ~tmp~691.base : int, ~tmp~691.offset : int;

  loc8:
    ~i := #in~i;
    havoc ~num_aiops~691;
    havoc ~num_chan~691;
    havoc ~total_num_chan~691;
    havoc ~aiop~691;
    havoc ~chan~691;
    call ~#aiopio~691.base, ~#aiopio~691.offset := #Ultimate.alloc(16);
    havoc ~ctlp~691.base, ~ctlp~691.offset;
    havoc ~type_string~691.base, ~type_string~691.offset;
    havoc ~tmp~691.base, ~tmp~691.offset;
    ~num_chan~691 := 0;
    ~total_num_chan~691 := 0;
    assume ~rcktpt_io_addr[~i] % 18446744073709551616 == 0;
    #res := 0;
    call ULTIMATE.dealloc(~#aiopio~691.base, ~#aiopio~691.offset);
    havoc ~#aiopio~691.base, ~#aiopio~691.offset;
    assume true;
    return;
}

procedure init_ISA(#in~i : int) returns (#res : int);
modifies ~rcktpt_io_addr, #memory_int, ~sClockPrescale, ~rp_baud_base, ~is_PCI, #valid, #length, ~nextLineNumber, ~lineNumbers, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ULTIMATE.init() returns (){
    var #t~nondet159.base : int, #t~nondet159.offset : int;
    var #t~nondet160.base : int, #t~nondet160.offset : int;

  loc9:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_state_variable_3 := 0;
    ~ldv_state_variable_2 := 0;
    ~rocket_port_ops_group1.base, ~rocket_port_ops_group1.offset := 0, 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_0 := 0;
    call ~#xmit_flags.base, ~#xmit_flags.offset := #Ultimate.alloc(32);
    call write~int(0, ~#xmit_flags.base, ~#xmit_flags.offset + 0, 4);
    call write~int(0, ~#xmit_flags.base, ~#xmit_flags.offset + 4, 4);
    call write~int(0, ~#xmit_flags.base, ~#xmit_flags.offset + 8, 4);
    call write~int(0, ~#xmit_flags.base, ~#xmit_flags.offset + 12, 4);
    call write~int(0, ~#xmit_flags.base, ~#xmit_flags.offset + 16, 4);
    call write~int(0, ~#xmit_flags.base, ~#xmit_flags.offset + 20, 4);
    call write~int(0, ~#xmit_flags.base, ~#xmit_flags.offset + 24, 4);
    call write~int(0, ~#xmit_flags.base, ~#xmit_flags.offset + 28, 4);
    ~board1 := 0;
    ~board2 := 0;
    ~board3 := 0;
    ~board4 := 0;
    ~controller := 0;
    ~modem1 := 0;
    ~modem2 := 0;
    ~modem3 := 0;
    ~modem4 := 0;
    call ~#pc104_1.base, ~#pc104_1.offset := #Ultimate.alloc(64);
    call write~int(0, ~#pc104_1.base, ~#pc104_1.offset + 0, 8);
    call write~int(0, ~#pc104_1.base, ~#pc104_1.offset + 8, 8);
    call write~int(0, ~#pc104_1.base, ~#pc104_1.offset + 16, 8);
    call write~int(0, ~#pc104_1.base, ~#pc104_1.offset + 24, 8);
    call write~int(0, ~#pc104_1.base, ~#pc104_1.offset + 32, 8);
    call write~int(0, ~#pc104_1.base, ~#pc104_1.offset + 40, 8);
    call write~int(0, ~#pc104_1.base, ~#pc104_1.offset + 48, 8);
    call write~int(0, ~#pc104_1.base, ~#pc104_1.offset + 56, 8);
    call ~#pc104_2.base, ~#pc104_2.offset := #Ultimate.alloc(64);
    call write~int(0, ~#pc104_2.base, ~#pc104_2.offset + 0, 8);
    call write~int(0, ~#pc104_2.base, ~#pc104_2.offset + 8, 8);
    call write~int(0, ~#pc104_2.base, ~#pc104_2.offset + 16, 8);
    call write~int(0, ~#pc104_2.base, ~#pc104_2.offset + 24, 8);
    call write~int(0, ~#pc104_2.base, ~#pc104_2.offset + 32, 8);
    call write~int(0, ~#pc104_2.base, ~#pc104_2.offset + 40, 8);
    call write~int(0, ~#pc104_2.base, ~#pc104_2.offset + 48, 8);
    call write~int(0, ~#pc104_2.base, ~#pc104_2.offset + 56, 8);
    call ~#pc104_3.base, ~#pc104_3.offset := #Ultimate.alloc(64);
    call write~int(0, ~#pc104_3.base, ~#pc104_3.offset + 0, 8);
    call write~int(0, ~#pc104_3.base, ~#pc104_3.offset + 8, 8);
    call write~int(0, ~#pc104_3.base, ~#pc104_3.offset + 16, 8);
    call write~int(0, ~#pc104_3.base, ~#pc104_3.offset + 24, 8);
    call write~int(0, ~#pc104_3.base, ~#pc104_3.offset + 32, 8);
    call write~int(0, ~#pc104_3.base, ~#pc104_3.offset + 40, 8);
    call write~int(0, ~#pc104_3.base, ~#pc104_3.offset + 48, 8);
    call write~int(0, ~#pc104_3.base, ~#pc104_3.offset + 56, 8);
    call ~#pc104_4.base, ~#pc104_4.offset := #Ultimate.alloc(64);
    call write~int(0, ~#pc104_4.base, ~#pc104_4.offset + 0, 8);
    call write~int(0, ~#pc104_4.base, ~#pc104_4.offset + 8, 8);
    call write~int(0, ~#pc104_4.base, ~#pc104_4.offset + 16, 8);
    call write~int(0, ~#pc104_4.base, ~#pc104_4.offset + 24, 8);
    call write~int(0, ~#pc104_4.base, ~#pc104_4.offset + 32, 8);
    call write~int(0, ~#pc104_4.base, ~#pc104_4.offset + 40, 8);
    call write~int(0, ~#pc104_4.base, ~#pc104_4.offset + 48, 8);
    call write~int(0, ~#pc104_4.base, ~#pc104_4.offset + 56, 8);
    ~pc104.base, ~pc104.offset := ~pc104.base[0 := ~#pc104_1.base], ~pc104.offset[0 := ~#pc104_1.offset];
    ~pc104.base, ~pc104.offset := ~pc104.base[1 := ~#pc104_2.base], ~pc104.offset[1 := ~#pc104_2.offset];
    ~pc104.base, ~pc104.offset := ~pc104.base[2 := ~#pc104_3.base], ~pc104.offset[2 := ~#pc104_3.offset];
    ~pc104.base, ~pc104.offset := ~pc104.base[3 := ~#pc104_4.base], ~pc104.offset[3 := ~#pc104_4.offset];
    ~rp_baud_base := ~rp_baud_base[0 := 0];
    ~rp_baud_base := ~rp_baud_base[1 := 0];
    ~rp_baud_base := ~rp_baud_base[2 := 0];
    ~rp_baud_base := ~rp_baud_base[3 := 0];
    ~rp_baud_base := ~rp_baud_base[4 := 0];
    ~rp_baud_base := ~rp_baud_base[5 := 0];
    ~rp_baud_base := ~rp_baud_base[6 := 0];
    ~rp_baud_base := ~rp_baud_base[7 := 0];
    ~rcktpt_io_addr := ~rcktpt_io_addr[0 := 0];
    ~rcktpt_io_addr := ~rcktpt_io_addr[1 := 0];
    ~rcktpt_io_addr := ~rcktpt_io_addr[2 := 0];
    ~rcktpt_io_addr := ~rcktpt_io_addr[3 := 0];
    ~rcktpt_io_addr := ~rcktpt_io_addr[4 := 0];
    ~rcktpt_io_addr := ~rcktpt_io_addr[5 := 0];
    ~rcktpt_io_addr := ~rcktpt_io_addr[6 := 0];
    ~rcktpt_io_addr := ~rcktpt_io_addr[7 := 0];
    ~rcktpt_type := ~rcktpt_type[0 := 0];
    ~rcktpt_type := ~rcktpt_type[1 := 0];
    ~rcktpt_type := ~rcktpt_type[2 := 0];
    ~rcktpt_type := ~rcktpt_type[3 := 0];
    ~rcktpt_type := ~rcktpt_type[4 := 0];
    ~rcktpt_type := ~rcktpt_type[5 := 0];
    ~rcktpt_type := ~rcktpt_type[6 := 0];
    ~rcktpt_type := ~rcktpt_type[7 := 0];
    ~is_PCI := ~is_PCI[0 := 0];
    ~is_PCI := ~is_PCI[1 := 0];
    ~is_PCI := ~is_PCI[2 := 0];
    ~is_PCI := ~is_PCI[3 := 0];
    ~is_PCI := ~is_PCI[4 := 0];
    ~is_PCI := ~is_PCI[5 := 0];
    ~is_PCI := ~is_PCI[6 := 0];
    ~is_PCI := ~is_PCI[7 := 0];
    ~max_board := 0;
    ~sClockPrescale := 20;
    ~lineNumbers := ~lineNumbers[0 := 0];
    ~lineNumbers := ~lineNumbers[1 := 0];
    ~lineNumbers := ~lineNumbers[2 := 0];
    ~lineNumbers := ~lineNumbers[3 := 0];
    ~lineNumbers := ~lineNumbers[4 := 0];
    ~lineNumbers := ~lineNumbers[5 := 0];
    ~lineNumbers := ~lineNumbers[6 := 0];
    ~lineNumbers := ~lineNumbers[7 := 0];
    ~lineNumbers := ~lineNumbers[8 := 0];
    ~lineNumbers := ~lineNumbers[9 := 0];
    ~lineNumbers := ~lineNumbers[10 := 0];
    ~lineNumbers := ~lineNumbers[11 := 0];
    ~lineNumbers := ~lineNumbers[12 := 0];
    ~lineNumbers := ~lineNumbers[13 := 0];
    ~lineNumbers := ~lineNumbers[14 := 0];
    ~lineNumbers := ~lineNumbers[15 := 0];
    ~lineNumbers := ~lineNumbers[16 := 0];
    ~lineNumbers := ~lineNumbers[17 := 0];
    ~lineNumbers := ~lineNumbers[18 := 0];
    ~lineNumbers := ~lineNumbers[19 := 0];
    ~lineNumbers := ~lineNumbers[20 := 0];
    ~lineNumbers := ~lineNumbers[21 := 0];
    ~lineNumbers := ~lineNumbers[22 := 0];
    ~lineNumbers := ~lineNumbers[23 := 0];
    ~lineNumbers := ~lineNumbers[24 := 0];
    ~lineNumbers := ~lineNumbers[25 := 0];
    ~lineNumbers := ~lineNumbers[26 := 0];
    ~lineNumbers := ~lineNumbers[27 := 0];
    ~lineNumbers := ~lineNumbers[28 := 0];
    ~lineNumbers := ~lineNumbers[29 := 0];
    ~lineNumbers := ~lineNumbers[30 := 0];
    ~lineNumbers := ~lineNumbers[31 := 0];
    ~lineNumbers := ~lineNumbers[32 := 0];
    ~lineNumbers := ~lineNumbers[33 := 0];
    ~lineNumbers := ~lineNumbers[34 := 0];
    ~lineNumbers := ~lineNumbers[35 := 0];
    ~lineNumbers := ~lineNumbers[36 := 0];
    ~lineNumbers := ~lineNumbers[37 := 0];
    ~lineNumbers := ~lineNumbers[38 := 0];
    ~lineNumbers := ~lineNumbers[39 := 0];
    ~lineNumbers := ~lineNumbers[40 := 0];
    ~lineNumbers := ~lineNumbers[41 := 0];
    ~lineNumbers := ~lineNumbers[42 := 0];
    ~lineNumbers := ~lineNumbers[43 := 0];
    ~lineNumbers := ~lineNumbers[44 := 0];
    ~lineNumbers := ~lineNumbers[45 := 0];
    ~lineNumbers := ~lineNumbers[46 := 0];
    ~lineNumbers := ~lineNumbers[47 := 0];
    ~lineNumbers := ~lineNumbers[48 := 0];
    ~lineNumbers := ~lineNumbers[49 := 0];
    ~lineNumbers := ~lineNumbers[50 := 0];
    ~lineNumbers := ~lineNumbers[51 := 0];
    ~lineNumbers := ~lineNumbers[52 := 0];
    ~lineNumbers := ~lineNumbers[53 := 0];
    ~lineNumbers := ~lineNumbers[54 := 0];
    ~lineNumbers := ~lineNumbers[55 := 0];
    ~lineNumbers := ~lineNumbers[56 := 0];
    ~lineNumbers := ~lineNumbers[57 := 0];
    ~lineNumbers := ~lineNumbers[58 := 0];
    ~lineNumbers := ~lineNumbers[59 := 0];
    ~lineNumbers := ~lineNumbers[60 := 0];
    ~lineNumbers := ~lineNumbers[61 := 0];
    ~lineNumbers := ~lineNumbers[62 := 0];
    ~lineNumbers := ~lineNumbers[63 := 0];
    ~lineNumbers := ~lineNumbers[64 := 0];
    ~lineNumbers := ~lineNumbers[65 := 0];
    ~lineNumbers := ~lineNumbers[66 := 0];
    ~lineNumbers := ~lineNumbers[67 := 0];
    ~lineNumbers := ~lineNumbers[68 := 0];
    ~lineNumbers := ~lineNumbers[69 := 0];
    ~lineNumbers := ~lineNumbers[70 := 0];
    ~lineNumbers := ~lineNumbers[71 := 0];
    ~lineNumbers := ~lineNumbers[72 := 0];
    ~lineNumbers := ~lineNumbers[73 := 0];
    ~lineNumbers := ~lineNumbers[74 := 0];
    ~lineNumbers := ~lineNumbers[75 := 0];
    ~lineNumbers := ~lineNumbers[76 := 0];
    ~lineNumbers := ~lineNumbers[77 := 0];
    ~lineNumbers := ~lineNumbers[78 := 0];
    ~lineNumbers := ~lineNumbers[79 := 0];
    ~lineNumbers := ~lineNumbers[80 := 0];
    ~lineNumbers := ~lineNumbers[81 := 0];
    ~lineNumbers := ~lineNumbers[82 := 0];
    ~lineNumbers := ~lineNumbers[83 := 0];
    ~lineNumbers := ~lineNumbers[84 := 0];
    ~lineNumbers := ~lineNumbers[85 := 0];
    ~lineNumbers := ~lineNumbers[86 := 0];
    ~lineNumbers := ~lineNumbers[87 := 0];
    ~lineNumbers := ~lineNumbers[88 := 0];
    ~lineNumbers := ~lineNumbers[89 := 0];
    ~lineNumbers := ~lineNumbers[90 := 0];
    ~lineNumbers := ~lineNumbers[91 := 0];
    ~lineNumbers := ~lineNumbers[92 := 0];
    ~lineNumbers := ~lineNumbers[93 := 0];
    ~lineNumbers := ~lineNumbers[94 := 0];
    ~lineNumbers := ~lineNumbers[95 := 0];
    ~lineNumbers := ~lineNumbers[96 := 0];
    ~lineNumbers := ~lineNumbers[97 := 0];
    ~lineNumbers := ~lineNumbers[98 := 0];
    ~lineNumbers := ~lineNumbers[99 := 0];
    ~lineNumbers := ~lineNumbers[100 := 0];
    ~lineNumbers := ~lineNumbers[101 := 0];
    ~lineNumbers := ~lineNumbers[102 := 0];
    ~lineNumbers := ~lineNumbers[103 := 0];
    ~lineNumbers := ~lineNumbers[104 := 0];
    ~lineNumbers := ~lineNumbers[105 := 0];
    ~lineNumbers := ~lineNumbers[106 := 0];
    ~lineNumbers := ~lineNumbers[107 := 0];
    ~lineNumbers := ~lineNumbers[108 := 0];
    ~lineNumbers := ~lineNumbers[109 := 0];
    ~lineNumbers := ~lineNumbers[110 := 0];
    ~lineNumbers := ~lineNumbers[111 := 0];
    ~lineNumbers := ~lineNumbers[112 := 0];
    ~lineNumbers := ~lineNumbers[113 := 0];
    ~lineNumbers := ~lineNumbers[114 := 0];
    ~lineNumbers := ~lineNumbers[115 := 0];
    ~lineNumbers := ~lineNumbers[116 := 0];
    ~lineNumbers := ~lineNumbers[117 := 0];
    ~lineNumbers := ~lineNumbers[118 := 0];
    ~lineNumbers := ~lineNumbers[119 := 0];
    ~lineNumbers := ~lineNumbers[120 := 0];
    ~lineNumbers := ~lineNumbers[121 := 0];
    ~lineNumbers := ~lineNumbers[122 := 0];
    ~lineNumbers := ~lineNumbers[123 := 0];
    ~lineNumbers := ~lineNumbers[124 := 0];
    ~lineNumbers := ~lineNumbers[125 := 0];
    ~lineNumbers := ~lineNumbers[126 := 0];
    ~lineNumbers := ~lineNumbers[127 := 0];
    ~lineNumbers := ~lineNumbers[128 := 0];
    ~lineNumbers := ~lineNumbers[129 := 0];
    ~lineNumbers := ~lineNumbers[130 := 0];
    ~lineNumbers := ~lineNumbers[131 := 0];
    ~lineNumbers := ~lineNumbers[132 := 0];
    ~lineNumbers := ~lineNumbers[133 := 0];
    ~lineNumbers := ~lineNumbers[134 := 0];
    ~lineNumbers := ~lineNumbers[135 := 0];
    ~lineNumbers := ~lineNumbers[136 := 0];
    ~lineNumbers := ~lineNumbers[137 := 0];
    ~lineNumbers := ~lineNumbers[138 := 0];
    ~lineNumbers := ~lineNumbers[139 := 0];
    ~lineNumbers := ~lineNumbers[140 := 0];
    ~lineNumbers := ~lineNumbers[141 := 0];
    ~lineNumbers := ~lineNumbers[142 := 0];
    ~lineNumbers := ~lineNumbers[143 := 0];
    ~lineNumbers := ~lineNumbers[144 := 0];
    ~lineNumbers := ~lineNumbers[145 := 0];
    ~lineNumbers := ~lineNumbers[146 := 0];
    ~lineNumbers := ~lineNumbers[147 := 0];
    ~lineNumbers := ~lineNumbers[148 := 0];
    ~lineNumbers := ~lineNumbers[149 := 0];
    ~lineNumbers := ~lineNumbers[150 := 0];
    ~lineNumbers := ~lineNumbers[151 := 0];
    ~lineNumbers := ~lineNumbers[152 := 0];
    ~lineNumbers := ~lineNumbers[153 := 0];
    ~lineNumbers := ~lineNumbers[154 := 0];
    ~lineNumbers := ~lineNumbers[155 := 0];
    ~lineNumbers := ~lineNumbers[156 := 0];
    ~lineNumbers := ~lineNumbers[157 := 0];
    ~lineNumbers := ~lineNumbers[158 := 0];
    ~lineNumbers := ~lineNumbers[159 := 0];
    ~lineNumbers := ~lineNumbers[160 := 0];
    ~lineNumbers := ~lineNumbers[161 := 0];
    ~lineNumbers := ~lineNumbers[162 := 0];
    ~lineNumbers := ~lineNumbers[163 := 0];
    ~lineNumbers := ~lineNumbers[164 := 0];
    ~lineNumbers := ~lineNumbers[165 := 0];
    ~lineNumbers := ~lineNumbers[166 := 0];
    ~lineNumbers := ~lineNumbers[167 := 0];
    ~lineNumbers := ~lineNumbers[168 := 0];
    ~lineNumbers := ~lineNumbers[169 := 0];
    ~lineNumbers := ~lineNumbers[170 := 0];
    ~lineNumbers := ~lineNumbers[171 := 0];
    ~lineNumbers := ~lineNumbers[172 := 0];
    ~lineNumbers := ~lineNumbers[173 := 0];
    ~lineNumbers := ~lineNumbers[174 := 0];
    ~lineNumbers := ~lineNumbers[175 := 0];
    ~lineNumbers := ~lineNumbers[176 := 0];
    ~lineNumbers := ~lineNumbers[177 := 0];
    ~lineNumbers := ~lineNumbers[178 := 0];
    ~lineNumbers := ~lineNumbers[179 := 0];
    ~lineNumbers := ~lineNumbers[180 := 0];
    ~lineNumbers := ~lineNumbers[181 := 0];
    ~lineNumbers := ~lineNumbers[182 := 0];
    ~lineNumbers := ~lineNumbers[183 := 0];
    ~lineNumbers := ~lineNumbers[184 := 0];
    ~lineNumbers := ~lineNumbers[185 := 0];
    ~lineNumbers := ~lineNumbers[186 := 0];
    ~lineNumbers := ~lineNumbers[187 := 0];
    ~lineNumbers := ~lineNumbers[188 := 0];
    ~lineNumbers := ~lineNumbers[189 := 0];
    ~lineNumbers := ~lineNumbers[190 := 0];
    ~lineNumbers := ~lineNumbers[191 := 0];
    ~lineNumbers := ~lineNumbers[192 := 0];
    ~lineNumbers := ~lineNumbers[193 := 0];
    ~lineNumbers := ~lineNumbers[194 := 0];
    ~lineNumbers := ~lineNumbers[195 := 0];
    ~lineNumbers := ~lineNumbers[196 := 0];
    ~lineNumbers := ~lineNumbers[197 := 0];
    ~lineNumbers := ~lineNumbers[198 := 0];
    ~lineNumbers := ~lineNumbers[199 := 0];
    ~lineNumbers := ~lineNumbers[200 := 0];
    ~lineNumbers := ~lineNumbers[201 := 0];
    ~lineNumbers := ~lineNumbers[202 := 0];
    ~lineNumbers := ~lineNumbers[203 := 0];
    ~lineNumbers := ~lineNumbers[204 := 0];
    ~lineNumbers := ~lineNumbers[205 := 0];
    ~lineNumbers := ~lineNumbers[206 := 0];
    ~lineNumbers := ~lineNumbers[207 := 0];
    ~lineNumbers := ~lineNumbers[208 := 0];
    ~lineNumbers := ~lineNumbers[209 := 0];
    ~lineNumbers := ~lineNumbers[210 := 0];
    ~lineNumbers := ~lineNumbers[211 := 0];
    ~lineNumbers := ~lineNumbers[212 := 0];
    ~lineNumbers := ~lineNumbers[213 := 0];
    ~lineNumbers := ~lineNumbers[214 := 0];
    ~lineNumbers := ~lineNumbers[215 := 0];
    ~lineNumbers := ~lineNumbers[216 := 0];
    ~lineNumbers := ~lineNumbers[217 := 0];
    ~lineNumbers := ~lineNumbers[218 := 0];
    ~lineNumbers := ~lineNumbers[219 := 0];
    ~lineNumbers := ~lineNumbers[220 := 0];
    ~lineNumbers := ~lineNumbers[221 := 0];
    ~lineNumbers := ~lineNumbers[222 := 0];
    ~lineNumbers := ~lineNumbers[223 := 0];
    ~lineNumbers := ~lineNumbers[224 := 0];
    ~lineNumbers := ~lineNumbers[225 := 0];
    ~lineNumbers := ~lineNumbers[226 := 0];
    ~lineNumbers := ~lineNumbers[227 := 0];
    ~lineNumbers := ~lineNumbers[228 := 0];
    ~lineNumbers := ~lineNumbers[229 := 0];
    ~lineNumbers := ~lineNumbers[230 := 0];
    ~lineNumbers := ~lineNumbers[231 := 0];
    ~lineNumbers := ~lineNumbers[232 := 0];
    ~lineNumbers := ~lineNumbers[233 := 0];
    ~lineNumbers := ~lineNumbers[234 := 0];
    ~lineNumbers := ~lineNumbers[235 := 0];
    ~lineNumbers := ~lineNumbers[236 := 0];
    ~lineNumbers := ~lineNumbers[237 := 0];
    ~lineNumbers := ~lineNumbers[238 := 0];
    ~lineNumbers := ~lineNumbers[239 := 0];
    ~lineNumbers := ~lineNumbers[240 := 0];
    ~lineNumbers := ~lineNumbers[241 := 0];
    ~lineNumbers := ~lineNumbers[242 := 0];
    ~lineNumbers := ~lineNumbers[243 := 0];
    ~lineNumbers := ~lineNumbers[244 := 0];
    ~lineNumbers := ~lineNumbers[245 := 0];
    ~lineNumbers := ~lineNumbers[246 := 0];
    ~lineNumbers := ~lineNumbers[247 := 0];
    ~lineNumbers := ~lineNumbers[248 := 0];
    ~lineNumbers := ~lineNumbers[249 := 0];
    ~lineNumbers := ~lineNumbers[250 := 0];
    ~lineNumbers := ~lineNumbers[251 := 0];
    ~lineNumbers := ~lineNumbers[252 := 0];
    ~lineNumbers := ~lineNumbers[253 := 0];
    ~lineNumbers := ~lineNumbers[254 := 0];
    ~lineNumbers := ~lineNumbers[255 := 0];
    ~nextLineNumber := 0;
    ~ldv_retval_2 := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_spin := 0;
    ~rocket_ops_group0.base, ~rocket_ops_group0.offset := 0, 0;
    ~rocket_ops_group1.base, ~rocket_ops_group1.offset := 0, 0;
    ~rocket_driver.base, ~rocket_driver.offset := 0, 0;
    call ~#driver_version.base, ~#driver_version.offset := #Ultimate.alloc(128);
    call write~int(50, ~#driver_version.base, ~#driver_version.offset + 0 + 0, 1);
    call write~int(46, ~#driver_version.base, ~#driver_version.offset + 0 + 1, 1);
    call write~int(48, ~#driver_version.base, ~#driver_version.offset + 0 + 2, 1);
    call write~int(57, ~#driver_version.base, ~#driver_version.offset + 0 + 3, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 4, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 5, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 6, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 7, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 8, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 9, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 10, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 11, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 12, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 13, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 14, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 15, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 16, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 17, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 18, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 19, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 20, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 21, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 22, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 23, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 24, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 25, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 26, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 27, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 28, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 29, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 30, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 0 + 31, 1);
    call write~int(49, ~#driver_version.base, ~#driver_version.offset + 32 + 0, 1);
    call write~int(50, ~#driver_version.base, ~#driver_version.offset + 32 + 1, 1);
    call write~int(45, ~#driver_version.base, ~#driver_version.offset + 32 + 2, 1);
    call write~int(74, ~#driver_version.base, ~#driver_version.offset + 32 + 3, 1);
    call write~int(117, ~#driver_version.base, ~#driver_version.offset + 32 + 4, 1);
    call write~int(110, ~#driver_version.base, ~#driver_version.offset + 32 + 5, 1);
    call write~int(101, ~#driver_version.base, ~#driver_version.offset + 32 + 6, 1);
    call write~int(45, ~#driver_version.base, ~#driver_version.offset + 32 + 7, 1);
    call write~int(50, ~#driver_version.base, ~#driver_version.offset + 32 + 8, 1);
    call write~int(48, ~#driver_version.base, ~#driver_version.offset + 32 + 9, 1);
    call write~int(48, ~#driver_version.base, ~#driver_version.offset + 32 + 10, 1);
    call write~int(51, ~#driver_version.base, ~#driver_version.offset + 32 + 11, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 12, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 13, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 14, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 15, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 16, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 17, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 18, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 19, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 20, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 21, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 22, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 23, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 24, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 25, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 26, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 27, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 28, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 29, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 30, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 32 + 31, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 0, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 1, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 2, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 3, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 4, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 5, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 6, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 7, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 8, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 9, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 10, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 11, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 12, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 13, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 14, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 15, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 16, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 17, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 18, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 19, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 20, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 21, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 22, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 23, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 24, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 25, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 26, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 27, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 28, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 29, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 30, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 31, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 32, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 33, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 34, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 35, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 36, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 37, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 38, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 39, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 40, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 41, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 42, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 43, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 44, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 45, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 46, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 47, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 48, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 49, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 50, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 51, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 52, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 53, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 54, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 55, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 56, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 57, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 58, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 59, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 60, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 61, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 62, 1);
    call write~int(0, ~#driver_version.base, ~#driver_version.offset + 64 + 63, 1);
    call ~#rp_table.base, ~#rp_table.offset := #Ultimate.alloc(2048);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 408, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 416, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 424, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 432, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 440, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 448, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 464, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 472, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 480, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 488, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 496, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 504, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 512, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 520, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 528, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 536, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 544, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 552, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 560, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 568, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 576, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 584, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 592, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 600, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 608, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 616, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 624, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 632, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 640, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 648, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 656, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 664, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 672, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 680, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 688, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 696, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 704, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 712, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 720, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 728, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 736, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 744, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 752, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 760, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 768, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 776, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 784, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 792, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 800, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 808, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 816, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 824, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 832, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 840, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 848, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 856, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 864, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 872, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 880, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 888, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 896, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 904, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 912, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 920, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 928, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 936, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 944, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 952, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 960, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 968, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 976, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 984, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 992, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1000, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1008, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1016, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1024, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1032, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1040, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1048, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1056, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1064, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1072, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1080, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1088, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1096, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1104, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1112, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1120, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1128, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1136, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1144, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1152, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1160, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1168, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1176, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1184, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1192, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1200, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1208, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1216, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1224, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1232, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1240, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1248, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1256, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1264, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1272, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1280, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1288, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1296, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1304, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1312, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1320, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1328, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1336, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1344, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1352, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1360, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1368, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1376, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1384, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1392, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1400, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1408, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1416, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1424, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1432, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1440, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1448, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1456, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1464, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1472, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1480, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1488, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1496, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1504, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1512, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1520, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1528, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1536, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1544, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1552, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1560, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1568, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1576, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1584, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1592, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1600, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1608, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1616, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1624, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1632, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1640, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1648, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1656, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1664, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1672, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1680, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1688, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1696, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1704, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1712, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1720, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1728, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1736, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1744, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1752, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1760, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1768, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1776, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1784, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1792, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1800, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1808, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1816, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1824, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1832, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1840, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1848, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1856, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1864, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1872, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1880, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1888, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1896, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1904, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1912, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1920, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1928, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1936, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1944, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1952, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1960, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1968, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1976, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1984, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 1992, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 2000, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 2008, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 2016, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 2024, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 2032, 8);
    call write~$Pointer$(0, 0, ~#rp_table.base, ~#rp_table.offset + 2040, 8);
    call ~#rp_num_ports_open.base, ~#rp_num_ports_open.offset := #Ultimate.alloc(4);
    call write~int(0, ~#rp_num_ports_open.base, ~#rp_num_ports_open.offset + 0, 4);
    call ~#rocket_timer.base, ~#rocket_timer.offset := #Ultimate.alloc(124);
    call write~$Pointer$(0, 0, ~#rocket_timer.base, ~#rocket_timer.offset + 0 + 0, 8);
    call write~$Pointer$(0, 1953723489, ~#rocket_timer.base, ~#rocket_timer.offset + 0 + 8, 8);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 16, 8);
    call write~$Pointer$(~#boot_tvec_bases.base, ~#boot_tvec_bases.offset, ~#rocket_timer.base, ~#rocket_timer.offset + 24, 8);
    call write~$Pointer$(#funAddr~rp_do_poll.base, #funAddr~rp_do_poll.offset, ~#rocket_timer.base, ~#rocket_timer.offset + 32, 8);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 40, 8);
    call write~int(-1, ~#rocket_timer.base, ~#rocket_timer.offset + 48, 4);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 52, 4);
    call write~$Pointer$(0, 0, ~#rocket_timer.base, ~#rocket_timer.offset + 56, 8);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 0, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 1, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 2, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 3, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 4, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 5, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 6, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 7, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 8, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 9, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 10, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 11, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 12, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 13, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 14, 1);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 64 + 15, 1);
    call #t~nondet159.base, #t~nondet159.offset := #Ultimate.alloc(214);
    call write~$Pointer$(#t~nondet159.base, #t~nondet159.offset, ~#rocket_timer.base, ~#rocket_timer.offset + 80 + 0, 8);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 80 + 8 + 0, 8);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 80 + 8 + 8, 8);
    call #t~nondet160.base, #t~nondet160.offset := #Ultimate.alloc(214);
    call write~$Pointer$(#t~nondet160.base, #t~nondet160.offset, ~#rocket_timer.base, ~#rocket_timer.offset + 80 + 24, 8);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 80 + 32, 4);
    call write~int(0, ~#rocket_timer.base, ~#rocket_timer.offset + 80 + 36, 8);
    havoc #t~nondet159.base, #t~nondet159.offset;
    havoc #t~nondet160.base, #t~nondet160.offset;
    ~support_low_speed := 0;
    call ~#rocketModel.base, ~#rocketModel.offset := #Ultimate.alloc(832);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 0, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 0, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 1, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 2, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 3, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 4, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 5, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 6, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 7, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 8, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 9, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 10, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 11, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 12, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 13, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 14, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 15, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 16, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 17, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 18, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 19, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 20, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 21, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 22, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 23, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 24, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 25, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 26, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 27, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 28, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 29, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 30, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 31, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 32, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 33, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 34, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 35, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 36, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 37, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 38, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 39, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 40, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 41, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 42, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 43, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 44, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 45, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 46, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 47, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 48, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 49, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 50, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 51, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 52, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 53, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 54, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 55, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 56, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 57, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 58, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 59, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 60, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 61, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 62, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 63, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 64, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 65, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 66, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 67, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 68, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 69, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 70, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 71, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 72, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 73, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 74, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 75, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 76, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 77, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 78, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 8 + 79, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 88, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 96, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 0 + 100, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 0, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 0, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 1, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 2, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 3, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 4, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 5, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 6, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 7, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 8, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 9, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 10, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 11, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 12, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 13, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 14, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 15, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 16, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 17, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 18, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 19, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 20, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 21, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 22, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 23, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 24, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 25, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 26, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 27, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 28, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 29, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 30, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 31, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 32, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 33, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 34, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 35, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 36, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 37, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 38, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 39, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 40, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 41, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 42, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 43, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 44, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 45, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 46, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 47, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 48, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 49, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 50, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 51, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 52, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 53, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 54, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 55, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 56, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 57, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 58, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 59, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 60, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 61, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 62, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 63, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 64, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 65, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 66, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 67, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 68, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 69, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 70, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 71, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 72, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 73, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 74, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 75, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 76, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 77, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 78, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 8 + 79, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 88, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 96, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 104 + 100, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 0, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 0, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 1, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 2, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 3, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 4, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 5, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 6, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 7, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 8, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 9, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 10, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 11, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 12, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 13, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 14, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 15, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 16, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 17, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 18, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 19, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 20, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 21, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 22, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 23, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 24, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 25, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 26, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 27, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 28, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 29, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 30, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 31, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 32, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 33, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 34, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 35, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 36, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 37, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 38, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 39, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 40, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 41, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 42, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 43, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 44, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 45, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 46, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 47, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 48, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 49, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 50, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 51, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 52, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 53, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 54, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 55, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 56, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 57, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 58, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 59, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 60, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 61, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 62, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 63, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 64, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 65, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 66, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 67, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 68, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 69, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 70, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 71, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 72, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 73, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 74, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 75, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 76, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 77, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 78, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 8 + 79, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 88, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 96, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 208 + 100, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 0, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 0, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 1, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 2, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 3, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 4, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 5, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 6, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 7, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 8, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 9, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 10, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 11, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 12, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 13, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 14, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 15, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 16, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 17, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 18, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 19, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 20, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 21, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 22, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 23, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 24, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 25, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 26, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 27, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 28, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 29, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 30, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 31, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 32, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 33, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 34, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 35, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 36, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 37, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 38, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 39, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 40, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 41, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 42, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 43, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 44, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 45, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 46, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 47, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 48, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 49, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 50, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 51, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 52, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 53, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 54, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 55, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 56, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 57, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 58, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 59, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 60, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 61, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 62, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 63, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 64, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 65, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 66, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 67, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 68, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 69, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 70, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 71, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 72, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 73, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 74, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 75, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 76, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 77, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 78, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 8 + 79, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 88, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 96, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 312 + 100, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 0, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 0, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 1, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 2, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 3, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 4, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 5, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 6, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 7, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 8, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 9, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 10, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 11, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 12, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 13, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 14, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 15, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 16, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 17, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 18, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 19, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 20, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 21, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 22, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 23, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 24, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 25, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 26, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 27, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 28, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 29, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 30, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 31, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 32, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 33, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 34, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 35, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 36, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 37, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 38, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 39, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 40, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 41, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 42, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 43, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 44, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 45, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 46, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 47, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 48, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 49, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 50, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 51, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 52, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 53, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 54, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 55, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 56, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 57, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 58, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 59, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 60, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 61, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 62, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 63, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 64, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 65, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 66, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 67, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 68, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 69, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 70, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 71, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 72, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 73, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 74, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 75, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 76, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 77, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 78, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 8 + 79, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 88, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 96, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 416 + 100, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 0, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 0, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 1, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 2, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 3, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 4, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 5, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 6, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 7, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 8, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 9, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 10, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 11, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 12, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 13, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 14, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 15, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 16, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 17, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 18, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 19, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 20, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 21, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 22, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 23, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 24, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 25, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 26, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 27, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 28, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 29, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 30, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 31, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 32, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 33, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 34, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 35, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 36, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 37, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 38, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 39, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 40, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 41, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 42, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 43, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 44, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 45, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 46, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 47, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 48, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 49, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 50, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 51, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 52, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 53, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 54, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 55, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 56, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 57, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 58, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 59, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 60, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 61, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 62, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 63, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 64, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 65, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 66, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 67, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 68, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 69, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 70, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 71, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 72, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 73, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 74, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 75, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 76, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 77, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 78, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 8 + 79, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 88, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 96, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 520 + 100, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 0, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 0, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 1, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 2, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 3, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 4, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 5, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 6, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 7, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 8, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 9, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 10, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 11, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 12, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 13, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 14, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 15, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 16, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 17, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 18, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 19, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 20, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 21, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 22, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 23, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 24, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 25, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 26, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 27, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 28, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 29, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 30, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 31, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 32, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 33, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 34, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 35, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 36, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 37, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 38, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 39, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 40, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 41, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 42, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 43, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 44, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 45, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 46, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 47, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 48, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 49, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 50, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 51, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 52, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 53, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 54, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 55, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 56, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 57, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 58, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 59, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 60, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 61, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 62, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 63, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 64, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 65, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 66, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 67, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 68, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 69, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 70, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 71, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 72, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 73, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 74, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 75, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 76, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 77, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 78, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 8 + 79, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 88, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 96, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 624 + 100, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 0, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 0, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 1, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 2, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 3, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 4, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 5, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 6, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 7, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 8, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 9, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 10, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 11, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 12, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 13, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 14, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 15, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 16, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 17, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 18, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 19, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 20, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 21, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 22, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 23, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 24, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 25, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 26, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 27, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 28, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 29, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 30, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 31, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 32, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 33, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 34, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 35, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 36, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 37, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 38, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 39, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 40, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 41, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 42, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 43, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 44, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 45, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 46, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 47, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 48, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 49, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 50, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 51, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 52, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 53, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 54, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 55, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 56, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 57, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 58, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 59, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 60, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 61, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 62, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 63, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 64, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 65, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 66, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 67, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 68, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 69, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 70, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 71, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 72, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 73, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 74, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 75, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 76, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 77, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 78, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 8 + 79, 1);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 88, 8);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 96, 4);
    call write~int(0, ~#rocketModel.base, ~#rocketModel.offset + 728 + 100, 4);
    call ~#rocket_port_ops.base, ~#rocket_port_ops.offset := #Ultimate.alloc(40);
    call write~$Pointer$(0, 0, ~#rocket_port_ops.base, ~#rocket_port_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#rocket_port_ops.base, ~#rocket_port_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#rocket_port_ops.base, ~#rocket_port_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#rocket_port_ops.base, ~#rocket_port_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#rocket_port_ops.base, ~#rocket_port_ops.offset + 32, 8);
    call ~#aiop_intr_bits.base, ~#aiop_intr_bits.offset := #Ultimate.alloc(16);
    call write~int(1, ~#aiop_intr_bits.base, ~#aiop_intr_bits.offset + 0, 4);
    call write~int(2, ~#aiop_intr_bits.base, ~#aiop_intr_bits.offset + 4, 4);
    call write~int(4, ~#aiop_intr_bits.base, ~#aiop_intr_bits.offset + 8, 4);
    call write~int(8, ~#aiop_intr_bits.base, ~#aiop_intr_bits.offset + 12, 4);
    call ~#upci_aiop_intr_bits.base, ~#upci_aiop_intr_bits.offset := #Ultimate.alloc(16);
    call write~int(4, ~#upci_aiop_intr_bits.base, ~#upci_aiop_intr_bits.offset + 0, 4);
    call write~int(32, ~#upci_aiop_intr_bits.base, ~#upci_aiop_intr_bits.offset + 4, 4);
    call write~int(256, ~#upci_aiop_intr_bits.base, ~#upci_aiop_intr_bits.offset + 8, 4);
    call write~int(2048, ~#upci_aiop_intr_bits.base, ~#upci_aiop_intr_bits.offset + 12, 4);
    ~RData := ~RData[0 := 0];
    ~RData := ~RData[1 := 9];
    ~RData := ~RData[2 := 246];
    ~RData := ~RData[3 := 130];
    ~RData := ~RData[4 := 2];
    ~RData := ~RData[5 := 9];
    ~RData := ~RData[6 := 134];
    ~RData := ~RData[7 := 251];
    ~RData := ~RData[8 := 4];
    ~RData := ~RData[9 := 9];
    ~RData := ~RData[10 := 0];
    ~RData := ~RData[11 := 10];
    ~RData := ~RData[12 := 6];
    ~RData := ~RData[13 := 9];
    ~RData := ~RData[14 := 1];
    ~RData := ~RData[15 := 10];
    ~RData := ~RData[16 := 8];
    ~RData := ~RData[17 := 9];
    ~RData := ~RData[18 := 138];
    ~RData := ~RData[19 := 19];
    ~RData := ~RData[20 := 10];
    ~RData := ~RData[21 := 9];
    ~RData := ~RData[22 := 197];
    ~RData := ~RData[23 := 17];
    ~RData := ~RData[24 := 12];
    ~RData := ~RData[25 := 9];
    ~RData := ~RData[26 := 134];
    ~RData := ~RData[27 := 133];
    ~RData := ~RData[28 := 14];
    ~RData := ~RData[29 := 9];
    ~RData := ~RData[30 := 32];
    ~RData := ~RData[31 := 10];
    ~RData := ~RData[32 := 16];
    ~RData := ~RData[33 := 9];
    ~RData := ~RData[34 := 33];
    ~RData := ~RData[35 := 10];
    ~RData := ~RData[36 := 18];
    ~RData := ~RData[37 := 9];
    ~RData := ~RData[38 := 65];
    ~RData := ~RData[39 := 255];
    ~RData := ~RData[40 := 20];
    ~RData := ~RData[41 := 9];
    ~RData := ~RData[42 := 130];
    ~RData := ~RData[43 := 0];
    ~RData := ~RData[44 := 22];
    ~RData := ~RData[45 := 9];
    ~RData := ~RData[46 := 130];
    ~RData := ~RData[47 := 123];
    ~RData := ~RData[48 := 24];
    ~RData := ~RData[49 := 9];
    ~RData := ~RData[50 := 138];
    ~RData := ~RData[51 := 125];
    ~RData := ~RData[52 := 26];
    ~RData := ~RData[53 := 9];
    ~RData := ~RData[54 := 136];
    ~RData := ~RData[55 := 129];
    ~RData := ~RData[56 := 28];
    ~RData := ~RData[57 := 9];
    ~RData := ~RData[58 := 134];
    ~RData := ~RData[59 := 122];
    ~RData := ~RData[60 := 30];
    ~RData := ~RData[61 := 9];
    ~RData := ~RData[62 := 132];
    ~RData := ~RData[63 := 129];
    ~RData := ~RData[64 := 32];
    ~RData := ~RData[65 := 9];
    ~RData := ~RData[66 := 130];
    ~RData := ~RData[67 := 124];
    ~RData := ~RData[68 := 34];
    ~RData := ~RData[69 := 9];
    ~RData := ~RData[70 := 10];
    ~RData := ~RData[71 := 10];
    ~RRegData := ~RRegData[0 := 0];
    ~RRegData := ~RRegData[1 := 9];
    ~RRegData := ~RRegData[2 := 246];
    ~RRegData := ~RRegData[3 := 130];
    ~RRegData := ~RRegData[4 := 8];
    ~RRegData := ~RRegData[5 := 9];
    ~RRegData := ~RRegData[6 := 138];
    ~RRegData := ~RRegData[7 := 19];
    ~RRegData := ~RRegData[8 := 10];
    ~RRegData := ~RRegData[9 := 9];
    ~RRegData := ~RRegData[10 := 197];
    ~RRegData := ~RRegData[11 := 17];
    ~RRegData := ~RRegData[12 := 12];
    ~RRegData := ~RRegData[13 := 9];
    ~RRegData := ~RRegData[14 := 134];
    ~RRegData := ~RRegData[15 := 133];
    ~RRegData := ~RRegData[16 := 18];
    ~RRegData := ~RRegData[17 := 9];
    ~RRegData := ~RRegData[18 := 65];
    ~RRegData := ~RRegData[19 := 255];
    ~RRegData := ~RRegData[20 := 20];
    ~RRegData := ~RRegData[21 := 9];
    ~RRegData := ~RRegData[22 := 130];
    ~RRegData := ~RRegData[23 := 0];
    ~RRegData := ~RRegData[24 := 22];
    ~RRegData := ~RRegData[25 := 9];
    ~RRegData := ~RRegData[26 := 130];
    ~RRegData := ~RRegData[27 := 123];
    ~RRegData := ~RRegData[28 := 24];
    ~RRegData := ~RRegData[29 := 9];
    ~RRegData := ~RRegData[30 := 138];
    ~RRegData := ~RRegData[31 := 125];
    ~RRegData := ~RRegData[32 := 26];
    ~RRegData := ~RRegData[33 := 9];
    ~RRegData := ~RRegData[34 := 136];
    ~RRegData := ~RRegData[35 := 129];
    ~RRegData := ~RRegData[36 := 28];
    ~RRegData := ~RRegData[37 := 9];
    ~RRegData := ~RRegData[38 := 134];
    ~RRegData := ~RRegData[39 := 122];
    ~RRegData := ~RRegData[40 := 30];
    ~RRegData := ~RRegData[41 := 9];
    ~RRegData := ~RRegData[42 := 132];
    ~RRegData := ~RRegData[43 := 129];
    ~RRegData := ~RRegData[44 := 32];
    ~RRegData := ~RRegData[45 := 9];
    ~RRegData := ~RRegData[46 := 130];
    ~RRegData := ~RRegData[47 := 124];
    ~RRegData := ~RRegData[48 := 34];
    ~RRegData := ~RRegData[49 := 9];
    ~RRegData := ~RRegData[50 := 10];
    ~RRegData := ~RRegData[51 := 10];
    call ~#sController.base, ~#sController.offset := #Ultimate.alloc(1040);
    call write~int(-1, ~#sController.base, ~#sController.offset + 0 + 0, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 0 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 16, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 20, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 24, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 28, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 32, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 36, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 40, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 44, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 45, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 46, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 50, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 54, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 58 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 58 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 58 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 58 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 74 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 74 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 74 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 74 + 12, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 0 + 90 + 0, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 0 + 90 + 4, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 0 + 90 + 8, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 0 + 90 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 106 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 106 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 106 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 0 + 106 + 12, 4);
    call write~$Pointer$(0, 0, ~#sController.base, ~#sController.offset + 0 + 122, 8);
    call write~int(-1, ~#sController.base, ~#sController.offset + 130 + 0, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 130 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 16, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 20, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 24, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 28, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 32, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 36, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 40, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 44, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 45, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 46, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 50, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 54, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 58 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 58 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 58 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 58 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 74 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 74 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 74 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 74 + 12, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 130 + 90 + 0, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 130 + 90 + 4, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 130 + 90 + 8, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 130 + 90 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 106 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 106 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 106 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 130 + 106 + 12, 4);
    call write~$Pointer$(0, 0, ~#sController.base, ~#sController.offset + 130 + 122, 8);
    call write~int(-1, ~#sController.base, ~#sController.offset + 260 + 0, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 260 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 16, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 20, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 24, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 28, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 32, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 36, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 40, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 44, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 45, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 46, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 50, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 54, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 58 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 58 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 58 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 58 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 74 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 74 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 74 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 74 + 12, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 260 + 90 + 0, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 260 + 90 + 4, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 260 + 90 + 8, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 260 + 90 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 106 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 106 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 106 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 260 + 106 + 12, 4);
    call write~$Pointer$(0, 0, ~#sController.base, ~#sController.offset + 260 + 122, 8);
    call write~int(-1, ~#sController.base, ~#sController.offset + 390 + 0, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 390 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 16, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 20, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 24, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 28, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 32, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 36, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 40, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 44, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 45, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 46, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 50, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 54, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 58 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 58 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 58 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 58 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 74 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 74 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 74 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 74 + 12, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 390 + 90 + 0, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 390 + 90 + 4, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 390 + 90 + 8, 4);
    call write~int(-1, ~#sController.base, ~#sController.offset + 390 + 90 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 106 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 106 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 106 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 390 + 106 + 12, 4);
    call write~$Pointer$(0, 0, ~#sController.base, ~#sController.offset + 390 + 122, 8);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 16, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 20, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 24, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 28, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 32, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 36, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 40, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 44, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 45, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 46, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 50, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 54, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 58 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 58 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 58 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 58 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 74 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 74 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 74 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 74 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 90 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 90 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 90 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 90 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 106 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 106 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 106 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 520 + 106 + 12, 4);
    call write~$Pointer$(0, 0, ~#sController.base, ~#sController.offset + 520 + 122, 8);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 16, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 20, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 24, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 28, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 32, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 36, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 40, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 44, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 45, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 46, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 50, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 54, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 58 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 58 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 58 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 58 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 74 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 74 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 74 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 74 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 90 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 90 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 90 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 90 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 106 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 106 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 106 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 650 + 106 + 12, 4);
    call write~$Pointer$(0, 0, ~#sController.base, ~#sController.offset + 650 + 122, 8);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 16, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 20, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 24, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 28, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 32, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 36, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 40, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 44, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 45, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 46, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 50, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 54, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 58 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 58 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 58 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 58 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 74 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 74 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 74 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 74 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 90 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 90 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 90 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 90 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 106 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 106 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 106 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 780 + 106 + 12, 4);
    call write~$Pointer$(0, 0, ~#sController.base, ~#sController.offset + 780 + 122, 8);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 16, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 20, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 24, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 28, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 32, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 36, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 40, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 44, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 45, 1);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 46, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 50, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 54, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 58 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 58 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 58 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 58 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 74 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 74 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 74 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 74 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 90 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 90 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 90 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 90 + 12, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 106 + 0, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 106 + 4, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 106 + 8, 4);
    call write~int(0, ~#sController.base, ~#sController.offset + 910 + 106 + 12, 4);
    call write~$Pointer$(0, 0, ~#sController.base, ~#sController.offset + 910 + 122, 8);
    ~sBitMapClrTbl := ~sBitMapClrTbl[0 := 254];
    ~sBitMapClrTbl := ~sBitMapClrTbl[1 := 253];
    ~sBitMapClrTbl := ~sBitMapClrTbl[2 := 251];
    ~sBitMapClrTbl := ~sBitMapClrTbl[3 := 247];
    ~sBitMapClrTbl := ~sBitMapClrTbl[4 := 239];
    ~sBitMapClrTbl := ~sBitMapClrTbl[5 := 223];
    ~sBitMapClrTbl := ~sBitMapClrTbl[6 := 191];
    ~sBitMapClrTbl := ~sBitMapClrTbl[7 := 127];
    ~sBitMapSetTbl := ~sBitMapSetTbl[0 := 1];
    ~sBitMapSetTbl := ~sBitMapSetTbl[1 := 2];
    ~sBitMapSetTbl := ~sBitMapSetTbl[2 := 4];
    ~sBitMapSetTbl := ~sBitMapSetTbl[3 := 8];
    ~sBitMapSetTbl := ~sBitMapSetTbl[4 := 16];
    ~sBitMapSetTbl := ~sBitMapSetTbl[5 := 32];
    ~sBitMapSetTbl := ~sBitMapSetTbl[6 := 64];
    ~sBitMapSetTbl := ~sBitMapSetTbl[7 := 128];
    call ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset := #Ultimate.alloc(736);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 0 + 0, 4);
    call write~int(4, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 0 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 0 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 0 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 0 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 0 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 0 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 32 + 0, 4);
    call write~int(5, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 32 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 32 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 32 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 32 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 32 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 32 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 64 + 0, 4);
    call write~int(2053, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 64 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 64 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 64 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 64 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 64 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 64 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 96 + 0, 4);
    call write~int(2, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 96 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 96 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 96 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 96 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 96 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 96 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 128 + 0, 4);
    call write~int(2050, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 128 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 128 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 128 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 128 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 128 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 128 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 160 + 0, 4);
    call write~int(6, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 160 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 160 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 160 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 160 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 160 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 160 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 192 + 0, 4);
    call write~int(7, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 192 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 192 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 192 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 192 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 192 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 192 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 224 + 0, 4);
    call write~int(8, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 224 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 224 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 224 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 224 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 224 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 224 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 256 + 0, 4);
    call write~int(9, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 256 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 256 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 256 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 256 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 256 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 256 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 288 + 0, 4);
    call write~int(3, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 288 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 288 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 288 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 288 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 288 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 288 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 320 + 0, 4);
    call write~int(2051, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 320 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 320 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 320 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 320 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 320 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 320 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 352 + 0, 4);
    call write~int(2307, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 352 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 352 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 352 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 352 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 352 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 352 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 384 + 0, 4);
    call write~int(1, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 384 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 384 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 384 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 384 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 384 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 384 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 416 + 0, 4);
    call write~int(2049, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 416 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 416 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 416 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 416 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 416 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 416 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 448 + 0, 4);
    call write~int(10, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 448 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 448 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 448 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 448 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 448 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 448 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 480 + 0, 4);
    call write~int(11, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 480 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 480 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 480 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 480 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 480 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 480 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 512 + 0, 4);
    call write~int(14, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 512 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 512 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 512 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 512 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 512 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 512 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 544 + 0, 4);
    call write~int(15, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 544 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 544 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 544 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 544 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 544 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 544 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 576 + 0, 4);
    call write~int(12, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 576 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 576 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 576 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 576 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 576 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 576 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 608 + 0, 4);
    call write~int(13, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 608 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 608 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 608 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 608 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 608 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 608 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 640 + 0, 4);
    call write~int(2060, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 640 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 640 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 640 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 640 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 640 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 640 + 24, 8);
    call write~int(4606, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 672 + 0, 4);
    call write~int(2061, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 672 + 4, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 672 + 8, 4);
    call write~int(4294967295, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 672 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 672 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 672 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 672 + 24, 8);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 704 + 0, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 704 + 4, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 704 + 8, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 704 + 12, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 704 + 16, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 704 + 20, 4);
    call write~int(0, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset + 704 + 24, 8);
    call ~#rocket_ops.base, ~#rocket_ops.offset := #Ultimate.alloc(272);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~rp_open.base, #funAddr~rp_open.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~rp_close.base, #funAddr~rp_close.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~rp_write.base, #funAddr~rp_write.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~rp_put_char.base, #funAddr~rp_put_char.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 72, 8);
    call write~$Pointer$(#funAddr~rp_write_room.base, #funAddr~rp_write_room.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 80, 8);
    call write~$Pointer$(#funAddr~rp_chars_in_buffer.base, #funAddr~rp_chars_in_buffer.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 88, 8);
    call write~$Pointer$(#funAddr~rp_ioctl.base, #funAddr~rp_ioctl.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 104, 8);
    call write~$Pointer$(#funAddr~rp_set_termios.base, #funAddr~rp_set_termios.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 112, 8);
    call write~$Pointer$(#funAddr~rp_throttle.base, #funAddr~rp_throttle.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 120, 8);
    call write~$Pointer$(#funAddr~rp_unthrottle.base, #funAddr~rp_unthrottle.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 128, 8);
    call write~$Pointer$(#funAddr~rp_stop.base, #funAddr~rp_stop.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 136, 8);
    call write~$Pointer$(#funAddr~rp_start.base, #funAddr~rp_start.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 144, 8);
    call write~$Pointer$(#funAddr~rp_hangup.base, #funAddr~rp_hangup.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 152, 8);
    call write~$Pointer$(#funAddr~rp_break.base, #funAddr~rp_break.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 160, 8);
    call write~$Pointer$(#funAddr~rp_flush_buffer.base, #funAddr~rp_flush_buffer.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 176, 8);
    call write~$Pointer$(#funAddr~rp_wait_until_sent.base, #funAddr~rp_wait_until_sent.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 184, 8);
    call write~$Pointer$(#funAddr~rp_send_xchar.base, #funAddr~rp_send_xchar.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 192, 8);
    call write~$Pointer$(#funAddr~rp_tiocmget.base, #funAddr~rp_tiocmget.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 200, 8);
    call write~$Pointer$(#funAddr~rp_tiocmset.base, #funAddr~rp_tiocmset.offset, ~#rocket_ops.base, ~#rocket_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#rocket_ops.base, ~#rocket_ops.offset + 264, 8);
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_3, ~ldv_state_variable_2, ~rocket_port_ops_group1.base, ~rocket_port_ops_group1.offset, ~ref_cnt, ~ldv_state_variable_1, ~ldv_state_variable_0, ~#xmit_flags.base, ~#xmit_flags.offset, ~board1, ~board2, ~board3, ~board4, ~controller, ~modem1, ~modem2, ~modem3, ~modem4, ~#pc104_1.base, ~#pc104_1.offset, ~#pc104_2.base, ~#pc104_2.offset, ~#pc104_3.base, ~#pc104_3.offset, ~#pc104_4.base, ~#pc104_4.offset, ~pc104.base, ~pc104.offset, ~rp_baud_base, ~rcktpt_io_addr, ~rcktpt_type, ~is_PCI, ~max_board, ~sClockPrescale, ~lineNumbers, ~nextLineNumber, ~ldv_retval_2, ~ldv_retval_0, ~ldv_retval_1, ~ldv_spin, ~rocket_ops_group0.base, ~rocket_ops_group0.offset, ~rocket_ops_group1.base, ~rocket_ops_group1.offset, ~rocket_driver.base, ~rocket_driver.offset, ~#driver_version.base, ~#driver_version.offset, ~#rp_table.base, ~#rp_table.offset, ~#rp_num_ports_open.base, ~#rp_num_ports_open.offset, ~#rocket_timer.base, ~#rocket_timer.offset, ~support_low_speed, ~#rocketModel.base, ~#rocketModel.offset, ~#rocket_port_ops.base, ~#rocket_port_ops.offset, ~#aiop_intr_bits.base, ~#aiop_intr_bits.offset, ~#upci_aiop_intr_bits.base, ~#upci_aiop_intr_bits.offset, ~RData, ~RRegData, ~#sController.base, ~#sController.offset, ~sBitMapClrTbl, ~sBitMapSetTbl, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset, ~#rocket_ops.base, ~#rocket_ops.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_error() returns (){
  loc10:
    assume !false;
    goto loc11;
  loc11:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation alloc_tty_driver(#in~lines : int) returns (#res.base : int, #res.offset : int){
    var #t~ret84.base : int, #t~ret84.offset : int;
    var #t~ret85 : ~bool;
    var ~lines : int;
    var ~ret~139.base : int, ~ret~139.offset : int;
    var ~tmp~139.base : int, ~tmp~139.offset : int;
    var ~tmp___0~139 : ~bool;

  loc12:
    ~lines := #in~lines;
    havoc ~ret~139.base, ~ret~139.offset;
    havoc ~tmp~139.base, ~tmp~139.offset;
    havoc ~tmp___0~139;
    call #t~ret84.base, #t~ret84.offset := __tty_alloc_driver(~lines, ~#__this_module.base, ~#__this_module.offset, 0);
    ~tmp~139.base, ~tmp~139.offset := #t~ret84.base, #t~ret84.offset;
    havoc #t~ret84.base, #t~ret84.offset;
    ~ret~139.base, ~ret~139.offset := ~tmp~139.base, ~tmp~139.offset;
    call #t~ret85 := IS_ERR(~ret~139.base, ~ret~139.offset);
    ~tmp___0~139 := #t~ret85;
    havoc #t~ret85;
    assume ~tmp___0~139 % 256 != 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure alloc_tty_driver(#in~lines : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~nondet57 : int;
    var #t~malloc58.base : int, #t~malloc58.offset : int;
    var ~size : int;
    var ~p~103.base : int, ~p~103.offset : int;
    var ~tmp~103.base : int, ~tmp~103.offset : int;
    var ~tmp___0~103 : int;

  loc13:
    ~size := #in~size;
    havoc ~p~103.base, ~p~103.offset;
    havoc ~tmp~103.base, ~tmp~103.offset;
    havoc ~tmp___0~103;
    assume -2147483648 <= #t~nondet57 && #t~nondet57 <= 2147483647;
    ~tmp___0~103 := #t~nondet57;
    havoc #t~nondet57;
    assume ~tmp___0~103 != 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ldv_initialize_tty_operations_2() returns (){
    var #t~ret1323.base : int, #t~ret1323.offset : int;
    var #t~ret1324.base : int, #t~ret1324.offset : int;
    var ~tmp~842.base : int, ~tmp~842.offset : int;
    var ~tmp___0~842.base : int, ~tmp___0~842.offset : int;

  loc14:
    havoc ~tmp~842.base, ~tmp~842.offset;
    havoc ~tmp___0~842.base, ~tmp___0~842.offset;
    call #t~ret1323.base, #t~ret1323.offset := ldv_zalloc(512);
    ~tmp~842.base, ~tmp~842.offset := #t~ret1323.base, #t~ret1323.offset;
    havoc #t~ret1323.base, #t~ret1323.offset;
    ~rocket_ops_group0.base, ~rocket_ops_group0.offset := ~tmp~842.base, ~tmp~842.offset;
    call #t~ret1324.base, #t~ret1324.offset := ldv_zalloc(1752);
    ~tmp___0~842.base, ~tmp___0~842.offset := #t~ret1324.base, #t~ret1324.offset;
    havoc #t~ret1324.base, #t~ret1324.offset;
    ~rocket_ops_group1.base, ~rocket_ops_group1.offset := ~tmp___0~842.base, ~tmp___0~842.offset;
    assume true;
    return;
}

procedure ldv_initialize_tty_operations_2() returns ();
modifies ~rocket_ops_group0.base, ~rocket_ops_group0.offset, ~rocket_ops_group1.base, ~rocket_ops_group1.offset, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ULTIMATE.start() returns (){
    var #t~ret1401 : int;

  loc15:
    call ULTIMATE.init();
    call #t~ret1401 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_3, ~ldv_state_variable_2, ~rocket_port_ops_group1.base, ~rocket_port_ops_group1.offset, ~ref_cnt, ~ldv_state_variable_1, ~ldv_state_variable_0, ~#xmit_flags.base, ~#xmit_flags.offset, ~board1, ~board2, ~board3, ~board4, ~controller, ~modem1, ~modem2, ~modem3, ~modem4, ~#pc104_1.base, ~#pc104_1.offset, ~#pc104_2.base, ~#pc104_2.offset, ~#pc104_3.base, ~#pc104_3.offset, ~#pc104_4.base, ~#pc104_4.offset, ~pc104.base, ~pc104.offset, ~rp_baud_base, ~rcktpt_io_addr, ~rcktpt_type, ~is_PCI, ~max_board, ~sClockPrescale, ~lineNumbers, ~nextLineNumber, ~ldv_retval_2, ~ldv_retval_0, ~ldv_retval_1, ~ldv_spin, ~rocket_ops_group0.base, ~rocket_ops_group0.offset, ~rocket_ops_group1.base, ~rocket_ops_group1.offset, ~rocket_driver.base, ~rocket_driver.offset, ~#driver_version.base, ~#driver_version.offset, ~#rp_table.base, ~#rp_table.offset, ~#rp_num_ports_open.base, ~#rp_num_ports_open.offset, ~#rocket_timer.base, ~#rocket_timer.offset, ~support_low_speed, ~#rocketModel.base, ~#rocketModel.offset, ~#rocket_port_ops.base, ~#rocket_port_ops.offset, ~#aiop_intr_bits.base, ~#aiop_intr_bits.offset, ~#upci_aiop_intr_bits.base, ~#upci_aiop_intr_bits.offset, ~RData, ~RRegData, ~#sController.base, ~#sController.offset, ~sBitMapClrTbl, ~sBitMapSetTbl, ~#rocket_pci_ids.base, ~#rocket_pci_ids.offset, ~#rocket_ops.base, ~#rocket_ops.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_3, ~ldv_state_variable_2, ~ldv_retval_0, ~ldv_retval_1, ~ldv_retval_2;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~rocket_ops_group0.base, ~rocket_ops_group0.offset, ~rocket_ops_group1.base, ~rocket_ops_group1.offset, ~rocket_port_ops_group1.base, ~rocket_port_ops_group1.offset, ~ldv_spin, ~nextLineNumber, ~lineNumbers, ~rcktpt_io_addr, ~sClockPrescale, ~rp_baud_base, ~is_PCI, ~rcktpt_type, ~rocket_driver.base, ~rocket_driver.offset, ~controller, ~max_board, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_3, ~ldv_state_variable_2, ~ldv_retval_0, ~ldv_retval_1, ~ldv_retval_2;

implementation ldv_check_alloc_flags(#in~flags : int) returns (){
    var ~flags : int;

  loc16:
    ~flags := #in~flags;
    assume !(~ldv_spin == 0 || ~bitwiseAnd(~flags, 16) % 4294967296 == 0);
    call ldv_error();
    return;
}

procedure ldv_check_alloc_flags(#in~flags : int) returns ();
modifies ;

implementation ldv__builtin_expect(#in~exp : int, #in~c : int) returns (#res : int){
    var ~exp : int;
    var ~c : int;

  loc17:
    ~exp := #in~exp;
    ~c := #in~c;
    #res := ~exp;
    assume true;
    return;
}

procedure ldv__builtin_expect(#in~exp : int, #in~c : int) returns (#res : int);
modifies ;

implementation IS_ERR(#in~ptr.base : int, #in~ptr.offset : int) returns (#res : ~bool){
    var #t~ret9 : int;
    var ~ptr.base : int, ~ptr.offset : int;
    var ~tmp~26 : int;

  loc18:
    ~ptr.base, ~ptr.offset := #in~ptr.base, #in~ptr.offset;
    havoc ~tmp~26;
    call #t~ret9 := ldv__builtin_expect((if (~ptr.base + ~ptr.offset) % 18446744073709551616 > 18446744073709547520 then 1 else 0), 0);
    assume -9223372036854775808 <= #t~ret9 && #t~ret9 <= 9223372036854775807;
    ~tmp~26 := #t~ret9;
    havoc #t~ret9;
    #res := (if (if ~tmp~26 != 0 then 1 else 0) == 0 then 0 else 1);
    assume true;
    return;
}

procedure IS_ERR(#in~ptr.base : int, #in~ptr.offset : int) returns (#res : ~bool);
modifies ;

implementation rp_open(#in~tty.base : int, #in~tty.offset : int, #in~filp.base : int, #in~filp.offset : int) returns (#res : int){
    var #t~mem409 : int;
    var #t~mem410.base : int, #t~mem410.offset : int;
    var #t~ret411 : int;
    var #t~mem412 : int;
    var #t~ret413 : int;
    var #t~mem414 : int;
    var #t~ite415 : int;
    var #t~mem416.base : int, #t~mem416.offset : int;
    var #t~mem419 : int;
    var #t~mem420 : int;
    var #t~ret422 : int;
    var #t~mem423 : int;
    var #t~mem425 : int;
    var #t~mem427 : int;
    var #t~mem428 : int;
    var #t~ret429 : int;
    var #t~mem432 : int;
    var #t~mem433 : int;
    var #t~mem435 : int;
    var #t~mem437 : int;
    var #t~mem438 : int;
    var #t~ret439 : int;
    var #t~mem440 : int;
    var #t~mem441 : int;
    var #t~mem442 : int;
    var #t~mem443 : int;
    var #t~mem444 : int;
    var #t~mem445 : int;
    var #t~mem447 : int;
    var #t~mem449 : int;
    var #t~mem451 : int;
    var #t~mem452 : int;
    var #t~mem454 : int;
    var #t~mem455 : int;
    var #t~mem457 : int;
    var #t~mem459 : int;
    var #t~mem461 : int;
    var #t~mem463 : int;
    var #t~mem464 : int;
    var #t~mem466 : int;
    var #t~mem467 : int;
    var #t~mem468 : int;
    var #t~mem470 : int;
    var #t~ret471 : int;
    var #t~ret472 : int;
    var ~tty.base : int, ~tty.offset : int;
    var ~filp.base : int, ~filp.offset : int;
    var ~info~376.base : int, ~info~376.offset : int;
    var ~port~376.base : int, ~port~376.offset : int;
    var ~retval~376 : int;
    var ~cp~376.base : int, ~cp~376.offset : int;
    var ~page~376 : int;
    var ~tmp~376 : int;
    var ~tmp___0~376 : int;
    var ~tmp___1~376 : int;

  loc19:
    ~tty.base, ~tty.offset := #in~tty.base, #in~tty.offset;
    ~filp.base, ~filp.offset := #in~filp.base, #in~filp.offset;
    havoc ~info~376.base, ~info~376.offset;
    havoc ~port~376.base, ~port~376.offset;
    havoc ~retval~376;
    havoc ~cp~376.base, ~cp~376.offset;
    havoc ~page~376;
    havoc ~tmp~376;
    havoc ~tmp___0~376;
    havoc ~tmp___1~376;
    call #t~mem409 := read~int(~tty.base, ~tty.offset + 32, 4);
    call #t~mem410.base, #t~mem410.offset := read~$Pointer$(~#rp_table.base, ~#rp_table.offset + #t~mem409 * 8, 8);
    ~info~376.base, ~info~376.offset := #t~mem410.base, #t~mem410.offset;
    havoc #t~mem409;
    havoc #t~mem410.base, #t~mem410.offset;
    assume !((~info~376.base + ~info~376.offset) % 18446744073709551616 == 0);
    ~port~376.base, ~port~376.offset := ~info~376.base, ~info~376.offset + 4;
    call #t~ret411 := ldv___get_free_pages_20(208, 0);
    return;
}

procedure rp_open(#in~tty.base : int, #in~tty.offset : int, #in~filp.base : int, #in~filp.offset : int) returns (#res : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~ldv_spin, #valid, #length;

procedure tty_port_tty_hangup(#in~110.base : int, #in~110.offset : int, #in~111 : int) returns ();
modifies ;

procedure ldv_setup_2() returns (#res : int);
modifies ;

procedure msleep(#in~145 : int) returns ();
modifies ;

procedure complete_all(#in~37.base : int, #in~37.offset : int) returns ();
modifies ;

procedure ldv_shutdown_1() returns (#res : int);
modifies ;

procedure tty_kref_put(#in~88.base : int, #in~88.offset : int) returns ();
modifies ;

procedure ldv_disconnect_2() returns (#res : int);
modifies ;

procedure tty_flip_buffer_push(#in~125.base : int, #in~125.offset : int) returns ();
modifies ;

procedure mutex_lock_interruptible_nested(#in~31.base : int, #in~31.offset : int, #in~32 : int) returns (#res : int);
modifies ;

procedure mutex_unlock(#in~33.base : int, #in~33.offset : int) returns ();
modifies ;

procedure ldv_release_2() returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_uint() returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_char() returns (#res : int);
modifies ;

procedure tty_port_close_start(#in~115.base : int, #in~115.offset : int, #in~116.base : int, #in~116.offset : int, #in~117.base : int, #in~117.offset : int) returns (#res : int);
modifies ;

procedure msleep_interruptible(#in~146 : int) returns (#res : int);
modifies ;

procedure ldv_destruct_1() returns (#res : int);
modifies ;

procedure tty_unregister_device(#in~91.base : int, #in~91.offset : int, #in~92 : int) returns ();
modifies ;

procedure pci_match_id(#in~153.base : int, #in~153.offset : int, #in~154.base : int, #in~154.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure tty_termios_baud_rate(#in~93.base : int, #in~93.offset : int) returns (#res : ~speed_t);
modifies ;

procedure _raw_spin_unlock_irq(#in~16.base : int, #in~16.offset : int) returns ();
modifies ;

procedure tty_prepare_flip_string(#in~122.base : int, #in~122.offset : int, #in~123.base : int, #in~123.offset : int, #in~124 : int) returns (#res : int);
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure pci_get_device(#in~149 : int, #in~150 : int, #in~151.base : int, #in~151.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure might_fault() returns ();
modifies ;

procedure printk(#in~2.base : int, #in~2.offset : int) returns (#res : int);
modifies ;

procedure capable(#in~59 : int) returns (#res : ~bool);
modifies ;

procedure calloc(#in~nmemb : int, #in~size : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __mutex_init(#in~26.base : int, #in~26.offset : int, #in~27.base : int, #in~27.offset : int, #in~28.base : int, #in~28.offset : int) returns ();
modifies ;

procedure put_tty_driver(#in~81.base : int, #in~81.offset : int) returns ();
modifies ;

procedure mutex_lock_nested(#in~29.base : int, #in~29.offset : int, #in~30 : int) returns ();
modifies ;

procedure tty_port_tty_get(#in~106.base : int, #in~106.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure tty_port_init(#in~100.base : int, #in~100.offset : int) returns ();
modifies ;

procedure free_pages(#in~54 : int, #in~55 : int) returns ();
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure _copy_from_user(#in~64.base : int, #in~64.offset : int, #in~65.base : int, #in~65.offset : int, #in~66 : int) returns (#res : int);
modifies ;

procedure __raw_spin_lock_init(#in~12.base : int, #in~12.offset : int, #in~13.base : int, #in~13.offset : int, #in~14.base : int, #in~14.offset : int) returns ();
modifies ;

procedure jiffies_to_msecs(#in~46 : int) returns (#res : int);
modifies ;

procedure strcpy(#in~7.base : int, #in~7.offset : int, #in~8.base : int, #in~8.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure _dev_info(#in~147.base : int, #in~147.offset : int, #in~148.base : int, #in~148.offset : int) returns (#res : int);
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure ldv_initialize() returns ();
modifies ;

procedure tty_ldisc_flush(#in~99.base : int, #in~99.offset : int) returns ();
modifies ;

procedure del_timer_sync(#in~49.base : int, #in~49.offset : int) returns (#res : int);
modifies ;

procedure wait_for_completion_interruptible(#in~36.base : int, #in~36.offset : int) returns (#res : int);
modifies ;

procedure __get_free_pages(#in~52 : int, #in~53 : int) returns (#res : int);
modifies ;

procedure tty_port_destroy(#in~105.base : int, #in~105.offset : int) returns ();
modifies ;

procedure __release_region(#in~43.base : int, #in~43.offset : int, #in~44 : int, #in~45 : int) returns ();
modifies ;

procedure kfree(#in~56.base : int, #in~56.offset : int) returns ();
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];

procedure __VERIFIER_error() returns ();
modifies ;

procedure tty_port_hangup(#in~109.base : int, #in~109.offset : int) returns ();
modifies ;

procedure __VERIFIER_nondet_uchar() returns (#res : int);
modifies ;

procedure tty_port_block_til_ready(#in~112.base : int, #in~112.offset : int, #in~113.base : int, #in~113.offset : int, #in~114.base : int, #in~114.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_assume(#in~expression : int) returns ();
modifies ;

procedure tty_wakeup(#in~98.base : int, #in~98.offset : int) returns ();
modifies ;

procedure pci_enable_device(#in~152.base : int, #in~152.offset : int) returns (#res : int);
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];

procedure tty_set_operations(#in~82.base : int, #in~82.offset : int, #in~83.base : int, #in~83.offset : int) returns ();
modifies ;

procedure __bad_percpu_size() returns ();
modifies ;

procedure _copy_to_user(#in~67.base : int, #in~67.offset : int, #in~68.base : int, #in~68.offset : int, #in~69 : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_irqrestore(#in~17.base : int, #in~17.offset : int, #in~18 : int) returns ();
modifies ;

procedure tty_register_driver(#in~89.base : int, #in~89.offset : int) returns (#res : int);
modifies ;

procedure __wake_up(#in~22.base : int, #in~22.offset : int, #in~23 : int, #in~24 : int, #in~25.base : int, #in~25.offset : int) returns ();
modifies ;

procedure tty_insert_flip_string_flags(#in~118.base : int, #in~118.offset : int, #in~119.base : int, #in~119.offset : int, #in~120.base : int, #in~120.offset : int, #in~121 : int) returns (#res : int);
modifies ;

procedure mod_timer(#in~47.base : int, #in~47.offset : int, #in~48 : int) returns (#res : int);
modifies ;

procedure memset(#in~4.base : int, #in~4.offset : int, #in~5 : int, #in~6 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure tty_encode_baud_rate(#in~94.base : int, #in~94.offset : int, #in~95 : int, #in~96 : int) returns ();
modifies ;

procedure __VERIFIER_nondet_ulong() returns (#res : int);
modifies ;

procedure _raw_spin_lock_irq(#in~15.base : int, #in~15.offset : int) returns ();
modifies ;

procedure __copy_to_user_overflow() returns ();
modifies ;

procedure tty_port_tty_set(#in~107.base : int, #in~107.offset : int, #in~108.base : int, #in~108.offset : int) returns ();
modifies ;

procedure __tty_alloc_driver(#in~78 : int, #in~79.base : int, #in~79.offset : int, #in~80 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __init_waitqueue_head(#in~19.base : int, #in~19.offset : int, #in~20.base : int, #in~20.offset : int, #in~21.base : int, #in~21.offset : int) returns ();
modifies ;

procedure __copy_from_user_overflow() returns ();
modifies ;

procedure ldv_activate_1() returns (#res : int);
modifies ;

procedure __request_region(#in~38.base : int, #in~38.offset : int, #in~39 : int, #in~40 : int, #in~41.base : int, #in~41.offset : int, #in~42 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure tty_port_register_device(#in~101.base : int, #in~101.offset : int, #in~102.base : int, #in~102.offset : int, #in~103 : int, #in~104.base : int, #in~104.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ldv_check_final_state() returns ();
modifies ;

procedure tty_unregister_driver(#in~90.base : int, #in~90.offset : int) returns (#res : int);
modifies ;


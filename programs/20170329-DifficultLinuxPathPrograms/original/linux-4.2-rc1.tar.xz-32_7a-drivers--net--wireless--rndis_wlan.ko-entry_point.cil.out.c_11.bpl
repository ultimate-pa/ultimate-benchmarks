type STRUCT~task_struct;
type STRUCT~nsproxy;
type STRUCT~workqueue_struct;
type STRUCT~wake_irq;
type STRUCT~dev_pm_qos;
type STRUCT~xol_area;
type STRUCT~slab;
type STRUCT~kmem_cache;
type STRUCT~mem_cgroup;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~pid_namespace;
type STRUCT~assoc_array_ptr;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~kernfs_open_node;
type STRUCT~kernfs_iattrs;
type STRUCT~sock;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~tracepoint;
type STRUCT~trace_event_call;
type STRUCT~trace_enum_map;
type STRUCT~pinctrl;
type STRUCT~pinctrl_state;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~cma;
type STRUCT~iommu_group;
type STRUCT~vfsmount;
type STRUCT~writeback_control;
type STRUCT~swap_info_struct;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~cdev;
type STRUCT~posix_acl;
type STRUCT~bdi_writeback;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~backing_dev_info;
type STRUCT~mtd_info;
type STRUCT~poll_table_struct;
type STRUCT~kstatfs;
type STRUCT~sec_path;
type STRUCT~prot_inuse;
type STRUCT~proc_dir_entry;
type STRUCT~ipv4_devconf;
type STRUCT~fib_rules_ops;
type STRUCT~fib_table;
type STRUCT~inet_peer_base;
type STRUCT~xt_table;
type STRUCT~dst_entry;
type STRUCT~neighbour;
type STRUCT~ipv6_devconf;
type STRUCT~rt6_info;
type STRUCT~rt6_statistics;
type STRUCT~fib6_table;
type STRUCT~sctp_mib;
type STRUCT~nf_logger;
type STRUCT~ebt_table;
type STRUCT~ip_conntrack_stat;
type STRUCT~nf_ct_event_notifier;
type STRUCT~nf_exp_event_notifier;
type STRUCT~nft_af_info;
type STRUCT~mpls_route;
type STRUCT~proc_ns_operations;
type STRUCT~net_generic;
type STRUCT~netns_ipvs;
type STRUCT~packet_type;
type STRUCT~Qdisc;
type STRUCT~neigh_parms;
type STRUCT~netpoll_info;
type STRUCT~pcpu_lstats;
type STRUCT~pcpu_dstats;
type STRUCT~pcpu_vstats;
type STRUCT~iw_handler_def;
type STRUCT~iw_public_data;
type STRUCT~switchdev_ops;
type STRUCT~vlan_info;
type STRUCT~tipc_bearer;
type STRUCT~in_device;
type STRUCT~dn_dev;
type STRUCT~inet6_dev;
type STRUCT~wpan_dev;
type STRUCT~mpls_dev;
type STRUCT~tcf_proto;
type STRUCT~cpu_rmap;
type STRUCT~garp_port;
type STRUCT~mrp_port;
type STRUCT~rtnl_link_ops;
type STRUCT~ep_device;
type STRUCT~mon_bus;
type STRUCT~usb_tt;
type STRUCT~wusb_dev;
type STRUCT~cfg80211_cached_keys;
type STRUCT~cfg80211_conn;
type STRUCT~cfg80211_internal_bss;
type ~__u8 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__u64 = int;
type ~s8 = int;
type ~u8 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~pteval_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~__kernel_sa_family_t = int;
type ~qsize_t = int;
type ~sk_buff_data_t = int;
type ~kernel_ulong_t = int;
type ~ldv_func_ret_type___13 = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__le16 = ~__u16;
type ~__be16 = ~__u16;
type ~__le32 = ~__u32;
type ~__be32 = ~__u32;
type ~__le64 = ~__u64;
type ~__wsum = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint8_t = ~__u8;
type ~uint32_t = ~__u32;
type ~uint64_t = ~__u64;
type ~dma_addr_t = ~u64;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~sa_family_t = ~__kernel_sa_family_t;
type ~projid_t = ~__kernel_uid32_t;
type ~socket_state = int;
type ~netdev_features_t = ~u64;
type ~phandle = ~u32;
type ~phy_interface_t = int;
type ~netdev_tx_t = int;
type ~rx_handler_result_t = int;
type ~ldv_func_ret_type = ~bool;
type ~ldv_func_ret_type___0 = ~bool;
type ~ldv_func_ret_type___4 = ~bool;
type ~ldv_func_ret_type___5 = ~bool;
type ~ldv_func_ret_type___6 = ~bool;
type ~ldv_func_ret_type___7 = ~bool;
type ~ldv_func_ret_type___8 = ~bool;
type ~ldv_func_ret_type___9 = ~bool;
type ~ldv_func_ret_type___10 = ~bool;
type ~ldv_func_ret_type___11 = ~bool;
type ~ldv_func_ret_type___12 = ~bool;
const #funAddr~rndis_change_virtual_intf.base : int;
const #funAddr~rndis_change_virtual_intf.offset : int;
const #funAddr~rndis_add_key.base : int;
const #funAddr~rndis_add_key.offset : int;
const #funAddr~rndis_del_key.base : int;
const #funAddr~rndis_del_key.offset : int;
const #funAddr~rndis_set_default_key.base : int;
const #funAddr~rndis_set_default_key.offset : int;
const #funAddr~rndis_get_station.base : int;
const #funAddr~rndis_get_station.offset : int;
const #funAddr~rndis_dump_station.base : int;
const #funAddr~rndis_dump_station.offset : int;
const #funAddr~rndis_scan.base : int;
const #funAddr~rndis_scan.offset : int;
const #funAddr~rndis_connect.base : int;
const #funAddr~rndis_connect.offset : int;
const #funAddr~rndis_disconnect.base : int;
const #funAddr~rndis_disconnect.offset : int;
const #funAddr~rndis_join_ibss.base : int;
const #funAddr~rndis_join_ibss.offset : int;
const #funAddr~rndis_leave_ibss.base : int;
const #funAddr~rndis_leave_ibss.offset : int;
const #funAddr~rndis_set_wiphy_params.base : int;
const #funAddr~rndis_set_wiphy_params.offset : int;
const #funAddr~rndis_set_tx_power.base : int;
const #funAddr~rndis_set_tx_power.offset : int;
const #funAddr~rndis_get_tx_power.base : int;
const #funAddr~rndis_get_tx_power.offset : int;
const #funAddr~rndis_set_pmksa.base : int;
const #funAddr~rndis_set_pmksa.offset : int;
const #funAddr~rndis_del_pmksa.base : int;
const #funAddr~rndis_del_pmksa.offset : int;
const #funAddr~rndis_flush_pmksa.base : int;
const #funAddr~rndis_flush_pmksa.offset : int;
const #funAddr~rndis_set_power_mgmt.base : int;
const #funAddr~rndis_set_power_mgmt.offset : int;
const #funAddr~rndis_set_cqm_rssi_config.base : int;
const #funAddr~rndis_set_cqm_rssi_config.offset : int;
const #funAddr~usbnet_open.base : int;
const #funAddr~usbnet_open.offset : int;
const #funAddr~usbnet_stop.base : int;
const #funAddr~usbnet_stop.offset : int;
const #funAddr~usbnet_start_xmit.base : int;
const #funAddr~usbnet_start_xmit.offset : int;
const #funAddr~rndis_wlan_set_multicast_list.base : int;
const #funAddr~rndis_wlan_set_multicast_list.offset : int;
const #funAddr~eth_mac_addr.base : int;
const #funAddr~eth_mac_addr.offset : int;
const #funAddr~eth_validate_addr.base : int;
const #funAddr~eth_validate_addr.offset : int;
const #funAddr~usbnet_tx_timeout.base : int;
const #funAddr~usbnet_tx_timeout.offset : int;
const #funAddr~rndis_wlan_worker.base : int;
const #funAddr~rndis_wlan_worker.offset : int;
const #funAddr~rndis_device_poller.base : int;
const #funAddr~rndis_device_poller.offset : int;
const #funAddr~delayed_work_timer_fn.base : int;
const #funAddr~delayed_work_timer_fn.offset : int;
const #funAddr~rndis_get_scan_results.base : int;
const #funAddr~rndis_get_scan_results.offset : int;
const #funAddr~rndis_wlan_bind.base : int;
const #funAddr~rndis_wlan_bind.offset : int;
const #funAddr~rndis_wlan_unbind.base : int;
const #funAddr~rndis_wlan_unbind.offset : int;
const #funAddr~rndis_wlan_reset.base : int;
const #funAddr~rndis_wlan_reset.offset : int;
const #funAddr~rndis_wlan_stop.base : int;
const #funAddr~rndis_wlan_stop.offset : int;
const #funAddr~rndis_status.base : int;
const #funAddr~rndis_status.offset : int;
const #funAddr~rndis_rx_fixup.base : int;
const #funAddr~rndis_rx_fixup.offset : int;
const #funAddr~rndis_tx_fixup.base : int;
const #funAddr~rndis_tx_fixup.offset : int;
const #funAddr~bcm4320b_early_init.base : int;
const #funAddr~bcm4320b_early_init.offset : int;
const #funAddr~rndis_wlan_indication.base : int;
const #funAddr~rndis_wlan_indication.offset : int;
const #funAddr~bcm4320a_early_init.base : int;
const #funAddr~bcm4320a_early_init.offset : int;
const #funAddr~unknown_early_init.base : int;
const #funAddr~unknown_early_init.offset : int;
const #funAddr~usbnet_probe.base : int;
const #funAddr~usbnet_probe.offset : int;
const #funAddr~usbnet_disconnect.base : int;
const #funAddr~usbnet_disconnect.offset : int;
const #funAddr~usbnet_suspend.base : int;
const #funAddr~usbnet_suspend.offset : int;
const #funAddr~usbnet_resume.base : int;
const #funAddr~usbnet_resume.offset : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~probe_type~PROBE_DEFAULT_STRATEGY : int;
const ~probe_type~PROBE_PREFER_ASYNCHRONOUS : int;
const ~probe_type~PROBE_FORCE_SYNCHRONOUS : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~ldv_23636~SS_FREE : int;
const ~ldv_23636~SS_UNCONNECTED : int;
const ~ldv_23636~SS_CONNECTING : int;
const ~ldv_23636~SS_CONNECTED : int;
const ~ldv_23636~SS_DISCONNECTING : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ON : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_OFF : int;
const ~fwnode_type~FWNODE_INVALID : int;
const ~fwnode_type~FWNODE_OF : int;
const ~fwnode_type~FWNODE_ACPI : int;
const ~fwnode_type~FWNODE_PDATA : int;
const ~ldv_27864~PHY_INTERFACE_MODE_NA : int;
const ~ldv_27864~PHY_INTERFACE_MODE_MII : int;
const ~ldv_27864~PHY_INTERFACE_MODE_GMII : int;
const ~ldv_27864~PHY_INTERFACE_MODE_SGMII : int;
const ~ldv_27864~PHY_INTERFACE_MODE_TBI : int;
const ~ldv_27864~PHY_INTERFACE_MODE_REVMII : int;
const ~ldv_27864~PHY_INTERFACE_MODE_RMII : int;
const ~ldv_27864~PHY_INTERFACE_MODE_RGMII : int;
const ~ldv_27864~PHY_INTERFACE_MODE_RGMII_ID : int;
const ~ldv_27864~PHY_INTERFACE_MODE_RGMII_RXID : int;
const ~ldv_27864~PHY_INTERFACE_MODE_RGMII_TXID : int;
const ~ldv_27864~PHY_INTERFACE_MODE_RTBI : int;
const ~ldv_27864~PHY_INTERFACE_MODE_SMII : int;
const ~ldv_27864~PHY_INTERFACE_MODE_XGMII : int;
const ~ldv_27864~PHY_INTERFACE_MODE_MOCA : int;
const ~ldv_27864~PHY_INTERFACE_MODE_QSGMII : int;
const ~ldv_27864~PHY_INTERFACE_MODE_MAX : int;
const ~ldv_27918~MDIOBUS_ALLOCATED : int;
const ~ldv_27918~MDIOBUS_REGISTERED : int;
const ~ldv_27918~MDIOBUS_UNREGISTERED : int;
const ~ldv_27918~MDIOBUS_RELEASED : int;
const ~phy_state~PHY_DOWN : int;
const ~phy_state~PHY_STARTING : int;
const ~phy_state~PHY_READY : int;
const ~phy_state~PHY_PENDING : int;
const ~phy_state~PHY_UP : int;
const ~phy_state~PHY_AN : int;
const ~phy_state~PHY_RUNNING : int;
const ~phy_state~PHY_NOLINK : int;
const ~phy_state~PHY_FORCING : int;
const ~phy_state~PHY_CHANGELINK : int;
const ~phy_state~PHY_HALTED : int;
const ~phy_state~PHY_RESUMING : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_NONE : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_DSA : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_TRAILER : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_EDSA : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_BRCM : int;
const ~netdev_tx~__NETDEV_TX_MIN : int;
const ~netdev_tx~NETDEV_TX_OK : int;
const ~netdev_tx~NETDEV_TX_BUSY : int;
const ~netdev_tx~NETDEV_TX_LOCKED : int;
const ~rx_handler_result~RX_HANDLER_CONSUMED : int;
const ~rx_handler_result~RX_HANDLER_ANOTHER : int;
const ~rx_handler_result~RX_HANDLER_EXACT : int;
const ~rx_handler_result~RX_HANDLER_PASS : int;
const ~usb_device_speed~USB_SPEED_UNKNOWN : int;
const ~usb_device_speed~USB_SPEED_LOW : int;
const ~usb_device_speed~USB_SPEED_FULL : int;
const ~usb_device_speed~USB_SPEED_HIGH : int;
const ~usb_device_speed~USB_SPEED_WIRELESS : int;
const ~usb_device_speed~USB_SPEED_SUPER : int;
const ~usb_device_state~USB_STATE_NOTATTACHED : int;
const ~usb_device_state~USB_STATE_ATTACHED : int;
const ~usb_device_state~USB_STATE_POWERED : int;
const ~usb_device_state~USB_STATE_RECONNECTING : int;
const ~usb_device_state~USB_STATE_UNAUTHENTICATED : int;
const ~usb_device_state~USB_STATE_DEFAULT : int;
const ~usb_device_state~USB_STATE_ADDRESS : int;
const ~usb_device_state~USB_STATE_CONFIGURED : int;
const ~usb_device_state~USB_STATE_SUSPENDED : int;
const ~usb_interface_condition~USB_INTERFACE_UNBOUND : int;
const ~usb_interface_condition~USB_INTERFACE_BINDING : int;
const ~usb_interface_condition~USB_INTERFACE_BOUND : int;
const ~usb_interface_condition~USB_INTERFACE_UNBINDING : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE : int;
const ~usb_device_removable~USB_DEVICE_FIXED : int;
const ~nl80211_iftype~NL80211_IFTYPE_UNSPECIFIED : int;
const ~nl80211_iftype~NL80211_IFTYPE_ADHOC : int;
const ~nl80211_iftype~NL80211_IFTYPE_STATION : int;
const ~nl80211_iftype~NL80211_IFTYPE_AP : int;
const ~nl80211_iftype~NL80211_IFTYPE_AP_VLAN : int;
const ~nl80211_iftype~NL80211_IFTYPE_WDS : int;
const ~nl80211_iftype~NL80211_IFTYPE_MONITOR : int;
const ~nl80211_iftype~NL80211_IFTYPE_MESH_POINT : int;
const ~nl80211_iftype~NL80211_IFTYPE_P2P_CLIENT : int;
const ~nl80211_iftype~NL80211_IFTYPE_P2P_GO : int;
const ~nl80211_iftype~NL80211_IFTYPE_P2P_DEVICE : int;
const ~nl80211_iftype~NL80211_IFTYPE_OCB : int;
const ~nl80211_iftype~NUM_NL80211_IFTYPES : int;
const ~nl80211_iftype~NL80211_IFTYPE_MAX : int;
const ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_CORE : int;
const ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_USER : int;
const ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_DRIVER : int;
const ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_COUNTRY_IE : int;
const ~nl80211_dfs_regions~NL80211_DFS_UNSET : int;
const ~nl80211_dfs_regions~NL80211_DFS_FCC : int;
const ~nl80211_dfs_regions~NL80211_DFS_ETSI : int;
const ~nl80211_dfs_regions~NL80211_DFS_JP : int;
const ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_USER : int;
const ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_CELL_BASE : int;
const ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_INDOOR : int;
const ~nl80211_mesh_power_mode~NL80211_MESH_POWER_UNKNOWN : int;
const ~nl80211_mesh_power_mode~NL80211_MESH_POWER_ACTIVE : int;
const ~nl80211_mesh_power_mode~NL80211_MESH_POWER_LIGHT_SLEEP : int;
const ~nl80211_mesh_power_mode~NL80211_MESH_POWER_DEEP_SLEEP : int;
const ~nl80211_mesh_power_mode~__NL80211_MESH_POWER_AFTER_LAST : int;
const ~nl80211_mesh_power_mode~NL80211_MESH_POWER_MAX : int;
const ~nl80211_ac~NL80211_AC_VO : int;
const ~nl80211_ac~NL80211_AC_VI : int;
const ~nl80211_ac~NL80211_AC_BE : int;
const ~nl80211_ac~NL80211_AC_BK : int;
const ~nl80211_ac~NL80211_NUM_ACS : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_20_NOHT : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_20 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_40 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_80 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_80P80 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_160 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_5 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_10 : int;
const ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_20 : int;
const ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_10 : int;
const ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_5 : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_OPEN_SYSTEM : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_SHARED_KEY : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_FT : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_NETWORK_EAP : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_SAE : int;
const ~nl80211_auth_type~__NL80211_AUTHTYPE_NUM : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_MAX : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_AUTOMATIC : int;
const ~nl80211_key_type~NL80211_KEYTYPE_GROUP : int;
const ~nl80211_key_type~NL80211_KEYTYPE_PAIRWISE : int;
const ~nl80211_key_type~NL80211_KEYTYPE_PEERKEY : int;
const ~nl80211_key_type~NUM_NL80211_KEYTYPES : int;
const ~nl80211_mfp~NL80211_MFP_NO : int;
const ~nl80211_mfp~NL80211_MFP_REQUIRED : int;
const ~nl80211_txrate_gi~NL80211_TXRATE_DEFAULT_GI : int;
const ~nl80211_txrate_gi~NL80211_TXRATE_FORCE_SGI : int;
const ~nl80211_txrate_gi~NL80211_TXRATE_FORCE_LGI : int;
const ~nl80211_cqm_rssi_threshold_event~NL80211_CQM_RSSI_THRESHOLD_EVENT_LOW : int;
const ~nl80211_cqm_rssi_threshold_event~NL80211_CQM_RSSI_THRESHOLD_EVENT_HIGH : int;
const ~nl80211_cqm_rssi_threshold_event~NL80211_CQM_RSSI_BEACON_LOSS_EVENT : int;
const ~nl80211_tx_power_setting~NL80211_TX_POWER_AUTOMATIC : int;
const ~nl80211_tx_power_setting~NL80211_TX_POWER_LIMITED : int;
const ~nl80211_tx_power_setting~NL80211_TX_POWER_FIXED : int;
const ~nl80211_coalesce_condition~NL80211_COALESCE_CONDITION_MATCH : int;
const ~nl80211_coalesce_condition~NL80211_COALESCE_CONDITION_NO_MATCH : int;
const ~nl80211_hidden_ssid~NL80211_HIDDEN_SSID_NOT_IN_USE : int;
const ~nl80211_hidden_ssid~NL80211_HIDDEN_SSID_ZERO_LEN : int;
const ~nl80211_hidden_ssid~NL80211_HIDDEN_SSID_ZERO_CONTENTS : int;
const ~nl80211_tdls_operation~NL80211_TDLS_DISCOVERY_REQ : int;
const ~nl80211_tdls_operation~NL80211_TDLS_SETUP : int;
const ~nl80211_tdls_operation~NL80211_TDLS_TEARDOWN : int;
const ~nl80211_tdls_operation~NL80211_TDLS_ENABLE_LINK : int;
const ~nl80211_tdls_operation~NL80211_TDLS_DISABLE_LINK : int;
const ~nl80211_acl_policy~NL80211_ACL_POLICY_ACCEPT_UNLESS_LISTED : int;
const ~nl80211_acl_policy~NL80211_ACL_POLICY_DENY_UNLESS_LISTED : int;
const ~nl80211_smps_mode~NL80211_SMPS_OFF : int;
const ~nl80211_smps_mode~NL80211_SMPS_STATIC : int;
const ~nl80211_smps_mode~NL80211_SMPS_DYNAMIC : int;
const ~nl80211_smps_mode~__NL80211_SMPS_AFTER_LAST : int;
const ~nl80211_smps_mode~NL80211_SMPS_MAX : int;
const ~nl80211_dfs_state~NL80211_DFS_USABLE : int;
const ~nl80211_dfs_state~NL80211_DFS_UNAVAILABLE : int;
const ~nl80211_dfs_state~NL80211_DFS_AVAILABLE : int;
const ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_UNSPEC : int;
const ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_DHCP : int;
const ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_EAPOL : int;
const ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_APIPA : int;
const ~nl80211_crit_proto_id~NUM_NL80211_CRIT_PROTO : int;
const ~environment_cap~ENVIRON_ANY : int;
const ~environment_cap~ENVIRON_INDOOR : int;
const ~environment_cap~ENVIRON_OUTDOOR : int;
const ~ieee80211_band~IEEE80211_BAND_2GHZ : int;
const ~ieee80211_band~IEEE80211_BAND_5GHZ : int;
const ~ieee80211_band~IEEE80211_BAND_60GHZ : int;
const ~ieee80211_band~IEEE80211_NUM_BANDS : int;
const ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_NONE : int;
const ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_MBM : int;
const ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_UNSPEC : int;
const ~cfg80211_bss_frame_type~CFG80211_BSS_FTYPE_UNKNOWN : int;
const ~cfg80211_bss_frame_type~CFG80211_BSS_FTYPE_BEACON : int;
const ~cfg80211_bss_frame_type~CFG80211_BSS_FTYPE_PRESP : int;
axiom #funAddr~rndis_change_virtual_intf.base == -1 && #funAddr~rndis_change_virtual_intf.offset == 0;
axiom #funAddr~rndis_add_key.base == -1 && #funAddr~rndis_add_key.offset == 1;
axiom #funAddr~rndis_del_key.base == -1 && #funAddr~rndis_del_key.offset == 2;
axiom #funAddr~rndis_set_default_key.base == -1 && #funAddr~rndis_set_default_key.offset == 3;
axiom #funAddr~rndis_get_station.base == -1 && #funAddr~rndis_get_station.offset == 4;
axiom #funAddr~rndis_dump_station.base == -1 && #funAddr~rndis_dump_station.offset == 5;
axiom #funAddr~rndis_scan.base == -1 && #funAddr~rndis_scan.offset == 6;
axiom #funAddr~rndis_connect.base == -1 && #funAddr~rndis_connect.offset == 7;
axiom #funAddr~rndis_disconnect.base == -1 && #funAddr~rndis_disconnect.offset == 8;
axiom #funAddr~rndis_join_ibss.base == -1 && #funAddr~rndis_join_ibss.offset == 9;
axiom #funAddr~rndis_leave_ibss.base == -1 && #funAddr~rndis_leave_ibss.offset == 10;
axiom #funAddr~rndis_set_wiphy_params.base == -1 && #funAddr~rndis_set_wiphy_params.offset == 11;
axiom #funAddr~rndis_set_tx_power.base == -1 && #funAddr~rndis_set_tx_power.offset == 12;
axiom #funAddr~rndis_get_tx_power.base == -1 && #funAddr~rndis_get_tx_power.offset == 13;
axiom #funAddr~rndis_set_pmksa.base == -1 && #funAddr~rndis_set_pmksa.offset == 14;
axiom #funAddr~rndis_del_pmksa.base == -1 && #funAddr~rndis_del_pmksa.offset == 15;
axiom #funAddr~rndis_flush_pmksa.base == -1 && #funAddr~rndis_flush_pmksa.offset == 16;
axiom #funAddr~rndis_set_power_mgmt.base == -1 && #funAddr~rndis_set_power_mgmt.offset == 17;
axiom #funAddr~rndis_set_cqm_rssi_config.base == -1 && #funAddr~rndis_set_cqm_rssi_config.offset == 18;
axiom #funAddr~usbnet_open.base == -1 && #funAddr~usbnet_open.offset == 19;
axiom #funAddr~usbnet_stop.base == -1 && #funAddr~usbnet_stop.offset == 20;
axiom #funAddr~usbnet_start_xmit.base == -1 && #funAddr~usbnet_start_xmit.offset == 21;
axiom #funAddr~rndis_wlan_set_multicast_list.base == -1 && #funAddr~rndis_wlan_set_multicast_list.offset == 22;
axiom #funAddr~eth_mac_addr.base == -1 && #funAddr~eth_mac_addr.offset == 23;
axiom #funAddr~eth_validate_addr.base == -1 && #funAddr~eth_validate_addr.offset == 24;
axiom #funAddr~usbnet_tx_timeout.base == -1 && #funAddr~usbnet_tx_timeout.offset == 25;
axiom #funAddr~rndis_wlan_worker.base == -1 && #funAddr~rndis_wlan_worker.offset == 26;
axiom #funAddr~rndis_device_poller.base == -1 && #funAddr~rndis_device_poller.offset == 27;
axiom #funAddr~delayed_work_timer_fn.base == -1 && #funAddr~delayed_work_timer_fn.offset == 28;
axiom #funAddr~rndis_get_scan_results.base == -1 && #funAddr~rndis_get_scan_results.offset == 29;
axiom #funAddr~rndis_wlan_bind.base == -1 && #funAddr~rndis_wlan_bind.offset == 30;
axiom #funAddr~rndis_wlan_unbind.base == -1 && #funAddr~rndis_wlan_unbind.offset == 31;
axiom #funAddr~rndis_wlan_reset.base == -1 && #funAddr~rndis_wlan_reset.offset == 32;
axiom #funAddr~rndis_wlan_stop.base == -1 && #funAddr~rndis_wlan_stop.offset == 33;
axiom #funAddr~rndis_status.base == -1 && #funAddr~rndis_status.offset == 34;
axiom #funAddr~rndis_rx_fixup.base == -1 && #funAddr~rndis_rx_fixup.offset == 35;
axiom #funAddr~rndis_tx_fixup.base == -1 && #funAddr~rndis_tx_fixup.offset == 36;
axiom #funAddr~bcm4320b_early_init.base == -1 && #funAddr~bcm4320b_early_init.offset == 37;
axiom #funAddr~rndis_wlan_indication.base == -1 && #funAddr~rndis_wlan_indication.offset == 38;
axiom #funAddr~bcm4320a_early_init.base == -1 && #funAddr~bcm4320a_early_init.offset == 39;
axiom #funAddr~unknown_early_init.base == -1 && #funAddr~unknown_early_init.offset == 40;
axiom #funAddr~usbnet_probe.base == -1 && #funAddr~usbnet_probe.offset == 41;
axiom #funAddr~usbnet_disconnect.base == -1 && #funAddr~usbnet_disconnect.offset == 42;
axiom #funAddr~usbnet_suspend.base == -1 && #funAddr~usbnet_suspend.offset == 43;
axiom #funAddr~usbnet_resume.base == -1 && #funAddr~usbnet_resume.offset == 44;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~probe_type~PROBE_DEFAULT_STRATEGY == 0;
axiom ~probe_type~PROBE_PREFER_ASYNCHRONOUS == 1;
axiom ~probe_type~PROBE_FORCE_SYNCHRONOUS == 2;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~ldv_23636~SS_FREE == 0;
axiom ~ldv_23636~SS_UNCONNECTED == 1;
axiom ~ldv_23636~SS_CONNECTING == 2;
axiom ~ldv_23636~SS_CONNECTED == 3;
axiom ~ldv_23636~SS_DISCONNECTING == 4;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE == 0;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE == 1;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ON == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_OFF == 3;
axiom ~fwnode_type~FWNODE_INVALID == 0;
axiom ~fwnode_type~FWNODE_OF == 1;
axiom ~fwnode_type~FWNODE_ACPI == 2;
axiom ~fwnode_type~FWNODE_PDATA == 3;
axiom ~ldv_27864~PHY_INTERFACE_MODE_NA == 0;
axiom ~ldv_27864~PHY_INTERFACE_MODE_MII == 1;
axiom ~ldv_27864~PHY_INTERFACE_MODE_GMII == 2;
axiom ~ldv_27864~PHY_INTERFACE_MODE_SGMII == 3;
axiom ~ldv_27864~PHY_INTERFACE_MODE_TBI == 4;
axiom ~ldv_27864~PHY_INTERFACE_MODE_REVMII == 5;
axiom ~ldv_27864~PHY_INTERFACE_MODE_RMII == 6;
axiom ~ldv_27864~PHY_INTERFACE_MODE_RGMII == 7;
axiom ~ldv_27864~PHY_INTERFACE_MODE_RGMII_ID == 8;
axiom ~ldv_27864~PHY_INTERFACE_MODE_RGMII_RXID == 9;
axiom ~ldv_27864~PHY_INTERFACE_MODE_RGMII_TXID == 10;
axiom ~ldv_27864~PHY_INTERFACE_MODE_RTBI == 11;
axiom ~ldv_27864~PHY_INTERFACE_MODE_SMII == 12;
axiom ~ldv_27864~PHY_INTERFACE_MODE_XGMII == 13;
axiom ~ldv_27864~PHY_INTERFACE_MODE_MOCA == 14;
axiom ~ldv_27864~PHY_INTERFACE_MODE_QSGMII == 15;
axiom ~ldv_27864~PHY_INTERFACE_MODE_MAX == 16;
axiom ~ldv_27918~MDIOBUS_ALLOCATED == 1;
axiom ~ldv_27918~MDIOBUS_REGISTERED == 2;
axiom ~ldv_27918~MDIOBUS_UNREGISTERED == 3;
axiom ~ldv_27918~MDIOBUS_RELEASED == 4;
axiom ~phy_state~PHY_DOWN == 0;
axiom ~phy_state~PHY_STARTING == 1;
axiom ~phy_state~PHY_READY == 2;
axiom ~phy_state~PHY_PENDING == 3;
axiom ~phy_state~PHY_UP == 4;
axiom ~phy_state~PHY_AN == 5;
axiom ~phy_state~PHY_RUNNING == 6;
axiom ~phy_state~PHY_NOLINK == 7;
axiom ~phy_state~PHY_FORCING == 8;
axiom ~phy_state~PHY_CHANGELINK == 9;
axiom ~phy_state~PHY_HALTED == 10;
axiom ~phy_state~PHY_RESUMING == 11;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_NONE == 0;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_DSA == 1;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_TRAILER == 2;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_EDSA == 3;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_BRCM == 4;
axiom ~netdev_tx~__NETDEV_TX_MIN == -2147483648;
axiom ~netdev_tx~NETDEV_TX_OK == 0;
axiom ~netdev_tx~NETDEV_TX_BUSY == 16;
axiom ~netdev_tx~NETDEV_TX_LOCKED == 32;
axiom ~rx_handler_result~RX_HANDLER_CONSUMED == 0;
axiom ~rx_handler_result~RX_HANDLER_ANOTHER == 1;
axiom ~rx_handler_result~RX_HANDLER_EXACT == 2;
axiom ~rx_handler_result~RX_HANDLER_PASS == 3;
axiom ~usb_device_speed~USB_SPEED_UNKNOWN == 0;
axiom ~usb_device_speed~USB_SPEED_LOW == 1;
axiom ~usb_device_speed~USB_SPEED_FULL == 2;
axiom ~usb_device_speed~USB_SPEED_HIGH == 3;
axiom ~usb_device_speed~USB_SPEED_WIRELESS == 4;
axiom ~usb_device_speed~USB_SPEED_SUPER == 5;
axiom ~usb_device_state~USB_STATE_NOTATTACHED == 0;
axiom ~usb_device_state~USB_STATE_ATTACHED == 1;
axiom ~usb_device_state~USB_STATE_POWERED == 2;
axiom ~usb_device_state~USB_STATE_RECONNECTING == 3;
axiom ~usb_device_state~USB_STATE_UNAUTHENTICATED == 4;
axiom ~usb_device_state~USB_STATE_DEFAULT == 5;
axiom ~usb_device_state~USB_STATE_ADDRESS == 6;
axiom ~usb_device_state~USB_STATE_CONFIGURED == 7;
axiom ~usb_device_state~USB_STATE_SUSPENDED == 8;
axiom ~usb_interface_condition~USB_INTERFACE_UNBOUND == 0;
axiom ~usb_interface_condition~USB_INTERFACE_BINDING == 1;
axiom ~usb_interface_condition~USB_INTERFACE_BOUND == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBINDING == 3;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN == 0;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE == 1;
axiom ~usb_device_removable~USB_DEVICE_FIXED == 2;
axiom ~nl80211_iftype~NL80211_IFTYPE_UNSPECIFIED == 0;
axiom ~nl80211_iftype~NL80211_IFTYPE_ADHOC == 1;
axiom ~nl80211_iftype~NL80211_IFTYPE_STATION == 2;
axiom ~nl80211_iftype~NL80211_IFTYPE_AP == 3;
axiom ~nl80211_iftype~NL80211_IFTYPE_AP_VLAN == 4;
axiom ~nl80211_iftype~NL80211_IFTYPE_WDS == 5;
axiom ~nl80211_iftype~NL80211_IFTYPE_MONITOR == 6;
axiom ~nl80211_iftype~NL80211_IFTYPE_MESH_POINT == 7;
axiom ~nl80211_iftype~NL80211_IFTYPE_P2P_CLIENT == 8;
axiom ~nl80211_iftype~NL80211_IFTYPE_P2P_GO == 9;
axiom ~nl80211_iftype~NL80211_IFTYPE_P2P_DEVICE == 10;
axiom ~nl80211_iftype~NL80211_IFTYPE_OCB == 11;
axiom ~nl80211_iftype~NUM_NL80211_IFTYPES == 12;
axiom ~nl80211_iftype~NL80211_IFTYPE_MAX == 11;
axiom ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_CORE == 0;
axiom ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_USER == 1;
axiom ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_DRIVER == 2;
axiom ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_COUNTRY_IE == 3;
axiom ~nl80211_dfs_regions~NL80211_DFS_UNSET == 0;
axiom ~nl80211_dfs_regions~NL80211_DFS_FCC == 1;
axiom ~nl80211_dfs_regions~NL80211_DFS_ETSI == 2;
axiom ~nl80211_dfs_regions~NL80211_DFS_JP == 3;
axiom ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_USER == 0;
axiom ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_CELL_BASE == 1;
axiom ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_INDOOR == 2;
axiom ~nl80211_mesh_power_mode~NL80211_MESH_POWER_UNKNOWN == 0;
axiom ~nl80211_mesh_power_mode~NL80211_MESH_POWER_ACTIVE == 1;
axiom ~nl80211_mesh_power_mode~NL80211_MESH_POWER_LIGHT_SLEEP == 2;
axiom ~nl80211_mesh_power_mode~NL80211_MESH_POWER_DEEP_SLEEP == 3;
axiom ~nl80211_mesh_power_mode~__NL80211_MESH_POWER_AFTER_LAST == 4;
axiom ~nl80211_mesh_power_mode~NL80211_MESH_POWER_MAX == 3;
axiom ~nl80211_ac~NL80211_AC_VO == 0;
axiom ~nl80211_ac~NL80211_AC_VI == 1;
axiom ~nl80211_ac~NL80211_AC_BE == 2;
axiom ~nl80211_ac~NL80211_AC_BK == 3;
axiom ~nl80211_ac~NL80211_NUM_ACS == 4;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_20_NOHT == 0;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_20 == 1;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_40 == 2;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_80 == 3;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_80P80 == 4;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_160 == 5;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_5 == 6;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_10 == 7;
axiom ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_20 == 0;
axiom ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_10 == 1;
axiom ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_5 == 2;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_OPEN_SYSTEM == 0;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_SHARED_KEY == 1;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_FT == 2;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_NETWORK_EAP == 3;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_SAE == 4;
axiom ~nl80211_auth_type~__NL80211_AUTHTYPE_NUM == 5;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_MAX == 4;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_AUTOMATIC == 5;
axiom ~nl80211_key_type~NL80211_KEYTYPE_GROUP == 0;
axiom ~nl80211_key_type~NL80211_KEYTYPE_PAIRWISE == 1;
axiom ~nl80211_key_type~NL80211_KEYTYPE_PEERKEY == 2;
axiom ~nl80211_key_type~NUM_NL80211_KEYTYPES == 3;
axiom ~nl80211_mfp~NL80211_MFP_NO == 0;
axiom ~nl80211_mfp~NL80211_MFP_REQUIRED == 1;
axiom ~nl80211_txrate_gi~NL80211_TXRATE_DEFAULT_GI == 0;
axiom ~nl80211_txrate_gi~NL80211_TXRATE_FORCE_SGI == 1;
axiom ~nl80211_txrate_gi~NL80211_TXRATE_FORCE_LGI == 2;
axiom ~nl80211_cqm_rssi_threshold_event~NL80211_CQM_RSSI_THRESHOLD_EVENT_LOW == 0;
axiom ~nl80211_cqm_rssi_threshold_event~NL80211_CQM_RSSI_THRESHOLD_EVENT_HIGH == 1;
axiom ~nl80211_cqm_rssi_threshold_event~NL80211_CQM_RSSI_BEACON_LOSS_EVENT == 2;
axiom ~nl80211_tx_power_setting~NL80211_TX_POWER_AUTOMATIC == 0;
axiom ~nl80211_tx_power_setting~NL80211_TX_POWER_LIMITED == 1;
axiom ~nl80211_tx_power_setting~NL80211_TX_POWER_FIXED == 2;
axiom ~nl80211_coalesce_condition~NL80211_COALESCE_CONDITION_MATCH == 0;
axiom ~nl80211_coalesce_condition~NL80211_COALESCE_CONDITION_NO_MATCH == 1;
axiom ~nl80211_hidden_ssid~NL80211_HIDDEN_SSID_NOT_IN_USE == 0;
axiom ~nl80211_hidden_ssid~NL80211_HIDDEN_SSID_ZERO_LEN == 1;
axiom ~nl80211_hidden_ssid~NL80211_HIDDEN_SSID_ZERO_CONTENTS == 2;
axiom ~nl80211_tdls_operation~NL80211_TDLS_DISCOVERY_REQ == 0;
axiom ~nl80211_tdls_operation~NL80211_TDLS_SETUP == 1;
axiom ~nl80211_tdls_operation~NL80211_TDLS_TEARDOWN == 2;
axiom ~nl80211_tdls_operation~NL80211_TDLS_ENABLE_LINK == 3;
axiom ~nl80211_tdls_operation~NL80211_TDLS_DISABLE_LINK == 4;
axiom ~nl80211_acl_policy~NL80211_ACL_POLICY_ACCEPT_UNLESS_LISTED == 0;
axiom ~nl80211_acl_policy~NL80211_ACL_POLICY_DENY_UNLESS_LISTED == 1;
axiom ~nl80211_smps_mode~NL80211_SMPS_OFF == 0;
axiom ~nl80211_smps_mode~NL80211_SMPS_STATIC == 1;
axiom ~nl80211_smps_mode~NL80211_SMPS_DYNAMIC == 2;
axiom ~nl80211_smps_mode~__NL80211_SMPS_AFTER_LAST == 3;
axiom ~nl80211_smps_mode~NL80211_SMPS_MAX == 2;
axiom ~nl80211_dfs_state~NL80211_DFS_USABLE == 0;
axiom ~nl80211_dfs_state~NL80211_DFS_UNAVAILABLE == 1;
axiom ~nl80211_dfs_state~NL80211_DFS_AVAILABLE == 2;
axiom ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_UNSPEC == 0;
axiom ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_DHCP == 1;
axiom ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_EAPOL == 2;
axiom ~nl80211_crit_proto_id~NL80211_CRIT_PROTO_APIPA == 3;
axiom ~nl80211_crit_proto_id~NUM_NL80211_CRIT_PROTO == 4;
axiom ~environment_cap~ENVIRON_ANY == 0;
axiom ~environment_cap~ENVIRON_INDOOR == 1;
axiom ~environment_cap~ENVIRON_OUTDOOR == 2;
axiom ~ieee80211_band~IEEE80211_BAND_2GHZ == 0;
axiom ~ieee80211_band~IEEE80211_BAND_5GHZ == 1;
axiom ~ieee80211_band~IEEE80211_BAND_60GHZ == 2;
axiom ~ieee80211_band~IEEE80211_NUM_BANDS == 3;
axiom ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_NONE == 0;
axiom ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_MBM == 1;
axiom ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_UNSPEC == 2;
axiom ~cfg80211_bss_frame_type~CFG80211_BSS_FTYPE_UNKNOWN == 0;
axiom ~cfg80211_bss_frame_type~CFG80211_BSS_FTYPE_BEACON == 1;
axiom ~cfg80211_bss_frame_type~CFG80211_BSS_FTYPE_PRESP == 2;
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseXor" } ~bitwiseXor(in0 : int, in1 : int) returns (out : int);
var ~ldv_state_variable_8 : int;

var ~ldv_state_variable_0 : int;

var ~ldv_state_variable_5 : int;

var ~ldv_work_1_1 : int;

var ~ldv_work_3_2 : int;

var ~ldv_work_3_0 : int;

var ~ldv_state_variable_9 : int;

var ~ref_cnt : int;

var ~ldv_work_3_3 : int;

var ~ldv_state_variable_1 : int;

var ~ldv_state_variable_7 : int;

var ~ldv_work_1_3 : int;

var ~ldv_state_variable_6 : int;

var ~ldv_work_3_1 : int;

var ~ldv_state_variable_2 : int;

var ~ldv_work_2_0 : int;

var ~usb_counter : int;

var ~ldv_work_1_2 : int;

var ~ldv_work_2_2 : int;

var ~ldv_state_variable_3 : int;

var ~ldv_work_1_0 : int;

var ~ldv_work_2_3 : int;

var ~ldv_state_variable_4 : int;

var ~ldv_work_2_1 : int;

var ~_ctype : [int]int;

var ~modparam_country : [int]int;

var ~modparam_frameburst : int;

var ~modparam_afterburner : int;

var ~modparam_power_save : int;

var ~modparam_power_output : int;

var ~modparam_roamtrigger : int;

var ~modparam_roamdelta : int;

var ~modparam_workaround_interval : int;

var ~#rndis_wiphy_privid.base : int, ~#rndis_wiphy_privid.offset : int;

var ~ldv_retval_2 : int;

var ~ldv_retval_5 : int;

var ~ldv_retval_0 : int;

var ~ldv_retval_6 : int;

var ~ldv_retval_1 : int;

var ~ldv_retval_9 : int;

var ~ldv_retval_4 : int;

var ~ldv_retval_8 : int;

var ~ldv_retval_3 : int;

var ~ldv_retval_7 : int;

var ~ldv_mutex_command_lock_of_rndis_wlan_private : int;

var ~ldv_mutex_i_mutex_of_inode : int;

var ~ldv_mutex_lock : int;

var ~ldv_mutex_mutex_of_device : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~bcm4320b_info_group1.base : int, ~bcm4320b_info_group1.offset : int;

var ~rndis_wlan_info_group1.base : int, ~rndis_wlan_info_group1.offset : int;

var ~bcm4320a_info_group2.base : int, ~bcm4320a_info_group2.offset : int;

var ~ldv_work_struct_3_1.base : int, ~ldv_work_struct_3_1.offset : int;

var ~ldv_work_struct_2_0.base : int, ~ldv_work_struct_2_0.offset : int;

var ~rndis_wlan_driver_group1.base : int, ~rndis_wlan_driver_group1.offset : int;

var ~rndis_config_ops_group0.base : int, ~rndis_config_ops_group0.offset : int;

var ~rndis_wlan_info_group2.base : int, ~rndis_wlan_info_group2.offset : int;

var ~ldv_work_struct_3_3.base : int, ~ldv_work_struct_3_3.offset : int;

var ~ldv_work_struct_1_0.base : int, ~ldv_work_struct_1_0.offset : int;

var ~rndis_config_ops_group4.base : int, ~rndis_config_ops_group4.offset : int;

var ~ldv_work_struct_3_2.base : int, ~ldv_work_struct_3_2.offset : int;

var ~rndis_wlan_netdev_ops_group1.base : int, ~rndis_wlan_netdev_ops_group1.offset : int;

var ~bcm4320b_info_group0.base : int, ~bcm4320b_info_group0.offset : int;

var ~rndis_wlan_info_group0.base : int, ~rndis_wlan_info_group0.offset : int;

var ~rndis_config_ops_group1.base : int, ~rndis_config_ops_group1.offset : int;

var ~ldv_work_struct_3_0.base : int, ~ldv_work_struct_3_0.offset : int;

var ~rndis_config_ops_group3.base : int, ~rndis_config_ops_group3.offset : int;

var ~bcm4320a_info_group0.base : int, ~bcm4320a_info_group0.offset : int;

var ~rndis_config_ops_group2.base : int, ~rndis_config_ops_group2.offset : int;

var ~bcm4320b_info_group2.base : int, ~bcm4320b_info_group2.offset : int;

var ~bcm4320a_info_group1.base : int, ~bcm4320a_info_group1.offset : int;

var ~#rndis_channels.base : int, ~#rndis_channels.offset : int;

var ~#rndis_rates.base : int, ~#rndis_rates.offset : int;

var ~#rndis_cipher_suites.base : int, ~#rndis_cipher_suites.offset : int;

var ~#rndis_config_ops.base : int, ~#rndis_config_ops.offset : int;

var ~#rndis_wlan_netdev_ops.base : int, ~#rndis_wlan_netdev_ops.offset : int;

var ~#bcm4320b_info.base : int, ~#bcm4320b_info.offset : int;

var ~#bcm4320a_info.base : int, ~#bcm4320a_info.offset : int;

var ~#rndis_wlan_info.base : int, ~#rndis_wlan_info.offset : int;

var ~#products.base : int, ~#products.offset : int;

var ~#rndis_wlan_driver.base : int, ~#rndis_wlan_driver.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

var #memory_int : [int,int]int;

implementation is_associated(#in~usbdev.base : int, #in~usbdev.offset : int) returns (#res : ~bool){
    var #t~ret450.base : int, #t~ret450.offset : int;
    var #t~mem451 : int;
    var #t~ret452 : int;
    var #t~ret453 : ~bool;
    var ~usbdev.base : int, ~usbdev.offset : int;
    var ~priv~339.base : int, ~priv~339.offset : int;
    var ~tmp~339.base : int, ~tmp~339.offset : int;
    var ~#bssid~339.base : int, ~#bssid~339.offset : int;
    var ~ret~339 : int;
    var ~tmp___0~339 : ~bool;
    var ~tmp___1~339 : int;
    var ~tmp___2~339 : int;

  loc0:
    ~usbdev.base, ~usbdev.offset := #in~usbdev.base, #in~usbdev.offset;
    havoc ~priv~339.base, ~priv~339.offset;
    havoc ~tmp~339.base, ~tmp~339.offset;
    call ~#bssid~339.base, ~#bssid~339.offset := #Ultimate.alloc(6);
    havoc ~ret~339;
    havoc ~tmp___0~339;
    havoc ~tmp___1~339;
    havoc ~tmp___2~339;
    call #t~ret450.base, #t~ret450.offset := get_rndis_wlan_priv(~usbdev.base, ~usbdev.offset);
    ~tmp~339.base, ~tmp~339.offset := #t~ret450.base, #t~ret450.offset;
    havoc #t~ret450.base, #t~ret450.offset;
    ~priv~339.base, ~priv~339.offset := ~tmp~339.base, ~tmp~339.offset;
    call #t~mem451 := read~int(~priv~339.base, ~priv~339.offset + 2561, 1);
    assume #t~mem451 % 256 == 0;
    havoc #t~mem451;
    #res := 0;
    call ULTIMATE.dealloc(~#bssid~339.base, ~#bssid~339.offset);
    havoc ~#bssid~339.base, ~#bssid~339.offset;
    assume true;
    return;
}

procedure is_associated(#in~usbdev.base : int, #in~usbdev.offset : int) returns (#res : ~bool);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~ldv_mutex_command_lock_of_rndis_wlan_private;

implementation ldv_mutex_lock_17(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns (){
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;

  loc1:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    call ldv_mutex_lock_command_lock_of_rndis_wlan_private(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    call mutex_lock(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    assume true;
    return;
}

procedure ldv_mutex_lock_17(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns ();
modifies ~ldv_mutex_command_lock_of_rndis_wlan_private;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr2818 : int;

  loc2:
    #t~loopctr2818 := 0;
    goto loc3;
  loc3:
    goto loc3_0, loc3_1;
  loc3_0:
    assume #t~loopctr2818 < #amount;
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset + #t~loopctr2818 * 1 := 0], #memory_$Pointer$.offset[#ptr.base,#ptr.offset + #t~loopctr2818 * 1 := #value % 256];
    #memory_int := #memory_int[#ptr.base,#ptr.offset + #t~loopctr2818 * 1 := #value];
    #t~loopctr2818 := #t~loopctr2818 + 1;
    goto loc3;
  loc3_1:
    assume !(#t~loopctr2818 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation work_init_3() returns (){
  loc4:
    ~ldv_work_3_0 := 0;
    ~ldv_work_3_1 := 0;
    ~ldv_work_3_2 := 0;
    ~ldv_work_3_3 := 0;
    assume true;
    return;
}

procedure work_init_3() returns ();
modifies ~ldv_work_3_0, ~ldv_work_3_1, ~ldv_work_3_2, ~ldv_work_3_3;

implementation ldv_init_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~malloc33.base : int, #t~malloc33.offset : int;
    var ~size : int;
    var ~p~38.base : int, ~p~38.offset : int;
    var ~tmp~38.base : int, ~tmp~38.offset : int;

  loc5:
    ~size := #in~size;
    havoc ~p~38.base, ~p~38.offset;
    havoc ~tmp~38.base, ~tmp~38.offset;
    call #t~malloc33.base, #t~malloc33.offset := #Ultimate.alloc(1 * (if ~size % 4294967296 % 4294967296 <= 2147483647 then ~size % 4294967296 % 4294967296 else ~size % 4294967296 % 4294967296 - 4294967296));
    call #Ultimate.meminit(#t~malloc33.base, #t~malloc33.offset, 1, (if ~size % 4294967296 % 4294967296 <= 2147483647 then ~size % 4294967296 % 4294967296 else ~size % 4294967296 % 4294967296 - 4294967296), 1 * (if ~size % 4294967296 % 4294967296 <= 2147483647 then ~size % 4294967296 % 4294967296 else ~size % 4294967296 % 4294967296 - 4294967296));
    ~tmp~38.base, ~tmp~38.offset := #t~malloc33.base, #t~malloc33.offset;
    ~p~38.base, ~p~38.offset := ~tmp~38.base, ~tmp~38.offset;
    assume (~p~38.base + ~p~38.offset) % 18446744073709551616 != 0;
    #res.base, #res.offset := ~p~38.base, ~p~38.offset;
    assume true;
    return;
}

procedure ldv_init_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation main() returns (#res : int){
    var #t~ret2530.base : int, #t~ret2530.offset : int;
    var #t~ret2531.base : int, #t~ret2531.offset : int;
    var #t~ret2532.base : int, #t~ret2532.offset : int;
    var #t~ret2533.base : int, #t~ret2533.offset : int;
    var #t~ret2534.base : int, #t~ret2534.offset : int;
    var #t~ret2535.base : int, #t~ret2535.offset : int;
    var #t~ret2536.base : int, #t~ret2536.offset : int;
    var #t~ret2537.base : int, #t~ret2537.offset : int;
    var #t~ret2538.base : int, #t~ret2538.offset : int;
    var #t~ret2539.base : int, #t~ret2539.offset : int;
    var #t~ret2540.base : int, #t~ret2540.offset : int;
    var #t~ret2541.base : int, #t~ret2541.offset : int;
    var #t~ret2542.base : int, #t~ret2542.offset : int;
    var #t~ret2543.base : int, #t~ret2543.offset : int;
    var #t~ret2544.base : int, #t~ret2544.offset : int;
    var #t~ret2545.base : int, #t~ret2545.offset : int;
    var #t~ret2546.base : int, #t~ret2546.offset : int;
    var #t~ret2547.base : int, #t~ret2547.offset : int;
    var #t~ret2548.base : int, #t~ret2548.offset : int;
    var #t~ret2549.base : int, #t~ret2549.offset : int;
    var #t~ret2550.base : int, #t~ret2550.offset : int;
    var #t~ret2551.base : int, #t~ret2551.offset : int;
    var #t~ret2552.base : int, #t~ret2552.offset : int;
    var #t~ret2553.base : int, #t~ret2553.offset : int;
    var #t~ret2554.base : int, #t~ret2554.offset : int;
    var #t~ret2555.base : int, #t~ret2555.offset : int;
    var #t~ret2556.base : int, #t~ret2556.offset : int;
    var #t~ret2557.base : int, #t~ret2557.offset : int;
    var #t~ret2558.base : int, #t~ret2558.offset : int;
    var #t~ret2559.base : int, #t~ret2559.offset : int;
    var #t~ret2560.base : int, #t~ret2560.offset : int;
    var #t~ret2561.base : int, #t~ret2561.offset : int;
    var #t~ret2562.base : int, #t~ret2562.offset : int;
    var #t~ret2563.base : int, #t~ret2563.offset : int;
    var #t~ret2564.base : int, #t~ret2564.offset : int;
    var #t~ret2565.base : int, #t~ret2565.offset : int;
    var #t~ret2566.base : int, #t~ret2566.offset : int;
    var #t~ret2567.base : int, #t~ret2567.offset : int;
    var #t~ret2568.base : int, #t~ret2568.offset : int;
    var #t~ret2569.base : int, #t~ret2569.offset : int;
    var #t~ret2570.base : int, #t~ret2570.offset : int;
    var #t~ret2571.base : int, #t~ret2571.offset : int;
    var #t~ret2572.base : int, #t~ret2572.offset : int;
    var #t~ret2573.base : int, #t~ret2573.offset : int;
    var #t~nondet2574 : int;
    var #t~switch2575 : bool;
    var #t~nondet2576 : int;
    var #t~switch2577 : bool;
    var #t~mem2578 : int;
    var #t~mem2579 : int;
    var #t~mem2580 : int;
    var #t~mem2581 : int;
    var #t~mem2582 : int;
    var #t~ret2583.base : int, #t~ret2583.offset : int;
    var #t~mem2584 : int;
    var #t~ret2585.base : int, #t~ret2585.offset : int;
    var #t~mem2586 : int;
    var #t~ret2587.base : int, #t~ret2587.offset : int;
    var #t~mem2588 : int;
    var #t~ret2589.base : int, #t~ret2589.offset : int;
    var #t~ret2590 : int;
    var #t~ret2591 : int;
    var #t~ret2592 : int;
    var #t~ret2593 : int;
    var #t~ret2594 : int;
    var #t~ret2595 : int;
    var #t~ret2596 : int;
    var #t~ret2597 : int;
    var #t~ret2598 : int;
    var #t~ret2599 : int;
    var #t~ret2600 : int;
    var #t~ret2601 : int;
    var #t~ret2602 : int;
    var #t~ret2603 : int;
    var #t~ret2604 : int;
    var #t~ret2605 : int;
    var #t~ret2606 : int;
    var #t~ret2607 : int;
    var #t~nondet2608 : int;
    var #t~switch2609 : bool;
    var #t~mem2610 : int;
    var #t~mem2611 : int;
    var #t~mem2612 : int;
    var #t~mem2613 : int;
    var #t~mem2614 : int;
    var #t~ret2615.base : int, #t~ret2615.offset : int;
    var #t~mem2616 : int;
    var #t~ret2617.base : int, #t~ret2617.offset : int;
    var #t~mem2618 : int;
    var #t~ret2619.base : int, #t~ret2619.offset : int;
    var #t~mem2620 : int;
    var #t~ret2621.base : int, #t~ret2621.offset : int;
    var #t~ret2622 : int;
    var #t~ret2623 : int;
    var #t~ret2624 : int;
    var #t~ret2625 : int;
    var #t~ret2626 : int;
    var #t~ret2627 : int;
    var #t~ret2628 : int;
    var #t~ret2629 : int;
    var #t~ret2630 : int;
    var #t~ret2631 : int;
    var #t~ret2632 : int;
    var #t~ret2633 : int;
    var #t~ret2634 : int;
    var #t~ret2635 : int;
    var #t~ret2636 : int;
    var #t~ret2637 : int;
    var #t~ret2638 : int;
    var #t~ret2639 : int;
    var #t~nondet2640 : int;
    var #t~switch2641 : bool;
    var #t~mem2642 : int;
    var #t~mem2643 : int;
    var #t~ret2644 : int;
    var #t~mem2645 : int;
    var #t~mem2646 : int;
    var #t~ret2647 : int;
    var #t~mem2648 : int;
    var #t~mem2649 : int;
    var #t~ret2650 : int;
    var #t~mem2651 : int;
    var #t~mem2652 : int;
    var #t~ret2653 : int;
    var #t~mem2654 : int;
    var #t~mem2655 : int;
    var #t~ret2656 : int;
    var #t~mem2657 : int;
    var #t~mem2658 : int;
    var #t~ret2659 : int;
    var #t~mem2660 : int;
    var #t~ret2661 : int;
    var #t~mem2662 : int;
    var #t~ret2663 : int;
    var #t~mem2664 : int;
    var #t~ret2665 : int;
    var #t~mem2666 : int;
    var #t~mem2667 : int;
    var #t~mem2668 : int;
    var #t~ret2669 : int;
    var #t~mem2670 : int;
    var #t~mem2671 : int;
    var #t~mem2672 : int;
    var #t~ret2673 : int;
    var #t~mem2674 : int;
    var #t~mem2675 : int;
    var #t~mem2676 : int;
    var #t~ret2677 : int;
    var #t~ret2678 : int;
    var #t~ret2679 : int;
    var #t~ret2680 : int;
    var #t~ret2681 : int;
    var #t~ret2682 : int;
    var #t~ret2683 : int;
    var #t~mem2684 : int;
    var #t~mem2685 : int;
    var #t~ret2686 : int;
    var #t~mem2687 : int;
    var #t~mem2688 : int;
    var #t~ret2689 : int;
    var #t~mem2690 : int;
    var #t~mem2691 : int;
    var #t~ret2692 : int;
    var #t~mem2693 : int;
    var #t~ret2694 : int;
    var #t~mem2695 : int;
    var #t~ret2696 : int;
    var #t~mem2697 : int;
    var #t~ret2698 : int;
    var #t~mem2699 : int;
    var #t~mem2700 : int;
    var #t~ret2701 : int;
    var #t~mem2702 : int;
    var #t~mem2703 : int;
    var #t~ret2704 : int;
    var #t~mem2705 : int;
    var #t~mem2706 : int;
    var #t~ret2707 : int;
    var #t~mem2708 : int;
    var #t~mem2709 : int;
    var #t~ret2710 : int;
    var #t~mem2711 : int;
    var #t~mem2712 : int;
    var #t~ret2713 : int;
    var #t~mem2714 : int;
    var #t~mem2715 : int;
    var #t~ret2716 : int;
    var #t~ret2717 : int;
    var #t~ret2718 : int;
    var #t~ret2719 : int;
    var #t~ret2720 : int;
    var #t~ret2721 : int;
    var #t~ret2722 : int;
    var #t~ret2723 : int;
    var #t~ret2724 : int;
    var #t~ret2725 : int;
    var #t~ret2726 : int;
    var #t~ret2727 : int;
    var #t~ret2728 : int;
    var #t~ret2729 : int;
    var #t~mem2730 : int;
    var #t~ret2731 : int;
    var #t~mem2732 : int;
    var #t~ret2733 : int;
    var #t~mem2734 : int;
    var #t~ret2735 : int;
    var #t~mem2736 : int;
    var #t~ret2737 : int;
    var #t~ret2738 : int;
    var #t~ret2739 : int;
    var #t~ret2740 : int;
    var #t~ret2741 : int;
    var #t~ret2742 : int;
    var #t~ret2743 : int;
    var #t~ret2744 : int;
    var #t~ret2745 : int;
    var #t~nondet2746 : int;
    var #t~switch2747 : bool;
    var #t~ret2748 : int;
    var #t~ret2749 : ~netdev_tx_t;
    var #t~ret2750 : int;
    var #t~ret2751 : int;
    var #t~ret2752 : int;
    var #t~ret2753 : int;
    var #t~ret2754 : int;
    var #t~ret2755 : int;
    var #t~ret2756 : int;
    var #t~ret2757 : int;
    var #t~ret2758 : int;
    var #t~nondet2759 : int;
    var #t~switch2760 : bool;
    var #t~ret2761 : int;
    var #t~mem2762 : int;
    var #t~ret2763 : int;
    var #t~ret2764 : int;
    var #t~ret2765 : int;
    var #t~nondet2766 : int;
    var #t~switch2767 : bool;
    var #t~ret2768 : int;
    var #t~nondet2769 : int;
    var #t~switch2770 : bool;
    var #t~mem2771 : int;
    var #t~mem2772 : int;
    var #t~mem2773 : int;
    var #t~mem2774 : int;
    var #t~mem2775 : int;
    var #t~ret2776.base : int, #t~ret2776.offset : int;
    var #t~mem2777 : int;
    var #t~ret2778.base : int, #t~ret2778.offset : int;
    var #t~mem2779 : int;
    var #t~ret2780.base : int, #t~ret2780.offset : int;
    var #t~mem2781 : int;
    var #t~ret2782.base : int, #t~ret2782.offset : int;
    var #t~ret2783 : int;
    var #t~ret2784 : int;
    var #t~ret2785 : int;
    var #t~ret2786 : int;
    var #t~ret2787 : int;
    var #t~ret2788 : int;
    var #t~ret2789 : int;
    var #t~ret2790 : int;
    var #t~ret2791 : int;
    var #t~ret2792 : int;
    var #t~ret2793 : int;
    var #t~ret2794 : int;
    var #t~ret2795 : int;
    var #t~ret2796 : int;
    var #t~ret2797 : int;
    var #t~ret2798 : int;
    var #t~ret2799 : int;
    var #t~ret2800 : int;
    var ~#ldvarg1~1213.base : int, ~#ldvarg1~1213.offset : int;
    var ~ldvarg3~1213.base : int, ~ldvarg3~1213.offset : int;
    var ~tmp~1213.base : int, ~tmp~1213.offset : int;
    var ~ldvarg0~1213.base : int, ~ldvarg0~1213.offset : int;
    var ~tmp___0~1213.base : int, ~tmp___0~1213.offset : int;
    var ~#ldvarg2~1213.base : int, ~#ldvarg2~1213.offset : int;
    var ~ldvarg7~1213.base : int, ~ldvarg7~1213.offset : int;
    var ~tmp___1~1213.base : int, ~tmp___1~1213.offset : int;
    var ~ldvarg4~1213.base : int, ~ldvarg4~1213.offset : int;
    var ~tmp___2~1213.base : int, ~tmp___2~1213.offset : int;
    var ~#ldvarg5~1213.base : int, ~#ldvarg5~1213.offset : int;
    var ~#ldvarg6~1213.base : int, ~#ldvarg6~1213.offset : int;
    var ~ldvarg18~1213.base : int, ~ldvarg18~1213.offset : int;
    var ~tmp___3~1213.base : int, ~tmp___3~1213.offset : int;
    var ~ldvarg11~1213.base : int, ~ldvarg11~1213.offset : int;
    var ~tmp___4~1213.base : int, ~tmp___4~1213.offset : int;
    var ~#ldvarg32~1213.base : int, ~#ldvarg32~1213.offset : int;
    var ~#ldvarg31~1213.base : int, ~#ldvarg31~1213.offset : int;
    var ~#ldvarg20~1213.base : int, ~#ldvarg20~1213.offset : int;
    var ~ldvarg23~1213.base : int, ~ldvarg23~1213.offset : int;
    var ~tmp___5~1213.base : int, ~tmp___5~1213.offset : int;
    var ~ldvarg12~1213.base : int, ~ldvarg12~1213.offset : int;
    var ~tmp___6~1213.base : int, ~tmp___6~1213.offset : int;
    var ~ldvarg8~1213.base : int, ~ldvarg8~1213.offset : int;
    var ~tmp___7~1213.base : int, ~tmp___7~1213.offset : int;
    var ~ldvarg13~1213.base : int, ~ldvarg13~1213.offset : int;
    var ~tmp___8~1213.base : int, ~tmp___8~1213.offset : int;
    var ~ldvarg29~1213.base : int, ~ldvarg29~1213.offset : int;
    var ~tmp___9~1213.base : int, ~tmp___9~1213.offset : int;
    var ~#ldvarg10~1213.base : int, ~#ldvarg10~1213.offset : int;
    var ~#ldvarg9~1213.base : int, ~#ldvarg9~1213.offset : int;
    var ~#ldvarg24~1213.base : int, ~#ldvarg24~1213.offset : int;
    var ~ldvarg27~1213.base : int, ~ldvarg27~1213.offset : int;
    var ~tmp___10~1213.base : int, ~tmp___10~1213.offset : int;
    var ~#ldvarg26~1213.base : int, ~#ldvarg26~1213.offset : int;
    var ~#ldvarg35~1213.base : int, ~#ldvarg35~1213.offset : int;
    var ~ldvarg33~1213.base : int, ~ldvarg33~1213.offset : int;
    var ~tmp___11~1213.base : int, ~tmp___11~1213.offset : int;
    var ~ldvarg30~1213.base : int, ~ldvarg30~1213.offset : int;
    var ~tmp___12~1213.base : int, ~tmp___12~1213.offset : int;
    var ~#ldvarg15~1213.base : int, ~#ldvarg15~1213.offset : int;
    var ~#ldvarg16~1213.base : int, ~#ldvarg16~1213.offset : int;
    var ~#ldvarg21~1213.base : int, ~#ldvarg21~1213.offset : int;
    var ~#ldvarg25~1213.base : int, ~#ldvarg25~1213.offset : int;
    var ~#ldvarg14~1213.base : int, ~#ldvarg14~1213.offset : int;
    var ~#ldvarg17~1213.base : int, ~#ldvarg17~1213.offset : int;
    var ~ldvarg22~1213.base : int, ~ldvarg22~1213.offset : int;
    var ~tmp___13~1213.base : int, ~tmp___13~1213.offset : int;
    var ~#ldvarg19~1213.base : int, ~#ldvarg19~1213.offset : int;
    var ~#ldvarg34~1213.base : int, ~#ldvarg34~1213.offset : int;
    var ~#ldvarg28~1213.base : int, ~#ldvarg28~1213.offset : int;
    var ~ldvarg37~1213.base : int, ~ldvarg37~1213.offset : int;
    var ~tmp___14~1213.base : int, ~tmp___14~1213.offset : int;
    var ~ldvarg36~1213.base : int, ~ldvarg36~1213.offset : int;
    var ~tmp___15~1213.base : int, ~tmp___15~1213.offset : int;
    var ~ldvarg39~1213.base : int, ~ldvarg39~1213.offset : int;
    var ~tmp___16~1213.base : int, ~tmp___16~1213.offset : int;
    var ~#ldvarg38~1213.base : int, ~#ldvarg38~1213.offset : int;
    var ~#ldvarg41~1213.base : int, ~#ldvarg41~1213.offset : int;
    var ~ldvarg43~1213.base : int, ~ldvarg43~1213.offset : int;
    var ~tmp___17~1213.base : int, ~tmp___17~1213.offset : int;
    var ~#ldvarg42~1213.base : int, ~#ldvarg42~1213.offset : int;
    var ~ldvarg40~1213.base : int, ~ldvarg40~1213.offset : int;
    var ~tmp___18~1213.base : int, ~tmp___18~1213.offset : int;
    var ~tmp___19~1213 : int;
    var ~tmp___20~1213 : int;
    var ~tmp___21~1213 : int;
    var ~tmp___22~1213 : int;
    var ~tmp___23~1213 : int;
    var ~tmp___24~1213 : int;
    var ~tmp___25~1213 : int;
    var ~tmp___26~1213 : int;

  loc6:
    call ~#ldvarg1~1213.base, ~#ldvarg1~1213.offset := #Ultimate.alloc(4);
    havoc ~ldvarg3~1213.base, ~ldvarg3~1213.offset;
    havoc ~tmp~1213.base, ~tmp~1213.offset;
    havoc ~ldvarg0~1213.base, ~ldvarg0~1213.offset;
    havoc ~tmp___0~1213.base, ~tmp___0~1213.offset;
    call ~#ldvarg2~1213.base, ~#ldvarg2~1213.offset := #Ultimate.alloc(4);
    havoc ~ldvarg7~1213.base, ~ldvarg7~1213.offset;
    havoc ~tmp___1~1213.base, ~tmp___1~1213.offset;
    havoc ~ldvarg4~1213.base, ~ldvarg4~1213.offset;
    havoc ~tmp___2~1213.base, ~tmp___2~1213.offset;
    call ~#ldvarg5~1213.base, ~#ldvarg5~1213.offset := #Ultimate.alloc(4);
    call ~#ldvarg6~1213.base, ~#ldvarg6~1213.offset := #Ultimate.alloc(4);
    havoc ~ldvarg18~1213.base, ~ldvarg18~1213.offset;
    havoc ~tmp___3~1213.base, ~tmp___3~1213.offset;
    havoc ~ldvarg11~1213.base, ~ldvarg11~1213.offset;
    havoc ~tmp___4~1213.base, ~tmp___4~1213.offset;
    call ~#ldvarg32~1213.base, ~#ldvarg32~1213.offset := #Ultimate.alloc(1);
    call ~#ldvarg31~1213.base, ~#ldvarg31~1213.offset := #Ultimate.alloc(1);
    call ~#ldvarg20~1213.base, ~#ldvarg20~1213.offset := #Ultimate.alloc(1);
    havoc ~ldvarg23~1213.base, ~ldvarg23~1213.offset;
    havoc ~tmp___5~1213.base, ~tmp___5~1213.offset;
    havoc ~ldvarg12~1213.base, ~ldvarg12~1213.offset;
    havoc ~tmp___6~1213.base, ~tmp___6~1213.offset;
    havoc ~ldvarg8~1213.base, ~ldvarg8~1213.offset;
    havoc ~tmp___7~1213.base, ~tmp___7~1213.offset;
    havoc ~ldvarg13~1213.base, ~ldvarg13~1213.offset;
    havoc ~tmp___8~1213.base, ~tmp___8~1213.offset;
    havoc ~ldvarg29~1213.base, ~ldvarg29~1213.offset;
    havoc ~tmp___9~1213.base, ~tmp___9~1213.offset;
    call ~#ldvarg10~1213.base, ~#ldvarg10~1213.offset := #Ultimate.alloc(4);
    call ~#ldvarg9~1213.base, ~#ldvarg9~1213.offset := #Ultimate.alloc(2);
    call ~#ldvarg24~1213.base, ~#ldvarg24~1213.offset := #Ultimate.alloc(1);
    havoc ~ldvarg27~1213.base, ~ldvarg27~1213.offset;
    havoc ~tmp___10~1213.base, ~tmp___10~1213.offset;
    call ~#ldvarg26~1213.base, ~#ldvarg26~1213.offset := #Ultimate.alloc(1);
    call ~#ldvarg35~1213.base, ~#ldvarg35~1213.offset := #Ultimate.alloc(1);
    havoc ~ldvarg33~1213.base, ~ldvarg33~1213.offset;
    havoc ~tmp___11~1213.base, ~tmp___11~1213.offset;
    havoc ~ldvarg30~1213.base, ~ldvarg30~1213.offset;
    havoc ~tmp___12~1213.base, ~tmp___12~1213.offset;
    call ~#ldvarg15~1213.base, ~#ldvarg15~1213.offset := #Ultimate.alloc(4);
    call ~#ldvarg16~1213.base, ~#ldvarg16~1213.offset := #Ultimate.alloc(4);
    call ~#ldvarg21~1213.base, ~#ldvarg21~1213.offset := #Ultimate.alloc(1);
    call ~#ldvarg25~1213.base, ~#ldvarg25~1213.offset := #Ultimate.alloc(1);
    call ~#ldvarg14~1213.base, ~#ldvarg14~1213.offset := #Ultimate.alloc(4);
    call ~#ldvarg17~1213.base, ~#ldvarg17~1213.offset := #Ultimate.alloc(4);
    havoc ~ldvarg22~1213.base, ~ldvarg22~1213.offset;
    havoc ~tmp___13~1213.base, ~tmp___13~1213.offset;
    call ~#ldvarg19~1213.base, ~#ldvarg19~1213.offset := #Ultimate.alloc(4);
    call ~#ldvarg34~1213.base, ~#ldvarg34~1213.offset := #Ultimate.alloc(4);
    call ~#ldvarg28~1213.base, ~#ldvarg28~1213.offset := #Ultimate.alloc(4);
    havoc ~ldvarg37~1213.base, ~ldvarg37~1213.offset;
    havoc ~tmp___14~1213.base, ~tmp___14~1213.offset;
    havoc ~ldvarg36~1213.base, ~ldvarg36~1213.offset;
    havoc ~tmp___15~1213.base, ~tmp___15~1213.offset;
    havoc ~ldvarg39~1213.base, ~ldvarg39~1213.offset;
    havoc ~tmp___16~1213.base, ~tmp___16~1213.offset;
    call ~#ldvarg38~1213.base, ~#ldvarg38~1213.offset := #Ultimate.alloc(4);
    call ~#ldvarg41~1213.base, ~#ldvarg41~1213.offset := #Ultimate.alloc(4);
    havoc ~ldvarg43~1213.base, ~ldvarg43~1213.offset;
    havoc ~tmp___17~1213.base, ~tmp___17~1213.offset;
    call ~#ldvarg42~1213.base, ~#ldvarg42~1213.offset := #Ultimate.alloc(4);
    havoc ~ldvarg40~1213.base, ~ldvarg40~1213.offset;
    havoc ~tmp___18~1213.base, ~tmp___18~1213.offset;
    havoc ~tmp___19~1213;
    havoc ~tmp___20~1213;
    havoc ~tmp___21~1213;
    havoc ~tmp___22~1213;
    havoc ~tmp___23~1213;
    havoc ~tmp___24~1213;
    havoc ~tmp___25~1213;
    havoc ~tmp___26~1213;
    call #t~ret2530.base, #t~ret2530.offset := ldv_init_zalloc(1);
    ~tmp~1213.base, ~tmp~1213.offset := #t~ret2530.base, #t~ret2530.offset;
    havoc #t~ret2530.base, #t~ret2530.offset;
    ~ldvarg3~1213.base, ~ldvarg3~1213.offset := ~tmp~1213.base, ~tmp~1213.offset;
    call #t~ret2531.base, #t~ret2531.offset := ldv_init_zalloc(192);
    ~tmp___0~1213.base, ~tmp___0~1213.offset := #t~ret2531.base, #t~ret2531.offset;
    havoc #t~ret2531.base, #t~ret2531.offset;
    ~ldvarg0~1213.base, ~ldvarg0~1213.offset := ~tmp___0~1213.base, ~tmp___0~1213.offset;
    call #t~ret2532.base, #t~ret2532.offset := ldv_init_zalloc(1);
    ~tmp___1~1213.base, ~tmp___1~1213.offset := #t~ret2532.base, #t~ret2532.offset;
    havoc #t~ret2532.base, #t~ret2532.offset;
    ~ldvarg7~1213.base, ~ldvarg7~1213.offset := ~tmp___1~1213.base, ~tmp___1~1213.offset;
    call #t~ret2533.base, #t~ret2533.offset := ldv_init_zalloc(192);
    ~tmp___2~1213.base, ~tmp___2~1213.offset := #t~ret2533.base, #t~ret2533.offset;
    havoc #t~ret2533.base, #t~ret2533.offset;
    ~ldvarg4~1213.base, ~ldvarg4~1213.offset := ~tmp___2~1213.base, ~tmp___2~1213.offset;
    call #t~ret2534.base, #t~ret2534.offset := ldv_init_zalloc(1);
    ~tmp___3~1213.base, ~tmp___3~1213.offset := #t~ret2534.base, #t~ret2534.offset;
    havoc #t~ret2534.base, #t~ret2534.offset;
    ~ldvarg18~1213.base, ~ldvarg18~1213.offset := ~tmp___3~1213.base, ~tmp___3~1213.offset;
    call #t~ret2535.base, #t~ret2535.offset := ldv_init_zalloc(4);
    ~tmp___4~1213.base, ~tmp___4~1213.offset := #t~ret2535.base, #t~ret2535.offset;
    havoc #t~ret2535.base, #t~ret2535.offset;
    ~ldvarg11~1213.base, ~ldvarg11~1213.offset := ~tmp___4~1213.base, ~tmp___4~1213.offset;
    call #t~ret2536.base, #t~ret2536.offset := ldv_init_zalloc(104);
    ~tmp___5~1213.base, ~tmp___5~1213.offset := #t~ret2536.base, #t~ret2536.offset;
    havoc #t~ret2536.base, #t~ret2536.offset;
    ~ldvarg23~1213.base, ~ldvarg23~1213.offset := ~tmp___5~1213.base, ~tmp___5~1213.offset;
    call #t~ret2537.base, #t~ret2537.offset := ldv_init_zalloc(1);
    ~tmp___6~1213.base, ~tmp___6~1213.offset := #t~ret2537.base, #t~ret2537.offset;
    havoc #t~ret2537.base, #t~ret2537.offset;
    ~ldvarg12~1213.base, ~ldvarg12~1213.offset := ~tmp___6~1213.base, ~tmp___6~1213.offset;
    call #t~ret2538.base, #t~ret2538.offset := ldv_init_zalloc(128);
    ~tmp___7~1213.base, ~tmp___7~1213.offset := #t~ret2538.base, #t~ret2538.offset;
    havoc #t~ret2538.base, #t~ret2538.offset;
    ~ldvarg8~1213.base, ~ldvarg8~1213.offset := ~tmp___7~1213.base, ~tmp___7~1213.offset;
    call #t~ret2539.base, #t~ret2539.offset := ldv_init_zalloc(232);
    ~tmp___8~1213.base, ~tmp___8~1213.offset := #t~ret2539.base, #t~ret2539.offset;
    havoc #t~ret2539.base, #t~ret2539.offset;
    ~ldvarg13~1213.base, ~ldvarg13~1213.offset := ~tmp___8~1213.base, ~tmp___8~1213.offset;
    call #t~ret2540.base, #t~ret2540.offset := ldv_init_zalloc(12);
    ~tmp___9~1213.base, ~tmp___9~1213.offset := #t~ret2540.base, #t~ret2540.offset;
    havoc #t~ret2540.base, #t~ret2540.offset;
    ~ldvarg29~1213.base, ~ldvarg29~1213.offset := ~tmp___9~1213.base, ~tmp___9~1213.offset;
    call #t~ret2541.base, #t~ret2541.offset := ldv_init_zalloc(4);
    ~tmp___10~1213.base, ~tmp___10~1213.offset := #t~ret2541.base, #t~ret2541.offset;
    havoc #t~ret2541.base, #t~ret2541.offset;
    ~ldvarg27~1213.base, ~ldvarg27~1213.offset := ~tmp___10~1213.base, ~tmp___10~1213.offset;
    call #t~ret2542.base, #t~ret2542.offset := ldv_init_zalloc(1);
    ~tmp___11~1213.base, ~tmp___11~1213.offset := #t~ret2542.base, #t~ret2542.offset;
    havoc #t~ret2542.base, #t~ret2542.offset;
    ~ldvarg33~1213.base, ~ldvarg33~1213.offset := ~tmp___11~1213.base, ~tmp___11~1213.offset;
    call #t~ret2543.base, #t~ret2543.offset := ldv_init_zalloc(32);
    ~tmp___12~1213.base, ~tmp___12~1213.offset := #t~ret2543.base, #t~ret2543.offset;
    havoc #t~ret2543.base, #t~ret2543.offset;
    ~ldvarg30~1213.base, ~ldvarg30~1213.offset := ~tmp___12~1213.base, ~tmp___12~1213.offset;
    call #t~ret2544.base, #t~ret2544.offset := ldv_init_zalloc(1);
    ~tmp___13~1213.base, ~tmp___13~1213.offset := #t~ret2544.base, #t~ret2544.offset;
    havoc #t~ret2544.base, #t~ret2544.offset;
    ~ldvarg22~1213.base, ~ldvarg22~1213.offset := ~tmp___13~1213.base, ~tmp___13~1213.offset;
    call #t~ret2545.base, #t~ret2545.offset := ldv_init_zalloc(232);
    ~tmp___14~1213.base, ~tmp___14~1213.offset := #t~ret2545.base, #t~ret2545.offset;
    havoc #t~ret2545.base, #t~ret2545.offset;
    ~ldvarg37~1213.base, ~ldvarg37~1213.offset := ~tmp___14~1213.base, ~tmp___14~1213.offset;
    call #t~ret2546.base, #t~ret2546.offset := ldv_init_zalloc(1);
    ~tmp___15~1213.base, ~tmp___15~1213.offset := #t~ret2546.base, #t~ret2546.offset;
    havoc #t~ret2546.base, #t~ret2546.offset;
    ~ldvarg36~1213.base, ~ldvarg36~1213.offset := ~tmp___15~1213.base, ~tmp___15~1213.offset;
    call #t~ret2547.base, #t~ret2547.offset := ldv_init_zalloc(32);
    ~tmp___16~1213.base, ~tmp___16~1213.offset := #t~ret2547.base, #t~ret2547.offset;
    havoc #t~ret2547.base, #t~ret2547.offset;
    ~ldvarg39~1213.base, ~ldvarg39~1213.offset := ~tmp___16~1213.base, ~tmp___16~1213.offset;
    call #t~ret2548.base, #t~ret2548.offset := ldv_init_zalloc(1);
    ~tmp___17~1213.base, ~tmp___17~1213.offset := #t~ret2548.base, #t~ret2548.offset;
    havoc #t~ret2548.base, #t~ret2548.offset;
    ~ldvarg43~1213.base, ~ldvarg43~1213.offset := ~tmp___17~1213.base, ~tmp___17~1213.offset;
    call #t~ret2549.base, #t~ret2549.offset := ldv_init_zalloc(192);
    ~tmp___18~1213.base, ~tmp___18~1213.offset := #t~ret2549.base, #t~ret2549.offset;
    havoc #t~ret2549.base, #t~ret2549.offset;
    ~ldvarg40~1213.base, ~ldvarg40~1213.offset := ~tmp___18~1213.base, ~tmp___18~1213.offset;
    call ldv_initialize();
    call #t~ret2550.base, #t~ret2550.offset := ldv_memset(~#ldvarg1~1213.base, ~#ldvarg1~1213.offset, 0, 4);
    havoc #t~ret2550.base, #t~ret2550.offset;
    call #t~ret2551.base, #t~ret2551.offset := ldv_memset(~#ldvarg2~1213.base, ~#ldvarg2~1213.offset, 0, 4);
    havoc #t~ret2551.base, #t~ret2551.offset;
    call #t~ret2552.base, #t~ret2552.offset := ldv_memset(~#ldvarg5~1213.base, ~#ldvarg5~1213.offset, 0, 4);
    havoc #t~ret2552.base, #t~ret2552.offset;
    call #t~ret2553.base, #t~ret2553.offset := ldv_memset(~#ldvarg6~1213.base, ~#ldvarg6~1213.offset, 0, 4);
    havoc #t~ret2553.base, #t~ret2553.offset;
    call #t~ret2554.base, #t~ret2554.offset := ldv_memset(~#ldvarg32~1213.base, ~#ldvarg32~1213.offset, 0, 1);
    havoc #t~ret2554.base, #t~ret2554.offset;
    call #t~ret2555.base, #t~ret2555.offset := ldv_memset(~#ldvarg31~1213.base, ~#ldvarg31~1213.offset, 0, 1);
    havoc #t~ret2555.base, #t~ret2555.offset;
    call #t~ret2556.base, #t~ret2556.offset := ldv_memset(~#ldvarg20~1213.base, ~#ldvarg20~1213.offset, 0, 1);
    havoc #t~ret2556.base, #t~ret2556.offset;
    call #t~ret2557.base, #t~ret2557.offset := ldv_memset(~#ldvarg10~1213.base, ~#ldvarg10~1213.offset, 0, 4);
    havoc #t~ret2557.base, #t~ret2557.offset;
    call #t~ret2558.base, #t~ret2558.offset := ldv_memset(~#ldvarg9~1213.base, ~#ldvarg9~1213.offset, 0, 2);
    havoc #t~ret2558.base, #t~ret2558.offset;
    call #t~ret2559.base, #t~ret2559.offset := ldv_memset(~#ldvarg24~1213.base, ~#ldvarg24~1213.offset, 0, 1);
    havoc #t~ret2559.base, #t~ret2559.offset;
    call #t~ret2560.base, #t~ret2560.offset := ldv_memset(~#ldvarg26~1213.base, ~#ldvarg26~1213.offset, 0, 1);
    havoc #t~ret2560.base, #t~ret2560.offset;
    call #t~ret2561.base, #t~ret2561.offset := ldv_memset(~#ldvarg35~1213.base, ~#ldvarg35~1213.offset, 0, 1);
    havoc #t~ret2561.base, #t~ret2561.offset;
    call #t~ret2562.base, #t~ret2562.offset := ldv_memset(~#ldvarg15~1213.base, ~#ldvarg15~1213.offset, 0, 4);
    havoc #t~ret2562.base, #t~ret2562.offset;
    call #t~ret2563.base, #t~ret2563.offset := ldv_memset(~#ldvarg16~1213.base, ~#ldvarg16~1213.offset, 0, 4);
    havoc #t~ret2563.base, #t~ret2563.offset;
    call #t~ret2564.base, #t~ret2564.offset := ldv_memset(~#ldvarg21~1213.base, ~#ldvarg21~1213.offset, 0, 1);
    havoc #t~ret2564.base, #t~ret2564.offset;
    call #t~ret2565.base, #t~ret2565.offset := ldv_memset(~#ldvarg25~1213.base, ~#ldvarg25~1213.offset, 0, 1);
    havoc #t~ret2565.base, #t~ret2565.offset;
    call #t~ret2566.base, #t~ret2566.offset := ldv_memset(~#ldvarg14~1213.base, ~#ldvarg14~1213.offset, 0, 4);
    havoc #t~ret2566.base, #t~ret2566.offset;
    call #t~ret2567.base, #t~ret2567.offset := ldv_memset(~#ldvarg17~1213.base, ~#ldvarg17~1213.offset, 0, 4);
    havoc #t~ret2567.base, #t~ret2567.offset;
    call #t~ret2568.base, #t~ret2568.offset := ldv_memset(~#ldvarg19~1213.base, ~#ldvarg19~1213.offset, 0, 4);
    havoc #t~ret2568.base, #t~ret2568.offset;
    call #t~ret2569.base, #t~ret2569.offset := ldv_memset(~#ldvarg34~1213.base, ~#ldvarg34~1213.offset, 0, 4);
    havoc #t~ret2569.base, #t~ret2569.offset;
    call #t~ret2570.base, #t~ret2570.offset := ldv_memset(~#ldvarg28~1213.base, ~#ldvarg28~1213.offset, 0, 4);
    havoc #t~ret2570.base, #t~ret2570.offset;
    call #t~ret2571.base, #t~ret2571.offset := ldv_memset(~#ldvarg38~1213.base, ~#ldvarg38~1213.offset, 0, 4);
    havoc #t~ret2571.base, #t~ret2571.offset;
    call #t~ret2572.base, #t~ret2572.offset := ldv_memset(~#ldvarg41~1213.base, ~#ldvarg41~1213.offset, 0, 4);
    havoc #t~ret2572.base, #t~ret2572.offset;
    call #t~ret2573.base, #t~ret2573.offset := ldv_memset(~#ldvarg42~1213.base, ~#ldvarg42~1213.offset, 0, 4);
    havoc #t~ret2573.base, #t~ret2573.offset;
    ~ldv_state_variable_6 := 0;
    call work_init_3();
    ~ldv_state_variable_3 := 1;
    ~ldv_state_variable_7 := 0;
    ~ldv_state_variable_9 := 0;
    call work_init_2();
    ~ldv_state_variable_2 := 1;
    ~ldv_state_variable_8 := 0;
    call work_init_1();
    ~ldv_state_variable_1 := 1;
    ~ldv_state_variable_4 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_5 := 0;
    assume -2147483648 <= #t~nondet2574 && #t~nondet2574 <= 2147483647;
    ~tmp___19~1213 := #t~nondet2574;
    havoc #t~nondet2574;
    #t~switch2575 := ~tmp___19~1213 == 0;
    assume !#t~switch2575;
    #t~switch2575 := #t~switch2575 || ~tmp___19~1213 == 1;
    assume !#t~switch2575;
    #t~switch2575 := #t~switch2575 || ~tmp___19~1213 == 2;
    assume !#t~switch2575;
    #t~switch2575 := #t~switch2575 || ~tmp___19~1213 == 3;
    assume !#t~switch2575;
    #t~switch2575 := #t~switch2575 || ~tmp___19~1213 == 4;
    assume #t~switch2575;
    assume ~ldv_state_variable_2 != 0;
    call invoke_work_2();
    return;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_9, ~ldv_state_variable_2, ~ldv_state_variable_8, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_1, ~ldv_retval_2, ~ldv_retval_4, ~ldv_retval_3, ~usb_counter, ~ldv_retval_7, ~ldv_retval_6, ~ldv_retval_5, ~ldv_retval_8, ~ldv_retval_9, #valid, #length, ~ldv_work_3_0, ~ldv_work_3_1, ~ldv_work_3_2, ~ldv_work_3_3, ~ldv_work_2_0, ~ldv_work_2_1, ~ldv_work_2_2, ~ldv_work_2_3, ~ldv_work_1_0, ~ldv_work_1_1, ~ldv_work_1_2, ~ldv_work_1_3, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~bcm4320a_info_group0.base, ~bcm4320a_info_group0.offset, ~bcm4320a_info_group2.base, ~bcm4320a_info_group2.offset, ~bcm4320a_info_group1.base, ~bcm4320a_info_group1.offset, ~bcm4320b_info_group0.base, ~bcm4320b_info_group0.offset, ~bcm4320b_info_group2.base, ~bcm4320b_info_group2.offset, ~bcm4320b_info_group1.base, ~bcm4320b_info_group1.offset, ~rndis_wlan_info_group0.base, ~rndis_wlan_info_group0.offset, ~rndis_wlan_info_group2.base, ~rndis_wlan_info_group2.offset, ~rndis_wlan_info_group1.base, ~rndis_wlan_info_group1.offset, ~rndis_wlan_netdev_ops_group1.base, ~rndis_wlan_netdev_ops_group1.offset, ~rndis_config_ops_group0.base, ~rndis_config_ops_group0.offset, ~rndis_config_ops_group2.base, ~rndis_config_ops_group2.offset, ~rndis_config_ops_group4.base, ~rndis_config_ops_group4.offset, ~rndis_config_ops_group3.base, ~rndis_config_ops_group3.offset, ~rndis_config_ops_group1.base, ~rndis_config_ops_group1.offset, ~ldv_work_struct_3_0.base, ~ldv_work_struct_3_0.offset, ~ldv_work_struct_3_1.base, ~ldv_work_struct_3_1.offset, ~ldv_work_struct_3_2.base, ~ldv_work_struct_3_2.offset, ~ldv_work_struct_3_3.base, ~ldv_work_struct_3_3.offset, ~ldv_mutex_command_lock_of_rndis_wlan_private, ~rndis_wlan_driver_group1.base, ~rndis_wlan_driver_group1.offset;

implementation work_init_1() returns (){
  loc7:
    ~ldv_work_1_0 := 0;
    ~ldv_work_1_1 := 0;
    ~ldv_work_1_2 := 0;
    ~ldv_work_1_3 := 0;
    assume true;
    return;
}

procedure work_init_1() returns ();
modifies ~ldv_work_1_0, ~ldv_work_1_1, ~ldv_work_1_2, ~ldv_work_1_3;

implementation work_init_2() returns (){
  loc8:
    ~ldv_work_2_0 := 0;
    ~ldv_work_2_1 := 0;
    ~ldv_work_2_2 := 0;
    ~ldv_work_2_3 := 0;
    assume true;
    return;
}

procedure work_init_2() returns ();
modifies ~ldv_work_2_0, ~ldv_work_2_1, ~ldv_work_2_2, ~ldv_work_2_3;

implementation ldv_mutex_lock_command_lock_of_rndis_wlan_private(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc9:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    assume !(~ldv_mutex_command_lock_of_rndis_wlan_private != 1);
    ~ldv_mutex_command_lock_of_rndis_wlan_private := 2;
    assume true;
    return;
}

procedure ldv_mutex_lock_command_lock_of_rndis_wlan_private(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ~ldv_mutex_command_lock_of_rndis_wlan_private;

implementation ULTIMATE.init() returns (){
    var #t~nondet2502.base : int, #t~nondet2502.offset : int;
    var #t~nondet2503.base : int, #t~nondet2503.offset : int;
    var #t~nondet2504.base : int, #t~nondet2504.offset : int;
    var #t~nondet2505.base : int, #t~nondet2505.offset : int;
    var #t~union2816.__padding : [int]int, #t~union2816.dep_map.key.base : int, #t~union2816.dep_map.key.offset : int, #t~union2816.dep_map.class_cache.base : [int]int, #t~union2816.dep_map.class_cache.offset : [int]int, #t~union2816.dep_map.name.base : int, #t~union2816.dep_map.name.offset : int, #t~union2816.dep_map.cpu : int, #t~union2816.dep_map.ip : int;

  loc10:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_state_variable_8 := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_state_variable_5 := 0;
    ~ldv_work_1_1 := 0;
    ~ldv_work_3_2 := 0;
    ~ldv_work_3_0 := 0;
    ~ldv_state_variable_9 := 0;
    ~ref_cnt := 0;
    ~ldv_work_3_3 := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_work_1_3 := 0;
    ~ldv_state_variable_6 := 0;
    ~ldv_work_3_1 := 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_work_2_0 := 0;
    ~usb_counter := 0;
    ~ldv_work_1_2 := 0;
    ~ldv_work_2_2 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_work_1_0 := 0;
    ~ldv_work_2_3 := 0;
    ~ldv_state_variable_4 := 0;
    ~ldv_work_2_1 := 0;
    ~modparam_country := ~modparam_country[0 := 69];
    ~modparam_country := ~modparam_country[1 := 85];
    ~modparam_country := ~modparam_country[2 := 0];
    ~modparam_country := ~modparam_country[3 := 0];
    ~modparam_frameburst := 1;
    ~modparam_afterburner := 0;
    ~modparam_power_save := 0;
    ~modparam_power_output := 3;
    ~modparam_roamtrigger := -70;
    ~modparam_roamdelta := 1;
    ~modparam_workaround_interval := 0;
    call ~#rndis_wiphy_privid.base, ~#rndis_wiphy_privid.offset := #Ultimate.alloc(8);
    call write~$Pointer$(~#rndis_wiphy_privid.base, ~#rndis_wiphy_privid.offset, ~#rndis_wiphy_privid.base, ~#rndis_wiphy_privid.offset, 8);
    ~ldv_retval_2 := 0;
    ~ldv_retval_5 := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_6 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_retval_9 := 0;
    ~ldv_retval_4 := 0;
    ~ldv_retval_8 := 0;
    ~ldv_retval_3 := 0;
    ~ldv_retval_7 := 0;
    ~ldv_mutex_command_lock_of_rndis_wlan_private := 1;
    ~ldv_mutex_i_mutex_of_inode := 1;
    ~ldv_mutex_lock := 1;
    ~ldv_mutex_mutex_of_device := 1;
    ~bcm4320b_info_group1.base, ~bcm4320b_info_group1.offset := 0, 0;
    ~rndis_wlan_info_group1.base, ~rndis_wlan_info_group1.offset := 0, 0;
    ~bcm4320a_info_group2.base, ~bcm4320a_info_group2.offset := 0, 0;
    ~ldv_work_struct_3_1.base, ~ldv_work_struct_3_1.offset := 0, 0;
    ~ldv_work_struct_2_0.base, ~ldv_work_struct_2_0.offset := 0, 0;
    ~rndis_wlan_driver_group1.base, ~rndis_wlan_driver_group1.offset := 0, 0;
    ~rndis_config_ops_group0.base, ~rndis_config_ops_group0.offset := 0, 0;
    ~rndis_wlan_info_group2.base, ~rndis_wlan_info_group2.offset := 0, 0;
    ~ldv_work_struct_3_3.base, ~ldv_work_struct_3_3.offset := 0, 0;
    ~ldv_work_struct_1_0.base, ~ldv_work_struct_1_0.offset := 0, 0;
    ~rndis_config_ops_group4.base, ~rndis_config_ops_group4.offset := 0, 0;
    ~ldv_work_struct_3_2.base, ~ldv_work_struct_3_2.offset := 0, 0;
    ~rndis_wlan_netdev_ops_group1.base, ~rndis_wlan_netdev_ops_group1.offset := 0, 0;
    ~bcm4320b_info_group0.base, ~bcm4320b_info_group0.offset := 0, 0;
    ~rndis_wlan_info_group0.base, ~rndis_wlan_info_group0.offset := 0, 0;
    ~rndis_config_ops_group1.base, ~rndis_config_ops_group1.offset := 0, 0;
    ~ldv_work_struct_3_0.base, ~ldv_work_struct_3_0.offset := 0, 0;
    ~rndis_config_ops_group3.base, ~rndis_config_ops_group3.offset := 0, 0;
    ~bcm4320a_info_group0.base, ~bcm4320a_info_group0.offset := 0, 0;
    ~rndis_config_ops_group2.base, ~rndis_config_ops_group2.offset := 0, 0;
    ~bcm4320b_info_group2.base, ~bcm4320b_info_group2.offset := 0, 0;
    ~bcm4320a_info_group1.base, ~bcm4320a_info_group1.offset := 0, 0;
    call ~#rndis_channels.base, ~#rndis_channels.offset := #Ultimate.alloc(742);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 0, 4);
    call write~int(2412, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 0 + 49, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 0, 4);
    call write~int(2417, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 53 + 49, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 0, 4);
    call write~int(2422, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 106 + 49, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 0, 4);
    call write~int(2427, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 159 + 49, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 0, 4);
    call write~int(2432, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 212 + 49, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 0, 4);
    call write~int(2437, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 265 + 49, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 0, 4);
    call write~int(2442, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 318 + 49, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 0, 4);
    call write~int(2447, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 371 + 49, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 0, 4);
    call write~int(2452, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 424 + 49, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 0, 4);
    call write~int(2457, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 477 + 49, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 0, 4);
    call write~int(2462, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 530 + 49, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 0, 4);
    call write~int(2467, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 583 + 49, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 0, 4);
    call write~int(2472, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 636 + 49, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 0, 4);
    call write~int(2484, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 4, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 6, 2);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 8, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 12, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 16, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 20, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 24, 1);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 25, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 29, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 33, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 37, 4);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 41, 8);
    call write~int(0, ~#rndis_channels.base, ~#rndis_channels.offset + 689 + 49, 4);
    call ~#rndis_rates.base, ~#rndis_rates.offset := #Ultimate.alloc(120);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 0 + 0, 4);
    call write~int(10, ~#rndis_rates.base, ~#rndis_rates.offset + 0 + 4, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 0 + 6, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 0 + 8, 2);
    call write~int(1, ~#rndis_rates.base, ~#rndis_rates.offset + 10 + 0, 4);
    call write~int(20, ~#rndis_rates.base, ~#rndis_rates.offset + 10 + 4, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 10 + 6, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 10 + 8, 2);
    call write~int(1, ~#rndis_rates.base, ~#rndis_rates.offset + 20 + 0, 4);
    call write~int(55, ~#rndis_rates.base, ~#rndis_rates.offset + 20 + 4, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 20 + 6, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 20 + 8, 2);
    call write~int(1, ~#rndis_rates.base, ~#rndis_rates.offset + 30 + 0, 4);
    call write~int(110, ~#rndis_rates.base, ~#rndis_rates.offset + 30 + 4, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 30 + 6, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 30 + 8, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 40 + 0, 4);
    call write~int(60, ~#rndis_rates.base, ~#rndis_rates.offset + 40 + 4, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 40 + 6, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 40 + 8, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 50 + 0, 4);
    call write~int(90, ~#rndis_rates.base, ~#rndis_rates.offset + 50 + 4, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 50 + 6, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 50 + 8, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 60 + 0, 4);
    call write~int(120, ~#rndis_rates.base, ~#rndis_rates.offset + 60 + 4, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 60 + 6, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 60 + 8, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 70 + 0, 4);
    call write~int(180, ~#rndis_rates.base, ~#rndis_rates.offset + 70 + 4, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 70 + 6, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 70 + 8, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 80 + 0, 4);
    call write~int(240, ~#rndis_rates.base, ~#rndis_rates.offset + 80 + 4, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 80 + 6, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 80 + 8, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 90 + 0, 4);
    call write~int(360, ~#rndis_rates.base, ~#rndis_rates.offset + 90 + 4, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 90 + 6, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 90 + 8, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 100 + 0, 4);
    call write~int(480, ~#rndis_rates.base, ~#rndis_rates.offset + 100 + 4, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 100 + 6, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 100 + 8, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 110 + 0, 4);
    call write~int(540, ~#rndis_rates.base, ~#rndis_rates.offset + 110 + 4, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 110 + 6, 2);
    call write~int(0, ~#rndis_rates.base, ~#rndis_rates.offset + 110 + 8, 2);
    call ~#rndis_cipher_suites.base, ~#rndis_cipher_suites.offset := #Ultimate.alloc(16);
    call write~int(1027073, ~#rndis_cipher_suites.base, ~#rndis_cipher_suites.offset + 0, 4);
    call write~int(1027077, ~#rndis_cipher_suites.base, ~#rndis_cipher_suites.offset + 4, 4);
    call write~int(1027074, ~#rndis_cipher_suites.base, ~#rndis_cipher_suites.offset + 8, 4);
    call write~int(1027076, ~#rndis_cipher_suites.base, ~#rndis_cipher_suites.offset + 12, 4);
    call ~#rndis_config_ops.base, ~#rndis_config_ops.offset := #Ultimate.alloc(728);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 32, 8);
    call write~$Pointer$(#funAddr~rndis_change_virtual_intf.base, #funAddr~rndis_change_virtual_intf.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 40, 8);
    call write~$Pointer$(#funAddr~rndis_add_key.base, #funAddr~rndis_add_key.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~rndis_del_key.base, #funAddr~rndis_del_key.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 64, 8);
    call write~$Pointer$(#funAddr~rndis_set_default_key.base, #funAddr~rndis_set_default_key.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 128, 8);
    call write~$Pointer$(#funAddr~rndis_get_station.base, #funAddr~rndis_get_station.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 136, 8);
    call write~$Pointer$(#funAddr~rndis_dump_station.base, #funAddr~rndis_dump_station.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 280, 8);
    call write~$Pointer$(#funAddr~rndis_scan.base, #funAddr~rndis_scan.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 320, 8);
    call write~$Pointer$(#funAddr~rndis_connect.base, #funAddr~rndis_connect.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 328, 8);
    call write~$Pointer$(#funAddr~rndis_disconnect.base, #funAddr~rndis_disconnect.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 336, 8);
    call write~$Pointer$(#funAddr~rndis_join_ibss.base, #funAddr~rndis_join_ibss.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 344, 8);
    call write~$Pointer$(#funAddr~rndis_leave_ibss.base, #funAddr~rndis_leave_ibss.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 360, 8);
    call write~$Pointer$(#funAddr~rndis_set_wiphy_params.base, #funAddr~rndis_set_wiphy_params.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 368, 8);
    call write~$Pointer$(#funAddr~rndis_set_tx_power.base, #funAddr~rndis_set_tx_power.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 376, 8);
    call write~$Pointer$(#funAddr~rndis_get_tx_power.base, #funAddr~rndis_get_tx_power.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 408, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 416, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 424, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 432, 8);
    call write~$Pointer$(#funAddr~rndis_set_pmksa.base, #funAddr~rndis_set_pmksa.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 440, 8);
    call write~$Pointer$(#funAddr~rndis_del_pmksa.base, #funAddr~rndis_del_pmksa.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 448, 8);
    call write~$Pointer$(#funAddr~rndis_flush_pmksa.base, #funAddr~rndis_flush_pmksa.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 464, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 472, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 480, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 488, 8);
    call write~$Pointer$(#funAddr~rndis_set_power_mgmt.base, #funAddr~rndis_set_power_mgmt.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 496, 8);
    call write~$Pointer$(#funAddr~rndis_set_cqm_rssi_config.base, #funAddr~rndis_set_cqm_rssi_config.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 504, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 512, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 520, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 528, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 536, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 544, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 552, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 560, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 568, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 576, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 584, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 592, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 600, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 608, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 616, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 624, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 632, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 640, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 648, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 656, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 664, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 672, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 680, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 688, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 696, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 704, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 712, 8);
    call write~$Pointer$(0, 0, ~#rndis_config_ops.base, ~#rndis_config_ops.offset + 720, 8);
    call ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset := #Ultimate.alloc(528);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~usbnet_open.base, #funAddr~usbnet_open.offset, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~usbnet_stop.base, #funAddr~usbnet_stop.offset, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~usbnet_start_xmit.base, #funAddr~usbnet_start_xmit.offset, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~rndis_wlan_set_multicast_list.base, #funAddr~rndis_wlan_set_multicast_list.offset, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~eth_mac_addr.base, #funAddr~eth_mac_addr.offset, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 64, 8);
    call write~$Pointer$(#funAddr~eth_validate_addr.base, #funAddr~eth_validate_addr.offset, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 104, 8);
    call write~$Pointer$(#funAddr~usbnet_tx_timeout.base, #funAddr~usbnet_tx_timeout.offset, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 408, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 416, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 424, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 432, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 440, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 448, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 464, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 472, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 480, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 488, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 496, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 504, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 512, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset + 520, 8);
    call ~#bcm4320b_info.base, ~#bcm4320b_info.offset := #Ultimate.alloc(140);
    call #t~nondet2502.base, #t~nondet2502.offset := #Ultimate.alloc(38);
    call write~$Pointer$(#t~nondet2502.base, #t~nondet2502.offset, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 0, 8);
    call write~int(408, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 8, 4);
    call write~$Pointer$(#funAddr~rndis_wlan_bind.base, #funAddr~rndis_wlan_bind.offset, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 12, 8);
    call write~$Pointer$(#funAddr~rndis_wlan_unbind.base, #funAddr~rndis_wlan_unbind.offset, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 20, 8);
    call write~$Pointer$(#funAddr~rndis_wlan_reset.base, #funAddr~rndis_wlan_reset.offset, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 28, 8);
    call write~$Pointer$(#funAddr~rndis_wlan_stop.base, #funAddr~rndis_wlan_stop.offset, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 36, 8);
    call write~$Pointer$(0, 0, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 44, 8);
    call write~$Pointer$(0, 0, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 52, 8);
    call write~$Pointer$(#funAddr~rndis_status.base, #funAddr~rndis_status.offset, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 60, 8);
    call write~$Pointer$(0, 0, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 68, 8);
    call write~$Pointer$(#funAddr~rndis_rx_fixup.base, #funAddr~rndis_rx_fixup.offset, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 76, 8);
    call write~$Pointer$(#funAddr~rndis_tx_fixup.base, #funAddr~rndis_tx_fixup.offset, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 84, 8);
    call write~$Pointer$(0, 0, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 92, 8);
    call write~$Pointer$(#funAddr~bcm4320b_early_init.base, #funAddr~bcm4320b_early_init.offset, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 100, 8);
    call write~$Pointer$(#funAddr~rndis_wlan_indication.base, #funAddr~rndis_wlan_indication.offset, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 108, 8);
    call write~$Pointer$(0, 0, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 116, 8);
    call write~int(0, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 124, 4);
    call write~int(0, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 128, 4);
    call write~int(0, ~#bcm4320b_info.base, ~#bcm4320b_info.offset + 132, 8);
    havoc #t~nondet2502.base, #t~nondet2502.offset;
    call ~#bcm4320a_info.base, ~#bcm4320a_info.offset := #Ultimate.alloc(140);
    call #t~nondet2503.base, #t~nondet2503.offset := #Ultimate.alloc(38);
    call write~$Pointer$(#t~nondet2503.base, #t~nondet2503.offset, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 0, 8);
    call write~int(408, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 8, 4);
    call write~$Pointer$(#funAddr~rndis_wlan_bind.base, #funAddr~rndis_wlan_bind.offset, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 12, 8);
    call write~$Pointer$(#funAddr~rndis_wlan_unbind.base, #funAddr~rndis_wlan_unbind.offset, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 20, 8);
    call write~$Pointer$(#funAddr~rndis_wlan_reset.base, #funAddr~rndis_wlan_reset.offset, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 28, 8);
    call write~$Pointer$(#funAddr~rndis_wlan_stop.base, #funAddr~rndis_wlan_stop.offset, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 36, 8);
    call write~$Pointer$(0, 0, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 44, 8);
    call write~$Pointer$(0, 0, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 52, 8);
    call write~$Pointer$(#funAddr~rndis_status.base, #funAddr~rndis_status.offset, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 60, 8);
    call write~$Pointer$(0, 0, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 68, 8);
    call write~$Pointer$(#funAddr~rndis_rx_fixup.base, #funAddr~rndis_rx_fixup.offset, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 76, 8);
    call write~$Pointer$(#funAddr~rndis_tx_fixup.base, #funAddr~rndis_tx_fixup.offset, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 84, 8);
    call write~$Pointer$(0, 0, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 92, 8);
    call write~$Pointer$(#funAddr~bcm4320a_early_init.base, #funAddr~bcm4320a_early_init.offset, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 100, 8);
    call write~$Pointer$(#funAddr~rndis_wlan_indication.base, #funAddr~rndis_wlan_indication.offset, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 108, 8);
    call write~$Pointer$(0, 0, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 116, 8);
    call write~int(0, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 124, 4);
    call write~int(0, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 128, 4);
    call write~int(0, ~#bcm4320a_info.base, ~#bcm4320a_info.offset + 132, 8);
    havoc #t~nondet2503.base, #t~nondet2503.offset;
    call ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset := #Ultimate.alloc(140);
    call #t~nondet2504.base, #t~nondet2504.offset := #Ultimate.alloc(22);
    call write~$Pointer$(#t~nondet2504.base, #t~nondet2504.offset, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 0, 8);
    call write~int(408, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 8, 4);
    call write~$Pointer$(#funAddr~rndis_wlan_bind.base, #funAddr~rndis_wlan_bind.offset, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 12, 8);
    call write~$Pointer$(#funAddr~rndis_wlan_unbind.base, #funAddr~rndis_wlan_unbind.offset, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 20, 8);
    call write~$Pointer$(#funAddr~rndis_wlan_reset.base, #funAddr~rndis_wlan_reset.offset, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 28, 8);
    call write~$Pointer$(#funAddr~rndis_wlan_stop.base, #funAddr~rndis_wlan_stop.offset, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 36, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 44, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 52, 8);
    call write~$Pointer$(#funAddr~rndis_status.base, #funAddr~rndis_status.offset, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 60, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 68, 8);
    call write~$Pointer$(#funAddr~rndis_rx_fixup.base, #funAddr~rndis_rx_fixup.offset, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 76, 8);
    call write~$Pointer$(#funAddr~rndis_tx_fixup.base, #funAddr~rndis_tx_fixup.offset, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 84, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 92, 8);
    call write~$Pointer$(#funAddr~unknown_early_init.base, #funAddr~unknown_early_init.offset, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 100, 8);
    call write~$Pointer$(#funAddr~rndis_wlan_indication.base, #funAddr~rndis_wlan_indication.offset, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 108, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 116, 8);
    call write~int(0, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 124, 4);
    call write~int(0, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 128, 4);
    call write~int(0, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset + 132, 8);
    havoc #t~nondet2504.base, #t~nondet2504.offset;
    call ~#products.base, ~#products.offset := #Ultimate.alloc(375);
    call write~int(899, ~#products.base, ~#products.offset + 0 + 0, 2);
    call write~int(1041, ~#products.base, ~#products.offset + 0 + 2, 2);
    call write~int(188, ~#products.base, ~#products.offset + 0 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 0 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 0 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 0 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 0 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 0 + 12, 1);
    call write~int(2, ~#products.base, ~#products.offset + 0 + 13, 1);
    call write~int(2, ~#products.base, ~#products.offset + 0 + 14, 1);
    call write~int(255, ~#products.base, ~#products.offset + 0 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 0 + 16, 1);
    call write~int(~#bcm4320b_info.base + ~#bcm4320b_info.offset, ~#products.base, ~#products.offset + 0 + 17, 8);
    call write~int(899, ~#products.base, ~#products.offset + 25 + 0, 2);
    call write~int(2991, ~#products.base, ~#products.offset + 25 + 2, 2);
    call write~int(283, ~#products.base, ~#products.offset + 25 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 25 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 25 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 25 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 25 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 25 + 12, 1);
    call write~int(2, ~#products.base, ~#products.offset + 25 + 13, 1);
    call write~int(2, ~#products.base, ~#products.offset + 25 + 14, 1);
    call write~int(255, ~#products.base, ~#products.offset + 25 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 25 + 16, 1);
    call write~int(~#bcm4320b_info.base + ~#bcm4320b_info.offset, ~#products.base, ~#products.offset + 25 + 17, 8);
    call write~int(899, ~#products.base, ~#products.offset + 50 + 0, 2);
    call write~int(1293, ~#products.base, ~#products.offset + 50 + 2, 2);
    call write~int(283, ~#products.base, ~#products.offset + 50 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 50 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 50 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 50 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 50 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 50 + 12, 1);
    call write~int(2, ~#products.base, ~#products.offset + 50 + 13, 1);
    call write~int(2, ~#products.base, ~#products.offset + 50 + 14, 1);
    call write~int(255, ~#products.base, ~#products.offset + 50 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 50 + 16, 1);
    call write~int(~#bcm4320b_info.base + ~#bcm4320b_info.offset, ~#products.base, ~#products.offset + 50 + 17, 8);
    call write~int(899, ~#products.base, ~#products.offset + 75 + 0, 2);
    call write~int(6041, ~#products.base, ~#products.offset + 75 + 2, 2);
    call write~int(283, ~#products.base, ~#products.offset + 75 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 75 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 75 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 75 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 75 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 75 + 12, 1);
    call write~int(2, ~#products.base, ~#products.offset + 75 + 13, 1);
    call write~int(2, ~#products.base, ~#products.offset + 75 + 14, 1);
    call write~int(255, ~#products.base, ~#products.offset + 75 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 75 + 16, 1);
    call write~int(~#bcm4320b_info.base + ~#bcm4320b_info.offset, ~#products.base, ~#products.offset + 75 + 17, 8);
    call write~int(899, ~#products.base, ~#products.offset + 100 + 0, 2);
    call write~int(5041, ~#products.base, ~#products.offset + 100 + 2, 2);
    call write~int(20, ~#products.base, ~#products.offset + 100 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 100 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 100 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 100 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 100 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 100 + 12, 1);
    call write~int(2, ~#products.base, ~#products.offset + 100 + 13, 1);
    call write~int(2, ~#products.base, ~#products.offset + 100 + 14, 1);
    call write~int(255, ~#products.base, ~#products.offset + 100 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 100 + 16, 1);
    call write~int(~#bcm4320b_info.base + ~#bcm4320b_info.offset, ~#products.base, ~#products.offset + 100 + 17, 8);
    call write~int(899, ~#products.base, ~#products.offset + 125 + 0, 2);
    call write~int(5041, ~#products.base, ~#products.offset + 125 + 2, 2);
    call write~int(38, ~#products.base, ~#products.offset + 125 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 125 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 125 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 125 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 125 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 125 + 12, 1);
    call write~int(2, ~#products.base, ~#products.offset + 125 + 13, 1);
    call write~int(2, ~#products.base, ~#products.offset + 125 + 14, 1);
    call write~int(255, ~#products.base, ~#products.offset + 125 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 125 + 16, 1);
    call write~int(~#bcm4320b_info.base + ~#bcm4320b_info.offset, ~#products.base, ~#products.offset + 125 + 17, 8);
    call write~int(899, ~#products.base, ~#products.offset + 150 + 0, 2);
    call write~int(2821, ~#products.base, ~#products.offset + 150 + 2, 2);
    call write~int(5911, ~#products.base, ~#products.offset + 150 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 150 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 150 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 150 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 150 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 150 + 12, 1);
    call write~int(2, ~#products.base, ~#products.offset + 150 + 13, 1);
    call write~int(2, ~#products.base, ~#products.offset + 150 + 14, 1);
    call write~int(255, ~#products.base, ~#products.offset + 150 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 150 + 16, 1);
    call write~int(~#bcm4320b_info.base + ~#bcm4320b_info.offset, ~#products.base, ~#products.offset + 150 + 17, 8);
    call write~int(899, ~#products.base, ~#products.offset + 175 + 0, 2);
    call write~int(2652, ~#products.base, ~#products.offset + 175 + 2, 2);
    call write~int(53531, ~#products.base, ~#products.offset + 175 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 175 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 175 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 175 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 175 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 175 + 12, 1);
    call write~int(2, ~#products.base, ~#products.offset + 175 + 13, 1);
    call write~int(2, ~#products.base, ~#products.offset + 175 + 14, 1);
    call write~int(255, ~#products.base, ~#products.offset + 175 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 175 + 16, 1);
    call write~int(~#bcm4320b_info.base + ~#bcm4320b_info.offset, ~#products.base, ~#products.offset + 175 + 17, 8);
    call write~int(899, ~#products.base, ~#products.offset + 200 + 0, 2);
    call write~int(5776, ~#products.base, ~#products.offset + 200 + 2, 2);
    call write~int(1813, ~#products.base, ~#products.offset + 200 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 200 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 200 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 200 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 200 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 200 + 12, 1);
    call write~int(2, ~#products.base, ~#products.offset + 200 + 13, 1);
    call write~int(2, ~#products.base, ~#products.offset + 200 + 14, 1);
    call write~int(255, ~#products.base, ~#products.offset + 200 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 200 + 16, 1);
    call write~int(~#bcm4320b_info.base + ~#bcm4320b_info.offset, ~#products.base, ~#products.offset + 200 + 17, 8);
    call write~int(899, ~#products.base, ~#products.offset + 225 + 0, 2);
    call write~int(5041, ~#products.base, ~#products.offset + 225 + 2, 2);
    call write~int(14, ~#products.base, ~#products.offset + 225 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 225 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 225 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 225 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 225 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 225 + 12, 1);
    call write~int(2, ~#products.base, ~#products.offset + 225 + 13, 1);
    call write~int(2, ~#products.base, ~#products.offset + 225 + 14, 1);
    call write~int(255, ~#products.base, ~#products.offset + 225 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 225 + 16, 1);
    call write~int(~#bcm4320a_info.base + ~#bcm4320a_info.offset, ~#products.base, ~#products.offset + 225 + 17, 8);
    call write~int(899, ~#products.base, ~#products.offset + 250 + 0, 2);
    call write~int(2991, ~#products.base, ~#products.offset + 250 + 2, 2);
    call write~int(273, ~#products.base, ~#products.offset + 250 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 250 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 250 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 250 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 250 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 250 + 12, 1);
    call write~int(2, ~#products.base, ~#products.offset + 250 + 13, 1);
    call write~int(2, ~#products.base, ~#products.offset + 250 + 14, 1);
    call write~int(255, ~#products.base, ~#products.offset + 250 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 250 + 16, 1);
    call write~int(~#bcm4320a_info.base + ~#bcm4320a_info.offset, ~#products.base, ~#products.offset + 250 + 17, 8);
    call write~int(899, ~#products.base, ~#products.offset + 275 + 0, 2);
    call write~int(1041, ~#products.base, ~#products.offset + 275 + 2, 2);
    call write~int(75, ~#products.base, ~#products.offset + 275 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 275 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 275 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 275 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 275 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 275 + 12, 1);
    call write~int(2, ~#products.base, ~#products.offset + 275 + 13, 1);
    call write~int(2, ~#products.base, ~#products.offset + 275 + 14, 1);
    call write~int(255, ~#products.base, ~#products.offset + 275 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 275 + 16, 1);
    call write~int(~#bcm4320a_info.base + ~#bcm4320a_info.offset, ~#products.base, ~#products.offset + 275 + 17, 8);
    call write~int(896, ~#products.base, ~#products.offset + 300 + 0, 2);
    call write~int(0, ~#products.base, ~#products.offset + 300 + 2, 2);
    call write~int(0, ~#products.base, ~#products.offset + 300 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 300 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 300 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 300 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 300 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 300 + 12, 1);
    call write~int(2, ~#products.base, ~#products.offset + 300 + 13, 1);
    call write~int(2, ~#products.base, ~#products.offset + 300 + 14, 1);
    call write~int(255, ~#products.base, ~#products.offset + 300 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 300 + 16, 1);
    call write~int(~#rndis_wlan_info.base + ~#rndis_wlan_info.offset, ~#products.base, ~#products.offset + 300 + 17, 8);
    call write~int(896, ~#products.base, ~#products.offset + 325 + 0, 2);
    call write~int(0, ~#products.base, ~#products.offset + 325 + 2, 2);
    call write~int(0, ~#products.base, ~#products.offset + 325 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 325 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 325 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 325 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 325 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 325 + 12, 1);
    call write~int(239, ~#products.base, ~#products.offset + 325 + 13, 1);
    call write~int(1, ~#products.base, ~#products.offset + 325 + 14, 1);
    call write~int(1, ~#products.base, ~#products.offset + 325 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 325 + 16, 1);
    call write~int(~#rndis_wlan_info.base + ~#rndis_wlan_info.offset, ~#products.base, ~#products.offset + 325 + 17, 8);
    call write~int(0, ~#products.base, ~#products.offset + 350 + 0, 2);
    call write~int(0, ~#products.base, ~#products.offset + 350 + 2, 2);
    call write~int(0, ~#products.base, ~#products.offset + 350 + 4, 2);
    call write~int(0, ~#products.base, ~#products.offset + 350 + 6, 2);
    call write~int(0, ~#products.base, ~#products.offset + 350 + 8, 2);
    call write~int(0, ~#products.base, ~#products.offset + 350 + 10, 1);
    call write~int(0, ~#products.base, ~#products.offset + 350 + 11, 1);
    call write~int(0, ~#products.base, ~#products.offset + 350 + 12, 1);
    call write~int(0, ~#products.base, ~#products.offset + 350 + 13, 1);
    call write~int(0, ~#products.base, ~#products.offset + 350 + 14, 1);
    call write~int(0, ~#products.base, ~#products.offset + 350 + 15, 1);
    call write~int(0, ~#products.base, ~#products.offset + 350 + 16, 1);
    call write~int(0, ~#products.base, ~#products.offset + 350 + 17, 8);
    call ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset := #Ultimate.alloc(289);
    call #t~nondet2505.base, #t~nondet2505.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet2505.base, #t~nondet2505.offset, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 0, 8);
    call write~$Pointer$(#funAddr~usbnet_probe.base, #funAddr~usbnet_probe.offset, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 8, 8);
    call write~$Pointer$(#funAddr~usbnet_disconnect.base, #funAddr~usbnet_disconnect.offset, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 24, 8);
    call write~$Pointer$(#funAddr~usbnet_suspend.base, #funAddr~usbnet_suspend.offset, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 32, 8);
    call write~$Pointer$(#funAddr~usbnet_resume.base, #funAddr~usbnet_resume.offset, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 64, 8);
    call write~$Pointer$(~#products.base, ~#products.offset, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 72, 8);
    call write~int(0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union2816.__padding[0], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union2816.__padding[1], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union2816.__padding[2], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[3], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[4], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[5], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[6], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[7], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[8], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[9], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[10], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[11], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[12], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[13], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[14], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[15], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[16], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[17], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[18], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[19], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[20], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[21], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[22], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union2816.__padding[23], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union2816.dep_map.key.base, #t~union2816.dep_map.key.offset, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union2816.dep_map.class_cache.base[0], #t~union2816.dep_map.class_cache.offset[0], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union2816.dep_map.class_cache.base[1], #t~union2816.dep_map.class_cache.offset[1], ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union2816.dep_map.name.base, #t~union2816.dep_map.name.offset, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union2816.dep_map.cpu, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union2816.dep_map.ip, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 80 + 68 + 8, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 16, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 24, 8);
    call write~int(0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 32, 1);
    call write~int(0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 33, 4);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 37, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 45, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 53, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 61, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 69, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 77, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 85, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 93, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 101, 8);
    call write~$Pointer$(0, 0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 0 + 109, 8);
    call write~int(0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 164 + 117, 4);
    call write~int(0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 285, 1);
    call write~int(0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 286, 1);
    call write~int(1, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 287, 1);
    call write~int(0, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset + 288, 1);
    havoc #t~nondet2505.base, #t~nondet2505.offset;
    havoc #t~union2816.__padding, #t~union2816.dep_map.key.base, #t~union2816.dep_map.key.offset, #t~union2816.dep_map.class_cache.base, #t~union2816.dep_map.class_cache.offset, #t~union2816.dep_map.name.base, #t~union2816.dep_map.name.offset, #t~union2816.dep_map.cpu, #t~union2816.dep_map.ip;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_8, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_work_1_1, ~ldv_work_3_2, ~ldv_work_3_0, ~ldv_state_variable_9, ~ref_cnt, ~ldv_work_3_3, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_work_1_3, ~ldv_state_variable_6, ~ldv_work_3_1, ~ldv_state_variable_2, ~ldv_work_2_0, ~usb_counter, ~ldv_work_1_2, ~ldv_work_2_2, ~ldv_state_variable_3, ~ldv_work_1_0, ~ldv_work_2_3, ~ldv_state_variable_4, ~ldv_work_2_1, ~modparam_country, ~modparam_frameburst, ~modparam_afterburner, ~modparam_power_save, ~modparam_power_output, ~modparam_roamtrigger, ~modparam_roamdelta, ~modparam_workaround_interval, ~#rndis_wiphy_privid.base, ~#rndis_wiphy_privid.offset, ~ldv_retval_2, ~ldv_retval_5, ~ldv_retval_0, ~ldv_retval_6, ~ldv_retval_1, ~ldv_retval_9, ~ldv_retval_4, ~ldv_retval_8, ~ldv_retval_3, ~ldv_retval_7, ~ldv_mutex_command_lock_of_rndis_wlan_private, ~ldv_mutex_i_mutex_of_inode, ~ldv_mutex_lock, ~ldv_mutex_mutex_of_device, ~bcm4320b_info_group1.base, ~bcm4320b_info_group1.offset, ~rndis_wlan_info_group1.base, ~rndis_wlan_info_group1.offset, ~bcm4320a_info_group2.base, ~bcm4320a_info_group2.offset, ~ldv_work_struct_3_1.base, ~ldv_work_struct_3_1.offset, ~ldv_work_struct_2_0.base, ~ldv_work_struct_2_0.offset, ~rndis_wlan_driver_group1.base, ~rndis_wlan_driver_group1.offset, ~rndis_config_ops_group0.base, ~rndis_config_ops_group0.offset, ~rndis_wlan_info_group2.base, ~rndis_wlan_info_group2.offset, ~ldv_work_struct_3_3.base, ~ldv_work_struct_3_3.offset, ~ldv_work_struct_1_0.base, ~ldv_work_struct_1_0.offset, ~rndis_config_ops_group4.base, ~rndis_config_ops_group4.offset, ~ldv_work_struct_3_2.base, ~ldv_work_struct_3_2.offset, ~rndis_wlan_netdev_ops_group1.base, ~rndis_wlan_netdev_ops_group1.offset, ~bcm4320b_info_group0.base, ~bcm4320b_info_group0.offset, ~rndis_wlan_info_group0.base, ~rndis_wlan_info_group0.offset, ~rndis_config_ops_group1.base, ~rndis_config_ops_group1.offset, ~ldv_work_struct_3_0.base, ~ldv_work_struct_3_0.offset, ~rndis_config_ops_group3.base, ~rndis_config_ops_group3.offset, ~bcm4320a_info_group0.base, ~bcm4320a_info_group0.offset, ~rndis_config_ops_group2.base, ~rndis_config_ops_group2.offset, ~bcm4320b_info_group2.base, ~bcm4320b_info_group2.offset, ~bcm4320a_info_group1.base, ~bcm4320a_info_group1.offset, ~#rndis_channels.base, ~#rndis_channels.offset, ~#rndis_rates.base, ~#rndis_rates.offset, ~#rndis_cipher_suites.base, ~#rndis_cipher_suites.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset, ~#bcm4320b_info.base, ~#bcm4320b_info.offset, ~#bcm4320a_info.base, ~#bcm4320a_info.offset, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset, ~#products.base, ~#products.offset, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, #valid, #length;

implementation ldv_error() returns (){
  loc11:
    assume !false;
    goto loc12;
  loc12:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation invoke_work_2() returns (){
    var #t~nondet2528 : int;
    var #t~switch2529 : bool;
    var ~tmp~1202 : int;

  loc13:
    havoc ~tmp~1202;
    assume -2147483648 <= #t~nondet2528 && #t~nondet2528 <= 2147483647;
    ~tmp~1202 := #t~nondet2528;
    havoc #t~nondet2528;
    #t~switch2529 := ~tmp~1202 == 0;
    assume !#t~switch2529;
    #t~switch2529 := #t~switch2529 || ~tmp~1202 == 1;
    assume !#t~switch2529;
    #t~switch2529 := #t~switch2529 || ~tmp~1202 == 2;
    assume !#t~switch2529;
    #t~switch2529 := #t~switch2529 || ~tmp~1202 == 3;
    assume #t~switch2529;
    assume ~ldv_work_2_3 == 2 || ~ldv_work_2_3 == 3;
    ~ldv_work_2_3 := 4;
    call rndis_device_poller(~ldv_work_struct_2_0.base, ~ldv_work_struct_2_0.offset);
    return;
}

procedure invoke_work_2() returns ();
modifies ~ldv_work_2_0, ~ldv_work_2_1, ~ldv_work_2_2, ~ldv_work_2_3, #valid, #length, #memory_int, ~ldv_work_struct_3_0.base, ~ldv_work_struct_3_0.offset, ~ldv_work_3_0, ~ldv_work_struct_3_1.base, ~ldv_work_struct_3_1.offset, ~ldv_work_3_1, ~ldv_work_struct_3_2.base, ~ldv_work_struct_3_2.offset, ~ldv_work_3_2, ~ldv_work_struct_3_3.base, ~ldv_work_struct_3_3.offset, ~ldv_work_3_3, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_command_lock_of_rndis_wlan_private;

implementation ldv_mutex_unlock_command_lock_of_rndis_wlan_private(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc14:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    assume ~ldv_mutex_command_lock_of_rndis_wlan_private != 2;
    call ldv_error();
    return;
}

procedure ldv_mutex_unlock_command_lock_of_rndis_wlan_private(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ~ldv_mutex_command_lock_of_rndis_wlan_private;

implementation ldv_mutex_unlock_18(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns (){
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;

  loc15:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    call ldv_mutex_unlock_command_lock_of_rndis_wlan_private(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    return;
}

procedure ldv_mutex_unlock_18(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns ();
modifies ~ldv_mutex_command_lock_of_rndis_wlan_private;

implementation get_rndis_wlan_priv(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~mem205.base : int, #t~mem205.offset : int;
    var ~dev.base : int, ~dev.offset : int;

  loc16:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    call #t~mem205.base, #t~mem205.offset := read~$Pointer$(~dev.base, ~dev.offset + 32, 8);
    #res.base, #res.offset := #t~mem205.base, #t~mem205.offset;
    havoc #t~mem205.base, #t~mem205.offset;
    assume true;
    return;
}

procedure get_rndis_wlan_priv(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation ULTIMATE.start() returns (){
    var #t~ret2817 : int;

  loc17:
    call ULTIMATE.init();
    call #t~ret2817 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_8, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_work_1_1, ~ldv_work_3_2, ~ldv_work_3_0, ~ldv_state_variable_9, ~ref_cnt, ~ldv_work_3_3, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_work_1_3, ~ldv_state_variable_6, ~ldv_work_3_1, ~ldv_state_variable_2, ~ldv_work_2_0, ~usb_counter, ~ldv_work_1_2, ~ldv_work_2_2, ~ldv_state_variable_3, ~ldv_work_1_0, ~ldv_work_2_3, ~ldv_state_variable_4, ~ldv_work_2_1, ~modparam_country, ~modparam_frameburst, ~modparam_afterburner, ~modparam_power_save, ~modparam_power_output, ~modparam_roamtrigger, ~modparam_roamdelta, ~modparam_workaround_interval, ~#rndis_wiphy_privid.base, ~#rndis_wiphy_privid.offset, ~ldv_retval_2, ~ldv_retval_5, ~ldv_retval_0, ~ldv_retval_6, ~ldv_retval_1, ~ldv_retval_9, ~ldv_retval_4, ~ldv_retval_8, ~ldv_retval_3, ~ldv_retval_7, ~ldv_mutex_command_lock_of_rndis_wlan_private, ~ldv_mutex_i_mutex_of_inode, ~ldv_mutex_lock, ~ldv_mutex_mutex_of_device, ~bcm4320b_info_group1.base, ~bcm4320b_info_group1.offset, ~rndis_wlan_info_group1.base, ~rndis_wlan_info_group1.offset, ~bcm4320a_info_group2.base, ~bcm4320a_info_group2.offset, ~ldv_work_struct_3_1.base, ~ldv_work_struct_3_1.offset, ~ldv_work_struct_2_0.base, ~ldv_work_struct_2_0.offset, ~rndis_wlan_driver_group1.base, ~rndis_wlan_driver_group1.offset, ~rndis_config_ops_group0.base, ~rndis_config_ops_group0.offset, ~rndis_wlan_info_group2.base, ~rndis_wlan_info_group2.offset, ~ldv_work_struct_3_3.base, ~ldv_work_struct_3_3.offset, ~ldv_work_struct_1_0.base, ~ldv_work_struct_1_0.offset, ~rndis_config_ops_group4.base, ~rndis_config_ops_group4.offset, ~ldv_work_struct_3_2.base, ~ldv_work_struct_3_2.offset, ~rndis_wlan_netdev_ops_group1.base, ~rndis_wlan_netdev_ops_group1.offset, ~bcm4320b_info_group0.base, ~bcm4320b_info_group0.offset, ~rndis_wlan_info_group0.base, ~rndis_wlan_info_group0.offset, ~rndis_config_ops_group1.base, ~rndis_config_ops_group1.offset, ~ldv_work_struct_3_0.base, ~ldv_work_struct_3_0.offset, ~rndis_config_ops_group3.base, ~rndis_config_ops_group3.offset, ~bcm4320a_info_group0.base, ~bcm4320a_info_group0.offset, ~rndis_config_ops_group2.base, ~rndis_config_ops_group2.offset, ~bcm4320b_info_group2.base, ~bcm4320b_info_group2.offset, ~bcm4320a_info_group1.base, ~bcm4320a_info_group1.offset, ~#rndis_channels.base, ~#rndis_channels.offset, ~#rndis_rates.base, ~#rndis_rates.offset, ~#rndis_cipher_suites.base, ~#rndis_cipher_suites.offset, ~#rndis_config_ops.base, ~#rndis_config_ops.offset, ~#rndis_wlan_netdev_ops.base, ~#rndis_wlan_netdev_ops.offset, ~#bcm4320b_info.base, ~#bcm4320b_info.offset, ~#bcm4320a_info.base, ~#bcm4320a_info.offset, ~#rndis_wlan_info.base, ~#rndis_wlan_info.offset, ~#products.base, ~#products.offset, ~#rndis_wlan_driver.base, ~#rndis_wlan_driver.offset, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_9, ~ldv_state_variable_2, ~ldv_state_variable_8, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_1, ~ldv_retval_2, ~ldv_retval_4, ~ldv_retval_3, ~usb_counter, ~ldv_retval_7, ~ldv_retval_6, ~ldv_retval_5, ~ldv_retval_8, ~ldv_retval_9;
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~ldv_work_3_0, ~ldv_work_3_1, ~ldv_work_3_2, ~ldv_work_3_3, ~ldv_work_2_0, ~ldv_work_2_1, ~ldv_work_2_2, ~ldv_work_2_3, ~ldv_work_1_0, ~ldv_work_1_1, ~ldv_work_1_2, ~ldv_work_1_3, ~bcm4320a_info_group0.base, ~bcm4320a_info_group0.offset, ~bcm4320a_info_group2.base, ~bcm4320a_info_group2.offset, ~bcm4320a_info_group1.base, ~bcm4320a_info_group1.offset, ~bcm4320b_info_group0.base, ~bcm4320b_info_group0.offset, ~bcm4320b_info_group2.base, ~bcm4320b_info_group2.offset, ~bcm4320b_info_group1.base, ~bcm4320b_info_group1.offset, ~rndis_wlan_info_group0.base, ~rndis_wlan_info_group0.offset, ~rndis_wlan_info_group2.base, ~rndis_wlan_info_group2.offset, ~rndis_wlan_info_group1.base, ~rndis_wlan_info_group1.offset, ~rndis_wlan_netdev_ops_group1.base, ~rndis_wlan_netdev_ops_group1.offset, ~rndis_config_ops_group0.base, ~rndis_config_ops_group0.offset, ~rndis_config_ops_group2.base, ~rndis_config_ops_group2.offset, ~rndis_config_ops_group4.base, ~rndis_config_ops_group4.offset, ~rndis_config_ops_group3.base, ~rndis_config_ops_group3.offset, ~rndis_config_ops_group1.base, ~rndis_config_ops_group1.offset, ~ldv_state_variable_4, ~ldv_work_struct_3_0.base, ~ldv_work_struct_3_0.offset, ~ldv_work_struct_3_1.base, ~ldv_work_struct_3_1.offset, ~ldv_work_struct_3_2.base, ~ldv_work_struct_3_2.offset, ~ldv_work_struct_3_3.base, ~ldv_work_struct_3_3.offset, ~ldv_mutex_command_lock_of_rndis_wlan_private, ~rndis_wlan_driver_group1.base, ~rndis_wlan_driver_group1.offset, ~usb_counter, ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_9, ~ldv_state_variable_2, ~ldv_state_variable_8, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_1, ~ldv_retval_2, ~ldv_retval_4, ~ldv_retval_3, ~ldv_retval_7, ~ldv_retval_6, ~ldv_retval_5, ~ldv_retval_8, ~ldv_retval_9;

implementation rndis_query_oid(#in~dev.base : int, #in~dev.offset : int, #in~oid : int, #in~data.base : int, #in~data.offset : int, #in~len.base : int, #in~len.offset : int) returns (#res : int){
    var #t~ret213.base : int, #t~ret213.offset : int;
    var #t~mem214 : int;
    var #t~ret215.base : int, #t~ret215.offset : int;
    var #t~mem217.base : int, #t~mem217.offset : int;
    var #t~mem219.base : int, #t~mem219.offset : int;
    var #t~memset220.base : int, #t~memset220.offset : int;
    var #t~mem221.base : int, #t~mem221.offset : int;
    var #t~mem223.base : int, #t~mem223.offset : int;
    var #t~mem225.base : int, #t~mem225.offset : int;
    var #t~mem228.base : int, #t~mem228.offset : int;
    var #t~ret229 : int;
    var #t~nondet231.base : int, #t~nondet231.offset : int;
    var #t~nondet233.base : int, #t~nondet233.offset : int;
    var #t~nondet235.base : int, #t~nondet235.offset : int;
    var #t~nondet237.base : int, #t~nondet237.offset : int;
    var #t~mem241 : int;
    var #t~ret242 : int;
    var #t~ret243.base : int, #t~ret243.offset : int;
    var #t~mem244.base : int, #t~mem244.offset : int;
    var #t~nondet245.base : int, #t~nondet245.offset : int;
    var #t~mem246.base : int, #t~mem246.offset : int;
    var #t~mem247 : int;
    var #t~mem248.base : int, #t~mem248.offset : int;
    var #t~mem249 : int;
    var #t~nondet250.base : int, #t~nondet250.offset : int;
    var #t~nondet252.base : int, #t~nondet252.offset : int;
    var #t~nondet254.base : int, #t~nondet254.offset : int;
    var #t~nondet256.base : int, #t~nondet256.offset : int;
    var #t~mem260 : int;
    var #t~ret261 : int;
    var #t~ret262.base : int, #t~ret262.offset : int;
    var #t~mem263.base : int, #t~mem263.offset : int;
    var #t~nondet264.base : int, #t~nondet264.offset : int;
    var #t~mem265 : int;
    var #t~mem266 : int;
    var #t~mem267.base : int, #t~mem267.offset : int;
    var #t~memcpy268.base : int, #t~memcpy268.offset : int;
    var #t~mem270.base : int, #t~mem270.offset : int;
    var #t~mem271 : int;
    var #t~ret272 : int;
    var #t~nondet273.base : int, #t~nondet273.offset : int;
    var #t~nondet275.base : int, #t~nondet275.offset : int;
    var #t~nondet277.base : int, #t~nondet277.offset : int;
    var #t~nondet279.base : int, #t~nondet279.offset : int;
    var #t~mem283 : int;
    var #t~ret284 : int;
    var #t~ret285.base : int, #t~ret285.offset : int;
    var #t~mem286.base : int, #t~mem286.offset : int;
    var #t~nondet287.base : int, #t~nondet287.offset : int;
    var #t~mem288.base : int, #t~mem288.offset : int;
    var #t~mem289.base : int, #t~mem289.offset : int;
    var ~dev.base : int, ~dev.offset : int;
    var ~oid : int;
    var ~data.base : int, ~data.offset : int;
    var ~len.base : int, ~len.offset : int;
    var ~priv~235.base : int, ~priv~235.offset : int;
    var ~tmp~235.base : int, ~tmp~235.offset : int;
    var ~#u~235.base : int, ~#u~235.offset : int;
    var ~ret~235 : int;
    var ~buflen~235 : int;
    var ~resplen~235 : int;
    var ~respoffs~235 : int;
    var ~copylen~235 : int;
    var ~#descriptor~235.base : int, ~#descriptor~235.offset : int;
    var ~tmp___0~235.base : int, ~tmp___0~235.offset : int;
    var ~tmp___1~235 : int;
    var ~#descriptor___0~235.base : int, ~#descriptor___0~235.offset : int;
    var ~tmp___2~235.base : int, ~tmp___2~235.offset : int;
    var ~tmp___3~235 : int;
    var ~#descriptor___1~235.base : int, ~#descriptor___1~235.offset : int;
    var ~tmp___4~235.base : int, ~tmp___4~235.offset : int;
    var ~tmp___5~235 : int;

  loc18:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    ~oid := #in~oid;
    ~data.base, ~data.offset := #in~data.base, #in~data.offset;
    ~len.base, ~len.offset := #in~len.base, #in~len.offset;
    havoc ~priv~235.base, ~priv~235.offset;
    havoc ~tmp~235.base, ~tmp~235.offset;
    call ~#u~235.base, ~#u~235.offset := #Ultimate.alloc(8);
    havoc ~ret~235;
    havoc ~buflen~235;
    havoc ~resplen~235;
    havoc ~respoffs~235;
    havoc ~copylen~235;
    call ~#descriptor~235.base, ~#descriptor~235.offset := #Ultimate.alloc(37);
    havoc ~tmp___0~235.base, ~tmp___0~235.offset;
    havoc ~tmp___1~235;
    call ~#descriptor___0~235.base, ~#descriptor___0~235.offset := #Ultimate.alloc(37);
    havoc ~tmp___2~235.base, ~tmp___2~235.offset;
    havoc ~tmp___3~235;
    call ~#descriptor___1~235.base, ~#descriptor___1~235.offset := #Ultimate.alloc(37);
    havoc ~tmp___4~235.base, ~tmp___4~235.offset;
    havoc ~tmp___5~235;
    call #t~ret213.base, #t~ret213.offset := get_rndis_wlan_priv(~dev.base, ~dev.offset);
    ~tmp~235.base, ~tmp~235.offset := #t~ret213.base, #t~ret213.offset;
    havoc #t~ret213.base, #t~ret213.offset;
    ~priv~235.base, ~priv~235.offset := ~tmp~235.base, ~tmp~235.offset;
    call #t~mem214 := read~int(~len.base, ~len.offset, 4);
    ~buflen~235 := (if (#t~mem214 + 28) % 4294967296 % 4294967296 <= 2147483647 then (#t~mem214 + 28) % 4294967296 % 4294967296 else (#t~mem214 + 28) % 4294967296 % 4294967296 - 4294967296);
    havoc #t~mem214;
    assume ~buflen~235 <= 1024;
    ~buflen~235 := 1025;
    assume !(~buflen~235 % 4294967296 > 1053);
    call write~$Pointer$(~priv~235.base, ~priv~235.offset + 2778, ~#u~235.base, ~#u~235.offset + 0, 8);
    call ldv_mutex_lock_17(~priv~235.base, ~priv~235.offset + 1405);
    call #t~mem219.base, #t~mem219.offset := read~$Pointer$(~#u~235.base, ~#u~235.offset + 0, 8);
    call #t~memset220.base, #t~memset220.offset := #Ultimate.C_memset(#t~mem219.base, #t~mem219.offset, 0, 28);
    havoc #t~mem219.base, #t~mem219.offset;
    havoc #t~memset220.base, #t~memset220.offset;
    call #t~mem221.base, #t~mem221.offset := read~$Pointer$(~#u~235.base, ~#u~235.offset + 0, 8);
    call write~int(4, #t~mem221.base, #t~mem221.offset + 0, 4);
    havoc #t~mem221.base, #t~mem221.offset;
    call #t~mem223.base, #t~mem223.offset := read~$Pointer$(~#u~235.base, ~#u~235.offset + 0, 8);
    call write~int(28, #t~mem223.base, #t~mem223.offset + 4, 4);
    havoc #t~mem223.base, #t~mem223.offset;
    call #t~mem225.base, #t~mem225.offset := read~$Pointer$(~#u~235.base, ~#u~235.offset + 0, 8);
    call write~int(~oid, #t~mem225.base, #t~mem225.offset + 12, 4);
    havoc #t~mem225.base, #t~mem225.offset;
    call write~int(~oid, ~priv~235.base, ~priv~235.offset + 2577, 4);
    call #t~mem228.base, #t~mem228.offset := read~$Pointer$(~#u~235.base, ~#u~235.offset + 0, 8);
    call #t~ret229 := rndis_command(~dev.base, ~dev.offset, #t~mem228.base, #t~mem228.offset, ~buflen~235);
    assume -2147483648 <= #t~ret229 && #t~ret229 <= 2147483647;
    ~ret~235 := #t~ret229;
    havoc #t~mem228.base, #t~mem228.offset;
    havoc #t~ret229;
    call write~int(0, ~priv~235.base, ~priv~235.offset + 2577, 4);
    assume !(~ret~235 < 0);
    assume !(~ret~235 == 0);
    call ldv_mutex_unlock_18(~priv~235.base, ~priv~235.offset + 1405);
    return;
}

procedure rndis_query_oid(#in~dev.base : int, #in~dev.offset : int, #in~oid : int, #in~data.base : int, #in~data.offset : int, #in~len.base : int, #in~len.offset : int) returns (#res : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, #valid, #length, ~ldv_mutex_command_lock_of_rndis_wlan_private;

implementation ldv_memset(#in~s.base : int, #in~s.offset : int, #in~c : int, #in~n : int) returns (#res.base : int, #res.offset : int){
    var #t~memset34.base : int, #t~memset34.offset : int;
    var ~s.base : int, ~s.offset : int;
    var ~c : int;
    var ~n : int;
    var ~tmp~40.base : int, ~tmp~40.offset : int;

  loc19:
    ~s.base, ~s.offset := #in~s.base, #in~s.offset;
    ~c := #in~c;
    ~n := #in~n;
    havoc ~tmp~40.base, ~tmp~40.offset;
    call #t~memset34.base, #t~memset34.offset := #Ultimate.C_memset(~s.base, ~s.offset, ~c, (if ~n % 4294967296 % 4294967296 <= 2147483647 then ~n % 4294967296 % 4294967296 else ~n % 4294967296 % 4294967296 - 4294967296));
    ~tmp~40.base, ~tmp~40.offset := ~s.base, ~s.offset;
    havoc #t~memset34.base, #t~memset34.offset;
    #res.base, #res.offset := ~tmp~40.base, ~tmp~40.offset;
    assume true;
    return;
}

procedure ldv_memset(#in~s.base : int, #in~s.offset : int, #in~c : int, #in~n : int) returns (#res.base : int, #res.offset : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation #Ultimate.meminit(#ptr.base : int, #ptr.offset : int, #amountOfFields : int, #sizeOfFields : int, #product : int) returns (){
    var #t~loopctr2819 : int;

  loc20:
    #t~loopctr2819 := 0;
    assume !(#t~loopctr2819 < #product);
    assume true;
    return;
}

procedure #Ultimate.meminit(#ptr.base : int, #ptr.offset : int, #amountOfFields : int, #sizeOfFields : int, #product : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation rndis_device_poller(#in~work.base : int, #in~work.offset : int) returns (){
    var #t~mem2248.base : int, #t~mem2248.offset : int;
    var #t~ret2249 : ~bool;
    var #t~mem2250 : int;
    var #t~mem2251 : int;
    var #t~short2252 : bool;
    var #t~mem2253.base : int, #t~mem2253.offset : int;
    var #t~short2254 : bool;
    var #t~ret2255 : int;
    var #t~ret2256 : int;
    var #t~ret2258 : int;
    var #t~mem2259 : int;
    var #t~ret2260 : int;
    var #t~mem2262 : int;
    var #t~nondet2263.base : int, #t~nondet2263.offset : int;
    var #t~nondet2265.base : int, #t~nondet2265.offset : int;
    var #t~nondet2267.base : int, #t~nondet2267.offset : int;
    var #t~nondet2269.base : int, #t~nondet2269.offset : int;
    var #t~mem2273 : int;
    var #t~ret2274 : int;
    var #t~mem2275 : int;
    var #t~ret2276 : int;
    var #t~mem2277.base : int, #t~mem2277.offset : int;
    var #t~nondet2278.base : int, #t~nondet2278.offset : int;
    var #t~mem2279 : int;
    var #t~mem2280 : int;
    var #t~short2281 : bool;
    var #t~mem2282 : int;
    var #t~ret2283 : int;
    var #t~ret2285 : int;
    var #t~mem2287 : int;
    var #t~ret2288.base : int, #t~ret2288.offset : int;
    var #t~ret2289 : int;
    var #t~ret2290 : int;
    var #t~ret2291 : int;
    var #t~ite2292 : int;
    var #t~mem2293.base : int, #t~mem2293.offset : int;
    var #t~ret2294 : ~bool;
    var ~work.base : int, ~work.offset : int;
    var ~priv~1029.base : int, ~priv~1029.offset : int;
    var ~__mptr~1029.base : int, ~__mptr~1029.offset : int;
    var ~usbdev~1029.base : int, ~usbdev~1029.offset : int;
    var ~#rssi~1029.base : int, ~#rssi~1029.offset : int;
    var ~#tmp~1029.base : int, ~#tmp~1029.offset : int;
    var ~#len~1029.base : int, ~#len~1029.offset : int;
    var ~ret~1029 : int;
    var ~j~1029 : int;
    var ~update_jiffies~1029 : int;
    var ~buf~1029.base : int, ~buf~1029.offset : int;
    var ~tmp___0~1029 : ~bool;
    var ~tmp___1~1029 : int;
    var ~#descriptor~1029.base : int, ~#descriptor~1029.offset : int;
    var ~tmp___2~1029 : int;
    var ~tmp___3~1029 : int;
    var ~tmp___4~1029 : int;
    var ~tmp___5~1029 : int;
    var ~tmp___6~1029 : int;
    var ~ret___0~1029 : int;
    var ~__x___0~1029 : int;

  loc21:
    ~work.base, ~work.offset := #in~work.base, #in~work.offset;
    havoc ~priv~1029.base, ~priv~1029.offset;
    havoc ~__mptr~1029.base, ~__mptr~1029.offset;
    havoc ~usbdev~1029.base, ~usbdev~1029.offset;
    call ~#rssi~1029.base, ~#rssi~1029.offset := #Ultimate.alloc(4);
    call ~#tmp~1029.base, ~#tmp~1029.offset := #Ultimate.alloc(4);
    call ~#len~1029.base, ~#len~1029.offset := #Ultimate.alloc(4);
    havoc ~ret~1029;
    havoc ~j~1029;
    havoc ~update_jiffies~1029;
    havoc ~buf~1029.base, ~buf~1029.offset;
    havoc ~tmp___0~1029;
    havoc ~tmp___1~1029;
    call ~#descriptor~1029.base, ~#descriptor~1029.offset := #Ultimate.alloc(37);
    havoc ~tmp___2~1029;
    havoc ~tmp___3~1029;
    havoc ~tmp___4~1029;
    havoc ~tmp___5~1029;
    havoc ~tmp___6~1029;
    havoc ~ret___0~1029;
    havoc ~__x___0~1029;
    ~__mptr~1029.base, ~__mptr~1029.offset := ~work.base, ~work.offset;
    ~priv~1029.base, ~priv~1029.offset := ~__mptr~1029.base, ~__mptr~1029.offset + -3831000;
    call #t~mem2248.base, #t~mem2248.offset := read~$Pointer$(~priv~1029.base, ~priv~1029.offset + 0, 8);
    ~usbdev~1029.base, ~usbdev~1029.offset := #t~mem2248.base, #t~mem2248.offset;
    havoc #t~mem2248.base, #t~mem2248.offset;
    ~update_jiffies~1029 := 250;
    call #t~ret2249 := is_associated(~usbdev~1029.base, ~usbdev~1029.offset);
    ~tmp___0~1029 := #t~ret2249;
    havoc #t~ret2249;
    assume ~tmp___0~1029 % 256 != 0;
    ~tmp___1~1029 := 0;
    assume !(~tmp___1~1029 != 0);
    call write~int(4, ~#len~1029.base, ~#len~1029.offset, 4);
    call #t~ret2258 := rndis_query_oid(~usbdev~1029.base, ~usbdev~1029.offset, 218169862, ~#rssi~1029.base, ~#rssi~1029.offset, ~#len~1029.base, ~#len~1029.offset);
    return;
}

procedure rndis_device_poller(#in~work.base : int, #in~work.offset : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length, ~ldv_work_struct_3_0.base, ~ldv_work_struct_3_0.offset, ~ldv_work_3_0, ~ldv_work_struct_3_1.base, ~ldv_work_struct_3_1.offset, ~ldv_work_3_1, ~ldv_work_struct_3_2.base, ~ldv_work_struct_3_2.offset, ~ldv_work_3_2, ~ldv_work_struct_3_3.base, ~ldv_work_struct_3_3.offset, ~ldv_work_3_3, ~ldv_mutex_command_lock_of_rndis_wlan_private;

procedure ieee80211_frequency_to_channel(#in~115 : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock_bh(#in~36.base : int, #in~36.offset : int) returns ();
modifies ;

procedure msleep(#in~75 : int) returns ();
modifies ;

procedure ldv_ndo_uninit_8() returns (#res : int);
modifies ;

procedure cancel_delayed_work_sync(#in~63.base : int, #in~63.offset : int) returns (#res : ~bool);
modifies ;

procedure wiphy_register(#in~110.base : int, #in~110.offset : int) returns (#res : int);
modifies ;

procedure wiphy_new_nm(#in~106.base : int, #in~106.offset : int, #in~107 : int, #in~108.base : int, #in~108.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure cfg80211_ibss_joined(#in~142.base : int, #in~142.offset : int, #in~143.base : int, #in~143.offset : int, #in~144.base : int, #in~144.offset : int, #in~145 : int) returns ();
modifies ;

procedure netif_carrier_off(#in~79.base : int, #in~79.offset : int) returns ();
modifies ;

procedure usbnet_pause_rx(#in~187.base : int, #in~187.offset : int) returns ();
modifies ;

procedure ldv_disconnect_5() returns (#res : int);
modifies ;

procedure usbnet_suspend(#in~178.base : int, #in~178.offset : int, #in~179.event : int) returns (#res : int);
modifies ;

procedure destroy_workqueue(#in~53.base : int, #in~53.offset : int) returns ();
modifies ;

procedure cfg80211_pmksa_candidate_notify(#in~171.base : int, #in~171.offset : int, #in~172 : int, #in~173.base : int, #in~173.offset : int, #in~174 : int, #in~175 : int) returns ();
modifies ;

procedure ldv_disconnect_7() returns (#res : int);
modifies ;

procedure ldv_disconnect_6() returns (#res : int);
modifies ;

procedure ldv_bind_9() returns (#res : int);
modifies ;

procedure rndis_tx_fixup(#in~202.base : int, #in~202.offset : int, #in~203.base : int, #in~203.offset : int, #in~204 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure usbnet_stop(#in~183.base : int, #in~183.offset : int) returns (#res : int);
modifies ;

procedure ldv_reset_resume_4() returns (#res : int);
modifies ;

procedure mutex_unlock(#in~29.base : int, #in~29.offset : int) returns ();
modifies ;

procedure queue_delayed_work_on(#in~57 : int, #in~58.base : int, #in~58.offset : int, #in~59.base : int, #in~59.offset : int, #in~60 : int) returns (#res : ~bool);
modifies ;

procedure netif_carrier_on(#in~78.base : int, #in~78.offset : int) returns ();
modifies ;

procedure ldv_start_5() returns (#res : int);
modifies ;

procedure ldv_start_7() returns (#res : int);
modifies ;

procedure ldv_start_6() returns (#res : int);
modifies ;

procedure netdev_err(#in~80.base : int, #in~80.offset : int, #in~81.base : int, #in~81.offset : int) returns ();
modifies ;

procedure memcpy(#in~9.base : int, #in~9.offset : int, #in~10.base : int, #in~10.offset : int, #in~11 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ldv_init_6() returns (#res : int);
modifies ;

procedure mutex_lock(#in~35.base : int, #in~35.offset : int) returns ();
modifies ;

procedure ldv_init_7() returns (#res : int);
modifies ;

procedure ldv_ndo_init_8() returns (#res : int);
modifies ;

procedure ldv_init_5() returns (#res : int);
modifies ;

procedure usbnet_purge_paused_rxq(#in~189.base : int, #in~189.offset : int) returns ();
modifies ;

procedure __dynamic_netdev_dbg(#in~2.base : int, #in~2.offset : int, #in~3.base : int, #in~3.offset : int, #in~4.base : int, #in~4.offset : int) returns ();
modifies ;

procedure __kmalloc(#in~70 : int, #in~71 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure sprintf(#in~5.base : int, #in~5.offset : int, #in~6.base : int, #in~6.offset : int) returns (#res : int);
modifies ;

procedure strlen(#in~15.base : int, #in~15.offset : int) returns (#res : int);
modifies ;

procedure ieee80211_channel_to_frequency(#in~113 : int, #in~114 : int) returns (#res : int);
modifies ;

procedure usbnet_probe(#in~176.base : int, #in~176.offset : int, #in~177.base : int, #in~177.offset : int) returns (#res : int);
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure eth_mac_addr(#in~86.base : int, #in~86.offset : int, #in~87.base : int, #in~87.offset : int) returns (#res : int);
modifies ;

procedure eth_validate_addr(#in~88.base : int, #in~88.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_bh(#in~37.base : int, #in~37.offset : int) returns ();
modifies ;

procedure wiphy_unregister(#in~111.base : int, #in~111.offset : int) returns ();
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure rndis_command(#in~192.base : int, #in~192.offset : int, #in~193.base : int, #in~193.offset : int, #in~194 : int) returns (#res : int);
modifies ;

procedure calloc(#in~30 : int, #in~31 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure cfg80211_scan_done(#in~119.base : int, #in~119.offset : int, #in~120 : int) returns ();
modifies ;

procedure cancel_work_sync(#in~62.base : int, #in~62.offset : int) returns (#res : ~bool);
modifies ;

procedure netdev_warn(#in~82.base : int, #in~82.offset : int, #in~83.base : int, #in~83.offset : int) returns ();
modifies ;

procedure __mutex_init(#in~26.base : int, #in~26.offset : int, #in~27.base : int, #in~27.offset : int, #in~28.base : int, #in~28.offset : int) returns ();
modifies ;

procedure queue_work_on(#in~54 : int, #in~55.base : int, #in~55.offset : int, #in~56.base : int, #in~56.offset : int) returns (#res : ~bool);
modifies ;

procedure __msecs_to_jiffies(#in~38 : int) returns (#res : int);
modifies ;

procedure netdev_info(#in~84.base : int, #in~84.offset : int, #in~85.base : int, #in~85.offset : int) returns ();
modifies ;

procedure lockdep_init_map(#in~22.base : int, #in~22.offset : int, #in~23.base : int, #in~23.offset : int, #in~24.base : int, #in~24.offset : int, #in~25 : int) returns ();
modifies ;

procedure get_random_bytes(#in~76.base : int, #in~76.offset : int, #in~77 : int) returns ();
modifies ;

procedure flush_workqueue(#in~61.base : int, #in~61.offset : int) returns ();
modifies ;

procedure round_jiffies_relative(#in~44 : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure usbnet_resume(#in~180.base : int, #in~180.offset : int) returns (#res : int);
modifies ;

procedure strcpy(#in~16.base : int, #in~16.offset : int, #in~17.base : int, #in~17.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure usbnet_tx_timeout(#in~186.base : int, #in~186.offset : int) returns ();
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure __alloc_workqueue_key(#in~48.base : int, #in~48.offset : int, #in~49 : int, #in~50 : int, #in~51.base : int, #in~51.offset : int, #in~52.base : int, #in~52.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure wiphy_free(#in~112.base : int, #in~112.offset : int) returns ();
modifies ;

procedure ldv_initialize() returns ();
modifies ;

procedure usb_deregister(#in~103.base : int, #in~103.offset : int) returns ();
modifies ;

procedure usbnet_disconnect(#in~181.base : int, #in~181.offset : int) returns ();
modifies ;

procedure kfree(#in~69.base : int, #in~69.offset : int) returns ();
modifies ;

procedure cfg80211_michael_mic_failure(#in~136.base : int, #in~136.offset : int, #in~137.base : int, #in~137.offset : int, #in~138 : int, #in~139 : int, #in~140.base : int, #in~140.offset : int, #in~141 : int) returns ();
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];

procedure __VERIFIER_error() returns ();
modifies ;

procedure cfg80211_inform_bss_width(#in~121.base : int, #in~121.offset : int, #in~122.base : int, #in~122.offset : int, #in~123 : int, #in~124 : int, #in~125.base : int, #in~125.offset : int, #in~126 : int, #in~127 : int, #in~128 : int, #in~129.base : int, #in~129.offset : int, #in~130 : int, #in~131 : int, #in~132 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure cfg80211_connect_result(#in~146.base : int, #in~146.offset : int, #in~147.base : int, #in~147.offset : int, #in~148.base : int, #in~148.offset : int, #in~149 : int, #in~150.base : int, #in~150.offset : int, #in~151 : int, #in~152 : int, #in~153 : int) returns ();
modifies ;

procedure rndis_status(#in~190.base : int, #in~190.offset : int, #in~191.base : int, #in~191.offset : int) returns ();
modifies ;

procedure __VERIFIER_assume(#in~32 : int) returns ();
modifies ;

procedure usbnet_resume_rx(#in~188.base : int, #in~188.offset : int) returns ();
modifies ;

procedure cfg80211_roamed(#in~154.base : int, #in~154.offset : int, #in~155.base : int, #in~155.offset : int, #in~156.base : int, #in~156.offset : int, #in~157.base : int, #in~157.offset : int, #in~158 : int, #in~159.base : int, #in~159.offset : int, #in~160 : int, #in~161 : int) returns ();
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];

procedure krealloc(#in~66.base : int, #in~66.offset : int, #in~67 : int, #in~68 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure cfg80211_put_bss(#in~134.base : int, #in~134.offset : int, #in~135.base : int, #in~135.offset : int) returns ();
modifies ;

procedure usbnet_open(#in~182.base : int, #in~182.offset : int) returns (#res : int);
modifies ;

procedure strcmp(#in~18.base : int, #in~18.offset : int, #in~19.base : int, #in~19.offset : int) returns (#res : int);
modifies ;

procedure usb_register_driver(#in~100.base : int, #in~100.offset : int, #in~101.base : int, #in~101.offset : int, #in~102.base : int, #in~102.offset : int) returns (#res : int);
modifies ;

procedure ldv_release_9() returns (#res : int);
modifies ;

procedure memset(#in~12.base : int, #in~12.offset : int, #in~13 : int, #in~14 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure init_timer_key(#in~40.base : int, #in~40.offset : int, #in~41 : int, #in~42.base : int, #in~42.offset : int, #in~43.base : int, #in~43.offset : int) returns ();
modifies ;

procedure usbnet_start_xmit(#in~184.base : int, #in~184.offset : int, #in~185.base : int, #in~185.offset : int) returns (#res : ~netdev_tx_t);
modifies ;

procedure __init_work(#in~46.base : int, #in~46.offset : int, #in~47 : int) returns ();
modifies ;

procedure cfg80211_cqm_rssi_notify(#in~168.base : int, #in~168.offset : int, #in~169 : int, #in~170 : int) returns ();
modifies ;

procedure rndis_rx_fixup(#in~200.base : int, #in~200.offset : int, #in~201.base : int, #in~201.offset : int) returns (#res : int);
modifies ;

procedure __ieee80211_get_channel(#in~116.base : int, #in~116.offset : int, #in~117 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure cfg80211_disconnected(#in~162.base : int, #in~162.offset : int, #in~163 : int, #in~164.base : int, #in~164.offset : int, #in~165 : int, #in~166 : int, #in~167 : int) returns ();
modifies ;

procedure warn_slowpath_null(#in~20.base : int, #in~20.offset : int, #in~21 : int) returns ();
modifies ;

procedure generic_rndis_bind(#in~195.base : int, #in~195.offset : int, #in~196.base : int, #in~196.offset : int, #in~197 : int) returns (#res : int);
modifies ;

procedure delayed_work_timer_fn(#in~45 : int) returns ();
modifies ;

procedure rndis_unbind(#in~198.base : int, #in~198.offset : int, #in~199.base : int, #in~199.offset : int) returns ();
modifies ;


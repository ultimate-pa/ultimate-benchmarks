type STRUCT~compat_timespec;
type STRUCT~map_segment;
type STRUCT~perf_event;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~dev_pm_qos;
type STRUCT~sock;
type STRUCT~sysfs_dirent;
type STRUCT~dma_map_ops;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~device_node;
type STRUCT~iommu_group;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~pid_namespace;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~iovec;
type STRUCT~swap_info_struct;
type STRUCT~backing_dev_info;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~pipe_inode_info;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~seq_file;
type STRUCT~nameidata;
type STRUCT~kstatfs;
type STRUCT~return_instance;
type STRUCT~uprobe;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~sem_undo_list;
type STRUCT~seccomp_filter;
type STRUCT~keyring_list;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~tty_struct;
type STRUCT~autogroup;
type STRUCT~taskstats;
type STRUCT~tty_audit_buf;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~mem_cgroup;
type STRUCT~sched_class;
type STRUCT~task_group;
type STRUCT~fs_struct;
type STRUCT~nsproxy;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~bio_list;
type STRUCT~blk_plug;
type STRUCT~reclaim_state;
type STRUCT~io_context;
type STRUCT~css_set;
type STRUCT~robust_list_head;
type STRUCT~compat_robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~ep_device;
type STRUCT~mon_bus;
type STRUCT~usb_tt;
type STRUCT~wusb_dev;
type STRUCT~scatterlist;
type STRUCT~kmem_cache_node;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type STRUCT~vb2_queue;
type STRUCT~tuner_setup;
type STRUCT~v4l2_subdev_fh;
type STRUCT~v4l2_ctrl_helper;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__s64 = int;
type ~__u64 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~oom_flags_t = int;
type ~kernel_ulong_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~qsize_t = int;
type ~cputime_t = int;
type ~ldv_func_ret_type = int;
type ~__kernel_suseconds_t = ~__kernel_long_t;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_clock_t = ~__kernel_long_t;
type ~__le16 = ~__u16;
type ~__le32 = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint32_t = ~__u32;
type ~dma_addr_t = ~u64;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~projid_t = ~__kernel_uid32_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~v4l2_std_id = ~__u64;
const #funAddr~stk_isoc_handler.base : int;
const #funAddr~stk_isoc_handler.offset : int;
const #funAddr~autoremove_wake_function.base : int;
const #funAddr~autoremove_wake_function.offset : int;
const #funAddr~stk_v4l_vm_open.base : int;
const #funAddr~stk_v4l_vm_open.offset : int;
const #funAddr~stk_v4l_vm_close.base : int;
const #funAddr~stk_v4l_vm_close.offset : int;
const #funAddr~stk_s_ctrl.base : int;
const #funAddr~stk_s_ctrl.offset : int;
const #funAddr~v4l_stk_read.base : int;
const #funAddr~v4l_stk_read.offset : int;
const #funAddr~v4l_stk_poll.base : int;
const #funAddr~v4l_stk_poll.offset : int;
const #funAddr~video_ioctl2.base : int;
const #funAddr~video_ioctl2.offset : int;
const #funAddr~v4l_stk_mmap.base : int;
const #funAddr~v4l_stk_mmap.offset : int;
const #funAddr~v4l_stk_open.base : int;
const #funAddr~v4l_stk_open.offset : int;
const #funAddr~v4l_stk_release.base : int;
const #funAddr~v4l_stk_release.offset : int;
const #funAddr~stk_vidioc_querycap.base : int;
const #funAddr~stk_vidioc_querycap.offset : int;
const #funAddr~stk_vidioc_enum_fmt_vid_cap.base : int;
const #funAddr~stk_vidioc_enum_fmt_vid_cap.offset : int;
const #funAddr~stk_vidioc_g_fmt_vid_cap.base : int;
const #funAddr~stk_vidioc_g_fmt_vid_cap.offset : int;
const #funAddr~stk_vidioc_s_fmt_vid_cap.base : int;
const #funAddr~stk_vidioc_s_fmt_vid_cap.offset : int;
const #funAddr~stk_vidioc_try_fmt_vid_cap.base : int;
const #funAddr~stk_vidioc_try_fmt_vid_cap.offset : int;
const #funAddr~stk_vidioc_reqbufs.base : int;
const #funAddr~stk_vidioc_reqbufs.offset : int;
const #funAddr~stk_vidioc_querybuf.base : int;
const #funAddr~stk_vidioc_querybuf.offset : int;
const #funAddr~stk_vidioc_qbuf.base : int;
const #funAddr~stk_vidioc_qbuf.offset : int;
const #funAddr~stk_vidioc_dqbuf.base : int;
const #funAddr~stk_vidioc_dqbuf.offset : int;
const #funAddr~stk_vidioc_streamon.base : int;
const #funAddr~stk_vidioc_streamon.offset : int;
const #funAddr~stk_vidioc_streamoff.base : int;
const #funAddr~stk_vidioc_streamoff.offset : int;
const #funAddr~stk_vidioc_enum_input.base : int;
const #funAddr~stk_vidioc_enum_input.offset : int;
const #funAddr~stk_vidioc_g_input.base : int;
const #funAddr~stk_vidioc_g_input.offset : int;
const #funAddr~stk_vidioc_s_input.base : int;
const #funAddr~stk_vidioc_s_input.offset : int;
const #funAddr~stk_vidioc_g_parm.base : int;
const #funAddr~stk_vidioc_g_parm.offset : int;
const #funAddr~v4l2_ctrl_log_status.base : int;
const #funAddr~v4l2_ctrl_log_status.offset : int;
const #funAddr~stk_vidioc_enum_framesizes.base : int;
const #funAddr~stk_vidioc_enum_framesizes.offset : int;
const #funAddr~v4l2_ctrl_subscribe_event.base : int;
const #funAddr~v4l2_ctrl_subscribe_event.offset : int;
const #funAddr~v4l2_event_unsubscribe.base : int;
const #funAddr~v4l2_event_unsubscribe.offset : int;
const #funAddr~stk_v4l_dev_release.base : int;
const #funAddr~stk_v4l_dev_release.offset : int;
const #funAddr~stk_camera_probe.base : int;
const #funAddr~stk_camera_probe.offset : int;
const #funAddr~stk_camera_disconnect.base : int;
const #funAddr~stk_camera_disconnect.offset : int;
const #funAddr~stk_camera_suspend.base : int;
const #funAddr~stk_camera_suspend.offset : int;
const #funAddr~stk_camera_resume.base : int;
const #funAddr~stk_camera_resume.offset : int;
const ~usb_device_speed~USB_SPEED_UNKNOWN : int;
const ~usb_device_speed~USB_SPEED_LOW : int;
const ~usb_device_speed~USB_SPEED_FULL : int;
const ~usb_device_speed~USB_SPEED_HIGH : int;
const ~usb_device_speed~USB_SPEED_WIRELESS : int;
const ~usb_device_speed~USB_SPEED_SUPER : int;
const ~usb_device_state~USB_STATE_NOTATTACHED : int;
const ~usb_device_state~USB_STATE_ATTACHED : int;
const ~usb_device_state~USB_STATE_POWERED : int;
const ~usb_device_state~USB_STATE_RECONNECTING : int;
const ~usb_device_state~USB_STATE_UNAUTHENTICATED : int;
const ~usb_device_state~USB_STATE_DEFAULT : int;
const ~usb_device_state~USB_STATE_ADDRESS : int;
const ~usb_device_state~USB_STATE_CONFIGURED : int;
const ~usb_device_state~USB_STATE_SUSPENDED : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~uprobe_task_state~UTASK_RUNNING : int;
const ~uprobe_task_state~UTASK_SSTEP : int;
const ~uprobe_task_state~UTASK_SSTEP_ACK : int;
const ~uprobe_task_state~UTASK_SSTEP_TRAPPED : int;
const ~usb_interface_condition~USB_INTERFACE_UNBOUND : int;
const ~usb_interface_condition~USB_INTERFACE_BINDING : int;
const ~usb_interface_condition~USB_INTERFACE_BOUND : int;
const ~usb_interface_condition~USB_INTERFACE_UNBINDING : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE : int;
const ~usb_device_removable~USB_DEVICE_FIXED : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OVERLAY : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_PRIVATE : int;
const ~v4l2_priority~V4L2_PRIORITY_UNSET : int;
const ~v4l2_priority~V4L2_PRIORITY_BACKGROUND : int;
const ~v4l2_priority~V4L2_PRIORITY_INTERACTIVE : int;
const ~v4l2_priority~V4L2_PRIORITY_RECORD : int;
const ~v4l2_priority~V4L2_PRIORITY_DEFAULT : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BOOLEAN : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_MENU : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BUTTON : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER64 : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_CTRL_CLASS : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_STRING : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BITMASK : int;
const ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER_MENU : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_FIXED : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB666_1X18 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_1X24 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_ARGB8888_1X32 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UV8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1_5X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_2X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_2X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_2X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YDYUYDYV8_1X16 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_1X20 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_1X20 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUV10_1X30 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_AYUV8_1X32 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_ALAW8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_DPCM8_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_BE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_LE : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_1X10 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB12_1X12 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_JPEG_1X8 : int;
const ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_S5C_UYVY_JPEG_1X8 : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_CUSTOM : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_DEVNAME : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_I2C : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_OF : int;
const ~v4l2_mbus_type~V4L2_MBUS_PARALLEL : int;
const ~v4l2_mbus_type~V4L2_MBUS_BT656 : int;
const ~v4l2_mbus_type~V4L2_MBUS_CSI2 : int;
const ~v4l2_subdev_ir_mode~V4L2_SUBDEV_IR_MODE_PULSE_WIDTH : int;
const ~stk_mode~MODE_VGA : int;
const ~stk_mode~MODE_SXGA : int;
const ~stk_mode~MODE_CIF : int;
const ~stk_mode~MODE_QVGA : int;
const ~stk_mode~MODE_QCIF : int;
const ~stk_status~S_PRESENT : int;
const ~stk_status~S_INITIALISED : int;
const ~stk_status~S_MEMALLOCD : int;
const ~stk_status~S_STREAMING : int;
axiom #funAddr~stk_isoc_handler.base == -1 && #funAddr~stk_isoc_handler.offset == 0;
axiom #funAddr~autoremove_wake_function.base == -1 && #funAddr~autoremove_wake_function.offset == 1;
axiom #funAddr~stk_v4l_vm_open.base == -1 && #funAddr~stk_v4l_vm_open.offset == 2;
axiom #funAddr~stk_v4l_vm_close.base == -1 && #funAddr~stk_v4l_vm_close.offset == 3;
axiom #funAddr~stk_s_ctrl.base == -1 && #funAddr~stk_s_ctrl.offset == 4;
axiom #funAddr~v4l_stk_read.base == -1 && #funAddr~v4l_stk_read.offset == 5;
axiom #funAddr~v4l_stk_poll.base == -1 && #funAddr~v4l_stk_poll.offset == 6;
axiom #funAddr~video_ioctl2.base == -1 && #funAddr~video_ioctl2.offset == 7;
axiom #funAddr~v4l_stk_mmap.base == -1 && #funAddr~v4l_stk_mmap.offset == 8;
axiom #funAddr~v4l_stk_open.base == -1 && #funAddr~v4l_stk_open.offset == 9;
axiom #funAddr~v4l_stk_release.base == -1 && #funAddr~v4l_stk_release.offset == 10;
axiom #funAddr~stk_vidioc_querycap.base == -1 && #funAddr~stk_vidioc_querycap.offset == 11;
axiom #funAddr~stk_vidioc_enum_fmt_vid_cap.base == -1 && #funAddr~stk_vidioc_enum_fmt_vid_cap.offset == 12;
axiom #funAddr~stk_vidioc_g_fmt_vid_cap.base == -1 && #funAddr~stk_vidioc_g_fmt_vid_cap.offset == 13;
axiom #funAddr~stk_vidioc_s_fmt_vid_cap.base == -1 && #funAddr~stk_vidioc_s_fmt_vid_cap.offset == 14;
axiom #funAddr~stk_vidioc_try_fmt_vid_cap.base == -1 && #funAddr~stk_vidioc_try_fmt_vid_cap.offset == 15;
axiom #funAddr~stk_vidioc_reqbufs.base == -1 && #funAddr~stk_vidioc_reqbufs.offset == 16;
axiom #funAddr~stk_vidioc_querybuf.base == -1 && #funAddr~stk_vidioc_querybuf.offset == 17;
axiom #funAddr~stk_vidioc_qbuf.base == -1 && #funAddr~stk_vidioc_qbuf.offset == 18;
axiom #funAddr~stk_vidioc_dqbuf.base == -1 && #funAddr~stk_vidioc_dqbuf.offset == 19;
axiom #funAddr~stk_vidioc_streamon.base == -1 && #funAddr~stk_vidioc_streamon.offset == 20;
axiom #funAddr~stk_vidioc_streamoff.base == -1 && #funAddr~stk_vidioc_streamoff.offset == 21;
axiom #funAddr~stk_vidioc_enum_input.base == -1 && #funAddr~stk_vidioc_enum_input.offset == 22;
axiom #funAddr~stk_vidioc_g_input.base == -1 && #funAddr~stk_vidioc_g_input.offset == 23;
axiom #funAddr~stk_vidioc_s_input.base == -1 && #funAddr~stk_vidioc_s_input.offset == 24;
axiom #funAddr~stk_vidioc_g_parm.base == -1 && #funAddr~stk_vidioc_g_parm.offset == 25;
axiom #funAddr~v4l2_ctrl_log_status.base == -1 && #funAddr~v4l2_ctrl_log_status.offset == 26;
axiom #funAddr~stk_vidioc_enum_framesizes.base == -1 && #funAddr~stk_vidioc_enum_framesizes.offset == 27;
axiom #funAddr~v4l2_ctrl_subscribe_event.base == -1 && #funAddr~v4l2_ctrl_subscribe_event.offset == 28;
axiom #funAddr~v4l2_event_unsubscribe.base == -1 && #funAddr~v4l2_event_unsubscribe.offset == 29;
axiom #funAddr~stk_v4l_dev_release.base == -1 && #funAddr~stk_v4l_dev_release.offset == 30;
axiom #funAddr~stk_camera_probe.base == -1 && #funAddr~stk_camera_probe.offset == 31;
axiom #funAddr~stk_camera_disconnect.base == -1 && #funAddr~stk_camera_disconnect.offset == 32;
axiom #funAddr~stk_camera_suspend.base == -1 && #funAddr~stk_camera_suspend.offset == 33;
axiom #funAddr~stk_camera_resume.base == -1 && #funAddr~stk_camera_resume.offset == 34;
axiom ~usb_device_speed~USB_SPEED_UNKNOWN == 0;
axiom ~usb_device_speed~USB_SPEED_LOW == 1;
axiom ~usb_device_speed~USB_SPEED_FULL == 2;
axiom ~usb_device_speed~USB_SPEED_HIGH == 3;
axiom ~usb_device_speed~USB_SPEED_WIRELESS == 4;
axiom ~usb_device_speed~USB_SPEED_SUPER == 5;
axiom ~usb_device_state~USB_STATE_NOTATTACHED == 0;
axiom ~usb_device_state~USB_STATE_ATTACHED == 1;
axiom ~usb_device_state~USB_STATE_POWERED == 2;
axiom ~usb_device_state~USB_STATE_RECONNECTING == 3;
axiom ~usb_device_state~USB_STATE_UNAUTHENTICATED == 4;
axiom ~usb_device_state~USB_STATE_DEFAULT == 5;
axiom ~usb_device_state~USB_STATE_ADDRESS == 6;
axiom ~usb_device_state~USB_STATE_CONFIGURED == 7;
axiom ~usb_device_state~USB_STATE_SUSPENDED == 8;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~uprobe_task_state~UTASK_RUNNING == 0;
axiom ~uprobe_task_state~UTASK_SSTEP == 1;
axiom ~uprobe_task_state~UTASK_SSTEP_ACK == 2;
axiom ~uprobe_task_state~UTASK_SSTEP_TRAPPED == 3;
axiom ~usb_interface_condition~USB_INTERFACE_UNBOUND == 0;
axiom ~usb_interface_condition~USB_INTERFACE_BINDING == 1;
axiom ~usb_interface_condition~USB_INTERFACE_BOUND == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBINDING == 3;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN == 0;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE == 1;
axiom ~usb_device_removable~USB_DEVICE_FIXED == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE == 1;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT == 2;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OVERLAY == 3;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_CAPTURE == 4;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_OUTPUT == 5;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_CAPTURE == 6;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_OUTPUT == 7;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY == 8;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE == 9;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE == 10;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_PRIVATE == 128;
axiom ~v4l2_priority~V4L2_PRIORITY_UNSET == 0;
axiom ~v4l2_priority~V4L2_PRIORITY_BACKGROUND == 1;
axiom ~v4l2_priority~V4L2_PRIORITY_INTERACTIVE == 2;
axiom ~v4l2_priority~V4L2_PRIORITY_RECORD == 3;
axiom ~v4l2_priority~V4L2_PRIORITY_DEFAULT == 2;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER == 1;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BOOLEAN == 2;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_MENU == 3;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BUTTON == 4;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER64 == 5;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_CTRL_CLASS == 6;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_STRING == 7;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_BITMASK == 8;
axiom ~v4l2_ctrl_type~V4L2_CTRL_TYPE_INTEGER_MENU == 9;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_FIXED == 1;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_BE == 4097;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB444_2X8_PADHI_LE == 4098;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_BE == 4099;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB555_2X8_PADHI_LE == 4100;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_BE == 4101;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_BGR565_2X8_LE == 4102;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_BE == 4103;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB565_2X8_LE == 4104;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB666_1X18 == 4105;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_1X24 == 4106;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_BE == 4107;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_RGB888_2X12_LE == 4108;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_ARGB8888_1X32 == 4109;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y8_1X8 == 8193;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UV8_1X8 == 8213;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1_5X8 == 8194;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1_5X8 == 8195;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1_5X8 == 8196;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1_5X8 == 8197;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_2X8 == 8198;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_2X8 == 8199;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_2X8 == 8200;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_2X8 == 8201;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y10_1X10 == 8202;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_2X10 == 8203;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_2X10 == 8204;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_Y12_1X12 == 8211;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_UYVY8_1X16 == 8207;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_VYUY8_1X16 == 8208;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV8_1X16 == 8209;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU8_1X16 == 8210;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YDYUYDYV8_1X16 == 8212;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUYV10_1X20 == 8205;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YVYU10_1X20 == 8206;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_YUV10_1X30 == 8214;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_AYUV8_1X32 == 8215;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR8_1X8 == 12289;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG8_1X8 == 12307;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG8_1X8 == 12290;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB8_1X8 == 12308;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_ALAW8_1X8 == 12309;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_ALAW8_1X8 == 12310;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_ALAW8_1X8 == 12311;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_ALAW8_1X8 == 12312;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_DPCM8_1X8 == 12299;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_DPCM8_1X8 == 12300;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_DPCM8_1X8 == 12297;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_DPCM8_1X8 == 12301;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_BE == 12291;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_LE == 12292;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_BE == 12293;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_LE == 12294;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR10_1X10 == 12295;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG10_1X10 == 12302;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG10_1X10 == 12298;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB10_1X10 == 12303;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SBGGR12_1X12 == 12296;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGBRG12_1X12 == 12304;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SGRBG12_1X12 == 12305;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_SRGGB12_1X12 == 12306;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_JPEG_1X8 == 16385;
axiom ~v4l2_mbus_pixelcode~V4L2_MBUS_FMT_S5C_UYVY_JPEG_1X8 == 20481;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_CUSTOM == 0;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_DEVNAME == 1;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_I2C == 2;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_OF == 3;
axiom ~v4l2_mbus_type~V4L2_MBUS_PARALLEL == 0;
axiom ~v4l2_mbus_type~V4L2_MBUS_BT656 == 1;
axiom ~v4l2_mbus_type~V4L2_MBUS_CSI2 == 2;
axiom ~v4l2_subdev_ir_mode~V4L2_SUBDEV_IR_MODE_PULSE_WIDTH == 0;
axiom ~stk_mode~MODE_VGA == 0;
axiom ~stk_mode~MODE_SXGA == 1;
axiom ~stk_mode~MODE_CIF == 2;
axiom ~stk_mode~MODE_QVGA == 3;
axiom ~stk_mode~MODE_QCIF == 4;
axiom ~stk_status~S_PRESENT == 1;
axiom ~stk_status~S_INITIALISED == 2;
axiom ~stk_status~S_MEMALLOCD == 4;
axiom ~stk_status~S_STREAMING == 8;
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
var ~ldv_state_variable_6 : int;

var ~ldv_state_variable_0 : int;

var ~ldv_state_variable_5 : int;

var ~ldv_state_variable_3 : int;

var ~ldv_state_variable_2 : int;

var ~ref_cnt : int;

var ~ldv_state_variable_1 : int;

var ~usb_counter : int;

var ~ldv_state_variable_4 : int;

var ~hflip : int;

var ~vflip : int;

var ~debug : int;

var ~ldv_retval_2 : int;

var ~ldv_retval_5 : int;

var ~ldv_retval_0 : int;

var ~ldv_retval_4 : int;

var ~ldv_retval_1 : int;

var ~ldv_retval_3 : int;

var ~INTERF_STATE : int;

var ~SERIAL_STATE : int;

var ~usb_intfdata.base : int, ~usb_intfdata.offset : int;

var ~dev_counter : int;

var ~completeFnIntCounter : int;

var ~completeFnBulkCounter : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~v4l_stk_ioctl_ops_group4.base : int, ~v4l_stk_ioctl_ops_group4.offset : int;

var ~v4l_stk_ioctl_ops_group0.base : int, ~v4l_stk_ioctl_ops_group0.offset : int;

var ~v4l_stk_ioctl_ops_group3.base : int, ~v4l_stk_ioctl_ops_group3.offset : int;

var ~stk_camera_driver_group1.base : int, ~stk_camera_driver_group1.offset : int;

var ~v4l_stk_fops_group0.base : int, ~v4l_stk_fops_group0.offset : int;

var ~v4l_stk_ioctl_ops_group2.base : int, ~v4l_stk_ioctl_ops_group2.offset : int;

var ~v4l_stk_ioctl_ops_group1.base : int, ~v4l_stk_ioctl_ops_group1.offset : int;

var ~stk_v4l_vm_ops_group0.base : int, ~stk_v4l_vm_ops_group0.offset : int;

var ~#stkwebcam_table.base : int, ~#stkwebcam_table.offset : int;

var ~#stk_upside_down_dmi_table.base : int, ~#stk_upside_down_dmi_table.offset : int;

var ~#stk1125_initvals.base : int, ~#stk1125_initvals.offset : int;

var ~#stk_v4l_vm_ops.base : int, ~#stk_v4l_vm_ops.offset : int;

var ~stk_sizes.w : [int]int, ~stk_sizes.h : [int]int, ~stk_sizes.m : [int]int;

var ~#stk_ctrl_ops.base : int, ~#stk_ctrl_ops.offset : int;

var ~#v4l_stk_fops.base : int, ~#v4l_stk_fops.offset : int;

var ~#v4l_stk_ioctl_ops.base : int, ~#v4l_stk_ioctl_ops.offset : int;

var ~stk_v4l_data.entity.list.next.base : int, ~stk_v4l_data.entity.list.next.offset : int, ~stk_v4l_data.entity.list.prev.base : int, ~stk_v4l_data.entity.list.prev.offset : int, ~stk_v4l_data.entity.parent.base : int, ~stk_v4l_data.entity.parent.offset : int, ~stk_v4l_data.entity.id : int, ~stk_v4l_data.entity.name.base : int, ~stk_v4l_data.entity.name.offset : int, ~stk_v4l_data.entity.type : int, ~stk_v4l_data.entity.revision : int, ~stk_v4l_data.entity.flags : int, ~stk_v4l_data.entity.group_id : int, ~stk_v4l_data.entity.num_pads : int, ~stk_v4l_data.entity.num_links : int, ~stk_v4l_data.entity.num_backlinks : int, ~stk_v4l_data.entity.max_links : int, ~stk_v4l_data.entity.pads.base : int, ~stk_v4l_data.entity.pads.offset : int, ~stk_v4l_data.entity.links.base : int, ~stk_v4l_data.entity.links.offset : int, ~stk_v4l_data.entity.ops.base : int, ~stk_v4l_data.entity.ops.offset : int, ~stk_v4l_data.entity.stream_count : int, ~stk_v4l_data.entity.use_count : int, ~stk_v4l_data.entity.pipe.base : int, ~stk_v4l_data.entity.pipe.offset : int, ~stk_v4l_data.entity.info.v4l.major : int, ~stk_v4l_data.entity.info.v4l.minor : int, ~stk_v4l_data.entity.info.fb.major : int, ~stk_v4l_data.entity.info.fb.minor : int, ~stk_v4l_data.entity.info.alsa.card : int, ~stk_v4l_data.entity.info.alsa.device : int, ~stk_v4l_data.entity.info.alsa.subdevice : int, ~stk_v4l_data.entity.info.dvb : int, ~stk_v4l_data.fops.base : int, ~stk_v4l_data.fops.offset : int, ~stk_v4l_data.dev.parent.base : int, ~stk_v4l_data.dev.parent.offset : int, ~stk_v4l_data.dev.p.base : int, ~stk_v4l_data.dev.p.offset : int, ~stk_v4l_data.dev.kobj.name.base : int, ~stk_v4l_data.dev.kobj.name.offset : int, ~stk_v4l_data.dev.kobj.entry.next.base : int, ~stk_v4l_data.dev.kobj.entry.next.offset : int, ~stk_v4l_data.dev.kobj.entry.prev.base : int, ~stk_v4l_data.dev.kobj.entry.prev.offset : int, ~stk_v4l_data.dev.kobj.parent.base : int, ~stk_v4l_data.dev.kobj.parent.offset : int, ~stk_v4l_data.dev.kobj.kset.base : int, ~stk_v4l_data.dev.kobj.kset.offset : int, ~stk_v4l_data.dev.kobj.ktype.base : int, ~stk_v4l_data.dev.kobj.ktype.offset : int, ~stk_v4l_data.dev.kobj.sd.base : int, ~stk_v4l_data.dev.kobj.sd.offset : int, ~stk_v4l_data.dev.kobj.kref.refcount.counter : int, ~stk_v4l_data.dev.kobj.release.work.data.counter : int, ~stk_v4l_data.dev.kobj.release.work.entry.next.base : int, ~stk_v4l_data.dev.kobj.release.work.entry.next.offset : int, ~stk_v4l_data.dev.kobj.release.work.entry.prev.base : int, ~stk_v4l_data.dev.kobj.release.work.entry.prev.offset : int, ~stk_v4l_data.dev.kobj.release.work.func.base : int, ~stk_v4l_data.dev.kobj.release.work.func.offset : int, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.key.base : int, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.key.offset : int, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.name.base : int, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.name.offset : int, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.cpu : int, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.ip : int, ~stk_v4l_data.dev.kobj.release.timer.entry.next.base : int, ~stk_v4l_data.dev.kobj.release.timer.entry.next.offset : int, ~stk_v4l_data.dev.kobj.release.timer.entry.prev.base : int, ~stk_v4l_data.dev.kobj.release.timer.entry.prev.offset : int, ~stk_v4l_data.dev.kobj.release.timer.expires : int, ~stk_v4l_data.dev.kobj.release.timer.base.base : int, ~stk_v4l_data.dev.kobj.release.timer.base.offset : int, ~stk_v4l_data.dev.kobj.release.timer.function.base : int, ~stk_v4l_data.dev.kobj.release.timer.function.offset : int, ~stk_v4l_data.dev.kobj.release.timer.data : int, ~stk_v4l_data.dev.kobj.release.timer.slack : int, ~stk_v4l_data.dev.kobj.release.timer.start_pid : int, ~stk_v4l_data.dev.kobj.release.timer.start_site.base : int, ~stk_v4l_data.dev.kobj.release.timer.start_site.offset : int, ~stk_v4l_data.dev.kobj.release.timer.start_comm : [int]int, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.key.base : int, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.key.offset : int, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.name.base : int, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.name.offset : int, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.cpu : int, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.ip : int, ~stk_v4l_data.dev.kobj.release.wq.base : int, ~stk_v4l_data.dev.kobj.release.wq.offset : int, ~stk_v4l_data.dev.kobj.release.cpu : int, ~stk_v4l_data.dev.kobj.state_initialized : int, ~stk_v4l_data.dev.kobj.state_in_sysfs : int, ~stk_v4l_data.dev.kobj.state_add_uevent_sent : int, ~stk_v4l_data.dev.kobj.state_remove_uevent_sent : int, ~stk_v4l_data.dev.kobj.uevent_suppress : int, ~stk_v4l_data.dev.init_name.base : int, ~stk_v4l_data.dev.init_name.offset : int, ~stk_v4l_data.dev.type.base : int, ~stk_v4l_data.dev.type.offset : int, ~stk_v4l_data.dev.mutex.count.counter : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.magic : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.owner_cpu : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.owner.base : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.owner.offset : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.key.base : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.key.offset : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.name.base : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.name.offset : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.cpu : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.ip : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.__padding : [int]int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.key.base : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.key.offset : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.name.base : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.name.offset : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.cpu : int, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.ip : int, ~stk_v4l_data.dev.mutex.wait_list.next.base : int, ~stk_v4l_data.dev.mutex.wait_list.next.offset : int, ~stk_v4l_data.dev.mutex.wait_list.prev.base : int, ~stk_v4l_data.dev.mutex.wait_list.prev.offset : int, ~stk_v4l_data.dev.mutex.owner.base : int, ~stk_v4l_data.dev.mutex.owner.offset : int, ~stk_v4l_data.dev.mutex.name.base : int, ~stk_v4l_data.dev.mutex.name.offset : int, ~stk_v4l_data.dev.mutex.magic.base : int, ~stk_v4l_data.dev.mutex.magic.offset : int, ~stk_v4l_data.dev.mutex.dep_map.key.base : int, ~stk_v4l_data.dev.mutex.dep_map.key.offset : int, ~stk_v4l_data.dev.mutex.dep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.mutex.dep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.mutex.dep_map.name.base : int, ~stk_v4l_data.dev.mutex.dep_map.name.offset : int, ~stk_v4l_data.dev.mutex.dep_map.cpu : int, ~stk_v4l_data.dev.mutex.dep_map.ip : int, ~stk_v4l_data.dev.bus.base : int, ~stk_v4l_data.dev.bus.offset : int, ~stk_v4l_data.dev.driver.base : int, ~stk_v4l_data.dev.driver.offset : int, ~stk_v4l_data.dev.platform_data.base : int, ~stk_v4l_data.dev.platform_data.offset : int, ~stk_v4l_data.dev.power.power_state.event : int, ~stk_v4l_data.dev.power.can_wakeup : int, ~stk_v4l_data.dev.power.async_suspend : int, ~stk_v4l_data.dev.power.is_prepared : int, ~stk_v4l_data.dev.power.is_suspended : int, ~stk_v4l_data.dev.power.ignore_children : int, ~stk_v4l_data.dev.power.early_init : int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail : int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head : int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail : int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.magic : int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.owner_cpu : int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.owner.base : int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.owner.offset : int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.key.base : int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.key.offset : int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.name.base : int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.name.offset : int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.cpu : int, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.ip : int, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.__padding : [int]int, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.key.base : int, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.key.offset : int, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.name.base : int, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.name.offset : int, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.cpu : int, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.ip : int, ~stk_v4l_data.dev.power.entry.next.base : int, ~stk_v4l_data.dev.power.entry.next.offset : int, ~stk_v4l_data.dev.power.entry.prev.base : int, ~stk_v4l_data.dev.power.entry.prev.offset : int, ~stk_v4l_data.dev.power.completion.done : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.magic : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.owner_cpu : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.owner.base : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.owner.offset : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.key.base : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.key.offset : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.name.base : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.name.offset : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.cpu : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.ip : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.__padding : [int]int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.key.base : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.key.offset : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.name.base : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.name.offset : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.cpu : int, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.ip : int, ~stk_v4l_data.dev.power.completion.wait.task_list.next.base : int, ~stk_v4l_data.dev.power.completion.wait.task_list.next.offset : int, ~stk_v4l_data.dev.power.completion.wait.task_list.prev.base : int, ~stk_v4l_data.dev.power.completion.wait.task_list.prev.offset : int, ~stk_v4l_data.dev.power.wakeup.base : int, ~stk_v4l_data.dev.power.wakeup.offset : int, ~stk_v4l_data.dev.power.wakeup_path : int, ~stk_v4l_data.dev.power.syscore : int, ~stk_v4l_data.dev.power.suspend_timer.entry.next.base : int, ~stk_v4l_data.dev.power.suspend_timer.entry.next.offset : int, ~stk_v4l_data.dev.power.suspend_timer.entry.prev.base : int, ~stk_v4l_data.dev.power.suspend_timer.entry.prev.offset : int, ~stk_v4l_data.dev.power.suspend_timer.expires : int, ~stk_v4l_data.dev.power.suspend_timer.base.base : int, ~stk_v4l_data.dev.power.suspend_timer.base.offset : int, ~stk_v4l_data.dev.power.suspend_timer.function.base : int, ~stk_v4l_data.dev.power.suspend_timer.function.offset : int, ~stk_v4l_data.dev.power.suspend_timer.data : int, ~stk_v4l_data.dev.power.suspend_timer.slack : int, ~stk_v4l_data.dev.power.suspend_timer.start_pid : int, ~stk_v4l_data.dev.power.suspend_timer.start_site.base : int, ~stk_v4l_data.dev.power.suspend_timer.start_site.offset : int, ~stk_v4l_data.dev.power.suspend_timer.start_comm : [int]int, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.key.base : int, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.key.offset : int, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.name.base : int, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.name.offset : int, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.cpu : int, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.ip : int, ~stk_v4l_data.dev.power.timer_expires : int, ~stk_v4l_data.dev.power.work.data.counter : int, ~stk_v4l_data.dev.power.work.entry.next.base : int, ~stk_v4l_data.dev.power.work.entry.next.offset : int, ~stk_v4l_data.dev.power.work.entry.prev.base : int, ~stk_v4l_data.dev.power.work.entry.prev.offset : int, ~stk_v4l_data.dev.power.work.func.base : int, ~stk_v4l_data.dev.power.work.func.offset : int, ~stk_v4l_data.dev.power.work.lockdep_map.key.base : int, ~stk_v4l_data.dev.power.work.lockdep_map.key.offset : int, ~stk_v4l_data.dev.power.work.lockdep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.power.work.lockdep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.power.work.lockdep_map.name.base : int, ~stk_v4l_data.dev.power.work.lockdep_map.name.offset : int, ~stk_v4l_data.dev.power.work.lockdep_map.cpu : int, ~stk_v4l_data.dev.power.work.lockdep_map.ip : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.magic : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.owner_cpu : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.owner.base : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.owner.offset : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.key.base : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.key.offset : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.name.base : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.name.offset : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.cpu : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.ip : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.__padding : [int]int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.key.base : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.key.offset : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.name.base : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.name.offset : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.cpu : int, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.ip : int, ~stk_v4l_data.dev.power.wait_queue.task_list.next.base : int, ~stk_v4l_data.dev.power.wait_queue.task_list.next.offset : int, ~stk_v4l_data.dev.power.wait_queue.task_list.prev.base : int, ~stk_v4l_data.dev.power.wait_queue.task_list.prev.offset : int, ~stk_v4l_data.dev.power.usage_count.counter : int, ~stk_v4l_data.dev.power.child_count.counter : int, ~stk_v4l_data.dev.power.disable_depth : int, ~stk_v4l_data.dev.power.idle_notification : int, ~stk_v4l_data.dev.power.request_pending : int, ~stk_v4l_data.dev.power.deferred_resume : int, ~stk_v4l_data.dev.power.run_wake : int, ~stk_v4l_data.dev.power.runtime_auto : int, ~stk_v4l_data.dev.power.no_callbacks : int, ~stk_v4l_data.dev.power.irq_safe : int, ~stk_v4l_data.dev.power.use_autosuspend : int, ~stk_v4l_data.dev.power.timer_autosuspends : int, ~stk_v4l_data.dev.power.memalloc_noio : int, ~stk_v4l_data.dev.power.request : int, ~stk_v4l_data.dev.power.runtime_status : int, ~stk_v4l_data.dev.power.runtime_error : int, ~stk_v4l_data.dev.power.autosuspend_delay : int, ~stk_v4l_data.dev.power.last_busy : int, ~stk_v4l_data.dev.power.active_jiffies : int, ~stk_v4l_data.dev.power.suspended_jiffies : int, ~stk_v4l_data.dev.power.accounting_timestamp : int, ~stk_v4l_data.dev.power.subsys_data.base : int, ~stk_v4l_data.dev.power.subsys_data.offset : int, ~stk_v4l_data.dev.power.qos.base : int, ~stk_v4l_data.dev.power.qos.offset : int, ~stk_v4l_data.dev.pm_domain.base : int, ~stk_v4l_data.dev.pm_domain.offset : int, ~stk_v4l_data.dev.numa_node : int, ~stk_v4l_data.dev.dma_mask.base : int, ~stk_v4l_data.dev.dma_mask.offset : int, ~stk_v4l_data.dev.coherent_dma_mask : int, ~stk_v4l_data.dev.dma_parms.base : int, ~stk_v4l_data.dev.dma_parms.offset : int, ~stk_v4l_data.dev.dma_pools.next.base : int, ~stk_v4l_data.dev.dma_pools.next.offset : int, ~stk_v4l_data.dev.dma_pools.prev.base : int, ~stk_v4l_data.dev.dma_pools.prev.offset : int, ~stk_v4l_data.dev.dma_mem.base : int, ~stk_v4l_data.dev.dma_mem.offset : int, ~stk_v4l_data.dev.archdata.dma_ops.base : int, ~stk_v4l_data.dev.archdata.dma_ops.offset : int, ~stk_v4l_data.dev.archdata.iommu.base : int, ~stk_v4l_data.dev.archdata.iommu.offset : int, ~stk_v4l_data.dev.of_node.base : int, ~stk_v4l_data.dev.of_node.offset : int, ~stk_v4l_data.dev.acpi_node.handle.base : int, ~stk_v4l_data.dev.acpi_node.handle.offset : int, ~stk_v4l_data.dev.devt : int, ~stk_v4l_data.dev.id : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.magic : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.owner_cpu : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.owner.base : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.owner.offset : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.key.base : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.key.offset : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.name.base : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.name.offset : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.cpu : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.ip : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.__padding : [int]int, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.key.base : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.key.offset : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.class_cache.base : [int]int, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.class_cache.offset : [int]int, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.name.base : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.name.offset : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.cpu : int, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.ip : int, ~stk_v4l_data.dev.devres_head.next.base : int, ~stk_v4l_data.dev.devres_head.next.offset : int, ~stk_v4l_data.dev.devres_head.prev.base : int, ~stk_v4l_data.dev.devres_head.prev.offset : int, ~stk_v4l_data.dev.knode_class.n_klist.base : int, ~stk_v4l_data.dev.knode_class.n_klist.offset : int, ~stk_v4l_data.dev.knode_class.n_node.next.base : int, ~stk_v4l_data.dev.knode_class.n_node.next.offset : int, ~stk_v4l_data.dev.knode_class.n_node.prev.base : int, ~stk_v4l_data.dev.knode_class.n_node.prev.offset : int, ~stk_v4l_data.dev.knode_class.n_ref.refcount.counter : int, ~stk_v4l_data.dev.class.base : int, ~stk_v4l_data.dev.class.offset : int, ~stk_v4l_data.dev.groups.base : int, ~stk_v4l_data.dev.groups.offset : int, ~stk_v4l_data.dev.release.base : int, ~stk_v4l_data.dev.release.offset : int, ~stk_v4l_data.dev.iommu_group.base : int, ~stk_v4l_data.dev.iommu_group.offset : int, ~stk_v4l_data.dev.offline_disabled : int, ~stk_v4l_data.dev.offline : int, ~stk_v4l_data.cdev.base : int, ~stk_v4l_data.cdev.offset : int, ~stk_v4l_data.v4l2_dev.base : int, ~stk_v4l_data.v4l2_dev.offset : int, ~stk_v4l_data.dev_parent.base : int, ~stk_v4l_data.dev_parent.offset : int, ~stk_v4l_data.ctrl_handler.base : int, ~stk_v4l_data.ctrl_handler.offset : int, ~stk_v4l_data.queue.base : int, ~stk_v4l_data.queue.offset : int, ~stk_v4l_data.prio.base : int, ~stk_v4l_data.prio.offset : int, ~stk_v4l_data.name : [int]int, ~stk_v4l_data.vfl_type : int, ~stk_v4l_data.vfl_dir : int, ~stk_v4l_data.minor : int, ~stk_v4l_data.num : int, ~stk_v4l_data.flags : int, ~stk_v4l_data.index : int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail : int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head : int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail : int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.magic : int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.owner_cpu : int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.owner.base : int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.owner.offset : int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.key.base : int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.key.offset : int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.class_cache.base : [int]int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.class_cache.offset : [int]int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.name.base : int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.name.offset : int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.cpu : int, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.ip : int, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.__padding : [int]int, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.key.base : int, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.key.offset : int, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.class_cache.base : [int]int, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.class_cache.offset : [int]int, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.name.base : int, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.name.offset : int, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.cpu : int, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.ip : int, ~stk_v4l_data.fh_list.next.base : int, ~stk_v4l_data.fh_list.next.offset : int, ~stk_v4l_data.fh_list.prev.base : int, ~stk_v4l_data.fh_list.prev.offset : int, ~stk_v4l_data.debug : int, ~stk_v4l_data.tvnorms : int, ~stk_v4l_data.release.base : int, ~stk_v4l_data.release.offset : int, ~stk_v4l_data.ioctl_ops.base : int, ~stk_v4l_data.ioctl_ops.offset : int, ~stk_v4l_data.valid_ioctls : [int]int, ~stk_v4l_data.disable_locking : [int]int, ~stk_v4l_data.lock.base : int, ~stk_v4l_data.lock.offset : int;

var ~#stk_camera_driver.base : int, ~#stk_camera_driver.offset : int;

var ~#ov_initvals.base : int, ~#ov_initvals.offset : int;

var ~#ov_fmt_uyvy.base : int, ~#ov_fmt_uyvy.offset : int;

var ~#ov_fmt_yuyv.base : int, ~#ov_fmt_yuyv.offset : int;

var ~#ov_fmt_rgbr.base : int, ~#ov_fmt_rgbr.offset : int;

var ~#ov_fmt_rgbp.base : int, ~#ov_fmt_rgbp.offset : int;

var ~#ov_fmt_bayer.base : int, ~#ov_fmt_bayer.offset : int;

var ~usb_urb.base : int, ~usb_urb.offset : int;

var ~usb_dev.base : int, ~usb_dev.offset : int;

var ~completeFnInt.base : int, ~completeFnInt.offset : int;

var ~completeFnBulk.base : int, ~completeFnBulk.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

var #memory_int : [int,int]int;

implementation ULTIMATE.init() returns (){
    var #t~nondet167.base : int, #t~nondet167.offset : int;
    var #t~nondet168.base : int, #t~nondet168.offset : int;
    var #t~union1763.major : int, #t~union1763.minor : int;
    var #t~union1764.major : int, #t~union1764.minor : int;
    var #t~union1765.card : int, #t~union1765.device : int, #t~union1765.subdevice : int;
    var #t~union1766 : int;
    var #t~init1767.base : [int]int, #t~init1767.offset : [int]int;
    var #t~init1768 : [int]int;
    var #t~init1769.base : [int]int, #t~init1769.offset : [int]int;
    var #t~union1771 : int;
    var #t~union1772.head : int, #t~union1772.tail : int;
    var #t~init1773.base : [int]int, #t~init1773.offset : [int]int;
    var #t~union1770.raw_lock.ldv_2243.head_tail : int, #t~union1770.raw_lock.ldv_2243.tickets.head : int, #t~union1770.raw_lock.ldv_2243.tickets.tail : int, #t~union1770.magic : int, #t~union1770.owner_cpu : int, #t~union1770.owner.base : int, #t~union1770.owner.offset : int, #t~union1770.dep_map.key.base : int, #t~union1770.dep_map.key.offset : int, #t~union1770.dep_map.class_cache.base : [int]int, #t~union1770.dep_map.class_cache.offset : [int]int, #t~union1770.dep_map.name.base : int, #t~union1770.dep_map.name.offset : int, #t~union1770.dep_map.cpu : int, #t~union1770.dep_map.ip : int;
    var #t~union1774.__padding : [int]int, #t~union1774.dep_map.key.base : int, #t~union1774.dep_map.key.offset : int, #t~union1774.dep_map.class_cache.base : [int]int, #t~union1774.dep_map.class_cache.offset : [int]int, #t~union1774.dep_map.name.base : int, #t~union1774.dep_map.name.offset : int, #t~union1774.dep_map.cpu : int, #t~union1774.dep_map.ip : int;
    var #t~init1775.base : [int]int, #t~init1775.offset : [int]int;
    var #t~union1777 : int;
    var #t~union1778.head : int, #t~union1778.tail : int;
    var #t~init1779.base : [int]int, #t~init1779.offset : [int]int;
    var #t~union1776.raw_lock.ldv_2243.head_tail : int, #t~union1776.raw_lock.ldv_2243.tickets.head : int, #t~union1776.raw_lock.ldv_2243.tickets.tail : int, #t~union1776.magic : int, #t~union1776.owner_cpu : int, #t~union1776.owner.base : int, #t~union1776.owner.offset : int, #t~union1776.dep_map.key.base : int, #t~union1776.dep_map.key.offset : int, #t~union1776.dep_map.class_cache.base : [int]int, #t~union1776.dep_map.class_cache.offset : [int]int, #t~union1776.dep_map.name.base : int, #t~union1776.dep_map.name.offset : int, #t~union1776.dep_map.cpu : int, #t~union1776.dep_map.ip : int;
    var #t~union1780.__padding : [int]int, #t~union1780.dep_map.key.base : int, #t~union1780.dep_map.key.offset : int, #t~union1780.dep_map.class_cache.base : [int]int, #t~union1780.dep_map.class_cache.offset : [int]int, #t~union1780.dep_map.name.base : int, #t~union1780.dep_map.name.offset : int, #t~union1780.dep_map.cpu : int, #t~union1780.dep_map.ip : int;
    var #t~union1782 : int;
    var #t~union1783.head : int, #t~union1783.tail : int;
    var #t~init1784.base : [int]int, #t~init1784.offset : [int]int;
    var #t~union1781.raw_lock.ldv_2243.head_tail : int, #t~union1781.raw_lock.ldv_2243.tickets.head : int, #t~union1781.raw_lock.ldv_2243.tickets.tail : int, #t~union1781.magic : int, #t~union1781.owner_cpu : int, #t~union1781.owner.base : int, #t~union1781.owner.offset : int, #t~union1781.dep_map.key.base : int, #t~union1781.dep_map.key.offset : int, #t~union1781.dep_map.class_cache.base : [int]int, #t~union1781.dep_map.class_cache.offset : [int]int, #t~union1781.dep_map.name.base : int, #t~union1781.dep_map.name.offset : int, #t~union1781.dep_map.cpu : int, #t~union1781.dep_map.ip : int;
    var #t~union1785.__padding : [int]int, #t~union1785.dep_map.key.base : int, #t~union1785.dep_map.key.offset : int, #t~union1785.dep_map.class_cache.base : [int]int, #t~union1785.dep_map.class_cache.offset : [int]int, #t~union1785.dep_map.name.base : int, #t~union1785.dep_map.name.offset : int, #t~union1785.dep_map.cpu : int, #t~union1785.dep_map.ip : int;
    var #t~init1786 : [int]int;
    var #t~init1787.base : [int]int, #t~init1787.offset : [int]int;
    var #t~init1788.base : [int]int, #t~init1788.offset : [int]int;
    var #t~union1790 : int;
    var #t~union1791.head : int, #t~union1791.tail : int;
    var #t~init1792.base : [int]int, #t~init1792.offset : [int]int;
    var #t~union1789.raw_lock.ldv_2243.head_tail : int, #t~union1789.raw_lock.ldv_2243.tickets.head : int, #t~union1789.raw_lock.ldv_2243.tickets.tail : int, #t~union1789.magic : int, #t~union1789.owner_cpu : int, #t~union1789.owner.base : int, #t~union1789.owner.offset : int, #t~union1789.dep_map.key.base : int, #t~union1789.dep_map.key.offset : int, #t~union1789.dep_map.class_cache.base : [int]int, #t~union1789.dep_map.class_cache.offset : [int]int, #t~union1789.dep_map.name.base : int, #t~union1789.dep_map.name.offset : int, #t~union1789.dep_map.cpu : int, #t~union1789.dep_map.ip : int;
    var #t~union1793.__padding : [int]int, #t~union1793.dep_map.key.base : int, #t~union1793.dep_map.key.offset : int, #t~union1793.dep_map.class_cache.base : [int]int, #t~union1793.dep_map.class_cache.offset : [int]int, #t~union1793.dep_map.name.base : int, #t~union1793.dep_map.name.offset : int, #t~union1793.dep_map.cpu : int, #t~union1793.dep_map.ip : int;
    var #t~union1795 : int;
    var #t~union1796.head : int, #t~union1796.tail : int;
    var #t~init1797.base : [int]int, #t~init1797.offset : [int]int;
    var #t~union1794.raw_lock.ldv_2243.head_tail : int, #t~union1794.raw_lock.ldv_2243.tickets.head : int, #t~union1794.raw_lock.ldv_2243.tickets.tail : int, #t~union1794.magic : int, #t~union1794.owner_cpu : int, #t~union1794.owner.base : int, #t~union1794.owner.offset : int, #t~union1794.dep_map.key.base : int, #t~union1794.dep_map.key.offset : int, #t~union1794.dep_map.class_cache.base : [int]int, #t~union1794.dep_map.class_cache.offset : [int]int, #t~union1794.dep_map.name.base : int, #t~union1794.dep_map.name.offset : int, #t~union1794.dep_map.cpu : int, #t~union1794.dep_map.ip : int;
    var #t~union1798.__padding : [int]int, #t~union1798.dep_map.key.base : int, #t~union1798.dep_map.key.offset : int, #t~union1798.dep_map.class_cache.base : [int]int, #t~union1798.dep_map.class_cache.offset : [int]int, #t~union1798.dep_map.name.base : int, #t~union1798.dep_map.name.offset : int, #t~union1798.dep_map.cpu : int, #t~union1798.dep_map.ip : int;
    var #t~init1799 : [int]int;
    var #t~union1801 : int;
    var #t~union1802.head : int, #t~union1802.tail : int;
    var #t~init1803.base : [int]int, #t~init1803.offset : [int]int;
    var #t~union1800.raw_lock.ldv_2243.head_tail : int, #t~union1800.raw_lock.ldv_2243.tickets.head : int, #t~union1800.raw_lock.ldv_2243.tickets.tail : int, #t~union1800.magic : int, #t~union1800.owner_cpu : int, #t~union1800.owner.base : int, #t~union1800.owner.offset : int, #t~union1800.dep_map.key.base : int, #t~union1800.dep_map.key.offset : int, #t~union1800.dep_map.class_cache.base : [int]int, #t~union1800.dep_map.class_cache.offset : [int]int, #t~union1800.dep_map.name.base : int, #t~union1800.dep_map.name.offset : int, #t~union1800.dep_map.cpu : int, #t~union1800.dep_map.ip : int;
    var #t~union1804.__padding : [int]int, #t~union1804.dep_map.key.base : int, #t~union1804.dep_map.key.offset : int, #t~union1804.dep_map.class_cache.base : [int]int, #t~union1804.dep_map.class_cache.offset : [int]int, #t~union1804.dep_map.name.base : int, #t~union1804.dep_map.name.offset : int, #t~union1804.dep_map.cpu : int, #t~union1804.dep_map.ip : int;
    var #t~init1805 : [int]int;
    var #t~init1806 : [int]int;
    var #t~nondet1537.base : int, #t~nondet1537.offset : int;
    var #t~union1807.head : int, #t~union1807.tail : int;
    var #t~union1808.__padding : [int]int, #t~union1808.dep_map.key.base : int, #t~union1808.dep_map.key.offset : int, #t~union1808.dep_map.class_cache.base : [int]int, #t~union1808.dep_map.class_cache.offset : [int]int, #t~union1808.dep_map.name.base : int, #t~union1808.dep_map.name.offset : int, #t~union1808.dep_map.cpu : int, #t~union1808.dep_map.ip : int;

  loc0:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_state_variable_5 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_state_variable_2 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_1 := 0;
    ~usb_counter := 0;
    ~ldv_state_variable_4 := 0;
    ~hflip := -1;
    ~vflip := -1;
    ~debug := 0;
    ~ldv_retval_2 := 0;
    ~ldv_retval_5 := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_4 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_retval_3 := 0;
    ~INTERF_STATE := 0;
    ~SERIAL_STATE := 0;
    ~usb_intfdata.base, ~usb_intfdata.offset := 0, 0;
    ~dev_counter := 0;
    ~completeFnIntCounter := 0;
    ~completeFnBulkCounter := 0;
    ~v4l_stk_ioctl_ops_group4.base, ~v4l_stk_ioctl_ops_group4.offset := 0, 0;
    ~v4l_stk_ioctl_ops_group0.base, ~v4l_stk_ioctl_ops_group0.offset := 0, 0;
    ~v4l_stk_ioctl_ops_group3.base, ~v4l_stk_ioctl_ops_group3.offset := 0, 0;
    ~stk_camera_driver_group1.base, ~stk_camera_driver_group1.offset := 0, 0;
    ~v4l_stk_fops_group0.base, ~v4l_stk_fops_group0.offset := 0, 0;
    ~v4l_stk_ioctl_ops_group2.base, ~v4l_stk_ioctl_ops_group2.offset := 0, 0;
    ~v4l_stk_ioctl_ops_group1.base, ~v4l_stk_ioctl_ops_group1.offset := 0, 0;
    ~stk_v4l_vm_ops_group0.base, ~stk_v4l_vm_ops_group0.offset := 0, 0;
    call ~#stkwebcam_table.base, ~#stkwebcam_table.offset := #Ultimate.alloc(75);
    call write~int(899, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 0 + 0, 2);
    call write~int(5967, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 0 + 2, 2);
    call write~int(41745, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 0 + 4, 2);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 0 + 6, 2);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 0 + 8, 2);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 0 + 10, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 0 + 11, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 0 + 12, 1);
    call write~int(255, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 0 + 13, 1);
    call write~int(255, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 0 + 14, 1);
    call write~int(255, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 0 + 15, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 0 + 16, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 0 + 17, 8);
    call write~int(899, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 25 + 0, 2);
    call write~int(1505, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 25 + 2, 2);
    call write~int(1281, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 25 + 4, 2);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 25 + 6, 2);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 25 + 8, 2);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 25 + 10, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 25 + 11, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 25 + 12, 1);
    call write~int(255, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 25 + 13, 1);
    call write~int(255, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 25 + 14, 1);
    call write~int(255, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 25 + 15, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 25 + 16, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 25 + 17, 8);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 50 + 0, 2);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 50 + 2, 2);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 50 + 4, 2);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 50 + 6, 2);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 50 + 8, 2);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 50 + 10, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 50 + 11, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 50 + 12, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 50 + 13, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 50 + 14, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 50 + 15, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 50 + 16, 1);
    call write~int(0, ~#stkwebcam_table.base, ~#stkwebcam_table.offset + 50 + 17, 8);
    call ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset := #Ultimate.alloc(1044);
    call write~$Pointer$(0, 0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 0, 8);
    call #t~nondet167.base, #t~nondet167.offset := #Ultimate.alloc(8);
    call write~$Pointer$(#t~nondet167.base, #t~nondet167.offset, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 8, 8);
    call write~int(4, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 1, 1);
    call write~int(65, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 0, 1);
    call write~int(83, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 1, 1);
    call write~int(85, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 2, 1);
    call write~int(83, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 3, 1);
    call write~int(84, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 4, 1);
    call write~int(101, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 5, 1);
    call write~int(75, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 6, 1);
    call write~int(32, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 7, 1);
    call write~int(67, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 8, 1);
    call write~int(111, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 9, 1);
    call write~int(109, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 10, 1);
    call write~int(112, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 11, 1);
    call write~int(117, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 12, 1);
    call write~int(116, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 13, 1);
    call write~int(101, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 14, 1);
    call write~int(114, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 15, 1);
    call write~int(32, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 16, 1);
    call write~int(73, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 17, 1);
    call write~int(110, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 18, 1);
    call write~int(99, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 19, 1);
    call write~int(46, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 20, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 21, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 22, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 23, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 24, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 25, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 26, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 27, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 28, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 29, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 30, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 31, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 32, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 33, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 34, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 35, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 36, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 37, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 38, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 39, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 40, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 41, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 42, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 43, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 44, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 45, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 46, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 47, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 48, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 49, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 50, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 51, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 52, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 53, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 54, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 55, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 56, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 57, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 58, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 59, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 60, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 61, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 62, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 63, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 64, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 65, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 66, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 67, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 68, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 69, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 70, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 71, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 72, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 73, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 74, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 75, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 76, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 77, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 0 + 2 + 78, 1);
    call write~int(5, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 1, 1);
    call write~int(71, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 0, 1);
    call write~int(49, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 2, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 3, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 4, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 5, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 6, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 7, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 8, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 9, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 10, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 11, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 12, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 13, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 14, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 15, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 16, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 17, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 18, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 19, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 20, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 21, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 22, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 23, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 24, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 25, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 26, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 27, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 28, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 29, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 30, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 31, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 32, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 33, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 34, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 35, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 36, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 37, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 38, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 39, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 40, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 41, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 42, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 43, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 44, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 45, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 46, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 47, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 48, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 49, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 50, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 51, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 52, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 53, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 54, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 55, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 56, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 57, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 58, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 59, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 60, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 61, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 62, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 63, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 64, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 65, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 66, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 67, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 68, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 69, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 70, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 71, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 72, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 73, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 74, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 75, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 76, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 77, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 81 + 2 + 78, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 2, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 3, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 4, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 5, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 6, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 7, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 8, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 9, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 10, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 11, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 12, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 13, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 14, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 15, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 16, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 17, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 18, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 19, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 20, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 21, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 22, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 23, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 24, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 25, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 26, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 27, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 28, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 29, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 30, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 31, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 32, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 33, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 34, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 35, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 36, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 37, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 38, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 39, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 40, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 41, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 42, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 43, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 44, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 45, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 46, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 47, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 48, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 49, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 50, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 51, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 52, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 53, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 54, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 55, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 56, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 57, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 58, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 59, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 60, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 61, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 62, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 63, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 64, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 65, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 66, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 67, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 68, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 69, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 70, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 71, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 72, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 73, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 74, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 75, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 76, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 77, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 162 + 2 + 78, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 2, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 3, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 4, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 5, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 6, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 7, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 8, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 9, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 10, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 11, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 12, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 13, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 14, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 15, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 16, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 17, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 18, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 19, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 20, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 21, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 22, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 23, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 24, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 25, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 26, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 27, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 28, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 29, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 30, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 31, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 32, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 33, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 34, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 35, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 36, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 37, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 38, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 39, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 40, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 41, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 42, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 43, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 44, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 45, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 46, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 47, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 48, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 49, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 50, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 51, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 52, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 53, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 54, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 55, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 56, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 57, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 58, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 59, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 60, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 61, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 62, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 63, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 64, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 65, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 66, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 67, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 68, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 69, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 70, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 71, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 72, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 73, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 74, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 75, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 76, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 77, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 16 + 243 + 2 + 78, 1);
    call write~$Pointer$(0, 0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 0 + 340, 8);
    call write~$Pointer$(0, 0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 0, 8);
    call #t~nondet168.base, #t~nondet168.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet168.base, #t~nondet168.offset, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 8, 8);
    call write~int(4, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 1, 1);
    call write~int(65, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 0, 1);
    call write~int(83, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 1, 1);
    call write~int(85, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 2, 1);
    call write~int(83, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 3, 1);
    call write~int(84, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 4, 1);
    call write~int(101, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 5, 1);
    call write~int(75, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 6, 1);
    call write~int(32, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 7, 1);
    call write~int(67, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 8, 1);
    call write~int(111, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 9, 1);
    call write~int(109, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 10, 1);
    call write~int(112, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 11, 1);
    call write~int(117, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 12, 1);
    call write~int(116, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 13, 1);
    call write~int(101, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 14, 1);
    call write~int(114, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 15, 1);
    call write~int(32, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 16, 1);
    call write~int(73, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 17, 1);
    call write~int(110, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 18, 1);
    call write~int(99, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 19, 1);
    call write~int(46, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 20, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 21, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 22, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 23, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 24, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 25, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 26, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 27, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 28, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 29, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 30, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 31, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 32, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 33, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 34, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 35, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 36, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 37, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 38, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 39, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 40, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 41, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 42, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 43, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 44, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 45, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 46, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 47, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 48, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 49, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 50, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 51, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 52, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 53, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 54, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 55, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 56, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 57, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 58, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 59, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 60, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 61, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 62, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 63, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 64, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 65, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 66, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 67, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 68, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 69, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 70, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 71, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 72, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 73, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 74, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 75, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 76, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 77, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 0 + 2 + 78, 1);
    call write~int(5, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 1, 1);
    call write~int(70, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 0, 1);
    call write~int(51, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 1, 1);
    call write~int(74, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 2, 1);
    call write~int(67, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 3, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 4, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 5, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 6, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 7, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 8, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 9, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 10, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 11, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 12, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 13, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 14, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 15, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 16, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 17, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 18, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 19, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 20, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 21, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 22, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 23, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 24, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 25, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 26, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 27, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 28, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 29, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 30, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 31, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 32, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 33, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 34, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 35, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 36, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 37, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 38, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 39, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 40, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 41, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 42, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 43, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 44, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 45, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 46, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 47, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 48, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 49, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 50, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 51, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 52, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 53, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 54, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 55, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 56, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 57, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 58, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 59, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 60, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 61, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 62, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 63, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 64, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 65, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 66, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 67, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 68, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 69, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 70, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 71, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 72, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 73, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 74, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 75, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 76, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 77, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 81 + 2 + 78, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 2, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 3, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 4, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 5, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 6, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 7, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 8, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 9, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 10, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 11, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 12, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 13, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 14, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 15, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 16, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 17, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 18, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 19, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 20, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 21, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 22, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 23, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 24, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 25, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 26, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 27, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 28, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 29, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 30, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 31, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 32, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 33, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 34, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 35, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 36, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 37, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 38, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 39, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 40, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 41, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 42, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 43, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 44, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 45, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 46, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 47, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 48, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 49, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 50, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 51, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 52, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 53, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 54, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 55, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 56, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 57, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 58, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 59, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 60, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 61, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 62, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 63, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 64, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 65, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 66, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 67, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 68, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 69, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 70, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 71, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 72, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 73, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 74, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 75, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 76, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 77, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 162 + 2 + 78, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 2, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 3, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 4, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 5, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 6, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 7, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 8, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 9, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 10, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 11, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 12, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 13, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 14, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 15, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 16, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 17, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 18, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 19, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 20, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 21, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 22, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 23, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 24, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 25, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 26, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 27, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 28, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 29, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 30, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 31, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 32, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 33, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 34, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 35, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 36, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 37, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 38, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 39, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 40, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 41, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 42, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 43, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 44, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 45, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 46, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 47, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 48, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 49, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 50, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 51, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 52, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 53, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 54, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 55, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 56, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 57, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 58, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 59, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 60, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 61, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 62, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 63, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 64, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 65, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 66, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 67, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 68, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 69, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 70, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 71, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 72, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 73, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 74, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 75, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 76, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 77, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 16 + 243 + 2 + 78, 1);
    call write~$Pointer$(0, 0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 348 + 340, 8);
    call write~$Pointer$(0, 0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 0, 8);
    call write~$Pointer$(0, 0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 8, 8);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 2, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 3, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 4, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 5, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 6, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 7, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 8, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 9, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 10, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 11, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 12, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 13, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 14, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 15, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 16, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 17, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 18, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 19, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 20, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 21, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 22, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 23, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 24, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 25, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 26, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 27, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 28, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 29, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 30, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 31, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 32, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 33, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 34, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 35, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 36, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 37, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 38, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 39, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 40, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 41, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 42, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 43, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 44, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 45, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 46, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 47, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 48, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 49, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 50, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 51, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 52, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 53, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 54, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 55, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 56, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 57, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 58, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 59, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 60, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 61, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 62, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 63, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 64, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 65, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 66, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 67, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 68, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 69, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 70, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 71, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 72, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 73, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 74, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 75, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 76, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 77, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 0 + 2 + 78, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 2, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 3, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 4, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 5, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 6, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 7, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 8, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 9, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 10, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 11, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 12, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 13, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 14, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 15, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 16, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 17, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 18, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 19, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 20, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 21, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 22, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 23, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 24, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 25, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 26, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 27, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 28, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 29, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 30, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 31, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 32, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 33, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 34, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 35, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 36, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 37, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 38, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 39, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 40, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 41, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 42, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 43, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 44, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 45, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 46, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 47, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 48, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 49, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 50, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 51, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 52, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 53, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 54, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 55, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 56, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 57, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 58, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 59, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 60, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 61, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 62, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 63, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 64, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 65, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 66, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 67, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 68, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 69, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 70, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 71, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 72, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 73, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 74, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 75, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 76, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 77, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 81 + 2 + 78, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 2, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 3, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 4, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 5, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 6, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 7, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 8, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 9, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 10, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 11, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 12, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 13, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 14, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 15, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 16, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 17, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 18, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 19, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 20, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 21, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 22, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 23, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 24, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 25, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 26, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 27, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 28, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 29, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 30, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 31, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 32, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 33, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 34, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 35, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 36, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 37, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 38, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 39, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 40, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 41, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 42, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 43, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 44, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 45, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 46, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 47, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 48, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 49, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 50, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 51, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 52, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 53, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 54, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 55, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 56, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 57, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 58, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 59, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 60, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 61, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 62, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 63, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 64, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 65, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 66, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 67, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 68, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 69, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 70, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 71, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 72, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 73, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 74, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 75, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 76, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 77, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 162 + 2 + 78, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 0, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 1, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 2, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 3, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 4, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 5, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 6, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 7, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 8, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 9, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 10, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 11, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 12, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 13, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 14, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 15, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 16, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 17, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 18, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 19, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 20, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 21, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 22, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 23, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 24, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 25, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 26, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 27, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 28, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 29, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 30, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 31, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 32, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 33, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 34, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 35, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 36, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 37, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 38, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 39, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 40, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 41, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 42, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 43, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 44, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 45, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 46, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 47, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 48, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 49, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 50, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 51, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 52, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 53, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 54, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 55, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 56, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 57, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 58, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 59, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 60, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 61, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 62, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 63, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 64, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 65, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 66, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 67, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 68, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 69, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 70, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 71, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 72, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 73, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 74, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 75, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 76, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 77, 1);
    call write~int(0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 16 + 243 + 2 + 78, 1);
    call write~$Pointer$(0, 0, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset + 696 + 340, 8);
    havoc #t~nondet167.base, #t~nondet167.offset;
    havoc #t~nondet168.base, #t~nondet168.offset;
    call ~#stk1125_initvals.base, ~#stk1125_initvals.offset := #Ultimate.alloc(192);
    call write~int(0, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 0 + 0, 4);
    call write~int(36, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 0 + 4, 4);
    call write~int(256, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 8 + 0, 4);
    call write~int(33, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 8 + 4, 4);
    call write~int(2, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 16 + 0, 4);
    call write~int(104, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 16 + 4, 4);
    call write~int(3, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 24 + 0, 4);
    call write~int(128, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 24 + 4, 4);
    call write~int(5, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 32 + 0, 4);
    call write~int(0, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 32 + 4, 4);
    call write~int(7, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 40 + 0, 4);
    call write~int(3, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 40 + 4, 4);
    call write~int(13, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 48 + 0, 4);
    call write~int(0, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 48 + 4, 4);
    call write~int(15, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 56 + 0, 4);
    call write~int(2, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 56 + 4, 4);
    call write~int(768, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 64 + 0, 4);
    call write~int(18, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 64 + 4, 4);
    call write~int(848, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 72 + 0, 4);
    call write~int(65, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 72 + 4, 4);
    call write~int(849, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 80 + 0, 4);
    call write~int(0, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 80 + 4, 4);
    call write~int(850, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 88 + 0, 4);
    call write~int(0, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 88 + 4, 4);
    call write~int(851, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 96 + 0, 4);
    call write~int(0, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 96 + 4, 4);
    call write~int(24, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 104 + 0, 4);
    call write~int(16, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 104 + 4, 4);
    call write~int(25, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 112 + 0, 4);
    call write~int(0, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 112 + 4, 4);
    call write~int(27, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 120 + 0, 4);
    call write~int(14, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 120 + 4, 4);
    call write~int(28, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 128 + 0, 4);
    call write~int(70, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 128 + 4, 4);
    call write~int(768, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 136 + 0, 4);
    call write~int(128, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 136 + 4, 4);
    call write~int(26, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 144 + 0, 4);
    call write~int(4, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 144 + 4, 4);
    call write~int(272, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 152 + 0, 4);
    call write~int(0, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 152 + 4, 4);
    call write~int(273, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 160 + 0, 4);
    call write~int(0, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 160 + 4, 4);
    call write~int(274, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 168 + 0, 4);
    call write~int(0, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 168 + 4, 4);
    call write~int(275, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 176 + 0, 4);
    call write~int(0, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 176 + 4, 4);
    call write~int(65535, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 184 + 0, 4);
    call write~int(255, ~#stk1125_initvals.base, ~#stk1125_initvals.offset + 184 + 4, 4);
    call ~#stk_v4l_vm_ops.base, ~#stk_v4l_vm_ops.offset := #Ultimate.alloc(72);
    call write~$Pointer$(#funAddr~stk_v4l_vm_open.base, #funAddr~stk_v4l_vm_open.offset, ~#stk_v4l_vm_ops.base, ~#stk_v4l_vm_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~stk_v4l_vm_close.base, #funAddr~stk_v4l_vm_close.offset, ~#stk_v4l_vm_ops.base, ~#stk_v4l_vm_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#stk_v4l_vm_ops.base, ~#stk_v4l_vm_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#stk_v4l_vm_ops.base, ~#stk_v4l_vm_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#stk_v4l_vm_ops.base, ~#stk_v4l_vm_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#stk_v4l_vm_ops.base, ~#stk_v4l_vm_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#stk_v4l_vm_ops.base, ~#stk_v4l_vm_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#stk_v4l_vm_ops.base, ~#stk_v4l_vm_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#stk_v4l_vm_ops.base, ~#stk_v4l_vm_ops.offset + 64, 8);
    ~stk_sizes.w, ~stk_sizes.h, ~stk_sizes.m := ~stk_sizes.w[0 := 0], ~stk_sizes.h[0 := 0], ~stk_sizes.m[0 := 0];
    ~stk_sizes.w, ~stk_sizes.h, ~stk_sizes.m := ~stk_sizes.w[1 := 0], ~stk_sizes.h[1 := 0], ~stk_sizes.m[1 := 0];
    ~stk_sizes.w, ~stk_sizes.h, ~stk_sizes.m := ~stk_sizes.w[2 := 0], ~stk_sizes.h[2 := 0], ~stk_sizes.m[2 := 0];
    ~stk_sizes.w, ~stk_sizes.h, ~stk_sizes.m := ~stk_sizes.w[3 := 0], ~stk_sizes.h[3 := 0], ~stk_sizes.m[3 := 0];
    ~stk_sizes.w, ~stk_sizes.h, ~stk_sizes.m := ~stk_sizes.w[4 := 0], ~stk_sizes.h[4 := 0], ~stk_sizes.m[4 := 0];
    call ~#stk_ctrl_ops.base, ~#stk_ctrl_ops.offset := #Ultimate.alloc(24);
    call write~$Pointer$(0, 0, ~#stk_ctrl_ops.base, ~#stk_ctrl_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#stk_ctrl_ops.base, ~#stk_ctrl_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~stk_s_ctrl.base, #funAddr~stk_s_ctrl.offset, ~#stk_ctrl_ops.base, ~#stk_ctrl_ops.offset + 16, 8);
    call ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset := #Ultimate.alloc(88);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset + 0, 8);
    call write~$Pointer$(#funAddr~v4l_stk_read.base, #funAddr~v4l_stk_read.offset, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset + 16, 8);
    call write~$Pointer$(#funAddr~v4l_stk_poll.base, #funAddr~v4l_stk_poll.offset, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset + 32, 8);
    call write~$Pointer$(#funAddr~video_ioctl2.base, #funAddr~video_ioctl2.offset, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset + 56, 8);
    call write~$Pointer$(#funAddr~v4l_stk_mmap.base, #funAddr~v4l_stk_mmap.offset, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset + 64, 8);
    call write~$Pointer$(#funAddr~v4l_stk_open.base, #funAddr~v4l_stk_open.offset, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset + 72, 8);
    call write~$Pointer$(#funAddr~v4l_stk_release.base, #funAddr~v4l_stk_release.offset, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset + 80, 8);
    call ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset := #Ultimate.alloc(872);
    call write~$Pointer$(#funAddr~stk_vidioc_querycap.base, #funAddr~stk_vidioc_querycap.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_enum_fmt_vid_cap.base, #funAddr~stk_vidioc_enum_fmt_vid_cap.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_g_fmt_vid_cap.base, #funAddr~stk_vidioc_g_fmt_vid_cap.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 136, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_s_fmt_vid_cap.base, #funAddr~stk_vidioc_s_fmt_vid_cap.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 216, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_try_fmt_vid_cap.base, #funAddr~stk_vidioc_try_fmt_vid_cap.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 296, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_reqbufs.base, #funAddr~stk_vidioc_reqbufs.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 304, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_querybuf.base, #funAddr~stk_vidioc_querybuf.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 312, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_qbuf.base, #funAddr~stk_vidioc_qbuf.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 328, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_dqbuf.base, #funAddr~stk_vidioc_dqbuf.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 376, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_streamon.base, #funAddr~stk_vidioc_streamon.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 384, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_streamoff.base, #funAddr~stk_vidioc_streamoff.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 408, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 416, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_enum_input.base, #funAddr~stk_vidioc_enum_input.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 424, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_g_input.base, #funAddr~stk_vidioc_g_input.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 432, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_s_input.base, #funAddr~stk_vidioc_s_input.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 440, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 448, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 464, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 472, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 480, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 488, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 496, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 504, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 512, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 520, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 528, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 536, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 544, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 552, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 560, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 568, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 576, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 584, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 592, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 600, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 608, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 616, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 624, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 632, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 640, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 648, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 656, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 664, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 672, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 680, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_g_parm.base, #funAddr~stk_vidioc_g_parm.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 688, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 696, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 704, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 712, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 720, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 728, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 736, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 744, 8);
    call write~$Pointer$(#funAddr~v4l2_ctrl_log_status.base, #funAddr~v4l2_ctrl_log_status.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 752, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 760, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 768, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 776, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 784, 8);
    call write~$Pointer$(#funAddr~stk_vidioc_enum_framesizes.base, #funAddr~stk_vidioc_enum_framesizes.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 792, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 800, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 808, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 816, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 824, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 832, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 840, 8);
    call write~$Pointer$(#funAddr~v4l2_ctrl_subscribe_event.base, #funAddr~v4l2_ctrl_subscribe_event.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 848, 8);
    call write~$Pointer$(#funAddr~v4l2_event_unsubscribe.base, #funAddr~v4l2_event_unsubscribe.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 856, 8);
    call write~$Pointer$(0, 0, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset + 864, 8);
    #t~union1765.card, #t~union1765.device, #t~union1765.subdevice := 0, 0, 0;
    #t~init1767.base, #t~init1767.offset := #t~init1767.base[0 := 0], #t~init1767.offset[0 := 0];
    #t~init1767.base, #t~init1767.offset := #t~init1767.base[1 := 0], #t~init1767.offset[1 := 0];
    #t~init1768 := #t~init1768[0 := 0];
    #t~init1768 := #t~init1768[1 := 0];
    #t~init1768 := #t~init1768[2 := 0];
    #t~init1768 := #t~init1768[3 := 0];
    #t~init1768 := #t~init1768[4 := 0];
    #t~init1768 := #t~init1768[5 := 0];
    #t~init1768 := #t~init1768[6 := 0];
    #t~init1768 := #t~init1768[7 := 0];
    #t~init1768 := #t~init1768[8 := 0];
    #t~init1768 := #t~init1768[9 := 0];
    #t~init1768 := #t~init1768[10 := 0];
    #t~init1768 := #t~init1768[11 := 0];
    #t~init1768 := #t~init1768[12 := 0];
    #t~init1768 := #t~init1768[13 := 0];
    #t~init1768 := #t~init1768[14 := 0];
    #t~init1768 := #t~init1768[15 := 0];
    #t~init1769.base, #t~init1769.offset := #t~init1769.base[0 := 0], #t~init1769.offset[0 := 0];
    #t~init1769.base, #t~init1769.offset := #t~init1769.base[1 := 0], #t~init1769.offset[1 := 0];
    #t~union1771 := 0;
    #t~init1773.base, #t~init1773.offset := #t~init1773.base[0 := 0], #t~init1773.offset[0 := 0];
    #t~init1773.base, #t~init1773.offset := #t~init1773.base[1 := 0], #t~init1773.offset[1 := 0];
    #t~union1770.raw_lock.ldv_2243.head_tail, #t~union1770.raw_lock.ldv_2243.tickets.head, #t~union1770.raw_lock.ldv_2243.tickets.tail, #t~union1770.magic, #t~union1770.owner_cpu, #t~union1770.owner.base, #t~union1770.owner.offset, #t~union1770.dep_map.key.base, #t~union1770.dep_map.key.offset, #t~union1770.dep_map.class_cache.base, #t~union1770.dep_map.class_cache.offset, #t~union1770.dep_map.name.base, #t~union1770.dep_map.name.offset, #t~union1770.dep_map.cpu, #t~union1770.dep_map.ip := #t~union1771, #t~union1772.head, #t~union1772.tail, 0, 0, 0, 0, 0, 0, #t~init1773.base, #t~init1773.offset, 0, 0, 0, 0;
    #t~init1775.base, #t~init1775.offset := #t~init1775.base[0 := 0], #t~init1775.offset[0 := 0];
    #t~init1775.base, #t~init1775.offset := #t~init1775.base[1 := 0], #t~init1775.offset[1 := 0];
    #t~union1777 := 0;
    #t~init1779.base, #t~init1779.offset := #t~init1779.base[0 := 0], #t~init1779.offset[0 := 0];
    #t~init1779.base, #t~init1779.offset := #t~init1779.base[1 := 0], #t~init1779.offset[1 := 0];
    #t~union1776.raw_lock.ldv_2243.head_tail, #t~union1776.raw_lock.ldv_2243.tickets.head, #t~union1776.raw_lock.ldv_2243.tickets.tail, #t~union1776.magic, #t~union1776.owner_cpu, #t~union1776.owner.base, #t~union1776.owner.offset, #t~union1776.dep_map.key.base, #t~union1776.dep_map.key.offset, #t~union1776.dep_map.class_cache.base, #t~union1776.dep_map.class_cache.offset, #t~union1776.dep_map.name.base, #t~union1776.dep_map.name.offset, #t~union1776.dep_map.cpu, #t~union1776.dep_map.ip := #t~union1777, #t~union1778.head, #t~union1778.tail, 0, 0, 0, 0, 0, 0, #t~init1779.base, #t~init1779.offset, 0, 0, 0, 0;
    #t~union1782 := 0;
    #t~init1784.base, #t~init1784.offset := #t~init1784.base[0 := 0], #t~init1784.offset[0 := 0];
    #t~init1784.base, #t~init1784.offset := #t~init1784.base[1 := 0], #t~init1784.offset[1 := 0];
    #t~union1781.raw_lock.ldv_2243.head_tail, #t~union1781.raw_lock.ldv_2243.tickets.head, #t~union1781.raw_lock.ldv_2243.tickets.tail, #t~union1781.magic, #t~union1781.owner_cpu, #t~union1781.owner.base, #t~union1781.owner.offset, #t~union1781.dep_map.key.base, #t~union1781.dep_map.key.offset, #t~union1781.dep_map.class_cache.base, #t~union1781.dep_map.class_cache.offset, #t~union1781.dep_map.name.base, #t~union1781.dep_map.name.offset, #t~union1781.dep_map.cpu, #t~union1781.dep_map.ip := #t~union1782, #t~union1783.head, #t~union1783.tail, 0, 0, 0, 0, 0, 0, #t~init1784.base, #t~init1784.offset, 0, 0, 0, 0;
    #t~init1786 := #t~init1786[0 := 0];
    #t~init1786 := #t~init1786[1 := 0];
    #t~init1786 := #t~init1786[2 := 0];
    #t~init1786 := #t~init1786[3 := 0];
    #t~init1786 := #t~init1786[4 := 0];
    #t~init1786 := #t~init1786[5 := 0];
    #t~init1786 := #t~init1786[6 := 0];
    #t~init1786 := #t~init1786[7 := 0];
    #t~init1786 := #t~init1786[8 := 0];
    #t~init1786 := #t~init1786[9 := 0];
    #t~init1786 := #t~init1786[10 := 0];
    #t~init1786 := #t~init1786[11 := 0];
    #t~init1786 := #t~init1786[12 := 0];
    #t~init1786 := #t~init1786[13 := 0];
    #t~init1786 := #t~init1786[14 := 0];
    #t~init1786 := #t~init1786[15 := 0];
    #t~init1787.base, #t~init1787.offset := #t~init1787.base[0 := 0], #t~init1787.offset[0 := 0];
    #t~init1787.base, #t~init1787.offset := #t~init1787.base[1 := 0], #t~init1787.offset[1 := 0];
    #t~init1788.base, #t~init1788.offset := #t~init1788.base[0 := 0], #t~init1788.offset[0 := 0];
    #t~init1788.base, #t~init1788.offset := #t~init1788.base[1 := 0], #t~init1788.offset[1 := 0];
    #t~union1790 := 0;
    #t~init1792.base, #t~init1792.offset := #t~init1792.base[0 := 0], #t~init1792.offset[0 := 0];
    #t~init1792.base, #t~init1792.offset := #t~init1792.base[1 := 0], #t~init1792.offset[1 := 0];
    #t~union1789.raw_lock.ldv_2243.head_tail, #t~union1789.raw_lock.ldv_2243.tickets.head, #t~union1789.raw_lock.ldv_2243.tickets.tail, #t~union1789.magic, #t~union1789.owner_cpu, #t~union1789.owner.base, #t~union1789.owner.offset, #t~union1789.dep_map.key.base, #t~union1789.dep_map.key.offset, #t~union1789.dep_map.class_cache.base, #t~union1789.dep_map.class_cache.offset, #t~union1789.dep_map.name.base, #t~union1789.dep_map.name.offset, #t~union1789.dep_map.cpu, #t~union1789.dep_map.ip := #t~union1790, #t~union1791.head, #t~union1791.tail, 0, 0, 0, 0, 0, 0, #t~init1792.base, #t~init1792.offset, 0, 0, 0, 0;
    #t~union1795 := 0;
    #t~init1797.base, #t~init1797.offset := #t~init1797.base[0 := 0], #t~init1797.offset[0 := 0];
    #t~init1797.base, #t~init1797.offset := #t~init1797.base[1 := 0], #t~init1797.offset[1 := 0];
    #t~union1794.raw_lock.ldv_2243.head_tail, #t~union1794.raw_lock.ldv_2243.tickets.head, #t~union1794.raw_lock.ldv_2243.tickets.tail, #t~union1794.magic, #t~union1794.owner_cpu, #t~union1794.owner.base, #t~union1794.owner.offset, #t~union1794.dep_map.key.base, #t~union1794.dep_map.key.offset, #t~union1794.dep_map.class_cache.base, #t~union1794.dep_map.class_cache.offset, #t~union1794.dep_map.name.base, #t~union1794.dep_map.name.offset, #t~union1794.dep_map.cpu, #t~union1794.dep_map.ip := #t~union1795, #t~union1796.head, #t~union1796.tail, 0, 0, 0, 0, 0, 0, #t~init1797.base, #t~init1797.offset, 0, 0, 0, 0;
    #t~init1799 := #t~init1799[0 := 115];
    #t~init1799 := #t~init1799[1 := 116];
    #t~init1799 := #t~init1799[2 := 107];
    #t~init1799 := #t~init1799[3 := 119];
    #t~init1799 := #t~init1799[4 := 101];
    #t~init1799 := #t~init1799[5 := 98];
    #t~init1799 := #t~init1799[6 := 99];
    #t~init1799 := #t~init1799[7 := 97];
    #t~init1799 := #t~init1799[8 := 109];
    #t~init1799 := #t~init1799[9 := 0];
    #t~init1799 := #t~init1799[10 := 0];
    #t~init1799 := #t~init1799[11 := 0];
    #t~init1799 := #t~init1799[12 := 0];
    #t~init1799 := #t~init1799[13 := 0];
    #t~init1799 := #t~init1799[14 := 0];
    #t~init1799 := #t~init1799[15 := 0];
    #t~init1799 := #t~init1799[16 := 0];
    #t~init1799 := #t~init1799[17 := 0];
    #t~init1799 := #t~init1799[18 := 0];
    #t~init1799 := #t~init1799[19 := 0];
    #t~init1799 := #t~init1799[20 := 0];
    #t~init1799 := #t~init1799[21 := 0];
    #t~init1799 := #t~init1799[22 := 0];
    #t~init1799 := #t~init1799[23 := 0];
    #t~init1799 := #t~init1799[24 := 0];
    #t~init1799 := #t~init1799[25 := 0];
    #t~init1799 := #t~init1799[26 := 0];
    #t~init1799 := #t~init1799[27 := 0];
    #t~init1799 := #t~init1799[28 := 0];
    #t~init1799 := #t~init1799[29 := 0];
    #t~init1799 := #t~init1799[30 := 0];
    #t~init1799 := #t~init1799[31 := 0];
    #t~union1801 := 0;
    #t~init1803.base, #t~init1803.offset := #t~init1803.base[0 := 0], #t~init1803.offset[0 := 0];
    #t~init1803.base, #t~init1803.offset := #t~init1803.base[1 := 0], #t~init1803.offset[1 := 0];
    #t~union1800.raw_lock.ldv_2243.head_tail, #t~union1800.raw_lock.ldv_2243.tickets.head, #t~union1800.raw_lock.ldv_2243.tickets.tail, #t~union1800.magic, #t~union1800.owner_cpu, #t~union1800.owner.base, #t~union1800.owner.offset, #t~union1800.dep_map.key.base, #t~union1800.dep_map.key.offset, #t~union1800.dep_map.class_cache.base, #t~union1800.dep_map.class_cache.offset, #t~union1800.dep_map.name.base, #t~union1800.dep_map.name.offset, #t~union1800.dep_map.cpu, #t~union1800.dep_map.ip := #t~union1801, #t~union1802.head, #t~union1802.tail, 0, 0, 0, 0, 0, 0, #t~init1803.base, #t~init1803.offset, 0, 0, 0, 0;
    #t~init1805 := #t~init1805[0 := 0];
    #t~init1805 := #t~init1805[1 := 0];
    #t~init1805 := #t~init1805[2 := 0];
    #t~init1806 := #t~init1806[0 := 0];
    #t~init1806 := #t~init1806[1 := 0];
    #t~init1806 := #t~init1806[2 := 0];
    ~stk_v4l_data.entity.list.next.base, ~stk_v4l_data.entity.list.next.offset, ~stk_v4l_data.entity.list.prev.base, ~stk_v4l_data.entity.list.prev.offset, ~stk_v4l_data.entity.parent.base, ~stk_v4l_data.entity.parent.offset, ~stk_v4l_data.entity.id, ~stk_v4l_data.entity.name.base, ~stk_v4l_data.entity.name.offset, ~stk_v4l_data.entity.type, ~stk_v4l_data.entity.revision, ~stk_v4l_data.entity.flags, ~stk_v4l_data.entity.group_id, ~stk_v4l_data.entity.num_pads, ~stk_v4l_data.entity.num_links, ~stk_v4l_data.entity.num_backlinks, ~stk_v4l_data.entity.max_links, ~stk_v4l_data.entity.pads.base, ~stk_v4l_data.entity.pads.offset, ~stk_v4l_data.entity.links.base, ~stk_v4l_data.entity.links.offset, ~stk_v4l_data.entity.ops.base, ~stk_v4l_data.entity.ops.offset, ~stk_v4l_data.entity.stream_count, ~stk_v4l_data.entity.use_count, ~stk_v4l_data.entity.pipe.base, ~stk_v4l_data.entity.pipe.offset, ~stk_v4l_data.entity.info.v4l.major, ~stk_v4l_data.entity.info.v4l.minor, ~stk_v4l_data.entity.info.fb.major, ~stk_v4l_data.entity.info.fb.minor, ~stk_v4l_data.entity.info.alsa.card, ~stk_v4l_data.entity.info.alsa.device, ~stk_v4l_data.entity.info.alsa.subdevice, ~stk_v4l_data.entity.info.dvb, ~stk_v4l_data.fops.base, ~stk_v4l_data.fops.offset, ~stk_v4l_data.dev.parent.base, ~stk_v4l_data.dev.parent.offset, ~stk_v4l_data.dev.p.base, ~stk_v4l_data.dev.p.offset, ~stk_v4l_data.dev.kobj.name.base, ~stk_v4l_data.dev.kobj.name.offset, ~stk_v4l_data.dev.kobj.entry.next.base, ~stk_v4l_data.dev.kobj.entry.next.offset, ~stk_v4l_data.dev.kobj.entry.prev.base, ~stk_v4l_data.dev.kobj.entry.prev.offset, ~stk_v4l_data.dev.kobj.parent.base, ~stk_v4l_data.dev.kobj.parent.offset, ~stk_v4l_data.dev.kobj.kset.base, ~stk_v4l_data.dev.kobj.kset.offset, ~stk_v4l_data.dev.kobj.ktype.base, ~stk_v4l_data.dev.kobj.ktype.offset, ~stk_v4l_data.dev.kobj.sd.base, ~stk_v4l_data.dev.kobj.sd.offset, ~stk_v4l_data.dev.kobj.kref.refcount.counter, ~stk_v4l_data.dev.kobj.release.work.data.counter, ~stk_v4l_data.dev.kobj.release.work.entry.next.base, ~stk_v4l_data.dev.kobj.release.work.entry.next.offset, ~stk_v4l_data.dev.kobj.release.work.entry.prev.base, ~stk_v4l_data.dev.kobj.release.work.entry.prev.offset, ~stk_v4l_data.dev.kobj.release.work.func.base, ~stk_v4l_data.dev.kobj.release.work.func.offset, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.key.base, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.key.offset, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.class_cache.base, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.class_cache.offset, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.name.base, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.name.offset, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.cpu, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.ip, ~stk_v4l_data.dev.kobj.release.timer.entry.next.base, ~stk_v4l_data.dev.kobj.release.timer.entry.next.offset, ~stk_v4l_data.dev.kobj.release.timer.entry.prev.base, ~stk_v4l_data.dev.kobj.release.timer.entry.prev.offset, ~stk_v4l_data.dev.kobj.release.timer.expires, ~stk_v4l_data.dev.kobj.release.timer.base.base, ~stk_v4l_data.dev.kobj.release.timer.base.offset, ~stk_v4l_data.dev.kobj.release.timer.function.base, ~stk_v4l_data.dev.kobj.release.timer.function.offset, ~stk_v4l_data.dev.kobj.release.timer.data, ~stk_v4l_data.dev.kobj.release.timer.slack, ~stk_v4l_data.dev.kobj.release.timer.start_pid, ~stk_v4l_data.dev.kobj.release.timer.start_site.base, ~stk_v4l_data.dev.kobj.release.timer.start_site.offset, ~stk_v4l_data.dev.kobj.release.timer.start_comm, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.key.base, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.key.offset, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.class_cache.base, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.class_cache.offset, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.name.base, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.name.offset, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.cpu, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.ip, ~stk_v4l_data.dev.kobj.release.wq.base, ~stk_v4l_data.dev.kobj.release.wq.offset, ~stk_v4l_data.dev.kobj.release.cpu, ~stk_v4l_data.dev.kobj.state_initialized, ~stk_v4l_data.dev.kobj.state_in_sysfs, ~stk_v4l_data.dev.kobj.state_add_uevent_sent, ~stk_v4l_data.dev.kobj.state_remove_uevent_sent, ~stk_v4l_data.dev.kobj.uevent_suppress, ~stk_v4l_data.dev.init_name.base, ~stk_v4l_data.dev.init_name.offset, ~stk_v4l_data.dev.type.base, ~stk_v4l_data.dev.type.offset, ~stk_v4l_data.dev.mutex.count.counter, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.mutex.wait_list.next.base, ~stk_v4l_data.dev.mutex.wait_list.next.offset, ~stk_v4l_data.dev.mutex.wait_list.prev.base, ~stk_v4l_data.dev.mutex.wait_list.prev.offset, ~stk_v4l_data.dev.mutex.owner.base, ~stk_v4l_data.dev.mutex.owner.offset, ~stk_v4l_data.dev.mutex.name.base, ~stk_v4l_data.dev.mutex.name.offset, ~stk_v4l_data.dev.mutex.magic.base, ~stk_v4l_data.dev.mutex.magic.offset, ~stk_v4l_data.dev.mutex.dep_map.key.base, ~stk_v4l_data.dev.mutex.dep_map.key.offset, ~stk_v4l_data.dev.mutex.dep_map.class_cache.base, ~stk_v4l_data.dev.mutex.dep_map.class_cache.offset, ~stk_v4l_data.dev.mutex.dep_map.name.base, ~stk_v4l_data.dev.mutex.dep_map.name.offset, ~stk_v4l_data.dev.mutex.dep_map.cpu, ~stk_v4l_data.dev.mutex.dep_map.ip, ~stk_v4l_data.dev.bus.base, ~stk_v4l_data.dev.bus.offset, ~stk_v4l_data.dev.driver.base, ~stk_v4l_data.dev.driver.offset, ~stk_v4l_data.dev.platform_data.base, ~stk_v4l_data.dev.platform_data.offset, ~stk_v4l_data.dev.power.power_state.event, ~stk_v4l_data.dev.power.can_wakeup, ~stk_v4l_data.dev.power.async_suspend, ~stk_v4l_data.dev.power.is_prepared, ~stk_v4l_data.dev.power.is_suspended, ~stk_v4l_data.dev.power.ignore_children, ~stk_v4l_data.dev.power.early_init, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.power.entry.next.base, ~stk_v4l_data.dev.power.entry.next.offset, ~stk_v4l_data.dev.power.entry.prev.base, ~stk_v4l_data.dev.power.entry.prev.offset, ~stk_v4l_data.dev.power.completion.done, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.power.completion.wait.task_list.next.base, ~stk_v4l_data.dev.power.completion.wait.task_list.next.offset, ~stk_v4l_data.dev.power.completion.wait.task_list.prev.base, ~stk_v4l_data.dev.power.completion.wait.task_list.prev.offset, ~stk_v4l_data.dev.power.wakeup.base, ~stk_v4l_data.dev.power.wakeup.offset, ~stk_v4l_data.dev.power.wakeup_path, ~stk_v4l_data.dev.power.syscore, ~stk_v4l_data.dev.power.suspend_timer.entry.next.base, ~stk_v4l_data.dev.power.suspend_timer.entry.next.offset, ~stk_v4l_data.dev.power.suspend_timer.entry.prev.base, ~stk_v4l_data.dev.power.suspend_timer.entry.prev.offset, ~stk_v4l_data.dev.power.suspend_timer.expires, ~stk_v4l_data.dev.power.suspend_timer.base.base, ~stk_v4l_data.dev.power.suspend_timer.base.offset, ~stk_v4l_data.dev.power.suspend_timer.function.base, ~stk_v4l_data.dev.power.suspend_timer.function.offset, ~stk_v4l_data.dev.power.suspend_timer.data, ~stk_v4l_data.dev.power.suspend_timer.slack, ~stk_v4l_data.dev.power.suspend_timer.start_pid, ~stk_v4l_data.dev.power.suspend_timer.start_site.base, ~stk_v4l_data.dev.power.suspend_timer.start_site.offset, ~stk_v4l_data.dev.power.suspend_timer.start_comm, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.key.base, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.key.offset, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.class_cache.base, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.class_cache.offset, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.name.base, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.name.offset, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.cpu, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.ip, ~stk_v4l_data.dev.power.timer_expires, ~stk_v4l_data.dev.power.work.data.counter, ~stk_v4l_data.dev.power.work.entry.next.base, ~stk_v4l_data.dev.power.work.entry.next.offset, ~stk_v4l_data.dev.power.work.entry.prev.base, ~stk_v4l_data.dev.power.work.entry.prev.offset, ~stk_v4l_data.dev.power.work.func.base, ~stk_v4l_data.dev.power.work.func.offset, ~stk_v4l_data.dev.power.work.lockdep_map.key.base, ~stk_v4l_data.dev.power.work.lockdep_map.key.offset, ~stk_v4l_data.dev.power.work.lockdep_map.class_cache.base, ~stk_v4l_data.dev.power.work.lockdep_map.class_cache.offset, ~stk_v4l_data.dev.power.work.lockdep_map.name.base, ~stk_v4l_data.dev.power.work.lockdep_map.name.offset, ~stk_v4l_data.dev.power.work.lockdep_map.cpu, ~stk_v4l_data.dev.power.work.lockdep_map.ip, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.power.wait_queue.task_list.next.base, ~stk_v4l_data.dev.power.wait_queue.task_list.next.offset, ~stk_v4l_data.dev.power.wait_queue.task_list.prev.base, ~stk_v4l_data.dev.power.wait_queue.task_list.prev.offset, ~stk_v4l_data.dev.power.usage_count.counter, ~stk_v4l_data.dev.power.child_count.counter, ~stk_v4l_data.dev.power.disable_depth, ~stk_v4l_data.dev.power.idle_notification, ~stk_v4l_data.dev.power.request_pending, ~stk_v4l_data.dev.power.deferred_resume, ~stk_v4l_data.dev.power.run_wake, ~stk_v4l_data.dev.power.runtime_auto, ~stk_v4l_data.dev.power.no_callbacks, ~stk_v4l_data.dev.power.irq_safe, ~stk_v4l_data.dev.power.use_autosuspend, ~stk_v4l_data.dev.power.timer_autosuspends, ~stk_v4l_data.dev.power.memalloc_noio, ~stk_v4l_data.dev.power.request, ~stk_v4l_data.dev.power.runtime_status, ~stk_v4l_data.dev.power.runtime_error, ~stk_v4l_data.dev.power.autosuspend_delay, ~stk_v4l_data.dev.power.last_busy, ~stk_v4l_data.dev.power.active_jiffies, ~stk_v4l_data.dev.power.suspended_jiffies, ~stk_v4l_data.dev.power.accounting_timestamp, ~stk_v4l_data.dev.power.subsys_data.base, ~stk_v4l_data.dev.power.subsys_data.offset, ~stk_v4l_data.dev.power.qos.base, ~stk_v4l_data.dev.power.qos.offset, ~stk_v4l_data.dev.pm_domain.base, ~stk_v4l_data.dev.pm_domain.offset, ~stk_v4l_data.dev.numa_node, ~stk_v4l_data.dev.dma_mask.base, ~stk_v4l_data.dev.dma_mask.offset, ~stk_v4l_data.dev.coherent_dma_mask, ~stk_v4l_data.dev.dma_parms.base, ~stk_v4l_data.dev.dma_parms.offset, ~stk_v4l_data.dev.dma_pools.next.base, ~stk_v4l_data.dev.dma_pools.next.offset, ~stk_v4l_data.dev.dma_pools.prev.base, ~stk_v4l_data.dev.dma_pools.prev.offset, ~stk_v4l_data.dev.dma_mem.base, ~stk_v4l_data.dev.dma_mem.offset, ~stk_v4l_data.dev.archdata.dma_ops.base, ~stk_v4l_data.dev.archdata.dma_ops.offset, ~stk_v4l_data.dev.archdata.iommu.base, ~stk_v4l_data.dev.archdata.iommu.offset, ~stk_v4l_data.dev.of_node.base, ~stk_v4l_data.dev.of_node.offset, ~stk_v4l_data.dev.acpi_node.handle.base, ~stk_v4l_data.dev.acpi_node.handle.offset, ~stk_v4l_data.dev.devt, ~stk_v4l_data.dev.id, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.devres_head.next.base, ~stk_v4l_data.dev.devres_head.next.offset, ~stk_v4l_data.dev.devres_head.prev.base, ~stk_v4l_data.dev.devres_head.prev.offset, ~stk_v4l_data.dev.knode_class.n_klist.base, ~stk_v4l_data.dev.knode_class.n_klist.offset, ~stk_v4l_data.dev.knode_class.n_node.next.base, ~stk_v4l_data.dev.knode_class.n_node.next.offset, ~stk_v4l_data.dev.knode_class.n_node.prev.base, ~stk_v4l_data.dev.knode_class.n_node.prev.offset, ~stk_v4l_data.dev.knode_class.n_ref.refcount.counter, ~stk_v4l_data.dev.class.base, ~stk_v4l_data.dev.class.offset, ~stk_v4l_data.dev.groups.base, ~stk_v4l_data.dev.groups.offset, ~stk_v4l_data.dev.release.base, ~stk_v4l_data.dev.release.offset, ~stk_v4l_data.dev.iommu_group.base, ~stk_v4l_data.dev.iommu_group.offset, ~stk_v4l_data.dev.offline_disabled, ~stk_v4l_data.dev.offline, ~stk_v4l_data.cdev.base, ~stk_v4l_data.cdev.offset, ~stk_v4l_data.v4l2_dev.base, ~stk_v4l_data.v4l2_dev.offset, ~stk_v4l_data.dev_parent.base, ~stk_v4l_data.dev_parent.offset, ~stk_v4l_data.ctrl_handler.base, ~stk_v4l_data.ctrl_handler.offset, ~stk_v4l_data.queue.base, ~stk_v4l_data.queue.offset, ~stk_v4l_data.prio.base, ~stk_v4l_data.prio.offset, ~stk_v4l_data.name, ~stk_v4l_data.vfl_type, ~stk_v4l_data.vfl_dir, ~stk_v4l_data.minor, ~stk_v4l_data.num, ~stk_v4l_data.flags, ~stk_v4l_data.index, ~stk_v4l_data.fh_lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.fh_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.fh_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.fh_lock.ldv_7686.rlock.magic, ~stk_v4l_data.fh_lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.fh_lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.fh_lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.fh_list.next.base, ~stk_v4l_data.fh_list.next.offset, ~stk_v4l_data.fh_list.prev.base, ~stk_v4l_data.fh_list.prev.offset, ~stk_v4l_data.debug, ~stk_v4l_data.tvnorms, ~stk_v4l_data.release.base, ~stk_v4l_data.release.offset, ~stk_v4l_data.ioctl_ops.base, ~stk_v4l_data.ioctl_ops.offset, ~stk_v4l_data.valid_ioctls, ~stk_v4l_data.disable_locking, ~stk_v4l_data.lock.base, ~stk_v4l_data.lock.offset := 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~union1763.major, #t~union1763.minor, #t~union1764.major, #t~union1764.minor, #t~union1765.card, #t~union1765.device, #t~union1765.subdevice, #t~union1766, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init1767.base, #t~init1767.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init1768, 0, 0, #t~init1769.base, #t~init1769.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~union1770.raw_lock.ldv_2243.head_tail, #t~union1770.raw_lock.ldv_2243.tickets.head, #t~union1770.raw_lock.ldv_2243.tickets.tail, #t~union1770.magic, #t~union1770.owner_cpu, #t~union1770.owner.base, #t~union1770.owner.offset, #t~union1770.dep_map.key.base, #t~union1770.dep_map.key.offset, #t~union1770.dep_map.class_cache.base, #t~union1770.dep_map.class_cache.offset, #t~union1770.dep_map.name.base, #t~union1770.dep_map.name.offset, #t~union1770.dep_map.cpu, #t~union1770.dep_map.ip, #t~union1774.__padding, #t~union1774.dep_map.key.base, #t~union1774.dep_map.key.offset, #t~union1774.dep_map.class_cache.base, #t~union1774.dep_map.class_cache.offset, #t~union1774.dep_map.name.base, #t~union1774.dep_map.name.offset, #t~union1774.dep_map.cpu, #t~union1774.dep_map.ip, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init1775.base, #t~init1775.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~union1776.raw_lock.ldv_2243.head_tail, #t~union1776.raw_lock.ldv_2243.tickets.head, #t~union1776.raw_lock.ldv_2243.tickets.tail, #t~union1776.magic, #t~union1776.owner_cpu, #t~union1776.owner.base, #t~union1776.owner.offset, #t~union1776.dep_map.key.base, #t~union1776.dep_map.key.offset, #t~union1776.dep_map.class_cache.base, #t~union1776.dep_map.class_cache.offset, #t~union1776.dep_map.name.base, #t~union1776.dep_map.name.offset, #t~union1776.dep_map.cpu, #t~union1776.dep_map.ip, #t~union1780.__padding, #t~union1780.dep_map.key.base, #t~union1780.dep_map.key.offset, #t~union1780.dep_map.class_cache.base, #t~union1780.dep_map.class_cache.offset, #t~union1780.dep_map.name.base, #t~union1780.dep_map.name.offset, #t~union1780.dep_map.cpu, #t~union1780.dep_map.ip, 0, 0, 0, 0, 0, #t~union1781.raw_lock.ldv_2243.head_tail, #t~union1781.raw_lock.ldv_2243.tickets.head, #t~union1781.raw_lock.ldv_2243.tickets.tail, #t~union1781.magic, #t~union1781.owner_cpu, #t~union1781.owner.base, #t~union1781.owner.offset, #t~union1781.dep_map.key.base, #t~union1781.dep_map.key.offset, #t~union1781.dep_map.class_cache.base, #t~union1781.dep_map.class_cache.offset, #t~union1781.dep_map.name.base, #t~union1781.dep_map.name.offset, #t~union1781.dep_map.cpu, #t~union1781.dep_map.ip, #t~union1785.__padding, #t~union1785.dep_map.key.base, #t~union1785.dep_map.key.offset, #t~union1785.dep_map.class_cache.base, #t~union1785.dep_map.class_cache.offset, #t~union1785.dep_map.name.base, #t~union1785.dep_map.name.offset, #t~union1785.dep_map.cpu, #t~union1785.dep_map.ip, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init1786, 0, 0, #t~init1787.base, #t~init1787.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init1788.base, #t~init1788.offset, 0, 0, 0, 0, #t~union1789.raw_lock.ldv_2243.head_tail, #t~union1789.raw_lock.ldv_2243.tickets.head, #t~union1789.raw_lock.ldv_2243.tickets.tail, #t~union1789.magic, #t~union1789.owner_cpu, #t~union1789.owner.base, #t~union1789.owner.offset, #t~union1789.dep_map.key.base, #t~union1789.dep_map.key.offset, #t~union1789.dep_map.class_cache.base, #t~union1789.dep_map.class_cache.offset, #t~union1789.dep_map.name.base, #t~union1789.dep_map.name.offset, #t~union1789.dep_map.cpu, #t~union1789.dep_map.ip, #t~union1793.__padding, #t~union1793.dep_map.key.base, #t~union1793.dep_map.key.offset, #t~union1793.dep_map.class_cache.base, #t~union1793.dep_map.class_cache.offset, #t~union1793.dep_map.name.base, #t~union1793.dep_map.name.offset, #t~union1793.dep_map.cpu, #t~union1793.dep_map.ip, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~union1794.raw_lock.ldv_2243.head_tail, #t~union1794.raw_lock.ldv_2243.tickets.head, #t~union1794.raw_lock.ldv_2243.tickets.tail, #t~union1794.magic, #t~union1794.owner_cpu, #t~union1794.owner.base, #t~union1794.owner.offset, #t~union1794.dep_map.key.base, #t~union1794.dep_map.key.offset, #t~union1794.dep_map.class_cache.base, #t~union1794.dep_map.class_cache.offset, #t~union1794.dep_map.name.base, #t~union1794.dep_map.name.offset, #t~union1794.dep_map.cpu, #t~union1794.dep_map.ip, #t~union1798.__padding, #t~union1798.dep_map.key.base, #t~union1798.dep_map.key.offset, #t~union1798.dep_map.class_cache.base, #t~union1798.dep_map.class_cache.offset, #t~union1798.dep_map.name.base, #t~union1798.dep_map.name.offset, #t~union1798.dep_map.cpu, #t~union1798.dep_map.ip, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init1799, 0, 0, 0, 0, 0, 0, #t~union1800.raw_lock.ldv_2243.head_tail, #t~union1800.raw_lock.ldv_2243.tickets.head, #t~union1800.raw_lock.ldv_2243.tickets.tail, #t~union1800.magic, #t~union1800.owner_cpu, #t~union1800.owner.base, #t~union1800.owner.offset, #t~union1800.dep_map.key.base, #t~union1800.dep_map.key.offset, #t~union1800.dep_map.class_cache.base, #t~union1800.dep_map.class_cache.offset, #t~union1800.dep_map.name.base, #t~union1800.dep_map.name.offset, #t~union1800.dep_map.cpu, #t~union1800.dep_map.ip, #t~union1804.__padding, #t~union1804.dep_map.key.base, #t~union1804.dep_map.key.offset, #t~union1804.dep_map.class_cache.base, #t~union1804.dep_map.class_cache.offset, #t~union1804.dep_map.name.base, #t~union1804.dep_map.name.offset, #t~union1804.dep_map.cpu, #t~union1804.dep_map.ip, 0, 0, 0, 0, 0, 0, #funAddr~stk_v4l_dev_release.base, #funAddr~stk_v4l_dev_release.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset, #t~init1805, #t~init1806, 0, 0;
    havoc #t~union1763.major, #t~union1763.minor;
    havoc #t~union1764.major, #t~union1764.minor;
    havoc #t~union1765.card, #t~union1765.device, #t~union1765.subdevice;
    havoc #t~union1766;
    havoc #t~init1767.base, #t~init1767.offset;
    havoc #t~init1768;
    havoc #t~init1769.base, #t~init1769.offset;
    havoc #t~union1771;
    havoc #t~union1772.head, #t~union1772.tail;
    havoc #t~init1773.base, #t~init1773.offset;
    havoc #t~union1770.raw_lock.ldv_2243.head_tail, #t~union1770.raw_lock.ldv_2243.tickets.head, #t~union1770.raw_lock.ldv_2243.tickets.tail, #t~union1770.magic, #t~union1770.owner_cpu, #t~union1770.owner.base, #t~union1770.owner.offset, #t~union1770.dep_map.key.base, #t~union1770.dep_map.key.offset, #t~union1770.dep_map.class_cache.base, #t~union1770.dep_map.class_cache.offset, #t~union1770.dep_map.name.base, #t~union1770.dep_map.name.offset, #t~union1770.dep_map.cpu, #t~union1770.dep_map.ip;
    havoc #t~union1774.__padding, #t~union1774.dep_map.key.base, #t~union1774.dep_map.key.offset, #t~union1774.dep_map.class_cache.base, #t~union1774.dep_map.class_cache.offset, #t~union1774.dep_map.name.base, #t~union1774.dep_map.name.offset, #t~union1774.dep_map.cpu, #t~union1774.dep_map.ip;
    havoc #t~init1775.base, #t~init1775.offset;
    havoc #t~union1777;
    havoc #t~union1778.head, #t~union1778.tail;
    havoc #t~init1779.base, #t~init1779.offset;
    havoc #t~union1776.raw_lock.ldv_2243.head_tail, #t~union1776.raw_lock.ldv_2243.tickets.head, #t~union1776.raw_lock.ldv_2243.tickets.tail, #t~union1776.magic, #t~union1776.owner_cpu, #t~union1776.owner.base, #t~union1776.owner.offset, #t~union1776.dep_map.key.base, #t~union1776.dep_map.key.offset, #t~union1776.dep_map.class_cache.base, #t~union1776.dep_map.class_cache.offset, #t~union1776.dep_map.name.base, #t~union1776.dep_map.name.offset, #t~union1776.dep_map.cpu, #t~union1776.dep_map.ip;
    havoc #t~union1780.__padding, #t~union1780.dep_map.key.base, #t~union1780.dep_map.key.offset, #t~union1780.dep_map.class_cache.base, #t~union1780.dep_map.class_cache.offset, #t~union1780.dep_map.name.base, #t~union1780.dep_map.name.offset, #t~union1780.dep_map.cpu, #t~union1780.dep_map.ip;
    havoc #t~union1782;
    havoc #t~union1783.head, #t~union1783.tail;
    havoc #t~init1784.base, #t~init1784.offset;
    havoc #t~union1781.raw_lock.ldv_2243.head_tail, #t~union1781.raw_lock.ldv_2243.tickets.head, #t~union1781.raw_lock.ldv_2243.tickets.tail, #t~union1781.magic, #t~union1781.owner_cpu, #t~union1781.owner.base, #t~union1781.owner.offset, #t~union1781.dep_map.key.base, #t~union1781.dep_map.key.offset, #t~union1781.dep_map.class_cache.base, #t~union1781.dep_map.class_cache.offset, #t~union1781.dep_map.name.base, #t~union1781.dep_map.name.offset, #t~union1781.dep_map.cpu, #t~union1781.dep_map.ip;
    havoc #t~union1785.__padding, #t~union1785.dep_map.key.base, #t~union1785.dep_map.key.offset, #t~union1785.dep_map.class_cache.base, #t~union1785.dep_map.class_cache.offset, #t~union1785.dep_map.name.base, #t~union1785.dep_map.name.offset, #t~union1785.dep_map.cpu, #t~union1785.dep_map.ip;
    havoc #t~init1786;
    havoc #t~init1787.base, #t~init1787.offset;
    havoc #t~init1788.base, #t~init1788.offset;
    havoc #t~union1790;
    havoc #t~union1791.head, #t~union1791.tail;
    havoc #t~init1792.base, #t~init1792.offset;
    havoc #t~union1789.raw_lock.ldv_2243.head_tail, #t~union1789.raw_lock.ldv_2243.tickets.head, #t~union1789.raw_lock.ldv_2243.tickets.tail, #t~union1789.magic, #t~union1789.owner_cpu, #t~union1789.owner.base, #t~union1789.owner.offset, #t~union1789.dep_map.key.base, #t~union1789.dep_map.key.offset, #t~union1789.dep_map.class_cache.base, #t~union1789.dep_map.class_cache.offset, #t~union1789.dep_map.name.base, #t~union1789.dep_map.name.offset, #t~union1789.dep_map.cpu, #t~union1789.dep_map.ip;
    havoc #t~union1793.__padding, #t~union1793.dep_map.key.base, #t~union1793.dep_map.key.offset, #t~union1793.dep_map.class_cache.base, #t~union1793.dep_map.class_cache.offset, #t~union1793.dep_map.name.base, #t~union1793.dep_map.name.offset, #t~union1793.dep_map.cpu, #t~union1793.dep_map.ip;
    havoc #t~union1795;
    havoc #t~union1796.head, #t~union1796.tail;
    havoc #t~init1797.base, #t~init1797.offset;
    havoc #t~union1794.raw_lock.ldv_2243.head_tail, #t~union1794.raw_lock.ldv_2243.tickets.head, #t~union1794.raw_lock.ldv_2243.tickets.tail, #t~union1794.magic, #t~union1794.owner_cpu, #t~union1794.owner.base, #t~union1794.owner.offset, #t~union1794.dep_map.key.base, #t~union1794.dep_map.key.offset, #t~union1794.dep_map.class_cache.base, #t~union1794.dep_map.class_cache.offset, #t~union1794.dep_map.name.base, #t~union1794.dep_map.name.offset, #t~union1794.dep_map.cpu, #t~union1794.dep_map.ip;
    havoc #t~union1798.__padding, #t~union1798.dep_map.key.base, #t~union1798.dep_map.key.offset, #t~union1798.dep_map.class_cache.base, #t~union1798.dep_map.class_cache.offset, #t~union1798.dep_map.name.base, #t~union1798.dep_map.name.offset, #t~union1798.dep_map.cpu, #t~union1798.dep_map.ip;
    havoc #t~init1799;
    havoc #t~union1801;
    havoc #t~union1802.head, #t~union1802.tail;
    havoc #t~init1803.base, #t~init1803.offset;
    havoc #t~union1800.raw_lock.ldv_2243.head_tail, #t~union1800.raw_lock.ldv_2243.tickets.head, #t~union1800.raw_lock.ldv_2243.tickets.tail, #t~union1800.magic, #t~union1800.owner_cpu, #t~union1800.owner.base, #t~union1800.owner.offset, #t~union1800.dep_map.key.base, #t~union1800.dep_map.key.offset, #t~union1800.dep_map.class_cache.base, #t~union1800.dep_map.class_cache.offset, #t~union1800.dep_map.name.base, #t~union1800.dep_map.name.offset, #t~union1800.dep_map.cpu, #t~union1800.dep_map.ip;
    havoc #t~union1804.__padding, #t~union1804.dep_map.key.base, #t~union1804.dep_map.key.offset, #t~union1804.dep_map.class_cache.base, #t~union1804.dep_map.class_cache.offset, #t~union1804.dep_map.name.base, #t~union1804.dep_map.name.offset, #t~union1804.dep_map.cpu, #t~union1804.dep_map.ip;
    havoc #t~init1805;
    havoc #t~init1806;
    call ~#stk_camera_driver.base, ~#stk_camera_driver.offset := #Ultimate.alloc(285);
    call #t~nondet1537.base, #t~nondet1537.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet1537.base, #t~nondet1537.offset, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 0, 8);
    call write~$Pointer$(#funAddr~stk_camera_probe.base, #funAddr~stk_camera_probe.offset, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 8, 8);
    call write~$Pointer$(#funAddr~stk_camera_disconnect.base, #funAddr~stk_camera_disconnect.offset, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 24, 8);
    call write~$Pointer$(#funAddr~stk_camera_suspend.base, #funAddr~stk_camera_suspend.offset, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 32, 8);
    call write~$Pointer$(#funAddr~stk_camera_resume.base, #funAddr~stk_camera_resume.offset, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 64, 8);
    call write~$Pointer$(~#stkwebcam_table.base, ~#stkwebcam_table.offset, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 72, 8);
    call write~int(0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union1807.head, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union1807.tail, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union1808.__padding[0], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union1808.__padding[1], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union1808.__padding[2], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[3], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[4], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[5], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[6], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[7], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[8], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[9], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[10], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[11], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[12], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[13], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[14], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[15], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[16], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[17], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[18], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[19], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[20], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[21], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[22], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1808.__padding[23], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union1808.dep_map.key.base, #t~union1808.dep_map.key.offset, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union1808.dep_map.class_cache.base[0], #t~union1808.dep_map.class_cache.offset[0], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union1808.dep_map.class_cache.base[1], #t~union1808.dep_map.class_cache.offset[1], ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union1808.dep_map.name.base, #t~union1808.dep_map.name.offset, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union1808.dep_map.cpu, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union1808.dep_map.ip, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 80 + 68 + 8, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 16, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 24, 8);
    call write~int(0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 32, 1);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 33, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 41, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 49, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 57, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 65, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 73, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 81, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 89, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 97, 8);
    call write~$Pointer$(0, 0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 0 + 105, 8);
    call write~int(0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 164 + 113, 4);
    call write~int(0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 281, 1);
    call write~int(0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 282, 1);
    call write~int(0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 283, 1);
    call write~int(0, ~#stk_camera_driver.base, ~#stk_camera_driver.offset + 284, 1);
    havoc #t~nondet1537.base, #t~nondet1537.offset;
    havoc #t~union1807.head, #t~union1807.tail;
    havoc #t~union1808.__padding, #t~union1808.dep_map.key.base, #t~union1808.dep_map.key.offset, #t~union1808.dep_map.class_cache.base, #t~union1808.dep_map.class_cache.offset, #t~union1808.dep_map.name.base, #t~union1808.dep_map.name.offset, #t~union1808.dep_map.cpu, #t~union1808.dep_map.ip;
    call ~#ov_initvals.base, ~#ov_initvals.offset := #Ultimate.alloc(376);
    call write~int(17, ~#ov_initvals.base, ~#ov_initvals.offset + 0 + 0, 4);
    call write~int(128, ~#ov_initvals.base, ~#ov_initvals.offset + 0 + 4, 4);
    call write~int(59, ~#ov_initvals.base, ~#ov_initvals.offset + 8 + 0, 4);
    call write~int(1, ~#ov_initvals.base, ~#ov_initvals.offset + 8 + 4, 4);
    call write~int(106, ~#ov_initvals.base, ~#ov_initvals.offset + 16 + 0, 4);
    call write~int(125, ~#ov_initvals.base, ~#ov_initvals.offset + 16 + 4, 4);
    call write~int(16, ~#ov_initvals.base, ~#ov_initvals.offset + 24 + 0, 4);
    call write~int(64, ~#ov_initvals.base, ~#ov_initvals.offset + 24 + 4, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 32 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 32 + 4, 4);
    call write~int(1, ~#ov_initvals.base, ~#ov_initvals.offset + 40 + 0, 4);
    call write~int(128, ~#ov_initvals.base, ~#ov_initvals.offset + 40 + 4, 4);
    call write~int(2, ~#ov_initvals.base, ~#ov_initvals.offset + 48 + 0, 4);
    call write~int(128, ~#ov_initvals.base, ~#ov_initvals.offset + 48 + 4, 4);
    call write~int(19, ~#ov_initvals.base, ~#ov_initvals.offset + 56 + 0, 4);
    call write~int(101, ~#ov_initvals.base, ~#ov_initvals.offset + 56 + 4, 4);
    call write~int(57, ~#ov_initvals.base, ~#ov_initvals.offset + 64 + 0, 4);
    call write~int(80, ~#ov_initvals.base, ~#ov_initvals.offset + 64 + 4, 4);
    call write~int(56, ~#ov_initvals.base, ~#ov_initvals.offset + 72 + 0, 4);
    call write~int(147, ~#ov_initvals.base, ~#ov_initvals.offset + 72 + 4, 4);
    call write~int(55, ~#ov_initvals.base, ~#ov_initvals.offset + 80 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 80 + 4, 4);
    call write~int(53, ~#ov_initvals.base, ~#ov_initvals.offset + 88 + 0, 4);
    call write~int(129, ~#ov_initvals.base, ~#ov_initvals.offset + 88 + 4, 4);
    call write~int(14, ~#ov_initvals.base, ~#ov_initvals.offset + 96 + 0, 4);
    call write~int(32, ~#ov_initvals.base, ~#ov_initvals.offset + 96 + 4, 4);
    call write~int(4, ~#ov_initvals.base, ~#ov_initvals.offset + 104 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 104 + 4, 4);
    call write~int(12, ~#ov_initvals.base, ~#ov_initvals.offset + 112 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 112 + 4, 4);
    call write~int(13, ~#ov_initvals.base, ~#ov_initvals.offset + 120 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 120 + 4, 4);
    call write~int(27, ~#ov_initvals.base, ~#ov_initvals.offset + 128 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 128 + 4, 4);
    call write~int(22, ~#ov_initvals.base, ~#ov_initvals.offset + 136 + 0, 4);
    call write~int(7, ~#ov_initvals.base, ~#ov_initvals.offset + 136 + 4, 4);
    call write~int(51, ~#ov_initvals.base, ~#ov_initvals.offset + 144 + 0, 4);
    call write~int(226, ~#ov_initvals.base, ~#ov_initvals.offset + 144 + 4, 4);
    call write~int(52, ~#ov_initvals.base, ~#ov_initvals.offset + 152 + 0, 4);
    call write~int(191, ~#ov_initvals.base, ~#ov_initvals.offset + 152 + 4, 4);
    call write~int(65, ~#ov_initvals.base, ~#ov_initvals.offset + 160 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 160 + 4, 4);
    call write~int(150, ~#ov_initvals.base, ~#ov_initvals.offset + 168 + 0, 4);
    call write~int(4, ~#ov_initvals.base, ~#ov_initvals.offset + 168 + 4, 4);
    call write~int(105, ~#ov_initvals.base, ~#ov_initvals.offset + 176 + 0, 4);
    call write~int(64, ~#ov_initvals.base, ~#ov_initvals.offset + 176 + 4, 4);
    call write~int(142, ~#ov_initvals.base, ~#ov_initvals.offset + 184 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 184 + 4, 4);
    call write~int(60, ~#ov_initvals.base, ~#ov_initvals.offset + 192 + 0, 4);
    call write~int(115, ~#ov_initvals.base, ~#ov_initvals.offset + 192 + 4, 4);
    call write~int(143, ~#ov_initvals.base, ~#ov_initvals.offset + 200 + 0, 4);
    call write~int(223, ~#ov_initvals.base, ~#ov_initvals.offset + 200 + 4, 4);
    call write~int(139, ~#ov_initvals.base, ~#ov_initvals.offset + 208 + 0, 4);
    call write~int(6, ~#ov_initvals.base, ~#ov_initvals.offset + 208 + 4, 4);
    call write~int(140, ~#ov_initvals.base, ~#ov_initvals.offset + 216 + 0, 4);
    call write~int(32, ~#ov_initvals.base, ~#ov_initvals.offset + 216 + 4, 4);
    call write~int(148, ~#ov_initvals.base, ~#ov_initvals.offset + 224 + 0, 4);
    call write~int(136, ~#ov_initvals.base, ~#ov_initvals.offset + 224 + 4, 4);
    call write~int(149, ~#ov_initvals.base, ~#ov_initvals.offset + 232 + 0, 4);
    call write~int(136, ~#ov_initvals.base, ~#ov_initvals.offset + 232 + 4, 4);
    call write~int(41, ~#ov_initvals.base, ~#ov_initvals.offset + 240 + 0, 4);
    call write~int(63, ~#ov_initvals.base, ~#ov_initvals.offset + 240 + 4, 4);
    call write~int(15, ~#ov_initvals.base, ~#ov_initvals.offset + 248 + 0, 4);
    call write~int(66, ~#ov_initvals.base, ~#ov_initvals.offset + 248 + 4, 4);
    call write~int(165, ~#ov_initvals.base, ~#ov_initvals.offset + 256 + 0, 4);
    call write~int(128, ~#ov_initvals.base, ~#ov_initvals.offset + 256 + 4, 4);
    call write~int(169, ~#ov_initvals.base, ~#ov_initvals.offset + 264 + 0, 4);
    call write~int(184, ~#ov_initvals.base, ~#ov_initvals.offset + 264 + 4, 4);
    call write~int(170, ~#ov_initvals.base, ~#ov_initvals.offset + 272 + 0, 4);
    call write~int(146, ~#ov_initvals.base, ~#ov_initvals.offset + 272 + 4, 4);
    call write~int(171, ~#ov_initvals.base, ~#ov_initvals.offset + 280 + 0, 4);
    call write~int(10, ~#ov_initvals.base, ~#ov_initvals.offset + 280 + 4, 4);
    call write~int(144, ~#ov_initvals.base, ~#ov_initvals.offset + 288 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 288 + 4, 4);
    call write~int(145, ~#ov_initvals.base, ~#ov_initvals.offset + 296 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 296 + 4, 4);
    call write~int(159, ~#ov_initvals.base, ~#ov_initvals.offset + 304 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 304 + 4, 4);
    call write~int(160, ~#ov_initvals.base, ~#ov_initvals.offset + 312 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 312 + 4, 4);
    call write~int(36, ~#ov_initvals.base, ~#ov_initvals.offset + 320 + 0, 4);
    call write~int(104, ~#ov_initvals.base, ~#ov_initvals.offset + 320 + 4, 4);
    call write~int(37, ~#ov_initvals.base, ~#ov_initvals.offset + 328 + 0, 4);
    call write~int(92, ~#ov_initvals.base, ~#ov_initvals.offset + 328 + 4, 4);
    call write~int(38, ~#ov_initvals.base, ~#ov_initvals.offset + 336 + 0, 4);
    call write~int(195, ~#ov_initvals.base, ~#ov_initvals.offset + 336 + 4, 4);
    call write~int(20, ~#ov_initvals.base, ~#ov_initvals.offset + 344 + 0, 4);
    call write~int(46, ~#ov_initvals.base, ~#ov_initvals.offset + 344 + 4, 4);
    call write~int(42, ~#ov_initvals.base, ~#ov_initvals.offset + 352 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 352 + 4, 4);
    call write~int(43, ~#ov_initvals.base, ~#ov_initvals.offset + 360 + 0, 4);
    call write~int(0, ~#ov_initvals.base, ~#ov_initvals.offset + 360 + 4, 4);
    call write~int(255, ~#ov_initvals.base, ~#ov_initvals.offset + 368 + 0, 4);
    call write~int(255, ~#ov_initvals.base, ~#ov_initvals.offset + 368 + 4, 4);
    call ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset := #Ultimate.alloc(80);
    call write~int(58, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 0 + 0, 4);
    call write~int(12, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 0 + 4, 4);
    call write~int(79, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 8 + 0, 4);
    call write~int(128, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 8 + 4, 4);
    call write~int(80, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 16 + 0, 4);
    call write~int(128, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 16 + 4, 4);
    call write~int(81, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 24 + 0, 4);
    call write~int(0, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 24 + 4, 4);
    call write~int(82, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 32 + 0, 4);
    call write~int(34, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 32 + 4, 4);
    call write~int(83, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 40 + 0, 4);
    call write~int(94, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 40 + 4, 4);
    call write~int(84, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 48 + 0, 4);
    call write~int(128, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 48 + 4, 4);
    call write~int(61, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 56 + 0, 4);
    call write~int(80, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 56 + 4, 4);
    call write~int(64, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 64 + 0, 4);
    call write~int(192, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 64 + 4, 4);
    call write~int(255, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 72 + 0, 4);
    call write~int(255, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset + 72 + 4, 4);
    call ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset := #Ultimate.alloc(80);
    call write~int(58, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 0 + 0, 4);
    call write~int(0, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 0 + 4, 4);
    call write~int(79, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 8 + 0, 4);
    call write~int(128, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 8 + 4, 4);
    call write~int(80, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 16 + 0, 4);
    call write~int(128, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 16 + 4, 4);
    call write~int(81, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 24 + 0, 4);
    call write~int(0, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 24 + 4, 4);
    call write~int(82, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 32 + 0, 4);
    call write~int(34, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 32 + 4, 4);
    call write~int(83, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 40 + 0, 4);
    call write~int(94, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 40 + 4, 4);
    call write~int(84, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 48 + 0, 4);
    call write~int(128, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 48 + 4, 4);
    call write~int(61, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 56 + 0, 4);
    call write~int(80, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 56 + 4, 4);
    call write~int(64, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 64 + 0, 4);
    call write~int(192, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 64 + 4, 4);
    call write~int(255, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 72 + 0, 4);
    call write~int(255, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset + 72 + 4, 4);
    call ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset := #Ultimate.alloc(104);
    call write~int(140, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 0 + 0, 4);
    call write~int(0, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 0 + 4, 4);
    call write~int(58, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 8 + 0, 4);
    call write~int(0, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 8 + 4, 4);
    call write~int(4, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 16 + 0, 4);
    call write~int(0, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 16 + 4, 4);
    call write~int(20, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 24 + 0, 4);
    call write~int(56, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 24 + 4, 4);
    call write~int(79, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 32 + 0, 4);
    call write~int(179, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 32 + 4, 4);
    call write~int(80, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 40 + 0, 4);
    call write~int(179, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 40 + 4, 4);
    call write~int(81, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 48 + 0, 4);
    call write~int(0, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 48 + 4, 4);
    call write~int(82, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 56 + 0, 4);
    call write~int(61, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 56 + 4, 4);
    call write~int(83, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 64 + 0, 4);
    call write~int(167, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 64 + 4, 4);
    call write~int(84, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 72 + 0, 4);
    call write~int(228, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 72 + 4, 4);
    call write~int(61, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 80 + 0, 4);
    call write~int(128, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 80 + 4, 4);
    call write~int(64, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 88 + 0, 4);
    call write~int(208, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 88 + 4, 4);
    call write~int(255, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 96 + 0, 4);
    call write~int(255, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset + 96 + 4, 4);
    call ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset := #Ultimate.alloc(104);
    call write~int(140, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 0 + 0, 4);
    call write~int(0, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 0 + 4, 4);
    call write~int(58, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 8 + 0, 4);
    call write~int(8, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 8 + 4, 4);
    call write~int(4, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 16 + 0, 4);
    call write~int(0, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 16 + 4, 4);
    call write~int(20, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 24 + 0, 4);
    call write~int(56, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 24 + 4, 4);
    call write~int(79, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 32 + 0, 4);
    call write~int(179, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 32 + 4, 4);
    call write~int(80, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 40 + 0, 4);
    call write~int(179, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 40 + 4, 4);
    call write~int(81, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 48 + 0, 4);
    call write~int(0, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 48 + 4, 4);
    call write~int(82, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 56 + 0, 4);
    call write~int(61, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 56 + 4, 4);
    call write~int(83, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 64 + 0, 4);
    call write~int(167, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 64 + 4, 4);
    call write~int(84, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 72 + 0, 4);
    call write~int(228, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 72 + 4, 4);
    call write~int(61, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 80 + 0, 4);
    call write~int(128, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 80 + 4, 4);
    call write~int(64, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 88 + 0, 4);
    call write~int(208, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 88 + 4, 4);
    call write~int(255, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 96 + 0, 4);
    call write~int(255, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset + 96 + 4, 4);
    call ~#ov_fmt_bayer.base, ~#ov_fmt_bayer.offset := #Ultimate.alloc(24);
    call write~int(58, ~#ov_fmt_bayer.base, ~#ov_fmt_bayer.offset + 0 + 0, 4);
    call write~int(64, ~#ov_fmt_bayer.base, ~#ov_fmt_bayer.offset + 0 + 4, 4);
    call write~int(64, ~#ov_fmt_bayer.base, ~#ov_fmt_bayer.offset + 8 + 0, 4);
    call write~int(192, ~#ov_fmt_bayer.base, ~#ov_fmt_bayer.offset + 8 + 4, 4);
    call write~int(255, ~#ov_fmt_bayer.base, ~#ov_fmt_bayer.offset + 16 + 0, 4);
    call write~int(255, ~#ov_fmt_bayer.base, ~#ov_fmt_bayer.offset + 16 + 4, 4);
    ~usb_urb.base, ~usb_urb.offset := 0, 0;
    ~usb_dev.base, ~usb_dev.offset := 0, 0;
    ~completeFnInt.base, ~completeFnInt.offset := 0, 0;
    ~completeFnBulk.base, ~completeFnBulk.offset := 0, 0;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_6, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_state_variable_3, ~ldv_state_variable_2, ~ref_cnt, ~ldv_state_variable_1, ~usb_counter, ~ldv_state_variable_4, ~hflip, ~vflip, ~debug, ~ldv_retval_2, ~ldv_retval_5, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_1, ~ldv_retval_3, ~INTERF_STATE, ~SERIAL_STATE, ~usb_intfdata.base, ~usb_intfdata.offset, ~dev_counter, ~completeFnIntCounter, ~completeFnBulkCounter, ~v4l_stk_ioctl_ops_group4.base, ~v4l_stk_ioctl_ops_group4.offset, ~v4l_stk_ioctl_ops_group0.base, ~v4l_stk_ioctl_ops_group0.offset, ~v4l_stk_ioctl_ops_group3.base, ~v4l_stk_ioctl_ops_group3.offset, ~stk_camera_driver_group1.base, ~stk_camera_driver_group1.offset, ~v4l_stk_fops_group0.base, ~v4l_stk_fops_group0.offset, ~v4l_stk_ioctl_ops_group2.base, ~v4l_stk_ioctl_ops_group2.offset, ~v4l_stk_ioctl_ops_group1.base, ~v4l_stk_ioctl_ops_group1.offset, ~stk_v4l_vm_ops_group0.base, ~stk_v4l_vm_ops_group0.offset, ~#stkwebcam_table.base, ~#stkwebcam_table.offset, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset, ~#stk1125_initvals.base, ~#stk1125_initvals.offset, ~#stk_v4l_vm_ops.base, ~#stk_v4l_vm_ops.offset, ~stk_sizes.w, ~stk_sizes.h, ~stk_sizes.m, ~#stk_ctrl_ops.base, ~#stk_ctrl_ops.offset, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset, ~stk_v4l_data.entity.list.next.base, ~stk_v4l_data.entity.list.next.offset, ~stk_v4l_data.entity.list.prev.base, ~stk_v4l_data.entity.list.prev.offset, ~stk_v4l_data.entity.parent.base, ~stk_v4l_data.entity.parent.offset, ~stk_v4l_data.entity.id, ~stk_v4l_data.entity.name.base, ~stk_v4l_data.entity.name.offset, ~stk_v4l_data.entity.type, ~stk_v4l_data.entity.revision, ~stk_v4l_data.entity.flags, ~stk_v4l_data.entity.group_id, ~stk_v4l_data.entity.num_pads, ~stk_v4l_data.entity.num_links, ~stk_v4l_data.entity.num_backlinks, ~stk_v4l_data.entity.max_links, ~stk_v4l_data.entity.pads.base, ~stk_v4l_data.entity.pads.offset, ~stk_v4l_data.entity.links.base, ~stk_v4l_data.entity.links.offset, ~stk_v4l_data.entity.ops.base, ~stk_v4l_data.entity.ops.offset, ~stk_v4l_data.entity.stream_count, ~stk_v4l_data.entity.use_count, ~stk_v4l_data.entity.pipe.base, ~stk_v4l_data.entity.pipe.offset, ~stk_v4l_data.entity.info.v4l.major, ~stk_v4l_data.entity.info.v4l.minor, ~stk_v4l_data.entity.info.fb.major, ~stk_v4l_data.entity.info.fb.minor, ~stk_v4l_data.entity.info.alsa.card, ~stk_v4l_data.entity.info.alsa.device, ~stk_v4l_data.entity.info.alsa.subdevice, ~stk_v4l_data.entity.info.dvb, ~stk_v4l_data.fops.base, ~stk_v4l_data.fops.offset, ~stk_v4l_data.dev.parent.base, ~stk_v4l_data.dev.parent.offset, ~stk_v4l_data.dev.p.base, ~stk_v4l_data.dev.p.offset, ~stk_v4l_data.dev.kobj.name.base, ~stk_v4l_data.dev.kobj.name.offset, ~stk_v4l_data.dev.kobj.entry.next.base, ~stk_v4l_data.dev.kobj.entry.next.offset, ~stk_v4l_data.dev.kobj.entry.prev.base, ~stk_v4l_data.dev.kobj.entry.prev.offset, ~stk_v4l_data.dev.kobj.parent.base, ~stk_v4l_data.dev.kobj.parent.offset, ~stk_v4l_data.dev.kobj.kset.base, ~stk_v4l_data.dev.kobj.kset.offset, ~stk_v4l_data.dev.kobj.ktype.base, ~stk_v4l_data.dev.kobj.ktype.offset, ~stk_v4l_data.dev.kobj.sd.base, ~stk_v4l_data.dev.kobj.sd.offset, ~stk_v4l_data.dev.kobj.kref.refcount.counter, ~stk_v4l_data.dev.kobj.release.work.data.counter, ~stk_v4l_data.dev.kobj.release.work.entry.next.base, ~stk_v4l_data.dev.kobj.release.work.entry.next.offset, ~stk_v4l_data.dev.kobj.release.work.entry.prev.base, ~stk_v4l_data.dev.kobj.release.work.entry.prev.offset, ~stk_v4l_data.dev.kobj.release.work.func.base, ~stk_v4l_data.dev.kobj.release.work.func.offset, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.key.base, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.key.offset, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.class_cache.base, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.class_cache.offset, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.name.base, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.name.offset, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.cpu, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.ip, ~stk_v4l_data.dev.kobj.release.timer.entry.next.base, ~stk_v4l_data.dev.kobj.release.timer.entry.next.offset, ~stk_v4l_data.dev.kobj.release.timer.entry.prev.base, ~stk_v4l_data.dev.kobj.release.timer.entry.prev.offset, ~stk_v4l_data.dev.kobj.release.timer.expires, ~stk_v4l_data.dev.kobj.release.timer.base.base, ~stk_v4l_data.dev.kobj.release.timer.base.offset, ~stk_v4l_data.dev.kobj.release.timer.function.base, ~stk_v4l_data.dev.kobj.release.timer.function.offset, ~stk_v4l_data.dev.kobj.release.timer.data, ~stk_v4l_data.dev.kobj.release.timer.slack, ~stk_v4l_data.dev.kobj.release.timer.start_pid, ~stk_v4l_data.dev.kobj.release.timer.start_site.base, ~stk_v4l_data.dev.kobj.release.timer.start_site.offset, ~stk_v4l_data.dev.kobj.release.timer.start_comm, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.key.base, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.key.offset, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.class_cache.base, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.class_cache.offset, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.name.base, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.name.offset, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.cpu, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.ip, ~stk_v4l_data.dev.kobj.release.wq.base, ~stk_v4l_data.dev.kobj.release.wq.offset, ~stk_v4l_data.dev.kobj.release.cpu, ~stk_v4l_data.dev.kobj.state_initialized, ~stk_v4l_data.dev.kobj.state_in_sysfs, ~stk_v4l_data.dev.kobj.state_add_uevent_sent, ~stk_v4l_data.dev.kobj.state_remove_uevent_sent, ~stk_v4l_data.dev.kobj.uevent_suppress, ~stk_v4l_data.dev.init_name.base, ~stk_v4l_data.dev.init_name.offset, ~stk_v4l_data.dev.type.base, ~stk_v4l_data.dev.type.offset, ~stk_v4l_data.dev.mutex.count.counter, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.mutex.wait_list.next.base, ~stk_v4l_data.dev.mutex.wait_list.next.offset, ~stk_v4l_data.dev.mutex.wait_list.prev.base, ~stk_v4l_data.dev.mutex.wait_list.prev.offset, ~stk_v4l_data.dev.mutex.owner.base, ~stk_v4l_data.dev.mutex.owner.offset, ~stk_v4l_data.dev.mutex.name.base, ~stk_v4l_data.dev.mutex.name.offset, ~stk_v4l_data.dev.mutex.magic.base, ~stk_v4l_data.dev.mutex.magic.offset, ~stk_v4l_data.dev.mutex.dep_map.key.base, ~stk_v4l_data.dev.mutex.dep_map.key.offset, ~stk_v4l_data.dev.mutex.dep_map.class_cache.base, ~stk_v4l_data.dev.mutex.dep_map.class_cache.offset, ~stk_v4l_data.dev.mutex.dep_map.name.base, ~stk_v4l_data.dev.mutex.dep_map.name.offset, ~stk_v4l_data.dev.mutex.dep_map.cpu, ~stk_v4l_data.dev.mutex.dep_map.ip, ~stk_v4l_data.dev.bus.base, ~stk_v4l_data.dev.bus.offset, ~stk_v4l_data.dev.driver.base, ~stk_v4l_data.dev.driver.offset, ~stk_v4l_data.dev.platform_data.base, ~stk_v4l_data.dev.platform_data.offset, ~stk_v4l_data.dev.power.power_state.event, ~stk_v4l_data.dev.power.can_wakeup, ~stk_v4l_data.dev.power.async_suspend, ~stk_v4l_data.dev.power.is_prepared, ~stk_v4l_data.dev.power.is_suspended, ~stk_v4l_data.dev.power.ignore_children, ~stk_v4l_data.dev.power.early_init, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.power.entry.next.base, ~stk_v4l_data.dev.power.entry.next.offset, ~stk_v4l_data.dev.power.entry.prev.base, ~stk_v4l_data.dev.power.entry.prev.offset, ~stk_v4l_data.dev.power.completion.done, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.power.completion.wait.task_list.next.base, ~stk_v4l_data.dev.power.completion.wait.task_list.next.offset, ~stk_v4l_data.dev.power.completion.wait.task_list.prev.base, ~stk_v4l_data.dev.power.completion.wait.task_list.prev.offset, ~stk_v4l_data.dev.power.wakeup.base, ~stk_v4l_data.dev.power.wakeup.offset, ~stk_v4l_data.dev.power.wakeup_path, ~stk_v4l_data.dev.power.syscore, ~stk_v4l_data.dev.power.suspend_timer.entry.next.base, ~stk_v4l_data.dev.power.suspend_timer.entry.next.offset, ~stk_v4l_data.dev.power.suspend_timer.entry.prev.base, ~stk_v4l_data.dev.power.suspend_timer.entry.prev.offset, ~stk_v4l_data.dev.power.suspend_timer.expires, ~stk_v4l_data.dev.power.suspend_timer.base.base, ~stk_v4l_data.dev.power.suspend_timer.base.offset, ~stk_v4l_data.dev.power.suspend_timer.function.base, ~stk_v4l_data.dev.power.suspend_timer.function.offset, ~stk_v4l_data.dev.power.suspend_timer.data, ~stk_v4l_data.dev.power.suspend_timer.slack, ~stk_v4l_data.dev.power.suspend_timer.start_pid, ~stk_v4l_data.dev.power.suspend_timer.start_site.base, ~stk_v4l_data.dev.power.suspend_timer.start_site.offset, ~stk_v4l_data.dev.power.suspend_timer.start_comm, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.key.base, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.key.offset, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.class_cache.base, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.class_cache.offset, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.name.base, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.name.offset, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.cpu, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.ip, ~stk_v4l_data.dev.power.timer_expires, ~stk_v4l_data.dev.power.work.data.counter, ~stk_v4l_data.dev.power.work.entry.next.base, ~stk_v4l_data.dev.power.work.entry.next.offset, ~stk_v4l_data.dev.power.work.entry.prev.base, ~stk_v4l_data.dev.power.work.entry.prev.offset, ~stk_v4l_data.dev.power.work.func.base, ~stk_v4l_data.dev.power.work.func.offset, ~stk_v4l_data.dev.power.work.lockdep_map.key.base, ~stk_v4l_data.dev.power.work.lockdep_map.key.offset, ~stk_v4l_data.dev.power.work.lockdep_map.class_cache.base, ~stk_v4l_data.dev.power.work.lockdep_map.class_cache.offset, ~stk_v4l_data.dev.power.work.lockdep_map.name.base, ~stk_v4l_data.dev.power.work.lockdep_map.name.offset, ~stk_v4l_data.dev.power.work.lockdep_map.cpu, ~stk_v4l_data.dev.power.work.lockdep_map.ip, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.power.wait_queue.task_list.next.base, ~stk_v4l_data.dev.power.wait_queue.task_list.next.offset, ~stk_v4l_data.dev.power.wait_queue.task_list.prev.base, ~stk_v4l_data.dev.power.wait_queue.task_list.prev.offset, ~stk_v4l_data.dev.power.usage_count.counter, ~stk_v4l_data.dev.power.child_count.counter, ~stk_v4l_data.dev.power.disable_depth, ~stk_v4l_data.dev.power.idle_notification, ~stk_v4l_data.dev.power.request_pending, ~stk_v4l_data.dev.power.deferred_resume, ~stk_v4l_data.dev.power.run_wake, ~stk_v4l_data.dev.power.runtime_auto, ~stk_v4l_data.dev.power.no_callbacks, ~stk_v4l_data.dev.power.irq_safe, ~stk_v4l_data.dev.power.use_autosuspend, ~stk_v4l_data.dev.power.timer_autosuspends, ~stk_v4l_data.dev.power.memalloc_noio, ~stk_v4l_data.dev.power.request, ~stk_v4l_data.dev.power.runtime_status, ~stk_v4l_data.dev.power.runtime_error, ~stk_v4l_data.dev.power.autosuspend_delay, ~stk_v4l_data.dev.power.last_busy, ~stk_v4l_data.dev.power.active_jiffies, ~stk_v4l_data.dev.power.suspended_jiffies, ~stk_v4l_data.dev.power.accounting_timestamp, ~stk_v4l_data.dev.power.subsys_data.base, ~stk_v4l_data.dev.power.subsys_data.offset, ~stk_v4l_data.dev.power.qos.base, ~stk_v4l_data.dev.power.qos.offset, ~stk_v4l_data.dev.pm_domain.base, ~stk_v4l_data.dev.pm_domain.offset, ~stk_v4l_data.dev.numa_node, ~stk_v4l_data.dev.dma_mask.base, ~stk_v4l_data.dev.dma_mask.offset, ~stk_v4l_data.dev.coherent_dma_mask, ~stk_v4l_data.dev.dma_parms.base, ~stk_v4l_data.dev.dma_parms.offset, ~stk_v4l_data.dev.dma_pools.next.base, ~stk_v4l_data.dev.dma_pools.next.offset, ~stk_v4l_data.dev.dma_pools.prev.base, ~stk_v4l_data.dev.dma_pools.prev.offset, ~stk_v4l_data.dev.dma_mem.base, ~stk_v4l_data.dev.dma_mem.offset, ~stk_v4l_data.dev.archdata.dma_ops.base, ~stk_v4l_data.dev.archdata.dma_ops.offset, ~stk_v4l_data.dev.archdata.iommu.base, ~stk_v4l_data.dev.archdata.iommu.offset, ~stk_v4l_data.dev.of_node.base, ~stk_v4l_data.dev.of_node.offset, ~stk_v4l_data.dev.acpi_node.handle.base, ~stk_v4l_data.dev.acpi_node.handle.offset, ~stk_v4l_data.dev.devt, ~stk_v4l_data.dev.id, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.devres_head.next.base, ~stk_v4l_data.dev.devres_head.next.offset, ~stk_v4l_data.dev.devres_head.prev.base, ~stk_v4l_data.dev.devres_head.prev.offset, ~stk_v4l_data.dev.knode_class.n_klist.base, ~stk_v4l_data.dev.knode_class.n_klist.offset, ~stk_v4l_data.dev.knode_class.n_node.next.base, ~stk_v4l_data.dev.knode_class.n_node.next.offset, ~stk_v4l_data.dev.knode_class.n_node.prev.base, ~stk_v4l_data.dev.knode_class.n_node.prev.offset, ~stk_v4l_data.dev.knode_class.n_ref.refcount.counter, ~stk_v4l_data.dev.class.base, ~stk_v4l_data.dev.class.offset, ~stk_v4l_data.dev.groups.base, ~stk_v4l_data.dev.groups.offset, ~stk_v4l_data.dev.release.base, ~stk_v4l_data.dev.release.offset, ~stk_v4l_data.dev.iommu_group.base, ~stk_v4l_data.dev.iommu_group.offset, ~stk_v4l_data.dev.offline_disabled, ~stk_v4l_data.dev.offline, ~stk_v4l_data.cdev.base, ~stk_v4l_data.cdev.offset, ~stk_v4l_data.v4l2_dev.base, ~stk_v4l_data.v4l2_dev.offset, ~stk_v4l_data.dev_parent.base, ~stk_v4l_data.dev_parent.offset, ~stk_v4l_data.ctrl_handler.base, ~stk_v4l_data.ctrl_handler.offset, ~stk_v4l_data.queue.base, ~stk_v4l_data.queue.offset, ~stk_v4l_data.prio.base, ~stk_v4l_data.prio.offset, ~stk_v4l_data.name, ~stk_v4l_data.vfl_type, ~stk_v4l_data.vfl_dir, ~stk_v4l_data.minor, ~stk_v4l_data.num, ~stk_v4l_data.flags, ~stk_v4l_data.index, ~stk_v4l_data.fh_lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.fh_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.fh_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.fh_lock.ldv_7686.rlock.magic, ~stk_v4l_data.fh_lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.fh_lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.fh_lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.fh_list.next.base, ~stk_v4l_data.fh_list.next.offset, ~stk_v4l_data.fh_list.prev.base, ~stk_v4l_data.fh_list.prev.offset, ~stk_v4l_data.debug, ~stk_v4l_data.tvnorms, ~stk_v4l_data.release.base, ~stk_v4l_data.release.offset, ~stk_v4l_data.ioctl_ops.base, ~stk_v4l_data.ioctl_ops.offset, ~stk_v4l_data.valid_ioctls, ~stk_v4l_data.disable_locking, ~stk_v4l_data.lock.base, ~stk_v4l_data.lock.offset, ~#stk_camera_driver.base, ~#stk_camera_driver.offset, ~#ov_initvals.base, ~#ov_initvals.offset, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset, ~#ov_fmt_bayer.base, ~#ov_fmt_bayer.offset, ~usb_urb.base, ~usb_urb.offset, ~usb_dev.base, ~usb_dev.offset, ~completeFnInt.base, ~completeFnInt.offset, ~completeFnBulk.base, ~completeFnBulk.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_usb_register_driver_15(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2.base : int, #in~ldv_func_arg2.offset : int, #in~ldv_func_arg3.base : int, #in~ldv_func_arg3.offset : int) returns (#res : int){
    var #t~ret1646 : int;
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;
    var ~ldv_func_arg2.base : int, ~ldv_func_arg2.offset : int;
    var ~ldv_func_arg3.base : int, ~ldv_func_arg3.offset : int;
    var ~ldv_func_res~771 : ~ldv_func_ret_type;
    var ~tmp~771 : int;

  loc1:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    ~ldv_func_arg2.base, ~ldv_func_arg2.offset := #in~ldv_func_arg2.base, #in~ldv_func_arg2.offset;
    ~ldv_func_arg3.base, ~ldv_func_arg3.offset := #in~ldv_func_arg3.base, #in~ldv_func_arg3.offset;
    havoc ~ldv_func_res~771;
    havoc ~tmp~771;
    call #t~ret1646 := usb_register_driver(~ldv_func_arg1.base, ~ldv_func_arg1.offset, ~ldv_func_arg2.base, ~ldv_func_arg2.offset, ~ldv_func_arg3.base, ~ldv_func_arg3.offset);
    assume -2147483648 <= #t~ret1646 && #t~ret1646 <= 2147483647;
    ~tmp~771 := #t~ret1646;
    havoc #t~ret1646;
    ~ldv_func_res~771 := ~tmp~771;
    ~ldv_state_variable_1 := 1;
    ~usb_counter := 0;
    call ldv_usb_driver_1();
    #res := ~ldv_func_res~771;
    assume true;
    return;
}

procedure ldv_usb_register_driver_15(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2.base : int, #in~ldv_func_arg2.offset : int, #in~ldv_func_arg3.base : int, #in~ldv_func_arg3.offset : int) returns (#res : int);
modifies ~ldv_state_variable_1, ~usb_counter, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~stk_camera_driver_group1.base, ~stk_camera_driver_group1.offset;

implementation ldv_error() returns (){
  loc2:
    assume !false;
    goto loc3;
  loc3:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr1810 : int;

  loc4:
    #t~loopctr1810 := 0;
    goto loc5;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume #t~loopctr1810 < #amount;
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset + #t~loopctr1810 * 1 := 0], #memory_$Pointer$.offset[#ptr.base,#ptr.offset + #t~loopctr1810 * 1 := #value % 256];
    #memory_int := #memory_int[#ptr.base,#ptr.offset + #t~loopctr1810 * 1 := #value];
    #t~loopctr1810 := #t~loopctr1810 + 1;
    goto loc5;
  loc5_1:
    assume !(#t~loopctr1810 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation ldv_check_final_state() returns (){
  loc6:
    assume !((~usb_urb.base + ~usb_urb.offset) % 18446744073709551616 == 0);
    call ldv_error();
    return;
}

procedure ldv_check_final_state() returns ();
modifies ;

implementation ldv_usb_driver_1() returns (){
    var #t~ret1546.base : int, #t~ret1546.offset : int;
    var ~tmp~625.base : int, ~tmp~625.offset : int;

  loc7:
    havoc ~tmp~625.base, ~tmp~625.offset;
    call #t~ret1546.base, #t~ret1546.offset := ldv_zalloc(1520);
    ~tmp~625.base, ~tmp~625.offset := #t~ret1546.base, #t~ret1546.offset;
    havoc #t~ret1546.base, #t~ret1546.offset;
    ~stk_camera_driver_group1.base, ~stk_camera_driver_group1.offset := ~tmp~625.base, ~tmp~625.offset;
    assume true;
    return;
}

procedure ldv_usb_driver_1() returns ();
modifies ~stk_camera_driver_group1.base, ~stk_camera_driver_group1.offset, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~nondet111 : int;
    var #t~malloc112.base : int, #t~malloc112.offset : int;
    var ~size : int;
    var ~p~138.base : int, ~p~138.offset : int;
    var ~tmp~138.base : int, ~tmp~138.offset : int;
    var ~tmp___0~138 : int;

  loc8:
    ~size := #in~size;
    havoc ~p~138.base, ~p~138.offset;
    havoc ~tmp~138.base, ~tmp~138.offset;
    havoc ~tmp___0~138;
    assume -2147483648 <= #t~nondet111 && #t~nondet111 <= 2147483647;
    ~tmp___0~138 := #t~nondet111;
    havoc #t~nondet111;
    assume ~tmp___0~138 != 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation stk_camera_driver_init() returns (#res : int){
    var #t~nondet1538.base : int, #t~nondet1538.offset : int;
    var #t~ret1539 : int;
    var ~tmp~613 : int;

  loc9:
    havoc ~tmp~613;
    call #t~nondet1538.base, #t~nondet1538.offset := #Ultimate.alloc(10);
    call #t~ret1539 := ldv_usb_register_driver_15(~#stk_camera_driver.base, ~#stk_camera_driver.offset, ~#__this_module.base, ~#__this_module.offset, #t~nondet1538.base, #t~nondet1538.offset);
    assume -2147483648 <= #t~ret1539 && #t~ret1539 <= 2147483647;
    ~tmp~613 := #t~ret1539;
    havoc #t~nondet1538.base, #t~nondet1538.offset;
    havoc #t~ret1539;
    #res := ~tmp~613;
    assume true;
    return;
}

procedure stk_camera_driver_init() returns (#res : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~stk_camera_driver_group1.base, ~stk_camera_driver_group1.offset, ~ldv_state_variable_1, ~usb_counter;

implementation ULTIMATE.start() returns (){
    var #t~ret1809 : int;

  loc10:
    call ULTIMATE.init();
    call #t~ret1809 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_6, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_state_variable_3, ~ldv_state_variable_2, ~ref_cnt, ~ldv_state_variable_1, ~usb_counter, ~ldv_state_variable_4, ~hflip, ~vflip, ~debug, ~ldv_retval_2, ~ldv_retval_5, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_1, ~ldv_retval_3, ~INTERF_STATE, ~SERIAL_STATE, ~usb_intfdata.base, ~usb_intfdata.offset, ~dev_counter, ~completeFnIntCounter, ~completeFnBulkCounter, ~v4l_stk_ioctl_ops_group4.base, ~v4l_stk_ioctl_ops_group4.offset, ~v4l_stk_ioctl_ops_group0.base, ~v4l_stk_ioctl_ops_group0.offset, ~v4l_stk_ioctl_ops_group3.base, ~v4l_stk_ioctl_ops_group3.offset, ~stk_camera_driver_group1.base, ~stk_camera_driver_group1.offset, ~v4l_stk_fops_group0.base, ~v4l_stk_fops_group0.offset, ~v4l_stk_ioctl_ops_group2.base, ~v4l_stk_ioctl_ops_group2.offset, ~v4l_stk_ioctl_ops_group1.base, ~v4l_stk_ioctl_ops_group1.offset, ~stk_v4l_vm_ops_group0.base, ~stk_v4l_vm_ops_group0.offset, ~#stkwebcam_table.base, ~#stkwebcam_table.offset, ~#stk_upside_down_dmi_table.base, ~#stk_upside_down_dmi_table.offset, ~#stk1125_initvals.base, ~#stk1125_initvals.offset, ~#stk_v4l_vm_ops.base, ~#stk_v4l_vm_ops.offset, ~stk_sizes.w, ~stk_sizes.h, ~stk_sizes.m, ~#stk_ctrl_ops.base, ~#stk_ctrl_ops.offset, ~#v4l_stk_fops.base, ~#v4l_stk_fops.offset, ~#v4l_stk_ioctl_ops.base, ~#v4l_stk_ioctl_ops.offset, ~stk_v4l_data.entity.list.next.base, ~stk_v4l_data.entity.list.next.offset, ~stk_v4l_data.entity.list.prev.base, ~stk_v4l_data.entity.list.prev.offset, ~stk_v4l_data.entity.parent.base, ~stk_v4l_data.entity.parent.offset, ~stk_v4l_data.entity.id, ~stk_v4l_data.entity.name.base, ~stk_v4l_data.entity.name.offset, ~stk_v4l_data.entity.type, ~stk_v4l_data.entity.revision, ~stk_v4l_data.entity.flags, ~stk_v4l_data.entity.group_id, ~stk_v4l_data.entity.num_pads, ~stk_v4l_data.entity.num_links, ~stk_v4l_data.entity.num_backlinks, ~stk_v4l_data.entity.max_links, ~stk_v4l_data.entity.pads.base, ~stk_v4l_data.entity.pads.offset, ~stk_v4l_data.entity.links.base, ~stk_v4l_data.entity.links.offset, ~stk_v4l_data.entity.ops.base, ~stk_v4l_data.entity.ops.offset, ~stk_v4l_data.entity.stream_count, ~stk_v4l_data.entity.use_count, ~stk_v4l_data.entity.pipe.base, ~stk_v4l_data.entity.pipe.offset, ~stk_v4l_data.entity.info.v4l.major, ~stk_v4l_data.entity.info.v4l.minor, ~stk_v4l_data.entity.info.fb.major, ~stk_v4l_data.entity.info.fb.minor, ~stk_v4l_data.entity.info.alsa.card, ~stk_v4l_data.entity.info.alsa.device, ~stk_v4l_data.entity.info.alsa.subdevice, ~stk_v4l_data.entity.info.dvb, ~stk_v4l_data.fops.base, ~stk_v4l_data.fops.offset, ~stk_v4l_data.dev.parent.base, ~stk_v4l_data.dev.parent.offset, ~stk_v4l_data.dev.p.base, ~stk_v4l_data.dev.p.offset, ~stk_v4l_data.dev.kobj.name.base, ~stk_v4l_data.dev.kobj.name.offset, ~stk_v4l_data.dev.kobj.entry.next.base, ~stk_v4l_data.dev.kobj.entry.next.offset, ~stk_v4l_data.dev.kobj.entry.prev.base, ~stk_v4l_data.dev.kobj.entry.prev.offset, ~stk_v4l_data.dev.kobj.parent.base, ~stk_v4l_data.dev.kobj.parent.offset, ~stk_v4l_data.dev.kobj.kset.base, ~stk_v4l_data.dev.kobj.kset.offset, ~stk_v4l_data.dev.kobj.ktype.base, ~stk_v4l_data.dev.kobj.ktype.offset, ~stk_v4l_data.dev.kobj.sd.base, ~stk_v4l_data.dev.kobj.sd.offset, ~stk_v4l_data.dev.kobj.kref.refcount.counter, ~stk_v4l_data.dev.kobj.release.work.data.counter, ~stk_v4l_data.dev.kobj.release.work.entry.next.base, ~stk_v4l_data.dev.kobj.release.work.entry.next.offset, ~stk_v4l_data.dev.kobj.release.work.entry.prev.base, ~stk_v4l_data.dev.kobj.release.work.entry.prev.offset, ~stk_v4l_data.dev.kobj.release.work.func.base, ~stk_v4l_data.dev.kobj.release.work.func.offset, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.key.base, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.key.offset, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.class_cache.base, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.class_cache.offset, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.name.base, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.name.offset, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.cpu, ~stk_v4l_data.dev.kobj.release.work.lockdep_map.ip, ~stk_v4l_data.dev.kobj.release.timer.entry.next.base, ~stk_v4l_data.dev.kobj.release.timer.entry.next.offset, ~stk_v4l_data.dev.kobj.release.timer.entry.prev.base, ~stk_v4l_data.dev.kobj.release.timer.entry.prev.offset, ~stk_v4l_data.dev.kobj.release.timer.expires, ~stk_v4l_data.dev.kobj.release.timer.base.base, ~stk_v4l_data.dev.kobj.release.timer.base.offset, ~stk_v4l_data.dev.kobj.release.timer.function.base, ~stk_v4l_data.dev.kobj.release.timer.function.offset, ~stk_v4l_data.dev.kobj.release.timer.data, ~stk_v4l_data.dev.kobj.release.timer.slack, ~stk_v4l_data.dev.kobj.release.timer.start_pid, ~stk_v4l_data.dev.kobj.release.timer.start_site.base, ~stk_v4l_data.dev.kobj.release.timer.start_site.offset, ~stk_v4l_data.dev.kobj.release.timer.start_comm, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.key.base, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.key.offset, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.class_cache.base, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.class_cache.offset, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.name.base, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.name.offset, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.cpu, ~stk_v4l_data.dev.kobj.release.timer.lockdep_map.ip, ~stk_v4l_data.dev.kobj.release.wq.base, ~stk_v4l_data.dev.kobj.release.wq.offset, ~stk_v4l_data.dev.kobj.release.cpu, ~stk_v4l_data.dev.kobj.state_initialized, ~stk_v4l_data.dev.kobj.state_in_sysfs, ~stk_v4l_data.dev.kobj.state_add_uevent_sent, ~stk_v4l_data.dev.kobj.state_remove_uevent_sent, ~stk_v4l_data.dev.kobj.uevent_suppress, ~stk_v4l_data.dev.init_name.base, ~stk_v4l_data.dev.init_name.offset, ~stk_v4l_data.dev.type.base, ~stk_v4l_data.dev.type.offset, ~stk_v4l_data.dev.mutex.count.counter, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.mutex.wait_lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.mutex.wait_list.next.base, ~stk_v4l_data.dev.mutex.wait_list.next.offset, ~stk_v4l_data.dev.mutex.wait_list.prev.base, ~stk_v4l_data.dev.mutex.wait_list.prev.offset, ~stk_v4l_data.dev.mutex.owner.base, ~stk_v4l_data.dev.mutex.owner.offset, ~stk_v4l_data.dev.mutex.name.base, ~stk_v4l_data.dev.mutex.name.offset, ~stk_v4l_data.dev.mutex.magic.base, ~stk_v4l_data.dev.mutex.magic.offset, ~stk_v4l_data.dev.mutex.dep_map.key.base, ~stk_v4l_data.dev.mutex.dep_map.key.offset, ~stk_v4l_data.dev.mutex.dep_map.class_cache.base, ~stk_v4l_data.dev.mutex.dep_map.class_cache.offset, ~stk_v4l_data.dev.mutex.dep_map.name.base, ~stk_v4l_data.dev.mutex.dep_map.name.offset, ~stk_v4l_data.dev.mutex.dep_map.cpu, ~stk_v4l_data.dev.mutex.dep_map.ip, ~stk_v4l_data.dev.bus.base, ~stk_v4l_data.dev.bus.offset, ~stk_v4l_data.dev.driver.base, ~stk_v4l_data.dev.driver.offset, ~stk_v4l_data.dev.platform_data.base, ~stk_v4l_data.dev.platform_data.offset, ~stk_v4l_data.dev.power.power_state.event, ~stk_v4l_data.dev.power.can_wakeup, ~stk_v4l_data.dev.power.async_suspend, ~stk_v4l_data.dev.power.is_prepared, ~stk_v4l_data.dev.power.is_suspended, ~stk_v4l_data.dev.power.ignore_children, ~stk_v4l_data.dev.power.early_init, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.power.lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.power.lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.power.entry.next.base, ~stk_v4l_data.dev.power.entry.next.offset, ~stk_v4l_data.dev.power.entry.prev.base, ~stk_v4l_data.dev.power.entry.prev.offset, ~stk_v4l_data.dev.power.completion.done, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.power.completion.wait.lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.power.completion.wait.task_list.next.base, ~stk_v4l_data.dev.power.completion.wait.task_list.next.offset, ~stk_v4l_data.dev.power.completion.wait.task_list.prev.base, ~stk_v4l_data.dev.power.completion.wait.task_list.prev.offset, ~stk_v4l_data.dev.power.wakeup.base, ~stk_v4l_data.dev.power.wakeup.offset, ~stk_v4l_data.dev.power.wakeup_path, ~stk_v4l_data.dev.power.syscore, ~stk_v4l_data.dev.power.suspend_timer.entry.next.base, ~stk_v4l_data.dev.power.suspend_timer.entry.next.offset, ~stk_v4l_data.dev.power.suspend_timer.entry.prev.base, ~stk_v4l_data.dev.power.suspend_timer.entry.prev.offset, ~stk_v4l_data.dev.power.suspend_timer.expires, ~stk_v4l_data.dev.power.suspend_timer.base.base, ~stk_v4l_data.dev.power.suspend_timer.base.offset, ~stk_v4l_data.dev.power.suspend_timer.function.base, ~stk_v4l_data.dev.power.suspend_timer.function.offset, ~stk_v4l_data.dev.power.suspend_timer.data, ~stk_v4l_data.dev.power.suspend_timer.slack, ~stk_v4l_data.dev.power.suspend_timer.start_pid, ~stk_v4l_data.dev.power.suspend_timer.start_site.base, ~stk_v4l_data.dev.power.suspend_timer.start_site.offset, ~stk_v4l_data.dev.power.suspend_timer.start_comm, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.key.base, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.key.offset, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.class_cache.base, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.class_cache.offset, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.name.base, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.name.offset, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.cpu, ~stk_v4l_data.dev.power.suspend_timer.lockdep_map.ip, ~stk_v4l_data.dev.power.timer_expires, ~stk_v4l_data.dev.power.work.data.counter, ~stk_v4l_data.dev.power.work.entry.next.base, ~stk_v4l_data.dev.power.work.entry.next.offset, ~stk_v4l_data.dev.power.work.entry.prev.base, ~stk_v4l_data.dev.power.work.entry.prev.offset, ~stk_v4l_data.dev.power.work.func.base, ~stk_v4l_data.dev.power.work.func.offset, ~stk_v4l_data.dev.power.work.lockdep_map.key.base, ~stk_v4l_data.dev.power.work.lockdep_map.key.offset, ~stk_v4l_data.dev.power.work.lockdep_map.class_cache.base, ~stk_v4l_data.dev.power.work.lockdep_map.class_cache.offset, ~stk_v4l_data.dev.power.work.lockdep_map.name.base, ~stk_v4l_data.dev.power.work.lockdep_map.name.offset, ~stk_v4l_data.dev.power.work.lockdep_map.cpu, ~stk_v4l_data.dev.power.work.lockdep_map.ip, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.power.wait_queue.lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.power.wait_queue.task_list.next.base, ~stk_v4l_data.dev.power.wait_queue.task_list.next.offset, ~stk_v4l_data.dev.power.wait_queue.task_list.prev.base, ~stk_v4l_data.dev.power.wait_queue.task_list.prev.offset, ~stk_v4l_data.dev.power.usage_count.counter, ~stk_v4l_data.dev.power.child_count.counter, ~stk_v4l_data.dev.power.disable_depth, ~stk_v4l_data.dev.power.idle_notification, ~stk_v4l_data.dev.power.request_pending, ~stk_v4l_data.dev.power.deferred_resume, ~stk_v4l_data.dev.power.run_wake, ~stk_v4l_data.dev.power.runtime_auto, ~stk_v4l_data.dev.power.no_callbacks, ~stk_v4l_data.dev.power.irq_safe, ~stk_v4l_data.dev.power.use_autosuspend, ~stk_v4l_data.dev.power.timer_autosuspends, ~stk_v4l_data.dev.power.memalloc_noio, ~stk_v4l_data.dev.power.request, ~stk_v4l_data.dev.power.runtime_status, ~stk_v4l_data.dev.power.runtime_error, ~stk_v4l_data.dev.power.autosuspend_delay, ~stk_v4l_data.dev.power.last_busy, ~stk_v4l_data.dev.power.active_jiffies, ~stk_v4l_data.dev.power.suspended_jiffies, ~stk_v4l_data.dev.power.accounting_timestamp, ~stk_v4l_data.dev.power.subsys_data.base, ~stk_v4l_data.dev.power.subsys_data.offset, ~stk_v4l_data.dev.power.qos.base, ~stk_v4l_data.dev.power.qos.offset, ~stk_v4l_data.dev.pm_domain.base, ~stk_v4l_data.dev.pm_domain.offset, ~stk_v4l_data.dev.numa_node, ~stk_v4l_data.dev.dma_mask.base, ~stk_v4l_data.dev.dma_mask.offset, ~stk_v4l_data.dev.coherent_dma_mask, ~stk_v4l_data.dev.dma_parms.base, ~stk_v4l_data.dev.dma_parms.offset, ~stk_v4l_data.dev.dma_pools.next.base, ~stk_v4l_data.dev.dma_pools.next.offset, ~stk_v4l_data.dev.dma_pools.prev.base, ~stk_v4l_data.dev.dma_pools.prev.offset, ~stk_v4l_data.dev.dma_mem.base, ~stk_v4l_data.dev.dma_mem.offset, ~stk_v4l_data.dev.archdata.dma_ops.base, ~stk_v4l_data.dev.archdata.dma_ops.offset, ~stk_v4l_data.dev.archdata.iommu.base, ~stk_v4l_data.dev.archdata.iommu.offset, ~stk_v4l_data.dev.of_node.base, ~stk_v4l_data.dev.of_node.offset, ~stk_v4l_data.dev.acpi_node.handle.base, ~stk_v4l_data.dev.acpi_node.handle.offset, ~stk_v4l_data.dev.devt, ~stk_v4l_data.dev.id, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.magic, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.dev.devres_lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.dev.devres_lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.dev.devres_head.next.base, ~stk_v4l_data.dev.devres_head.next.offset, ~stk_v4l_data.dev.devres_head.prev.base, ~stk_v4l_data.dev.devres_head.prev.offset, ~stk_v4l_data.dev.knode_class.n_klist.base, ~stk_v4l_data.dev.knode_class.n_klist.offset, ~stk_v4l_data.dev.knode_class.n_node.next.base, ~stk_v4l_data.dev.knode_class.n_node.next.offset, ~stk_v4l_data.dev.knode_class.n_node.prev.base, ~stk_v4l_data.dev.knode_class.n_node.prev.offset, ~stk_v4l_data.dev.knode_class.n_ref.refcount.counter, ~stk_v4l_data.dev.class.base, ~stk_v4l_data.dev.class.offset, ~stk_v4l_data.dev.groups.base, ~stk_v4l_data.dev.groups.offset, ~stk_v4l_data.dev.release.base, ~stk_v4l_data.dev.release.offset, ~stk_v4l_data.dev.iommu_group.base, ~stk_v4l_data.dev.iommu_group.offset, ~stk_v4l_data.dev.offline_disabled, ~stk_v4l_data.dev.offline, ~stk_v4l_data.cdev.base, ~stk_v4l_data.cdev.offset, ~stk_v4l_data.v4l2_dev.base, ~stk_v4l_data.v4l2_dev.offset, ~stk_v4l_data.dev_parent.base, ~stk_v4l_data.dev_parent.offset, ~stk_v4l_data.ctrl_handler.base, ~stk_v4l_data.ctrl_handler.offset, ~stk_v4l_data.queue.base, ~stk_v4l_data.queue.offset, ~stk_v4l_data.prio.base, ~stk_v4l_data.prio.offset, ~stk_v4l_data.name, ~stk_v4l_data.vfl_type, ~stk_v4l_data.vfl_dir, ~stk_v4l_data.minor, ~stk_v4l_data.num, ~stk_v4l_data.flags, ~stk_v4l_data.index, ~stk_v4l_data.fh_lock.ldv_7686.rlock.raw_lock.ldv_2243.head_tail, ~stk_v4l_data.fh_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.head, ~stk_v4l_data.fh_lock.ldv_7686.rlock.raw_lock.ldv_2243.tickets.tail, ~stk_v4l_data.fh_lock.ldv_7686.rlock.magic, ~stk_v4l_data.fh_lock.ldv_7686.rlock.owner_cpu, ~stk_v4l_data.fh_lock.ldv_7686.rlock.owner.base, ~stk_v4l_data.fh_lock.ldv_7686.rlock.owner.offset, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.key.base, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.key.offset, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.class_cache.base, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.class_cache.offset, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.name.base, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.name.offset, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.cpu, ~stk_v4l_data.fh_lock.ldv_7686.rlock.dep_map.ip, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.__padding, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.key.base, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.key.offset, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.class_cache.base, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.class_cache.offset, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.name.base, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.name.offset, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.cpu, ~stk_v4l_data.fh_lock.ldv_7686.ldv_7685.dep_map.ip, ~stk_v4l_data.fh_list.next.base, ~stk_v4l_data.fh_list.next.offset, ~stk_v4l_data.fh_list.prev.base, ~stk_v4l_data.fh_list.prev.offset, ~stk_v4l_data.debug, ~stk_v4l_data.tvnorms, ~stk_v4l_data.release.base, ~stk_v4l_data.release.offset, ~stk_v4l_data.ioctl_ops.base, ~stk_v4l_data.ioctl_ops.offset, ~stk_v4l_data.valid_ioctls, ~stk_v4l_data.disable_locking, ~stk_v4l_data.lock.base, ~stk_v4l_data.lock.offset, ~#stk_camera_driver.base, ~#stk_camera_driver.offset, ~#ov_initvals.base, ~#ov_initvals.offset, ~#ov_fmt_uyvy.base, ~#ov_fmt_uyvy.offset, ~#ov_fmt_yuyv.base, ~#ov_fmt_yuyv.offset, ~#ov_fmt_rgbr.base, ~#ov_fmt_rgbr.offset, ~#ov_fmt_rgbp.base, ~#ov_fmt_rgbp.offset, ~#ov_fmt_bayer.base, ~#ov_fmt_bayer.offset, ~usb_urb.base, ~usb_urb.offset, ~usb_dev.base, ~usb_dev.offset, ~completeFnInt.base, ~completeFnInt.offset, ~completeFnBulk.base, ~completeFnBulk.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_state_variable_6, ~ldv_state_variable_4, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_3, ~ldv_state_variable_2, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_5;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~usb_intfdata.base, ~usb_intfdata.offset, ~v4l_stk_ioctl_ops_group3.base, ~v4l_stk_ioctl_ops_group3.offset, ~v4l_stk_ioctl_ops_group0.base, ~v4l_stk_ioctl_ops_group0.offset, ~v4l_stk_ioctl_ops_group1.base, ~v4l_stk_ioctl_ops_group1.offset, ~v4l_stk_ioctl_ops_group4.base, ~v4l_stk_ioctl_ops_group4.offset, ~v4l_stk_ioctl_ops_group2.base, ~v4l_stk_ioctl_ops_group2.offset, ~stk_v4l_vm_ops_group0.base, ~stk_v4l_vm_ops_group0.offset, ~v4l_stk_fops_group0.base, ~v4l_stk_fops_group0.offset, ~ldv_state_variable_1, ~INTERF_STATE, ~stk_camera_driver_group1.base, ~stk_camera_driver_group1.offset, ~usb_counter, ~usb_urb.base, ~usb_urb.offset, ~completeFnIntCounter, ~completeFnBulkCounter, ~ldv_state_variable_6, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_3, ~ldv_state_variable_2, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_5;

implementation main() returns (#res : int){
    var #t~nondet1548 : int;
    var #t~nondet1549 : int;
    var #t~ret1550.base : int, #t~ret1550.offset : int;
    var #t~nondet1551 : int;
    var #t~ret1552.base : int, #t~ret1552.offset : int;
    var #t~ret1553.base : int, #t~ret1553.offset : int;
    var #t~ret1554.base : int, #t~ret1554.offset : int;
    var #t~ret1555.base : int, #t~ret1555.offset : int;
    var #t~ret1556.base : int, #t~ret1556.offset : int;
    var #t~nondet1557 : int;
    var #t~ret1558.base : int, #t~ret1558.offset : int;
    var #t~ret1559.base : int, #t~ret1559.offset : int;
    var #t~ret1560.base : int, #t~ret1560.offset : int;
    var #t~ret1561.base : int, #t~ret1561.offset : int;
    var #t~ret1562.base : int, #t~ret1562.offset : int;
    var #t~ret1563.base : int, #t~ret1563.offset : int;
    var #t~ret1564.base : int, #t~ret1564.offset : int;
    var #t~ret1565.base : int, #t~ret1565.offset : int;
    var #t~ret1566.base : int, #t~ret1566.offset : int;
    var #t~ret1567.base : int, #t~ret1567.offset : int;
    var #t~ret1568.base : int, #t~ret1568.offset : int;
    var #t~ret1569.base : int, #t~ret1569.offset : int;
    var #t~ret1570.base : int, #t~ret1570.offset : int;
    var #t~ret1571.base : int, #t~ret1571.offset : int;
    var #t~ret1572.base : int, #t~ret1572.offset : int;
    var #t~ret1573.base : int, #t~ret1573.offset : int;
    var #t~ret1574.base : int, #t~ret1574.offset : int;
    var #t~ret1575.base : int, #t~ret1575.offset : int;
    var #t~ret1576.base : int, #t~ret1576.offset : int;
    var #t~ret1577.base : int, #t~ret1577.offset : int;
    var #t~ret1578.base : int, #t~ret1578.offset : int;
    var #t~ret1579.base : int, #t~ret1579.offset : int;
    var #t~ret1580.base : int, #t~ret1580.offset : int;
    var #t~ret1581.base : int, #t~ret1581.offset : int;
    var #t~ret1582.base : int, #t~ret1582.offset : int;
    var #t~memset1583.base : int, #t~memset1583.offset : int;
    var #t~memset1584.base : int, #t~memset1584.offset : int;
    var #t~memset1585.base : int, #t~memset1585.offset : int;
    var #t~nondet1586 : int;
    var #t~switch1587 : bool;
    var #t~nondet1588 : int;
    var #t~switch1589 : bool;
    var #t~nondet1590 : int;
    var #t~switch1591 : bool;
    var #t~ret1592 : int;
    var #t~ret1593 : int;
    var #t~ret1594 : int;
    var #t~ret1595 : int;
    var #t~ret1596 : int;
    var #t~ret1597 : int;
    var #t~ret1598 : int;
    var #t~ret1599 : int;
    var #t~ret1600 : int;
    var #t~nondet1601 : int;
    var #t~switch1602 : bool;
    var #t~ret1603 : int;
    var #t~mem1604 : int;
    var #t~ret1605 : int;
    var #t~ret1606 : int;
    var #t~ret1607 : int;
    var #t~nondet1608 : int;
    var #t~switch1609 : bool;
    var #t~ret1610 : int;
    var #t~nondet1611 : int;
    var #t~switch1612 : bool;
    var #t~ret1613 : int;
    var #t~ret1614 : int;
    var #t~ret1615 : int;
    var #t~ret1616 : int;
    var #t~mem1617 : int;
    var #t~ret1618 : int;
    var #t~ret1619 : int;
    var #t~ret1620 : int;
    var #t~ret1621 : int;
    var #t~ret1622 : int;
    var #t~ret1623 : int;
    var #t~ret1624 : int;
    var #t~ret1625 : int;
    var #t~ret1626 : int;
    var #t~ret1627 : int;
    var #t~ret1628 : int;
    var #t~ret1629 : int;
    var #t~ret1630 : int;
    var #t~ret1631 : int;
    var #t~mem1632 : int;
    var #t~ret1633 : int;
    var #t~nondet1634 : int;
    var #t~switch1635 : bool;
    var #t~ret1636 : int;
    var #t~nondet1637 : int;
    var #t~switch1638 : bool;
    var #t~ret1639 : int;
    var ~ldvarg1~629 : int;
    var ~tmp~629 : int;
    var ~ldvarg4~629 : int;
    var ~tmp___0~629 : int;
    var ~ldvarg3~629.base : int, ~ldvarg3~629.offset : int;
    var ~tmp___1~629.base : int, ~tmp___1~629.offset : int;
    var ~ldvarg0~629 : int;
    var ~tmp___2~629 : int;
    var ~ldvarg5~629.base : int, ~ldvarg5~629.offset : int;
    var ~tmp___3~629.base : int, ~tmp___3~629.offset : int;
    var ~ldvarg2~629.base : int, ~ldvarg2~629.offset : int;
    var ~tmp___4~629.base : int, ~tmp___4~629.offset : int;
    var ~ldvarg6~629.base : int, ~ldvarg6~629.offset : int;
    var ~tmp___5~629.base : int, ~tmp___5~629.offset : int;
    var ~ldvarg8~629.base : int, ~ldvarg8~629.offset : int;
    var ~tmp___6~629.base : int, ~tmp___6~629.offset : int;
    var ~#ldvarg7~629.base : int, ~#ldvarg7~629.offset : int;
    var ~ldvarg18~629.base : int, ~ldvarg18~629.offset : int;
    var ~tmp___7~629.base : int, ~tmp___7~629.offset : int;
    var ~ldvarg11~629 : int;
    var ~tmp___8~629 : int;
    var ~ldvarg32~629.base : int, ~ldvarg32~629.offset : int;
    var ~tmp___9~629.base : int, ~tmp___9~629.offset : int;
    var ~ldvarg31~629.base : int, ~ldvarg31~629.offset : int;
    var ~tmp___10~629.base : int, ~tmp___10~629.offset : int;
    var ~ldvarg20~629.base : int, ~ldvarg20~629.offset : int;
    var ~tmp___11~629.base : int, ~tmp___11~629.offset : int;
    var ~ldvarg23~629.base : int, ~ldvarg23~629.offset : int;
    var ~tmp___12~629.base : int, ~tmp___12~629.offset : int;
    var ~ldvarg12~629.base : int, ~ldvarg12~629.offset : int;
    var ~tmp___13~629.base : int, ~tmp___13~629.offset : int;
    var ~ldvarg13~629.base : int, ~ldvarg13~629.offset : int;
    var ~tmp___14~629.base : int, ~tmp___14~629.offset : int;
    var ~ldvarg29~629.base : int, ~ldvarg29~629.offset : int;
    var ~tmp___15~629.base : int, ~tmp___15~629.offset : int;
    var ~ldvarg10~629.base : int, ~ldvarg10~629.offset : int;
    var ~tmp___16~629.base : int, ~tmp___16~629.offset : int;
    var ~#ldvarg9~629.base : int, ~#ldvarg9~629.offset : int;
    var ~ldvarg24~629.base : int, ~ldvarg24~629.offset : int;
    var ~tmp___17~629.base : int, ~tmp___17~629.offset : int;
    var ~ldvarg27~629.base : int, ~ldvarg27~629.offset : int;
    var ~tmp___18~629.base : int, ~tmp___18~629.offset : int;
    var ~ldvarg26~629.base : int, ~ldvarg26~629.offset : int;
    var ~tmp___19~629.base : int, ~tmp___19~629.offset : int;
    var ~ldvarg35~629.base : int, ~ldvarg35~629.offset : int;
    var ~tmp___20~629.base : int, ~tmp___20~629.offset : int;
    var ~ldvarg33~629.base : int, ~ldvarg33~629.offset : int;
    var ~tmp___21~629.base : int, ~tmp___21~629.offset : int;
    var ~#ldvarg30~629.base : int, ~#ldvarg30~629.offset : int;
    var ~ldvarg15~629.base : int, ~ldvarg15~629.offset : int;
    var ~tmp___22~629.base : int, ~tmp___22~629.offset : int;
    var ~ldvarg16~629.base : int, ~ldvarg16~629.offset : int;
    var ~tmp___23~629.base : int, ~tmp___23~629.offset : int;
    var ~ldvarg21~629.base : int, ~ldvarg21~629.offset : int;
    var ~tmp___24~629.base : int, ~tmp___24~629.offset : int;
    var ~ldvarg25~629.base : int, ~ldvarg25~629.offset : int;
    var ~tmp___25~629.base : int, ~tmp___25~629.offset : int;
    var ~ldvarg14~629.base : int, ~ldvarg14~629.offset : int;
    var ~tmp___26~629.base : int, ~tmp___26~629.offset : int;
    var ~ldvarg17~629.base : int, ~ldvarg17~629.offset : int;
    var ~tmp___27~629.base : int, ~tmp___27~629.offset : int;
    var ~ldvarg22~629.base : int, ~ldvarg22~629.offset : int;
    var ~tmp___28~629.base : int, ~tmp___28~629.offset : int;
    var ~ldvarg19~629.base : int, ~ldvarg19~629.offset : int;
    var ~tmp___29~629.base : int, ~tmp___29~629.offset : int;
    var ~ldvarg34~629.base : int, ~ldvarg34~629.offset : int;
    var ~tmp___30~629.base : int, ~tmp___30~629.offset : int;
    var ~ldvarg28~629.base : int, ~ldvarg28~629.offset : int;
    var ~tmp___31~629.base : int, ~tmp___31~629.offset : int;
    var ~ldvarg36~629.base : int, ~ldvarg36~629.offset : int;
    var ~tmp___32~629.base : int, ~tmp___32~629.offset : int;
    var ~ldvarg37~629.base : int, ~ldvarg37~629.offset : int;
    var ~tmp___33~629.base : int, ~tmp___33~629.offset : int;
    var ~tmp___34~629 : int;
    var ~tmp___35~629 : int;
    var ~tmp___36~629 : int;
    var ~tmp___37~629 : int;
    var ~tmp___38~629 : int;
    var ~tmp___39~629 : int;
    var ~tmp___40~629 : int;
    var ~tmp___41~629 : int;

  loc11:
    havoc ~ldvarg1~629;
    havoc ~tmp~629;
    havoc ~ldvarg4~629;
    havoc ~tmp___0~629;
    havoc ~ldvarg3~629.base, ~ldvarg3~629.offset;
    havoc ~tmp___1~629.base, ~tmp___1~629.offset;
    havoc ~ldvarg0~629;
    havoc ~tmp___2~629;
    havoc ~ldvarg5~629.base, ~ldvarg5~629.offset;
    havoc ~tmp___3~629.base, ~tmp___3~629.offset;
    havoc ~ldvarg2~629.base, ~ldvarg2~629.offset;
    havoc ~tmp___4~629.base, ~tmp___4~629.offset;
    havoc ~ldvarg6~629.base, ~ldvarg6~629.offset;
    havoc ~tmp___5~629.base, ~tmp___5~629.offset;
    havoc ~ldvarg8~629.base, ~ldvarg8~629.offset;
    havoc ~tmp___6~629.base, ~tmp___6~629.offset;
    call ~#ldvarg7~629.base, ~#ldvarg7~629.offset := #Ultimate.alloc(4);
    havoc ~ldvarg18~629.base, ~ldvarg18~629.offset;
    havoc ~tmp___7~629.base, ~tmp___7~629.offset;
    havoc ~ldvarg11~629;
    havoc ~tmp___8~629;
    havoc ~ldvarg32~629.base, ~ldvarg32~629.offset;
    havoc ~tmp___9~629.base, ~tmp___9~629.offset;
    havoc ~ldvarg31~629.base, ~ldvarg31~629.offset;
    havoc ~tmp___10~629.base, ~tmp___10~629.offset;
    havoc ~ldvarg20~629.base, ~ldvarg20~629.offset;
    havoc ~tmp___11~629.base, ~tmp___11~629.offset;
    havoc ~ldvarg23~629.base, ~ldvarg23~629.offset;
    havoc ~tmp___12~629.base, ~tmp___12~629.offset;
    havoc ~ldvarg12~629.base, ~ldvarg12~629.offset;
    havoc ~tmp___13~629.base, ~tmp___13~629.offset;
    havoc ~ldvarg13~629.base, ~ldvarg13~629.offset;
    havoc ~tmp___14~629.base, ~tmp___14~629.offset;
    havoc ~ldvarg29~629.base, ~ldvarg29~629.offset;
    havoc ~tmp___15~629.base, ~tmp___15~629.offset;
    havoc ~ldvarg10~629.base, ~ldvarg10~629.offset;
    havoc ~tmp___16~629.base, ~tmp___16~629.offset;
    call ~#ldvarg9~629.base, ~#ldvarg9~629.offset := #Ultimate.alloc(4);
    havoc ~ldvarg24~629.base, ~ldvarg24~629.offset;
    havoc ~tmp___17~629.base, ~tmp___17~629.offset;
    havoc ~ldvarg27~629.base, ~ldvarg27~629.offset;
    havoc ~tmp___18~629.base, ~tmp___18~629.offset;
    havoc ~ldvarg26~629.base, ~ldvarg26~629.offset;
    havoc ~tmp___19~629.base, ~tmp___19~629.offset;
    havoc ~ldvarg35~629.base, ~ldvarg35~629.offset;
    havoc ~tmp___20~629.base, ~tmp___20~629.offset;
    havoc ~ldvarg33~629.base, ~ldvarg33~629.offset;
    havoc ~tmp___21~629.base, ~tmp___21~629.offset;
    call ~#ldvarg30~629.base, ~#ldvarg30~629.offset := #Ultimate.alloc(4);
    havoc ~ldvarg15~629.base, ~ldvarg15~629.offset;
    havoc ~tmp___22~629.base, ~tmp___22~629.offset;
    havoc ~ldvarg16~629.base, ~ldvarg16~629.offset;
    havoc ~tmp___23~629.base, ~tmp___23~629.offset;
    havoc ~ldvarg21~629.base, ~ldvarg21~629.offset;
    havoc ~tmp___24~629.base, ~tmp___24~629.offset;
    havoc ~ldvarg25~629.base, ~ldvarg25~629.offset;
    havoc ~tmp___25~629.base, ~tmp___25~629.offset;
    havoc ~ldvarg14~629.base, ~ldvarg14~629.offset;
    havoc ~tmp___26~629.base, ~tmp___26~629.offset;
    havoc ~ldvarg17~629.base, ~ldvarg17~629.offset;
    havoc ~tmp___27~629.base, ~tmp___27~629.offset;
    havoc ~ldvarg22~629.base, ~ldvarg22~629.offset;
    havoc ~tmp___28~629.base, ~tmp___28~629.offset;
    havoc ~ldvarg19~629.base, ~ldvarg19~629.offset;
    havoc ~tmp___29~629.base, ~tmp___29~629.offset;
    havoc ~ldvarg34~629.base, ~ldvarg34~629.offset;
    havoc ~tmp___30~629.base, ~tmp___30~629.offset;
    havoc ~ldvarg28~629.base, ~ldvarg28~629.offset;
    havoc ~tmp___31~629.base, ~tmp___31~629.offset;
    havoc ~ldvarg36~629.base, ~ldvarg36~629.offset;
    havoc ~tmp___32~629.base, ~tmp___32~629.offset;
    havoc ~ldvarg37~629.base, ~ldvarg37~629.offset;
    havoc ~tmp___33~629.base, ~tmp___33~629.offset;
    havoc ~tmp___34~629;
    havoc ~tmp___35~629;
    havoc ~tmp___36~629;
    havoc ~tmp___37~629;
    havoc ~tmp___38~629;
    havoc ~tmp___39~629;
    havoc ~tmp___40~629;
    havoc ~tmp___41~629;
    ~tmp~629 := #t~nondet1548;
    havoc #t~nondet1548;
    ~ldvarg1~629 := ~tmp~629;
    assume -2147483648 <= #t~nondet1549 && #t~nondet1549 <= 2147483647;
    ~tmp___0~629 := #t~nondet1549;
    havoc #t~nondet1549;
    ~ldvarg4~629 := ~tmp___0~629;
    call #t~ret1550.base, #t~ret1550.offset := ldv_zalloc(8);
    ~tmp___1~629.base, ~tmp___1~629.offset := #t~ret1550.base, #t~ret1550.offset;
    havoc #t~ret1550.base, #t~ret1550.offset;
    ~ldvarg3~629.base, ~ldvarg3~629.offset := ~tmp___1~629.base, ~tmp___1~629.offset;
    ~tmp___2~629 := #t~nondet1551;
    havoc #t~nondet1551;
    ~ldvarg0~629 := ~tmp___2~629;
    call #t~ret1552.base, #t~ret1552.offset := ldv_zalloc(1);
    ~tmp___3~629.base, ~tmp___3~629.offset := #t~ret1552.base, #t~ret1552.offset;
    havoc #t~ret1552.base, #t~ret1552.offset;
    ~ldvarg5~629.base, ~ldvarg5~629.offset := ~tmp___3~629.base, ~tmp___3~629.offset;
    call #t~ret1553.base, #t~ret1553.offset := ldv_zalloc(16);
    ~tmp___4~629.base, ~tmp___4~629.offset := #t~ret1553.base, #t~ret1553.offset;
    havoc #t~ret1553.base, #t~ret1553.offset;
    ~ldvarg2~629.base, ~ldvarg2~629.offset := ~tmp___4~629.base, ~tmp___4~629.offset;
    call #t~ret1554.base, #t~ret1554.offset := ldv_zalloc(184);
    ~tmp___5~629.base, ~tmp___5~629.offset := #t~ret1554.base, #t~ret1554.offset;
    havoc #t~ret1554.base, #t~ret1554.offset;
    ~ldvarg6~629.base, ~ldvarg6~629.offset := ~tmp___5~629.base, ~tmp___5~629.offset;
    call #t~ret1555.base, #t~ret1555.offset := ldv_zalloc(32);
    ~tmp___6~629.base, ~tmp___6~629.offset := #t~ret1555.base, #t~ret1555.offset;
    havoc #t~ret1555.base, #t~ret1555.offset;
    ~ldvarg8~629.base, ~ldvarg8~629.offset := ~tmp___6~629.base, ~tmp___6~629.offset;
    call #t~ret1556.base, #t~ret1556.offset := ldv_zalloc(1);
    ~tmp___7~629.base, ~tmp___7~629.offset := #t~ret1556.base, #t~ret1556.offset;
    havoc #t~ret1556.base, #t~ret1556.offset;
    ~ldvarg18~629.base, ~ldvarg18~629.offset := ~tmp___7~629.base, ~tmp___7~629.offset;
    ~tmp___8~629 := #t~nondet1557;
    havoc #t~nondet1557;
    ~ldvarg11~629 := ~tmp___8~629;
    call #t~ret1558.base, #t~ret1558.offset := ldv_zalloc(1);
    ~tmp___9~629.base, ~tmp___9~629.offset := #t~ret1558.base, #t~ret1558.offset;
    havoc #t~ret1558.base, #t~ret1558.offset;
    ~ldvarg32~629.base, ~ldvarg32~629.offset := ~tmp___9~629.base, ~tmp___9~629.offset;
    call #t~ret1559.base, #t~ret1559.offset := ldv_zalloc(1);
    ~tmp___10~629.base, ~tmp___10~629.offset := #t~ret1559.base, #t~ret1559.offset;
    havoc #t~ret1559.base, #t~ret1559.offset;
    ~ldvarg31~629.base, ~ldvarg31~629.offset := ~tmp___10~629.base, ~tmp___10~629.offset;
    call #t~ret1560.base, #t~ret1560.offset := ldv_zalloc(1);
    ~tmp___11~629.base, ~tmp___11~629.offset := #t~ret1560.base, #t~ret1560.offset;
    havoc #t~ret1560.base, #t~ret1560.offset;
    ~ldvarg20~629.base, ~ldvarg20~629.offset := ~tmp___11~629.base, ~tmp___11~629.offset;
    call #t~ret1561.base, #t~ret1561.offset := ldv_zalloc(1);
    ~tmp___12~629.base, ~tmp___12~629.offset := #t~ret1561.base, #t~ret1561.offset;
    havoc #t~ret1561.base, #t~ret1561.offset;
    ~ldvarg23~629.base, ~ldvarg23~629.offset := ~tmp___12~629.base, ~tmp___12~629.offset;
    call #t~ret1562.base, #t~ret1562.offset := ldv_zalloc(1);
    ~tmp___13~629.base, ~tmp___13~629.offset := #t~ret1562.base, #t~ret1562.offset;
    havoc #t~ret1562.base, #t~ret1562.offset;
    ~ldvarg12~629.base, ~ldvarg12~629.offset := ~tmp___13~629.base, ~tmp___13~629.offset;
    call #t~ret1563.base, #t~ret1563.offset := ldv_zalloc(80);
    ~tmp___14~629.base, ~tmp___14~629.offset := #t~ret1563.base, #t~ret1563.offset;
    havoc #t~ret1563.base, #t~ret1563.offset;
    ~ldvarg13~629.base, ~ldvarg13~629.offset := ~tmp___14~629.base, ~tmp___14~629.offset;
    call #t~ret1564.base, #t~ret1564.offset := ldv_zalloc(1);
    ~tmp___15~629.base, ~tmp___15~629.offset := #t~ret1564.base, #t~ret1564.offset;
    havoc #t~ret1564.base, #t~ret1564.offset;
    ~ldvarg29~629.base, ~ldvarg29~629.offset := ~tmp___15~629.base, ~tmp___15~629.offset;
    call #t~ret1565.base, #t~ret1565.offset := ldv_zalloc(1);
    ~tmp___16~629.base, ~tmp___16~629.offset := #t~ret1565.base, #t~ret1565.offset;
    havoc #t~ret1565.base, #t~ret1565.offset;
    ~ldvarg10~629.base, ~ldvarg10~629.offset := ~tmp___16~629.base, ~tmp___16~629.offset;
    call #t~ret1566.base, #t~ret1566.offset := ldv_zalloc(1);
    ~tmp___17~629.base, ~tmp___17~629.offset := #t~ret1566.base, #t~ret1566.offset;
    havoc #t~ret1566.base, #t~ret1566.offset;
    ~ldvarg24~629.base, ~ldvarg24~629.offset := ~tmp___17~629.base, ~tmp___17~629.offset;
    call #t~ret1567.base, #t~ret1567.offset := ldv_zalloc(1);
    ~tmp___18~629.base, ~tmp___18~629.offset := #t~ret1567.base, #t~ret1567.offset;
    havoc #t~ret1567.base, #t~ret1567.offset;
    ~ldvarg27~629.base, ~ldvarg27~629.offset := ~tmp___18~629.base, ~tmp___18~629.offset;
    call #t~ret1568.base, #t~ret1568.offset := ldv_zalloc(64);
    ~tmp___19~629.base, ~tmp___19~629.offset := #t~ret1568.base, #t~ret1568.offset;
    havoc #t~ret1568.base, #t~ret1568.offset;
    ~ldvarg26~629.base, ~ldvarg26~629.offset := ~tmp___19~629.base, ~tmp___19~629.offset;
    call #t~ret1569.base, #t~ret1569.offset := ldv_zalloc(1);
    ~tmp___20~629.base, ~tmp___20~629.offset := #t~ret1569.base, #t~ret1569.offset;
    havoc #t~ret1569.base, #t~ret1569.offset;
    ~ldvarg35~629.base, ~ldvarg35~629.offset := ~tmp___20~629.base, ~tmp___20~629.offset;
    call #t~ret1570.base, #t~ret1570.offset := ldv_zalloc(1);
    ~tmp___21~629.base, ~tmp___21~629.offset := #t~ret1570.base, #t~ret1570.offset;
    havoc #t~ret1570.base, #t~ret1570.offset;
    ~ldvarg33~629.base, ~ldvarg33~629.offset := ~tmp___21~629.base, ~tmp___21~629.offset;
    call #t~ret1571.base, #t~ret1571.offset := ldv_zalloc(204);
    ~tmp___22~629.base, ~tmp___22~629.offset := #t~ret1571.base, #t~ret1571.offset;
    havoc #t~ret1571.base, #t~ret1571.offset;
    ~ldvarg15~629.base, ~ldvarg15~629.offset := ~tmp___22~629.base, ~tmp___22~629.offset;
    call #t~ret1572.base, #t~ret1572.offset := ldv_zalloc(1);
    ~tmp___23~629.base, ~tmp___23~629.offset := #t~ret1572.base, #t~ret1572.offset;
    havoc #t~ret1572.base, #t~ret1572.offset;
    ~ldvarg16~629.base, ~ldvarg16~629.offset := ~tmp___23~629.base, ~tmp___23~629.offset;
    call #t~ret1573.base, #t~ret1573.offset := ldv_zalloc(1);
    ~tmp___24~629.base, ~tmp___24~629.offset := #t~ret1573.base, #t~ret1573.offset;
    havoc #t~ret1573.base, #t~ret1573.offset;
    ~ldvarg21~629.base, ~ldvarg21~629.offset := ~tmp___24~629.base, ~tmp___24~629.offset;
    call #t~ret1574.base, #t~ret1574.offset := ldv_zalloc(1);
    ~tmp___25~629.base, ~tmp___25~629.offset := #t~ret1574.base, #t~ret1574.offset;
    havoc #t~ret1574.base, #t~ret1574.offset;
    ~ldvarg25~629.base, ~ldvarg25~629.offset := ~tmp___25~629.base, ~tmp___25~629.offset;
    call #t~ret1575.base, #t~ret1575.offset := ldv_zalloc(1);
    ~tmp___26~629.base, ~tmp___26~629.offset := #t~ret1575.base, #t~ret1575.offset;
    havoc #t~ret1575.base, #t~ret1575.offset;
    ~ldvarg14~629.base, ~ldvarg14~629.offset := ~tmp___26~629.base, ~tmp___26~629.offset;
    call #t~ret1576.base, #t~ret1576.offset := ldv_zalloc(104);
    ~tmp___27~629.base, ~tmp___27~629.offset := #t~ret1576.base, #t~ret1576.offset;
    havoc #t~ret1576.base, #t~ret1576.offset;
    ~ldvarg17~629.base, ~ldvarg17~629.offset := ~tmp___27~629.base, ~tmp___27~629.offset;
    call #t~ret1577.base, #t~ret1577.offset := ldv_zalloc(4);
    ~tmp___28~629.base, ~tmp___28~629.offset := #t~ret1577.base, #t~ret1577.offset;
    havoc #t~ret1577.base, #t~ret1577.offset;
    ~ldvarg22~629.base, ~ldvarg22~629.offset := ~tmp___28~629.base, ~tmp___28~629.offset;
    call #t~ret1578.base, #t~ret1578.offset := ldv_zalloc(44);
    ~tmp___29~629.base, ~tmp___29~629.offset := #t~ret1578.base, #t~ret1578.offset;
    havoc #t~ret1578.base, #t~ret1578.offset;
    ~ldvarg19~629.base, ~ldvarg19~629.offset := ~tmp___29~629.base, ~tmp___29~629.offset;
    call #t~ret1579.base, #t~ret1579.offset := ldv_zalloc(20);
    ~tmp___30~629.base, ~tmp___30~629.offset := #t~ret1579.base, #t~ret1579.offset;
    havoc #t~ret1579.base, #t~ret1579.offset;
    ~ldvarg34~629.base, ~ldvarg34~629.offset := ~tmp___30~629.base, ~tmp___30~629.offset;
    call #t~ret1580.base, #t~ret1580.offset := ldv_zalloc(1);
    ~tmp___31~629.base, ~tmp___31~629.offset := #t~ret1580.base, #t~ret1580.offset;
    havoc #t~ret1580.base, #t~ret1580.offset;
    ~ldvarg28~629.base, ~ldvarg28~629.offset := ~tmp___31~629.base, ~tmp___31~629.offset;
    call #t~ret1581.base, #t~ret1581.offset := ldv_zalloc(1800);
    ~tmp___32~629.base, ~tmp___32~629.offset := #t~ret1581.base, #t~ret1581.offset;
    havoc #t~ret1581.base, #t~ret1581.offset;
    ~ldvarg36~629.base, ~ldvarg36~629.offset := ~tmp___32~629.base, ~tmp___32~629.offset;
    call #t~ret1582.base, #t~ret1582.offset := ldv_zalloc(144);
    ~tmp___33~629.base, ~tmp___33~629.offset := #t~ret1582.base, #t~ret1582.offset;
    havoc #t~ret1582.base, #t~ret1582.offset;
    ~ldvarg37~629.base, ~ldvarg37~629.offset := ~tmp___33~629.base, ~tmp___33~629.offset;
    call ldv_initialize();
    call #t~memset1583.base, #t~memset1583.offset := #Ultimate.C_memset(~#ldvarg7~629.base, ~#ldvarg7~629.offset, 0, 4);
    havoc #t~memset1583.base, #t~memset1583.offset;
    call #t~memset1584.base, #t~memset1584.offset := #Ultimate.C_memset(~#ldvarg9~629.base, ~#ldvarg9~629.offset, 0, 4);
    havoc #t~memset1584.base, #t~memset1584.offset;
    call #t~memset1585.base, #t~memset1585.offset := #Ultimate.C_memset(~#ldvarg30~629.base, ~#ldvarg30~629.offset, 0, 4);
    havoc #t~memset1585.base, #t~memset1585.offset;
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_4 := 0;
    ~ldv_state_variable_1 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_3 := 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_state_variable_5 := 0;
    assume -2147483648 <= #t~nondet1586 && #t~nondet1586 <= 2147483647;
    ~tmp___34~629 := #t~nondet1586;
    havoc #t~nondet1586;
    #t~switch1587 := ~tmp___34~629 == 0;
    assume !#t~switch1587;
    #t~switch1587 := #t~switch1587 || ~tmp___34~629 == 1;
    assume !#t~switch1587;
    #t~switch1587 := #t~switch1587 || ~tmp___34~629 == 2;
    assume !#t~switch1587;
    #t~switch1587 := #t~switch1587 || ~tmp___34~629 == 3;
    assume #t~switch1587;
    assume ~ldv_state_variable_0 != 0;
    assume -2147483648 <= #t~nondet1608 && #t~nondet1608 <= 2147483647;
    ~tmp___38~629 := #t~nondet1608;
    havoc #t~nondet1608;
    #t~switch1609 := ~tmp___38~629 == 0;
    assume !#t~switch1609;
    #t~switch1609 := #t~switch1609 || ~tmp___38~629 == 1;
    assume #t~switch1609;
    assume ~ldv_state_variable_0 == 1;
    call #t~ret1610 := stk_camera_driver_init();
    assume -2147483648 <= #t~ret1610 && #t~ret1610 <= 2147483647;
    ~ldv_retval_5 := #t~ret1610;
    havoc #t~ret1610;
    assume ~ldv_retval_5 != 0;
    ~ldv_state_variable_0 := 3;
    call ldv_check_final_state();
    return;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_6, ~ldv_state_variable_4, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_3, ~ldv_state_variable_2, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_5, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~usb_intfdata.base, ~usb_intfdata.offset, ~v4l_stk_ioctl_ops_group3.base, ~v4l_stk_ioctl_ops_group3.offset, ~v4l_stk_ioctl_ops_group0.base, ~v4l_stk_ioctl_ops_group0.offset, ~v4l_stk_ioctl_ops_group1.base, ~v4l_stk_ioctl_ops_group1.offset, ~v4l_stk_ioctl_ops_group4.base, ~v4l_stk_ioctl_ops_group4.offset, ~v4l_stk_ioctl_ops_group2.base, ~v4l_stk_ioctl_ops_group2.offset, ~stk_v4l_vm_ops_group0.base, ~stk_v4l_vm_ops_group0.offset, ~v4l_stk_fops_group0.base, ~v4l_stk_fops_group0.offset, ~INTERF_STATE, ~stk_camera_driver_group1.base, ~stk_camera_driver_group1.offset, ~usb_counter, ~usb_urb.base, ~usb_urb.offset, ~completeFnIntCounter, ~completeFnBulkCounter;

procedure msleep(#in~1647 : int) returns ();
modifies ;

procedure autoremove_wake_function(#in~48.base : int, #in~48.offset : int, #in~49 : int, #in~50 : int, #in~51.base : int, #in~51.offset : int) returns (#res : int);
modifies ;

procedure usb_set_interface(#in~100.base : int, #in~100.offset : int, #in~101 : int, #in~102 : int) returns (#res : int);
modifies ;

procedure remap_vmalloc_range(#in~62.base : int, #in~62.offset : int, #in~63.base : int, #in~63.offset : int, #in~64 : int) returns (#res : int);
modifies ;

procedure mutex_lock_interruptible_nested(#in~57.base : int, #in~57.offset : int, #in~58 : int) returns (#res : int);
modifies ;

procedure ldv_reset_resume_1() returns (#res : int);
modifies ;

procedure mutex_unlock(#in~59.base : int, #in~59.offset : int) returns ();
modifies ;

procedure v4l2_device_unregister(#in~148.base : int, #in~148.offset : int) returns ();
modifies ;

procedure __VERIFIER_nondet_uint() returns (#res : int);
modifies ;

procedure __kmalloc(#in~105 : int, #in~106 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure __list_del_entry(#in~24.base : int, #in~24.offset : int) returns ();
modifies ;

procedure v4l2_ctrl_handler_free(#in~153.base : int, #in~153.offset : int) returns ();
modifies ;

procedure v4l2_ctrl_new_std(#in~154.base : int, #in~154.offset : int, #in~155.base : int, #in~155.offset : int, #in~156 : int, #in~157 : int, #in~158 : int, #in~159 : int, #in~160 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure v4l2_ctrl_poll(#in~165.base : int, #in~165.offset : int, #in~166.base : int, #in~166.offset : int) returns (#res : int);
modifies ;

procedure video_devdata(#in~134.base : int, #in~134.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure dev_set_drvdata(#in~74.base : int, #in~74.offset : int, #in~75.base : int, #in~75.offset : int) returns (#res : int);
modifies ;

procedure might_fault() returns ();
modifies ;

procedure printk(#in~10.base : int, #in~10.offset : int) returns (#res : int);
modifies ;

procedure calloc(#in~nmemb : int, #in~size : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure dev_err(#in~76.base : int, #in~76.offset : int, #in~77.base : int, #in~77.offset : int) returns (#res : int);
modifies ;

procedure __mutex_init(#in~52.base : int, #in~52.offset : int, #in~53.base : int, #in~53.offset : int, #in~54.base : int, #in~54.offset : int) returns ();
modifies ;

procedure _raw_spin_lock_irqsave(#in~33.base : int, #in~33.offset : int) returns (#res : int);
modifies ;

procedure mutex_lock_nested(#in~55.base : int, #in~55.offset : int, #in~56 : int) returns ();
modifies ;

procedure __VERIFIER_nondet_size_t() returns (#res : int);
modifies ;

procedure schedule() returns ();
modifies ;

procedure ldv_probe_2() returns (#res : int);
modifies ;

procedure __printk_ratelimit(#in~11.base : int, #in~11.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure dev_get_drvdata(#in~73.base : int, #in~73.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __raw_spin_lock_init(#in~30.base : int, #in~30.offset : int, #in~31.base : int, #in~31.offset : int, #in~32.base : int, #in~32.offset : int) returns ();
modifies ;

procedure video_ioctl2(#in~139.base : int, #in~139.offset : int, #in~140 : int, #in~141 : int) returns (#res : int);
modifies ;

procedure strcpy(#in~3.base : int, #in~3.offset : int, #in~4.base : int, #in~4.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure ldv_initialize() returns ();
modifies ;

procedure usb_deregister(#in~89.base : int, #in~89.offset : int) returns ();
modifies ;

procedure __VERIFIER_nondet_pointer() returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_kill_urb(#in~90.base : int, #in~90.offset : int) returns ();
modifies ;

procedure v4l2_device_register(#in~146.base : int, #in~146.offset : int, #in~147.base : int, #in~147.offset : int) returns (#res : int);
modifies ;

procedure kfree(#in~104.base : int, #in~104.offset : int) returns ();
modifies ;

procedure vfree(#in~61.base : int, #in~61.offset : int) returns ();
modifies ;

procedure v4l2_fh_open(#in~144.base : int, #in~144.offset : int) returns (#res : int);
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];

procedure __VERIFIER_error() returns ();
modifies ;

procedure v4l2_ctrl_subscribe_event(#in~163.base : int, #in~163.offset : int, #in~164.base : int, #in~164.offset : int) returns (#res : int);
modifies ;

procedure video_unregister_device(#in~131.base : int, #in~131.offset : int) returns ();
modifies ;

procedure __video_register_device(#in~123.base : int, #in~123.offset : int, #in~124 : int, #in~125 : int, #in~126 : int, #in~127.base : int, #in~127.offset : int) returns (#res : int);
modifies ;

procedure __list_add(#in~20.base : int, #in~20.offset : int, #in~21.base : int, #in~21.offset : int, #in~22.base : int, #in~22.offset : int) returns ();
modifies ;

procedure __VERIFIER_assume(#in~expression : int) returns ();
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];

procedure __bad_percpu_size() returns ();
modifies ;

procedure dmi_check_system(#in~115.base : int, #in~115.offset : int) returns (#res : int);
modifies ;

procedure _copy_to_user(#in~65.base : int, #in~65.offset : int, #in~66.base : int, #in~66.offset : int, #in~67 : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_irqrestore(#in~34.base : int, #in~34.offset : int, #in~35 : int) returns ();
modifies ;

procedure usb_control_msg(#in~91.base : int, #in~91.offset : int, #in~92 : int, #in~93 : int, #in~94 : int, #in~95 : int, #in~96 : int, #in~97.base : int, #in~97.offset : int, #in~98 : int, #in~99 : int) returns (#res : int);
modifies ;

procedure __wake_up(#in~39.base : int, #in~39.offset : int, #in~40 : int, #in~41 : int, #in~42.base : int, #in~42.offset : int) returns ();
modifies ;

procedure vmalloc_user(#in~60 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_register_driver(#in~86.base : int, #in~86.offset : int, #in~87.base : int, #in~87.offset : int, #in~88.base : int, #in~88.offset : int) returns (#res : int);
modifies ;

procedure v4l2_ctrl_log_status(#in~161.base : int, #in~161.offset : int, #in~162.base : int, #in~162.offset : int) returns (#res : int);
modifies ;

procedure memset(#in~0.base : int, #in~0.offset : int, #in~1 : int, #in~2 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __VERIFIER_nondet_ulong() returns (#res : int);
modifies ;

procedure prepare_to_wait(#in~43.base : int, #in~43.offset : int, #in~44.base : int, #in~44.offset : int, #in~45 : int) returns ();
modifies ;

procedure usb_get_intf(#in~82.base : int, #in~82.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure v4l2_fh_release(#in~145.base : int, #in~145.offset : int) returns (#res : int);
modifies ;

procedure v4l2_get_timestamp(#in~138.base : int, #in~138.offset : int) returns ();
modifies ;

procedure snprintf(#in~12.base : int, #in~12.offset : int, #in~13 : int, #in~14.base : int, #in~14.offset : int) returns (#res : int);
modifies ;

procedure __init_waitqueue_head(#in~36.base : int, #in~36.offset : int, #in~37.base : int, #in~37.offset : int, #in~38.base : int, #in~38.offset : int) returns ();
modifies ;

procedure v4l2_event_unsubscribe(#in~142.base : int, #in~142.offset : int, #in~143.base : int, #in~143.offset : int) returns (#res : int);
modifies ;

procedure v4l2_ctrl_handler_init_class(#in~149.base : int, #in~149.offset : int, #in~150 : int, #in~151.base : int, #in~151.offset : int, #in~152.base : int, #in~152.offset : int) returns (#res : int);
modifies ;

procedure finish_wait(#in~46.base : int, #in~46.offset : int, #in~47.base : int, #in~47.offset : int) returns ();
modifies ;


type STRUCT~task_struct;
type STRUCT~optimistic_spin_queue;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~xol_area;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~file;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~kernfs_open_node;
type STRUCT~kernfs_iattrs;
type STRUCT~seq_file;
type STRUCT~sock;
type STRUCT~kmem_cache_node;
type STRUCT~mem_cgroup;
type STRUCT~pinctrl;
type STRUCT~pinctrl_state;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~acpi_device;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~cma;
type STRUCT~iommu_group;
type STRUCT~nsproxy;
type STRUCT~sec_path;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~tracepoint;
type STRUCT~ftrace_event_call;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~swap_info_struct;
type STRUCT~inode;
type STRUCT~backing_dev_info;
type STRUCT~prot_inuse;
type STRUCT~proc_dir_entry;
type STRUCT~ipv4_devconf;
type STRUCT~fib_rules_ops;
type STRUCT~fib_table;
type STRUCT~inet_peer_base;
type STRUCT~tcpm_hash_bucket;
type STRUCT~xt_table;
type STRUCT~dst_entry;
type STRUCT~neighbour;
type STRUCT~ipv6_devconf;
type STRUCT~rt6_info;
type STRUCT~rt6_statistics;
type STRUCT~fib6_table;
type STRUCT~sctp_mib;
type STRUCT~nf_logger;
type STRUCT~ebt_table;
type STRUCT~ip_conntrack_stat;
type STRUCT~nf_ct_event_notifier;
type STRUCT~nf_exp_event_notifier;
type STRUCT~nft_af_info;
type STRUCT~user_namespace;
type STRUCT~net_generic;
type STRUCT~netns_ipvs;
type STRUCT~Qdisc;
type STRUCT~neigh_parms;
type STRUCT~netpoll_info;
type STRUCT~pcpu_lstats;
type STRUCT~pcpu_dstats;
type STRUCT~pcpu_vstats;
type STRUCT~iw_handler_def;
type STRUCT~iw_public_data;
type STRUCT~forwarding_accel_ops;
type STRUCT~vlan_info;
type STRUCT~tipc_bearer;
type STRUCT~in_device;
type STRUCT~dn_dev;
type STRUCT~inet6_dev;
type STRUCT~wireless_dev;
type STRUCT~cpu_rmap;
type STRUCT~garp_port;
type STRUCT~mrp_port;
type STRUCT~rtnl_link_ops;
type STRUCT~mfd_cell;
type ~__u8 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__u64 = int;
type ~s8 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~gfp_t = int;
type ~pteval_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~__kernel_sa_family_t = int;
type ~sk_buff_data_t = int;
type ~kernel_ulong_t = int;
type ~ldv_func_ret_type = int;
type ~ldv_func_ret_type___0 = int;
type ~ldv_func_ret_type___1 = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__be16 = ~__u16;
type ~__be32 = ~__u32;
type ~__wsum = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~uint8_t = ~__u8;
type ~uint64_t = ~__u64;
type ~dma_addr_t = ~u64;
type ~phys_addr_t = ~u64;
type ~resource_size_t = ~phys_addr_t;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~sa_family_t = ~__kernel_sa_family_t;
type ~dma_cookie_t = ~s32;
type ~netdev_features_t = ~u64;
type ~irqreturn_t = int;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~netdev_tx_t = int;
type ~rx_handler_result_t = int;
type ~phy_interface_t = int;
type ~phandle = ~u32;
const #funAddr~sh_eth_set_duplex.base : int;
const #funAddr~sh_eth_set_duplex.offset : int;
const #funAddr~sh_eth_set_rate_r8a777x.base : int;
const #funAddr~sh_eth_set_rate_r8a777x.offset : int;
const #funAddr~sh_eth_set_rate_sh7724.base : int;
const #funAddr~sh_eth_set_rate_sh7724.offset : int;
const #funAddr~sh_eth_set_rate_sh7757.base : int;
const #funAddr~sh_eth_set_rate_sh7757.offset : int;
const #funAddr~sh_eth_chip_reset_giga.base : int;
const #funAddr~sh_eth_chip_reset_giga.offset : int;
const #funAddr~sh_eth_set_rate_giga.base : int;
const #funAddr~sh_eth_set_rate_giga.offset : int;
const #funAddr~sh_eth_chip_reset.base : int;
const #funAddr~sh_eth_chip_reset.offset : int;
const #funAddr~sh_eth_set_rate_gether.base : int;
const #funAddr~sh_eth_set_rate_gether.offset : int;
const #funAddr~sh_eth_chip_reset_r8a7740.base : int;
const #funAddr~sh_eth_chip_reset_r8a7740.offset : int;
const #funAddr~sh_mdc_ctrl.base : int;
const #funAddr~sh_mdc_ctrl.offset : int;
const #funAddr~sh_mmd_ctrl.base : int;
const #funAddr~sh_mmd_ctrl.offset : int;
const #funAddr~sh_set_mdio.base : int;
const #funAddr~sh_set_mdio.offset : int;
const #funAddr~sh_get_mdio.base : int;
const #funAddr~sh_get_mdio.offset : int;
const #funAddr~sh_eth_adjust_link.base : int;
const #funAddr~sh_eth_adjust_link.offset : int;
const #funAddr~sh_eth_get_settings.base : int;
const #funAddr~sh_eth_get_settings.offset : int;
const #funAddr~sh_eth_set_settings.base : int;
const #funAddr~sh_eth_set_settings.offset : int;
const #funAddr~sh_eth_get_msglevel.base : int;
const #funAddr~sh_eth_get_msglevel.offset : int;
const #funAddr~sh_eth_set_msglevel.base : int;
const #funAddr~sh_eth_set_msglevel.offset : int;
const #funAddr~sh_eth_nway_reset.base : int;
const #funAddr~sh_eth_nway_reset.offset : int;
const #funAddr~ethtool_op_get_link.base : int;
const #funAddr~ethtool_op_get_link.offset : int;
const #funAddr~sh_eth_get_ringparam.base : int;
const #funAddr~sh_eth_get_ringparam.offset : int;
const #funAddr~sh_eth_set_ringparam.base : int;
const #funAddr~sh_eth_set_ringparam.offset : int;
const #funAddr~sh_eth_get_strings.base : int;
const #funAddr~sh_eth_get_strings.offset : int;
const #funAddr~sh_eth_get_ethtool_stats.base : int;
const #funAddr~sh_eth_get_ethtool_stats.offset : int;
const #funAddr~sh_eth_get_sset_count.base : int;
const #funAddr~sh_eth_get_sset_count.offset : int;
const #funAddr~sh_eth_interrupt.base : int;
const #funAddr~sh_eth_interrupt.offset : int;
const #funAddr~sh_eth_open.base : int;
const #funAddr~sh_eth_open.offset : int;
const #funAddr~sh_eth_close.base : int;
const #funAddr~sh_eth_close.offset : int;
const #funAddr~sh_eth_start_xmit.base : int;
const #funAddr~sh_eth_start_xmit.offset : int;
const #funAddr~eth_mac_addr.base : int;
const #funAddr~eth_mac_addr.offset : int;
const #funAddr~eth_validate_addr.base : int;
const #funAddr~eth_validate_addr.offset : int;
const #funAddr~sh_eth_do_ioctl.base : int;
const #funAddr~sh_eth_do_ioctl.offset : int;
const #funAddr~eth_change_mtu.base : int;
const #funAddr~eth_change_mtu.offset : int;
const #funAddr~sh_eth_tx_timeout.base : int;
const #funAddr~sh_eth_tx_timeout.offset : int;
const #funAddr~sh_eth_get_stats.base : int;
const #funAddr~sh_eth_get_stats.offset : int;
const #funAddr~sh_eth_set_multicast_list.base : int;
const #funAddr~sh_eth_set_multicast_list.offset : int;
const #funAddr~sh_eth_vlan_rx_add_vid.base : int;
const #funAddr~sh_eth_vlan_rx_add_vid.offset : int;
const #funAddr~sh_eth_vlan_rx_kill_vid.base : int;
const #funAddr~sh_eth_vlan_rx_kill_vid.offset : int;
const #funAddr~sh_eth_poll.base : int;
const #funAddr~sh_eth_poll.offset : int;
const #funAddr~sh_eth_runtime_nop.base : int;
const #funAddr~sh_eth_runtime_nop.offset : int;
const #funAddr~sh_eth_drv_probe.base : int;
const #funAddr~sh_eth_drv_probe.offset : int;
const #funAddr~sh_eth_drv_remove.base : int;
const #funAddr~sh_eth_drv_remove.offset : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~irqreturn~IRQ_NONE : int;
const ~irqreturn~IRQ_HANDLED : int;
const ~irqreturn~IRQ_WAKE_THREAD : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_RESUME_LATENCY : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY_TOLERANCE : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS : int;
const ~pm_qos_type~PM_QOS_UNITIALIZED : int;
const ~pm_qos_type~PM_QOS_MAX : int;
const ~pm_qos_type~PM_QOS_MIN : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ON : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_OFF : int;
const ~netdev_tx~__NETDEV_TX_MIN : int;
const ~netdev_tx~NETDEV_TX_OK : int;
const ~netdev_tx~NETDEV_TX_BUSY : int;
const ~netdev_tx~NETDEV_TX_LOCKED : int;
const ~rx_handler_result~RX_HANDLER_CONSUMED : int;
const ~rx_handler_result~RX_HANDLER_ANOTHER : int;
const ~rx_handler_result~RX_HANDLER_EXACT : int;
const ~rx_handler_result~RX_HANDLER_PASS : int;
const ~skb_free_reason~SKB_REASON_CONSUMED : int;
const ~skb_free_reason~SKB_REASON_DROPPED : int;
const ~ldv_30861~PHY_INTERFACE_MODE_NA : int;
const ~ldv_30861~PHY_INTERFACE_MODE_MII : int;
const ~ldv_30861~PHY_INTERFACE_MODE_GMII : int;
const ~ldv_30861~PHY_INTERFACE_MODE_SGMII : int;
const ~ldv_30861~PHY_INTERFACE_MODE_TBI : int;
const ~ldv_30861~PHY_INTERFACE_MODE_REVMII : int;
const ~ldv_30861~PHY_INTERFACE_MODE_RMII : int;
const ~ldv_30861~PHY_INTERFACE_MODE_RGMII : int;
const ~ldv_30861~PHY_INTERFACE_MODE_RGMII_ID : int;
const ~ldv_30861~PHY_INTERFACE_MODE_RGMII_RXID : int;
const ~ldv_30861~PHY_INTERFACE_MODE_RGMII_TXID : int;
const ~ldv_30861~PHY_INTERFACE_MODE_RTBI : int;
const ~ldv_30861~PHY_INTERFACE_MODE_SMII : int;
const ~ldv_30861~PHY_INTERFACE_MODE_XGMII : int;
const ~ldv_30861~PHY_INTERFACE_MODE_MOCA : int;
const ~ldv_30861~PHY_INTERFACE_MODE_QSGMII : int;
const ~ldv_30861~PHY_INTERFACE_MODE_MAX : int;
const ~ldv_30913~MDIOBUS_ALLOCATED : int;
const ~ldv_30913~MDIOBUS_REGISTERED : int;
const ~ldv_30913~MDIOBUS_UNREGISTERED : int;
const ~ldv_30913~MDIOBUS_RELEASED : int;
const ~phy_state~PHY_DOWN : int;
const ~phy_state~PHY_STARTING : int;
const ~phy_state~PHY_READY : int;
const ~phy_state~PHY_PENDING : int;
const ~phy_state~PHY_UP : int;
const ~phy_state~PHY_AN : int;
const ~phy_state~PHY_RUNNING : int;
const ~phy_state~PHY_NOLINK : int;
const ~phy_state~PHY_FORCING : int;
const ~phy_state~PHY_CHANGELINK : int;
const ~phy_state~PHY_HALTED : int;
const ~phy_state~PHY_RESUMING : int;
axiom #funAddr~sh_eth_set_duplex.base == -1 && #funAddr~sh_eth_set_duplex.offset == 0;
axiom #funAddr~sh_eth_set_rate_r8a777x.base == -1 && #funAddr~sh_eth_set_rate_r8a777x.offset == 1;
axiom #funAddr~sh_eth_set_rate_sh7724.base == -1 && #funAddr~sh_eth_set_rate_sh7724.offset == 2;
axiom #funAddr~sh_eth_set_rate_sh7757.base == -1 && #funAddr~sh_eth_set_rate_sh7757.offset == 3;
axiom #funAddr~sh_eth_chip_reset_giga.base == -1 && #funAddr~sh_eth_chip_reset_giga.offset == 4;
axiom #funAddr~sh_eth_set_rate_giga.base == -1 && #funAddr~sh_eth_set_rate_giga.offset == 5;
axiom #funAddr~sh_eth_chip_reset.base == -1 && #funAddr~sh_eth_chip_reset.offset == 6;
axiom #funAddr~sh_eth_set_rate_gether.base == -1 && #funAddr~sh_eth_set_rate_gether.offset == 7;
axiom #funAddr~sh_eth_chip_reset_r8a7740.base == -1 && #funAddr~sh_eth_chip_reset_r8a7740.offset == 8;
axiom #funAddr~sh_mdc_ctrl.base == -1 && #funAddr~sh_mdc_ctrl.offset == 9;
axiom #funAddr~sh_mmd_ctrl.base == -1 && #funAddr~sh_mmd_ctrl.offset == 10;
axiom #funAddr~sh_set_mdio.base == -1 && #funAddr~sh_set_mdio.offset == 11;
axiom #funAddr~sh_get_mdio.base == -1 && #funAddr~sh_get_mdio.offset == 12;
axiom #funAddr~sh_eth_adjust_link.base == -1 && #funAddr~sh_eth_adjust_link.offset == 13;
axiom #funAddr~sh_eth_get_settings.base == -1 && #funAddr~sh_eth_get_settings.offset == 14;
axiom #funAddr~sh_eth_set_settings.base == -1 && #funAddr~sh_eth_set_settings.offset == 15;
axiom #funAddr~sh_eth_get_msglevel.base == -1 && #funAddr~sh_eth_get_msglevel.offset == 16;
axiom #funAddr~sh_eth_set_msglevel.base == -1 && #funAddr~sh_eth_set_msglevel.offset == 17;
axiom #funAddr~sh_eth_nway_reset.base == -1 && #funAddr~sh_eth_nway_reset.offset == 18;
axiom #funAddr~ethtool_op_get_link.base == -1 && #funAddr~ethtool_op_get_link.offset == 19;
axiom #funAddr~sh_eth_get_ringparam.base == -1 && #funAddr~sh_eth_get_ringparam.offset == 20;
axiom #funAddr~sh_eth_set_ringparam.base == -1 && #funAddr~sh_eth_set_ringparam.offset == 21;
axiom #funAddr~sh_eth_get_strings.base == -1 && #funAddr~sh_eth_get_strings.offset == 22;
axiom #funAddr~sh_eth_get_ethtool_stats.base == -1 && #funAddr~sh_eth_get_ethtool_stats.offset == 23;
axiom #funAddr~sh_eth_get_sset_count.base == -1 && #funAddr~sh_eth_get_sset_count.offset == 24;
axiom #funAddr~sh_eth_interrupt.base == -1 && #funAddr~sh_eth_interrupt.offset == 25;
axiom #funAddr~sh_eth_open.base == -1 && #funAddr~sh_eth_open.offset == 26;
axiom #funAddr~sh_eth_close.base == -1 && #funAddr~sh_eth_close.offset == 27;
axiom #funAddr~sh_eth_start_xmit.base == -1 && #funAddr~sh_eth_start_xmit.offset == 28;
axiom #funAddr~eth_mac_addr.base == -1 && #funAddr~eth_mac_addr.offset == 29;
axiom #funAddr~eth_validate_addr.base == -1 && #funAddr~eth_validate_addr.offset == 30;
axiom #funAddr~sh_eth_do_ioctl.base == -1 && #funAddr~sh_eth_do_ioctl.offset == 31;
axiom #funAddr~eth_change_mtu.base == -1 && #funAddr~eth_change_mtu.offset == 32;
axiom #funAddr~sh_eth_tx_timeout.base == -1 && #funAddr~sh_eth_tx_timeout.offset == 33;
axiom #funAddr~sh_eth_get_stats.base == -1 && #funAddr~sh_eth_get_stats.offset == 34;
axiom #funAddr~sh_eth_set_multicast_list.base == -1 && #funAddr~sh_eth_set_multicast_list.offset == 35;
axiom #funAddr~sh_eth_vlan_rx_add_vid.base == -1 && #funAddr~sh_eth_vlan_rx_add_vid.offset == 36;
axiom #funAddr~sh_eth_vlan_rx_kill_vid.base == -1 && #funAddr~sh_eth_vlan_rx_kill_vid.offset == 37;
axiom #funAddr~sh_eth_poll.base == -1 && #funAddr~sh_eth_poll.offset == 38;
axiom #funAddr~sh_eth_runtime_nop.base == -1 && #funAddr~sh_eth_runtime_nop.offset == 39;
axiom #funAddr~sh_eth_drv_probe.base == -1 && #funAddr~sh_eth_drv_probe.offset == 40;
axiom #funAddr~sh_eth_drv_remove.base == -1 && #funAddr~sh_eth_drv_remove.offset == 41;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~irqreturn~IRQ_NONE == 0;
axiom ~irqreturn~IRQ_HANDLED == 1;
axiom ~irqreturn~IRQ_WAKE_THREAD == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_RESUME_LATENCY == 1;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY_TOLERANCE == 2;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS == 3;
axiom ~pm_qos_type~PM_QOS_UNITIALIZED == 0;
axiom ~pm_qos_type~PM_QOS_MAX == 1;
axiom ~pm_qos_type~PM_QOS_MIN == 2;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE == 0;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE == 1;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ON == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_OFF == 3;
axiom ~netdev_tx~__NETDEV_TX_MIN == -2147483648;
axiom ~netdev_tx~NETDEV_TX_OK == 0;
axiom ~netdev_tx~NETDEV_TX_BUSY == 16;
axiom ~netdev_tx~NETDEV_TX_LOCKED == 32;
axiom ~rx_handler_result~RX_HANDLER_CONSUMED == 0;
axiom ~rx_handler_result~RX_HANDLER_ANOTHER == 1;
axiom ~rx_handler_result~RX_HANDLER_EXACT == 2;
axiom ~rx_handler_result~RX_HANDLER_PASS == 3;
axiom ~skb_free_reason~SKB_REASON_CONSUMED == 0;
axiom ~skb_free_reason~SKB_REASON_DROPPED == 1;
axiom ~ldv_30861~PHY_INTERFACE_MODE_NA == 0;
axiom ~ldv_30861~PHY_INTERFACE_MODE_MII == 1;
axiom ~ldv_30861~PHY_INTERFACE_MODE_GMII == 2;
axiom ~ldv_30861~PHY_INTERFACE_MODE_SGMII == 3;
axiom ~ldv_30861~PHY_INTERFACE_MODE_TBI == 4;
axiom ~ldv_30861~PHY_INTERFACE_MODE_REVMII == 5;
axiom ~ldv_30861~PHY_INTERFACE_MODE_RMII == 6;
axiom ~ldv_30861~PHY_INTERFACE_MODE_RGMII == 7;
axiom ~ldv_30861~PHY_INTERFACE_MODE_RGMII_ID == 8;
axiom ~ldv_30861~PHY_INTERFACE_MODE_RGMII_RXID == 9;
axiom ~ldv_30861~PHY_INTERFACE_MODE_RGMII_TXID == 10;
axiom ~ldv_30861~PHY_INTERFACE_MODE_RTBI == 11;
axiom ~ldv_30861~PHY_INTERFACE_MODE_SMII == 12;
axiom ~ldv_30861~PHY_INTERFACE_MODE_XGMII == 13;
axiom ~ldv_30861~PHY_INTERFACE_MODE_MOCA == 14;
axiom ~ldv_30861~PHY_INTERFACE_MODE_QSGMII == 15;
axiom ~ldv_30861~PHY_INTERFACE_MODE_MAX == 16;
axiom ~ldv_30913~MDIOBUS_ALLOCATED == 1;
axiom ~ldv_30913~MDIOBUS_REGISTERED == 2;
axiom ~ldv_30913~MDIOBUS_UNREGISTERED == 3;
axiom ~ldv_30913~MDIOBUS_RELEASED == 4;
axiom ~phy_state~PHY_DOWN == 0;
axiom ~phy_state~PHY_STARTING == 1;
axiom ~phy_state~PHY_READY == 2;
axiom ~phy_state~PHY_PENDING == 3;
axiom ~phy_state~PHY_UP == 4;
axiom ~phy_state~PHY_AN == 5;
axiom ~phy_state~PHY_RUNNING == 6;
axiom ~phy_state~PHY_NOLINK == 7;
axiom ~phy_state~PHY_FORCING == 8;
axiom ~phy_state~PHY_CHANGELINK == 9;
axiom ~phy_state~PHY_HALTED == 10;
axiom ~phy_state~PHY_RESUMING == 11;
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseXor" } ~bitwiseXor(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseComplement" } ~bitwiseComplement(in0 : int) returns (out : int);
var ~ldv_state_variable_8 : int;

var ~ldv_state_variable_15 : int;

var ~ldv_state_variable_0 : int;

var ~ldv_state_variable_5 : int;

var ~ldv_state_variable_13 : int;

var ~ldv_state_variable_12 : int;

var ~ldv_state_variable_14 : int;

var ~ldv_state_variable_9 : int;

var ~ref_cnt : int;

var ~ldv_irq_line_1_1 : int;

var ~ldv_state_variable_1 : int;

var ~ldv_state_variable_7 : int;

var ~ldv_irq_line_1_2 : int;

var ~ldv_irq_1_3 : int;

var ~ldv_irq_data_1_1.base : int, ~ldv_irq_data_1_1.offset : int;

var ~ldv_state_variable_10 : int;

var ~ldv_irq_1_0 : int;

var ~ldv_irq_data_1_0.base : int, ~ldv_irq_data_1_0.offset : int;

var ~ldv_state_variable_6 : int;

var ~ldv_state_variable_16 : int;

var ~ldv_irq_data_1_3.base : int, ~ldv_irq_data_1_3.offset : int;

var ~ldv_state_variable_2 : int;

var ~ldv_irq_data_1_2.base : int, ~ldv_irq_data_1_2.offset : int;

var ~ldv_state_variable_11 : int;

var ~ldv_irq_1_2 : int;

var ~LDV_IN_INTERRUPT : int;

var ~ldv_irq_1_1 : int;

var ~ldv_irq_line_1_3 : int;

var ~ldv_state_variable_3 : int;

var ~ldv_irq_line_1_0 : int;

var ~ldv_state_variable_4 : int;

var ~#sh_eth_gstrings_stats.base : int, ~#sh_eth_gstrings_stats.offset : int;

var ~ldv_retval_2 : int;

var ~ldv_retval_5 : int;

var ~ldv_retval_0 : int;

var ~ldv_retval_4 : int;

var ~ldv_retval_6 : int;

var ~ldv_retval_1 : int;

var ~ldv_retval_3 : int;

var ~ldv_retval_7 : int;

var ~last_index : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~pv_irq_ops.save_fl.func.base : int, ~pv_irq_ops.save_fl.func.offset : int, ~pv_irq_ops.restore_fl.func.base : int, ~pv_irq_ops.restore_fl.func.offset : int, ~pv_irq_ops.irq_disable.func.base : int, ~pv_irq_ops.irq_disable.func.offset : int, ~pv_irq_ops.irq_enable.func.base : int, ~pv_irq_ops.irq_enable.func.offset : int, ~pv_irq_ops.safe_halt.base : int, ~pv_irq_ops.safe_halt.offset : int, ~pv_irq_ops.halt.base : int, ~pv_irq_ops.halt.offset : int, ~pv_irq_ops.adjust_exception_frame.base : int, ~pv_irq_ops.adjust_exception_frame.offset : int;

var ~#x86_dma_fallback_dev.base : int, ~#x86_dma_fallback_dev.offset : int;

var ~dma_ops.base : int, ~dma_ops.offset : int;

var ~sh_eth_ethtool_ops_group2.base : int, ~sh_eth_ethtool_ops_group2.offset : int;

var ~sh_eth_dev_pm_ops_group1.base : int, ~sh_eth_dev_pm_ops_group1.offset : int;

var ~sh_eth_netdev_ops_group1.base : int, ~sh_eth_netdev_ops_group1.offset : int;

var ~sh7763_data_group0.base : int, ~sh7763_data_group0.offset : int;

var ~bb_ops_group0.base : int, ~bb_ops_group0.offset : int;

var ~r8a777x_data_group0.base : int, ~r8a777x_data_group0.offset : int;

var ~sh7734_data_group0.base : int, ~sh7734_data_group0.offset : int;

var ~sh7724_data_group0.base : int, ~sh7724_data_group0.offset : int;

var ~sh7757_data_group0.base : int, ~sh7757_data_group0.offset : int;

var ~sh_eth_driver_group0.base : int, ~sh_eth_driver_group0.offset : int;

var ~r8a7740_data_group0.base : int, ~r8a7740_data_group0.offset : int;

var ~r8a779x_data_group0.base : int, ~r8a779x_data_group0.offset : int;

var ~sh7757_data_giga_group0.base : int, ~sh7757_data_giga_group0.offset : int;

var ~sh_eth_netdev_ops_tsu_group1.base : int, ~sh_eth_netdev_ops_tsu_group1.offset : int;

var ~r7s72100_data_group0.base : int, ~r7s72100_data_group0.offset : int;

var ~sh_eth_ethtool_ops_group1.base : int, ~sh_eth_ethtool_ops_group1.offset : int;

var ~sh_eth_ethtool_ops_group0.base : int, ~sh_eth_ethtool_ops_group0.offset : int;

var ~#sh_eth_offset_gigabit.base : int, ~#sh_eth_offset_gigabit.offset : int;

var ~#sh_eth_offset_fast_rz.base : int, ~#sh_eth_offset_fast_rz.offset : int;

var ~#sh_eth_offset_fast_rcar.base : int, ~#sh_eth_offset_fast_rcar.offset : int;

var ~#sh_eth_offset_fast_sh4.base : int, ~#sh_eth_offset_fast_sh4.offset : int;

var ~#sh_eth_offset_fast_sh3_sh2.base : int, ~#sh_eth_offset_fast_sh3_sh2.offset : int;

var ~#r8a777x_data.base : int, ~#r8a777x_data.offset : int;

var ~#r8a779x_data.base : int, ~#r8a779x_data.offset : int;

var ~#sh7724_data.base : int, ~#sh7724_data.offset : int;

var ~#sh7757_data.base : int, ~#sh7757_data.offset : int;

var ~#sh7757_data_giga.base : int, ~#sh7757_data_giga.offset : int;

var ~#sh7734_data.base : int, ~#sh7734_data.offset : int;

var ~#sh7763_data.base : int, ~#sh7763_data.offset : int;

var ~#r8a7740_data.base : int, ~#r8a7740_data.offset : int;

var ~#r7s72100_data.base : int, ~#r7s72100_data.offset : int;

var ~#sh7619_data.base : int, ~#sh7619_data.offset : int;

var ~#sh771x_data.base : int, ~#sh771x_data.offset : int;

var ~#bb_ops.base : int, ~#bb_ops.offset : int;

var ~#sh_eth_ethtool_ops.base : int, ~#sh_eth_ethtool_ops.offset : int;

var ~#sh_eth_netdev_ops.base : int, ~#sh_eth_netdev_ops.offset : int;

var ~#sh_eth_netdev_ops_tsu.base : int, ~#sh_eth_netdev_ops_tsu.offset : int;

var ~#sh_eth_dev_pm_ops.base : int, ~#sh_eth_dev_pm_ops.offset : int;

var ~#sh_eth_id_table.base : int, ~#sh_eth_id_table.offset : int;

var ~#sh_eth_driver.base : int, ~#sh_eth_driver.offset : int;

var ~#set_impl.base : int, ~#set_impl.offset : int;

var ~LDV_SKBS.base : int, ~LDV_SKBS.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

var #memory_int : [int,int]int;

implementation ldv_set_is_empty(#in~set.base : int, #in~set.offset : int) returns (#res : int){
    var ~set.base : int, ~set.offset : int;

  loc0:
    ~set.base, ~set.offset := #in~set.base, #in~set.offset;
    #res := (if ~last_index == 0 then 1 else 0);
    assume true;
    return;
}

procedure ldv_set_is_empty(#in~set.base : int, #in~set.offset : int) returns (#res : int);
modifies ;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr1472 : int;

  loc1:
    #t~loopctr1472 := 0;
    goto loc2;
  loc2:
    goto loc2_0, loc2_1;
  loc2_0:
    assume #t~loopctr1472 < #amount;
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset + #t~loopctr1472 * 1 := 0], #memory_$Pointer$.offset[#ptr.base,#ptr.offset + #t~loopctr1472 * 1 := #value % 256];
    #memory_int := #memory_int[#ptr.base,#ptr.offset + #t~loopctr1472 * 1 := #value];
    #t~loopctr1472 := #t~loopctr1472 + 1;
    goto loc2;
  loc2_1:
    assume !(#t~loopctr1472 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation sh_eth_driver_init() returns (#res : int){
    var #t~ret1310 : int;
    var ~tmp~1018 : int;

  loc3:
    havoc ~tmp~1018;
    call #t~ret1310 := ldv___platform_driver_register_21(~#sh_eth_driver.base, ~#sh_eth_driver.offset, ~#__this_module.base, ~#__this_module.offset);
    assume -2147483648 <= #t~ret1310 && #t~ret1310 <= 2147483647;
    ~tmp~1018 := #t~ret1310;
    havoc #t~ret1310;
    #res := ~tmp~1018;
    assume true;
    return;
}

procedure sh_eth_driver_init() returns (#res : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~sh_eth_driver_group0.base, ~sh_eth_driver_group0.offset, ~ldv_state_variable_2;

implementation main() returns (#res : int){
    var #t~nondet1336 : int;
    var #t~nondet1337 : int;
    var #t~nondet1338 : int;
    var #t~nondet1339 : int;
    var #t~ret1340 : ~u32;
    var #t~ret1341 : ~u32;
    var #t~ret1342.base : int, #t~ret1342.offset : int;
    var #t~ret1343.base : int, #t~ret1343.offset : int;
    var #t~ret1344.base : int, #t~ret1344.offset : int;
    var #t~nondet1345 : int;
    var #t~ret1346 : ~u16;
    var #t~ret1347 : ~u16;
    var #t~ret1348.base : int, #t~ret1348.offset : int;
    var #t~nondet1349 : int;
    var #t~ret1350.base : int, #t~ret1350.offset : int;
    var #t~ret1351.base : int, #t~ret1351.offset : int;
    var #t~nondet1352 : int;
    var #t~ret1353.base : int, #t~ret1353.offset : int;
    var #t~nondet1354 : int;
    var #t~ret1355.base : int, #t~ret1355.offset : int;
    var #t~ret1356.base : int, #t~ret1356.offset : int;
    var #t~memset1357.base : int, #t~memset1357.offset : int;
    var #t~memset1358.base : int, #t~memset1358.offset : int;
    var #t~nondet1359 : int;
    var #t~switch1360 : bool;
    var #t~nondet1361 : int;
    var #t~switch1362 : bool;
    var #t~nondet1363 : int;
    var #t~switch1364 : bool;
    var #t~ret1365 : int;
    var #t~nondet1366 : int;
    var #t~switch1367 : bool;
    var #t~ret1368 : int;
    var #t~ret1369 : int;
    var #t~nondet1370 : int;
    var #t~switch1371 : bool;
    var #t~ret1372 : int;
    var #t~nondet1373 : int;
    var #t~switch1374 : bool;
    var #t~nondet1375 : int;
    var #t~switch1376 : bool;
    var #t~nondet1377 : int;
    var #t~switch1378 : bool;
    var #t~ret1379 : int;
    var #t~ret1380 : int;
    var #t~ret1381 : int;
    var #t~ret1382 : int;
    var #t~ret1383 : ~u32;
    var #t~ret1384 : int;
    var #t~ret1385 : ~u32;
    var #t~nondet1386 : int;
    var #t~switch1387 : bool;
    var #t~ret1388 : int;
    var #t~ret1389 : int;
    var #t~nondet1390 : int;
    var #t~switch1391 : bool;
    var #t~nondet1392 : int;
    var #t~switch1393 : bool;
    var #t~nondet1394 : int;
    var #t~switch1395 : bool;
    var #t~nondet1396 : int;
    var #t~switch1397 : bool;
    var #t~nondet1398 : int;
    var #t~switch1399 : bool;
    var #t~nondet1400 : int;
    var #t~switch1401 : bool;
    var #t~ret1402 : int;
    var #t~ret1403 : int;
    var #t~ret1404 : int;
    var #t~ret1405 : int;
    var #t~mem1406 : int;
    var #t~ret1407 : int;
    var #t~mem1408 : int;
    var #t~ret1409 : int;
    var #t~mem1410 : int;
    var #t~ret1411 : int;
    var #t~ret1412 : int;
    var #t~ret1413 : int;
    var #t~ret1414 : int;
    var #t~mem1415 : int;
    var #t~ret1416 : int;
    var #t~mem1417 : int;
    var #t~ret1418 : int;
    var #t~mem1419 : int;
    var #t~ret1420 : int;
    var #t~ret1421.base : int, #t~ret1421.offset : int;
    var #t~ret1422.base : int, #t~ret1422.offset : int;
    var #t~ret1423.base : int, #t~ret1423.offset : int;
    var #t~ret1424 : int;
    var #t~ret1425 : int;
    var #t~ret1426 : int;
    var #t~ret1427 : int;
    var #t~ret1428 : int;
    var #t~ret1429 : int;
    var #t~ret1430 : int;
    var #t~ret1431 : int;
    var #t~ret1432 : int;
    var #t~nondet1433 : int;
    var #t~switch1434 : bool;
    var #t~nondet1435 : int;
    var #t~switch1436 : bool;
    var #t~ret1437 : int;
    var #t~ret1438 : int;
    var #t~ret1439 : int;
    var #t~ret1440 : int;
    var #t~ret1441 : int;
    var #t~ret1442 : int;
    var #t~ret1443 : int;
    var #t~ret1444.base : int, #t~ret1444.offset : int;
    var #t~ret1445.base : int, #t~ret1445.offset : int;
    var #t~ret1446.base : int, #t~ret1446.offset : int;
    var #t~ret1447 : int;
    var #t~ret1448 : int;
    var #t~ret1449 : int;
    var #t~ret1450 : int;
    var #t~ret1451 : int;
    var #t~ret1452 : int;
    var #t~ret1453 : int;
    var #t~ret1454 : int;
    var #t~ret1455 : int;
    var ~ldvarg1~1090 : int;
    var ~tmp~1090 : int;
    var ~ldvarg0~1090 : int;
    var ~tmp___0~1090 : int;
    var ~ldvarg2~1090 : int;
    var ~tmp___1~1090 : int;
    var ~ldvarg8~1090 : int;
    var ~tmp___2~1090 : int;
    var ~ldvarg7~1090 : ~u32;
    var ~tmp___3~1090 : ~u32;
    var ~ldvarg4~1090 : ~u32;
    var ~tmp___4~1090 : ~u32;
    var ~ldvarg3~1090.base : int, ~ldvarg3~1090.offset : int;
    var ~tmp___5~1090.base : int, ~tmp___5~1090.offset : int;
    var ~ldvarg5~1090.base : int, ~ldvarg5~1090.offset : int;
    var ~tmp___6~1090.base : int, ~tmp___6~1090.offset : int;
    var ~ldvarg6~1090.base : int, ~ldvarg6~1090.offset : int;
    var ~tmp___7~1090.base : int, ~tmp___7~1090.offset : int;
    var ~ldvarg11~1090 : int;
    var ~tmp___8~1090 : int;
    var ~ldvarg12~1090 : ~u16;
    var ~tmp___9~1090 : ~u16;
    var ~ldvarg16~1090 : ~u16;
    var ~tmp___10~1090 : ~u16;
    var ~ldvarg15~1090.base : int, ~ldvarg15~1090.offset : int;
    var ~tmp___11~1090.base : int, ~tmp___11~1090.offset : int;
    var ~#ldvarg17~1090.base : int, ~#ldvarg17~1090.offset : int;
    var ~ldvarg14~1090 : int;
    var ~tmp___12~1090 : int;
    var ~#ldvarg13~1090.base : int, ~#ldvarg13~1090.offset : int;
    var ~ldvarg10~1090.base : int, ~ldvarg10~1090.offset : int;
    var ~tmp___13~1090.base : int, ~tmp___13~1090.offset : int;
    var ~ldvarg9~1090.base : int, ~ldvarg9~1090.offset : int;
    var ~tmp___14~1090.base : int, ~tmp___14~1090.offset : int;
    var ~ldvarg21~1090 : int;
    var ~tmp___15~1090 : int;
    var ~ldvarg18~1090.base : int, ~ldvarg18~1090.offset : int;
    var ~tmp___16~1090.base : int, ~tmp___16~1090.offset : int;
    var ~ldvarg20~1090 : int;
    var ~tmp___17~1090 : int;
    var ~ldvarg22~1090.base : int, ~ldvarg22~1090.offset : int;
    var ~tmp___18~1090.base : int, ~tmp___18~1090.offset : int;
    var ~ldvarg19~1090.base : int, ~ldvarg19~1090.offset : int;
    var ~tmp___19~1090.base : int, ~tmp___19~1090.offset : int;
    var ~tmp___20~1090 : int;
    var ~tmp___21~1090 : int;
    var ~tmp___22~1090 : int;
    var ~tmp___23~1090 : int;
    var ~tmp___24~1090 : int;
    var ~tmp___25~1090 : int;
    var ~tmp___26~1090 : int;
    var ~tmp___27~1090 : int;
    var ~tmp___28~1090 : int;
    var ~tmp___29~1090 : int;
    var ~tmp___30~1090 : int;
    var ~tmp___31~1090 : int;
    var ~tmp___32~1090 : int;
    var ~tmp___33~1090 : int;
    var ~tmp___34~1090 : int;
    var ~tmp___35~1090 : int;
    var ~tmp___36~1090 : int;

  loc4:
    havoc ~ldvarg1~1090;
    havoc ~tmp~1090;
    havoc ~ldvarg0~1090;
    havoc ~tmp___0~1090;
    havoc ~ldvarg2~1090;
    havoc ~tmp___1~1090;
    havoc ~ldvarg8~1090;
    havoc ~tmp___2~1090;
    havoc ~ldvarg7~1090;
    havoc ~tmp___3~1090;
    havoc ~ldvarg4~1090;
    havoc ~tmp___4~1090;
    havoc ~ldvarg3~1090.base, ~ldvarg3~1090.offset;
    havoc ~tmp___5~1090.base, ~tmp___5~1090.offset;
    havoc ~ldvarg5~1090.base, ~ldvarg5~1090.offset;
    havoc ~tmp___6~1090.base, ~tmp___6~1090.offset;
    havoc ~ldvarg6~1090.base, ~ldvarg6~1090.offset;
    havoc ~tmp___7~1090.base, ~tmp___7~1090.offset;
    havoc ~ldvarg11~1090;
    havoc ~tmp___8~1090;
    havoc ~ldvarg12~1090;
    havoc ~tmp___9~1090;
    havoc ~ldvarg16~1090;
    havoc ~tmp___10~1090;
    havoc ~ldvarg15~1090.base, ~ldvarg15~1090.offset;
    havoc ~tmp___11~1090.base, ~tmp___11~1090.offset;
    call ~#ldvarg17~1090.base, ~#ldvarg17~1090.offset := #Ultimate.alloc(2);
    havoc ~ldvarg14~1090;
    havoc ~tmp___12~1090;
    call ~#ldvarg13~1090.base, ~#ldvarg13~1090.offset := #Ultimate.alloc(2);
    havoc ~ldvarg10~1090.base, ~ldvarg10~1090.offset;
    havoc ~tmp___13~1090.base, ~tmp___13~1090.offset;
    havoc ~ldvarg9~1090.base, ~ldvarg9~1090.offset;
    havoc ~tmp___14~1090.base, ~tmp___14~1090.offset;
    havoc ~ldvarg21~1090;
    havoc ~tmp___15~1090;
    havoc ~ldvarg18~1090.base, ~ldvarg18~1090.offset;
    havoc ~tmp___16~1090.base, ~tmp___16~1090.offset;
    havoc ~ldvarg20~1090;
    havoc ~tmp___17~1090;
    havoc ~ldvarg22~1090.base, ~ldvarg22~1090.offset;
    havoc ~tmp___18~1090.base, ~tmp___18~1090.offset;
    havoc ~ldvarg19~1090.base, ~ldvarg19~1090.offset;
    havoc ~tmp___19~1090.base, ~tmp___19~1090.offset;
    havoc ~tmp___20~1090;
    havoc ~tmp___21~1090;
    havoc ~tmp___22~1090;
    havoc ~tmp___23~1090;
    havoc ~tmp___24~1090;
    havoc ~tmp___25~1090;
    havoc ~tmp___26~1090;
    havoc ~tmp___27~1090;
    havoc ~tmp___28~1090;
    havoc ~tmp___29~1090;
    havoc ~tmp___30~1090;
    havoc ~tmp___31~1090;
    havoc ~tmp___32~1090;
    havoc ~tmp___33~1090;
    havoc ~tmp___34~1090;
    havoc ~tmp___35~1090;
    havoc ~tmp___36~1090;
    assume -2147483648 <= #t~nondet1336 && #t~nondet1336 <= 2147483647;
    ~tmp~1090 := #t~nondet1336;
    havoc #t~nondet1336;
    ~ldvarg1~1090 := ~tmp~1090;
    assume -2147483648 <= #t~nondet1337 && #t~nondet1337 <= 2147483647;
    ~tmp___0~1090 := #t~nondet1337;
    havoc #t~nondet1337;
    ~ldvarg0~1090 := ~tmp___0~1090;
    assume -2147483648 <= #t~nondet1338 && #t~nondet1338 <= 2147483647;
    ~tmp___1~1090 := #t~nondet1338;
    havoc #t~nondet1338;
    ~ldvarg2~1090 := ~tmp___1~1090;
    assume -2147483648 <= #t~nondet1339 && #t~nondet1339 <= 2147483647;
    ~tmp___2~1090 := #t~nondet1339;
    havoc #t~nondet1339;
    ~ldvarg8~1090 := ~tmp___2~1090;
    call #t~ret1340 := __VERIFIER_nondet_u32();
    ~tmp___3~1090 := #t~ret1340;
    havoc #t~ret1340;
    ~ldvarg7~1090 := ~tmp___3~1090;
    call #t~ret1341 := __VERIFIER_nondet_u32();
    ~tmp___4~1090 := #t~ret1341;
    havoc #t~ret1341;
    ~ldvarg4~1090 := ~tmp___4~1090;
    call #t~ret1342.base, #t~ret1342.offset := ldv_zalloc(1);
    ~tmp___5~1090.base, ~tmp___5~1090.offset := #t~ret1342.base, #t~ret1342.offset;
    havoc #t~ret1342.base, #t~ret1342.offset;
    ~ldvarg3~1090.base, ~ldvarg3~1090.offset := ~tmp___5~1090.base, ~tmp___5~1090.offset;
    call #t~ret1343.base, #t~ret1343.offset := ldv_zalloc(8);
    ~tmp___6~1090.base, ~tmp___6~1090.offset := #t~ret1343.base, #t~ret1343.offset;
    havoc #t~ret1343.base, #t~ret1343.offset;
    ~ldvarg5~1090.base, ~ldvarg5~1090.offset := ~tmp___6~1090.base, ~tmp___6~1090.offset;
    call #t~ret1344.base, #t~ret1344.offset := ldv_zalloc(8);
    ~tmp___7~1090.base, ~tmp___7~1090.offset := #t~ret1344.base, #t~ret1344.offset;
    havoc #t~ret1344.base, #t~ret1344.offset;
    ~ldvarg6~1090.base, ~ldvarg6~1090.offset := ~tmp___7~1090.base, ~tmp___7~1090.offset;
    assume -2147483648 <= #t~nondet1345 && #t~nondet1345 <= 2147483647;
    ~tmp___8~1090 := #t~nondet1345;
    havoc #t~nondet1345;
    ~ldvarg11~1090 := ~tmp___8~1090;
    call #t~ret1346 := __VERIFIER_nondet_u16();
    ~tmp___9~1090 := #t~ret1346;
    havoc #t~ret1346;
    ~ldvarg12~1090 := ~tmp___9~1090;
    call #t~ret1347 := __VERIFIER_nondet_u16();
    ~tmp___10~1090 := #t~ret1347;
    havoc #t~ret1347;
    ~ldvarg16~1090 := ~tmp___10~1090;
    call #t~ret1348.base, #t~ret1348.offset := ldv_zalloc(40);
    ~tmp___11~1090.base, ~tmp___11~1090.offset := #t~ret1348.base, #t~ret1348.offset;
    havoc #t~ret1348.base, #t~ret1348.offset;
    ~ldvarg15~1090.base, ~ldvarg15~1090.offset := ~tmp___11~1090.base, ~tmp___11~1090.offset;
    assume -2147483648 <= #t~nondet1349 && #t~nondet1349 <= 2147483647;
    ~tmp___12~1090 := #t~nondet1349;
    havoc #t~nondet1349;
    ~ldvarg14~1090 := ~tmp___12~1090;
    call #t~ret1350.base, #t~ret1350.offset := ldv_zalloc(232);
    ~tmp___13~1090.base, ~tmp___13~1090.offset := #t~ret1350.base, #t~ret1350.offset;
    havoc #t~ret1350.base, #t~ret1350.offset;
    ~ldvarg10~1090.base, ~ldvarg10~1090.offset := ~tmp___13~1090.base, ~tmp___13~1090.offset;
    call #t~ret1351.base, #t~ret1351.offset := ldv_zalloc(1);
    ~tmp___14~1090.base, ~tmp___14~1090.offset := #t~ret1351.base, #t~ret1351.offset;
    havoc #t~ret1351.base, #t~ret1351.offset;
    ~ldvarg9~1090.base, ~ldvarg9~1090.offset := ~tmp___14~1090.base, ~tmp___14~1090.offset;
    assume -2147483648 <= #t~nondet1352 && #t~nondet1352 <= 2147483647;
    ~tmp___15~1090 := #t~nondet1352;
    havoc #t~nondet1352;
    ~ldvarg21~1090 := ~tmp___15~1090;
    call #t~ret1353.base, #t~ret1353.offset := ldv_zalloc(1);
    ~tmp___16~1090.base, ~tmp___16~1090.offset := #t~ret1353.base, #t~ret1353.offset;
    havoc #t~ret1353.base, #t~ret1353.offset;
    ~ldvarg18~1090.base, ~ldvarg18~1090.offset := ~tmp___16~1090.base, ~tmp___16~1090.offset;
    assume -2147483648 <= #t~nondet1354 && #t~nondet1354 <= 2147483647;
    ~tmp___17~1090 := #t~nondet1354;
    havoc #t~nondet1354;
    ~ldvarg20~1090 := ~tmp___17~1090;
    call #t~ret1355.base, #t~ret1355.offset := ldv_zalloc(40);
    ~tmp___18~1090.base, ~tmp___18~1090.offset := #t~ret1355.base, #t~ret1355.offset;
    havoc #t~ret1355.base, #t~ret1355.offset;
    ~ldvarg22~1090.base, ~ldvarg22~1090.offset := ~tmp___18~1090.base, ~tmp___18~1090.offset;
    call #t~ret1356.base, #t~ret1356.offset := ldv_zalloc(232);
    ~tmp___19~1090.base, ~tmp___19~1090.offset := #t~ret1356.base, #t~ret1356.offset;
    havoc #t~ret1356.base, #t~ret1356.offset;
    ~ldvarg19~1090.base, ~ldvarg19~1090.offset := ~tmp___19~1090.base, ~tmp___19~1090.offset;
    call ldv_initialize();
    call #t~memset1357.base, #t~memset1357.offset := #Ultimate.C_memset(~#ldvarg17~1090.base, ~#ldvarg17~1090.offset, 0, 2);
    havoc #t~memset1357.base, #t~memset1357.offset;
    call #t~memset1358.base, #t~memset1358.offset := #Ultimate.C_memset(~#ldvarg13~1090.base, ~#ldvarg13~1090.offset, 0, 2);
    havoc #t~memset1358.base, #t~memset1358.offset;
    ~ldv_state_variable_11 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_state_variable_1 := 1;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_16 := 0;
    ~ldv_state_variable_13 := 0;
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_state_variable_9 := 0;
    ~ldv_state_variable_12 := 0;
    ~ldv_state_variable_14 := 0;
    ~ldv_state_variable_15 := 0;
    ~ldv_state_variable_8 := 0;
    ~ldv_state_variable_4 := 0;
    ~ldv_state_variable_10 := 0;
    ~ldv_state_variable_5 := 0;
    assume -2147483648 <= #t~nondet1359 && #t~nondet1359 <= 2147483647;
    ~tmp___20~1090 := #t~nondet1359;
    havoc #t~nondet1359;
    #t~switch1360 := ~tmp___20~1090 == 0;
    assume !#t~switch1360;
    #t~switch1360 := #t~switch1360 || ~tmp___20~1090 == 1;
    assume !#t~switch1360;
    #t~switch1360 := #t~switch1360 || ~tmp___20~1090 == 2;
    assume !#t~switch1360;
    #t~switch1360 := #t~switch1360 || ~tmp___20~1090 == 3;
    assume !#t~switch1360;
    #t~switch1360 := #t~switch1360 || ~tmp___20~1090 == 4;
    assume #t~switch1360;
    assume ~ldv_state_variable_0 != 0;
    assume -2147483648 <= #t~nondet1370 && #t~nondet1370 <= 2147483647;
    ~tmp___24~1090 := #t~nondet1370;
    havoc #t~nondet1370;
    #t~switch1371 := ~tmp___24~1090 == 0;
    assume !#t~switch1371;
    #t~switch1371 := #t~switch1371 || ~tmp___24~1090 == 1;
    assume #t~switch1371;
    assume ~ldv_state_variable_0 == 1;
    call #t~ret1372 := sh_eth_driver_init();
    assume -2147483648 <= #t~ret1372 && #t~ret1372 <= 2147483647;
    ~ldv_retval_1 := #t~ret1372;
    havoc #t~ret1372;
    assume !(~ldv_retval_1 == 0);
    assume ~ldv_retval_1 != 0;
    ~ldv_state_variable_0 := 2;
    call ldv_check_final_state();
    return;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_11, ~ldv_state_variable_7, ~ldv_state_variable_2, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_16, ~ldv_state_variable_13, ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_9, ~ldv_state_variable_12, ~ldv_state_variable_14, ~ldv_state_variable_15, ~ldv_state_variable_8, ~ldv_state_variable_4, ~ldv_state_variable_10, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_1, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_5, ~ldv_retval_4, ~ldv_retval_7, ~ldv_retval_6, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~last_index, ~sh7757_data_group0.base, ~sh7757_data_group0.offset, ~sh7734_data_group0.base, ~sh7734_data_group0.offset, ~sh7763_data_group0.base, ~sh7763_data_group0.offset, ~sh_eth_ethtool_ops_group0.base, ~sh_eth_ethtool_ops_group0.offset, ~sh_eth_ethtool_ops_group1.base, ~sh_eth_ethtool_ops_group1.offset, ~sh_eth_ethtool_ops_group2.base, ~sh_eth_ethtool_ops_group2.offset, ~r8a7740_data_group0.base, ~r8a7740_data_group0.offset, ~bb_ops_group0.base, ~bb_ops_group0.offset, ~r7s72100_data_group0.base, ~r7s72100_data_group0.offset, ~r8a779x_data_group0.base, ~r8a779x_data_group0.offset, ~r8a777x_data_group0.base, ~r8a777x_data_group0.offset, ~sh7757_data_giga_group0.base, ~sh7757_data_giga_group0.offset, ~sh_eth_dev_pm_ops_group1.base, ~sh_eth_dev_pm_ops_group1.offset, ~sh7724_data_group0.base, ~sh7724_data_group0.offset, ~ldv_irq_1_0, ~ldv_irq_1_1, ~ldv_irq_1_2, ~ldv_irq_1_3, ~sh_eth_driver_group0.base, ~sh_eth_driver_group0.offset, ~LDV_IN_INTERRUPT, ~ldv_irq_line_1_0, ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset, ~ldv_irq_line_1_1, ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset, ~ldv_irq_line_1_2, ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset, ~ldv_irq_line_1_3, ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset, ~sh_eth_netdev_ops_tsu_group1.base, ~sh_eth_netdev_ops_tsu_group1.offset;

implementation ldv_set_init(#in~set.base : int, #in~set.offset : int) returns (){
    var ~set.base : int, ~set.offset : int;

  loc5:
    ~set.base, ~set.offset := #in~set.base, #in~set.offset;
    ~set.base, ~set.offset := ~#set_impl.base, ~#set_impl.offset;
    ~last_index := 0;
    assume true;
    return;
}

procedure ldv_set_init(#in~set.base : int, #in~set.offset : int) returns ();
modifies ~last_index;

implementation ULTIMATE.init() returns (){
    var #t~nondet1309.base : int, #t~nondet1309.offset : int;

  loc6:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_state_variable_8 := 0;
    ~ldv_state_variable_15 := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_state_variable_5 := 0;
    ~ldv_state_variable_13 := 0;
    ~ldv_state_variable_12 := 0;
    ~ldv_state_variable_14 := 0;
    ~ldv_state_variable_9 := 0;
    ~ref_cnt := 0;
    ~ldv_irq_line_1_1 := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_irq_line_1_2 := 0;
    ~ldv_irq_1_3 := 0;
    ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset := 0, 0;
    ~ldv_state_variable_10 := 0;
    ~ldv_irq_1_0 := 0;
    ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset := 0, 0;
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_16 := 0;
    ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset := 0, 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset := 0, 0;
    ~ldv_state_variable_11 := 0;
    ~ldv_irq_1_2 := 0;
    ~LDV_IN_INTERRUPT := 1;
    ~ldv_irq_1_1 := 0;
    ~ldv_irq_line_1_3 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_irq_line_1_0 := 0;
    ~ldv_state_variable_4 := 0;
    call ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset := #Ultimate.alloc(128);
    call write~int(114, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 0, 1);
    call write~int(120, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 1, 1);
    call write~int(95, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 2, 1);
    call write~int(99, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 3, 1);
    call write~int(117, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 4, 1);
    call write~int(114, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 5, 1);
    call write~int(114, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 6, 1);
    call write~int(101, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 7, 1);
    call write~int(110, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 8, 1);
    call write~int(116, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 9, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 10, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 11, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 12, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 13, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 14, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 15, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 16, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 17, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 18, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 19, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 20, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 21, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 22, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 23, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 24, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 25, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 26, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 27, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 28, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 29, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 30, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 0 + 31, 1);
    call write~int(116, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 0, 1);
    call write~int(120, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 1, 1);
    call write~int(95, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 2, 1);
    call write~int(99, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 3, 1);
    call write~int(117, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 4, 1);
    call write~int(114, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 5, 1);
    call write~int(114, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 6, 1);
    call write~int(101, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 7, 1);
    call write~int(110, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 8, 1);
    call write~int(116, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 9, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 10, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 11, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 12, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 13, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 14, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 15, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 16, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 17, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 18, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 19, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 20, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 21, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 22, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 23, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 24, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 25, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 26, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 27, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 28, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 29, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 30, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 32 + 31, 1);
    call write~int(114, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 0, 1);
    call write~int(120, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 1, 1);
    call write~int(95, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 2, 1);
    call write~int(100, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 3, 1);
    call write~int(105, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 4, 1);
    call write~int(114, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 5, 1);
    call write~int(116, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 6, 1);
    call write~int(121, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 7, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 8, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 9, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 10, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 11, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 12, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 13, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 14, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 15, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 16, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 17, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 18, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 19, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 20, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 21, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 22, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 23, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 24, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 25, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 26, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 27, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 28, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 29, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 30, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 64 + 31, 1);
    call write~int(116, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 0, 1);
    call write~int(120, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 1, 1);
    call write~int(95, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 2, 1);
    call write~int(100, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 3, 1);
    call write~int(105, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 4, 1);
    call write~int(114, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 5, 1);
    call write~int(116, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 6, 1);
    call write~int(121, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 7, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 8, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 9, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 10, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 11, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 12, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 13, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 14, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 15, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 16, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 17, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 18, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 19, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 20, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 21, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 22, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 23, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 24, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 25, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 26, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 27, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 28, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 29, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 30, 1);
    call write~int(0, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset + 96 + 31, 1);
    ~ldv_retval_2 := 0;
    ~ldv_retval_5 := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_4 := 0;
    ~ldv_retval_6 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_retval_3 := 0;
    ~ldv_retval_7 := 0;
    ~last_index := 0;
    ~sh_eth_ethtool_ops_group2.base, ~sh_eth_ethtool_ops_group2.offset := 0, 0;
    ~sh_eth_dev_pm_ops_group1.base, ~sh_eth_dev_pm_ops_group1.offset := 0, 0;
    ~sh_eth_netdev_ops_group1.base, ~sh_eth_netdev_ops_group1.offset := 0, 0;
    ~sh7763_data_group0.base, ~sh7763_data_group0.offset := 0, 0;
    ~bb_ops_group0.base, ~bb_ops_group0.offset := 0, 0;
    ~r8a777x_data_group0.base, ~r8a777x_data_group0.offset := 0, 0;
    ~sh7734_data_group0.base, ~sh7734_data_group0.offset := 0, 0;
    ~sh7724_data_group0.base, ~sh7724_data_group0.offset := 0, 0;
    ~sh7757_data_group0.base, ~sh7757_data_group0.offset := 0, 0;
    ~sh_eth_driver_group0.base, ~sh_eth_driver_group0.offset := 0, 0;
    ~r8a7740_data_group0.base, ~r8a7740_data_group0.offset := 0, 0;
    ~r8a779x_data_group0.base, ~r8a779x_data_group0.offset := 0, 0;
    ~sh7757_data_giga_group0.base, ~sh7757_data_giga_group0.offset := 0, 0;
    ~sh_eth_netdev_ops_tsu_group1.base, ~sh_eth_netdev_ops_tsu_group1.offset := 0, 0;
    ~r7s72100_data_group0.base, ~r7s72100_data_group0.offset := 0, 0;
    ~sh_eth_ethtool_ops_group1.base, ~sh_eth_ethtool_ops_group1.offset := 0, 0;
    ~sh_eth_ethtool_ops_group0.base, ~sh_eth_ethtool_ops_group0.offset := 0, 0;
    call ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset := #Ultimate.alloc(218);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 0, 2);
    call write~int(1024, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 2, 2);
    call write~int(1032, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 4, 2);
    call write~int(1040, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 6, 2);
    call write~int(1064, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 8, 2);
    call write~int(1072, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 10, 2);
    call write~int(16, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 12, 2);
    call write~int(20, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 14, 2);
    call write~int(24, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 16, 2);
    call write~int(28, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 18, 2);
    call write~int(48, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 20, 2);
    call write~int(52, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 22, 2);
    call write~int(56, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 24, 2);
    call write~int(60, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 26, 2);
    call write~int(1080, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 28, 2);
    call write~int(1088, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 30, 2);
    call write~int(1096, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 32, 2);
    call write~int(1104, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 34, 2);
    call write~int(1112, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 36, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 38, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 40, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 42, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 44, 2);
    call write~int(1128, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 46, 2);
    call write~int(1120, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 48, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 50, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 52, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 54, 2);
    call write~int(1280, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 56, 2);
    call write~int(1296, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 58, 2);
    call write~int(1304, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 60, 2);
    call write~int(1312, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 62, 2);
    call write~int(1320, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 64, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 66, 2);
    call write~int(1324, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 68, 2);
    call write~int(1288, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 70, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 72, 2);
    call write~int(1364, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 74, 2);
    call write~int(1368, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 76, 2);
    call write~int(1372, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 78, 2);
    call write~int(1376, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 80, 2);
    call write~int(1888, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 82, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 84, 2);
    call write~int(1380, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 86, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 88, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 90, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 92, 2);
    call write~int(1456, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 94, 2);
    call write~int(1460, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 96, 2);
    call write~int(1472, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 98, 2);
    call write~int(1480, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 100, 2);
    call write~int(1792, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 102, 2);
    call write~int(1800, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 104, 2);
    call write~int(1808, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 106, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 108, 2);
    call write~int(1856, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 110, 2);
    call write~int(1864, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 112, 2);
    call write~int(1872, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 114, 2);
    call write~int(1880, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 116, 2);
    call write~int(1896, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 118, 2);
    call write~int(1904, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 120, 2);
    call write~int(1912, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 122, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 124, 2);
    call write~int(1252, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 126, 2);
    call write~int(1936, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 128, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 130, 2);
    call write~int(4, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 132, 2);
    call write~int(16, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 134, 2);
    call write~int(20, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 136, 2);
    call write~int(24, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 138, 2);
    call write~int(32, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 140, 2);
    call write~int(36, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 142, 2);
    call write~int(40, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 144, 2);
    call write~int(44, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 146, 2);
    call write~int(48, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 148, 2);
    call write~int(52, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 150, 2);
    call write~int(56, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 152, 2);
    call write~int(64, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 154, 2);
    call write~int(68, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 156, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 158, 2);
    call write~int(0, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 160, 2);
    call write~int(80, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 162, 2);
    call write~int(84, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 164, 2);
    call write~int(72, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 166, 2);
    call write~int(76, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 168, 2);
    call write~int(88, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 170, 2);
    call write~int(92, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 172, 2);
    call write~int(96, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 174, 2);
    call write~int(100, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 176, 2);
    call write~int(112, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 178, 2);
    call write~int(116, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 180, 2);
    call write~int(120, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 182, 2);
    call write~int(124, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 184, 2);
    call write~int(256, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 186, 2);
    call write~int(260, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 188, 2);
    call write~int(504, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 190, 2);
    call write~int(508, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 192, 2);
    call write~int(128, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 194, 2);
    call write~int(132, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 196, 2);
    call write~int(136, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 198, 2);
    call write~int(140, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 200, 2);
    call write~int(144, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 202, 2);
    call write~int(148, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 204, 2);
    call write~int(160, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 206, 2);
    call write~int(160, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 208, 2);
    call write~int(168, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 210, 2);
    call write~int(172, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 212, 2);
    call write~int(176, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 214, 2);
    call write~int(180, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset + 216, 2);
    call ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset := #Ultimate.alloc(218);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 0, 2);
    call write~int(1024, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 2, 2);
    call write~int(1032, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 4, 2);
    call write~int(1040, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 6, 2);
    call write~int(1064, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 8, 2);
    call write~int(1072, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 10, 2);
    call write~int(16, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 12, 2);
    call write~int(20, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 14, 2);
    call write~int(24, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 16, 2);
    call write~int(28, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 18, 2);
    call write~int(48, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 20, 2);
    call write~int(52, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 22, 2);
    call write~int(56, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 24, 2);
    call write~int(60, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 26, 2);
    call write~int(1080, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 28, 2);
    call write~int(1088, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 30, 2);
    call write~int(1096, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 32, 2);
    call write~int(1104, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 34, 2);
    call write~int(1112, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 36, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 38, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 40, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 42, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 44, 2);
    call write~int(1128, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 46, 2);
    call write~int(1120, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 48, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 50, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 52, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 54, 2);
    call write~int(1280, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 56, 2);
    call write~int(1296, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 58, 2);
    call write~int(1304, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 60, 2);
    call write~int(1312, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 62, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 64, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 66, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 68, 2);
    call write~int(1288, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 70, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 72, 2);
    call write~int(1364, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 74, 2);
    call write~int(1368, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 76, 2);
    call write~int(1372, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 78, 2);
    call write~int(1376, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 80, 2);
    call write~int(1888, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 82, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 84, 2);
    call write~int(1380, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 86, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 88, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 90, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 92, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 94, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 96, 2);
    call write~int(1472, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 98, 2);
    call write~int(1480, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 100, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 102, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 104, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 106, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 108, 2);
    call write~int(1856, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 110, 2);
    call write~int(1864, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 112, 2);
    call write~int(1872, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 114, 2);
    call write~int(1880, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 116, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 118, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 120, 2);
    call write~int(1912, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 122, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 124, 2);
    call write~int(1252, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 126, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 128, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 130, 2);
    call write~int(4, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 132, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 134, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 136, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 138, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 140, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 142, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 144, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 146, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 148, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 150, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 152, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 154, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 156, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 158, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 160, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 162, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 164, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 166, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 168, 2);
    call write~int(88, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 170, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 172, 2);
    call write~int(96, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 174, 2);
    call write~int(100, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 176, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 178, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 180, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 182, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 184, 2);
    call write~int(256, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 186, 2);
    call write~int(260, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 188, 2);
    call write~int(504, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 190, 2);
    call write~int(508, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 192, 2);
    call write~int(128, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 194, 2);
    call write~int(132, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 196, 2);
    call write~int(136, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 198, 2);
    call write~int(140, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 200, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 202, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 204, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 206, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 208, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 210, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 212, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 214, 2);
    call write~int(0, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset + 216, 2);
    call ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset := #Ultimate.alloc(218);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 0, 2);
    call write~int(512, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 2, 2);
    call write~int(520, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 4, 2);
    call write~int(528, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 6, 2);
    call write~int(552, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 8, 2);
    call write~int(560, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 10, 2);
    call write~int(536, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 12, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 14, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 16, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 18, 2);
    call write~int(544, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 20, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 22, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 24, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 26, 2);
    call write~int(568, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 28, 2);
    call write~int(576, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 30, 2);
    call write~int(584, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 32, 2);
    call write~int(592, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 34, 2);
    call write~int(600, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 36, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 38, 2);
    call write~int(612, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 40, 2);
    call write~int(616, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 42, 2);
    call write~int(620, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 44, 2);
    call write~int(624, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 46, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 48, 2);
    call write~int(636, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 50, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 52, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 54, 2);
    call write~int(768, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 56, 2);
    call write~int(784, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 58, 2);
    call write~int(792, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 60, 2);
    call write~int(800, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 62, 2);
    call write~int(808, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 64, 2);
    call write~int(832, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 66, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 68, 2);
    call write~int(776, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 70, 2);
    call write~int(848, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 72, 2);
    call write~int(852, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 74, 2);
    call write~int(856, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 76, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 78, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 80, 2);
    call write~int(1012, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 82, 2);
    call write~int(864, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 84, 2);
    call write~int(868, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 86, 2);
    call write~int(872, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 88, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 90, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 92, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 94, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 96, 2);
    call write~int(960, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 98, 2);
    call write~int(968, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 100, 2);
    call write~int(976, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 102, 2);
    call write~int(980, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 104, 2);
    call write~int(984, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 106, 2);
    call write~int(988, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 108, 2);
    call write~int(996, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 110, 2);
    call write~int(1000, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 112, 2);
    call write~int(1004, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 114, 2);
    call write~int(1008, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 116, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 118, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 120, 2);
    call write~int(1016, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 122, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 124, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 126, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 128, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 130, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 132, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 134, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 136, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 138, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 140, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 142, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 144, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 146, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 148, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 150, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 152, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 154, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 156, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 158, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 160, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 162, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 164, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 166, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 168, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 170, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 172, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 174, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 176, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 178, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 180, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 182, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 184, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 186, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 188, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 190, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 192, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 194, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 196, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 198, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 200, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 202, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 204, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 206, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 208, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 210, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 212, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 214, 2);
    call write~int(0, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset + 216, 2);
    call ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset := #Ultimate.alloc(218);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 0, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 2, 2);
    call write~int(8, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 4, 2);
    call write~int(16, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 6, 2);
    call write~int(40, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 8, 2);
    call write~int(48, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 10, 2);
    call write~int(24, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 12, 2);
    call write~int(216, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 14, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 16, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 18, 2);
    call write~int(32, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 20, 2);
    call write~int(204, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 22, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 24, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 26, 2);
    call write~int(56, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 28, 2);
    call write~int(64, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 30, 2);
    call write~int(72, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 32, 2);
    call write~int(80, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 34, 2);
    call write~int(88, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 36, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 38, 2);
    call write~int(100, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 40, 2);
    call write~int(104, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 42, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 44, 2);
    call write~int(112, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 46, 2);
    call write~int(120, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 48, 2);
    call write~int(124, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 50, 2);
    call write~int(200, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 52, 2);
    call write~int(212, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 54, 2);
    call write~int(256, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 56, 2);
    call write~int(272, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 58, 2);
    call write~int(280, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 60, 2);
    call write~int(288, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 62, 2);
    call write~int(296, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 64, 2);
    call write~int(320, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 66, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 68, 2);
    call write~int(264, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 70, 2);
    call write~int(336, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 72, 2);
    call write~int(340, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 74, 2);
    call write~int(344, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 76, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 78, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 80, 2);
    call write~int(500, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 82, 2);
    call write~int(352, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 84, 2);
    call write~int(356, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 86, 2);
    call write~int(360, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 88, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 90, 2);
    call write~int(364, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 92, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 94, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 96, 2);
    call write~int(448, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 98, 2);
    call write~int(456, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 100, 2);
    call write~int(464, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 102, 2);
    call write~int(468, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 104, 2);
    call write~int(472, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 106, 2);
    call write~int(476, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 108, 2);
    call write~int(484, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 110, 2);
    call write~int(488, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 112, 2);
    call write~int(492, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 114, 2);
    call write~int(496, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 116, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 118, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 120, 2);
    call write~int(504, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 122, 2);
    call write~int(508, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 124, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 126, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 128, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 130, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 132, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 134, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 136, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 138, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 140, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 142, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 144, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 146, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 148, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 150, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 152, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 154, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 156, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 158, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 160, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 162, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 164, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 166, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 168, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 170, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 172, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 174, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 176, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 178, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 180, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 182, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 184, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 186, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 188, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 190, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 192, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 194, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 196, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 198, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 200, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 202, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 204, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 206, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 208, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 210, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 212, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 214, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset + 216, 2);
    call ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset := #Ultimate.alloc(218);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 0, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 2, 2);
    call write~int(4, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 4, 2);
    call write~int(8, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 6, 2);
    call write~int(20, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 8, 2);
    call write~int(24, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 10, 2);
    call write~int(12, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 12, 2);
    call write~int(80, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 14, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 16, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 18, 2);
    call write~int(16, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 20, 2);
    call write~int(68, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 22, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 24, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 26, 2);
    call write~int(28, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 28, 2);
    call write~int(32, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 30, 2);
    call write~int(36, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 32, 2);
    call write~int(40, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 34, 2);
    call write~int(44, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 36, 2);
    call write~int(48, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 38, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 40, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 42, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 44, 2);
    call write~int(52, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 46, 2);
    call write~int(56, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 48, 2);
    call write~int(60, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 50, 2);
    call write~int(64, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 52, 2);
    call write~int(76, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 54, 2);
    call write~int(352, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 56, 2);
    call write~int(356, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 58, 2);
    call write~int(360, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 60, 2);
    call write~int(364, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 62, 2);
    call write~int(380, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 64, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 66, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 68, 2);
    call write~int(376, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 70, 2);
    call write~int(436, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 72, 2);
    call write~int(440, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 74, 2);
    call write~int(444, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 76, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 78, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 80, 2);
    call write~int(420, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 82, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 84, 2);
    call write~int(452, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 86, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 88, 2);
    call write~int(460, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 90, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 92, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 94, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 96, 2);
    call write~int(368, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 98, 2);
    call write~int(372, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 100, 2);
    call write~int(384, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 102, 2);
    call write~int(388, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 104, 2);
    call write~int(392, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 106, 2);
    call write~int(396, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 108, 2);
    call write~int(404, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 110, 2);
    call write~int(408, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 112, 2);
    call write~int(412, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 114, 2);
    call write~int(416, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 116, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 118, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 120, 2);
    call write~int(424, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 122, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 124, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 126, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 128, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 130, 2);
    call write~int(4, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 132, 2);
    call write~int(16, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 134, 2);
    call write~int(20, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 136, 2);
    call write~int(24, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 138, 2);
    call write~int(32, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 140, 2);
    call write~int(36, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 142, 2);
    call write~int(40, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 144, 2);
    call write~int(44, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 146, 2);
    call write~int(48, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 148, 2);
    call write~int(52, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 150, 2);
    call write~int(56, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 152, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 154, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 156, 2);
    call write~int(64, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 158, 2);
    call write~int(68, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 160, 2);
    call write~int(80, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 162, 2);
    call write~int(84, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 164, 2);
    call write~int(72, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 166, 2);
    call write~int(76, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 168, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 170, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 172, 2);
    call write~int(96, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 174, 2);
    call write~int(100, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 176, 2);
    call write~int(112, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 178, 2);
    call write~int(116, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 180, 2);
    call write~int(120, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 182, 2);
    call write~int(124, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 184, 2);
    call write~int(256, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 186, 2);
    call write~int(260, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 188, 2);
    call write~int(0, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 190, 2);
    call write~int(508, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 192, 2);
    call write~int(128, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 194, 2);
    call write~int(132, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 196, 2);
    call write~int(136, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 198, 2);
    call write~int(140, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 200, 2);
    call write~int(144, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 202, 2);
    call write~int(148, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 204, 2);
    call write~int(160, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 206, 2);
    call write~int(160, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 208, 2);
    call write~int(168, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 210, 2);
    call write~int(172, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 212, 2);
    call write~int(176, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 214, 2);
    call write~int(180, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset + 216, 2);
    call ~#r8a777x_data.base, ~#r8a777x_data.offset := #Ultimate.alloc(114);
    call write~$Pointer$(0, 0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 0, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_duplex.base, #funAddr~sh_eth_set_duplex.offset, ~#r8a777x_data.base, ~#r8a777x_data.offset + 8, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_rate_r8a777x.base, #funAddr~sh_eth_set_rate_r8a777x.offset, ~#r8a777x_data.base, ~#r8a777x_data.offset + 16, 8);
    call write~int(2, ~#r8a777x_data.base, ~#r8a777x_data.offset + 24, 4);
    call write~int(33489055, ~#r8a777x_data.base, ~#r8a777x_data.offset + 28, 8);
    call write~int(21, ~#r8a777x_data.base, ~#r8a777x_data.offset + 36, 8);
    call write~int(21, ~#r8a777x_data.base, ~#r8a777x_data.offset + 44, 8);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 52, 8);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 60, 8);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 68, 8);
    call write~int(2100992, ~#r8a777x_data.base, ~#r8a777x_data.offset + 76, 8);
    call write~int(1197146112, ~#r8a777x_data.base, ~#r8a777x_data.offset + 84, 8);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 92, 8);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 100, 1);
    call write~int(1, ~#r8a777x_data.base, ~#r8a777x_data.offset + 101, 1);
    call write~int(1, ~#r8a777x_data.base, ~#r8a777x_data.offset + 102, 1);
    call write~int(1, ~#r8a777x_data.base, ~#r8a777x_data.offset + 103, 1);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 104, 1);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 105, 1);
    call write~int(1, ~#r8a777x_data.base, ~#r8a777x_data.offset + 106, 1);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 107, 1);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 108, 1);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 109, 1);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 110, 1);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 111, 1);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 112, 1);
    call write~int(0, ~#r8a777x_data.base, ~#r8a777x_data.offset + 113, 1);
    call ~#r8a779x_data.base, ~#r8a779x_data.offset := #Ultimate.alloc(114);
    call write~$Pointer$(0, 0, ~#r8a779x_data.base, ~#r8a779x_data.offset + 0, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_duplex.base, #funAddr~sh_eth_set_duplex.offset, ~#r8a779x_data.base, ~#r8a779x_data.offset + 8, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_rate_r8a777x.base, #funAddr~sh_eth_set_rate_r8a777x.offset, ~#r8a779x_data.base, ~#r8a779x_data.offset + 16, 8);
    call write~int(2, ~#r8a779x_data.base, ~#r8a779x_data.offset + 24, 4);
    call write~int(33489055, ~#r8a779x_data.base, ~#r8a779x_data.offset + 28, 8);
    call write~int(21, ~#r8a779x_data.base, ~#r8a779x_data.offset + 36, 8);
    call write~int(21, ~#r8a779x_data.base, ~#r8a779x_data.offset + 44, 8);
    call write~int(0, ~#r8a779x_data.base, ~#r8a779x_data.offset + 52, 8);
    call write~int(0, ~#r8a779x_data.base, ~#r8a779x_data.offset + 60, 8);
    call write~int(0, ~#r8a779x_data.base, ~#r8a779x_data.offset + 68, 8);
    call write~int(2100992, ~#r8a779x_data.base, ~#r8a779x_data.offset + 76, 8);
    call write~int(1197146112, ~#r8a779x_data.base, ~#r8a779x_data.offset + 84, 8);
    call write~int(0, ~#r8a779x_data.base, ~#r8a779x_data.offset + 92, 8);
    call write~int(0, ~#r8a779x_data.base, ~#r8a779x_data.offset + 100, 1);
    call write~int(1, ~#r8a779x_data.base, ~#r8a779x_data.offset + 101, 1);
    call write~int(1, ~#r8a779x_data.base, ~#r8a779x_data.offset + 102, 1);
    call write~int(1, ~#r8a779x_data.base, ~#r8a779x_data.offset + 103, 1);
    call write~int(0, ~#r8a779x_data.base, ~#r8a779x_data.offset + 104, 1);
    call write~int(0, ~#r8a779x_data.base, ~#r8a779x_data.offset + 105, 1);
    call write~int(1, ~#r8a779x_data.base, ~#r8a779x_data.offset + 106, 1);
    call write~int(0, ~#r8a779x_data.base, ~#r8a779x_data.offset + 107, 1);
    call write~int(0, ~#r8a779x_data.base, ~#r8a779x_data.offset + 108, 1);
    call write~int(0, ~#r8a779x_data.base, ~#r8a779x_data.offset + 109, 1);
    call write~int(0, ~#r8a779x_data.base, ~#r8a779x_data.offset + 110, 1);
    call write~int(0, ~#r8a779x_data.base, ~#r8a779x_data.offset + 111, 1);
    call write~int(1, ~#r8a779x_data.base, ~#r8a779x_data.offset + 112, 1);
    call write~int(1, ~#r8a779x_data.base, ~#r8a779x_data.offset + 113, 1);
    call ~#sh7724_data.base, ~#sh7724_data.offset := #Ultimate.alloc(114);
    call write~$Pointer$(0, 0, ~#sh7724_data.base, ~#sh7724_data.offset + 0, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_duplex.base, #funAddr~sh_eth_set_duplex.offset, ~#sh7724_data.base, ~#sh7724_data.offset + 8, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_rate_sh7724.base, #funAddr~sh_eth_set_rate_sh7724.offset, ~#sh7724_data.base, ~#sh7724_data.offset + 16, 8);
    call write~int(3, ~#sh7724_data.base, ~#sh7724_data.offset + 24, 4);
    call write~int(33489055, ~#sh7724_data.base, ~#sh7724_data.offset + 28, 8);
    call write~int(21, ~#sh7724_data.base, ~#sh7724_data.offset + 36, 8);
    call write~int(21, ~#sh7724_data.base, ~#sh7724_data.offset + 44, 8);
    call write~int(0, ~#sh7724_data.base, ~#sh7724_data.offset + 52, 8);
    call write~int(0, ~#sh7724_data.base, ~#sh7724_data.offset + 60, 8);
    call write~int(131072, ~#sh7724_data.base, ~#sh7724_data.offset + 68, 8);
    call write~int(2100992, ~#sh7724_data.base, ~#sh7724_data.offset + 76, 8);
    call write~int(1197146112, ~#sh7724_data.base, ~#sh7724_data.offset + 84, 8);
    call write~int(0, ~#sh7724_data.base, ~#sh7724_data.offset + 92, 8);
    call write~int(0, ~#sh7724_data.base, ~#sh7724_data.offset + 100, 1);
    call write~int(1, ~#sh7724_data.base, ~#sh7724_data.offset + 101, 1);
    call write~int(1, ~#sh7724_data.base, ~#sh7724_data.offset + 102, 1);
    call write~int(1, ~#sh7724_data.base, ~#sh7724_data.offset + 103, 1);
    call write~int(0, ~#sh7724_data.base, ~#sh7724_data.offset + 104, 1);
    call write~int(0, ~#sh7724_data.base, ~#sh7724_data.offset + 105, 1);
    call write~int(1, ~#sh7724_data.base, ~#sh7724_data.offset + 106, 1);
    call write~int(1, ~#sh7724_data.base, ~#sh7724_data.offset + 107, 1);
    call write~int(0, ~#sh7724_data.base, ~#sh7724_data.offset + 108, 1);
    call write~int(0, ~#sh7724_data.base, ~#sh7724_data.offset + 109, 1);
    call write~int(0, ~#sh7724_data.base, ~#sh7724_data.offset + 110, 1);
    call write~int(0, ~#sh7724_data.base, ~#sh7724_data.offset + 111, 1);
    call write~int(0, ~#sh7724_data.base, ~#sh7724_data.offset + 112, 1);
    call write~int(0, ~#sh7724_data.base, ~#sh7724_data.offset + 113, 1);
    call ~#sh7757_data.base, ~#sh7757_data.offset := #Ultimate.alloc(114);
    call write~$Pointer$(0, 0, ~#sh7757_data.base, ~#sh7757_data.offset + 0, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_duplex.base, #funAddr~sh_eth_set_duplex.offset, ~#sh7757_data.base, ~#sh7757_data.offset + 8, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_rate_sh7757.base, #funAddr~sh_eth_set_rate_sh7757.offset, ~#sh7757_data.base, ~#sh7757_data.offset + 16, 8);
    call write~int(3, ~#sh7757_data.base, ~#sh7757_data.offset + 24, 4);
    call write~int(25165823, ~#sh7757_data.base, ~#sh7757_data.offset + 28, 8);
    call write~int(0, ~#sh7757_data.base, ~#sh7757_data.offset + 36, 8);
    call write~int(0, ~#sh7757_data.base, ~#sh7757_data.offset + 44, 8);
    call write~int(0, ~#sh7757_data.base, ~#sh7757_data.offset + 52, 8);
    call write~int(0, ~#sh7757_data.base, ~#sh7757_data.offset + 60, 8);
    call write~int(131072, ~#sh7757_data.base, ~#sh7757_data.offset + 68, 8);
    call write~int(2100992, ~#sh7757_data.base, ~#sh7757_data.offset + 76, 8);
    call write~int(1197146112, ~#sh7757_data.base, ~#sh7757_data.offset + 84, 8);
    call write~int(128, ~#sh7757_data.base, ~#sh7757_data.offset + 92, 8);
    call write~int(0, ~#sh7757_data.base, ~#sh7757_data.offset + 100, 1);
    call write~int(1, ~#sh7757_data.base, ~#sh7757_data.offset + 101, 1);
    call write~int(1, ~#sh7757_data.base, ~#sh7757_data.offset + 102, 1);
    call write~int(1, ~#sh7757_data.base, ~#sh7757_data.offset + 103, 1);
    call write~int(0, ~#sh7757_data.base, ~#sh7757_data.offset + 104, 1);
    call write~int(0, ~#sh7757_data.base, ~#sh7757_data.offset + 105, 1);
    call write~int(1, ~#sh7757_data.base, ~#sh7757_data.offset + 106, 1);
    call write~int(1, ~#sh7757_data.base, ~#sh7757_data.offset + 107, 1);
    call write~int(0, ~#sh7757_data.base, ~#sh7757_data.offset + 108, 1);
    call write~int(1, ~#sh7757_data.base, ~#sh7757_data.offset + 109, 1);
    call write~int(0, ~#sh7757_data.base, ~#sh7757_data.offset + 110, 1);
    call write~int(0, ~#sh7757_data.base, ~#sh7757_data.offset + 111, 1);
    call write~int(0, ~#sh7757_data.base, ~#sh7757_data.offset + 112, 1);
    call write~int(0, ~#sh7757_data.base, ~#sh7757_data.offset + 113, 1);
    call ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset := #Ultimate.alloc(114);
    call write~$Pointer$(#funAddr~sh_eth_chip_reset_giga.base, #funAddr~sh_eth_chip_reset_giga.offset, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 0, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_duplex.base, #funAddr~sh_eth_set_duplex.offset, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 8, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_rate_giga.base, #funAddr~sh_eth_set_rate_giga.offset, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 16, 8);
    call write~int(0, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 24, 4);
    call write~int(25165823, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 28, 8);
    call write~int(3, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 36, 8);
    call write~int(7, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 44, 8);
    call write~int(1839, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 52, 8);
    call write~int(0, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 60, 8);
    call write~int(131072, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 68, 8);
    call write~int(538968064, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 76, 8);
    call write~int(3344629760, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 84, 8);
    call write~int(128, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 92, 8);
    call write~int(0, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 100, 1);
    call write~int(1, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 101, 1);
    call write~int(1, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 102, 1);
    call write~int(1, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 103, 1);
    call write~int(1, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 104, 1);
    call write~int(1, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 105, 1);
    call write~int(1, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 106, 1);
    call write~int(1, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 107, 1);
    call write~int(1, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 108, 1);
    call write~int(1, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 109, 1);
    call write~int(0, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 110, 1);
    call write~int(0, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 111, 1);
    call write~int(0, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 112, 1);
    call write~int(0, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset + 113, 1);
    call ~#sh7734_data.base, ~#sh7734_data.offset := #Ultimate.alloc(114);
    call write~$Pointer$(#funAddr~sh_eth_chip_reset.base, #funAddr~sh_eth_chip_reset.offset, ~#sh7734_data.base, ~#sh7734_data.offset + 0, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_duplex.base, #funAddr~sh_eth_set_duplex.offset, ~#sh7734_data.base, ~#sh7734_data.offset + 8, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_rate_gether.base, #funAddr~sh_eth_set_rate_gether.offset, ~#sh7734_data.base, ~#sh7734_data.offset + 16, 8);
    call write~int(0, ~#sh7734_data.base, ~#sh7734_data.offset + 24, 4);
    call write~int(25165823, ~#sh7734_data.base, ~#sh7734_data.offset + 28, 8);
    call write~int(3, ~#sh7734_data.base, ~#sh7734_data.offset + 36, 8);
    call write~int(7, ~#sh7734_data.base, ~#sh7734_data.offset + 44, 8);
    call write~int(0, ~#sh7734_data.base, ~#sh7734_data.offset + 52, 8);
    call write~int(0, ~#sh7734_data.base, ~#sh7734_data.offset + 60, 8);
    call write~int(0, ~#sh7734_data.base, ~#sh7734_data.offset + 68, 8);
    call write~int(538968064, ~#sh7734_data.base, ~#sh7734_data.offset + 76, 8);
    call write~int(3344629760, ~#sh7734_data.base, ~#sh7734_data.offset + 84, 8);
    call write~int(0, ~#sh7734_data.base, ~#sh7734_data.offset + 92, 8);
    call write~int(0, ~#sh7734_data.base, ~#sh7734_data.offset + 100, 1);
    call write~int(1, ~#sh7734_data.base, ~#sh7734_data.offset + 101, 1);
    call write~int(1, ~#sh7734_data.base, ~#sh7734_data.offset + 102, 1);
    call write~int(1, ~#sh7734_data.base, ~#sh7734_data.offset + 103, 1);
    call write~int(1, ~#sh7734_data.base, ~#sh7734_data.offset + 104, 1);
    call write~int(1, ~#sh7734_data.base, ~#sh7734_data.offset + 105, 1);
    call write~int(1, ~#sh7734_data.base, ~#sh7734_data.offset + 106, 1);
    call write~int(0, ~#sh7734_data.base, ~#sh7734_data.offset + 107, 1);
    call write~int(1, ~#sh7734_data.base, ~#sh7734_data.offset + 108, 1);
    call write~int(1, ~#sh7734_data.base, ~#sh7734_data.offset + 109, 1);
    call write~int(1, ~#sh7734_data.base, ~#sh7734_data.offset + 110, 1);
    call write~int(1, ~#sh7734_data.base, ~#sh7734_data.offset + 111, 1);
    call write~int(0, ~#sh7734_data.base, ~#sh7734_data.offset + 112, 1);
    call write~int(0, ~#sh7734_data.base, ~#sh7734_data.offset + 113, 1);
    call ~#sh7763_data.base, ~#sh7763_data.offset := #Ultimate.alloc(114);
    call write~$Pointer$(#funAddr~sh_eth_chip_reset.base, #funAddr~sh_eth_chip_reset.offset, ~#sh7763_data.base, ~#sh7763_data.offset + 0, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_duplex.base, #funAddr~sh_eth_set_duplex.offset, ~#sh7763_data.base, ~#sh7763_data.offset + 8, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_rate_gether.base, #funAddr~sh_eth_set_rate_gether.offset, ~#sh7763_data.base, ~#sh7763_data.offset + 16, 8);
    call write~int(0, ~#sh7763_data.base, ~#sh7763_data.offset + 24, 4);
    call write~int(25165823, ~#sh7763_data.base, ~#sh7763_data.offset + 28, 8);
    call write~int(3, ~#sh7763_data.base, ~#sh7763_data.offset + 36, 8);
    call write~int(7, ~#sh7763_data.base, ~#sh7763_data.offset + 44, 8);
    call write~int(0, ~#sh7763_data.base, ~#sh7763_data.offset + 52, 8);
    call write~int(0, ~#sh7763_data.base, ~#sh7763_data.offset + 60, 8);
    call write~int(0, ~#sh7763_data.base, ~#sh7763_data.offset + 68, 8);
    call write~int(538968064, ~#sh7763_data.base, ~#sh7763_data.offset + 76, 8);
    call write~int(3344564224, ~#sh7763_data.base, ~#sh7763_data.offset + 84, 8);
    call write~int(128, ~#sh7763_data.base, ~#sh7763_data.offset + 92, 8);
    call write~int(0, ~#sh7763_data.base, ~#sh7763_data.offset + 100, 1);
    call write~int(1, ~#sh7763_data.base, ~#sh7763_data.offset + 101, 1);
    call write~int(1, ~#sh7763_data.base, ~#sh7763_data.offset + 102, 1);
    call write~int(1, ~#sh7763_data.base, ~#sh7763_data.offset + 103, 1);
    call write~int(1, ~#sh7763_data.base, ~#sh7763_data.offset + 104, 1);
    call write~int(1, ~#sh7763_data.base, ~#sh7763_data.offset + 105, 1);
    call write~int(1, ~#sh7763_data.base, ~#sh7763_data.offset + 106, 1);
    call write~int(0, ~#sh7763_data.base, ~#sh7763_data.offset + 107, 1);
    call write~int(1, ~#sh7763_data.base, ~#sh7763_data.offset + 108, 1);
    call write~int(1, ~#sh7763_data.base, ~#sh7763_data.offset + 109, 1);
    call write~int(0, ~#sh7763_data.base, ~#sh7763_data.offset + 110, 1);
    call write~int(0, ~#sh7763_data.base, ~#sh7763_data.offset + 111, 1);
    call write~int(0, ~#sh7763_data.base, ~#sh7763_data.offset + 112, 1);
    call write~int(0, ~#sh7763_data.base, ~#sh7763_data.offset + 113, 1);
    call ~#r8a7740_data.base, ~#r8a7740_data.offset := #Ultimate.alloc(114);
    call write~$Pointer$(#funAddr~sh_eth_chip_reset_r8a7740.base, #funAddr~sh_eth_chip_reset_r8a7740.offset, ~#r8a7740_data.base, ~#r8a7740_data.offset + 0, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_duplex.base, #funAddr~sh_eth_set_duplex.offset, ~#r8a7740_data.base, ~#r8a7740_data.offset + 8, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_rate_gether.base, #funAddr~sh_eth_set_rate_gether.offset, ~#r8a7740_data.base, ~#r8a7740_data.offset + 16, 8);
    call write~int(0, ~#r8a7740_data.base, ~#r8a7740_data.offset + 24, 4);
    call write~int(25165823, ~#r8a7740_data.base, ~#r8a7740_data.offset + 28, 8);
    call write~int(3, ~#r8a7740_data.base, ~#r8a7740_data.offset + 36, 8);
    call write~int(7, ~#r8a7740_data.base, ~#r8a7740_data.offset + 44, 8);
    call write~int(1807, ~#r8a7740_data.base, ~#r8a7740_data.offset + 52, 8);
    call write~int(0, ~#r8a7740_data.base, ~#r8a7740_data.offset + 60, 8);
    call write~int(131072, ~#r8a7740_data.base, ~#r8a7740_data.offset + 68, 8);
    call write~int(538968064, ~#r8a7740_data.base, ~#r8a7740_data.offset + 76, 8);
    call write~int(3344629760, ~#r8a7740_data.base, ~#r8a7740_data.offset + 84, 8);
    call write~int(0, ~#r8a7740_data.base, ~#r8a7740_data.offset + 92, 8);
    call write~int(0, ~#r8a7740_data.base, ~#r8a7740_data.offset + 100, 1);
    call write~int(1, ~#r8a7740_data.base, ~#r8a7740_data.offset + 101, 1);
    call write~int(1, ~#r8a7740_data.base, ~#r8a7740_data.offset + 102, 1);
    call write~int(1, ~#r8a7740_data.base, ~#r8a7740_data.offset + 103, 1);
    call write~int(1, ~#r8a7740_data.base, ~#r8a7740_data.offset + 104, 1);
    call write~int(1, ~#r8a7740_data.base, ~#r8a7740_data.offset + 105, 1);
    call write~int(1, ~#r8a7740_data.base, ~#r8a7740_data.offset + 106, 1);
    call write~int(1, ~#r8a7740_data.base, ~#r8a7740_data.offset + 107, 1);
    call write~int(1, ~#r8a7740_data.base, ~#r8a7740_data.offset + 108, 1);
    call write~int(1, ~#r8a7740_data.base, ~#r8a7740_data.offset + 109, 1);
    call write~int(0, ~#r8a7740_data.base, ~#r8a7740_data.offset + 110, 1);
    call write~int(1, ~#r8a7740_data.base, ~#r8a7740_data.offset + 111, 1);
    call write~int(1, ~#r8a7740_data.base, ~#r8a7740_data.offset + 112, 1);
    call write~int(0, ~#r8a7740_data.base, ~#r8a7740_data.offset + 113, 1);
    call ~#r7s72100_data.base, ~#r7s72100_data.offset := #Ultimate.alloc(114);
    call write~$Pointer$(#funAddr~sh_eth_chip_reset.base, #funAddr~sh_eth_chip_reset.offset, ~#r7s72100_data.base, ~#r7s72100_data.offset + 0, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_duplex.base, #funAddr~sh_eth_set_duplex.offset, ~#r7s72100_data.base, ~#r7s72100_data.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#r7s72100_data.base, ~#r7s72100_data.offset + 16, 8);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 24, 4);
    call write~int(4286513311, ~#r7s72100_data.base, ~#r7s72100_data.offset + 28, 8);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 36, 8);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 44, 8);
    call write~int(1807, ~#r7s72100_data.base, ~#r7s72100_data.offset + 52, 8);
    call write~int(0, ~#r7s72100_data.base, ~#r7s72100_data.offset + 60, 8);
    call write~int(131072, ~#r7s72100_data.base, ~#r7s72100_data.offset + 68, 8);
    call write~int(538968064, ~#r7s72100_data.base, ~#r7s72100_data.offset + 76, 8);
    call write~int(3344629760, ~#r7s72100_data.base, ~#r7s72100_data.offset + 84, 8);
    call write~int(0, ~#r7s72100_data.base, ~#r7s72100_data.offset + 92, 8);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 100, 1);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 101, 1);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 102, 1);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 103, 1);
    call write~int(0, ~#r7s72100_data.base, ~#r7s72100_data.offset + 104, 1);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 105, 1);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 106, 1);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 107, 1);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 108, 1);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 109, 1);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 110, 1);
    call write~int(0, ~#r7s72100_data.base, ~#r7s72100_data.offset + 111, 1);
    call write~int(1, ~#r7s72100_data.base, ~#r7s72100_data.offset + 112, 1);
    call write~int(0, ~#r7s72100_data.base, ~#r7s72100_data.offset + 113, 1);
    call ~#sh7619_data.base, ~#sh7619_data.offset := #Ultimate.alloc(114);
    call write~$Pointer$(0, 0, ~#sh7619_data.base, ~#sh7619_data.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#sh7619_data.base, ~#sh7619_data.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#sh7619_data.base, ~#sh7619_data.offset + 16, 8);
    call write~int(4, ~#sh7619_data.base, ~#sh7619_data.offset + 24, 4);
    call write~int(25165823, ~#sh7619_data.base, ~#sh7619_data.offset + 28, 8);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 36, 8);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 44, 8);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 52, 8);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 60, 8);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 68, 8);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 76, 8);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 84, 8);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 92, 8);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 100, 1);
    call write~int(1, ~#sh7619_data.base, ~#sh7619_data.offset + 101, 1);
    call write~int(1, ~#sh7619_data.base, ~#sh7619_data.offset + 102, 1);
    call write~int(1, ~#sh7619_data.base, ~#sh7619_data.offset + 103, 1);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 104, 1);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 105, 1);
    call write~int(1, ~#sh7619_data.base, ~#sh7619_data.offset + 106, 1);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 107, 1);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 108, 1);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 109, 1);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 110, 1);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 111, 1);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 112, 1);
    call write~int(0, ~#sh7619_data.base, ~#sh7619_data.offset + 113, 1);
    call ~#sh771x_data.base, ~#sh771x_data.offset := #Ultimate.alloc(114);
    call write~$Pointer$(0, 0, ~#sh771x_data.base, ~#sh771x_data.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#sh771x_data.base, ~#sh771x_data.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#sh771x_data.base, ~#sh771x_data.offset + 16, 8);
    call write~int(4, ~#sh771x_data.base, ~#sh771x_data.offset + 24, 4);
    call write~int(25165823, ~#sh771x_data.base, ~#sh771x_data.offset + 28, 8);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 36, 8);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 44, 8);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 52, 8);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 60, 8);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 68, 8);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 76, 8);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 84, 8);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 92, 8);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 100, 1);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 101, 1);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 102, 1);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 103, 1);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 104, 1);
    call write~int(1, ~#sh771x_data.base, ~#sh771x_data.offset + 105, 1);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 106, 1);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 107, 1);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 108, 1);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 109, 1);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 110, 1);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 111, 1);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 112, 1);
    call write~int(0, ~#sh771x_data.base, ~#sh771x_data.offset + 113, 1);
    call ~#bb_ops.base, ~#bb_ops.offset := #Ultimate.alloc(40);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#bb_ops.base, ~#bb_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~sh_mdc_ctrl.base, #funAddr~sh_mdc_ctrl.offset, ~#bb_ops.base, ~#bb_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~sh_mmd_ctrl.base, #funAddr~sh_mmd_ctrl.offset, ~#bb_ops.base, ~#bb_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~sh_set_mdio.base, #funAddr~sh_set_mdio.offset, ~#bb_ops.base, ~#bb_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~sh_get_mdio.base, #funAddr~sh_get_mdio.offset, ~#bb_ops.base, ~#bb_ops.offset + 32, 8);
    call ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset := #Ultimate.alloc(376);
    call write~$Pointer$(#funAddr~sh_eth_get_settings.base, #funAddr~sh_eth_get_settings.offset, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_settings.base, #funAddr~sh_eth_set_settings.offset, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~sh_eth_get_msglevel.base, #funAddr~sh_eth_get_msglevel.offset, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_msglevel.base, #funAddr~sh_eth_set_msglevel.offset, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 64, 8);
    call write~$Pointer$(#funAddr~sh_eth_nway_reset.base, #funAddr~sh_eth_nway_reset.offset, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 72, 8);
    call write~$Pointer$(#funAddr~ethtool_op_get_link.base, #funAddr~ethtool_op_get_link.offset, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 120, 8);
    call write~$Pointer$(#funAddr~sh_eth_get_ringparam.base, #funAddr~sh_eth_get_ringparam.offset, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 128, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_ringparam.base, #funAddr~sh_eth_set_ringparam.offset, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 160, 8);
    call write~$Pointer$(#funAddr~sh_eth_get_strings.base, #funAddr~sh_eth_get_strings.offset, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 176, 8);
    call write~$Pointer$(#funAddr~sh_eth_get_ethtool_stats.base, #funAddr~sh_eth_get_ethtool_stats.offset, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 216, 8);
    call write~$Pointer$(#funAddr~sh_eth_get_sset_count.base, #funAddr~sh_eth_get_sset_count.offset, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset + 368, 8);
    call ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset := #Ultimate.alloc(480);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~sh_eth_open.base, #funAddr~sh_eth_open.offset, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~sh_eth_close.base, #funAddr~sh_eth_close.offset, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~sh_eth_start_xmit.base, #funAddr~sh_eth_start_xmit.offset, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~eth_mac_addr.base, #funAddr~eth_mac_addr.offset, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 64, 8);
    call write~$Pointer$(#funAddr~eth_validate_addr.base, #funAddr~eth_validate_addr.offset, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 72, 8);
    call write~$Pointer$(#funAddr~sh_eth_do_ioctl.base, #funAddr~sh_eth_do_ioctl.offset, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 88, 8);
    call write~$Pointer$(#funAddr~eth_change_mtu.base, #funAddr~eth_change_mtu.offset, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 104, 8);
    call write~$Pointer$(#funAddr~sh_eth_tx_timeout.base, #funAddr~sh_eth_tx_timeout.offset, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 120, 8);
    call write~$Pointer$(#funAddr~sh_eth_get_stats.base, #funAddr~sh_eth_get_stats.offset, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 408, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 416, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 424, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 432, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 440, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 448, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 464, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset + 472, 8);
    call ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset := #Ultimate.alloc(480);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 8, 8);
    call write~$Pointer$(#funAddr~sh_eth_open.base, #funAddr~sh_eth_open.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 16, 8);
    call write~$Pointer$(#funAddr~sh_eth_close.base, #funAddr~sh_eth_close.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 24, 8);
    call write~$Pointer$(#funAddr~sh_eth_start_xmit.base, #funAddr~sh_eth_start_xmit.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 48, 8);
    call write~$Pointer$(#funAddr~sh_eth_set_multicast_list.base, #funAddr~sh_eth_set_multicast_list.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 56, 8);
    call write~$Pointer$(#funAddr~eth_mac_addr.base, #funAddr~eth_mac_addr.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 64, 8);
    call write~$Pointer$(#funAddr~eth_validate_addr.base, #funAddr~eth_validate_addr.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 72, 8);
    call write~$Pointer$(#funAddr~sh_eth_do_ioctl.base, #funAddr~sh_eth_do_ioctl.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 88, 8);
    call write~$Pointer$(#funAddr~eth_change_mtu.base, #funAddr~eth_change_mtu.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 104, 8);
    call write~$Pointer$(#funAddr~sh_eth_tx_timeout.base, #funAddr~sh_eth_tx_timeout.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 120, 8);
    call write~$Pointer$(#funAddr~sh_eth_get_stats.base, #funAddr~sh_eth_get_stats.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 128, 8);
    call write~$Pointer$(#funAddr~sh_eth_vlan_rx_add_vid.base, #funAddr~sh_eth_vlan_rx_add_vid.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 136, 8);
    call write~$Pointer$(#funAddr~sh_eth_vlan_rx_kill_vid.base, #funAddr~sh_eth_vlan_rx_kill_vid.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 408, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 416, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 424, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 432, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 440, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 448, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 464, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset + 472, 8);
    call ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset := #Ultimate.alloc(184);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 152, 8);
    call write~$Pointer$(#funAddr~sh_eth_runtime_nop.base, #funAddr~sh_eth_runtime_nop.offset, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 160, 8);
    call write~$Pointer$(#funAddr~sh_eth_runtime_nop.base, #funAddr~sh_eth_runtime_nop.offset, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset + 176, 8);
    call ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset := #Ultimate.alloc(364);
    call write~int(115, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 0, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 1, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 2, 1);
    call write~int(54, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 3, 1);
    call write~int(49, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 4, 1);
    call write~int(57, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 5, 1);
    call write~int(45, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 6, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 7, 1);
    call write~int(116, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 8, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 9, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 10, 1);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 11, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 12, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 13, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 14, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 15, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 16, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 17, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 18, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 0 + 19, 1);
    call write~int(~#sh7619_data.base + ~#sh7619_data.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 0 + 20, 8);
    call write~int(115, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 0, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 1, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 2, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 3, 1);
    call write~int(49, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 4, 1);
    call write~int(120, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 5, 1);
    call write~int(45, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 6, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 7, 1);
    call write~int(116, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 8, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 9, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 10, 1);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 11, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 12, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 13, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 14, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 15, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 16, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 17, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 18, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 0 + 19, 1);
    call write~int(~#sh771x_data.base + ~#sh771x_data.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 28 + 20, 8);
    call write~int(115, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 0, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 1, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 2, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 3, 1);
    call write~int(50, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 4, 1);
    call write~int(52, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 5, 1);
    call write~int(45, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 6, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 7, 1);
    call write~int(116, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 8, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 9, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 10, 1);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 11, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 12, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 13, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 14, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 15, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 16, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 17, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 18, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 0 + 19, 1);
    call write~int(~#sh7724_data.base + ~#sh7724_data.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 56 + 20, 8);
    call write~int(115, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 0, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 1, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 2, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 3, 1);
    call write~int(51, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 4, 1);
    call write~int(52, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 5, 1);
    call write~int(45, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 6, 1);
    call write~int(103, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 7, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 8, 1);
    call write~int(116, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 9, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 10, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 11, 1);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 12, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 13, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 14, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 15, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 16, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 17, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 18, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 0 + 19, 1);
    call write~int(~#sh7734_data.base + ~#sh7734_data.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 84 + 20, 8);
    call write~int(115, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 0, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 1, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 2, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 3, 1);
    call write~int(53, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 4, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 5, 1);
    call write~int(45, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 6, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 7, 1);
    call write~int(116, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 8, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 9, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 10, 1);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 11, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 12, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 13, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 14, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 15, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 16, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 17, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 18, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 0 + 19, 1);
    call write~int(~#sh7757_data.base + ~#sh7757_data.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 112 + 20, 8);
    call write~int(115, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 0, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 1, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 2, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 3, 1);
    call write~int(53, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 4, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 5, 1);
    call write~int(45, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 6, 1);
    call write~int(103, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 7, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 8, 1);
    call write~int(116, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 9, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 10, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 11, 1);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 12, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 13, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 14, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 15, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 16, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 17, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 18, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 0 + 19, 1);
    call write~int(~#sh7757_data_giga.base + ~#sh7757_data_giga.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 140 + 20, 8);
    call write~int(115, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 0, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 1, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 2, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 3, 1);
    call write~int(54, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 4, 1);
    call write~int(51, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 5, 1);
    call write~int(45, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 6, 1);
    call write~int(103, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 7, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 8, 1);
    call write~int(116, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 9, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 10, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 11, 1);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 12, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 13, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 14, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 15, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 16, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 17, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 18, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 0 + 19, 1);
    call write~int(~#sh7763_data.base + ~#sh7763_data.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 168 + 20, 8);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 0, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 1, 1);
    call write~int(115, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 2, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 3, 1);
    call write~int(50, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 4, 1);
    call write~int(49, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 5, 1);
    call write~int(48, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 6, 1);
    call write~int(48, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 7, 1);
    call write~int(45, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 8, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 9, 1);
    call write~int(116, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 10, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 11, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 12, 1);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 13, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 14, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 15, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 16, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 17, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 18, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 0 + 19, 1);
    call write~int(~#r7s72100_data.base + ~#r7s72100_data.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 196 + 20, 8);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 0, 1);
    call write~int(56, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 1, 1);
    call write~int(97, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 2, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 3, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 4, 1);
    call write~int(52, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 5, 1);
    call write~int(48, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 6, 1);
    call write~int(45, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 7, 1);
    call write~int(103, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 8, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 9, 1);
    call write~int(116, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 10, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 11, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 12, 1);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 13, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 14, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 15, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 16, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 17, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 18, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 0 + 19, 1);
    call write~int(~#r8a7740_data.base + ~#r8a7740_data.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 224 + 20, 8);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 0, 1);
    call write~int(56, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 1, 1);
    call write~int(97, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 2, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 3, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 4, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 5, 1);
    call write~int(120, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 6, 1);
    call write~int(45, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 7, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 8, 1);
    call write~int(116, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 9, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 10, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 11, 1);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 12, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 13, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 14, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 15, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 16, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 17, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 18, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 0 + 19, 1);
    call write~int(~#r8a777x_data.base + ~#r8a777x_data.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 252 + 20, 8);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 0, 1);
    call write~int(56, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 1, 1);
    call write~int(97, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 2, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 3, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 4, 1);
    call write~int(57, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 5, 1);
    call write~int(48, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 6, 1);
    call write~int(45, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 7, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 8, 1);
    call write~int(116, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 9, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 10, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 11, 1);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 12, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 13, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 14, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 15, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 16, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 17, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 18, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 0 + 19, 1);
    call write~int(~#r8a779x_data.base + ~#r8a779x_data.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 280 + 20, 8);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 0, 1);
    call write~int(56, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 1, 1);
    call write~int(97, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 2, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 3, 1);
    call write~int(55, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 4, 1);
    call write~int(57, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 5, 1);
    call write~int(49, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 6, 1);
    call write~int(45, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 7, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 8, 1);
    call write~int(116, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 9, 1);
    call write~int(104, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 10, 1);
    call write~int(101, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 11, 1);
    call write~int(114, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 12, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 13, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 14, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 15, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 16, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 17, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 18, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 0 + 19, 1);
    call write~int(~#r8a779x_data.base + ~#r8a779x_data.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 308 + 20, 8);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 0, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 1, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 2, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 3, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 4, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 5, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 6, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 7, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 8, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 9, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 10, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 11, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 12, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 13, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 14, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 15, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 16, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 17, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 18, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 0 + 19, 1);
    call write~int(0, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset + 336 + 20, 8);
    call ~#sh_eth_driver.base, ~#sh_eth_driver.offset := #Ultimate.alloc(162);
    call write~$Pointer$(#funAddr~sh_eth_drv_probe.base, #funAddr~sh_eth_drv_probe.offset, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 0, 8);
    call write~$Pointer$(#funAddr~sh_eth_drv_remove.base, #funAddr~sh_eth_drv_remove.offset, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 32, 8);
    call #t~nondet1309.base, #t~nondet1309.offset := #Ultimate.alloc(7);
    #memory_int := #memory_int[#t~nondet1309.base,#t~nondet1309.offset + 0 := 115];
    #memory_int := #memory_int[#t~nondet1309.base,#t~nondet1309.offset + 1 := 104];
    #memory_int := #memory_int[#t~nondet1309.base,#t~nondet1309.offset + 2 := 45];
    #memory_int := #memory_int[#t~nondet1309.base,#t~nondet1309.offset + 3 := 101];
    #memory_int := #memory_int[#t~nondet1309.base,#t~nondet1309.offset + 4 := 116];
    #memory_int := #memory_int[#t~nondet1309.base,#t~nondet1309.offset + 5 := 104];
    #memory_int := #memory_int[#t~nondet1309.base,#t~nondet1309.offset + 6 := 0];
    call write~$Pointer$(#t~nondet1309.base, #t~nondet1309.offset, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 0, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 8, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 16, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 24, 8);
    call write~int(0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 32, 1);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 33, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 41, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 49, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 57, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 65, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 73, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 81, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 89, 8);
    call write~$Pointer$(~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 97, 8);
    call write~$Pointer$(0, 0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 40 + 105, 8);
    call write~$Pointer$(~#sh_eth_id_table.base, ~#sh_eth_id_table.offset, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 153, 8);
    call write~int(0, ~#sh_eth_driver.base, ~#sh_eth_driver.offset + 161, 1);
    havoc #t~nondet1309.base, #t~nondet1309.offset;
    call ~#set_impl.base, ~#set_impl.offset := #Ultimate.alloc(120);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 112, 8);
    ~LDV_SKBS.base, ~LDV_SKBS.offset := 0, 0;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_8, ~ldv_state_variable_15, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_state_variable_13, ~ldv_state_variable_12, ~ldv_state_variable_14, ~ldv_state_variable_9, ~ref_cnt, ~ldv_irq_line_1_1, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_irq_line_1_2, ~ldv_irq_1_3, ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset, ~ldv_state_variable_10, ~ldv_irq_1_0, ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset, ~ldv_state_variable_6, ~ldv_state_variable_16, ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset, ~ldv_state_variable_2, ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset, ~ldv_state_variable_11, ~ldv_irq_1_2, ~LDV_IN_INTERRUPT, ~ldv_irq_1_1, ~ldv_irq_line_1_3, ~ldv_state_variable_3, ~ldv_irq_line_1_0, ~ldv_state_variable_4, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset, ~ldv_retval_2, ~ldv_retval_5, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_6, ~ldv_retval_1, ~ldv_retval_3, ~ldv_retval_7, ~last_index, ~sh_eth_ethtool_ops_group2.base, ~sh_eth_ethtool_ops_group2.offset, ~sh_eth_dev_pm_ops_group1.base, ~sh_eth_dev_pm_ops_group1.offset, ~sh_eth_netdev_ops_group1.base, ~sh_eth_netdev_ops_group1.offset, ~sh7763_data_group0.base, ~sh7763_data_group0.offset, ~bb_ops_group0.base, ~bb_ops_group0.offset, ~r8a777x_data_group0.base, ~r8a777x_data_group0.offset, ~sh7734_data_group0.base, ~sh7734_data_group0.offset, ~sh7724_data_group0.base, ~sh7724_data_group0.offset, ~sh7757_data_group0.base, ~sh7757_data_group0.offset, ~sh_eth_driver_group0.base, ~sh_eth_driver_group0.offset, ~r8a7740_data_group0.base, ~r8a7740_data_group0.offset, ~r8a779x_data_group0.base, ~r8a779x_data_group0.offset, ~sh7757_data_giga_group0.base, ~sh7757_data_giga_group0.offset, ~sh_eth_netdev_ops_tsu_group1.base, ~sh_eth_netdev_ops_tsu_group1.offset, ~r7s72100_data_group0.base, ~r7s72100_data_group0.offset, ~sh_eth_ethtool_ops_group1.base, ~sh_eth_ethtool_ops_group1.offset, ~sh_eth_ethtool_ops_group0.base, ~sh_eth_ethtool_ops_group0.offset, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset, ~#r8a777x_data.base, ~#r8a777x_data.offset, ~#r8a779x_data.base, ~#r8a779x_data.offset, ~#sh7724_data.base, ~#sh7724_data.offset, ~#sh7757_data.base, ~#sh7757_data.offset, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset, ~#sh7734_data.base, ~#sh7734_data.offset, ~#sh7763_data.base, ~#sh7763_data.offset, ~#r8a7740_data.base, ~#r8a7740_data.offset, ~#r7s72100_data.base, ~#r7s72100_data.offset, ~#sh7619_data.base, ~#sh7619_data.offset, ~#sh771x_data.base, ~#sh771x_data.offset, ~#bb_ops.base, ~#bb_ops.offset, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset, ~#sh_eth_driver.base, ~#sh_eth_driver.offset, ~#set_impl.base, ~#set_impl.offset, ~LDV_SKBS.base, ~LDV_SKBS.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_error() returns (){
  loc7:
    assume !false;
    goto loc8;
  loc8:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation ldv_check_final_state() returns (){
    var #t~ret1470 : int;
    var ~tmp___7~1425 : int;

  loc9:
    havoc ~tmp___7~1425;
    call #t~ret1470 := ldv_set_is_empty(~LDV_SKBS.base, ~LDV_SKBS.offset);
    assume -2147483648 <= #t~ret1470 && #t~ret1470 <= 2147483647;
    ~tmp___7~1425 := #t~ret1470;
    havoc #t~ret1470;
    assume !(~tmp___7~1425 != 0);
    call ldv_error();
    return;
}

procedure ldv_check_final_state() returns ();
modifies ;

implementation ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~nondet159 : int;
    var #t~malloc160.base : int, #t~malloc160.offset : int;
    var ~size : int;
    var ~p~159.base : int, ~p~159.offset : int;
    var ~tmp~159.base : int, ~tmp~159.offset : int;
    var ~tmp___0~159 : int;

  loc10:
    ~size := #in~size;
    havoc ~p~159.base, ~p~159.offset;
    havoc ~tmp~159.base, ~tmp~159.offset;
    havoc ~tmp___0~159;
    assume -2147483648 <= #t~nondet159 && #t~nondet159 <= 2147483647;
    ~tmp___0~159 := #t~nondet159;
    havoc #t~nondet159;
    assume ~tmp___0~159 != 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ldv_initialize_platform_driver_2() returns (){
    var #t~ret1313.base : int, #t~ret1313.offset : int;
    var ~tmp~1032.base : int, ~tmp~1032.offset : int;

  loc11:
    havoc ~tmp~1032.base, ~tmp~1032.offset;
    call #t~ret1313.base, #t~ret1313.offset := ldv_zalloc(1464);
    ~tmp~1032.base, ~tmp~1032.offset := #t~ret1313.base, #t~ret1313.offset;
    havoc #t~ret1313.base, #t~ret1313.offset;
    ~sh_eth_driver_group0.base, ~sh_eth_driver_group0.offset := ~tmp~1032.base, ~tmp~1032.offset;
    assume true;
    return;
}

procedure ldv_initialize_platform_driver_2() returns ();
modifies ~sh_eth_driver_group0.base, ~sh_eth_driver_group0.offset, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ULTIMATE.start() returns (){
    var #t~ret1471 : int;

  loc12:
    call ULTIMATE.init();
    call #t~ret1471 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_8, ~ldv_state_variable_15, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_state_variable_13, ~ldv_state_variable_12, ~ldv_state_variable_14, ~ldv_state_variable_9, ~ref_cnt, ~ldv_irq_line_1_1, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_irq_line_1_2, ~ldv_irq_1_3, ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset, ~ldv_state_variable_10, ~ldv_irq_1_0, ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset, ~ldv_state_variable_6, ~ldv_state_variable_16, ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset, ~ldv_state_variable_2, ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset, ~ldv_state_variable_11, ~ldv_irq_1_2, ~LDV_IN_INTERRUPT, ~ldv_irq_1_1, ~ldv_irq_line_1_3, ~ldv_state_variable_3, ~ldv_irq_line_1_0, ~ldv_state_variable_4, ~#sh_eth_gstrings_stats.base, ~#sh_eth_gstrings_stats.offset, ~ldv_retval_2, ~ldv_retval_5, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_6, ~ldv_retval_1, ~ldv_retval_3, ~ldv_retval_7, ~last_index, ~sh_eth_ethtool_ops_group2.base, ~sh_eth_ethtool_ops_group2.offset, ~sh_eth_dev_pm_ops_group1.base, ~sh_eth_dev_pm_ops_group1.offset, ~sh_eth_netdev_ops_group1.base, ~sh_eth_netdev_ops_group1.offset, ~sh7763_data_group0.base, ~sh7763_data_group0.offset, ~bb_ops_group0.base, ~bb_ops_group0.offset, ~r8a777x_data_group0.base, ~r8a777x_data_group0.offset, ~sh7734_data_group0.base, ~sh7734_data_group0.offset, ~sh7724_data_group0.base, ~sh7724_data_group0.offset, ~sh7757_data_group0.base, ~sh7757_data_group0.offset, ~sh_eth_driver_group0.base, ~sh_eth_driver_group0.offset, ~r8a7740_data_group0.base, ~r8a7740_data_group0.offset, ~r8a779x_data_group0.base, ~r8a779x_data_group0.offset, ~sh7757_data_giga_group0.base, ~sh7757_data_giga_group0.offset, ~sh_eth_netdev_ops_tsu_group1.base, ~sh_eth_netdev_ops_tsu_group1.offset, ~r7s72100_data_group0.base, ~r7s72100_data_group0.offset, ~sh_eth_ethtool_ops_group1.base, ~sh_eth_ethtool_ops_group1.offset, ~sh_eth_ethtool_ops_group0.base, ~sh_eth_ethtool_ops_group0.offset, ~#sh_eth_offset_gigabit.base, ~#sh_eth_offset_gigabit.offset, ~#sh_eth_offset_fast_rz.base, ~#sh_eth_offset_fast_rz.offset, ~#sh_eth_offset_fast_rcar.base, ~#sh_eth_offset_fast_rcar.offset, ~#sh_eth_offset_fast_sh4.base, ~#sh_eth_offset_fast_sh4.offset, ~#sh_eth_offset_fast_sh3_sh2.base, ~#sh_eth_offset_fast_sh3_sh2.offset, ~#r8a777x_data.base, ~#r8a777x_data.offset, ~#r8a779x_data.base, ~#r8a779x_data.offset, ~#sh7724_data.base, ~#sh7724_data.offset, ~#sh7757_data.base, ~#sh7757_data.offset, ~#sh7757_data_giga.base, ~#sh7757_data_giga.offset, ~#sh7734_data.base, ~#sh7734_data.offset, ~#sh7763_data.base, ~#sh7763_data.offset, ~#r8a7740_data.base, ~#r8a7740_data.offset, ~#r7s72100_data.base, ~#r7s72100_data.offset, ~#sh7619_data.base, ~#sh7619_data.offset, ~#sh771x_data.base, ~#sh771x_data.offset, ~#bb_ops.base, ~#bb_ops.offset, ~#sh_eth_ethtool_ops.base, ~#sh_eth_ethtool_ops.offset, ~#sh_eth_netdev_ops.base, ~#sh_eth_netdev_ops.offset, ~#sh_eth_netdev_ops_tsu.base, ~#sh_eth_netdev_ops_tsu.offset, ~#sh_eth_dev_pm_ops.base, ~#sh_eth_dev_pm_ops.offset, ~#sh_eth_id_table.base, ~#sh_eth_id_table.offset, ~#sh_eth_driver.base, ~#sh_eth_driver.offset, ~#set_impl.base, ~#set_impl.offset, ~LDV_SKBS.base, ~LDV_SKBS.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_state_variable_11, ~ldv_state_variable_7, ~ldv_state_variable_2, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_16, ~ldv_state_variable_13, ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_9, ~ldv_state_variable_12, ~ldv_state_variable_14, ~ldv_state_variable_15, ~ldv_state_variable_8, ~ldv_state_variable_4, ~ldv_state_variable_10, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_1, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_5, ~ldv_retval_4, ~ldv_retval_7, ~ldv_retval_6;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~last_index, ~sh7757_data_group0.base, ~sh7757_data_group0.offset, ~sh7734_data_group0.base, ~sh7734_data_group0.offset, ~sh7763_data_group0.base, ~sh7763_data_group0.offset, ~sh_eth_ethtool_ops_group0.base, ~sh_eth_ethtool_ops_group0.offset, ~sh_eth_ethtool_ops_group1.base, ~sh_eth_ethtool_ops_group1.offset, ~sh_eth_ethtool_ops_group2.base, ~sh_eth_ethtool_ops_group2.offset, ~r8a7740_data_group0.base, ~r8a7740_data_group0.offset, ~bb_ops_group0.base, ~bb_ops_group0.offset, ~r7s72100_data_group0.base, ~r7s72100_data_group0.offset, ~r8a779x_data_group0.base, ~r8a779x_data_group0.offset, ~r8a777x_data_group0.base, ~r8a777x_data_group0.offset, ~sh7757_data_giga_group0.base, ~sh7757_data_giga_group0.offset, ~sh_eth_dev_pm_ops_group1.base, ~sh_eth_dev_pm_ops_group1.offset, ~sh7724_data_group0.base, ~sh7724_data_group0.offset, ~ldv_state_variable_2, ~ldv_state_variable_4, ~ldv_irq_1_0, ~ldv_irq_1_1, ~ldv_irq_1_2, ~ldv_irq_1_3, ~sh_eth_driver_group0.base, ~sh_eth_driver_group0.offset, ~LDV_IN_INTERRUPT, ~ldv_irq_line_1_0, ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset, ~ldv_irq_line_1_1, ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset, ~ldv_irq_line_1_2, ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset, ~ldv_irq_line_1_3, ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset, ~sh_eth_netdev_ops_tsu_group1.base, ~sh_eth_netdev_ops_tsu_group1.offset, ~ldv_state_variable_11, ~ldv_state_variable_7, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_16, ~ldv_state_variable_13, ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_9, ~ldv_state_variable_12, ~ldv_state_variable_14, ~ldv_state_variable_15, ~ldv_state_variable_8, ~ldv_state_variable_10, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_1, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_5, ~ldv_retval_4, ~ldv_retval_7, ~ldv_retval_6;

implementation ldv_initialize() returns (){
  loc13:
    call ldv_set_init(~LDV_SKBS.base, ~LDV_SKBS.offset);
    assume true;
    return;
}

procedure ldv_initialize() returns ();
modifies ~last_index;

implementation ldv___platform_driver_register_21(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2.base : int, #in~ldv_func_arg2.offset : int) returns (#res : int){
    var #t~ret1463 : int;
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;
    var ~ldv_func_arg2.base : int, ~ldv_func_arg2.offset : int;
    var ~ldv_func_res~1377 : ~ldv_func_ret_type___1;
    var ~tmp~1377 : int;

  loc14:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    ~ldv_func_arg2.base, ~ldv_func_arg2.offset := #in~ldv_func_arg2.base, #in~ldv_func_arg2.offset;
    havoc ~ldv_func_res~1377;
    havoc ~tmp~1377;
    call #t~ret1463 := __platform_driver_register(~ldv_func_arg1.base, ~ldv_func_arg1.offset, ~ldv_func_arg2.base, ~ldv_func_arg2.offset);
    assume -2147483648 <= #t~ret1463 && #t~ret1463 <= 2147483647;
    ~tmp~1377 := #t~ret1463;
    havoc #t~ret1463;
    ~ldv_func_res~1377 := ~tmp~1377;
    ~ldv_state_variable_2 := 1;
    call ldv_initialize_platform_driver_2();
    #res := ~ldv_func_res~1377;
    assume true;
    return;
}

procedure ldv___platform_driver_register_21(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2.base : int, #in~ldv_func_arg2.offset : int) returns (#res : int);
modifies ~ldv_state_variable_2, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~sh_eth_driver_group0.base, ~sh_eth_driver_group0.offset;

procedure ldv_ndo_uninit_4() returns (#res : int);
modifies ;

procedure ldv_ndo_uninit_5() returns (#res : int);
modifies ;

procedure msleep(#in~172 : int) returns ();
modifies ;

procedure platform_driver_unregister(#in~254.base : int, #in~254.offset : int) returns ();
modifies ;

procedure mdiobus_unregister(#in~257.base : int, #in~257.offset : int) returns ();
modifies ;

procedure debug_dma_sync_single_for_cpu(#in~79.base : int, #in~79.offset : int, #in~80 : int, #in~81 : int, #in~82 : int) returns ();
modifies ;

procedure __bad_size_call_parameter() returns ();
modifies ;

procedure devm_kmalloc(#in~41.base : int, #in~41.offset : int, #in~42 : int, #in~43 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ethtool_op_get_link(#in~173.base : int, #in~173.offset : int) returns (#res : ~u32);
modifies ;

procedure phy_ethtool_gset(#in~268.base : int, #in~268.offset : int, #in~269.base : int, #in~269.offset : int) returns (#res : int);
modifies ;

procedure free_irq(#in~169 : int, #in~170.base : int, #in~170.offset : int) returns ();
modifies ;

procedure __might_sleep(#in~3.base : int, #in~3.offset : int, #in~4 : int, #in~5 : int) returns ();
modifies ;

procedure __memcpy(#in~12.base : int, #in~12.offset : int, #in~13.base : int, #in~13.offset : int, #in~14 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure phy_mii_ioctl(#in~270.base : int, #in~270.offset : int, #in~271.base : int, #in~271.offset : int, #in~272 : int) returns (#res : int);
modifies ;

procedure netif_napi_del(#in~188.base : int, #in~188.offset : int) returns ();
modifies ;

procedure __local_bh_enable_ip(#in~21 : int, #in~22 : int) returns ();
modifies ;

procedure devm_ioremap_resource(#in~46.base : int, #in~46.offset : int, #in~47.base : int, #in~47.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ldv_ndo_init_4() returns (#res : int);
modifies ;

procedure ldv_ndo_init_5() returns (#res : int);
modifies ;

procedure ioread32(#in~32.base : int, #in~32.offset : int) returns (#res : int);
modifies ;

procedure netdev_err(#in~216.base : int, #in~216.offset : int, #in~217.base : int, #in~217.offset : int) returns (#res : int);
modifies ;

procedure debug_dma_unmap_page(#in~66.base : int, #in~66.offset : int, #in~67 : int, #in~68 : int, #in~69 : int, #in~70 : int) returns ();
modifies ;

procedure __netif_schedule(#in~190.base : int, #in~190.offset : int) returns ();
modifies ;

procedure alloc_mdio_bitbang(#in~274.base : int, #in~274.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure phy_start_aneg(#in~265.base : int, #in~265.offset : int) returns (#res : int);
modifies ;

procedure debug_dma_alloc_coherent(#in~71.base : int, #in~71.offset : int, #in~72 : int, #in~73 : int, #in~74.base : int, #in~74.offset : int) returns ();
modifies ;

procedure __kmalloc(#in~38 : int, #in~39 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure register_netdev(#in~214.base : int, #in~214.offset : int) returns (#res : int);
modifies ;

procedure platform_get_irq(#in~250.base : int, #in~250.offset : int, #in~251 : int) returns (#res : int);
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure eth_mac_addr(#in~224.base : int, #in~224.offset : int, #in~225.base : int, #in~225.offset : int) returns (#res : int);
modifies ;

procedure iowrite32(#in~33 : int, #in~34.base : int, #in~34.offset : int) returns ();
modifies ;

procedure eth_validate_addr(#in~228.base : int, #in~228.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_u32() returns (#res : ~u32);
modifies ;

procedure __pm_runtime_disable(#in~281.base : int, #in~281.offset : int, #in~282 : int) returns ();
modifies ;

procedure _raw_spin_unlock(#in~28.base : int, #in~28.offset : int) returns ();
modifies ;

procedure platform_get_resource(#in~247.base : int, #in~247.offset : int, #in~248 : int, #in~249 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure __local_bh_disable_ip(#in~19 : int, #in~20 : int) returns ();
modifies ;

procedure __pm_runtime_resume(#in~278.base : int, #in~278.offset : int, #in~279 : int) returns (#res : int);
modifies ;

procedure phy_start(#in~263.base : int, #in~263.offset : int) returns ();
modifies ;

procedure printk(#in~2.base : int, #in~2.offset : int) returns (#res : int);
modifies ;

procedure calloc(#in~nmemb : int, #in~size : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure dev_err(#in~51.base : int, #in~51.offset : int, #in~52.base : int, #in~52.offset : int) returns (#res : int);
modifies ;

procedure netdev_warn(#in~218.base : int, #in~218.offset : int, #in~219.base : int, #in~219.offset : int) returns (#res : int);
modifies ;

procedure __platform_driver_register(#in~252.base : int, #in~252.offset : int, #in~253.base : int, #in~253.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock_irqsave(#in~27.base : int, #in~27.offset : int) returns (#res : int);
modifies ;

procedure netif_receive_skb(#in~204.base : int, #in~204.offset : int) returns (#res : int);
modifies ;

procedure eth_change_mtu(#in~226.base : int, #in~226.offset : int, #in~227 : int) returns (#res : int);
modifies ;

procedure alloc_etherdev_mqs(#in~229 : int, #in~230 : int, #in~231 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure netdev_info(#in~220.base : int, #in~220.offset : int, #in~221.base : int, #in~221.offset : int) returns (#res : int);
modifies ;

procedure get_random_bytes(#in~35.base : int, #in~35.offset : int, #in~36 : int) returns ();
modifies ;

procedure debug_dma_free_coherent(#in~75.base : int, #in~75.offset : int, #in~76 : int, #in~77.base : int, #in~77.offset : int, #in~78 : int) returns ();
modifies ;

procedure netif_napi_add(#in~184.base : int, #in~184.offset : int, #in~185.base : int, #in~185.offset : int, #in~186.base : int, #in~186.offset : int, #in~187 : int) returns ();
modifies ;

procedure phy_ethtool_sset(#in~266.base : int, #in~266.offset : int, #in~267.base : int, #in~267.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure __napi_schedule(#in~174.base : int, #in~174.offset : int) returns ();
modifies ;

procedure __raw_spin_lock_init(#in~23.base : int, #in~23.offset : int, #in~24.base : int, #in~24.offset : int, #in~25.base : int, #in~25.offset : int) returns ();
modifies ;

procedure phy_print_status(#in~273.base : int, #in~273.offset : int) returns ();
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure __phys_addr(#in~11 : int) returns (#res : int);
modifies ;

procedure free_netdev(#in~189.base : int, #in~189.offset : int) returns ();
modifies ;

procedure synchronize_irq(#in~161 : int) returns ();
modifies ;

procedure kfree(#in~37.base : int, #in~37.offset : int) returns ();
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];

procedure __VERIFIER_error() returns ();
modifies ;

procedure napi_complete(#in~178.base : int, #in~178.offset : int) returns ();
modifies ;

procedure eth_type_trans(#in~222.base : int, #in~222.offset : int, #in~223.base : int, #in~223.offset : int) returns (#res : ~__be16);
modifies ;

procedure __VERIFIER_nondet_u16() returns (#res : ~u16);
modifies ;

procedure __pm_runtime_idle(#in~276.base : int, #in~276.offset : int, #in~277 : int) returns (#res : int);
modifies ;

procedure __dev_kfree_skb_irq(#in~202.base : int, #in~202.offset : int, #in~203 : int) returns ();
modifies ;

procedure __VERIFIER_assume(#in~expression : int) returns ();
modifies ;

procedure __const_udelay(#in~171 : int) returns ();
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];

procedure __bad_percpu_size() returns ();
modifies ;

procedure _raw_spin_unlock_irqrestore(#in~29.base : int, #in~29.offset : int, #in~30 : int) returns ();
modifies ;

procedure mdiobus_register(#in~256.base : int, #in~256.offset : int) returns (#res : int);
modifies ;

procedure phy_connect(#in~258.base : int, #in~258.offset : int, #in~259.base : int, #in~259.offset : int, #in~260.base : int, #in~260.offset : int, #in~261 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure memset(#in~15.base : int, #in~15.offset : int, #in~16 : int, #in~17 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure phy_disconnect(#in~262.base : int, #in~262.offset : int) returns ();
modifies ;

procedure debug_dma_map_page(#in~59.base : int, #in~59.offset : int, #in~60.base : int, #in~60.offset : int, #in~61 : int, #in~62 : int, #in~63 : int, #in~64 : int, #in~65 : int) returns ();
modifies ;

procedure warn_slowpath_null(#in~9.base : int, #in~9.offset : int, #in~10 : int) returns ();
modifies ;

procedure skb_put(#in~152.base : int, #in~152.offset : int, #in~153 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure snprintf(#in~6.base : int, #in~6.offset : int, #in~7 : int, #in~8.base : int, #in~8.offset : int) returns (#res : int);
modifies ;

procedure pm_runtime_enable(#in~280.base : int, #in~280.offset : int) returns ();
modifies ;

procedure dev_warn(#in~53.base : int, #in~53.offset : int, #in~54.base : int, #in~54.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock(#in~26.base : int, #in~26.offset : int) returns ();
modifies ;

procedure request_threaded_irq(#in~162 : int, #in~163.base : int, #in~163.offset : int, #in~164.base : int, #in~164.offset : int, #in~165 : int, #in~166.base : int, #in~166.offset : int, #in~167.base : int, #in~167.offset : int) returns (#res : int);
modifies ;

procedure unregister_netdev(#in~215.base : int, #in~215.offset : int) returns ();
modifies ;

procedure phy_stop(#in~264.base : int, #in~264.offset : int) returns ();
modifies ;

procedure free_mdio_bitbang(#in~275.base : int, #in~275.offset : int) returns ();
modifies ;


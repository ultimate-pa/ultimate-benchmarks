type STRUCT~task_struct;
type STRUCT~optimistic_spin_queue;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~dev_pm_qos;
type STRUCT~xol_area;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~kernfs_open_node;
type STRUCT~kernfs_iattrs;
type STRUCT~seq_file;
type STRUCT~sock;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~tracepoint;
type STRUCT~ftrace_event_call;
type STRUCT~kmem_cache_node;
type STRUCT~mem_cgroup;
type STRUCT~vfsmount;
type STRUCT~pid_namespace;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~iov_iter;
type STRUCT~swap_info_struct;
type STRUCT~backing_dev_info;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~pipe_inode_info;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~iovec;
type STRUCT~poll_table_struct;
type STRUCT~nameidata;
type STRUCT~kstatfs;
type STRUCT~proc_dir_entry;
type STRUCT~pinctrl;
type STRUCT~pinctrl_state;
type STRUCT~dma_map_ops;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~acpi_device;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~cma;
type STRUCT~device_node;
type STRUCT~iommu_group;
type STRUCT~assoc_array_ptr;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~ep_device;
type STRUCT~mon_bus;
type STRUCT~usb_tt;
type STRUCT~wusb_dev;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__u64 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~pteval_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~qsize_t = int;
type ~cc_t = int;
type ~speed_t = int;
type ~tcflag_t = int;
type ~kernel_ulong_t = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__le16 = ~__u16;
type ~__le32 = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint32_t = ~__u32;
type ~dma_addr_t = ~u64;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~projid_t = ~__kernel_uid32_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
const #funAddr~sierra_outdat_callback.base : int;
const #funAddr~sierra_outdat_callback.offset : int;
const #funAddr~sierra_indat_callback.base : int;
const #funAddr~sierra_indat_callback.offset : int;
const #funAddr~sierra_probe.base : int;
const #funAddr~sierra_probe.offset : int;
const #funAddr~sierra_startup.base : int;
const #funAddr~sierra_startup.offset : int;
const #funAddr~sierra_calc_num_ports.base : int;
const #funAddr~sierra_calc_num_ports.offset : int;
const #funAddr~sierra_release.base : int;
const #funAddr~sierra_release.offset : int;
const #funAddr~sierra_port_probe.base : int;
const #funAddr~sierra_port_probe.offset : int;
const #funAddr~sierra_port_remove.base : int;
const #funAddr~sierra_port_remove.offset : int;
const #funAddr~sierra_suspend.base : int;
const #funAddr~sierra_suspend.offset : int;
const #funAddr~sierra_resume.base : int;
const #funAddr~sierra_resume.offset : int;
const #funAddr~sierra_open.base : int;
const #funAddr~sierra_open.offset : int;
const #funAddr~sierra_close.base : int;
const #funAddr~sierra_close.offset : int;
const #funAddr~sierra_write.base : int;
const #funAddr~sierra_write.offset : int;
const #funAddr~sierra_write_room.base : int;
const #funAddr~sierra_write_room.offset : int;
const #funAddr~sierra_chars_in_buffer.base : int;
const #funAddr~sierra_chars_in_buffer.offset : int;
const #funAddr~sierra_tiocmget.base : int;
const #funAddr~sierra_tiocmget.offset : int;
const #funAddr~sierra_tiocmset.base : int;
const #funAddr~sierra_tiocmset.offset : int;
const #funAddr~sierra_dtr_rts.base : int;
const #funAddr~sierra_dtr_rts.offset : int;
const #funAddr~sierra_instat_callback.base : int;
const #funAddr~sierra_instat_callback.offset : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~usb_device_speed~USB_SPEED_UNKNOWN : int;
const ~usb_device_speed~USB_SPEED_LOW : int;
const ~usb_device_speed~USB_SPEED_FULL : int;
const ~usb_device_speed~USB_SPEED_HIGH : int;
const ~usb_device_speed~USB_SPEED_WIRELESS : int;
const ~usb_device_speed~USB_SPEED_SUPER : int;
const ~usb_device_state~USB_STATE_NOTATTACHED : int;
const ~usb_device_state~USB_STATE_ATTACHED : int;
const ~usb_device_state~USB_STATE_POWERED : int;
const ~usb_device_state~USB_STATE_RECONNECTING : int;
const ~usb_device_state~USB_STATE_UNAUTHENTICATED : int;
const ~usb_device_state~USB_STATE_DEFAULT : int;
const ~usb_device_state~USB_STATE_ADDRESS : int;
const ~usb_device_state~USB_STATE_CONFIGURED : int;
const ~usb_device_state~USB_STATE_SUSPENDED : int;
const ~usb_interface_condition~USB_INTERFACE_UNBOUND : int;
const ~usb_interface_condition~USB_INTERFACE_BINDING : int;
const ~usb_interface_condition~USB_INTERFACE_BOUND : int;
const ~usb_interface_condition~USB_INTERFACE_UNBINDING : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE : int;
const ~usb_device_removable~USB_DEVICE_FIXED : int;
axiom #funAddr~sierra_outdat_callback.base == -1 && #funAddr~sierra_outdat_callback.offset == 0;
axiom #funAddr~sierra_indat_callback.base == -1 && #funAddr~sierra_indat_callback.offset == 1;
axiom #funAddr~sierra_probe.base == -1 && #funAddr~sierra_probe.offset == 2;
axiom #funAddr~sierra_startup.base == -1 && #funAddr~sierra_startup.offset == 3;
axiom #funAddr~sierra_calc_num_ports.base == -1 && #funAddr~sierra_calc_num_ports.offset == 4;
axiom #funAddr~sierra_release.base == -1 && #funAddr~sierra_release.offset == 5;
axiom #funAddr~sierra_port_probe.base == -1 && #funAddr~sierra_port_probe.offset == 6;
axiom #funAddr~sierra_port_remove.base == -1 && #funAddr~sierra_port_remove.offset == 7;
axiom #funAddr~sierra_suspend.base == -1 && #funAddr~sierra_suspend.offset == 8;
axiom #funAddr~sierra_resume.base == -1 && #funAddr~sierra_resume.offset == 9;
axiom #funAddr~sierra_open.base == -1 && #funAddr~sierra_open.offset == 10;
axiom #funAddr~sierra_close.base == -1 && #funAddr~sierra_close.offset == 11;
axiom #funAddr~sierra_write.base == -1 && #funAddr~sierra_write.offset == 12;
axiom #funAddr~sierra_write_room.base == -1 && #funAddr~sierra_write_room.offset == 13;
axiom #funAddr~sierra_chars_in_buffer.base == -1 && #funAddr~sierra_chars_in_buffer.offset == 14;
axiom #funAddr~sierra_tiocmget.base == -1 && #funAddr~sierra_tiocmget.offset == 15;
axiom #funAddr~sierra_tiocmset.base == -1 && #funAddr~sierra_tiocmset.offset == 16;
axiom #funAddr~sierra_dtr_rts.base == -1 && #funAddr~sierra_dtr_rts.offset == 17;
axiom #funAddr~sierra_instat_callback.base == -1 && #funAddr~sierra_instat_callback.offset == 18;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~usb_device_speed~USB_SPEED_UNKNOWN == 0;
axiom ~usb_device_speed~USB_SPEED_LOW == 1;
axiom ~usb_device_speed~USB_SPEED_FULL == 2;
axiom ~usb_device_speed~USB_SPEED_HIGH == 3;
axiom ~usb_device_speed~USB_SPEED_WIRELESS == 4;
axiom ~usb_device_speed~USB_SPEED_SUPER == 5;
axiom ~usb_device_state~USB_STATE_NOTATTACHED == 0;
axiom ~usb_device_state~USB_STATE_ATTACHED == 1;
axiom ~usb_device_state~USB_STATE_POWERED == 2;
axiom ~usb_device_state~USB_STATE_RECONNECTING == 3;
axiom ~usb_device_state~USB_STATE_UNAUTHENTICATED == 4;
axiom ~usb_device_state~USB_STATE_DEFAULT == 5;
axiom ~usb_device_state~USB_STATE_ADDRESS == 6;
axiom ~usb_device_state~USB_STATE_CONFIGURED == 7;
axiom ~usb_device_state~USB_STATE_SUSPENDED == 8;
axiom ~usb_interface_condition~USB_INTERFACE_UNBOUND == 0;
axiom ~usb_interface_condition~USB_INTERFACE_BINDING == 1;
axiom ~usb_interface_condition~USB_INTERFACE_BOUND == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBINDING == 3;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN == 0;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE == 1;
axiom ~usb_device_removable~USB_DEVICE_FIXED == 2;
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
var ~jiffies : int;

var ~ref_cnt : int;

var ~ldv_state_variable_1 : int;

var ~ldv_state_variable_0 : int;

var ~ldv_retval_2 : int;

var ~ldv_retval_0 : int;

var ~ldv_retval_5 : int;

var ~ldv_retval_4 : int;

var ~ldv_retval_1 : int;

var ~ldv_retval_3 : int;

var ~ldv_spin : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~sierra_device_group1.base : int, ~sierra_device_group1.offset : int;

var ~sierra_device_group2.base : int, ~sierra_device_group2.offset : int;

var ~sierra_device_group0.base : int, ~sierra_device_group0.offset : int;

var ~nmea : ~bool;

var ~#hi_memory_typeA_ifaces.base : int, ~#hi_memory_typeA_ifaces.offset : int;

var ~#typeA_interface_list.base : int, ~#typeA_interface_list.offset : int;

var ~#hi_memory_typeB_ifaces.base : int, ~#hi_memory_typeB_ifaces.offset : int;

var ~#typeB_interface_list.base : int, ~#typeB_interface_list.offset : int;

var ~#direct_ip_non_serial_ifaces.base : int, ~#direct_ip_non_serial_ifaces.offset : int;

var ~#direct_ip_interface_blacklist.base : int, ~#direct_ip_interface_blacklist.offset : int;

var ~#id_table.base : int, ~#id_table.offset : int;

var ~#sierra_device.base : int, ~#sierra_device.offset : int;

var ~#serial_drivers.base : int, ~#serial_drivers.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_int : [int,int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

implementation usb_serial_module_init() returns (#res : int){
    var #t~nondet636.base : int, #t~nondet636.offset : int;
    var #t~ret637 : int;
    var ~tmp~362 : int;

  loc0:
    havoc ~tmp~362;
    call #t~nondet636.base, #t~nondet636.offset := #Ultimate.alloc(7);
    #memory_int := #memory_int[#t~nondet636.base,#t~nondet636.offset + 0 := 115];
    #memory_int := #memory_int[#t~nondet636.base,#t~nondet636.offset + 1 := 105];
    #memory_int := #memory_int[#t~nondet636.base,#t~nondet636.offset + 2 := 101];
    #memory_int := #memory_int[#t~nondet636.base,#t~nondet636.offset + 3 := 114];
    #memory_int := #memory_int[#t~nondet636.base,#t~nondet636.offset + 4 := 114];
    #memory_int := #memory_int[#t~nondet636.base,#t~nondet636.offset + 5 := 97];
    #memory_int := #memory_int[#t~nondet636.base,#t~nondet636.offset + 6 := 0];
    call #t~ret637 := usb_serial_register_drivers(~#serial_drivers.base, ~#serial_drivers.offset, #t~nondet636.base, #t~nondet636.offset, ~#id_table.base, ~#id_table.offset);
    assume -2147483648 <= #t~ret637 && #t~ret637 <= 2147483647;
    ~tmp~362 := #t~ret637;
    havoc #t~nondet636.base, #t~nondet636.offset;
    havoc #t~ret637;
    #res := ~tmp~362;
    assume true;
    return;
}

procedure usb_serial_module_init() returns (#res : int);
modifies #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ULTIMATE.init() returns (){
    var #t~nondet634.base : int, #t~nondet634.offset : int;
    var #t~nondet635.base : int, #t~nondet635.offset : int;
    var #t~union723.head : int, #t~union723.tail : int;
    var #t~union724.__padding : [int]int, #t~union724.dep_map.key.base : int, #t~union724.dep_map.key.offset : int, #t~union724.dep_map.class_cache.base : [int]int, #t~union724.dep_map.class_cache.offset : [int]int, #t~union724.dep_map.name.base : int, #t~union724.dep_map.name.offset : int, #t~union724.dep_map.cpu : int, #t~union724.dep_map.ip : int;

  loc1:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ref_cnt := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_retval_2 := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_5 := 0;
    ~ldv_retval_4 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_retval_3 := 0;
    ~ldv_spin := 0;
    ~sierra_device_group1.base, ~sierra_device_group1.offset := 0, 0;
    ~sierra_device_group2.base, ~sierra_device_group2.offset := 0, 0;
    ~sierra_device_group0.base, ~sierra_device_group0.offset := 0, 0;
    ~nmea := 0;
    call ~#hi_memory_typeA_ifaces.base, ~#hi_memory_typeA_ifaces.offset := #Ultimate.alloc(2);
    call write~int(0, ~#hi_memory_typeA_ifaces.base, ~#hi_memory_typeA_ifaces.offset + 0, 1);
    call write~int(2, ~#hi_memory_typeA_ifaces.base, ~#hi_memory_typeA_ifaces.offset + 1, 1);
    call ~#typeA_interface_list.base, ~#typeA_interface_list.offset := #Ultimate.alloc(12);
    call write~int(2, ~#typeA_interface_list.base, ~#typeA_interface_list.offset + 0, 4);
    call write~$Pointer$(~#hi_memory_typeA_ifaces.base, ~#hi_memory_typeA_ifaces.offset, ~#typeA_interface_list.base, ~#typeA_interface_list.offset + 4, 8);
    call ~#hi_memory_typeB_ifaces.base, ~#hi_memory_typeB_ifaces.offset := #Ultimate.alloc(4);
    call write~int(3, ~#hi_memory_typeB_ifaces.base, ~#hi_memory_typeB_ifaces.offset + 0, 1);
    call write~int(4, ~#hi_memory_typeB_ifaces.base, ~#hi_memory_typeB_ifaces.offset + 1, 1);
    call write~int(5, ~#hi_memory_typeB_ifaces.base, ~#hi_memory_typeB_ifaces.offset + 2, 1);
    call write~int(6, ~#hi_memory_typeB_ifaces.base, ~#hi_memory_typeB_ifaces.offset + 3, 1);
    call ~#typeB_interface_list.base, ~#typeB_interface_list.offset := #Ultimate.alloc(12);
    call write~int(4, ~#typeB_interface_list.base, ~#typeB_interface_list.offset + 0, 4);
    call write~$Pointer$(~#hi_memory_typeB_ifaces.base, ~#hi_memory_typeB_ifaces.offset, ~#typeB_interface_list.base, ~#typeB_interface_list.offset + 4, 8);
    call ~#direct_ip_non_serial_ifaces.base, ~#direct_ip_non_serial_ifaces.offset := #Ultimate.alloc(7);
    call write~int(7, ~#direct_ip_non_serial_ifaces.base, ~#direct_ip_non_serial_ifaces.offset + 0, 1);
    call write~int(8, ~#direct_ip_non_serial_ifaces.base, ~#direct_ip_non_serial_ifaces.offset + 1, 1);
    call write~int(9, ~#direct_ip_non_serial_ifaces.base, ~#direct_ip_non_serial_ifaces.offset + 2, 1);
    call write~int(10, ~#direct_ip_non_serial_ifaces.base, ~#direct_ip_non_serial_ifaces.offset + 3, 1);
    call write~int(11, ~#direct_ip_non_serial_ifaces.base, ~#direct_ip_non_serial_ifaces.offset + 4, 1);
    call write~int(19, ~#direct_ip_non_serial_ifaces.base, ~#direct_ip_non_serial_ifaces.offset + 5, 1);
    call write~int(20, ~#direct_ip_non_serial_ifaces.base, ~#direct_ip_non_serial_ifaces.offset + 6, 1);
    call ~#direct_ip_interface_blacklist.base, ~#direct_ip_interface_blacklist.offset := #Ultimate.alloc(12);
    call write~int(7, ~#direct_ip_interface_blacklist.base, ~#direct_ip_interface_blacklist.offset + 0, 4);
    call write~$Pointer$(~#direct_ip_non_serial_ifaces.base, ~#direct_ip_non_serial_ifaces.offset, ~#direct_ip_interface_blacklist.base, ~#direct_ip_interface_blacklist.offset + 4, 8);
    call ~#id_table.base, ~#id_table.offset := #Ultimate.alloc(1600);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 0 + 0, 2);
    call write~int(3901, ~#id_table.base, ~#id_table.offset + 0 + 2, 2);
    call write~int(274, ~#id_table.base, ~#id_table.offset + 0 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 0 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 25 + 0, 2);
    call write~int(1008, ~#id_table.base, ~#id_table.offset + 25 + 2, 2);
    call write~int(6941, ~#id_table.base, ~#id_table.offset + 25 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 25 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 25 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 25 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 25 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 25 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 25 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 25 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 25 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 25 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 25 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 50 + 0, 2);
    call write~int(1008, ~#id_table.base, ~#id_table.offset + 50 + 2, 2);
    call write~int(8477, ~#id_table.base, ~#id_table.offset + 50 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 50 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 50 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 50 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 50 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 50 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 50 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 50 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 50 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 50 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 50 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 75 + 0, 2);
    call write~int(1008, ~#id_table.base, ~#id_table.offset + 75 + 2, 2);
    call write~int(7709, ~#id_table.base, ~#id_table.offset + 75 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 75 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 75 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 75 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 75 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 75 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 75 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 75 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 75 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 75 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 75 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 100 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 100 + 2, 2);
    call write~int(23, ~#id_table.base, ~#id_table.offset + 100 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 100 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 100 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 100 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 100 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 100 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 100 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 100 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 100 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 100 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 100 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 125 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 125 + 2, 2);
    call write~int(24, ~#id_table.base, ~#id_table.offset + 125 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 125 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 125 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 125 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 125 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 125 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 125 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 125 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 125 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 125 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 125 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 150 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 150 + 2, 2);
    call write~int(536, ~#id_table.base, ~#id_table.offset + 150 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 150 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 150 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 150 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 150 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 150 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 150 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 150 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 150 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 150 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 150 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 175 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 175 + 2, 2);
    call write~int(32, ~#id_table.base, ~#id_table.offset + 175 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 175 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 175 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 175 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 175 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 175 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 175 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 175 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 175 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 175 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 175 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 200 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 200 + 2, 2);
    call write~int(544, ~#id_table.base, ~#id_table.offset + 200 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 200 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 200 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 200 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 200 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 200 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 200 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 200 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 200 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 200 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 200 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 225 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 225 + 2, 2);
    call write~int(34, ~#id_table.base, ~#id_table.offset + 225 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 225 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 225 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 225 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 225 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 225 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 225 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 225 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 225 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 225 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 225 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 250 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 250 + 2, 2);
    call write~int(36, ~#id_table.base, ~#id_table.offset + 250 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 250 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 250 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 250 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 250 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 250 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 250 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 250 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 250 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 250 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 250 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 275 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 275 + 2, 2);
    call write~int(548, ~#id_table.base, ~#id_table.offset + 275 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 275 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 275 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 275 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 275 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 275 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 275 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 275 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 275 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 275 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 275 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 300 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 300 + 2, 2);
    call write~int(25, ~#id_table.base, ~#id_table.offset + 300 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 300 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 300 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 300 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 300 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 300 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 300 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 300 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 300 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 300 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 300 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 325 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 325 + 2, 2);
    call write~int(33, ~#id_table.base, ~#id_table.offset + 325 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 325 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 325 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 325 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 325 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 325 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 325 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 325 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 325 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 325 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 325 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 350 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 350 + 2, 2);
    call write~int(274, ~#id_table.base, ~#id_table.offset + 350 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 350 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 350 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 350 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 350 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 350 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 350 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 350 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 350 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 350 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 350 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 375 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 375 + 2, 2);
    call write~int(288, ~#id_table.base, ~#id_table.offset + 375 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 375 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 375 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 375 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 375 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 375 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 375 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 375 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 375 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 375 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 375 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 400 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 400 + 2, 2);
    call write~int(769, ~#id_table.base, ~#id_table.offset + 400 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 400 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 400 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 400 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 400 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 400 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 400 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 400 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 400 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 400 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 400 + 17, 8);
    call write~int(899, ~#id_table.base, ~#id_table.offset + 425 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 425 + 2, 2);
    call write~int(35, ~#id_table.base, ~#id_table.offset + 425 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 425 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 425 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 425 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 425 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 425 + 12, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 425 + 13, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 425 + 14, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 425 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 425 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 425 + 17, 8);
    call write~int(899, ~#id_table.base, ~#id_table.offset + 450 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 450 + 2, 2);
    call write~int(37, ~#id_table.base, ~#id_table.offset + 450 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 450 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 450 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 450 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 450 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 450 + 12, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 450 + 13, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 450 + 14, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 450 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 450 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 450 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 475 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 475 + 2, 2);
    call write~int(38, ~#id_table.base, ~#id_table.offset + 475 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 475 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 475 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 475 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 475 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 475 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 475 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 475 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 475 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 475 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 475 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 500 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 500 + 2, 2);
    call write~int(39, ~#id_table.base, ~#id_table.offset + 500 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 500 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 500 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 500 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 500 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 500 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 500 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 500 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 500 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 500 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 500 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 525 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 525 + 2, 2);
    call write~int(40, ~#id_table.base, ~#id_table.offset + 525 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 525 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 525 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 525 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 525 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 525 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 525 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 525 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 525 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 525 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 525 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 550 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 550 + 2, 2);
    call write~int(41, ~#id_table.base, ~#id_table.offset + 550 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 550 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 550 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 550 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 550 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 550 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 550 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 550 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 550 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 550 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 550 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 575 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 575 + 2, 2);
    call write~int(26626, ~#id_table.base, ~#id_table.offset + 575 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 575 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 575 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 575 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 575 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 575 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 575 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 575 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 575 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 575 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 575 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 600 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 600 + 2, 2);
    call write~int(26627, ~#id_table.base, ~#id_table.offset + 600 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 600 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 625 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 625 + 2, 2);
    call write~int(26628, ~#id_table.base, ~#id_table.offset + 625 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 625 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 625 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 625 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 625 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 625 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 625 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 625 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 625 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 625 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 625 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 650 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 650 + 2, 2);
    call write~int(26629, ~#id_table.base, ~#id_table.offset + 650 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 650 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 650 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 650 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 650 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 650 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 650 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 650 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 650 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 650 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 650 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 675 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 675 + 2, 2);
    call write~int(26632, ~#id_table.base, ~#id_table.offset + 675 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 675 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 675 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 675 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 675 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 675 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 675 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 675 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 675 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 675 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 675 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 700 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 700 + 2, 2);
    call write~int(26633, ~#id_table.base, ~#id_table.offset + 700 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 700 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 700 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 700 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 700 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 700 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 700 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 700 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 700 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 700 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 700 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 725 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 725 + 2, 2);
    call write~int(26642, ~#id_table.base, ~#id_table.offset + 725 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 725 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 725 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 725 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 725 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 725 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 725 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 725 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 725 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 725 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 725 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 750 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 750 + 2, 2);
    call write~int(26643, ~#id_table.base, ~#id_table.offset + 750 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 750 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 750 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 750 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 750 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 750 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 750 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 750 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 750 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 750 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 750 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 775 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 775 + 2, 2);
    call write~int(26645, ~#id_table.base, ~#id_table.offset + 775 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 775 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 775 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 775 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 775 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 775 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 775 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 775 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 775 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 775 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 775 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 800 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 800 + 2, 2);
    call write~int(26646, ~#id_table.base, ~#id_table.offset + 800 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 800 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 800 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 800 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 800 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 800 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 800 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 800 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 800 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 800 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 800 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 825 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 825 + 2, 2);
    call write~int(26656, ~#id_table.base, ~#id_table.offset + 825 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 825 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 825 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 825 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 825 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 825 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 825 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 825 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 825 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 825 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 825 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 850 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 850 + 2, 2);
    call write~int(26657, ~#id_table.base, ~#id_table.offset + 850 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 850 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 850 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 850 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 850 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 850 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 850 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 850 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 850 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 850 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 850 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 875 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 875 + 2, 2);
    call write~int(26658, ~#id_table.base, ~#id_table.offset + 875 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 875 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 875 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 875 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 875 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 875 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 875 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 875 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 875 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 875 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 875 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 900 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 900 + 2, 2);
    call write~int(26674, ~#id_table.base, ~#id_table.offset + 900 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 900 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 900 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 900 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 900 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 900 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 900 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 900 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 900 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 900 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 900 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 925 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 925 + 2, 2);
    call write~int(26675, ~#id_table.base, ~#id_table.offset + 925 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 925 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 925 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 925 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 925 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 925 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 925 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 925 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 925 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 925 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 925 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 950 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 950 + 2, 2);
    call write~int(26676, ~#id_table.base, ~#id_table.offset + 950 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 950 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 950 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 950 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 950 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 950 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 950 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 950 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 950 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 950 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 950 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 975 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 975 + 2, 2);
    call write~int(26677, ~#id_table.base, ~#id_table.offset + 975 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 975 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 975 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 975 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 975 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 975 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 975 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 975 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 975 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 975 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 975 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1000 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1000 + 2, 2);
    call write~int(26680, ~#id_table.base, ~#id_table.offset + 1000 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1000 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1000 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1000 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1000 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1000 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1000 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1000 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1000 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1000 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1000 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1025 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1025 + 2, 2);
    call write~int(26681, ~#id_table.base, ~#id_table.offset + 1025 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1025 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1025 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1025 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1025 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1025 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1025 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1025 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1025 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1025 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1025 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1050 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1050 + 2, 2);
    call write~int(26682, ~#id_table.base, ~#id_table.offset + 1050 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1050 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1050 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1050 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1050 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1050 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1050 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1050 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1050 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1050 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1050 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1075 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1075 + 2, 2);
    call write~int(26683, ~#id_table.base, ~#id_table.offset + 1075 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1075 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1075 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1075 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1075 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1075 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1075 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1075 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1075 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1075 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1075 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1100 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1100 + 2, 2);
    call write~int(26684, ~#id_table.base, ~#id_table.offset + 1100 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1100 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1100 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1100 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1100 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1100 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1100 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1100 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1100 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1100 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1100 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1125 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1125 + 2, 2);
    call write~int(26685, ~#id_table.base, ~#id_table.offset + 1125 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1125 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1125 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1125 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1125 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1125 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1125 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1125 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1125 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1125 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1125 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1150 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1150 + 2, 2);
    call write~int(26686, ~#id_table.base, ~#id_table.offset + 1150 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1150 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1150 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1150 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1150 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1150 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1150 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1150 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1150 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1150 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1150 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1175 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1175 + 2, 2);
    call write~int(26704, ~#id_table.base, ~#id_table.offset + 1175 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1175 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1175 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1175 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1175 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1175 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1175 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1175 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1175 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1175 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1175 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1200 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1200 + 2, 2);
    call write~int(26705, ~#id_table.base, ~#id_table.offset + 1200 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1200 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1225 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1225 + 2, 2);
    call write~int(26706, ~#id_table.base, ~#id_table.offset + 1225 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1225 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1225 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1225 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1225 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1225 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1225 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1225 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1225 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1225 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1225 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1250 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1250 + 2, 2);
    call write~int(26707, ~#id_table.base, ~#id_table.offset + 1250 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1250 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1250 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1250 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1250 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1250 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1250 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1250 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1250 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1250 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1250 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1275 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1275 + 2, 2);
    call write~int(26709, ~#id_table.base, ~#id_table.offset + 1275 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1275 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1275 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1275 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1275 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1275 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1275 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1275 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1275 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1275 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1275 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1300 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1300 + 2, 2);
    call write~int(26710, ~#id_table.base, ~#id_table.offset + 1300 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1300 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1300 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1300 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1300 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1300 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1300 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1300 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1300 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1300 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1300 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1325 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1325 + 2, 2);
    call write~int(26713, ~#id_table.base, ~#id_table.offset + 1325 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1325 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1325 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1325 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1325 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1325 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1325 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1325 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1325 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1325 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1325 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1350 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1350 + 2, 2);
    call write~int(26714, ~#id_table.base, ~#id_table.offset + 1350 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1350 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1350 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1350 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1350 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1350 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1350 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1350 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1350 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1350 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1350 + 17, 8);
    call write~int(899, ~#id_table.base, ~#id_table.offset + 1375 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1375 + 2, 2);
    call write~int(26752, ~#id_table.base, ~#id_table.offset + 1375 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1375 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1375 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1375 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1375 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1375 + 12, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1375 + 13, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1375 + 14, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1375 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1375 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1375 + 17, 8);
    call write~int(899, ~#id_table.base, ~#id_table.offset + 1400 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1400 + 2, 2);
    call write~int(26768, ~#id_table.base, ~#id_table.offset + 1400 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1400 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1400 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1400 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1400 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1400 + 12, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1400 + 13, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1400 + 14, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1400 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1400 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1400 + 17, 8);
    call write~int(899, ~#id_table.base, ~#id_table.offset + 1425 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1425 + 2, 2);
    call write~int(26769, ~#id_table.base, ~#id_table.offset + 1425 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1425 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1425 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1425 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1425 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1425 + 12, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1425 + 13, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1425 + 14, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1425 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1425 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1425 + 17, 8);
    call write~int(899, ~#id_table.base, ~#id_table.offset + 1450 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1450 + 2, 2);
    call write~int(26770, ~#id_table.base, ~#id_table.offset + 1450 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1450 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1450 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1450 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1450 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1450 + 12, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1450 + 13, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1450 + 14, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1450 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1450 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1450 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1475 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1475 + 2, 2);
    call write~int(26771, ~#id_table.base, ~#id_table.offset + 1475 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1475 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1475 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1475 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1475 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1475 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1475 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1475 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1475 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1475 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1475 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1500 + 0, 2);
    call write~int(4505, ~#id_table.base, ~#id_table.offset + 1500 + 2, 2);
    call write~int(26787, ~#id_table.base, ~#id_table.offset + 1500 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1500 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1500 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1500 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1500 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1500 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1500 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1500 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1500 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1500 + 16, 1);
    call write~int(~#direct_ip_interface_blacklist.base + ~#direct_ip_interface_blacklist.offset, ~#id_table.base, ~#id_table.offset + 1500 + 17, 8);
    call write~int(899, ~#id_table.base, ~#id_table.offset + 1525 + 0, 2);
    call write~int(3901, ~#id_table.base, ~#id_table.offset + 1525 + 2, 2);
    call write~int(26794, ~#id_table.base, ~#id_table.offset + 1525 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1525 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1525 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1525 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1525 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1525 + 12, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1525 + 13, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1525 + 14, 1);
    call write~int(255, ~#id_table.base, ~#id_table.offset + 1525 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1525 + 16, 1);
    call write~int(~#direct_ip_interface_blacklist.base + ~#direct_ip_interface_blacklist.offset, ~#id_table.base, ~#id_table.offset + 1525 + 17, 8);
    call write~int(3, ~#id_table.base, ~#id_table.offset + 1550 + 0, 2);
    call write~int(3901, ~#id_table.base, ~#id_table.offset + 1550 + 2, 2);
    call write~int(26787, ~#id_table.base, ~#id_table.offset + 1550 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1550 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1550 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1550 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1550 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1550 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1550 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1550 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1550 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1550 + 16, 1);
    call write~int(~#direct_ip_interface_blacklist.base + ~#direct_ip_interface_blacklist.offset, ~#id_table.base, ~#id_table.offset + 1550 + 17, 8);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1575 + 0, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1575 + 2, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1575 + 4, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1575 + 6, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1575 + 8, 2);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1575 + 10, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1575 + 11, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1575 + 12, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1575 + 13, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1575 + 14, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1575 + 15, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1575 + 16, 1);
    call write~int(0, ~#id_table.base, ~#id_table.offset + 1575 + 17, 8);
    call ~#sierra_device.base, ~#sierra_device.offset := #Ultimate.alloc(526);
    call #t~nondet634.base, #t~nondet634.offset := #Ultimate.alloc(17);
    call write~$Pointer$(#t~nondet634.base, #t~nondet634.offset, ~#sierra_device.base, ~#sierra_device.offset + 0, 8);
    call write~$Pointer$(~#id_table.base, ~#id_table.offset, ~#sierra_device.base, ~#sierra_device.offset + 8, 8);
    call write~int(0, ~#sierra_device.base, ~#sierra_device.offset + 16, 1);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 17 + 0, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 17 + 8, 8);
    call #t~nondet635.base, #t~nondet635.offset := #Ultimate.alloc(7);
    #memory_int := #memory_int[#t~nondet635.base,#t~nondet635.offset + 0 := 115];
    #memory_int := #memory_int[#t~nondet635.base,#t~nondet635.offset + 1 := 105];
    #memory_int := #memory_int[#t~nondet635.base,#t~nondet635.offset + 2 := 101];
    #memory_int := #memory_int[#t~nondet635.base,#t~nondet635.offset + 3 := 114];
    #memory_int := #memory_int[#t~nondet635.base,#t~nondet635.offset + 4 := 114];
    #memory_int := #memory_int[#t~nondet635.base,#t~nondet635.offset + 5 := 97];
    #memory_int := #memory_int[#t~nondet635.base,#t~nondet635.offset + 6 := 0];
    call write~$Pointer$(#t~nondet635.base, #t~nondet635.offset, ~#sierra_device.base, ~#sierra_device.offset + 33 + 0, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 33 + 8, 8);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#sierra_device.base, ~#sierra_device.offset + 33 + 16, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 33 + 24, 8);
    call write~int(0, ~#sierra_device.base, ~#sierra_device.offset + 33 + 32, 1);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 33 + 33, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 33 + 41, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 33 + 49, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 33 + 57, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 33 + 65, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 33 + 73, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 33 + 81, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 33 + 89, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 33 + 97, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 33 + 105, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 146, 8);
    call write~int(0, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union723.head, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union723.tail, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(0, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union724.__padding[0], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union724.__padding[1], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union724.__padding[2], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union724.__padding[3], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[4], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[5], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[6], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[7], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[8], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[9], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[10], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[11], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[12], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[13], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[14], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[15], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[16], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[17], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[18], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[19], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[20], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[21], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[22], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union724.__padding[23], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union724.dep_map.key.base, #t~union724.dep_map.key.offset, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union724.dep_map.class_cache.base[0], #t~union724.dep_map.class_cache.offset[0], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union724.dep_map.class_cache.base[1], #t~union724.dep_map.class_cache.offset[1], ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union724.dep_map.name.base, #t~union724.dep_map.name.offset, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union724.dep_map.cpu, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union724.dep_map.ip, ~#sierra_device.base, ~#sierra_device.offset + 154 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 154 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 154 + 68 + 8, 8);
    call write~int(0, ~#sierra_device.base, ~#sierra_device.offset + 238, 4);
    call write~int(0, ~#sierra_device.base, ~#sierra_device.offset + 242, 4);
    call write~$Pointer$(#funAddr~sierra_probe.base, #funAddr~sierra_probe.offset, ~#sierra_device.base, ~#sierra_device.offset + 246, 8);
    call write~$Pointer$(#funAddr~sierra_startup.base, #funAddr~sierra_startup.offset, ~#sierra_device.base, ~#sierra_device.offset + 254, 8);
    call write~$Pointer$(#funAddr~sierra_calc_num_ports.base, #funAddr~sierra_calc_num_ports.offset, ~#sierra_device.base, ~#sierra_device.offset + 262, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 270, 8);
    call write~$Pointer$(#funAddr~sierra_release.base, #funAddr~sierra_release.offset, ~#sierra_device.base, ~#sierra_device.offset + 278, 8);
    call write~$Pointer$(#funAddr~sierra_port_probe.base, #funAddr~sierra_port_probe.offset, ~#sierra_device.base, ~#sierra_device.offset + 286, 8);
    call write~$Pointer$(#funAddr~sierra_port_remove.base, #funAddr~sierra_port_remove.offset, ~#sierra_device.base, ~#sierra_device.offset + 294, 8);
    call write~$Pointer$(#funAddr~sierra_suspend.base, #funAddr~sierra_suspend.offset, ~#sierra_device.base, ~#sierra_device.offset + 302, 8);
    call write~$Pointer$(#funAddr~sierra_resume.base, #funAddr~sierra_resume.offset, ~#sierra_device.base, ~#sierra_device.offset + 310, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 318, 8);
    call write~$Pointer$(#funAddr~sierra_open.base, #funAddr~sierra_open.offset, ~#sierra_device.base, ~#sierra_device.offset + 326, 8);
    call write~$Pointer$(#funAddr~sierra_close.base, #funAddr~sierra_close.offset, ~#sierra_device.base, ~#sierra_device.offset + 334, 8);
    call write~$Pointer$(#funAddr~sierra_write.base, #funAddr~sierra_write.offset, ~#sierra_device.base, ~#sierra_device.offset + 342, 8);
    call write~$Pointer$(#funAddr~sierra_write_room.base, #funAddr~sierra_write_room.offset, ~#sierra_device.base, ~#sierra_device.offset + 350, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 358, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 366, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 374, 8);
    call write~$Pointer$(#funAddr~sierra_chars_in_buffer.base, #funAddr~sierra_chars_in_buffer.offset, ~#sierra_device.base, ~#sierra_device.offset + 382, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 390, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 398, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 406, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 414, 8);
    call write~$Pointer$(#funAddr~sierra_tiocmget.base, #funAddr~sierra_tiocmget.offset, ~#sierra_device.base, ~#sierra_device.offset + 422, 8);
    call write~$Pointer$(#funAddr~sierra_tiocmset.base, #funAddr~sierra_tiocmset.offset, ~#sierra_device.base, ~#sierra_device.offset + 430, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 438, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 446, 8);
    call write~$Pointer$(#funAddr~sierra_dtr_rts.base, #funAddr~sierra_dtr_rts.offset, ~#sierra_device.base, ~#sierra_device.offset + 454, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 462, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 470, 8);
    call write~$Pointer$(#funAddr~sierra_instat_callback.base, #funAddr~sierra_instat_callback.offset, ~#sierra_device.base, ~#sierra_device.offset + 478, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 486, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 494, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 502, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 510, 8);
    call write~$Pointer$(0, 0, ~#sierra_device.base, ~#sierra_device.offset + 518, 8);
    havoc #t~nondet634.base, #t~nondet634.offset;
    havoc #t~nondet635.base, #t~nondet635.offset;
    havoc #t~union723.head, #t~union723.tail;
    havoc #t~union724.__padding, #t~union724.dep_map.key.base, #t~union724.dep_map.key.offset, #t~union724.dep_map.class_cache.base, #t~union724.dep_map.class_cache.offset, #t~union724.dep_map.name.base, #t~union724.dep_map.name.offset, #t~union724.dep_map.cpu, #t~union724.dep_map.ip;
    call ~#serial_drivers.base, ~#serial_drivers.offset := #Ultimate.alloc(16);
    call write~$Pointer$(~#sierra_device.base, ~#sierra_device.offset, ~#serial_drivers.base, ~#serial_drivers.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#serial_drivers.base, ~#serial_drivers.offset + 8, 8);
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ref_cnt, ~ldv_state_variable_1, ~ldv_state_variable_0, ~ldv_retval_2, ~ldv_retval_0, ~ldv_retval_5, ~ldv_retval_4, ~ldv_retval_1, ~ldv_retval_3, ~ldv_spin, ~sierra_device_group1.base, ~sierra_device_group1.offset, ~sierra_device_group2.base, ~sierra_device_group2.offset, ~sierra_device_group0.base, ~sierra_device_group0.offset, ~nmea, ~#hi_memory_typeA_ifaces.base, ~#hi_memory_typeA_ifaces.offset, ~#typeA_interface_list.base, ~#typeA_interface_list.offset, ~#hi_memory_typeB_ifaces.base, ~#hi_memory_typeB_ifaces.offset, ~#typeB_interface_list.base, ~#typeB_interface_list.offset, ~#direct_ip_non_serial_ifaces.base, ~#direct_ip_non_serial_ifaces.offset, ~#direct_ip_interface_blacklist.base, ~#direct_ip_interface_blacklist.offset, ~#id_table.base, ~#id_table.offset, ~#sierra_device.base, ~#sierra_device.offset, ~#serial_drivers.base, ~#serial_drivers.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_error() returns (){
  loc2:
    assume !false;
    goto loc3;
  loc3:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr726 : int;

  loc4:
    #t~loopctr726 := 0;
    goto loc5;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume #t~loopctr726 < #amount;
    #memory_int := #memory_int[#ptr.base,#ptr.offset + #t~loopctr726 * 1 := #value];
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset + #t~loopctr726 * 1 := 0], #memory_$Pointer$.offset[#ptr.base,#ptr.offset + #t~loopctr726 * 1 := #value % 256];
    #t~loopctr726 := #t~loopctr726 + 1;
    goto loc5;
  loc5_1:
    assume !(#t~loopctr726 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation kzalloc(#in~size : int, #in~flags : int) returns (#res.base : int, #res.offset : int){
    var ~size : int;
    var ~flags : int;

  loc6:
    ~size := #in~size;
    ~flags := #in~flags;
    call ldv_check_alloc_flags(~flags);
    return;
}

procedure kzalloc(#in~size : int, #in~flags : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~nondet25 : int;
    var #t~malloc26.base : int, #t~malloc26.offset : int;
    var ~size : int;
    var ~p~46.base : int, ~p~46.offset : int;
    var ~tmp~46.base : int, ~tmp~46.offset : int;
    var ~tmp___0~46 : int;

  loc7:
    ~size := #in~size;
    havoc ~p~46.base, ~p~46.offset;
    havoc ~tmp~46.base, ~tmp~46.offset;
    havoc ~tmp___0~46;
    assume -2147483648 <= #t~nondet25 && #t~nondet25 <= 2147483647;
    ~tmp___0~46 := #t~nondet25;
    havoc #t~nondet25;
    assume ~tmp___0~46 != 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ULTIMATE.start() returns (){
    var #t~ret725 : int;

  loc8:
    call ULTIMATE.init();
    call #t~ret725 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ref_cnt, ~ldv_state_variable_1, ~ldv_state_variable_0, ~ldv_retval_2, ~ldv_retval_0, ~ldv_retval_5, ~ldv_retval_4, ~ldv_retval_1, ~ldv_retval_3, ~ldv_spin, ~sierra_device_group1.base, ~sierra_device_group1.offset, ~sierra_device_group2.base, ~sierra_device_group2.offset, ~sierra_device_group0.base, ~sierra_device_group0.offset, ~nmea, ~#hi_memory_typeA_ifaces.base, ~#hi_memory_typeA_ifaces.offset, ~#typeA_interface_list.base, ~#typeA_interface_list.offset, ~#hi_memory_typeB_ifaces.base, ~#hi_memory_typeB_ifaces.offset, ~#typeB_interface_list.base, ~#typeB_interface_list.offset, ~#direct_ip_non_serial_ifaces.base, ~#direct_ip_non_serial_ifaces.offset, ~#direct_ip_interface_blacklist.base, ~#direct_ip_interface_blacklist.offset, ~#id_table.base, ~#id_table.offset, ~#sierra_device.base, ~#sierra_device.offset, ~#serial_drivers.base, ~#serial_drivers.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_retval_4, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_5;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~sierra_device_group0.base, ~sierra_device_group0.offset, ~sierra_device_group1.base, ~sierra_device_group1.offset, ~sierra_device_group2.base, ~sierra_device_group2.offset, ~ldv_spin, ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_retval_4, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_5;

implementation main() returns (#res : int){
    var #t~ret641.base : int, #t~ret641.offset : int;
    var #t~nondet642 : int;
    var #t~ret643.base : int, #t~ret643.offset : int;
    var #t~nondet644 : int;
    var #t~nondet645 : int;
    var #t~nondet646 : int;
    var #t~ret647.base : int, #t~ret647.offset : int;
    var #t~memset648.base : int, #t~memset648.offset : int;
    var #t~nondet649 : int;
    var #t~switch650 : bool;
    var #t~nondet651 : int;
    var #t~switch652 : bool;
    var #t~ret653 : int;
    var #t~ret654 : int;
    var #t~ret655 : int;
    var #t~ret656 : int;
    var #t~ret657 : int;
    var #t~ret658 : int;
    var #t~ret659 : int;
    var #t~mem660 : int;
    var #t~ret661 : int;
    var #t~mem662 : int;
    var #t~ret663 : int;
    var #t~ret664 : int;
    var #t~ret665 : int;
    var #t~ret666 : int;
    var #t~ret667 : int;
    var #t~ret668 : int;
    var #t~ret669 : int;
    var #t~ret670 : int;
    var #t~ret671 : int;
    var #t~ret672 : int;
    var #t~ret673 : int;
    var #t~ret674 : int;
    var #t~ret675 : int;
    var #t~ret676 : int;
    var #t~ret677 : int;
    var #t~ret678 : int;
    var #t~ret679 : int;
    var #t~ret680 : int;
    var #t~ret681 : int;
    var #t~ret682 : int;
    var #t~ret683 : int;
    var #t~ret684 : int;
    var #t~ret685 : int;
    var #t~ret686 : int;
    var #t~ret687 : int;
    var #t~ret688 : int;
    var #t~ret689 : int;
    var #t~ret690 : int;
    var #t~ret691 : int;
    var #t~ret692 : int;
    var #t~ret693 : int;
    var #t~ret694 : int;
    var #t~ret695 : int;
    var #t~ret696 : int;
    var #t~ret697 : int;
    var #t~ret698 : int;
    var #t~ret699 : int;
    var #t~ret700 : int;
    var #t~ret701 : int;
    var #t~ret702 : int;
    var #t~ret703 : int;
    var #t~ret704 : int;
    var #t~ret705 : int;
    var #t~ret706 : int;
    var #t~ret707 : int;
    var #t~ret708 : int;
    var #t~ret709 : int;
    var #t~ret710 : int;
    var #t~nondet711 : int;
    var #t~switch712 : bool;
    var #t~ret713 : int;
    var ~ldvarg7~371.base : int, ~ldvarg7~371.offset : int;
    var ~tmp~371.base : int, ~tmp~371.offset : int;
    var ~ldvarg3~371 : int;
    var ~tmp___0~371 : int;
    var ~ldvarg0~371.base : int, ~ldvarg0~371.offset : int;
    var ~tmp___1~371.base : int, ~tmp___1~371.offset : int;
    var ~#ldvarg5~371.base : int, ~#ldvarg5~371.offset : int;
    var ~ldvarg6~371 : int;
    var ~tmp___2~371 : int;
    var ~ldvarg1~371 : int;
    var ~tmp___3~371 : int;
    var ~ldvarg4~371 : int;
    var ~tmp___4~371 : int;
    var ~ldvarg2~371.base : int, ~ldvarg2~371.offset : int;
    var ~tmp___5~371.base : int, ~tmp___5~371.offset : int;
    var ~tmp___6~371 : int;
    var ~tmp___7~371 : int;
    var ~tmp___8~371 : int;

  loc9:
    havoc ~ldvarg7~371.base, ~ldvarg7~371.offset;
    havoc ~tmp~371.base, ~tmp~371.offset;
    havoc ~ldvarg3~371;
    havoc ~tmp___0~371;
    havoc ~ldvarg0~371.base, ~ldvarg0~371.offset;
    havoc ~tmp___1~371.base, ~tmp___1~371.offset;
    call ~#ldvarg5~371.base, ~#ldvarg5~371.offset := #Ultimate.alloc(4);
    havoc ~ldvarg6~371;
    havoc ~tmp___2~371;
    havoc ~ldvarg1~371;
    havoc ~tmp___3~371;
    havoc ~ldvarg4~371;
    havoc ~tmp___4~371;
    havoc ~ldvarg2~371.base, ~ldvarg2~371.offset;
    havoc ~tmp___5~371.base, ~tmp___5~371.offset;
    havoc ~tmp___6~371;
    havoc ~tmp___7~371;
    havoc ~tmp___8~371;
    call #t~ret641.base, #t~ret641.offset := ldv_zalloc(32);
    ~tmp~371.base, ~tmp~371.offset := #t~ret641.base, #t~ret641.offset;
    havoc #t~ret641.base, #t~ret641.offset;
    ~ldvarg7~371.base, ~ldvarg7~371.offset := ~tmp~371.base, ~tmp~371.offset;
    ~tmp___0~371 := #t~nondet642;
    havoc #t~nondet642;
    ~ldvarg3~371 := ~tmp___0~371;
    call #t~ret643.base, #t~ret643.offset := ldv_zalloc(192);
    ~tmp___1~371.base, ~tmp___1~371.offset := #t~ret643.base, #t~ret643.offset;
    havoc #t~ret643.base, #t~ret643.offset;
    ~ldvarg0~371.base, ~ldvarg0~371.offset := ~tmp___1~371.base, ~tmp___1~371.offset;
    assume -2147483648 <= #t~nondet644 && #t~nondet644 <= 2147483647;
    ~tmp___2~371 := #t~nondet644;
    havoc #t~nondet644;
    ~ldvarg6~371 := ~tmp___2~371;
    assume -2147483648 <= #t~nondet645 && #t~nondet645 <= 2147483647;
    ~tmp___3~371 := #t~nondet645;
    havoc #t~nondet645;
    ~ldvarg1~371 := ~tmp___3~371;
    ~tmp___4~371 := #t~nondet646;
    havoc #t~nondet646;
    ~ldvarg4~371 := ~tmp___4~371;
    call #t~ret647.base, #t~ret647.offset := ldv_zalloc(1);
    ~tmp___5~371.base, ~tmp___5~371.offset := #t~ret647.base, #t~ret647.offset;
    havoc #t~ret647.base, #t~ret647.offset;
    ~ldvarg2~371.base, ~ldvarg2~371.offset := ~tmp___5~371.base, ~tmp___5~371.offset;
    call ldv_initialize();
    call #t~memset648.base, #t~memset648.offset := #Ultimate.C_memset(~#ldvarg5~371.base, ~#ldvarg5~371.offset, 0, 4);
    havoc #t~memset648.base, #t~memset648.offset;
    ~ldv_state_variable_1 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    goto loc10;
  loc10:
    assume -2147483648 <= #t~nondet649 && #t~nondet649 <= 2147483647;
    ~tmp___6~371 := #t~nondet649;
    havoc #t~nondet649;
    #t~switch650 := ~tmp___6~371 == 0;
    goto loc11;
  loc11:
    goto loc11_0, loc11_1;
  loc11_0:
    assume #t~switch650;
    assume ~ldv_state_variable_1 != 0;
    assume -2147483648 <= #t~nondet651 && #t~nondet651 <= 2147483647;
    ~tmp___7~371 := #t~nondet651;
    havoc #t~nondet651;
    #t~switch652 := ~tmp___7~371 == 0;
    assume !#t~switch652;
    #t~switch652 := #t~switch652 || ~tmp___7~371 == 1;
    assume !#t~switch652;
    #t~switch652 := #t~switch652 || ~tmp___7~371 == 2;
    assume #t~switch652;
    assume !(~ldv_state_variable_1 == 6);
    assume !(~ldv_state_variable_1 == 4);
    assume ~ldv_state_variable_1 == 1;
    call #t~ret656 := sierra_port_probe(~sierra_device_group2.base, ~sierra_device_group2.offset);
    return;
  loc11_1:
    assume !#t~switch650;
    #t~switch650 := #t~switch650 || ~tmp___6~371 == 1;
    assume #t~switch650;
    assume ~ldv_state_variable_0 != 0;
    assume -2147483648 <= #t~nondet711 && #t~nondet711 <= 2147483647;
    ~tmp___8~371 := #t~nondet711;
    havoc #t~nondet711;
    #t~switch712 := ~tmp___8~371 == 0;
    assume !#t~switch712;
    #t~switch712 := #t~switch712 || ~tmp___8~371 == 1;
    assume #t~switch712;
    assume ~ldv_state_variable_0 == 1;
    call #t~ret713 := usb_serial_module_init();
    assume -2147483648 <= #t~ret713 && #t~ret713 <= 2147483647;
    ~ldv_retval_5 := #t~ret713;
    havoc #t~ret713;
    assume !(~ldv_retval_5 != 0);
    assume ~ldv_retval_5 == 0;
    ~ldv_state_variable_0 := 2;
    ~ldv_state_variable_1 := 1;
    call ldv_initialize_usb_serial_driver_1();
    goto loc10;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_1, ~ref_cnt, ~ldv_state_variable_0, ~ldv_retval_4, ~ldv_retval_3, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_5, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~sierra_device_group0.base, ~sierra_device_group0.offset, ~sierra_device_group1.base, ~sierra_device_group1.offset, ~sierra_device_group2.base, ~sierra_device_group2.offset, ~ldv_spin;

implementation ldv_check_alloc_flags(#in~flags : int) returns (){
    var ~flags : int;

  loc12:
    ~flags := #in~flags;
    assume !(~ldv_spin == 0 || ~bitwiseAnd(~flags, 16) % 4294967296 == 0);
    call ldv_error();
    return;
}

procedure ldv_check_alloc_flags(#in~flags : int) returns ();
modifies ;

implementation sierra_port_probe(#in~port.base : int, #in~port.offset : int) returns (#res : int){
    var #t~mem579.base : int, #t~mem579.offset : int;
    var #t~ret580.base : int, #t~ret580.offset : int;
    var #t~ret581.base : int, #t~ret581.offset : int;
    var #t~nondet582.base : int, #t~nondet582.offset : int;
    var #t~mem585 : int;
    var #t~ret586 : int;
    var #t~mem587 : int;
    var #t~ret588 : int;
    var #t~nondet591.base : int, #t~nondet591.offset : int;
    var #t~nondet593.base : int, #t~nondet593.offset : int;
    var #t~nondet595.base : int, #t~nondet595.offset : int;
    var #t~nondet597.base : int, #t~nondet597.offset : int;
    var #t~mem601 : int;
    var #t~ret602 : int;
    var #t~nondet603.base : int, #t~nondet603.offset : int;
    var #t~ret604 : int;
    var ~port.base : int, ~port.offset : int;
    var ~serial~320.base : int, ~serial~320.offset : int;
    var ~portdata~320.base : int, ~portdata~320.offset : int;
    var ~himemoryp~320.base : int, ~himemoryp~320.offset : int;
    var ~ifnum~320 : ~u8;
    var ~tmp~320.base : int, ~tmp~320.offset : int;
    var ~#__key~320.base : int, ~#__key~320.offset : int;
    var ~tmp___0~320 : int;
    var ~tmp___1~320 : int;
    var ~#descriptor~320.base : int, ~#descriptor~320.offset : int;
    var ~tmp___2~320 : int;

  loc13:
    ~port.base, ~port.offset := #in~port.base, #in~port.offset;
    havoc ~serial~320.base, ~serial~320.offset;
    havoc ~portdata~320.base, ~portdata~320.offset;
    havoc ~himemoryp~320.base, ~himemoryp~320.offset;
    havoc ~ifnum~320;
    havoc ~tmp~320.base, ~tmp~320.offset;
    call ~#__key~320.base, ~#__key~320.offset := #Ultimate.alloc(8);
    havoc ~tmp___0~320;
    havoc ~tmp___1~320;
    call ~#descriptor~320.base, ~#descriptor~320.offset := #Ultimate.alloc(37);
    havoc ~tmp___2~320;
    call #t~mem579.base, #t~mem579.offset := read~$Pointer$(~port.base, ~port.offset + 0, 8);
    ~serial~320.base, ~serial~320.offset := #t~mem579.base, #t~mem579.offset;
    havoc #t~mem579.base, #t~mem579.offset;
    call #t~ret580.base, #t~ret580.offset := kzalloc(544, 208);
    return;
}

procedure sierra_port_probe(#in~port.base : int, #in~port.offset : int) returns (#res : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_initialize_usb_serial_driver_1() returns (){
    var #t~ret638.base : int, #t~ret638.offset : int;
    var #t~ret639.base : int, #t~ret639.offset : int;
    var #t~ret640.base : int, #t~ret640.offset : int;
    var ~tmp~369.base : int, ~tmp~369.offset : int;
    var ~tmp___0~369.base : int, ~tmp___0~369.offset : int;
    var ~tmp___1~369.base : int, ~tmp___1~369.offset : int;

  loc14:
    havoc ~tmp~369.base, ~tmp~369.offset;
    havoc ~tmp___0~369.base, ~tmp___0~369.offset;
    havoc ~tmp___1~369.base, ~tmp___1~369.offset;
    call #t~ret638.base, #t~ret638.offset := ldv_zalloc(1752);
    ~tmp~369.base, ~tmp~369.offset := #t~ret638.base, #t~ret638.offset;
    havoc #t~ret638.base, #t~ret638.offset;
    ~sierra_device_group0.base, ~sierra_device_group0.offset := ~tmp~369.base, ~tmp~369.offset;
    call #t~ret639.base, #t~ret639.offset := ldv_zalloc(280);
    ~tmp___0~369.base, ~tmp___0~369.offset := #t~ret639.base, #t~ret639.offset;
    havoc #t~ret639.base, #t~ret639.offset;
    ~sierra_device_group1.base, ~sierra_device_group1.offset := ~tmp___0~369.base, ~tmp___0~369.offset;
    call #t~ret640.base, #t~ret640.offset := ldv_zalloc(3032);
    ~tmp___1~369.base, ~tmp___1~369.offset := #t~ret640.base, #t~ret640.offset;
    havoc #t~ret640.base, #t~ret640.offset;
    ~sierra_device_group2.base, ~sierra_device_group2.offset := ~tmp___1~369.base, ~tmp___1~369.offset;
    assume true;
    return;
}

procedure ldv_initialize_usb_serial_driver_1() returns ();
modifies ~sierra_device_group0.base, ~sierra_device_group0.offset, ~sierra_device_group1.base, ~sierra_device_group1.offset, ~sierra_device_group2.base, ~sierra_device_group2.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

procedure tty_insert_flip_string_fixed_flag(#in~29.base : int, #in~29.offset : int, #in~30.base : int, #in~30.offset : int, #in~31 : int, #in~32 : int) returns (#res : int);
modifies ;

procedure __raw_spin_lock_init(#in~9.base : int, #in~9.offset : int, #in~10.base : int, #in~10.offset : int, #in~11.base : int, #in~11.offset : int) returns ();
modifies ;

procedure tty_port_tty_hangup(#in~27.base : int, #in~27.offset : int, #in~28 : int) returns ();
modifies ;

procedure usb_submit_urb(#in~58.base : int, #in~58.offset : int, #in~59 : int) returns (#res : int);
modifies ;

procedure usb_serial_register_drivers(#in~84.base : int, #in~84.offset : int, #in~85.base : int, #in~85.offset : int, #in~86.base : int, #in~86.offset : int) returns (#res : int);
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure usb_autopm_get_interface_async(#in~42.base : int, #in~42.offset : int) returns (#res : int);
modifies ;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure usb_autopm_put_interface(#in~41.base : int, #in~41.offset : int) returns ();
modifies ;

procedure ldv_initialize() returns ();
modifies ;

procedure usb_set_interface(#in~77.base : int, #in~77.offset : int, #in~78 : int, #in~79 : int) returns (#res : int);
modifies ;

procedure usb_kill_urb(#in~60.base : int, #in~60.offset : int) returns ();
modifies ;

procedure tty_flip_buffer_push(#in~33.base : int, #in~33.offset : int) returns ();
modifies ;

procedure usb_kill_anchored_urbs(#in~61.base : int, #in~61.offset : int) returns ();
modifies ;

procedure kfree(#in~21.base : int, #in~21.offset : int) returns ();
modifies ;

procedure usb_autopm_get_interface(#in~40.base : int, #in~40.offset : int) returns (#res : int);
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];

procedure __dynamic_dev_dbg(#in~1.base : int, #in~1.offset : int, #in~2.base : int, #in~2.offset : int, #in~3.base : int, #in~3.offset : int) returns (#res : int);
modifies ;

procedure usb_serial_deregister_drivers(#in~87.base : int, #in~87.offset : int) returns ();
modifies ;

procedure __VERIFIER_error() returns ();
modifies ;

procedure __VERIFIER_nondet_uint() returns (#res : int);
modifies ;

procedure usb_autopm_put_interface_async(#in~43.base : int, #in~43.offset : int) returns ();
modifies ;

procedure usb_autopm_get_interface_no_resume(#in~44.base : int, #in~44.offset : int) returns ();
modifies ;

procedure ldv_detach_1() returns (#res : int);
modifies ;

procedure __VERIFIER_assume(#in~expression : int) returns ();
modifies ;

procedure __kmalloc(#in~22 : int, #in~23 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];

procedure _raw_spin_unlock_irq(#in~15.base : int, #in~15.offset : int) returns ();
modifies ;

procedure _raw_spin_unlock_irqrestore(#in~16.base : int, #in~16.offset : int, #in~17 : int) returns ();
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure usb_control_msg(#in~66.base : int, #in~66.offset : int, #in~67 : int, #in~68 : int, #in~69 : int, #in~70 : int, #in~71 : int, #in~72.base : int, #in~72.offset : int, #in~73 : int, #in~74 : int) returns (#res : int);
modifies ;

procedure usb_free_urb(#in~57.base : int, #in~57.offset : int) returns ();
modifies ;

procedure memset(#in~6.base : int, #in~6.offset : int, #in~7 : int, #in~8 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure _raw_spin_unlock(#in~14.base : int, #in~14.offset : int) returns ();
modifies ;

procedure usb_anchor_urb(#in~62.base : int, #in~62.offset : int, #in~63.base : int, #in~63.offset : int) returns ();
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure calloc(#in~nmemb : int, #in~size : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure dev_err(#in~37.base : int, #in~37.offset : int, #in~38.base : int, #in~38.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock_irq(#in~13.base : int, #in~13.offset : int) returns ();
modifies ;

procedure usb_unanchor_urb(#in~64.base : int, #in~64.offset : int) returns ();
modifies ;

procedure __init_waitqueue_head(#in~18.base : int, #in~18.offset : int, #in~19.base : int, #in~19.offset : int, #in~20.base : int, #in~20.offset : int) returns ();
modifies ;

procedure usb_serial_port_softint(#in~88.base : int, #in~88.offset : int) returns ();
modifies ;

procedure _raw_spin_lock(#in~12.base : int, #in~12.offset : int) returns ();
modifies ;

procedure usb_clear_halt(#in~75.base : int, #in~75.offset : int, #in~76 : int) returns (#res : int);
modifies ;

procedure usb_get_from_anchor(#in~65.base : int, #in~65.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_alloc_urb(#in~55 : int, #in~56 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ldv_check_final_state() returns ();
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;


type STRUCT~task_struct;
type STRUCT~optimistic_spin_queue;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~xol_area;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~file;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~fasync_struct;
type STRUCT~sock;
type STRUCT~poll_table_struct;
type STRUCT~kiocb;
type STRUCT~pipe_inode_info;
type STRUCT~kernfs_open_node;
type STRUCT~kernfs_iattrs;
type STRUCT~seq_file;
type STRUCT~kmem_cache_node;
type STRUCT~mem_cgroup;
type STRUCT~pinctrl;
type STRUCT~pinctrl_state;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~acpi_device;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~cma;
type STRUCT~device_node;
type STRUCT~iommu_group;
type STRUCT~nsproxy;
type STRUCT~sec_path;
type STRUCT~hotplug_slot;
type STRUCT~pci_sriov;
type STRUCT~proc_dir_entry;
type STRUCT~pcie_link_state;
type STRUCT~pci_vpd;
type STRUCT~pci_ats;
type STRUCT~msi_chip;
type STRUCT~inode;
type STRUCT~super_block;
type STRUCT~vfsmount;
type STRUCT~path;
type STRUCT~writeback_control;
type STRUCT~swap_info_struct;
type STRUCT~backing_dev_info;
type STRUCT~prot_inuse;
type STRUCT~ipv4_devconf;
type STRUCT~fib_rules_ops;
type STRUCT~fib_table;
type STRUCT~inet_peer_base;
type STRUCT~tcpm_hash_bucket;
type STRUCT~xt_table;
type STRUCT~dst_entry;
type STRUCT~neighbour;
type STRUCT~ipv6_devconf;
type STRUCT~rt6_info;
type STRUCT~rt6_statistics;
type STRUCT~fib6_table;
type STRUCT~sctp_mib;
type STRUCT~nf_logger;
type STRUCT~ebt_table;
type STRUCT~ip_conntrack_stat;
type STRUCT~nf_ct_event_notifier;
type STRUCT~nf_exp_event_notifier;
type STRUCT~nft_af_info;
type STRUCT~user_namespace;
type STRUCT~net_generic;
type STRUCT~netns_ipvs;
type STRUCT~mii_bus;
type STRUCT~Qdisc;
type STRUCT~neigh_parms;
type STRUCT~netpoll_info;
type STRUCT~pcpu_lstats;
type STRUCT~pcpu_dstats;
type STRUCT~pcpu_vstats;
type STRUCT~iw_handler_def;
type STRUCT~iw_public_data;
type STRUCT~forwarding_accel_ops;
type STRUCT~vlan_info;
type STRUCT~tipc_bearer;
type STRUCT~in_device;
type STRUCT~dn_dev;
type STRUCT~inet6_dev;
type STRUCT~cpu_rmap;
type STRUCT~garp_port;
type STRUCT~mrp_port;
type STRUCT~rtnl_link_ops;
type STRUCT~phy_device;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~tracepoint;
type STRUCT~ftrace_event_call;
type STRUCT~cfg80211_cached_keys;
type STRUCT~cfg80211_conn;
type STRUCT~cfg80211_internal_bss;
type ~__u8 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__u64 = int;
type ~s8 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~gfp_t = int;
type ~pteval_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~__kernel_sa_family_t = int;
type ~sk_buff_data_t = int;
type ~kernel_ulong_t = int;
type ~pci_power_t = int;
type ~pci_channel_state_t = int;
type ~pci_dev_flags_t = int;
type ~pci_bus_flags_t = int;
type ~pci_ers_result_t = int;
type ~ldv_func_ret_type = int;
type ~ldv_func_ret_type___0 = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__le16 = ~__u16;
type ~__be16 = ~__u16;
type ~__le32 = ~__u32;
type ~__be32 = ~__u32;
type ~__le64 = ~__u64;
type ~__wsum = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~uint8_t = ~__u8;
type ~uint64_t = ~__u64;
type ~dma_addr_t = ~u64;
type ~phys_addr_t = ~u64;
type ~resource_size_t = ~phys_addr_t;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~sa_family_t = ~__kernel_sa_family_t;
type ~socket_state = int;
type ~dma_cookie_t = ~s32;
type ~netdev_features_t = ~u64;
type ~irqreturn_t = int;
type ~netdev_tx_t = int;
type ~rx_handler_result_t = int;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
const #funAddr~rtl8187se_interrupt.base : int;
const #funAddr~rtl8187se_interrupt.offset : int;
const #funAddr~rtl8180_interrupt.base : int;
const #funAddr~rtl8180_interrupt.offset : int;
const #funAddr~rtl8180_beacon_work.base : int;
const #funAddr~rtl8180_beacon_work.offset : int;
const #funAddr~delayed_work_timer_fn.base : int;
const #funAddr~delayed_work_timer_fn.offset : int;
const #funAddr~rtl8180_tx.base : int;
const #funAddr~rtl8180_tx.offset : int;
const #funAddr~rtl8180_start.base : int;
const #funAddr~rtl8180_start.offset : int;
const #funAddr~rtl8180_stop.base : int;
const #funAddr~rtl8180_stop.offset : int;
const #funAddr~rtl8180_add_interface.base : int;
const #funAddr~rtl8180_add_interface.offset : int;
const #funAddr~rtl8180_remove_interface.base : int;
const #funAddr~rtl8180_remove_interface.offset : int;
const #funAddr~rtl8180_config.base : int;
const #funAddr~rtl8180_config.offset : int;
const #funAddr~rtl8180_bss_info_changed.base : int;
const #funAddr~rtl8180_bss_info_changed.offset : int;
const #funAddr~rtl8180_prepare_multicast.base : int;
const #funAddr~rtl8180_prepare_multicast.offset : int;
const #funAddr~rtl8180_configure_filter.base : int;
const #funAddr~rtl8180_configure_filter.offset : int;
const #funAddr~rtl8180_conf_tx.base : int;
const #funAddr~rtl8180_conf_tx.offset : int;
const #funAddr~rtl8180_get_tsf.base : int;
const #funAddr~rtl8180_get_tsf.offset : int;
const #funAddr~rtl8180_eeprom_register_read.base : int;
const #funAddr~rtl8180_eeprom_register_read.offset : int;
const #funAddr~rtl8180_eeprom_register_write.base : int;
const #funAddr~rtl8180_eeprom_register_write.offset : int;
const #funAddr~rtl8180_probe.base : int;
const #funAddr~rtl8180_probe.offset : int;
const #funAddr~rtl8180_remove.base : int;
const #funAddr~rtl8180_remove.offset : int;
const #funAddr~rtl8180_suspend.base : int;
const #funAddr~rtl8180_suspend.offset : int;
const #funAddr~rtl8180_resume.base : int;
const #funAddr~rtl8180_resume.offset : int;
const #funAddr~rtl8225_rf_init.base : int;
const #funAddr~rtl8225_rf_init.offset : int;
const #funAddr~rtl8225_rf_stop.base : int;
const #funAddr~rtl8225_rf_stop.offset : int;
const #funAddr~rtl8225_rf_set_channel.base : int;
const #funAddr~rtl8225_rf_set_channel.offset : int;
const #funAddr~rtl8225z2_rf_init.base : int;
const #funAddr~rtl8225z2_rf_init.offset : int;
const #funAddr~sa2400_rf_init.base : int;
const #funAddr~sa2400_rf_init.offset : int;
const #funAddr~sa2400_rf_stop.base : int;
const #funAddr~sa2400_rf_stop.offset : int;
const #funAddr~sa2400_rf_set_channel.base : int;
const #funAddr~sa2400_rf_set_channel.offset : int;
const #funAddr~sa2400_rf_calc_rssi.base : int;
const #funAddr~sa2400_rf_calc_rssi.offset : int;
const #funAddr~max2820_rf_init.base : int;
const #funAddr~max2820_rf_init.offset : int;
const #funAddr~max2820_rf_stop.base : int;
const #funAddr~max2820_rf_stop.offset : int;
const #funAddr~max2820_rf_set_channel.base : int;
const #funAddr~max2820_rf_set_channel.offset : int;
const #funAddr~max2820_rf_calc_rssi.base : int;
const #funAddr~max2820_rf_calc_rssi.offset : int;
const #funAddr~grf5101_rf_init.base : int;
const #funAddr~grf5101_rf_init.offset : int;
const #funAddr~grf5101_rf_stop.base : int;
const #funAddr~grf5101_rf_stop.offset : int;
const #funAddr~grf5101_rf_set_channel.base : int;
const #funAddr~grf5101_rf_set_channel.offset : int;
const #funAddr~grf5101_rf_calc_rssi.base : int;
const #funAddr~grf5101_rf_calc_rssi.offset : int;
const #funAddr~rtl8225se_rf_init.base : int;
const #funAddr~rtl8225se_rf_init.offset : int;
const #funAddr~rtl8225se_rf_stop.base : int;
const #funAddr~rtl8225se_rf_stop.offset : int;
const #funAddr~rtl8225se_rf_set_channel.base : int;
const #funAddr~rtl8225se_rf_set_channel.offset : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~ldv_13278~SS_FREE : int;
const ~ldv_13278~SS_UNCONNECTED : int;
const ~ldv_13278~SS_CONNECTING : int;
const ~ldv_13278~SS_CONNECTED : int;
const ~ldv_13278~SS_DISCONNECTING : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~irqreturn~IRQ_NONE : int;
const ~irqreturn~IRQ_HANDLED : int;
const ~irqreturn~IRQ_WAKE_THREAD : int;
const ~pci_channel_state~pci_channel_io_normal : int;
const ~pci_channel_state~pci_channel_io_frozen : int;
const ~pci_channel_state~pci_channel_io_perm_failure : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_RESUME_LATENCY : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY_TOLERANCE : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS : int;
const ~pm_qos_type~PM_QOS_UNITIALIZED : int;
const ~pm_qos_type~PM_QOS_MAX : int;
const ~pm_qos_type~PM_QOS_MIN : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ON : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_OFF : int;
const ~netdev_tx~__NETDEV_TX_MIN : int;
const ~netdev_tx~NETDEV_TX_OK : int;
const ~netdev_tx~NETDEV_TX_BUSY : int;
const ~netdev_tx~NETDEV_TX_LOCKED : int;
const ~rx_handler_result~RX_HANDLER_CONSUMED : int;
const ~rx_handler_result~RX_HANDLER_ANOTHER : int;
const ~rx_handler_result~RX_HANDLER_EXACT : int;
const ~rx_handler_result~RX_HANDLER_PASS : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~nl80211_iftype~NL80211_IFTYPE_UNSPECIFIED : int;
const ~nl80211_iftype~NL80211_IFTYPE_ADHOC : int;
const ~nl80211_iftype~NL80211_IFTYPE_STATION : int;
const ~nl80211_iftype~NL80211_IFTYPE_AP : int;
const ~nl80211_iftype~NL80211_IFTYPE_AP_VLAN : int;
const ~nl80211_iftype~NL80211_IFTYPE_WDS : int;
const ~nl80211_iftype~NL80211_IFTYPE_MONITOR : int;
const ~nl80211_iftype~NL80211_IFTYPE_MESH_POINT : int;
const ~nl80211_iftype~NL80211_IFTYPE_P2P_CLIENT : int;
const ~nl80211_iftype~NL80211_IFTYPE_P2P_GO : int;
const ~nl80211_iftype~NL80211_IFTYPE_P2P_DEVICE : int;
const ~nl80211_iftype~NUM_NL80211_IFTYPES : int;
const ~nl80211_iftype~NL80211_IFTYPE_MAX : int;
const ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_CORE : int;
const ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_USER : int;
const ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_DRIVER : int;
const ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_COUNTRY_IE : int;
const ~nl80211_dfs_regions~NL80211_DFS_UNSET : int;
const ~nl80211_dfs_regions~NL80211_DFS_FCC : int;
const ~nl80211_dfs_regions~NL80211_DFS_ETSI : int;
const ~nl80211_dfs_regions~NL80211_DFS_JP : int;
const ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_USER : int;
const ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_CELL_BASE : int;
const ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_INDOOR : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_20_NOHT : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_20 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_40 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_80 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_80P80 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_160 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_5 : int;
const ~nl80211_chan_width~NL80211_CHAN_WIDTH_10 : int;
const ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_20 : int;
const ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_10 : int;
const ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_5 : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_OPEN_SYSTEM : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_SHARED_KEY : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_FT : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_NETWORK_EAP : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_SAE : int;
const ~nl80211_auth_type~__NL80211_AUTHTYPE_NUM : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_MAX : int;
const ~nl80211_auth_type~NL80211_AUTHTYPE_AUTOMATIC : int;
const ~nl80211_mfp~NL80211_MFP_NO : int;
const ~nl80211_mfp~NL80211_MFP_REQUIRED : int;
const ~nl80211_txrate_gi~NL80211_TXRATE_DEFAULT_GI : int;
const ~nl80211_txrate_gi~NL80211_TXRATE_FORCE_SGI : int;
const ~nl80211_txrate_gi~NL80211_TXRATE_FORCE_LGI : int;
const ~nl80211_dfs_state~NL80211_DFS_USABLE : int;
const ~nl80211_dfs_state~NL80211_DFS_UNAVAILABLE : int;
const ~nl80211_dfs_state~NL80211_DFS_AVAILABLE : int;
const ~environment_cap~ENVIRON_ANY : int;
const ~environment_cap~ENVIRON_INDOOR : int;
const ~environment_cap~ENVIRON_OUTDOOR : int;
const ~ieee80211_band~IEEE80211_BAND_2GHZ : int;
const ~ieee80211_band~IEEE80211_BAND_5GHZ : int;
const ~ieee80211_band~IEEE80211_BAND_60GHZ : int;
const ~ieee80211_band~IEEE80211_NUM_BANDS : int;
const ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_NONE : int;
const ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_MBM : int;
const ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_UNSPEC : int;
const ~ieee80211_chanctx_switch_mode~CHANCTX_SWMODE_REASSIGN_VIF : int;
const ~ieee80211_chanctx_switch_mode~CHANCTX_SWMODE_SWAP_CONTEXTS : int;
const ~ieee80211_rssi_event~RSSI_EVENT_HIGH : int;
const ~ieee80211_rssi_event~RSSI_EVENT_LOW : int;
const ~ieee80211_smps_mode~IEEE80211_SMPS_AUTOMATIC : int;
const ~ieee80211_smps_mode~IEEE80211_SMPS_OFF : int;
const ~ieee80211_smps_mode~IEEE80211_SMPS_STATIC : int;
const ~ieee80211_smps_mode~IEEE80211_SMPS_DYNAMIC : int;
const ~ieee80211_smps_mode~IEEE80211_SMPS_NUM_MODES : int;
const ~set_key_cmd~SET_KEY : int;
const ~set_key_cmd~DISABLE_KEY : int;
const ~ieee80211_sta_state~IEEE80211_STA_NOTEXIST : int;
const ~ieee80211_sta_state~IEEE80211_STA_NONE : int;
const ~ieee80211_sta_state~IEEE80211_STA_AUTH : int;
const ~ieee80211_sta_state~IEEE80211_STA_ASSOC : int;
const ~ieee80211_sta_state~IEEE80211_STA_AUTHORIZED : int;
const ~ieee80211_sta_rx_bandwidth~IEEE80211_STA_RX_BW_20 : int;
const ~ieee80211_sta_rx_bandwidth~IEEE80211_STA_RX_BW_40 : int;
const ~ieee80211_sta_rx_bandwidth~IEEE80211_STA_RX_BW_80 : int;
const ~ieee80211_sta_rx_bandwidth~IEEE80211_STA_RX_BW_160 : int;
const ~sta_notify_cmd~STA_NOTIFY_SLEEP : int;
const ~sta_notify_cmd~STA_NOTIFY_AWAKE : int;
const ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_RX_START : int;
const ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_RX_STOP : int;
const ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_TX_START : int;
const ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_TX_STOP_CONT : int;
const ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_TX_STOP_FLUSH : int;
const ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_TX_STOP_FLUSH_CONT : int;
const ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_TX_OPERATIONAL : int;
const ~ieee80211_frame_release_type~IEEE80211_FRAME_RELEASE_PSPOLL : int;
const ~ieee80211_frame_release_type~IEEE80211_FRAME_RELEASE_UAPSD : int;
const ~ieee80211_roc_type~IEEE80211_ROC_TYPE_NORMAL : int;
const ~ieee80211_roc_type~IEEE80211_ROC_TYPE_MGMT_TX : int;
const ~ldv_33456~RTL818X_CHIP_FAMILY_RTL8180 : int;
const ~ldv_33456~RTL818X_CHIP_FAMILY_RTL8185 : int;
const ~ldv_33456~RTL818X_CHIP_FAMILY_RTL8187SE : int;
axiom #funAddr~rtl8187se_interrupt.base == -1 && #funAddr~rtl8187se_interrupt.offset == 0;
axiom #funAddr~rtl8180_interrupt.base == -1 && #funAddr~rtl8180_interrupt.offset == 1;
axiom #funAddr~rtl8180_beacon_work.base == -1 && #funAddr~rtl8180_beacon_work.offset == 2;
axiom #funAddr~delayed_work_timer_fn.base == -1 && #funAddr~delayed_work_timer_fn.offset == 3;
axiom #funAddr~rtl8180_tx.base == -1 && #funAddr~rtl8180_tx.offset == 4;
axiom #funAddr~rtl8180_start.base == -1 && #funAddr~rtl8180_start.offset == 5;
axiom #funAddr~rtl8180_stop.base == -1 && #funAddr~rtl8180_stop.offset == 6;
axiom #funAddr~rtl8180_add_interface.base == -1 && #funAddr~rtl8180_add_interface.offset == 7;
axiom #funAddr~rtl8180_remove_interface.base == -1 && #funAddr~rtl8180_remove_interface.offset == 8;
axiom #funAddr~rtl8180_config.base == -1 && #funAddr~rtl8180_config.offset == 9;
axiom #funAddr~rtl8180_bss_info_changed.base == -1 && #funAddr~rtl8180_bss_info_changed.offset == 10;
axiom #funAddr~rtl8180_prepare_multicast.base == -1 && #funAddr~rtl8180_prepare_multicast.offset == 11;
axiom #funAddr~rtl8180_configure_filter.base == -1 && #funAddr~rtl8180_configure_filter.offset == 12;
axiom #funAddr~rtl8180_conf_tx.base == -1 && #funAddr~rtl8180_conf_tx.offset == 13;
axiom #funAddr~rtl8180_get_tsf.base == -1 && #funAddr~rtl8180_get_tsf.offset == 14;
axiom #funAddr~rtl8180_eeprom_register_read.base == -1 && #funAddr~rtl8180_eeprom_register_read.offset == 15;
axiom #funAddr~rtl8180_eeprom_register_write.base == -1 && #funAddr~rtl8180_eeprom_register_write.offset == 16;
axiom #funAddr~rtl8180_probe.base == -1 && #funAddr~rtl8180_probe.offset == 17;
axiom #funAddr~rtl8180_remove.base == -1 && #funAddr~rtl8180_remove.offset == 18;
axiom #funAddr~rtl8180_suspend.base == -1 && #funAddr~rtl8180_suspend.offset == 19;
axiom #funAddr~rtl8180_resume.base == -1 && #funAddr~rtl8180_resume.offset == 20;
axiom #funAddr~rtl8225_rf_init.base == -1 && #funAddr~rtl8225_rf_init.offset == 21;
axiom #funAddr~rtl8225_rf_stop.base == -1 && #funAddr~rtl8225_rf_stop.offset == 22;
axiom #funAddr~rtl8225_rf_set_channel.base == -1 && #funAddr~rtl8225_rf_set_channel.offset == 23;
axiom #funAddr~rtl8225z2_rf_init.base == -1 && #funAddr~rtl8225z2_rf_init.offset == 24;
axiom #funAddr~sa2400_rf_init.base == -1 && #funAddr~sa2400_rf_init.offset == 25;
axiom #funAddr~sa2400_rf_stop.base == -1 && #funAddr~sa2400_rf_stop.offset == 26;
axiom #funAddr~sa2400_rf_set_channel.base == -1 && #funAddr~sa2400_rf_set_channel.offset == 27;
axiom #funAddr~sa2400_rf_calc_rssi.base == -1 && #funAddr~sa2400_rf_calc_rssi.offset == 28;
axiom #funAddr~max2820_rf_init.base == -1 && #funAddr~max2820_rf_init.offset == 29;
axiom #funAddr~max2820_rf_stop.base == -1 && #funAddr~max2820_rf_stop.offset == 30;
axiom #funAddr~max2820_rf_set_channel.base == -1 && #funAddr~max2820_rf_set_channel.offset == 31;
axiom #funAddr~max2820_rf_calc_rssi.base == -1 && #funAddr~max2820_rf_calc_rssi.offset == 32;
axiom #funAddr~grf5101_rf_init.base == -1 && #funAddr~grf5101_rf_init.offset == 33;
axiom #funAddr~grf5101_rf_stop.base == -1 && #funAddr~grf5101_rf_stop.offset == 34;
axiom #funAddr~grf5101_rf_set_channel.base == -1 && #funAddr~grf5101_rf_set_channel.offset == 35;
axiom #funAddr~grf5101_rf_calc_rssi.base == -1 && #funAddr~grf5101_rf_calc_rssi.offset == 36;
axiom #funAddr~rtl8225se_rf_init.base == -1 && #funAddr~rtl8225se_rf_init.offset == 37;
axiom #funAddr~rtl8225se_rf_stop.base == -1 && #funAddr~rtl8225se_rf_stop.offset == 38;
axiom #funAddr~rtl8225se_rf_set_channel.base == -1 && #funAddr~rtl8225se_rf_set_channel.offset == 39;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~ldv_13278~SS_FREE == 0;
axiom ~ldv_13278~SS_UNCONNECTED == 1;
axiom ~ldv_13278~SS_CONNECTING == 2;
axiom ~ldv_13278~SS_CONNECTED == 3;
axiom ~ldv_13278~SS_DISCONNECTING == 4;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~irqreturn~IRQ_NONE == 0;
axiom ~irqreturn~IRQ_HANDLED == 1;
axiom ~irqreturn~IRQ_WAKE_THREAD == 2;
axiom ~pci_channel_state~pci_channel_io_normal == 1;
axiom ~pci_channel_state~pci_channel_io_frozen == 2;
axiom ~pci_channel_state~pci_channel_io_perm_failure == 3;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_RESUME_LATENCY == 1;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY_TOLERANCE == 2;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS == 3;
axiom ~pm_qos_type~PM_QOS_UNITIALIZED == 0;
axiom ~pm_qos_type~PM_QOS_MAX == 1;
axiom ~pm_qos_type~PM_QOS_MIN == 2;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE == 0;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE == 1;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ON == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_OFF == 3;
axiom ~netdev_tx~__NETDEV_TX_MIN == -2147483648;
axiom ~netdev_tx~NETDEV_TX_OK == 0;
axiom ~netdev_tx~NETDEV_TX_BUSY == 16;
axiom ~netdev_tx~NETDEV_TX_LOCKED == 32;
axiom ~rx_handler_result~RX_HANDLER_CONSUMED == 0;
axiom ~rx_handler_result~RX_HANDLER_ANOTHER == 1;
axiom ~rx_handler_result~RX_HANDLER_EXACT == 2;
axiom ~rx_handler_result~RX_HANDLER_PASS == 3;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~nl80211_iftype~NL80211_IFTYPE_UNSPECIFIED == 0;
axiom ~nl80211_iftype~NL80211_IFTYPE_ADHOC == 1;
axiom ~nl80211_iftype~NL80211_IFTYPE_STATION == 2;
axiom ~nl80211_iftype~NL80211_IFTYPE_AP == 3;
axiom ~nl80211_iftype~NL80211_IFTYPE_AP_VLAN == 4;
axiom ~nl80211_iftype~NL80211_IFTYPE_WDS == 5;
axiom ~nl80211_iftype~NL80211_IFTYPE_MONITOR == 6;
axiom ~nl80211_iftype~NL80211_IFTYPE_MESH_POINT == 7;
axiom ~nl80211_iftype~NL80211_IFTYPE_P2P_CLIENT == 8;
axiom ~nl80211_iftype~NL80211_IFTYPE_P2P_GO == 9;
axiom ~nl80211_iftype~NL80211_IFTYPE_P2P_DEVICE == 10;
axiom ~nl80211_iftype~NUM_NL80211_IFTYPES == 11;
axiom ~nl80211_iftype~NL80211_IFTYPE_MAX == 10;
axiom ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_CORE == 0;
axiom ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_USER == 1;
axiom ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_DRIVER == 2;
axiom ~nl80211_reg_initiator~NL80211_REGDOM_SET_BY_COUNTRY_IE == 3;
axiom ~nl80211_dfs_regions~NL80211_DFS_UNSET == 0;
axiom ~nl80211_dfs_regions~NL80211_DFS_FCC == 1;
axiom ~nl80211_dfs_regions~NL80211_DFS_ETSI == 2;
axiom ~nl80211_dfs_regions~NL80211_DFS_JP == 3;
axiom ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_USER == 0;
axiom ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_CELL_BASE == 1;
axiom ~nl80211_user_reg_hint_type~NL80211_USER_REG_HINT_INDOOR == 2;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_20_NOHT == 0;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_20 == 1;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_40 == 2;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_80 == 3;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_80P80 == 4;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_160 == 5;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_5 == 6;
axiom ~nl80211_chan_width~NL80211_CHAN_WIDTH_10 == 7;
axiom ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_20 == 0;
axiom ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_10 == 1;
axiom ~nl80211_bss_scan_width~NL80211_BSS_CHAN_WIDTH_5 == 2;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_OPEN_SYSTEM == 0;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_SHARED_KEY == 1;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_FT == 2;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_NETWORK_EAP == 3;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_SAE == 4;
axiom ~nl80211_auth_type~__NL80211_AUTHTYPE_NUM == 5;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_MAX == 4;
axiom ~nl80211_auth_type~NL80211_AUTHTYPE_AUTOMATIC == 5;
axiom ~nl80211_mfp~NL80211_MFP_NO == 0;
axiom ~nl80211_mfp~NL80211_MFP_REQUIRED == 1;
axiom ~nl80211_txrate_gi~NL80211_TXRATE_DEFAULT_GI == 0;
axiom ~nl80211_txrate_gi~NL80211_TXRATE_FORCE_SGI == 1;
axiom ~nl80211_txrate_gi~NL80211_TXRATE_FORCE_LGI == 2;
axiom ~nl80211_dfs_state~NL80211_DFS_USABLE == 0;
axiom ~nl80211_dfs_state~NL80211_DFS_UNAVAILABLE == 1;
axiom ~nl80211_dfs_state~NL80211_DFS_AVAILABLE == 2;
axiom ~environment_cap~ENVIRON_ANY == 0;
axiom ~environment_cap~ENVIRON_INDOOR == 1;
axiom ~environment_cap~ENVIRON_OUTDOOR == 2;
axiom ~ieee80211_band~IEEE80211_BAND_2GHZ == 0;
axiom ~ieee80211_band~IEEE80211_BAND_5GHZ == 1;
axiom ~ieee80211_band~IEEE80211_BAND_60GHZ == 2;
axiom ~ieee80211_band~IEEE80211_NUM_BANDS == 3;
axiom ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_NONE == 0;
axiom ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_MBM == 1;
axiom ~cfg80211_signal_type~CFG80211_SIGNAL_TYPE_UNSPEC == 2;
axiom ~ieee80211_chanctx_switch_mode~CHANCTX_SWMODE_REASSIGN_VIF == 0;
axiom ~ieee80211_chanctx_switch_mode~CHANCTX_SWMODE_SWAP_CONTEXTS == 1;
axiom ~ieee80211_rssi_event~RSSI_EVENT_HIGH == 0;
axiom ~ieee80211_rssi_event~RSSI_EVENT_LOW == 1;
axiom ~ieee80211_smps_mode~IEEE80211_SMPS_AUTOMATIC == 0;
axiom ~ieee80211_smps_mode~IEEE80211_SMPS_OFF == 1;
axiom ~ieee80211_smps_mode~IEEE80211_SMPS_STATIC == 2;
axiom ~ieee80211_smps_mode~IEEE80211_SMPS_DYNAMIC == 3;
axiom ~ieee80211_smps_mode~IEEE80211_SMPS_NUM_MODES == 4;
axiom ~set_key_cmd~SET_KEY == 0;
axiom ~set_key_cmd~DISABLE_KEY == 1;
axiom ~ieee80211_sta_state~IEEE80211_STA_NOTEXIST == 0;
axiom ~ieee80211_sta_state~IEEE80211_STA_NONE == 1;
axiom ~ieee80211_sta_state~IEEE80211_STA_AUTH == 2;
axiom ~ieee80211_sta_state~IEEE80211_STA_ASSOC == 3;
axiom ~ieee80211_sta_state~IEEE80211_STA_AUTHORIZED == 4;
axiom ~ieee80211_sta_rx_bandwidth~IEEE80211_STA_RX_BW_20 == 0;
axiom ~ieee80211_sta_rx_bandwidth~IEEE80211_STA_RX_BW_40 == 1;
axiom ~ieee80211_sta_rx_bandwidth~IEEE80211_STA_RX_BW_80 == 2;
axiom ~ieee80211_sta_rx_bandwidth~IEEE80211_STA_RX_BW_160 == 3;
axiom ~sta_notify_cmd~STA_NOTIFY_SLEEP == 0;
axiom ~sta_notify_cmd~STA_NOTIFY_AWAKE == 1;
axiom ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_RX_START == 0;
axiom ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_RX_STOP == 1;
axiom ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_TX_START == 2;
axiom ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_TX_STOP_CONT == 3;
axiom ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_TX_STOP_FLUSH == 4;
axiom ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_TX_STOP_FLUSH_CONT == 5;
axiom ~ieee80211_ampdu_mlme_action~IEEE80211_AMPDU_TX_OPERATIONAL == 6;
axiom ~ieee80211_frame_release_type~IEEE80211_FRAME_RELEASE_PSPOLL == 0;
axiom ~ieee80211_frame_release_type~IEEE80211_FRAME_RELEASE_UAPSD == 1;
axiom ~ieee80211_roc_type~IEEE80211_ROC_TYPE_NORMAL == 0;
axiom ~ieee80211_roc_type~IEEE80211_ROC_TYPE_MGMT_TX == 1;
axiom ~ldv_33456~RTL818X_CHIP_FAMILY_RTL8180 == 0;
axiom ~ldv_33456~RTL818X_CHIP_FAMILY_RTL8185 == 1;
axiom ~ldv_33456~RTL818X_CHIP_FAMILY_RTL8187SE == 2;
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseXor" } ~bitwiseXor(in0 : int, in1 : int) returns (out : int);
var ~ldv_state_variable_8 : int;

var ~ldv_state_variable_0 : int;

var ~ldv_state_variable_5 : int;

var ~ldv_irq_2_0 : int;

var ~ldv_irq_data_2_3.base : int, ~ldv_irq_data_2_3.offset : int;

var ~ldv_irq_2_2 : int;

var ~ldv_state_variable_9 : int;

var ~ldv_irq_line_2_0 : int;

var ~ref_cnt : int;

var ~ldv_irq_line_1_1 : int;

var ~ldv_irq_data_2_2.base : int, ~ldv_irq_data_2_2.offset : int;

var ~ldv_state_variable_1 : int;

var ~ldv_state_variable_7 : int;

var ~ldv_irq_line_1_2 : int;

var ~ldv_irq_line_2_3 : int;

var ~ldv_irq_2_1 : int;

var ~ldv_irq_data_2_1.base : int, ~ldv_irq_data_2_1.offset : int;

var ~ldv_irq_1_3 : int;

var ~ldv_irq_data_1_1.base : int, ~ldv_irq_data_1_1.offset : int;

var ~ldv_irq_line_2_2 : int;

var ~ldv_state_variable_10 : int;

var ~ldv_irq_1_0 : int;

var ~ldv_irq_data_1_0.base : int, ~ldv_irq_data_1_0.offset : int;

var ~ldv_state_variable_6 : int;

var ~ldv_irq_line_2_1 : int;

var ~ldv_irq_data_1_3.base : int, ~ldv_irq_data_1_3.offset : int;

var ~ldv_state_variable_2 : int;

var ~ldv_irq_data_1_2.base : int, ~ldv_irq_data_1_2.offset : int;

var ~ldv_irq_data_2_0.base : int, ~ldv_irq_data_2_0.offset : int;

var ~ldv_irq_1_2 : int;

var ~LDV_IN_INTERRUPT : int;

var ~ldv_irq_1_1 : int;

var ~ldv_irq_2_3 : int;

var ~ldv_irq_line_1_3 : int;

var ~ldv_state_variable_3 : int;

var ~ldv_irq_line_1_0 : int;

var ~ldv_state_variable_4 : int;

var ~rtl8187se_queues_map : [int]int;

var ~rtl8180_queues_map : [int]int;

var ~ldv_retval_0 : int;

var ~ldv_retval_4 : int;

var ~ldv_retval_1 : int;

var ~ldv_retval_3 : int;

var ~ldv_retval_2 : int;

var ~grf5101_encode : [int]int;

var ~last_index : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~pv_irq_ops.save_fl.func.base : int, ~pv_irq_ops.save_fl.func.offset : int, ~pv_irq_ops.restore_fl.func.base : int, ~pv_irq_ops.restore_fl.func.offset : int, ~pv_irq_ops.irq_disable.func.base : int, ~pv_irq_ops.irq_disable.func.offset : int, ~pv_irq_ops.irq_enable.func.base : int, ~pv_irq_ops.irq_enable.func.offset : int, ~pv_irq_ops.safe_halt.base : int, ~pv_irq_ops.safe_halt.offset : int, ~pv_irq_ops.halt.base : int, ~pv_irq_ops.halt.offset : int, ~pv_irq_ops.adjust_exception_frame.base : int, ~pv_irq_ops.adjust_exception_frame.offset : int;

var ~system_wq.base : int, ~system_wq.offset : int;

var ~#x86_dma_fallback_dev.base : int, ~#x86_dma_fallback_dev.offset : int;

var ~dma_ops.base : int, ~dma_ops.offset : int;

var ~rtl8225se_ops_group0.base : int, ~rtl8225se_ops_group0.offset : int;

var ~grf5101_rf_ops_group0.base : int, ~grf5101_rf_ops_group0.offset : int;

var ~rtl8225_ops_group0.base : int, ~rtl8225_ops_group0.offset : int;

var ~rtl8180_ops_group1.base : int, ~rtl8180_ops_group1.offset : int;

var ~sa2400_rf_ops_group0.base : int, ~sa2400_rf_ops_group0.offset : int;

var ~rtl8225z2_ops_group0.base : int, ~rtl8225z2_ops_group0.offset : int;

var ~rtl8180_driver_group0.base : int, ~rtl8180_driver_group0.offset : int;

var ~rtl8180_ops_group0.base : int, ~rtl8180_ops_group0.offset : int;

var ~max2820_rf_ops_group0.base : int, ~max2820_rf_ops_group0.offset : int;

var ~#sa2400_rf_ops.base : int, ~#sa2400_rf_ops.offset : int;

var ~#max2820_rf_ops.base : int, ~#max2820_rf_ops.offset : int;

var ~#grf5101_rf_ops.base : int, ~#grf5101_rf_ops.offset : int;

var ~#rtl8180_table.base : int, ~#rtl8180_table.offset : int;

var ~#rtl818x_rates.base : int, ~#rtl818x_rates.offset : int;

var ~#rtl818x_channels.base : int, ~#rtl818x_channels.offset : int;

var ~#rtl8180_ops.base : int, ~#rtl8180_ops.offset : int;

var ~#rtl8180_driver.base : int, ~#rtl8180_driver.offset : int;

var ~rtl8225bcd_rxgain : [int]~u16;

var ~rtl8225_agc : [int]~u8;

var ~rtl8225_gain : [int]~u8;

var ~rtl8225_threshold : [int]~u8;

var ~rtl8225_tx_gain_cck_ofdm : [int]~u8;

var ~#rtl8225_tx_power_cck.base : int, ~#rtl8225_tx_power_cck.offset : int;

var ~#rtl8225_tx_power_cck_ch14.base : int, ~#rtl8225_tx_power_cck_ch14.offset : int;

var ~#rtl8225_tx_power_ofdm.base : int, ~#rtl8225_tx_power_ofdm.offset : int;

var ~rtl8225_chan : [int]~u32;

var ~#rtl8225z2_tx_power_cck_ch14.base : int, ~#rtl8225z2_tx_power_cck_ch14.offset : int;

var ~#rtl8225z2_tx_power_cck_B.base : int, ~#rtl8225z2_tx_power_cck_B.offset : int;

var ~#rtl8225z2_tx_power_cck_A.base : int, ~#rtl8225z2_tx_power_cck_A.offset : int;

var ~#rtl8225z2_tx_power_cck.base : int, ~#rtl8225z2_tx_power_cck.offset : int;

var ~rtl8225z2_rxgain : [int]~u16;

var ~#rtl8225_ops.base : int, ~#rtl8225_ops.offset : int;

var ~#rtl8225z2_ops.base : int, ~#rtl8225z2_ops.offset : int;

var ~sa2400_chan : [int]~u32;

var ~sa2400_rf_rssi_map : [int]~u8;

var ~max2820_chan : [int]~u32;

var ~RF_GAIN_TABLE : [int]~u32;

var ~cck_ofdm_gain_settings : [int]~u8;

var ~rtl8225se_chan : [int]~u32;

var ~ZEBRA_AGC : [int]~u8;

var ~OFDM_CONFIG : [int]~u8;

var ~#rtl8225se_ops.base : int, ~#rtl8225se_ops.offset : int;

var ~#set_impl.base : int, ~#set_impl.offset : int;

var ~LDV_SKBS.base : int, ~LDV_SKBS.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

var #memory_int : [int,int]int;

implementation ldv_set_is_empty(#in~set.base : int, #in~set.offset : int) returns (#res : int){
    var ~set.base : int, ~set.offset : int;

  loc0:
    ~set.base, ~set.offset := #in~set.base, #in~set.offset;
    #res := (if ~last_index == 0 then 1 else 0);
    assume true;
    return;
}

procedure ldv_set_is_empty(#in~set.base : int, #in~set.offset : int) returns (#res : int);
modifies ;

implementation ULTIMATE.init() returns (){
    var #t~nondet1179.base : int, #t~nondet1179.offset : int;
    var #t~union1631.head : int, #t~union1631.tail : int;
    var #t~union1632.__padding : [int]int, #t~union1632.dep_map.key.base : int, #t~union1632.dep_map.key.offset : int, #t~union1632.dep_map.class_cache.base : [int]int, #t~union1632.dep_map.class_cache.offset : [int]int, #t~union1632.dep_map.name.base : int, #t~union1632.dep_map.name.offset : int, #t~union1632.dep_map.cpu : int, #t~union1632.dep_map.ip : int;
    var #t~nondet1425.base : int, #t~nondet1425.offset : int;
    var #t~nondet1426.base : int, #t~nondet1426.offset : int;
    var #t~nondet1614.base : int, #t~nondet1614.offset : int;

  loc1:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_state_variable_8 := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_state_variable_5 := 0;
    ~ldv_irq_2_0 := 0;
    ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset := 0, 0;
    ~ldv_irq_2_2 := 0;
    ~ldv_state_variable_9 := 0;
    ~ldv_irq_line_2_0 := 0;
    ~ref_cnt := 0;
    ~ldv_irq_line_1_1 := 0;
    ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset := 0, 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_irq_line_1_2 := 0;
    ~ldv_irq_line_2_3 := 0;
    ~ldv_irq_2_1 := 0;
    ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset := 0, 0;
    ~ldv_irq_1_3 := 0;
    ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset := 0, 0;
    ~ldv_irq_line_2_2 := 0;
    ~ldv_state_variable_10 := 0;
    ~ldv_irq_1_0 := 0;
    ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset := 0, 0;
    ~ldv_state_variable_6 := 0;
    ~ldv_irq_line_2_1 := 0;
    ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset := 0, 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset := 0, 0;
    ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset := 0, 0;
    ~ldv_irq_1_2 := 0;
    ~LDV_IN_INTERRUPT := 1;
    ~ldv_irq_1_1 := 0;
    ~ldv_irq_2_3 := 0;
    ~ldv_irq_line_1_3 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_irq_line_1_0 := 0;
    ~ldv_state_variable_4 := 0;
    ~rtl8187se_queues_map := ~rtl8187se_queues_map[0 := 5];
    ~rtl8187se_queues_map := ~rtl8187se_queues_map[1 := 4];
    ~rtl8187se_queues_map := ~rtl8187se_queues_map[2 := 3];
    ~rtl8187se_queues_map := ~rtl8187se_queues_map[3 := 2];
    ~rtl8187se_queues_map := ~rtl8187se_queues_map[4 := 7];
    ~rtl8180_queues_map := ~rtl8180_queues_map[0 := 4];
    ~rtl8180_queues_map := ~rtl8180_queues_map[1 := 7];
    ~ldv_retval_0 := 0;
    ~ldv_retval_4 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_retval_3 := 0;
    ~ldv_retval_2 := 0;
    ~grf5101_encode := ~grf5101_encode[0 := 0];
    ~grf5101_encode := ~grf5101_encode[1 := 8];
    ~grf5101_encode := ~grf5101_encode[2 := 4];
    ~grf5101_encode := ~grf5101_encode[3 := 12];
    ~grf5101_encode := ~grf5101_encode[4 := 2];
    ~grf5101_encode := ~grf5101_encode[5 := 10];
    ~grf5101_encode := ~grf5101_encode[6 := 6];
    ~grf5101_encode := ~grf5101_encode[7 := 14];
    ~grf5101_encode := ~grf5101_encode[8 := 1];
    ~grf5101_encode := ~grf5101_encode[9 := 9];
    ~grf5101_encode := ~grf5101_encode[10 := 5];
    ~grf5101_encode := ~grf5101_encode[11 := 13];
    ~grf5101_encode := ~grf5101_encode[12 := 3];
    ~grf5101_encode := ~grf5101_encode[13 := 11];
    ~grf5101_encode := ~grf5101_encode[14 := 7];
    ~grf5101_encode := ~grf5101_encode[15 := 15];
    ~last_index := 0;
    ~rtl8225se_ops_group0.base, ~rtl8225se_ops_group0.offset := 0, 0;
    ~grf5101_rf_ops_group0.base, ~grf5101_rf_ops_group0.offset := 0, 0;
    ~rtl8225_ops_group0.base, ~rtl8225_ops_group0.offset := 0, 0;
    ~rtl8180_ops_group1.base, ~rtl8180_ops_group1.offset := 0, 0;
    ~sa2400_rf_ops_group0.base, ~sa2400_rf_ops_group0.offset := 0, 0;
    ~rtl8225z2_ops_group0.base, ~rtl8225z2_ops_group0.offset := 0, 0;
    ~rtl8180_driver_group0.base, ~rtl8180_driver_group0.offset := 0, 0;
    ~rtl8180_ops_group0.base, ~rtl8180_ops_group0.offset := 0, 0;
    ~max2820_rf_ops_group0.base, ~max2820_rf_ops_group0.offset := 0, 0;
    call ~#sa2400_rf_ops.base, ~#sa2400_rf_ops.offset := #Ultimate.alloc(40);
    call write~$Pointer$(0, 0, ~#sa2400_rf_ops.base, ~#sa2400_rf_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#sa2400_rf_ops.base, ~#sa2400_rf_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#sa2400_rf_ops.base, ~#sa2400_rf_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#sa2400_rf_ops.base, ~#sa2400_rf_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#sa2400_rf_ops.base, ~#sa2400_rf_ops.offset + 32, 8);
    call ~#max2820_rf_ops.base, ~#max2820_rf_ops.offset := #Ultimate.alloc(40);
    call write~$Pointer$(0, 0, ~#max2820_rf_ops.base, ~#max2820_rf_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#max2820_rf_ops.base, ~#max2820_rf_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#max2820_rf_ops.base, ~#max2820_rf_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#max2820_rf_ops.base, ~#max2820_rf_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#max2820_rf_ops.base, ~#max2820_rf_ops.offset + 32, 8);
    call ~#grf5101_rf_ops.base, ~#grf5101_rf_ops.offset := #Ultimate.alloc(40);
    call write~$Pointer$(0, 0, ~#grf5101_rf_ops.base, ~#grf5101_rf_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#grf5101_rf_ops.base, ~#grf5101_rf_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#grf5101_rf_ops.base, ~#grf5101_rf_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#grf5101_rf_ops.base, ~#grf5101_rf_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#grf5101_rf_ops.base, ~#grf5101_rf_ops.offset + 32, 8);
    call ~#rtl8180_table.base, ~#rtl8180_table.offset := #Ultimate.alloc(352);
    call write~int(4332, ~#rtl8180_table.base, ~#rtl8180_table.offset + 0 + 0, 4);
    call write~int(33177, ~#rtl8180_table.base, ~#rtl8180_table.offset + 0 + 4, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 0 + 8, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 0 + 12, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 0 + 16, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 0 + 20, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 0 + 24, 8);
    call write~int(4332, ~#rtl8180_table.base, ~#rtl8180_table.offset + 32 + 0, 4);
    call write~int(33157, ~#rtl8180_table.base, ~#rtl8180_table.offset + 32 + 4, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 32 + 8, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 32 + 12, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 32 + 16, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 32 + 20, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 32 + 24, 8);
    call write~int(6041, ~#rtl8180_table.base, ~#rtl8180_table.offset + 64 + 0, 4);
    call write~int(28687, ~#rtl8180_table.base, ~#rtl8180_table.offset + 64 + 4, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 64 + 8, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 64 + 12, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 64 + 16, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 64 + 20, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 64 + 24, 8);
    call write~int(6041, ~#rtl8180_table.base, ~#rtl8180_table.offset + 96 + 0, 4);
    call write~int(28703, ~#rtl8180_table.base, ~#rtl8180_table.offset + 96 + 4, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 96 + 8, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 96 + 12, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 96 + 16, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 96 + 20, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 96 + 24, 8);
    call write~int(4332, ~#rtl8180_table.base, ~#rtl8180_table.offset + 128 + 0, 4);
    call write~int(33152, ~#rtl8180_table.base, ~#rtl8180_table.offset + 128 + 4, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 128 + 8, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 128 + 12, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 128 + 16, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 128 + 20, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 128 + 24, 8);
    call write~int(6041, ~#rtl8180_table.base, ~#rtl8180_table.offset + 160 + 0, 4);
    call write~int(24577, ~#rtl8180_table.base, ~#rtl8180_table.offset + 160 + 4, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 160 + 8, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 160 + 12, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 160 + 16, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 160 + 20, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 160 + 24, 8);
    call write~int(6041, ~#rtl8180_table.base, ~#rtl8180_table.offset + 192 + 0, 4);
    call write~int(24608, ~#rtl8180_table.base, ~#rtl8180_table.offset + 192 + 4, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 192 + 8, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 192 + 12, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 192 + 16, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 192 + 20, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 192 + 24, 8);
    call write~int(4486, ~#rtl8180_table.base, ~#rtl8180_table.offset + 224 + 0, 4);
    call write~int(13056, ~#rtl8180_table.base, ~#rtl8180_table.offset + 224 + 4, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 224 + 8, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 224 + 12, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 224 + 16, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 224 + 20, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 224 + 24, 8);
    call write~int(4486, ~#rtl8180_table.base, ~#rtl8180_table.offset + 256 + 0, 4);
    call write~int(13057, ~#rtl8180_table.base, ~#rtl8180_table.offset + 256 + 4, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 256 + 8, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 256 + 12, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 256 + 16, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 256 + 20, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 256 + 24, 8);
    call write~int(5170, ~#rtl8180_table.base, ~#rtl8180_table.offset + 288 + 0, 4);
    call write~int(28934, ~#rtl8180_table.base, ~#rtl8180_table.offset + 288 + 4, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 288 + 8, 4);
    call write~int(4294967295, ~#rtl8180_table.base, ~#rtl8180_table.offset + 288 + 12, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 288 + 16, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 288 + 20, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 288 + 24, 8);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 320 + 0, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 320 + 4, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 320 + 8, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 320 + 12, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 320 + 16, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 320 + 20, 4);
    call write~int(0, ~#rtl8180_table.base, ~#rtl8180_table.offset + 320 + 24, 8);
    call ~#rtl818x_rates.base, ~#rtl818x_rates.offset := #Ultimate.alloc(120);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 0 + 0, 4);
    call write~int(10, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 0 + 4, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 0 + 6, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 0 + 8, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 10 + 0, 4);
    call write~int(20, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 10 + 4, 2);
    call write~int(1, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 10 + 6, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 10 + 8, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 20 + 0, 4);
    call write~int(55, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 20 + 4, 2);
    call write~int(2, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 20 + 6, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 20 + 8, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 30 + 0, 4);
    call write~int(110, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 30 + 4, 2);
    call write~int(3, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 30 + 6, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 30 + 8, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 40 + 0, 4);
    call write~int(60, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 40 + 4, 2);
    call write~int(4, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 40 + 6, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 40 + 8, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 50 + 0, 4);
    call write~int(90, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 50 + 4, 2);
    call write~int(5, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 50 + 6, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 50 + 8, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 60 + 0, 4);
    call write~int(120, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 60 + 4, 2);
    call write~int(6, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 60 + 6, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 60 + 8, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 70 + 0, 4);
    call write~int(180, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 70 + 4, 2);
    call write~int(7, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 70 + 6, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 70 + 8, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 80 + 0, 4);
    call write~int(240, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 80 + 4, 2);
    call write~int(8, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 80 + 6, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 80 + 8, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 90 + 0, 4);
    call write~int(360, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 90 + 4, 2);
    call write~int(9, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 90 + 6, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 90 + 8, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 100 + 0, 4);
    call write~int(480, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 100 + 4, 2);
    call write~int(10, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 100 + 6, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 100 + 8, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 110 + 0, 4);
    call write~int(540, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 110 + 4, 2);
    call write~int(11, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 110 + 6, 2);
    call write~int(0, ~#rtl818x_rates.base, ~#rtl818x_rates.offset + 110 + 8, 2);
    call ~#rtl818x_channels.base, ~#rtl818x_channels.offset := #Ultimate.alloc(742);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 0, 4);
    call write~int(2412, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 0 + 49, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 0, 4);
    call write~int(2417, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 53 + 49, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 0, 4);
    call write~int(2422, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 106 + 49, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 0, 4);
    call write~int(2427, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 159 + 49, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 0, 4);
    call write~int(2432, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 212 + 49, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 0, 4);
    call write~int(2437, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 265 + 49, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 0, 4);
    call write~int(2442, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 318 + 49, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 0, 4);
    call write~int(2447, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 371 + 49, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 0, 4);
    call write~int(2452, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 424 + 49, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 0, 4);
    call write~int(2457, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 477 + 49, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 0, 4);
    call write~int(2462, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 530 + 49, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 0, 4);
    call write~int(2467, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 583 + 49, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 0, 4);
    call write~int(2472, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 636 + 49, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 0, 4);
    call write~int(2484, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 4, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 6, 2);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 8, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 12, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 16, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 20, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 24, 1);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 25, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 29, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 33, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 37, 4);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 41, 8);
    call write~int(0, ~#rtl818x_channels.base, ~#rtl818x_channels.offset + 689 + 49, 4);
    call ~#rtl8180_ops.base, ~#rtl8180_ops.offset := #Ultimate.alloc(632);
    call write~$Pointer$(#funAddr~rtl8180_tx.base, #funAddr~rtl8180_tx.offset, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~rtl8180_start.base, #funAddr~rtl8180_start.offset, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~rtl8180_stop.base, #funAddr~rtl8180_stop.offset, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 40, 8);
    call write~$Pointer$(#funAddr~rtl8180_add_interface.base, #funAddr~rtl8180_add_interface.offset, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~rtl8180_remove_interface.base, #funAddr~rtl8180_remove_interface.offset, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 64, 8);
    call write~$Pointer$(#funAddr~rtl8180_config.base, #funAddr~rtl8180_config.offset, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 72, 8);
    call write~$Pointer$(#funAddr~rtl8180_bss_info_changed.base, #funAddr~rtl8180_bss_info_changed.offset, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 96, 8);
    call write~$Pointer$(#funAddr~rtl8180_prepare_multicast.base, #funAddr~rtl8180_prepare_multicast.offset, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 104, 8);
    call write~$Pointer$(#funAddr~rtl8180_configure_filter.base, #funAddr~rtl8180_configure_filter.offset, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 296, 8);
    call write~$Pointer$(#funAddr~rtl8180_conf_tx.base, #funAddr~rtl8180_conf_tx.offset, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 304, 8);
    call write~$Pointer$(#funAddr~rtl8180_get_tsf.base, #funAddr~rtl8180_get_tsf.offset, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 408, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 416, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 424, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 432, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 440, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 448, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 464, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 472, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 480, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 488, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 496, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 504, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 512, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 520, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 528, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 536, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 544, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 552, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 560, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 568, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 576, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 584, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 592, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 600, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 608, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 616, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_ops.base, ~#rtl8180_ops.offset + 624, 8);
    call ~#rtl8180_driver.base, ~#rtl8180_driver.offset := #Ultimate.alloc(301);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 0 + 8, 8);
    call #t~nondet1179.base, #t~nondet1179.offset := #Ultimate.alloc(12);
    call write~$Pointer$(#t~nondet1179.base, #t~nondet1179.offset, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 16, 8);
    call write~$Pointer$(~#rtl8180_table.base, ~#rtl8180_table.offset, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 24, 8);
    call write~$Pointer$(#funAddr~rtl8180_probe.base, #funAddr~rtl8180_probe.offset, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 32, 8);
    call write~$Pointer$(#funAddr~rtl8180_remove.base, #funAddr~rtl8180_remove.offset, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 40, 8);
    call write~$Pointer$(#funAddr~rtl8180_suspend.base, #funAddr~rtl8180_suspend.offset, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 64, 8);
    call write~$Pointer$(#funAddr~rtl8180_resume.base, #funAddr~rtl8180_resume.offset, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 0, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 8, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 16, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 24, 8);
    call write~int(0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 32, 1);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 33, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 41, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 49, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 57, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 65, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 73, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 81, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 89, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 97, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 104 + 105, 8);
    call write~int(0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union1631.head, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union1631.tail, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union1632.__padding[0], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union1632.__padding[1], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union1632.__padding[2], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[3], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[4], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[5], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[6], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[7], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[8], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[9], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[10], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[11], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[12], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[13], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[14], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[15], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[16], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[17], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[18], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[19], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[20], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[21], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[22], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1632.__padding[23], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union1632.dep_map.key.base, #t~union1632.dep_map.key.offset, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union1632.dep_map.class_cache.base[0], #t~union1632.dep_map.class_cache.offset[0], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union1632.dep_map.class_cache.base[1], #t~union1632.dep_map.class_cache.offset[1], ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union1632.dep_map.name.base, #t~union1632.dep_map.name.offset, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union1632.dep_map.cpu, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union1632.dep_map.ip, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#rtl8180_driver.base, ~#rtl8180_driver.offset + 217 + 68 + 8, 8);
    havoc #t~nondet1179.base, #t~nondet1179.offset;
    havoc #t~union1631.head, #t~union1631.tail;
    havoc #t~union1632.__padding, #t~union1632.dep_map.key.base, #t~union1632.dep_map.key.offset, #t~union1632.dep_map.class_cache.base, #t~union1632.dep_map.class_cache.offset, #t~union1632.dep_map.name.base, #t~union1632.dep_map.name.offset, #t~union1632.dep_map.cpu, #t~union1632.dep_map.ip;
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[0 := 1024];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[1 := 1025];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[2 := 1026];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[3 := 1027];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[4 := 1028];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[5 := 1029];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[6 := 1032];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[7 := 1033];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[8 := 1034];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[9 := 1035];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[10 := 1282];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[11 := 1283];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[12 := 1284];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[13 := 1285];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[14 := 1344];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[15 := 1345];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[16 := 1346];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[17 := 1347];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[18 := 1348];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[19 := 1349];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[20 := 1408];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[21 := 1409];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[22 := 1410];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[23 := 1411];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[24 := 1412];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[25 := 1413];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[26 := 1416];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[27 := 1417];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[28 := 1418];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[29 := 1419];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[30 := 1603];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[31 := 1604];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[32 := 1605];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[33 := 1664];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[34 := 1665];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[35 := 1666];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[36 := 1667];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[37 := 1668];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[38 := 1669];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[39 := 1672];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[40 := 1673];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[41 := 1674];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[42 := 1675];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[43 := 1676];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[44 := 1858];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[45 := 1859];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[46 := 1860];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[47 := 1861];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[48 := 1920];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[49 := 1921];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[50 := 1922];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[51 := 1923];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[52 := 1924];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[53 := 1925];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[54 := 1928];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[55 := 1929];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[56 := 1930];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[57 := 1931];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[58 := 1932];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[59 := 1933];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[60 := 1936];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[61 := 1937];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[62 := 1938];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[63 := 1939];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[64 := 1940];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[65 := 1941];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[66 := 1944];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[67 := 1945];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[68 := 1946];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[69 := 1947];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[70 := 1948];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[71 := 1949];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[72 := 1952];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[73 := 1953];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[74 := 1954];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[75 := 1955];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[76 := 1956];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[77 := 1957];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[78 := 1960];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[79 := 1961];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[80 := 1962];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[81 := 1963];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[82 := 1964];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[83 := 1965];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[84 := 1968];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[85 := 1969];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[86 := 1970];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[87 := 1971];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[88 := 1972];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[89 := 1973];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[90 := 1976];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[91 := 1977];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[92 := 1978];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[93 := 1979];
    ~rtl8225bcd_rxgain := ~rtl8225bcd_rxgain[94 := 1979];
    ~rtl8225_agc := ~rtl8225_agc[0 := 158];
    ~rtl8225_agc := ~rtl8225_agc[1 := 158];
    ~rtl8225_agc := ~rtl8225_agc[2 := 158];
    ~rtl8225_agc := ~rtl8225_agc[3 := 158];
    ~rtl8225_agc := ~rtl8225_agc[4 := 158];
    ~rtl8225_agc := ~rtl8225_agc[5 := 158];
    ~rtl8225_agc := ~rtl8225_agc[6 := 158];
    ~rtl8225_agc := ~rtl8225_agc[7 := 158];
    ~rtl8225_agc := ~rtl8225_agc[8 := 157];
    ~rtl8225_agc := ~rtl8225_agc[9 := 156];
    ~rtl8225_agc := ~rtl8225_agc[10 := 155];
    ~rtl8225_agc := ~rtl8225_agc[11 := 154];
    ~rtl8225_agc := ~rtl8225_agc[12 := 153];
    ~rtl8225_agc := ~rtl8225_agc[13 := 152];
    ~rtl8225_agc := ~rtl8225_agc[14 := 151];
    ~rtl8225_agc := ~rtl8225_agc[15 := 150];
    ~rtl8225_agc := ~rtl8225_agc[16 := 149];
    ~rtl8225_agc := ~rtl8225_agc[17 := 148];
    ~rtl8225_agc := ~rtl8225_agc[18 := 147];
    ~rtl8225_agc := ~rtl8225_agc[19 := 146];
    ~rtl8225_agc := ~rtl8225_agc[20 := 145];
    ~rtl8225_agc := ~rtl8225_agc[21 := 144];
    ~rtl8225_agc := ~rtl8225_agc[22 := 143];
    ~rtl8225_agc := ~rtl8225_agc[23 := 142];
    ~rtl8225_agc := ~rtl8225_agc[24 := 141];
    ~rtl8225_agc := ~rtl8225_agc[25 := 140];
    ~rtl8225_agc := ~rtl8225_agc[26 := 139];
    ~rtl8225_agc := ~rtl8225_agc[27 := 138];
    ~rtl8225_agc := ~rtl8225_agc[28 := 137];
    ~rtl8225_agc := ~rtl8225_agc[29 := 136];
    ~rtl8225_agc := ~rtl8225_agc[30 := 135];
    ~rtl8225_agc := ~rtl8225_agc[31 := 134];
    ~rtl8225_agc := ~rtl8225_agc[32 := 133];
    ~rtl8225_agc := ~rtl8225_agc[33 := 132];
    ~rtl8225_agc := ~rtl8225_agc[34 := 131];
    ~rtl8225_agc := ~rtl8225_agc[35 := 130];
    ~rtl8225_agc := ~rtl8225_agc[36 := 129];
    ~rtl8225_agc := ~rtl8225_agc[37 := 128];
    ~rtl8225_agc := ~rtl8225_agc[38 := 63];
    ~rtl8225_agc := ~rtl8225_agc[39 := 62];
    ~rtl8225_agc := ~rtl8225_agc[40 := 61];
    ~rtl8225_agc := ~rtl8225_agc[41 := 60];
    ~rtl8225_agc := ~rtl8225_agc[42 := 59];
    ~rtl8225_agc := ~rtl8225_agc[43 := 58];
    ~rtl8225_agc := ~rtl8225_agc[44 := 57];
    ~rtl8225_agc := ~rtl8225_agc[45 := 56];
    ~rtl8225_agc := ~rtl8225_agc[46 := 55];
    ~rtl8225_agc := ~rtl8225_agc[47 := 54];
    ~rtl8225_agc := ~rtl8225_agc[48 := 53];
    ~rtl8225_agc := ~rtl8225_agc[49 := 52];
    ~rtl8225_agc := ~rtl8225_agc[50 := 51];
    ~rtl8225_agc := ~rtl8225_agc[51 := 50];
    ~rtl8225_agc := ~rtl8225_agc[52 := 49];
    ~rtl8225_agc := ~rtl8225_agc[53 := 48];
    ~rtl8225_agc := ~rtl8225_agc[54 := 47];
    ~rtl8225_agc := ~rtl8225_agc[55 := 46];
    ~rtl8225_agc := ~rtl8225_agc[56 := 45];
    ~rtl8225_agc := ~rtl8225_agc[57 := 44];
    ~rtl8225_agc := ~rtl8225_agc[58 := 43];
    ~rtl8225_agc := ~rtl8225_agc[59 := 42];
    ~rtl8225_agc := ~rtl8225_agc[60 := 41];
    ~rtl8225_agc := ~rtl8225_agc[61 := 40];
    ~rtl8225_agc := ~rtl8225_agc[62 := 39];
    ~rtl8225_agc := ~rtl8225_agc[63 := 38];
    ~rtl8225_agc := ~rtl8225_agc[64 := 37];
    ~rtl8225_agc := ~rtl8225_agc[65 := 36];
    ~rtl8225_agc := ~rtl8225_agc[66 := 35];
    ~rtl8225_agc := ~rtl8225_agc[67 := 34];
    ~rtl8225_agc := ~rtl8225_agc[68 := 33];
    ~rtl8225_agc := ~rtl8225_agc[69 := 32];
    ~rtl8225_agc := ~rtl8225_agc[70 := 31];
    ~rtl8225_agc := ~rtl8225_agc[71 := 30];
    ~rtl8225_agc := ~rtl8225_agc[72 := 29];
    ~rtl8225_agc := ~rtl8225_agc[73 := 28];
    ~rtl8225_agc := ~rtl8225_agc[74 := 27];
    ~rtl8225_agc := ~rtl8225_agc[75 := 26];
    ~rtl8225_agc := ~rtl8225_agc[76 := 25];
    ~rtl8225_agc := ~rtl8225_agc[77 := 24];
    ~rtl8225_agc := ~rtl8225_agc[78 := 23];
    ~rtl8225_agc := ~rtl8225_agc[79 := 22];
    ~rtl8225_agc := ~rtl8225_agc[80 := 21];
    ~rtl8225_agc := ~rtl8225_agc[81 := 20];
    ~rtl8225_agc := ~rtl8225_agc[82 := 19];
    ~rtl8225_agc := ~rtl8225_agc[83 := 18];
    ~rtl8225_agc := ~rtl8225_agc[84 := 17];
    ~rtl8225_agc := ~rtl8225_agc[85 := 16];
    ~rtl8225_agc := ~rtl8225_agc[86 := 15];
    ~rtl8225_agc := ~rtl8225_agc[87 := 14];
    ~rtl8225_agc := ~rtl8225_agc[88 := 13];
    ~rtl8225_agc := ~rtl8225_agc[89 := 12];
    ~rtl8225_agc := ~rtl8225_agc[90 := 11];
    ~rtl8225_agc := ~rtl8225_agc[91 := 10];
    ~rtl8225_agc := ~rtl8225_agc[92 := 9];
    ~rtl8225_agc := ~rtl8225_agc[93 := 8];
    ~rtl8225_agc := ~rtl8225_agc[94 := 7];
    ~rtl8225_agc := ~rtl8225_agc[95 := 6];
    ~rtl8225_agc := ~rtl8225_agc[96 := 5];
    ~rtl8225_agc := ~rtl8225_agc[97 := 4];
    ~rtl8225_agc := ~rtl8225_agc[98 := 3];
    ~rtl8225_agc := ~rtl8225_agc[99 := 2];
    ~rtl8225_agc := ~rtl8225_agc[100 := 1];
    ~rtl8225_agc := ~rtl8225_agc[101 := 1];
    ~rtl8225_agc := ~rtl8225_agc[102 := 1];
    ~rtl8225_agc := ~rtl8225_agc[103 := 1];
    ~rtl8225_agc := ~rtl8225_agc[104 := 1];
    ~rtl8225_agc := ~rtl8225_agc[105 := 1];
    ~rtl8225_agc := ~rtl8225_agc[106 := 1];
    ~rtl8225_agc := ~rtl8225_agc[107 := 1];
    ~rtl8225_agc := ~rtl8225_agc[108 := 1];
    ~rtl8225_agc := ~rtl8225_agc[109 := 1];
    ~rtl8225_agc := ~rtl8225_agc[110 := 1];
    ~rtl8225_agc := ~rtl8225_agc[111 := 1];
    ~rtl8225_agc := ~rtl8225_agc[112 := 1];
    ~rtl8225_agc := ~rtl8225_agc[113 := 1];
    ~rtl8225_agc := ~rtl8225_agc[114 := 1];
    ~rtl8225_agc := ~rtl8225_agc[115 := 1];
    ~rtl8225_agc := ~rtl8225_agc[116 := 1];
    ~rtl8225_agc := ~rtl8225_agc[117 := 1];
    ~rtl8225_agc := ~rtl8225_agc[118 := 1];
    ~rtl8225_agc := ~rtl8225_agc[119 := 1];
    ~rtl8225_agc := ~rtl8225_agc[120 := 1];
    ~rtl8225_agc := ~rtl8225_agc[121 := 1];
    ~rtl8225_agc := ~rtl8225_agc[122 := 1];
    ~rtl8225_agc := ~rtl8225_agc[123 := 1];
    ~rtl8225_agc := ~rtl8225_agc[124 := 1];
    ~rtl8225_agc := ~rtl8225_agc[125 := 1];
    ~rtl8225_agc := ~rtl8225_agc[126 := 1];
    ~rtl8225_agc := ~rtl8225_agc[127 := 1];
    ~rtl8225_gain := ~rtl8225_gain[0 := 35];
    ~rtl8225_gain := ~rtl8225_gain[1 := 136];
    ~rtl8225_gain := ~rtl8225_gain[2 := 124];
    ~rtl8225_gain := ~rtl8225_gain[3 := 165];
    ~rtl8225_gain := ~rtl8225_gain[4 := 35];
    ~rtl8225_gain := ~rtl8225_gain[5 := 136];
    ~rtl8225_gain := ~rtl8225_gain[6 := 124];
    ~rtl8225_gain := ~rtl8225_gain[7 := 181];
    ~rtl8225_gain := ~rtl8225_gain[8 := 35];
    ~rtl8225_gain := ~rtl8225_gain[9 := 136];
    ~rtl8225_gain := ~rtl8225_gain[10 := 124];
    ~rtl8225_gain := ~rtl8225_gain[11 := 197];
    ~rtl8225_gain := ~rtl8225_gain[12 := 51];
    ~rtl8225_gain := ~rtl8225_gain[13 := 128];
    ~rtl8225_gain := ~rtl8225_gain[14 := 121];
    ~rtl8225_gain := ~rtl8225_gain[15 := 197];
    ~rtl8225_gain := ~rtl8225_gain[16 := 67];
    ~rtl8225_gain := ~rtl8225_gain[17 := 120];
    ~rtl8225_gain := ~rtl8225_gain[18 := 118];
    ~rtl8225_gain := ~rtl8225_gain[19 := 197];
    ~rtl8225_gain := ~rtl8225_gain[20 := 83];
    ~rtl8225_gain := ~rtl8225_gain[21 := 96];
    ~rtl8225_gain := ~rtl8225_gain[22 := 115];
    ~rtl8225_gain := ~rtl8225_gain[23 := 197];
    ~rtl8225_gain := ~rtl8225_gain[24 := 99];
    ~rtl8225_gain := ~rtl8225_gain[25 := 88];
    ~rtl8225_gain := ~rtl8225_gain[26 := 112];
    ~rtl8225_gain := ~rtl8225_gain[27 := 197];
    ~rtl8225_threshold := ~rtl8225_threshold[0 := 141];
    ~rtl8225_threshold := ~rtl8225_threshold[1 := 141];
    ~rtl8225_threshold := ~rtl8225_threshold[2 := 141];
    ~rtl8225_threshold := ~rtl8225_threshold[3 := 141];
    ~rtl8225_threshold := ~rtl8225_threshold[4 := 157];
    ~rtl8225_threshold := ~rtl8225_threshold[5 := 173];
    ~rtl8225_threshold := ~rtl8225_threshold[6 := 189];
    ~rtl8225_tx_gain_cck_ofdm := ~rtl8225_tx_gain_cck_ofdm[0 := 2];
    ~rtl8225_tx_gain_cck_ofdm := ~rtl8225_tx_gain_cck_ofdm[1 := 6];
    ~rtl8225_tx_gain_cck_ofdm := ~rtl8225_tx_gain_cck_ofdm[2 := 14];
    ~rtl8225_tx_gain_cck_ofdm := ~rtl8225_tx_gain_cck_ofdm[3 := 30];
    ~rtl8225_tx_gain_cck_ofdm := ~rtl8225_tx_gain_cck_ofdm[4 := 62];
    ~rtl8225_tx_gain_cck_ofdm := ~rtl8225_tx_gain_cck_ofdm[5 := 126];
    call ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset := #Ultimate.alloc(48);
    call write~int(24, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 0, 1);
    call write~int(23, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 1, 1);
    call write~int(21, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 2, 1);
    call write~int(17, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 3, 1);
    call write~int(12, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 4, 1);
    call write~int(8, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 5, 1);
    call write~int(4, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 6, 1);
    call write~int(2, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 7, 1);
    call write~int(27, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 8, 1);
    call write~int(26, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 9, 1);
    call write~int(23, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 10, 1);
    call write~int(19, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 11, 1);
    call write~int(14, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 12, 1);
    call write~int(9, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 13, 1);
    call write~int(4, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 14, 1);
    call write~int(2, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 15, 1);
    call write~int(31, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 16, 1);
    call write~int(30, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 17, 1);
    call write~int(26, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 18, 1);
    call write~int(21, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 19, 1);
    call write~int(16, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 20, 1);
    call write~int(10, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 21, 1);
    call write~int(5, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 22, 1);
    call write~int(2, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 23, 1);
    call write~int(34, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 24, 1);
    call write~int(33, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 25, 1);
    call write~int(29, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 26, 1);
    call write~int(24, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 27, 1);
    call write~int(17, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 28, 1);
    call write~int(11, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 29, 1);
    call write~int(6, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 30, 1);
    call write~int(2, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 31, 1);
    call write~int(38, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 32, 1);
    call write~int(37, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 33, 1);
    call write~int(33, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 34, 1);
    call write~int(27, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 35, 1);
    call write~int(20, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 36, 1);
    call write~int(13, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 37, 1);
    call write~int(6, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 38, 1);
    call write~int(3, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 39, 1);
    call write~int(43, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 40, 1);
    call write~int(42, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 41, 1);
    call write~int(37, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 42, 1);
    call write~int(30, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 43, 1);
    call write~int(22, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 44, 1);
    call write~int(14, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 45, 1);
    call write~int(7, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 46, 1);
    call write~int(3, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset + 47, 1);
    call ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset := #Ultimate.alloc(48);
    call write~int(24, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 0, 1);
    call write~int(23, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 1, 1);
    call write~int(21, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 2, 1);
    call write~int(12, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 3, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 4, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 5, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 6, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 7, 1);
    call write~int(27, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 8, 1);
    call write~int(26, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 9, 1);
    call write~int(23, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 10, 1);
    call write~int(14, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 11, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 12, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 13, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 14, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 15, 1);
    call write~int(31, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 16, 1);
    call write~int(30, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 17, 1);
    call write~int(26, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 18, 1);
    call write~int(15, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 19, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 20, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 21, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 22, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 23, 1);
    call write~int(34, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 24, 1);
    call write~int(33, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 25, 1);
    call write~int(29, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 26, 1);
    call write~int(17, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 27, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 28, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 29, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 30, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 31, 1);
    call write~int(38, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 32, 1);
    call write~int(37, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 33, 1);
    call write~int(33, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 34, 1);
    call write~int(19, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 35, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 36, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 37, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 38, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 39, 1);
    call write~int(43, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 40, 1);
    call write~int(42, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 41, 1);
    call write~int(37, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 42, 1);
    call write~int(21, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 43, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 44, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 45, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 46, 1);
    call write~int(0, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset + 47, 1);
    call ~#rtl8225_tx_power_ofdm.base, ~#rtl8225_tx_power_ofdm.offset := #Ultimate.alloc(6);
    call write~int(128, ~#rtl8225_tx_power_ofdm.base, ~#rtl8225_tx_power_ofdm.offset + 0, 1);
    call write~int(144, ~#rtl8225_tx_power_ofdm.base, ~#rtl8225_tx_power_ofdm.offset + 1, 1);
    call write~int(162, ~#rtl8225_tx_power_ofdm.base, ~#rtl8225_tx_power_ofdm.offset + 2, 1);
    call write~int(181, ~#rtl8225_tx_power_ofdm.base, ~#rtl8225_tx_power_ofdm.offset + 3, 1);
    call write~int(203, ~#rtl8225_tx_power_ofdm.base, ~#rtl8225_tx_power_ofdm.offset + 4, 1);
    call write~int(228, ~#rtl8225_tx_power_ofdm.base, ~#rtl8225_tx_power_ofdm.offset + 5, 1);
    ~rtl8225_chan := ~rtl8225_chan[0 := 2140];
    ~rtl8225_chan := ~rtl8225_chan[1 := 2268];
    ~rtl8225_chan := ~rtl8225_chan[2 := 2396];
    ~rtl8225_chan := ~rtl8225_chan[3 := 2524];
    ~rtl8225_chan := ~rtl8225_chan[4 := 2652];
    ~rtl8225_chan := ~rtl8225_chan[5 := 2780];
    ~rtl8225_chan := ~rtl8225_chan[6 := 2908];
    ~rtl8225_chan := ~rtl8225_chan[7 := 3036];
    ~rtl8225_chan := ~rtl8225_chan[8 := 3164];
    ~rtl8225_chan := ~rtl8225_chan[9 := 3292];
    ~rtl8225_chan := ~rtl8225_chan[10 := 3420];
    ~rtl8225_chan := ~rtl8225_chan[11 := 3548];
    ~rtl8225_chan := ~rtl8225_chan[12 := 3676];
    ~rtl8225_chan := ~rtl8225_chan[13 := 3954];
    call ~#rtl8225z2_tx_power_cck_ch14.base, ~#rtl8225z2_tx_power_cck_ch14.offset := #Ultimate.alloc(8);
    call write~int(54, ~#rtl8225z2_tx_power_cck_ch14.base, ~#rtl8225z2_tx_power_cck_ch14.offset + 0, 1);
    call write~int(53, ~#rtl8225z2_tx_power_cck_ch14.base, ~#rtl8225z2_tx_power_cck_ch14.offset + 1, 1);
    call write~int(46, ~#rtl8225z2_tx_power_cck_ch14.base, ~#rtl8225z2_tx_power_cck_ch14.offset + 2, 1);
    call write~int(27, ~#rtl8225z2_tx_power_cck_ch14.base, ~#rtl8225z2_tx_power_cck_ch14.offset + 3, 1);
    call write~int(0, ~#rtl8225z2_tx_power_cck_ch14.base, ~#rtl8225z2_tx_power_cck_ch14.offset + 4, 1);
    call write~int(0, ~#rtl8225z2_tx_power_cck_ch14.base, ~#rtl8225z2_tx_power_cck_ch14.offset + 5, 1);
    call write~int(0, ~#rtl8225z2_tx_power_cck_ch14.base, ~#rtl8225z2_tx_power_cck_ch14.offset + 6, 1);
    call write~int(0, ~#rtl8225z2_tx_power_cck_ch14.base, ~#rtl8225z2_tx_power_cck_ch14.offset + 7, 1);
    call ~#rtl8225z2_tx_power_cck_B.base, ~#rtl8225z2_tx_power_cck_B.offset := #Ultimate.alloc(8);
    call write~int(48, ~#rtl8225z2_tx_power_cck_B.base, ~#rtl8225z2_tx_power_cck_B.offset + 0, 1);
    call write~int(47, ~#rtl8225z2_tx_power_cck_B.base, ~#rtl8225z2_tx_power_cck_B.offset + 1, 1);
    call write~int(41, ~#rtl8225z2_tx_power_cck_B.base, ~#rtl8225z2_tx_power_cck_B.offset + 2, 1);
    call write~int(33, ~#rtl8225z2_tx_power_cck_B.base, ~#rtl8225z2_tx_power_cck_B.offset + 3, 1);
    call write~int(25, ~#rtl8225z2_tx_power_cck_B.base, ~#rtl8225z2_tx_power_cck_B.offset + 4, 1);
    call write~int(16, ~#rtl8225z2_tx_power_cck_B.base, ~#rtl8225z2_tx_power_cck_B.offset + 5, 1);
    call write~int(8, ~#rtl8225z2_tx_power_cck_B.base, ~#rtl8225z2_tx_power_cck_B.offset + 6, 1);
    call write~int(4, ~#rtl8225z2_tx_power_cck_B.base, ~#rtl8225z2_tx_power_cck_B.offset + 7, 1);
    call ~#rtl8225z2_tx_power_cck_A.base, ~#rtl8225z2_tx_power_cck_A.offset := #Ultimate.alloc(8);
    call write~int(51, ~#rtl8225z2_tx_power_cck_A.base, ~#rtl8225z2_tx_power_cck_A.offset + 0, 1);
    call write~int(50, ~#rtl8225z2_tx_power_cck_A.base, ~#rtl8225z2_tx_power_cck_A.offset + 1, 1);
    call write~int(43, ~#rtl8225z2_tx_power_cck_A.base, ~#rtl8225z2_tx_power_cck_A.offset + 2, 1);
    call write~int(35, ~#rtl8225z2_tx_power_cck_A.base, ~#rtl8225z2_tx_power_cck_A.offset + 3, 1);
    call write~int(26, ~#rtl8225z2_tx_power_cck_A.base, ~#rtl8225z2_tx_power_cck_A.offset + 4, 1);
    call write~int(17, ~#rtl8225z2_tx_power_cck_A.base, ~#rtl8225z2_tx_power_cck_A.offset + 5, 1);
    call write~int(8, ~#rtl8225z2_tx_power_cck_A.base, ~#rtl8225z2_tx_power_cck_A.offset + 6, 1);
    call write~int(4, ~#rtl8225z2_tx_power_cck_A.base, ~#rtl8225z2_tx_power_cck_A.offset + 7, 1);
    call ~#rtl8225z2_tx_power_cck.base, ~#rtl8225z2_tx_power_cck.offset := #Ultimate.alloc(8);
    call write~int(54, ~#rtl8225z2_tx_power_cck.base, ~#rtl8225z2_tx_power_cck.offset + 0, 1);
    call write~int(53, ~#rtl8225z2_tx_power_cck.base, ~#rtl8225z2_tx_power_cck.offset + 1, 1);
    call write~int(46, ~#rtl8225z2_tx_power_cck.base, ~#rtl8225z2_tx_power_cck.offset + 2, 1);
    call write~int(37, ~#rtl8225z2_tx_power_cck.base, ~#rtl8225z2_tx_power_cck.offset + 3, 1);
    call write~int(28, ~#rtl8225z2_tx_power_cck.base, ~#rtl8225z2_tx_power_cck.offset + 4, 1);
    call write~int(18, ~#rtl8225z2_tx_power_cck.base, ~#rtl8225z2_tx_power_cck.offset + 5, 1);
    call write~int(9, ~#rtl8225z2_tx_power_cck.base, ~#rtl8225z2_tx_power_cck.offset + 6, 1);
    call write~int(4, ~#rtl8225z2_tx_power_cck.base, ~#rtl8225z2_tx_power_cck.offset + 7, 1);
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[0 := 0];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[1 := 1];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[2 := 2];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[3 := 3];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[4 := 4];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[5 := 5];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[6 := 8];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[7 := 9];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[8 := 10];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[9 := 11];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[10 := 258];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[11 := 259];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[12 := 260];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[13 := 261];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[14 := 320];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[15 := 321];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[16 := 322];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[17 := 323];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[18 := 324];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[19 := 325];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[20 := 384];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[21 := 385];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[22 := 386];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[23 := 387];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[24 := 388];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[25 := 389];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[26 := 392];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[27 := 393];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[28 := 394];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[29 := 395];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[30 := 579];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[31 := 580];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[32 := 581];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[33 := 640];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[34 := 641];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[35 := 642];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[36 := 643];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[37 := 644];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[38 := 645];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[39 := 648];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[40 := 649];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[41 := 650];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[42 := 651];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[43 := 652];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[44 := 834];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[45 := 835];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[46 := 836];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[47 := 837];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[48 := 896];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[49 := 897];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[50 := 898];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[51 := 899];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[52 := 900];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[53 := 901];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[54 := 904];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[55 := 905];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[56 := 906];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[57 := 907];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[58 := 908];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[59 := 909];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[60 := 912];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[61 := 913];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[62 := 914];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[63 := 915];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[64 := 916];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[65 := 917];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[66 := 920];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[67 := 921];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[68 := 922];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[69 := 923];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[70 := 924];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[71 := 925];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[72 := 928];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[73 := 929];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[74 := 930];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[75 := 931];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[76 := 932];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[77 := 933];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[78 := 936];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[79 := 937];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[80 := 938];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[81 := 939];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[82 := 940];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[83 := 941];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[84 := 944];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[85 := 945];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[86 := 946];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[87 := 947];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[88 := 948];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[89 := 949];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[90 := 952];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[91 := 953];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[92 := 954];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[93 := 955];
    ~rtl8225z2_rxgain := ~rtl8225z2_rxgain[94 := 955];
    call ~#rtl8225_ops.base, ~#rtl8225_ops.offset := #Ultimate.alloc(40);
    call #t~nondet1425.base, #t~nondet1425.offset := #Ultimate.alloc(8);
    call write~$Pointer$(#t~nondet1425.base, #t~nondet1425.offset, ~#rtl8225_ops.base, ~#rtl8225_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~rtl8225_rf_init.base, #funAddr~rtl8225_rf_init.offset, ~#rtl8225_ops.base, ~#rtl8225_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~rtl8225_rf_stop.base, #funAddr~rtl8225_rf_stop.offset, ~#rtl8225_ops.base, ~#rtl8225_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~rtl8225_rf_set_channel.base, #funAddr~rtl8225_rf_set_channel.offset, ~#rtl8225_ops.base, ~#rtl8225_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#rtl8225_ops.base, ~#rtl8225_ops.offset + 32, 8);
    havoc #t~nondet1425.base, #t~nondet1425.offset;
    call ~#rtl8225z2_ops.base, ~#rtl8225z2_ops.offset := #Ultimate.alloc(40);
    call #t~nondet1426.base, #t~nondet1426.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet1426.base, #t~nondet1426.offset, ~#rtl8225z2_ops.base, ~#rtl8225z2_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~rtl8225z2_rf_init.base, #funAddr~rtl8225z2_rf_init.offset, ~#rtl8225z2_ops.base, ~#rtl8225z2_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~rtl8225_rf_stop.base, #funAddr~rtl8225_rf_stop.offset, ~#rtl8225z2_ops.base, ~#rtl8225z2_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~rtl8225_rf_set_channel.base, #funAddr~rtl8225_rf_set_channel.offset, ~#rtl8225z2_ops.base, ~#rtl8225z2_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#rtl8225z2_ops.base, ~#rtl8225z2_ops.offset + 32, 8);
    havoc #t~nondet1426.base, #t~nondet1426.offset;
    ~sa2400_chan := ~sa2400_chan[0 := 2412];
    ~sa2400_chan := ~sa2400_chan[1 := 526704];
    ~sa2400_chan := ~sa2400_chan[2 := 1050996];
    ~sa2400_chan := ~sa2400_chan[3 := 1575288];
    ~sa2400_chan := ~sa2400_chan[4 := 2432];
    ~sa2400_chan := ~sa2400_chan[5 := 526724];
    ~sa2400_chan := ~sa2400_chan[6 := 1051016];
    ~sa2400_chan := ~sa2400_chan[7 := 1575308];
    ~sa2400_chan := ~sa2400_chan[8 := 2452];
    ~sa2400_chan := ~sa2400_chan[9 := 526744];
    ~sa2400_chan := ~sa2400_chan[10 := 1051036];
    ~sa2400_chan := ~sa2400_chan[11 := 1575328];
    ~sa2400_chan := ~sa2400_chan[12 := 2472];
    ~sa2400_chan := ~sa2400_chan[13 := 2484];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[0 := 100];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[1 := 100];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[2 := 99];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[3 := 98];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[4 := 97];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[5 := 96];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[6 := 95];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[7 := 94];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[8 := 93];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[9 := 92];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[10 := 91];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[11 := 90];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[12 := 87];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[13 := 84];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[14 := 82];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[15 := 80];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[16 := 78];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[17 := 76];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[18 := 74];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[19 := 72];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[20 := 70];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[21 := 68];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[22 := 65];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[23 := 63];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[24 := 60];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[25 := 58];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[26 := 55];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[27 := 54];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[28 := 54];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[29 := 28];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[30 := 28];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[31 := 27];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[32 := 27];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[33 := 26];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[34 := 26];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[35 := 25];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[36 := 25];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[37 := 24];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[38 := 24];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[39 := 23];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[40 := 23];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[41 := 22];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[42 := 22];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[43 := 21];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[44 := 21];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[45 := 20];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[46 := 20];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[47 := 19];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[48 := 19];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[49 := 18];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[50 := 18];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[51 := 17];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[52 := 17];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[53 := 16];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[54 := 16];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[55 := 15];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[56 := 15];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[57 := 14];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[58 := 14];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[59 := 13];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[60 := 13];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[61 := 12];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[62 := 12];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[63 := 11];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[64 := 11];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[65 := 10];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[66 := 10];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[67 := 9];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[68 := 9];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[69 := 8];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[70 := 8];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[71 := 7];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[72 := 7];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[73 := 6];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[74 := 6];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[75 := 5];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[76 := 4];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[77 := 3];
    ~sa2400_rf_rssi_map := ~sa2400_rf_rssi_map[78 := 2];
    ~max2820_chan := ~max2820_chan[0 := 12];
    ~max2820_chan := ~max2820_chan[1 := 17];
    ~max2820_chan := ~max2820_chan[2 := 22];
    ~max2820_chan := ~max2820_chan[3 := 27];
    ~max2820_chan := ~max2820_chan[4 := 32];
    ~max2820_chan := ~max2820_chan[5 := 37];
    ~max2820_chan := ~max2820_chan[6 := 42];
    ~max2820_chan := ~max2820_chan[7 := 47];
    ~max2820_chan := ~max2820_chan[8 := 52];
    ~max2820_chan := ~max2820_chan[9 := 57];
    ~max2820_chan := ~max2820_chan[10 := 62];
    ~max2820_chan := ~max2820_chan[11 := 67];
    ~max2820_chan := ~max2820_chan[12 := 72];
    ~max2820_chan := ~max2820_chan[13 := 84];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[0 := 150];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[1 := 118];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[2 := 86];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[3 := 54];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[4 := 22];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[5 := 502];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[6 := 470];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[7 := 438];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[8 := 406];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[9 := 374];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[10 := 247];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[11 := 215];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[12 := 183];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[13 := 151];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[14 := 119];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[15 := 87];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[16 := 55];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[17 := 251];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[18 := 219];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[19 := 187];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[20 := 255];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[21 := 227];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[22 := 195];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[23 := 163];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[24 := 131];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[25 := 99];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[26 := 67];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[27 := 35];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[28 := 3];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[29 := 483];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[30 := 451];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[31 := 419];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[32 := 387];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[33 := 355];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[34 := 323];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[35 := 291];
    ~RF_GAIN_TABLE := ~RF_GAIN_TABLE[36 := 259];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[0 := 0];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[1 := 1];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[2 := 2];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[3 := 3];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[4 := 4];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[5 := 5];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[6 := 6];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[7 := 7];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[8 := 8];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[9 := 9];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[10 := 10];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[11 := 11];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[12 := 12];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[13 := 13];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[14 := 14];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[15 := 15];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[16 := 16];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[17 := 17];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[18 := 18];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[19 := 19];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[20 := 20];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[21 := 21];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[22 := 22];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[23 := 23];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[24 := 24];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[25 := 25];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[26 := 26];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[27 := 27];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[28 := 28];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[29 := 29];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[30 := 30];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[31 := 31];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[32 := 32];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[33 := 33];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[34 := 34];
    ~cck_ofdm_gain_settings := ~cck_ofdm_gain_settings[35 := 35];
    ~rtl8225se_chan := ~rtl8225se_chan[0 := 128];
    ~rtl8225se_chan := ~rtl8225se_chan[1 := 256];
    ~rtl8225se_chan := ~rtl8225se_chan[2 := 384];
    ~rtl8225se_chan := ~rtl8225se_chan[3 := 512];
    ~rtl8225se_chan := ~rtl8225se_chan[4 := 640];
    ~rtl8225se_chan := ~rtl8225se_chan[5 := 768];
    ~rtl8225se_chan := ~rtl8225se_chan[6 := 896];
    ~rtl8225se_chan := ~rtl8225se_chan[7 := 1024];
    ~rtl8225se_chan := ~rtl8225se_chan[8 := 1152];
    ~rtl8225se_chan := ~rtl8225se_chan[9 := 1280];
    ~rtl8225se_chan := ~rtl8225se_chan[10 := 1408];
    ~rtl8225se_chan := ~rtl8225se_chan[11 := 1536];
    ~rtl8225se_chan := ~rtl8225se_chan[12 := 1664];
    ~rtl8225se_chan := ~rtl8225se_chan[13 := 1866];
    ~ZEBRA_AGC := ~ZEBRA_AGC[0 := 126];
    ~ZEBRA_AGC := ~ZEBRA_AGC[1 := 126];
    ~ZEBRA_AGC := ~ZEBRA_AGC[2 := 126];
    ~ZEBRA_AGC := ~ZEBRA_AGC[3 := 126];
    ~ZEBRA_AGC := ~ZEBRA_AGC[4 := 125];
    ~ZEBRA_AGC := ~ZEBRA_AGC[5 := 124];
    ~ZEBRA_AGC := ~ZEBRA_AGC[6 := 123];
    ~ZEBRA_AGC := ~ZEBRA_AGC[7 := 122];
    ~ZEBRA_AGC := ~ZEBRA_AGC[8 := 121];
    ~ZEBRA_AGC := ~ZEBRA_AGC[9 := 120];
    ~ZEBRA_AGC := ~ZEBRA_AGC[10 := 119];
    ~ZEBRA_AGC := ~ZEBRA_AGC[11 := 118];
    ~ZEBRA_AGC := ~ZEBRA_AGC[12 := 117];
    ~ZEBRA_AGC := ~ZEBRA_AGC[13 := 116];
    ~ZEBRA_AGC := ~ZEBRA_AGC[14 := 115];
    ~ZEBRA_AGC := ~ZEBRA_AGC[15 := 114];
    ~ZEBRA_AGC := ~ZEBRA_AGC[16 := 113];
    ~ZEBRA_AGC := ~ZEBRA_AGC[17 := 112];
    ~ZEBRA_AGC := ~ZEBRA_AGC[18 := 111];
    ~ZEBRA_AGC := ~ZEBRA_AGC[19 := 110];
    ~ZEBRA_AGC := ~ZEBRA_AGC[20 := 109];
    ~ZEBRA_AGC := ~ZEBRA_AGC[21 := 108];
    ~ZEBRA_AGC := ~ZEBRA_AGC[22 := 107];
    ~ZEBRA_AGC := ~ZEBRA_AGC[23 := 106];
    ~ZEBRA_AGC := ~ZEBRA_AGC[24 := 105];
    ~ZEBRA_AGC := ~ZEBRA_AGC[25 := 104];
    ~ZEBRA_AGC := ~ZEBRA_AGC[26 := 103];
    ~ZEBRA_AGC := ~ZEBRA_AGC[27 := 102];
    ~ZEBRA_AGC := ~ZEBRA_AGC[28 := 101];
    ~ZEBRA_AGC := ~ZEBRA_AGC[29 := 100];
    ~ZEBRA_AGC := ~ZEBRA_AGC[30 := 99];
    ~ZEBRA_AGC := ~ZEBRA_AGC[31 := 98];
    ~ZEBRA_AGC := ~ZEBRA_AGC[32 := 72];
    ~ZEBRA_AGC := ~ZEBRA_AGC[33 := 71];
    ~ZEBRA_AGC := ~ZEBRA_AGC[34 := 70];
    ~ZEBRA_AGC := ~ZEBRA_AGC[35 := 69];
    ~ZEBRA_AGC := ~ZEBRA_AGC[36 := 68];
    ~ZEBRA_AGC := ~ZEBRA_AGC[37 := 41];
    ~ZEBRA_AGC := ~ZEBRA_AGC[38 := 40];
    ~ZEBRA_AGC := ~ZEBRA_AGC[39 := 39];
    ~ZEBRA_AGC := ~ZEBRA_AGC[40 := 38];
    ~ZEBRA_AGC := ~ZEBRA_AGC[41 := 37];
    ~ZEBRA_AGC := ~ZEBRA_AGC[42 := 36];
    ~ZEBRA_AGC := ~ZEBRA_AGC[43 := 35];
    ~ZEBRA_AGC := ~ZEBRA_AGC[44 := 34];
    ~ZEBRA_AGC := ~ZEBRA_AGC[45 := 33];
    ~ZEBRA_AGC := ~ZEBRA_AGC[46 := 8];
    ~ZEBRA_AGC := ~ZEBRA_AGC[47 := 7];
    ~ZEBRA_AGC := ~ZEBRA_AGC[48 := 6];
    ~ZEBRA_AGC := ~ZEBRA_AGC[49 := 5];
    ~ZEBRA_AGC := ~ZEBRA_AGC[50 := 4];
    ~ZEBRA_AGC := ~ZEBRA_AGC[51 := 3];
    ~ZEBRA_AGC := ~ZEBRA_AGC[52 := 2];
    ~ZEBRA_AGC := ~ZEBRA_AGC[53 := 1];
    ~ZEBRA_AGC := ~ZEBRA_AGC[54 := 0];
    ~ZEBRA_AGC := ~ZEBRA_AGC[55 := 0];
    ~ZEBRA_AGC := ~ZEBRA_AGC[56 := 0];
    ~ZEBRA_AGC := ~ZEBRA_AGC[57 := 0];
    ~ZEBRA_AGC := ~ZEBRA_AGC[58 := 0];
    ~ZEBRA_AGC := ~ZEBRA_AGC[59 := 0];
    ~ZEBRA_AGC := ~ZEBRA_AGC[60 := 0];
    ~ZEBRA_AGC := ~ZEBRA_AGC[61 := 0];
    ~ZEBRA_AGC := ~ZEBRA_AGC[62 := 0];
    ~ZEBRA_AGC := ~ZEBRA_AGC[63 := 0];
    ~ZEBRA_AGC := ~ZEBRA_AGC[64 := 15];
    ~ZEBRA_AGC := ~ZEBRA_AGC[65 := 15];
    ~ZEBRA_AGC := ~ZEBRA_AGC[66 := 15];
    ~ZEBRA_AGC := ~ZEBRA_AGC[67 := 15];
    ~ZEBRA_AGC := ~ZEBRA_AGC[68 := 15];
    ~ZEBRA_AGC := ~ZEBRA_AGC[69 := 15];
    ~ZEBRA_AGC := ~ZEBRA_AGC[70 := 15];
    ~ZEBRA_AGC := ~ZEBRA_AGC[71 := 15];
    ~ZEBRA_AGC := ~ZEBRA_AGC[72 := 15];
    ~ZEBRA_AGC := ~ZEBRA_AGC[73 := 15];
    ~ZEBRA_AGC := ~ZEBRA_AGC[74 := 16];
    ~ZEBRA_AGC := ~ZEBRA_AGC[75 := 17];
    ~ZEBRA_AGC := ~ZEBRA_AGC[76 := 18];
    ~ZEBRA_AGC := ~ZEBRA_AGC[77 := 19];
    ~ZEBRA_AGC := ~ZEBRA_AGC[78 := 21];
    ~ZEBRA_AGC := ~ZEBRA_AGC[79 := 22];
    ~ZEBRA_AGC := ~ZEBRA_AGC[80 := 23];
    ~ZEBRA_AGC := ~ZEBRA_AGC[81 := 23];
    ~ZEBRA_AGC := ~ZEBRA_AGC[82 := 24];
    ~ZEBRA_AGC := ~ZEBRA_AGC[83 := 24];
    ~ZEBRA_AGC := ~ZEBRA_AGC[84 := 25];
    ~ZEBRA_AGC := ~ZEBRA_AGC[85 := 26];
    ~ZEBRA_AGC := ~ZEBRA_AGC[86 := 26];
    ~ZEBRA_AGC := ~ZEBRA_AGC[87 := 27];
    ~ZEBRA_AGC := ~ZEBRA_AGC[88 := 27];
    ~ZEBRA_AGC := ~ZEBRA_AGC[89 := 28];
    ~ZEBRA_AGC := ~ZEBRA_AGC[90 := 28];
    ~ZEBRA_AGC := ~ZEBRA_AGC[91 := 29];
    ~ZEBRA_AGC := ~ZEBRA_AGC[92 := 29];
    ~ZEBRA_AGC := ~ZEBRA_AGC[93 := 29];
    ~ZEBRA_AGC := ~ZEBRA_AGC[94 := 30];
    ~ZEBRA_AGC := ~ZEBRA_AGC[95 := 30];
    ~ZEBRA_AGC := ~ZEBRA_AGC[96 := 31];
    ~ZEBRA_AGC := ~ZEBRA_AGC[97 := 31];
    ~ZEBRA_AGC := ~ZEBRA_AGC[98 := 31];
    ~ZEBRA_AGC := ~ZEBRA_AGC[99 := 32];
    ~ZEBRA_AGC := ~ZEBRA_AGC[100 := 32];
    ~ZEBRA_AGC := ~ZEBRA_AGC[101 := 32];
    ~ZEBRA_AGC := ~ZEBRA_AGC[102 := 32];
    ~ZEBRA_AGC := ~ZEBRA_AGC[103 := 33];
    ~ZEBRA_AGC := ~ZEBRA_AGC[104 := 33];
    ~ZEBRA_AGC := ~ZEBRA_AGC[105 := 33];
    ~ZEBRA_AGC := ~ZEBRA_AGC[106 := 34];
    ~ZEBRA_AGC := ~ZEBRA_AGC[107 := 34];
    ~ZEBRA_AGC := ~ZEBRA_AGC[108 := 34];
    ~ZEBRA_AGC := ~ZEBRA_AGC[109 := 35];
    ~ZEBRA_AGC := ~ZEBRA_AGC[110 := 35];
    ~ZEBRA_AGC := ~ZEBRA_AGC[111 := 36];
    ~ZEBRA_AGC := ~ZEBRA_AGC[112 := 36];
    ~ZEBRA_AGC := ~ZEBRA_AGC[113 := 37];
    ~ZEBRA_AGC := ~ZEBRA_AGC[114 := 37];
    ~ZEBRA_AGC := ~ZEBRA_AGC[115 := 37];
    ~ZEBRA_AGC := ~ZEBRA_AGC[116 := 38];
    ~ZEBRA_AGC := ~ZEBRA_AGC[117 := 38];
    ~ZEBRA_AGC := ~ZEBRA_AGC[118 := 39];
    ~ZEBRA_AGC := ~ZEBRA_AGC[119 := 39];
    ~ZEBRA_AGC := ~ZEBRA_AGC[120 := 47];
    ~ZEBRA_AGC := ~ZEBRA_AGC[121 := 47];
    ~ZEBRA_AGC := ~ZEBRA_AGC[122 := 47];
    ~ZEBRA_AGC := ~ZEBRA_AGC[123 := 47];
    ~ZEBRA_AGC := ~ZEBRA_AGC[124 := 47];
    ~ZEBRA_AGC := ~ZEBRA_AGC[125 := 47];
    ~ZEBRA_AGC := ~ZEBRA_AGC[126 := 47];
    ~ZEBRA_AGC := ~ZEBRA_AGC[127 := 47];
    ~OFDM_CONFIG := ~OFDM_CONFIG[0 := 16];
    ~OFDM_CONFIG := ~OFDM_CONFIG[1 := 15];
    ~OFDM_CONFIG := ~OFDM_CONFIG[2 := 10];
    ~OFDM_CONFIG := ~OFDM_CONFIG[3 := 12];
    ~OFDM_CONFIG := ~OFDM_CONFIG[4 := 20];
    ~OFDM_CONFIG := ~OFDM_CONFIG[5 := 250];
    ~OFDM_CONFIG := ~OFDM_CONFIG[6 := 255];
    ~OFDM_CONFIG := ~OFDM_CONFIG[7 := 80];
    ~OFDM_CONFIG := ~OFDM_CONFIG[8 := 0];
    ~OFDM_CONFIG := ~OFDM_CONFIG[9 := 80];
    ~OFDM_CONFIG := ~OFDM_CONFIG[10 := 0];
    ~OFDM_CONFIG := ~OFDM_CONFIG[11 := 0];
    ~OFDM_CONFIG := ~OFDM_CONFIG[12 := 0];
    ~OFDM_CONFIG := ~OFDM_CONFIG[13 := 92];
    ~OFDM_CONFIG := ~OFDM_CONFIG[14 := 0];
    ~OFDM_CONFIG := ~OFDM_CONFIG[15 := 0];
    ~OFDM_CONFIG := ~OFDM_CONFIG[16 := 64];
    ~OFDM_CONFIG := ~OFDM_CONFIG[17 := 0];
    ~OFDM_CONFIG := ~OFDM_CONFIG[18 := 64];
    ~OFDM_CONFIG := ~OFDM_CONFIG[19 := 0];
    ~OFDM_CONFIG := ~OFDM_CONFIG[20 := 0];
    ~OFDM_CONFIG := ~OFDM_CONFIG[21 := 0];
    ~OFDM_CONFIG := ~OFDM_CONFIG[22 := 168];
    ~OFDM_CONFIG := ~OFDM_CONFIG[23 := 38];
    ~OFDM_CONFIG := ~OFDM_CONFIG[24 := 50];
    ~OFDM_CONFIG := ~OFDM_CONFIG[25 := 51];
    ~OFDM_CONFIG := ~OFDM_CONFIG[26 := 6];
    ~OFDM_CONFIG := ~OFDM_CONFIG[27 := 165];
    ~OFDM_CONFIG := ~OFDM_CONFIG[28 := 111];
    ~OFDM_CONFIG := ~OFDM_CONFIG[29 := 85];
    ~OFDM_CONFIG := ~OFDM_CONFIG[30 := 200];
    ~OFDM_CONFIG := ~OFDM_CONFIG[31 := 187];
    ~OFDM_CONFIG := ~OFDM_CONFIG[32 := 10];
    ~OFDM_CONFIG := ~OFDM_CONFIG[33 := 225];
    ~OFDM_CONFIG := ~OFDM_CONFIG[34 := 44];
    ~OFDM_CONFIG := ~OFDM_CONFIG[35 := 74];
    ~OFDM_CONFIG := ~OFDM_CONFIG[36 := 134];
    ~OFDM_CONFIG := ~OFDM_CONFIG[37 := 131];
    ~OFDM_CONFIG := ~OFDM_CONFIG[38 := 52];
    ~OFDM_CONFIG := ~OFDM_CONFIG[39 := 0];
    ~OFDM_CONFIG := ~OFDM_CONFIG[40 := 79];
    ~OFDM_CONFIG := ~OFDM_CONFIG[41 := 36];
    ~OFDM_CONFIG := ~OFDM_CONFIG[42 := 111];
    ~OFDM_CONFIG := ~OFDM_CONFIG[43 := 194];
    ~OFDM_CONFIG := ~OFDM_CONFIG[44 := 3];
    ~OFDM_CONFIG := ~OFDM_CONFIG[45 := 64];
    ~OFDM_CONFIG := ~OFDM_CONFIG[46 := 128];
    ~OFDM_CONFIG := ~OFDM_CONFIG[47 := 0];
    ~OFDM_CONFIG := ~OFDM_CONFIG[48 := 192];
    ~OFDM_CONFIG := ~OFDM_CONFIG[49 := 193];
    ~OFDM_CONFIG := ~OFDM_CONFIG[50 := 88];
    ~OFDM_CONFIG := ~OFDM_CONFIG[51 := 241];
    ~OFDM_CONFIG := ~OFDM_CONFIG[52 := 0];
    ~OFDM_CONFIG := ~OFDM_CONFIG[53 := 196];
    ~OFDM_CONFIG := ~OFDM_CONFIG[54 := 144];
    ~OFDM_CONFIG := ~OFDM_CONFIG[55 := 62];
    ~OFDM_CONFIG := ~OFDM_CONFIG[56 := 216];
    ~OFDM_CONFIG := ~OFDM_CONFIG[57 := 60];
    ~OFDM_CONFIG := ~OFDM_CONFIG[58 := 123];
    ~OFDM_CONFIG := ~OFDM_CONFIG[59 := 16];
    ~OFDM_CONFIG := ~OFDM_CONFIG[60 := 16];
    call ~#rtl8225se_ops.base, ~#rtl8225se_ops.offset := #Ultimate.alloc(40);
    call #t~nondet1614.base, #t~nondet1614.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet1614.base, #t~nondet1614.offset, ~#rtl8225se_ops.base, ~#rtl8225se_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~rtl8225se_rf_init.base, #funAddr~rtl8225se_rf_init.offset, ~#rtl8225se_ops.base, ~#rtl8225se_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~rtl8225se_rf_stop.base, #funAddr~rtl8225se_rf_stop.offset, ~#rtl8225se_ops.base, ~#rtl8225se_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~rtl8225se_rf_set_channel.base, #funAddr~rtl8225se_rf_set_channel.offset, ~#rtl8225se_ops.base, ~#rtl8225se_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#rtl8225se_ops.base, ~#rtl8225se_ops.offset + 32, 8);
    havoc #t~nondet1614.base, #t~nondet1614.offset;
    call ~#set_impl.base, ~#set_impl.offset := #Ultimate.alloc(120);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#set_impl.base, ~#set_impl.offset + 112, 8);
    ~LDV_SKBS.base, ~LDV_SKBS.offset := 0, 0;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_8, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_irq_2_0, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~ldv_irq_2_2, ~ldv_state_variable_9, ~ldv_irq_line_2_0, ~ref_cnt, ~ldv_irq_line_1_1, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_irq_line_1_2, ~ldv_irq_line_2_3, ~ldv_irq_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_1_3, ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset, ~ldv_irq_line_2_2, ~ldv_state_variable_10, ~ldv_irq_1_0, ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset, ~ldv_state_variable_6, ~ldv_irq_line_2_1, ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset, ~ldv_state_variable_2, ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_1_2, ~LDV_IN_INTERRUPT, ~ldv_irq_1_1, ~ldv_irq_2_3, ~ldv_irq_line_1_3, ~ldv_state_variable_3, ~ldv_irq_line_1_0, ~ldv_state_variable_4, ~rtl8187se_queues_map, ~rtl8180_queues_map, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_1, ~ldv_retval_3, ~ldv_retval_2, ~grf5101_encode, ~last_index, ~rtl8225se_ops_group0.base, ~rtl8225se_ops_group0.offset, ~grf5101_rf_ops_group0.base, ~grf5101_rf_ops_group0.offset, ~rtl8225_ops_group0.base, ~rtl8225_ops_group0.offset, ~rtl8180_ops_group1.base, ~rtl8180_ops_group1.offset, ~sa2400_rf_ops_group0.base, ~sa2400_rf_ops_group0.offset, ~rtl8225z2_ops_group0.base, ~rtl8225z2_ops_group0.offset, ~rtl8180_driver_group0.base, ~rtl8180_driver_group0.offset, ~rtl8180_ops_group0.base, ~rtl8180_ops_group0.offset, ~max2820_rf_ops_group0.base, ~max2820_rf_ops_group0.offset, ~#sa2400_rf_ops.base, ~#sa2400_rf_ops.offset, ~#max2820_rf_ops.base, ~#max2820_rf_ops.offset, ~#grf5101_rf_ops.base, ~#grf5101_rf_ops.offset, ~#rtl8180_table.base, ~#rtl8180_table.offset, ~#rtl818x_rates.base, ~#rtl818x_rates.offset, ~#rtl818x_channels.base, ~#rtl818x_channels.offset, ~#rtl8180_ops.base, ~#rtl8180_ops.offset, ~#rtl8180_driver.base, ~#rtl8180_driver.offset, ~rtl8225bcd_rxgain, ~rtl8225_agc, ~rtl8225_gain, ~rtl8225_threshold, ~rtl8225_tx_gain_cck_ofdm, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset, ~#rtl8225_tx_power_ofdm.base, ~#rtl8225_tx_power_ofdm.offset, ~rtl8225_chan, ~#rtl8225z2_tx_power_cck_ch14.base, ~#rtl8225z2_tx_power_cck_ch14.offset, ~#rtl8225z2_tx_power_cck_B.base, ~#rtl8225z2_tx_power_cck_B.offset, ~#rtl8225z2_tx_power_cck_A.base, ~#rtl8225z2_tx_power_cck_A.offset, ~#rtl8225z2_tx_power_cck.base, ~#rtl8225z2_tx_power_cck.offset, ~rtl8225z2_rxgain, ~#rtl8225_ops.base, ~#rtl8225_ops.offset, ~#rtl8225z2_ops.base, ~#rtl8225z2_ops.offset, ~sa2400_chan, ~sa2400_rf_rssi_map, ~max2820_chan, ~RF_GAIN_TABLE, ~cck_ofdm_gain_settings, ~rtl8225se_chan, ~ZEBRA_AGC, ~OFDM_CONFIG, ~#rtl8225se_ops.base, ~#rtl8225se_ops.offset, ~#set_impl.base, ~#set_impl.offset, ~LDV_SKBS.base, ~LDV_SKBS.offset, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, #valid, #length;

implementation ldv_error() returns (){
  loc2:
    assume !false;
    goto loc3;
  loc3:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr1638 : int;

  loc4:
    #t~loopctr1638 := 0;
    goto loc5;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume #t~loopctr1638 < #amount;
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset + #t~loopctr1638 * 1 := 0], #memory_$Pointer$.offset[#ptr.base,#ptr.offset + #t~loopctr1638 * 1 := #value % 256];
    #memory_int := #memory_int[#ptr.base,#ptr.offset + #t~loopctr1638 * 1 := #value];
    #t~loopctr1638 := #t~loopctr1638 + 1;
    goto loc5;
  loc5_1:
    assume !(#t~loopctr1638 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation ldv_check_final_state() returns (){
    var #t~ret1630 : int;
    var ~tmp___7~1660 : int;

  loc6:
    havoc ~tmp___7~1660;
    call #t~ret1630 := ldv_set_is_empty(~LDV_SKBS.base, ~LDV_SKBS.offset);
    assume -2147483648 <= #t~ret1630 && #t~ret1630 <= 2147483647;
    ~tmp___7~1660 := #t~ret1630;
    havoc #t~ret1630;
    assume !(~tmp___7~1660 != 0);
    call ldv_error();
    return;
}

procedure ldv_check_final_state() returns ();
modifies ;

implementation ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~nondet189 : int;
    var #t~malloc190.base : int, #t~malloc190.offset : int;
    var ~size : int;
    var ~p~169.base : int, ~p~169.offset : int;
    var ~tmp~169.base : int, ~tmp~169.offset : int;
    var ~tmp___0~169 : int;

  loc7:
    ~size := #in~size;
    havoc ~p~169.base, ~p~169.offset;
    havoc ~tmp~169.base, ~tmp~169.offset;
    havoc ~tmp___0~169;
    assume -2147483648 <= #t~nondet189 && #t~nondet189 <= 2147483647;
    ~tmp___0~169 := #t~nondet189;
    havoc #t~nondet189;
    assume ~tmp___0~169 != 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ULTIMATE.start() returns (){
    var #t~ret1633 : int;

  loc8:
    call ULTIMATE.init();
    call #t~ret1633 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_8, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_irq_2_0, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~ldv_irq_2_2, ~ldv_state_variable_9, ~ldv_irq_line_2_0, ~ref_cnt, ~ldv_irq_line_1_1, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_irq_line_1_2, ~ldv_irq_line_2_3, ~ldv_irq_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_1_3, ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset, ~ldv_irq_line_2_2, ~ldv_state_variable_10, ~ldv_irq_1_0, ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset, ~ldv_state_variable_6, ~ldv_irq_line_2_1, ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset, ~ldv_state_variable_2, ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_1_2, ~LDV_IN_INTERRUPT, ~ldv_irq_1_1, ~ldv_irq_2_3, ~ldv_irq_line_1_3, ~ldv_state_variable_3, ~ldv_irq_line_1_0, ~ldv_state_variable_4, ~rtl8187se_queues_map, ~rtl8180_queues_map, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_1, ~ldv_retval_3, ~ldv_retval_2, ~grf5101_encode, ~last_index, ~rtl8225se_ops_group0.base, ~rtl8225se_ops_group0.offset, ~grf5101_rf_ops_group0.base, ~grf5101_rf_ops_group0.offset, ~rtl8225_ops_group0.base, ~rtl8225_ops_group0.offset, ~rtl8180_ops_group1.base, ~rtl8180_ops_group1.offset, ~sa2400_rf_ops_group0.base, ~sa2400_rf_ops_group0.offset, ~rtl8225z2_ops_group0.base, ~rtl8225z2_ops_group0.offset, ~rtl8180_driver_group0.base, ~rtl8180_driver_group0.offset, ~rtl8180_ops_group0.base, ~rtl8180_ops_group0.offset, ~max2820_rf_ops_group0.base, ~max2820_rf_ops_group0.offset, ~#sa2400_rf_ops.base, ~#sa2400_rf_ops.offset, ~#max2820_rf_ops.base, ~#max2820_rf_ops.offset, ~#grf5101_rf_ops.base, ~#grf5101_rf_ops.offset, ~#rtl8180_table.base, ~#rtl8180_table.offset, ~#rtl818x_rates.base, ~#rtl818x_rates.offset, ~#rtl818x_channels.base, ~#rtl818x_channels.offset, ~#rtl8180_ops.base, ~#rtl8180_ops.offset, ~#rtl8180_driver.base, ~#rtl8180_driver.offset, ~rtl8225bcd_rxgain, ~rtl8225_agc, ~rtl8225_gain, ~rtl8225_threshold, ~rtl8225_tx_gain_cck_ofdm, ~#rtl8225_tx_power_cck.base, ~#rtl8225_tx_power_cck.offset, ~#rtl8225_tx_power_cck_ch14.base, ~#rtl8225_tx_power_cck_ch14.offset, ~#rtl8225_tx_power_ofdm.base, ~#rtl8225_tx_power_ofdm.offset, ~rtl8225_chan, ~#rtl8225z2_tx_power_cck_ch14.base, ~#rtl8225z2_tx_power_cck_ch14.offset, ~#rtl8225z2_tx_power_cck_B.base, ~#rtl8225z2_tx_power_cck_B.offset, ~#rtl8225z2_tx_power_cck_A.base, ~#rtl8225z2_tx_power_cck_A.offset, ~#rtl8225z2_tx_power_cck.base, ~#rtl8225z2_tx_power_cck.offset, ~rtl8225z2_rxgain, ~#rtl8225_ops.base, ~#rtl8225_ops.offset, ~#rtl8225z2_ops.base, ~#rtl8225z2_ops.offset, ~sa2400_chan, ~sa2400_rf_rssi_map, ~max2820_chan, ~RF_GAIN_TABLE, ~cck_ofdm_gain_settings, ~rtl8225se_chan, ~ZEBRA_AGC, ~OFDM_CONFIG, ~#rtl8225se_ops.base, ~#rtl8225se_ops.offset, ~#set_impl.base, ~#set_impl.offset, ~LDV_SKBS.base, ~LDV_SKBS.offset, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_9, ~ldv_state_variable_2, ~ldv_state_variable_8, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_10, ~ldv_state_variable_5, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_3, ~ldv_retval_4;
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~last_index, ~sa2400_rf_ops_group0.base, ~sa2400_rf_ops_group0.offset, ~rtl8225z2_ops_group0.base, ~rtl8225z2_ops_group0.offset, ~rtl8180_ops_group0.base, ~rtl8180_ops_group0.offset, ~rtl8180_ops_group1.base, ~rtl8180_ops_group1.offset, ~max2820_rf_ops_group0.base, ~max2820_rf_ops_group0.offset, ~grf5101_rf_ops_group0.base, ~grf5101_rf_ops_group0.offset, ~rtl8225_ops_group0.base, ~rtl8225_ops_group0.offset, ~rtl8180_driver_group0.base, ~rtl8180_driver_group0.offset, ~rtl8225se_ops_group0.base, ~rtl8225se_ops_group0.offset, ~ldv_state_variable_6, ~ref_cnt, ~ldv_state_variable_4, ~ldv_state_variable_8, ~ldv_state_variable_7, ~ldv_state_variable_5, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~ldv_state_variable_3, ~LDV_IN_INTERRUPT, ~ldv_irq_1_0, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~ldv_state_variable_9, ~ldv_state_variable_2, ~ldv_state_variable_1, ~ldv_state_variable_0, ~ldv_state_variable_10, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_3, ~ldv_retval_4;

implementation main() returns (#res : int){
    var #t~ret1203.base : int, #t~ret1203.offset : int;
    var #t~ret1204.base : int, #t~ret1204.offset : int;
    var #t~ret1205.base : int, #t~ret1205.offset : int;
    var #t~ret1206.base : int, #t~ret1206.offset : int;
    var #t~ret1207.base : int, #t~ret1207.offset : int;
    var #t~ret1208.base : int, #t~ret1208.offset : int;
    var #t~ret1209 : ~u32;
    var #t~ret1210 : ~u32;
    var #t~ret1211 : ~u16;
    var #t~ret1212.base : int, #t~ret1212.offset : int;
    var #t~nondet1213 : int;
    var #t~memset1214.base : int, #t~memset1214.offset : int;
    var #t~memset1215.base : int, #t~memset1215.offset : int;
    var #t~nondet1216 : int;
    var #t~switch1217 : bool;
    var #t~nondet1218 : int;
    var #t~switch1219 : bool;
    var #t~ret1220 : int;
    var #t~mem1221 : int;
    var #t~ret1222 : int;
    var #t~ret1223 : int;
    var #t~nondet1224 : int;
    var #t~switch1225 : bool;
    var #t~ret1226 : int;
    var #t~nondet1227 : int;
    var #t~switch1228 : bool;
    var #t~ret1229 : int;
    var #t~ret1230 : int;
    var #t~ret1231 : int;
    var #t~ret1232 : ~u64;
    var #t~ret1233 : ~u64;
    var #t~mem1234 : int;
    var #t~mem1235 : int;
    var #t~ret1236 : ~u64;
    var #t~ret1237 : ~u64;
    var #t~ret1238 : int;
    var #t~ret1239 : int;
    var #t~ret1240 : int;
    var #t~ret1241 : int;
    var ~#ldvarg5~760.base : int, ~#ldvarg5~760.offset : int;
    var ~ldvarg6~760.base : int, ~ldvarg6~760.offset : int;
    var ~tmp~760.base : int, ~tmp~760.offset : int;
    var ~ldvarg18~760.base : int, ~ldvarg18~760.offset : int;
    var ~tmp___0~760.base : int, ~tmp___0~760.offset : int;
    var ~ldvarg11~760.base : int, ~ldvarg11~760.offset : int;
    var ~tmp___1~760.base : int, ~tmp___1~760.offset : int;
    var ~ldvarg20~760.base : int, ~ldvarg20~760.offset : int;
    var ~tmp___2~760.base : int, ~tmp___2~760.offset : int;
    var ~ldvarg12~760.base : int, ~ldvarg12~760.offset : int;
    var ~tmp___3~760.base : int, ~tmp___3~760.offset : int;
    var ~ldvarg16~760.base : int, ~ldvarg16~760.offset : int;
    var ~tmp___4~760.base : int, ~tmp___4~760.offset : int;
    var ~ldvarg15~760 : ~u32;
    var ~tmp___5~760 : ~u32;
    var ~ldvarg21~760 : ~u32;
    var ~tmp___6~760 : ~u32;
    var ~ldvarg14~760 : ~u16;
    var ~tmp___7~760 : ~u16;
    var ~#ldvarg17~760.base : int, ~#ldvarg17~760.offset : int;
    var ~ldvarg13~760.base : int, ~ldvarg13~760.offset : int;
    var ~tmp___8~760.base : int, ~tmp___8~760.offset : int;
    var ~ldvarg19~760 : int;
    var ~tmp___9~760 : int;
    var ~tmp___10~760 : int;
    var ~tmp___11~760 : int;
    var ~tmp___12~760 : int;
    var ~tmp___13~760 : int;

  loc9:
    call ~#ldvarg5~760.base, ~#ldvarg5~760.offset := #Ultimate.alloc(4);
    havoc ~ldvarg6~760.base, ~ldvarg6~760.offset;
    havoc ~tmp~760.base, ~tmp~760.offset;
    havoc ~ldvarg18~760.base, ~ldvarg18~760.offset;
    havoc ~tmp___0~760.base, ~tmp___0~760.offset;
    havoc ~ldvarg11~760.base, ~ldvarg11~760.offset;
    havoc ~tmp___1~760.base, ~tmp___1~760.offset;
    havoc ~ldvarg20~760.base, ~ldvarg20~760.offset;
    havoc ~tmp___2~760.base, ~tmp___2~760.offset;
    havoc ~ldvarg12~760.base, ~ldvarg12~760.offset;
    havoc ~tmp___3~760.base, ~tmp___3~760.offset;
    havoc ~ldvarg16~760.base, ~ldvarg16~760.offset;
    havoc ~tmp___4~760.base, ~tmp___4~760.offset;
    havoc ~ldvarg15~760;
    havoc ~tmp___5~760;
    havoc ~ldvarg21~760;
    havoc ~tmp___6~760;
    havoc ~ldvarg14~760;
    havoc ~tmp___7~760;
    call ~#ldvarg17~760.base, ~#ldvarg17~760.offset := #Ultimate.alloc(8);
    havoc ~ldvarg13~760.base, ~ldvarg13~760.offset;
    havoc ~tmp___8~760.base, ~tmp___8~760.offset;
    havoc ~ldvarg19~760;
    havoc ~tmp___9~760;
    havoc ~tmp___10~760;
    havoc ~tmp___11~760;
    havoc ~tmp___12~760;
    havoc ~tmp___13~760;
    call #t~ret1203.base, #t~ret1203.offset := ldv_zalloc(32);
    ~tmp~760.base, ~tmp~760.offset := #t~ret1203.base, #t~ret1203.offset;
    havoc #t~ret1203.base, #t~ret1203.offset;
    ~ldvarg6~760.base, ~ldvarg6~760.offset := ~tmp~760.base, ~tmp~760.offset;
    call #t~ret1204.base, #t~ret1204.offset := ldv_zalloc(4);
    ~tmp___0~760.base, ~tmp___0~760.offset := #t~ret1204.base, #t~ret1204.offset;
    havoc #t~ret1204.base, #t~ret1204.offset;
    ~ldvarg18~760.base, ~ldvarg18~760.offset := ~tmp___0~760.base, ~tmp___0~760.offset;
    call #t~ret1205.base, #t~ret1205.offset := ldv_zalloc(232);
    ~tmp___1~760.base, ~tmp___1~760.offset := #t~ret1205.base, #t~ret1205.offset;
    havoc #t~ret1205.base, #t~ret1205.offset;
    ~ldvarg11~760.base, ~ldvarg11~760.offset := ~tmp___1~760.base, ~tmp___1~760.offset;
    call #t~ret1206.base, #t~ret1206.offset := ldv_zalloc(24);
    ~tmp___2~760.base, ~tmp___2~760.offset := #t~ret1206.base, #t~ret1206.offset;
    havoc #t~ret1206.base, #t~ret1206.offset;
    ~ldvarg20~760.base, ~ldvarg20~760.offset := ~tmp___2~760.base, ~tmp___2~760.offset;
    call #t~ret1207.base, #t~ret1207.offset := ldv_zalloc(8);
    ~tmp___3~760.base, ~tmp___3~760.offset := #t~ret1207.base, #t~ret1207.offset;
    havoc #t~ret1207.base, #t~ret1207.offset;
    ~ldvarg12~760.base, ~ldvarg12~760.offset := ~tmp___3~760.base, ~tmp___3~760.offset;
    call #t~ret1208.base, #t~ret1208.offset := ldv_zalloc(232);
    ~tmp___4~760.base, ~tmp___4~760.offset := #t~ret1208.base, #t~ret1208.offset;
    havoc #t~ret1208.base, #t~ret1208.offset;
    ~ldvarg16~760.base, ~ldvarg16~760.offset := ~tmp___4~760.base, ~tmp___4~760.offset;
    call #t~ret1209 := __VERIFIER_nondet_u32();
    ~tmp___5~760 := #t~ret1209;
    havoc #t~ret1209;
    ~ldvarg15~760 := ~tmp___5~760;
    call #t~ret1210 := __VERIFIER_nondet_u32();
    ~tmp___6~760 := #t~ret1210;
    havoc #t~ret1210;
    ~ldvarg21~760 := ~tmp___6~760;
    call #t~ret1211 := __VERIFIER_nondet_u16();
    ~tmp___7~760 := #t~ret1211;
    havoc #t~ret1211;
    ~ldvarg14~760 := ~tmp___7~760;
    call #t~ret1212.base, #t~ret1212.offset := ldv_zalloc(10);
    ~tmp___8~760.base, ~tmp___8~760.offset := #t~ret1212.base, #t~ret1212.offset;
    havoc #t~ret1212.base, #t~ret1212.offset;
    ~ldvarg13~760.base, ~ldvarg13~760.offset := ~tmp___8~760.base, ~tmp___8~760.offset;
    ~tmp___9~760 := #t~nondet1213;
    havoc #t~nondet1213;
    ~ldvarg19~760 := ~tmp___9~760;
    call ldv_initialize();
    call #t~memset1214.base, #t~memset1214.offset := #Ultimate.C_memset(~#ldvarg5~760.base, ~#ldvarg5~760.offset, 0, 4);
    havoc #t~memset1214.base, #t~memset1214.offset;
    call #t~memset1215.base, #t~memset1215.offset := #Ultimate.C_memset(~#ldvarg17~760.base, ~#ldvarg17~760.offset, 0, 8);
    havoc #t~memset1215.base, #t~memset1215.offset;
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_state_variable_9 := 0;
    ~ldv_state_variable_2 := 1;
    ~ldv_state_variable_8 := 0;
    ~ldv_state_variable_1 := 1;
    ~ldv_state_variable_4 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_10 := 0;
    ~ldv_state_variable_5 := 0;
    assume -2147483648 <= #t~nondet1216 && #t~nondet1216 <= 2147483647;
    ~tmp___10~760 := #t~nondet1216;
    havoc #t~nondet1216;
    #t~switch1217 := ~tmp___10~760 == 0;
    assume !#t~switch1217;
    #t~switch1217 := #t~switch1217 || ~tmp___10~760 == 1;
    assume !#t~switch1217;
    #t~switch1217 := #t~switch1217 || ~tmp___10~760 == 2;
    assume !#t~switch1217;
    #t~switch1217 := #t~switch1217 || ~tmp___10~760 == 3;
    assume !#t~switch1217;
    #t~switch1217 := #t~switch1217 || ~tmp___10~760 == 4;
    assume !#t~switch1217;
    #t~switch1217 := #t~switch1217 || ~tmp___10~760 == 5;
    assume !#t~switch1217;
    #t~switch1217 := #t~switch1217 || ~tmp___10~760 == 6;
    assume !#t~switch1217;
    #t~switch1217 := #t~switch1217 || ~tmp___10~760 == 7;
    assume !#t~switch1217;
    #t~switch1217 := #t~switch1217 || ~tmp___10~760 == 8;
    assume #t~switch1217;
    assume ~ldv_state_variable_0 != 0;
    assume -2147483648 <= #t~nondet1224 && #t~nondet1224 <= 2147483647;
    ~tmp___12~760 := #t~nondet1224;
    havoc #t~nondet1224;
    #t~switch1225 := ~tmp___12~760 == 0;
    assume !#t~switch1225;
    #t~switch1225 := #t~switch1225 || ~tmp___12~760 == 1;
    assume #t~switch1225;
    assume ~ldv_state_variable_0 == 1;
    call #t~ret1226 := rtl8180_driver_init();
    assume -2147483648 <= #t~ret1226 && #t~ret1226 <= 2147483647;
    ~ldv_retval_3 := #t~ret1226;
    havoc #t~ret1226;
    assume !(~ldv_retval_3 == 0);
    assume ~ldv_retval_3 != 0;
    ~ldv_state_variable_0 := 2;
    call ldv_check_final_state();
    return;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_9, ~ldv_state_variable_2, ~ldv_state_variable_8, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_10, ~ldv_state_variable_5, ~ldv_retval_2, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_3, ~ldv_retval_4, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~last_index, ~sa2400_rf_ops_group0.base, ~sa2400_rf_ops_group0.offset, ~rtl8225z2_ops_group0.base, ~rtl8225z2_ops_group0.offset, ~rtl8180_ops_group0.base, ~rtl8180_ops_group0.offset, ~rtl8180_ops_group1.base, ~rtl8180_ops_group1.offset, ~max2820_rf_ops_group0.base, ~max2820_rf_ops_group0.offset, ~grf5101_rf_ops_group0.base, ~grf5101_rf_ops_group0.offset, ~rtl8225_ops_group0.base, ~rtl8225_ops_group0.offset, ~rtl8180_driver_group0.base, ~rtl8180_driver_group0.offset, ~rtl8225se_ops_group0.base, ~rtl8225se_ops_group0.offset, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~LDV_IN_INTERRUPT, ~ldv_irq_1_0, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset;

implementation ldv_initialize() returns (){
  loc10:
    call ldv_set_init(~LDV_SKBS.base, ~LDV_SKBS.offset);
    assume true;
    return;
}

procedure ldv_initialize() returns ();
modifies ~last_index;

implementation rtl8180_driver_init() returns (#res : int){
    var #t~nondet1180.base : int, #t~nondet1180.offset : int;
    var #t~ret1181 : int;
    var ~tmp~700 : int;

  loc11:
    havoc ~tmp~700;
    call #t~nondet1180.base, #t~nondet1180.offset := #Ultimate.alloc(12);
    call #t~ret1181 := __pci_register_driver(~#rtl8180_driver.base, ~#rtl8180_driver.offset, ~#__this_module.base, ~#__this_module.offset, #t~nondet1180.base, #t~nondet1180.offset);
    assume -2147483648 <= #t~ret1181 && #t~ret1181 <= 2147483647;
    ~tmp~700 := #t~ret1181;
    havoc #t~nondet1180.base, #t~nondet1180.offset;
    havoc #t~ret1181;
    #res := ~tmp~700;
    assume true;
    return;
}

procedure rtl8180_driver_init() returns (#res : int);
modifies #valid, #length;

implementation ldv_set_init(#in~set.base : int, #in~set.offset : int) returns (){
    var ~set.base : int, ~set.offset : int;

  loc12:
    ~set.base, ~set.offset := #in~set.base, #in~set.offset;
    ~set.base, ~set.offset := ~#set_impl.base, ~#set_impl.offset;
    ~last_index := 0;
    assume true;
    return;
}

procedure ldv_set_init(#in~set.base : int, #in~set.offset : int) returns ();
modifies ~last_index;

procedure ieee80211_frequency_to_channel(#in~1248 : int) returns (#res : int);
modifies ;

procedure msleep(#in~229 : int) returns ();
modifies ;

procedure pci_unregister_driver(#in~216.base : int, #in~216.offset : int) returns ();
modifies ;

procedure pci_release_regions(#in~212.base : int, #in~212.offset : int) returns ();
modifies ;

procedure cancel_delayed_work_sync(#in~40.base : int, #in~40.offset : int) returns (#res : ~bool);
modifies ;

procedure ldv_bind_8() returns (#res : int);
modifies ;

procedure ldv_disconnect_5() returns (#res : int);
modifies ;

procedure ldv_bind_7() returns (#res : int);
modifies ;

procedure ldv_disconnect_4() returns (#res : int);
modifies ;

procedure ldv_bind_6() returns (#res : int);
modifies ;

procedure ldv_disconnect_3() returns (#res : int);
modifies ;

procedure ldv_bind_5() returns (#res : int);
modifies ;

procedure ldv_bind_4() returns (#res : int);
modifies ;

procedure ldv_disconnect_8() returns (#res : int);
modifies ;

procedure ldv_bind_3() returns (#res : int);
modifies ;

procedure ldv_disconnect_7() returns (#res : int);
modifies ;

procedure ldv_disconnect_6() returns (#res : int);
modifies ;

procedure free_irq(#in~198 : int, #in~199.base : int, #in~199.offset : int) returns ();
modifies ;

procedure usleep_range(#in~1545 : int, #in~1546 : int) returns ();
modifies ;

procedure dma_set_mask(#in~135.base : int, #in~135.offset : int, #in~136 : int) returns (#res : int);
modifies ;

procedure ieee80211_tx_status_irqsafe(#in~284.base : int, #in~284.offset : int, #in~285.base : int, #in~285.offset : int) returns ();
modifies ;

procedure ieee80211_generic_frame_duration(#in~299.base : int, #in~299.offset : int, #in~300.base : int, #in~300.offset : int, #in~301 : int, #in~302 : int, #in~303.base : int, #in~303.offset : int) returns (#res : ~__le16);
modifies ;

procedure ldv_release_7() returns (#res : int);
modifies ;

procedure ldv_release_8() returns (#res : int);
modifies ;

procedure ldv_release_5() returns (#res : int);
modifies ;

procedure ldv_release_6() returns (#res : int);
modifies ;

procedure ldv_release_3() returns (#res : int);
modifies ;

procedure __memcpy(#in~6.base : int, #in~6.offset : int, #in~7.base : int, #in~7.offset : int, #in~8 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure queue_delayed_work_on(#in~36 : int, #in~37.base : int, #in~37.offset : int, #in~38.base : int, #in~38.offset : int, #in~39 : int) returns (#res : ~bool);
modifies ;

procedure ldv_release_4() returns (#res : int);
modifies ;

procedure ieee80211_rts_duration(#in~291.base : int, #in~291.offset : int, #in~292.base : int, #in~292.offset : int, #in~293 : int, #in~294.base : int, #in~294.offset : int) returns (#res : ~__le16);
modifies ;

procedure iowrite16(#in~50 : int, #in~51.base : int, #in~51.offset : int) returns ();
modifies ;

procedure __VERIFIER_nondet_uint() returns (#res : int);
modifies ;

procedure ldv_start_3() returns (#res : int);
modifies ;

procedure ldv_start_5() returns (#res : int);
modifies ;

procedure ldv_start_4() returns (#res : int);
modifies ;

procedure iowrite8(#in~48 : int, #in~49.base : int, #in~49.offset : int) returns ();
modifies ;

procedure ldv_start_7() returns (#res : int);
modifies ;

procedure ldv_start_6() returns (#res : int);
modifies ;

procedure ldv_start_8() returns (#res : int);
modifies ;

procedure ioread32(#in~47.base : int, #in~47.offset : int) returns (#res : int);
modifies ;

procedure ieee80211_unregister_hw(#in~280.base : int, #in~280.offset : int) returns ();
modifies ;

procedure debug_dma_unmap_page(#in~84.base : int, #in~84.offset : int, #in~85 : int, #in~86 : int, #in~87 : int, #in~88 : int) returns ();
modifies ;

procedure debug_dma_alloc_coherent(#in~89.base : int, #in~89.offset : int, #in~90 : int, #in~91 : int, #in~92.base : int, #in~92.offset : int) returns ();
modifies ;

procedure usecs_to_jiffies(#in~25 : int) returns (#res : int);
modifies ;

procedure pci_set_master(#in~202.base : int, #in~202.offset : int) returns ();
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure iowrite32(#in~52 : int, #in~53.base : int, #in~53.offset : int) returns ();
modifies ;

procedure dma_supported(#in~133.base : int, #in~133.offset : int, #in~134 : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_u32() returns (#res : ~u32);
modifies ;

procedure _raw_spin_unlock(#in~22.base : int, #in~22.offset : int) returns ();
modifies ;

procedure debug_dma_mapping_error(#in~82.base : int, #in~82.offset : int, #in~83 : int) returns ();
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure printk(#in~0.base : int, #in~0.offset : int) returns (#res : int);
modifies ;

procedure calloc(#in~nmemb : int, #in~size : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure dev_err(#in~67.base : int, #in~67.offset : int, #in~68.base : int, #in~68.offset : int) returns (#res : int);
modifies ;

procedure queue_work_on(#in~33 : int, #in~34.base : int, #in~34.offset : int, #in~35.base : int, #in~35.offset : int) returns (#res : ~bool);
modifies ;

procedure ieee80211_alloc_hw(#in~277 : int, #in~278.base : int, #in~278.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure _raw_spin_lock_irqsave(#in~21.base : int, #in~21.offset : int) returns (#res : int);
modifies ;

procedure ieee80211_queue_stopped(#in~308.base : int, #in~308.offset : int, #in~309 : int) returns (#res : int);
modifies ;

procedure lockdep_init_map(#in~13.base : int, #in~13.offset : int, #in~14.base : int, #in~14.offset : int, #in~15.base : int, #in~15.offset : int, #in~16 : int) returns ();
modifies ;

procedure get_random_bytes(#in~59.base : int, #in~59.offset : int, #in~60 : int) returns ();
modifies ;

procedure debug_dma_free_coherent(#in~93.base : int, #in~93.offset : int, #in~94 : int, #in~95.base : int, #in~95.offset : int, #in~96 : int) returns ();
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure pci_save_state(#in~204.base : int, #in~204.offset : int) returns (#res : int);
modifies ;

procedure ieee80211_wake_queue(#in~304.base : int, #in~304.offset : int, #in~305 : int) returns ();
modifies ;

procedure __raw_spin_lock_init(#in~17.base : int, #in~17.offset : int, #in~18.base : int, #in~18.offset : int, #in~19.base : int, #in~19.offset : int) returns ();
modifies ;

procedure ieee80211_rx_irqsafe(#in~282.base : int, #in~282.offset : int, #in~283.base : int, #in~283.offset : int) returns ();
modifies ;

procedure ieee80211_register_hw(#in~279.base : int, #in~279.offset : int) returns (#res : int);
modifies ;

procedure _dev_info(#in~69.base : int, #in~69.offset : int, #in~70.base : int, #in~70.offset : int) returns (#res : int);
modifies ;

procedure pci_restore_state(#in~205.base : int, #in~205.offset : int) returns ();
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure __phys_addr(#in~5 : int) returns (#res : int);
modifies ;

procedure pci_try_set_mwi(#in~203.base : int, #in~203.offset : int) returns (#res : int);
modifies ;

procedure pci_choose_state(#in~208.base : int, #in~208.offset : int, #in~209.event : int) returns (#res : ~pci_power_t);
modifies ;

procedure ieee80211_beacon_get_tim(#in~286.base : int, #in~286.offset : int, #in~287.base : int, #in~287.offset : int, #in~288.base : int, #in~288.offset : int, #in~289.base : int, #in~289.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure pci_iomap(#in~56.base : int, #in~56.offset : int, #in~57 : int, #in~58 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];

procedure pci_disable_device(#in~201.base : int, #in~201.offset : int) returns ();
modifies ;

procedure __VERIFIER_error() returns ();
modifies ;

procedure net_ratelimit() returns (#res : int);
modifies ;

procedure eeprom_93cx6_read(#in~239.base : int, #in~239.offset : int, #in~240 : int, #in~241.base : int, #in~241.offset : int) returns ();
modifies ;

procedure __VERIFIER_nondet_u16() returns (#res : ~u16);
modifies ;

procedure pci_request_regions(#in~210.base : int, #in~210.offset : int, #in~211.base : int, #in~211.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_assume(#in~expression : int) returns ();
modifies ;

procedure ieee80211_free_hw(#in~281.base : int, #in~281.offset : int) returns ();
modifies ;

procedure pci_enable_device(#in~200.base : int, #in~200.offset : int) returns (#res : int);
modifies ;

procedure __const_udelay(#in~228 : int) returns ();
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];

procedure ioread16(#in~46.base : int, #in~46.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_irqrestore(#in~23.base : int, #in~23.offset : int, #in~24 : int) returns ();
modifies ;

procedure memset(#in~9.base : int, #in~9.offset : int, #in~10 : int, #in~11 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ieee80211_stop_queue(#in~306.base : int, #in~306.offset : int, #in~307 : int) returns ();
modifies ;

procedure ioread8(#in~45.base : int, #in~45.offset : int) returns (#res : int);
modifies ;

procedure init_timer_key(#in~26.base : int, #in~26.offset : int, #in~27 : int, #in~28.base : int, #in~28.offset : int, #in~29.base : int, #in~29.offset : int) returns ();
modifies ;

procedure __init_work(#in~31.base : int, #in~31.offset : int, #in~32 : int) returns ();
modifies ;

procedure pci_iounmap(#in~54.base : int, #in~54.offset : int, #in~55.base : int, #in~55.offset : int) returns ();
modifies ;

procedure debug_dma_map_page(#in~75.base : int, #in~75.offset : int, #in~76.base : int, #in~76.offset : int, #in~77 : int, #in~78 : int, #in~79 : int, #in~80 : int, #in~81 : int) returns ();
modifies ;

procedure pci_set_power_state(#in~206.base : int, #in~206.offset : int, #in~207 : int) returns (#res : int);
modifies ;

procedure warn_slowpath_null(#in~3.base : int, #in~3.offset : int, #in~4 : int) returns ();
modifies ;

procedure eeprom_93cx6_multiread(#in~242.base : int, #in~242.offset : int, #in~243 : int, #in~244.base : int, #in~244.offset : int, #in~245 : int) returns ();
modifies ;

procedure skb_put(#in~184.base : int, #in~184.offset : int, #in~185 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __pci_register_driver(#in~213.base : int, #in~213.offset : int, #in~214.base : int, #in~214.offset : int, #in~215.base : int, #in~215.offset : int) returns (#res : int);
modifies ;

procedure delayed_work_timer_fn(#in~30 : int) returns ();
modifies ;

procedure _raw_spin_lock(#in~20.base : int, #in~20.offset : int) returns ();
modifies ;

procedure ieee80211_ctstoself_duration(#in~295.base : int, #in~295.offset : int, #in~296.base : int, #in~296.offset : int, #in~297 : int, #in~298.base : int, #in~298.offset : int) returns (#res : ~__le16);
modifies ;

procedure request_threaded_irq(#in~191 : int, #in~192.base : int, #in~192.offset : int, #in~193.base : int, #in~193.offset : int, #in~194 : int, #in~195.base : int, #in~195.offset : int, #in~196.base : int, #in~196.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_u8() returns (#res : ~u8);
modifies ;


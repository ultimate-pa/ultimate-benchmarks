type STRUCT~perf_event;
type STRUCT~workqueue_struct;
type STRUCT~wake_irq;
type STRUCT~dev_pm_qos;
type STRUCT~uprobe;
type STRUCT~return_instance;
type STRUCT~xol_area;
type STRUCT~slab;
type STRUCT~kmem_cache;
type STRUCT~mem_cgroup;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~sem_undo_list;
type STRUCT~pid_namespace;
type STRUCT~seccomp_filter;
type STRUCT~assoc_array_ptr;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~cgroup_subsys;
type STRUCT~tty_struct;
type STRUCT~autogroup;
type STRUCT~tty_audit_buf;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~sched_class;
type STRUCT~task_group;
type STRUCT~nameidata;
type STRUCT~fs_struct;
type STRUCT~files_struct;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~bio_list;
type STRUCT~blk_plug;
type STRUCT~reclaim_state;
type STRUCT~backing_dev_info;
type STRUCT~io_context;
type STRUCT~robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~numa_group;
type STRUCT~kernfs_open_node;
type STRUCT~kernfs_iattrs;
type STRUCT~sock;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~tracepoint;
type STRUCT~trace_event_call;
type STRUCT~trace_enum_map;
type STRUCT~pinctrl;
type STRUCT~pinctrl_state;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~cma;
type STRUCT~iommu_group;
type STRUCT~hotplug_slot;
type STRUCT~pci_sriov;
type STRUCT~proc_dir_entry;
type STRUCT~pcie_link_state;
type STRUCT~pci_vpd;
type STRUCT~pci_ats;
type STRUCT~msi_controller;
type ENUM~i2c_slave_event;
type STRUCT~sec_path;
type STRUCT~vfsmount;
type STRUCT~writeback_control;
type STRUCT~swap_info_struct;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~posix_acl;
type STRUCT~bdi_writeback;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~kstatfs;
type STRUCT~prot_inuse;
type STRUCT~fib_rules_ops;
type STRUCT~fib_table;
type STRUCT~inet_peer_base;
type STRUCT~xt_table;
type STRUCT~dst_entry;
type STRUCT~neighbour;
type STRUCT~ipv6_devconf;
type STRUCT~rt6_info;
type STRUCT~rt6_statistics;
type STRUCT~fib6_table;
type STRUCT~sctp_mib;
type STRUCT~nf_logger;
type STRUCT~ebt_table;
type STRUCT~ip_conntrack_stat;
type STRUCT~nf_ct_event_notifier;
type STRUCT~nf_exp_event_notifier;
type STRUCT~nft_af_info;
type STRUCT~mpls_route;
type STRUCT~proc_ns_operations;
type STRUCT~net_generic;
type STRUCT~netns_ipvs;
type STRUCT~packet_type;
type STRUCT~uts_namespace;
type STRUCT~ipc_namespace;
type STRUCT~mnt_namespace;
type STRUCT~Qdisc;
type STRUCT~neigh_parms;
type STRUCT~netpoll_info;
type STRUCT~pcpu_lstats;
type STRUCT~pcpu_dstats;
type STRUCT~pcpu_vstats;
type STRUCT~iw_handler_def;
type STRUCT~iw_public_data;
type STRUCT~switchdev_ops;
type STRUCT~vlan_info;
type STRUCT~tipc_bearer;
type STRUCT~dn_dev;
type STRUCT~inet6_dev;
type STRUCT~wireless_dev;
type STRUCT~wpan_dev;
type STRUCT~mpls_dev;
type STRUCT~tcf_proto;
type STRUCT~cpu_rmap;
type STRUCT~garp_port;
type STRUCT~mrp_port;
type STRUCT~rtnl_link_ops;
type STRUCT~ip_mc_list;
type STRUCT~v4l2_ctrl_handler;
type STRUCT~vb2_queue;
type STRUCT~v4l2_m2m_ctx;
type STRUCT~v4l2_subdev_fh;
type STRUCT~regulator_bulk_data;
type ~__u8 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__s64 = int;
type ~__u64 = int;
type ~s8 = int;
type ~u8 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~oom_flags_t = int;
type ~pteval_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~cputime_t = int;
type ~kernel_ulong_t = int;
type ~pci_power_t = int;
type ~pci_channel_state_t = int;
type ~pci_dev_flags_t = int;
type ~pci_bus_flags_t = int;
type ~pci_ers_result_t = int;
type ~__kernel_sa_family_t = int;
type ~sk_buff_data_t = int;
type ~qsize_t = int;
type ~ldv_func_ret_type___4 = int;
type ~ldv_func_ret_type___5 = int;
type ~ldv_func_ret_type___6 = int;
type ~s16 = int;
type ~__kernel_suseconds_t = ~__kernel_long_t;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_clock_t = ~__kernel_long_t;
type ~__be16 = ~__u16;
type ~__be32 = ~__u32;
type ~__wsum = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint8_t = ~__u8;
type ~uint32_t = ~__u32;
type ~uint64_t = ~__u64;
type ~dma_addr_t = ~u64;
type ~phys_addr_t = ~u64;
type ~resource_size_t = ~phys_addr_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~phandle = ~u32;
type ~v4l2_std_id = ~__u64;
type ~sa_family_t = ~__kernel_sa_family_t;
type ~netdev_features_t = ~u64;
type ~projid_t = ~__kernel_uid32_t;
type ~dmx_output_t = int;
type ~dmx_input_t = int;
type ~dmx_pes_type_t = int;
type ~dmx_source_t = int;
type ~compat_time_t = ~s32;
type ~compat_long_t = ~s32;
type ~compat_uptr_t = ~u32;
type ~phy_interface_t = int;
type ~netdev_tx_t = int;
type ~rx_handler_result_t = int;
type ~ldv_func_ret_type = ~bool;
type ~irqreturn_t = int;
const #funAddr~saa7164_work_enchandler.base : int;
const #funAddr~saa7164_work_enchandler.offset : int;
const #funAddr~saa7164_work_vbihandler.base : int;
const #funAddr~saa7164_work_vbihandler.offset : int;
const #funAddr~saa7164_proc_show.base : int;
const #funAddr~saa7164_proc_show.offset : int;
const #funAddr~seq_lseek.base : int;
const #funAddr~seq_lseek.offset : int;
const #funAddr~seq_read.base : int;
const #funAddr~seq_read.offset : int;
const #funAddr~saa7164_proc_open.base : int;
const #funAddr~saa7164_proc_open.offset : int;
const #funAddr~single_release.base : int;
const #funAddr~single_release.offset : int;
const #funAddr~saa7164_irq.base : int;
const #funAddr~saa7164_irq.offset : int;
const #funAddr~saa7164_work_cmdhandler.base : int;
const #funAddr~saa7164_work_cmdhandler.offset : int;
const #funAddr~saa7164_thread_function.base : int;
const #funAddr~saa7164_thread_function.offset : int;
const #funAddr~saa7164_initdev.base : int;
const #funAddr~saa7164_initdev.offset : int;
const #funAddr~saa7164_finidev.base : int;
const #funAddr~saa7164_finidev.offset : int;
const #funAddr~i2c_xfer.base : int;
const #funAddr~i2c_xfer.offset : int;
const #funAddr~saa7164_functionality.base : int;
const #funAddr~saa7164_functionality.offset : int;
const #funAddr~saa7164_dvb_start_feed.base : int;
const #funAddr~saa7164_dvb_start_feed.offset : int;
const #funAddr~saa7164_dvb_stop_feed.base : int;
const #funAddr~saa7164_dvb_stop_feed.offset : int;
const #funAddr~fops_read.base : int;
const #funAddr~fops_read.offset : int;
const #funAddr~fops_poll.base : int;
const #funAddr~fops_poll.offset : int;
const #funAddr~video_ioctl2.base : int;
const #funAddr~video_ioctl2.offset : int;
const #funAddr~fops_open.base : int;
const #funAddr~fops_open.offset : int;
const #funAddr~fops_release.base : int;
const #funAddr~fops_release.offset : int;
const #funAddr~vidioc_querycap.base : int;
const #funAddr~vidioc_querycap.offset : int;
const #funAddr~vidioc_enum_fmt_vid_cap.base : int;
const #funAddr~vidioc_enum_fmt_vid_cap.offset : int;
const #funAddr~vidioc_g_fmt_vid_cap.base : int;
const #funAddr~vidioc_g_fmt_vid_cap.offset : int;
const #funAddr~vidioc_s_fmt_vid_cap.base : int;
const #funAddr~vidioc_s_fmt_vid_cap.offset : int;
const #funAddr~vidioc_try_fmt_vid_cap.base : int;
const #funAddr~vidioc_try_fmt_vid_cap.offset : int;
const #funAddr~vidioc_g_std.base : int;
const #funAddr~vidioc_g_std.offset : int;
const #funAddr~vidioc_s_std.base : int;
const #funAddr~vidioc_s_std.offset : int;
const #funAddr~vidioc_enum_input.base : int;
const #funAddr~vidioc_enum_input.offset : int;
const #funAddr~vidioc_g_input.base : int;
const #funAddr~vidioc_g_input.offset : int;
const #funAddr~vidioc_s_input.base : int;
const #funAddr~vidioc_s_input.offset : int;
const #funAddr~vidioc_queryctrl.base : int;
const #funAddr~vidioc_queryctrl.offset : int;
const #funAddr~vidioc_g_ctrl.base : int;
const #funAddr~vidioc_g_ctrl.offset : int;
const #funAddr~vidioc_s_ctrl.base : int;
const #funAddr~vidioc_s_ctrl.offset : int;
const #funAddr~vidioc_g_ext_ctrls.base : int;
const #funAddr~vidioc_g_ext_ctrls.offset : int;
const #funAddr~vidioc_s_ext_ctrls.base : int;
const #funAddr~vidioc_s_ext_ctrls.offset : int;
const #funAddr~vidioc_try_ext_ctrls.base : int;
const #funAddr~vidioc_try_ext_ctrls.offset : int;
const #funAddr~vidioc_g_tuner.base : int;
const #funAddr~vidioc_g_tuner.offset : int;
const #funAddr~vidioc_s_tuner.base : int;
const #funAddr~vidioc_s_tuner.offset : int;
const #funAddr~vidioc_g_frequency.base : int;
const #funAddr~vidioc_g_frequency.offset : int;
const #funAddr~vidioc_s_frequency.base : int;
const #funAddr~vidioc_s_frequency.offset : int;
const #funAddr~video_device_release.base : int;
const #funAddr~video_device_release.offset : int;
const #funAddr~fops_read___0.base : int;
const #funAddr~fops_read___0.offset : int;
const #funAddr~fops_poll___0.base : int;
const #funAddr~fops_poll___0.offset : int;
const #funAddr~fops_open___0.base : int;
const #funAddr~fops_open___0.offset : int;
const #funAddr~fops_release___0.base : int;
const #funAddr~fops_release___0.offset : int;
const #funAddr~vidioc_querycap___0.base : int;
const #funAddr~vidioc_querycap___0.offset : int;
const #funAddr~vidioc_enum_fmt_vid_cap___0.base : int;
const #funAddr~vidioc_enum_fmt_vid_cap___0.offset : int;
const #funAddr~vidioc_g_fmt_vid_cap___0.base : int;
const #funAddr~vidioc_g_fmt_vid_cap___0.offset : int;
const #funAddr~saa7164_vbi_fmt.base : int;
const #funAddr~saa7164_vbi_fmt.offset : int;
const #funAddr~vidioc_s_fmt_vid_cap___0.base : int;
const #funAddr~vidioc_s_fmt_vid_cap___0.offset : int;
const #funAddr~vidioc_try_fmt_vid_cap___0.base : int;
const #funAddr~vidioc_try_fmt_vid_cap___0.offset : int;
const #funAddr~vidioc_g_std___0.base : int;
const #funAddr~vidioc_g_std___0.offset : int;
const #funAddr~vidioc_s_std___0.base : int;
const #funAddr~vidioc_s_std___0.offset : int;
const #funAddr~vidioc_enum_input___0.base : int;
const #funAddr~vidioc_enum_input___0.offset : int;
const #funAddr~vidioc_g_input___0.base : int;
const #funAddr~vidioc_g_input___0.offset : int;
const #funAddr~vidioc_s_input___0.base : int;
const #funAddr~vidioc_s_input___0.offset : int;
const #funAddr~vidioc_queryctrl___0.base : int;
const #funAddr~vidioc_queryctrl___0.offset : int;
const #funAddr~vidioc_g_ctrl___0.base : int;
const #funAddr~vidioc_g_ctrl___0.offset : int;
const #funAddr~vidioc_s_ctrl___0.base : int;
const #funAddr~vidioc_s_ctrl___0.offset : int;
const #funAddr~vidioc_g_ext_ctrls___0.base : int;
const #funAddr~vidioc_g_ext_ctrls___0.offset : int;
const #funAddr~vidioc_s_ext_ctrls___0.base : int;
const #funAddr~vidioc_s_ext_ctrls___0.offset : int;
const #funAddr~vidioc_try_ext_ctrls___0.base : int;
const #funAddr~vidioc_try_ext_ctrls___0.offset : int;
const #funAddr~vidioc_g_tuner___0.base : int;
const #funAddr~vidioc_g_tuner___0.offset : int;
const #funAddr~vidioc_s_tuner___0.base : int;
const #funAddr~vidioc_s_tuner___0.offset : int;
const #funAddr~vidioc_g_frequency___0.base : int;
const #funAddr~vidioc_g_frequency___0.offset : int;
const #funAddr~vidioc_s_frequency___0.base : int;
const #funAddr~vidioc_s_frequency___0.offset : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~uprobe_task_state~UTASK_RUNNING : int;
const ~uprobe_task_state~UTASK_SSTEP : int;
const ~uprobe_task_state~UTASK_SSTEP_ACK : int;
const ~uprobe_task_state~UTASK_SSTEP_TRAPPED : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~probe_type~PROBE_DEFAULT_STRATEGY : int;
const ~probe_type~PROBE_PREFER_ASYNCHRONOUS : int;
const ~probe_type~PROBE_FORCE_SYNCHRONOUS : int;
const ~pci_channel_state~pci_channel_io_normal : int;
const ~pci_channel_state~pci_channel_io_frozen : int;
const ~pci_channel_state~pci_channel_io_perm_failure : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~fwnode_type~FWNODE_INVALID : int;
const ~fwnode_type~FWNODE_OF : int;
const ~fwnode_type~FWNODE_ACPI : int;
const ~fwnode_type~FWNODE_PDATA : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OVERLAY : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_OUTPUT : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_SDR_CAPTURE : int;
const ~v4l2_buf_type~V4L2_BUF_TYPE_PRIVATE : int;
const ~v4l2_priority~V4L2_PRIORITY_UNSET : int;
const ~v4l2_priority~V4L2_PRIORITY_BACKGROUND : int;
const ~v4l2_priority~V4L2_PRIORITY_INTERACTIVE : int;
const ~v4l2_priority~V4L2_PRIORITY_RECORD : int;
const ~v4l2_priority~V4L2_PRIORITY_DEFAULT : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~dmx_output~DMX_OUT_DECODER : int;
const ~dmx_output~DMX_OUT_TAP : int;
const ~dmx_output~DMX_OUT_TS_TAP : int;
const ~dmx_output~DMX_OUT_TSDEMUX_TAP : int;
const ~dmx_input~DMX_IN_FRONTEND : int;
const ~dmx_input~DMX_IN_DVR : int;
const ~dmx_ts_pes~DMX_PES_AUDIO0 : int;
const ~dmx_ts_pes~DMX_PES_VIDEO0 : int;
const ~dmx_ts_pes~DMX_PES_TELETEXT0 : int;
const ~dmx_ts_pes~DMX_PES_SUBTITLE0 : int;
const ~dmx_ts_pes~DMX_PES_PCR0 : int;
const ~dmx_ts_pes~DMX_PES_AUDIO1 : int;
const ~dmx_ts_pes~DMX_PES_VIDEO1 : int;
const ~dmx_ts_pes~DMX_PES_TELETEXT1 : int;
const ~dmx_ts_pes~DMX_PES_SUBTITLE1 : int;
const ~dmx_ts_pes~DMX_PES_PCR1 : int;
const ~dmx_ts_pes~DMX_PES_AUDIO2 : int;
const ~dmx_ts_pes~DMX_PES_VIDEO2 : int;
const ~dmx_ts_pes~DMX_PES_TELETEXT2 : int;
const ~dmx_ts_pes~DMX_PES_SUBTITLE2 : int;
const ~dmx_ts_pes~DMX_PES_PCR2 : int;
const ~dmx_ts_pes~DMX_PES_AUDIO3 : int;
const ~dmx_ts_pes~DMX_PES_VIDEO3 : int;
const ~dmx_ts_pes~DMX_PES_TELETEXT3 : int;
const ~dmx_ts_pes~DMX_PES_SUBTITLE3 : int;
const ~dmx_ts_pes~DMX_PES_PCR3 : int;
const ~dmx_ts_pes~DMX_PES_OTHER : int;
const ~dmx_source~DMX_SOURCE_FRONT0 : int;
const ~dmx_source~DMX_SOURCE_FRONT1 : int;
const ~dmx_source~DMX_SOURCE_FRONT2 : int;
const ~dmx_source~DMX_SOURCE_FRONT3 : int;
const ~dmx_source~DMX_SOURCE_DVR0 : int;
const ~dmx_source~DMX_SOURCE_DVR1 : int;
const ~dmx_source~DMX_SOURCE_DVR2 : int;
const ~dmx_source~DMX_SOURCE_DVR3 : int;
const ~dmx_success~DMX_OK : int;
const ~dmx_success~DMX_LENGTH_ERROR : int;
const ~dmx_success~DMX_OVERRUN_ERROR : int;
const ~dmx_success~DMX_CRC_ERROR : int;
const ~dmx_success~DMX_FRAME_ERROR : int;
const ~dmx_success~DMX_FIFO_ERROR : int;
const ~dmx_success~DMX_MISSED_ERROR : int;
const ~dmx_frontend_source~DMX_MEMORY_FE : int;
const ~dmx_frontend_source~DMX_FRONTEND_0 : int;
const ~dmx_frontend_source~DMX_FRONTEND_1 : int;
const ~dmx_frontend_source~DMX_FRONTEND_2 : int;
const ~dmx_frontend_source~DMX_FRONTEND_3 : int;
const ~dmx_frontend_source~DMX_STREAM_0 : int;
const ~dmx_frontend_source~DMX_STREAM_1 : int;
const ~dmx_frontend_source~DMX_STREAM_2 : int;
const ~dmx_frontend_source~DMX_STREAM_3 : int;
const ~dmxdev_type~DMXDEV_TYPE_NONE : int;
const ~dmxdev_type~DMXDEV_TYPE_SEC : int;
const ~dmxdev_type~DMXDEV_TYPE_PES : int;
const ~dmxdev_state~DMXDEV_STATE_FREE : int;
const ~dmxdev_state~DMXDEV_STATE_ALLOCATED : int;
const ~dmxdev_state~DMXDEV_STATE_SET : int;
const ~dmxdev_state~DMXDEV_STATE_GO : int;
const ~dmxdev_state~DMXDEV_STATE_DONE : int;
const ~dmxdev_state~DMXDEV_STATE_TIMEDOUT : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ON : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_OFF : int;
const ~ldv_29775~PHY_INTERFACE_MODE_NA : int;
const ~ldv_29775~PHY_INTERFACE_MODE_MII : int;
const ~ldv_29775~PHY_INTERFACE_MODE_GMII : int;
const ~ldv_29775~PHY_INTERFACE_MODE_SGMII : int;
const ~ldv_29775~PHY_INTERFACE_MODE_TBI : int;
const ~ldv_29775~PHY_INTERFACE_MODE_REVMII : int;
const ~ldv_29775~PHY_INTERFACE_MODE_RMII : int;
const ~ldv_29775~PHY_INTERFACE_MODE_RGMII : int;
const ~ldv_29775~PHY_INTERFACE_MODE_RGMII_ID : int;
const ~ldv_29775~PHY_INTERFACE_MODE_RGMII_RXID : int;
const ~ldv_29775~PHY_INTERFACE_MODE_RGMII_TXID : int;
const ~ldv_29775~PHY_INTERFACE_MODE_RTBI : int;
const ~ldv_29775~PHY_INTERFACE_MODE_SMII : int;
const ~ldv_29775~PHY_INTERFACE_MODE_XGMII : int;
const ~ldv_29775~PHY_INTERFACE_MODE_MOCA : int;
const ~ldv_29775~PHY_INTERFACE_MODE_QSGMII : int;
const ~ldv_29775~PHY_INTERFACE_MODE_MAX : int;
const ~ldv_29829~MDIOBUS_ALLOCATED : int;
const ~ldv_29829~MDIOBUS_REGISTERED : int;
const ~ldv_29829~MDIOBUS_UNREGISTERED : int;
const ~ldv_29829~MDIOBUS_RELEASED : int;
const ~phy_state~PHY_DOWN : int;
const ~phy_state~PHY_STARTING : int;
const ~phy_state~PHY_READY : int;
const ~phy_state~PHY_PENDING : int;
const ~phy_state~PHY_UP : int;
const ~phy_state~PHY_AN : int;
const ~phy_state~PHY_RUNNING : int;
const ~phy_state~PHY_NOLINK : int;
const ~phy_state~PHY_FORCING : int;
const ~phy_state~PHY_CHANGELINK : int;
const ~phy_state~PHY_HALTED : int;
const ~phy_state~PHY_RESUMING : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_NONE : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_DSA : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_TRAILER : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_EDSA : int;
const ~dsa_tag_protocol~DSA_TAG_PROTO_BRCM : int;
const ~netdev_tx~__NETDEV_TX_MIN : int;
const ~netdev_tx~NETDEV_TX_OK : int;
const ~netdev_tx~NETDEV_TX_BUSY : int;
const ~netdev_tx~NETDEV_TX_LOCKED : int;
const ~rx_handler_result~RX_HANDLER_CONSUMED : int;
const ~rx_handler_result~RX_HANDLER_ANOTHER : int;
const ~rx_handler_result~RX_HANDLER_EXACT : int;
const ~rx_handler_result~RX_HANDLER_PASS : int;
const ~fe_type~FE_QPSK : int;
const ~fe_type~FE_QAM : int;
const ~fe_type~FE_OFDM : int;
const ~fe_type~FE_ATSC : int;
const ~fe_caps~FE_IS_STUPID : int;
const ~fe_caps~FE_CAN_INVERSION_AUTO : int;
const ~fe_caps~FE_CAN_FEC_1_2 : int;
const ~fe_caps~FE_CAN_FEC_2_3 : int;
const ~fe_caps~FE_CAN_FEC_3_4 : int;
const ~fe_caps~FE_CAN_FEC_4_5 : int;
const ~fe_caps~FE_CAN_FEC_5_6 : int;
const ~fe_caps~FE_CAN_FEC_6_7 : int;
const ~fe_caps~FE_CAN_FEC_7_8 : int;
const ~fe_caps~FE_CAN_FEC_8_9 : int;
const ~fe_caps~FE_CAN_FEC_AUTO : int;
const ~fe_caps~FE_CAN_QPSK : int;
const ~fe_caps~FE_CAN_QAM_16 : int;
const ~fe_caps~FE_CAN_QAM_32 : int;
const ~fe_caps~FE_CAN_QAM_64 : int;
const ~fe_caps~FE_CAN_QAM_128 : int;
const ~fe_caps~FE_CAN_QAM_256 : int;
const ~fe_caps~FE_CAN_QAM_AUTO : int;
const ~fe_caps~FE_CAN_TRANSMISSION_MODE_AUTO : int;
const ~fe_caps~FE_CAN_BANDWIDTH_AUTO : int;
const ~fe_caps~FE_CAN_GUARD_INTERVAL_AUTO : int;
const ~fe_caps~FE_CAN_HIERARCHY_AUTO : int;
const ~fe_caps~FE_CAN_8VSB : int;
const ~fe_caps~FE_CAN_16VSB : int;
const ~fe_caps~FE_HAS_EXTENDED_CAPS : int;
const ~fe_caps~FE_CAN_MULTISTREAM : int;
const ~fe_caps~FE_CAN_TURBO_FEC : int;
const ~fe_caps~FE_CAN_2G_MODULATION : int;
const ~fe_caps~FE_NEEDS_BENDING : int;
const ~fe_caps~FE_CAN_RECOVER : int;
const ~fe_caps~FE_CAN_MUTE_TS : int;
const ~fe_sec_voltage~SEC_VOLTAGE_13 : int;
const ~fe_sec_voltage~SEC_VOLTAGE_18 : int;
const ~fe_sec_voltage~SEC_VOLTAGE_OFF : int;
const ~fe_sec_tone_mode~SEC_TONE_ON : int;
const ~fe_sec_tone_mode~SEC_TONE_OFF : int;
const ~fe_sec_mini_cmd~SEC_MINI_A : int;
const ~fe_sec_mini_cmd~SEC_MINI_B : int;
const ~fe_status~FE_HAS_SIGNAL : int;
const ~fe_status~FE_HAS_CARRIER : int;
const ~fe_status~FE_HAS_VITERBI : int;
const ~fe_status~FE_HAS_SYNC : int;
const ~fe_status~FE_HAS_LOCK : int;
const ~fe_status~FE_TIMEDOUT : int;
const ~fe_status~FE_REINIT : int;
const ~fe_spectral_inversion~INVERSION_OFF : int;
const ~fe_spectral_inversion~INVERSION_ON : int;
const ~fe_spectral_inversion~INVERSION_AUTO : int;
const ~fe_code_rate~FEC_NONE : int;
const ~fe_code_rate~FEC_1_2 : int;
const ~fe_code_rate~FEC_2_3 : int;
const ~fe_code_rate~FEC_3_4 : int;
const ~fe_code_rate~FEC_4_5 : int;
const ~fe_code_rate~FEC_5_6 : int;
const ~fe_code_rate~FEC_6_7 : int;
const ~fe_code_rate~FEC_7_8 : int;
const ~fe_code_rate~FEC_8_9 : int;
const ~fe_code_rate~FEC_AUTO : int;
const ~fe_code_rate~FEC_3_5 : int;
const ~fe_code_rate~FEC_9_10 : int;
const ~fe_code_rate~FEC_2_5 : int;
const ~fe_modulation~QPSK : int;
const ~fe_modulation~QAM_16 : int;
const ~fe_modulation~QAM_32 : int;
const ~fe_modulation~QAM_64 : int;
const ~fe_modulation~QAM_128 : int;
const ~fe_modulation~QAM_256 : int;
const ~fe_modulation~QAM_AUTO : int;
const ~fe_modulation~VSB_8 : int;
const ~fe_modulation~VSB_16 : int;
const ~fe_modulation~PSK_8 : int;
const ~fe_modulation~APSK_16 : int;
const ~fe_modulation~APSK_32 : int;
const ~fe_modulation~DQPSK : int;
const ~fe_modulation~QAM_4_NR : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_2K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_8K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_AUTO : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_4K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_1K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_16K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_32K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_C1 : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_C3780 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_32 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_16 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_8 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_4 : int;
const ~fe_guard_interval~GUARD_INTERVAL_AUTO : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_128 : int;
const ~fe_guard_interval~GUARD_INTERVAL_19_128 : int;
const ~fe_guard_interval~GUARD_INTERVAL_19_256 : int;
const ~fe_guard_interval~GUARD_INTERVAL_PN420 : int;
const ~fe_guard_interval~GUARD_INTERVAL_PN595 : int;
const ~fe_guard_interval~GUARD_INTERVAL_PN945 : int;
const ~fe_hierarchy~HIERARCHY_NONE : int;
const ~fe_hierarchy~HIERARCHY_1 : int;
const ~fe_hierarchy~HIERARCHY_2 : int;
const ~fe_hierarchy~HIERARCHY_4 : int;
const ~fe_hierarchy~HIERARCHY_AUTO : int;
const ~fe_interleaving~INTERLEAVING_NONE : int;
const ~fe_interleaving~INTERLEAVING_AUTO : int;
const ~fe_interleaving~INTERLEAVING_240 : int;
const ~fe_interleaving~INTERLEAVING_720 : int;
const ~fe_pilot~PILOT_ON : int;
const ~fe_pilot~PILOT_OFF : int;
const ~fe_pilot~PILOT_AUTO : int;
const ~fe_rolloff~ROLLOFF_35 : int;
const ~fe_rolloff~ROLLOFF_20 : int;
const ~fe_rolloff~ROLLOFF_25 : int;
const ~fe_rolloff~ROLLOFF_AUTO : int;
const ~fe_delivery_system~SYS_UNDEFINED : int;
const ~fe_delivery_system~SYS_DVBC_ANNEX_A : int;
const ~fe_delivery_system~SYS_DVBC_ANNEX_B : int;
const ~fe_delivery_system~SYS_DVBT : int;
const ~fe_delivery_system~SYS_DSS : int;
const ~fe_delivery_system~SYS_DVBS : int;
const ~fe_delivery_system~SYS_DVBS2 : int;
const ~fe_delivery_system~SYS_DVBH : int;
const ~fe_delivery_system~SYS_ISDBT : int;
const ~fe_delivery_system~SYS_ISDBS : int;
const ~fe_delivery_system~SYS_ISDBC : int;
const ~fe_delivery_system~SYS_ATSC : int;
const ~fe_delivery_system~SYS_ATSCMH : int;
const ~fe_delivery_system~SYS_DTMB : int;
const ~fe_delivery_system~SYS_CMMB : int;
const ~fe_delivery_system~SYS_DAB : int;
const ~fe_delivery_system~SYS_DVBT2 : int;
const ~fe_delivery_system~SYS_TURBO : int;
const ~fe_delivery_system~SYS_DVBC_ANNEX_C : int;
const ~tuner_param~DVBFE_TUNER_FREQUENCY : int;
const ~tuner_param~DVBFE_TUNER_TUNERSTEP : int;
const ~tuner_param~DVBFE_TUNER_IFFREQ : int;
const ~tuner_param~DVBFE_TUNER_BANDWIDTH : int;
const ~tuner_param~DVBFE_TUNER_REFCLOCK : int;
const ~tuner_param~DVBFE_TUNER_IQSENSE : int;
const ~tuner_param~DVBFE_TUNER_DUMMY : int;
const ~dvbfe_algo~DVBFE_ALGO_HW : int;
const ~dvbfe_algo~DVBFE_ALGO_SW : int;
const ~dvbfe_algo~DVBFE_ALGO_CUSTOM : int;
const ~dvbfe_algo~DVBFE_ALGO_RECOVERY : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_SUCCESS : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_ASLEEP : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_FAILED : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_INVALID : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_AGAIN : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_ERROR : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_CUSTOM : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_DEVNAME : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_I2C : int;
const ~v4l2_async_match_type~V4L2_ASYNC_MATCH_OF : int;
const ~v4l2_mbus_type~V4L2_MBUS_PARALLEL : int;
const ~v4l2_mbus_type~V4L2_MBUS_BT656 : int;
const ~v4l2_mbus_type~V4L2_MBUS_CSI2 : int;
const ~v4l2_subdev_ir_mode~V4L2_SUBDEV_IR_MODE_PULSE_WIDTH : int;
const ~tmBusType~NONE : int;
const ~tmBusType~TYPE_BUS_PCI : int;
const ~tmBusType~TYPE_BUS_PCIe : int;
const ~tmBusType~TYPE_BUS_USB : int;
const ~tmBusType~TYPE_BUS_I2C : int;
const ~port_t~SAA7164_MPEG_UNDEFINED : int;
const ~port_t~SAA7164_MPEG_DVB : int;
const ~port_t~SAA7164_MPEG_ENCODER : int;
const ~port_t~SAA7164_MPEG_VBI : int;
const ~saa7164_i2c_bus_nr~SAA7164_I2C_BUS_0 : int;
const ~saa7164_i2c_bus_nr~SAA7164_I2C_BUS_1 : int;
const ~saa7164_i2c_bus_nr~SAA7164_I2C_BUS_2 : int;
const ~saa7164_buffer_flags~SAA7164_BUFFER_UNDEFINED : int;
const ~saa7164_buffer_flags~SAA7164_BUFFER_FREE : int;
const ~saa7164_buffer_flags~SAA7164_BUFFER_BUSY : int;
const ~saa7164_buffer_flags~SAA7164_BUFFER_FULL : int;
const ~saa7164_unit_type~SAA7164_UNIT_UNDEFINED : int;
const ~saa7164_unit_type~SAA7164_UNIT_DIGITAL_DEMODULATOR : int;
const ~saa7164_unit_type~SAA7164_UNIT_ANALOG_DEMODULATOR : int;
const ~saa7164_unit_type~SAA7164_UNIT_TUNER : int;
const ~saa7164_unit_type~SAA7164_UNIT_EEPROM : int;
const ~saa7164_unit_type~SAA7164_UNIT_ZILOG_IRBLASTER : int;
const ~saa7164_unit_type~SAA7164_UNIT_ENCODER : int;
const ~ldv_34548~SAA7164_CHIP_UNDEFINED : int;
const ~ldv_34548~SAA7164_CHIP_REV2 : int;
const ~ldv_34548~SAA7164_CHIP_REV3 : int;
const ~irqreturn~IRQ_NONE : int;
const ~irqreturn~IRQ_HANDLED : int;
const ~irqreturn~IRQ_WAKE_THREAD : int;
const ~tda18271_role~TDA18271_MASTER : int;
const ~tda18271_role~TDA18271_SLAVE : int;
const ~tda18271_i2c_gate~TDA18271_GATE_AUTO : int;
const ~tda18271_i2c_gate~TDA18271_GATE_ANALOG : int;
const ~tda18271_i2c_gate~TDA18271_GATE_DIGITAL : int;
const ~tda18271_output_options~TDA18271_OUTPUT_LT_XT_ON : int;
const ~tda18271_output_options~TDA18271_OUTPUT_LT_OFF : int;
const ~tda18271_output_options~TDA18271_OUTPUT_XT_OFF : int;
const ~tda18271_small_i2c~TDA18271_39_BYTE_CHUNK_INIT : int;
const ~tda18271_small_i2c~TDA18271_16_BYTE_CHUNK_INIT : int;
const ~tda18271_small_i2c~TDA18271_08_BYTE_CHUNK_INIT : int;
const ~tda18271_small_i2c~TDA18271_03_BYTE_CHUNK_INIT : int;
const ~lgdt3306a_mpeg_mode~LGDT3306A_MPEG_PARALLEL : int;
const ~lgdt3306a_mpeg_mode~LGDT3306A_MPEG_SERIAL : int;
const ~lgdt3306a_tp_clock_edge~LGDT3306A_TPCLK_RISING_EDGE : int;
const ~lgdt3306a_tp_clock_edge~LGDT3306A_TPCLK_FALLING_EDGE : int;
const ~lgdt3306a_tp_valid_polarity~LGDT3306A_TP_VALID_LOW : int;
const ~lgdt3306a_tp_valid_polarity~LGDT3306A_TP_VALID_HIGH : int;
const ~tmComResCmd~SET_CUR : int;
const ~tmComResCmd~GET_CUR : int;
const ~tmComResCmd~GET_MIN : int;
const ~tmComResCmd~GET_MAX : int;
const ~tmComResCmd~GET_RES : int;
const ~tmComResCmd~GET_LEN : int;
const ~tmComResCmd~GET_INFO : int;
const ~tmComResCmd~GET_DEF : int;
axiom #funAddr~saa7164_work_enchandler.base == -1 && #funAddr~saa7164_work_enchandler.offset == 0;
axiom #funAddr~saa7164_work_vbihandler.base == -1 && #funAddr~saa7164_work_vbihandler.offset == 1;
axiom #funAddr~saa7164_proc_show.base == -1 && #funAddr~saa7164_proc_show.offset == 2;
axiom #funAddr~seq_lseek.base == -1 && #funAddr~seq_lseek.offset == 3;
axiom #funAddr~seq_read.base == -1 && #funAddr~seq_read.offset == 4;
axiom #funAddr~saa7164_proc_open.base == -1 && #funAddr~saa7164_proc_open.offset == 5;
axiom #funAddr~single_release.base == -1 && #funAddr~single_release.offset == 6;
axiom #funAddr~saa7164_irq.base == -1 && #funAddr~saa7164_irq.offset == 7;
axiom #funAddr~saa7164_work_cmdhandler.base == -1 && #funAddr~saa7164_work_cmdhandler.offset == 8;
axiom #funAddr~saa7164_thread_function.base == -1 && #funAddr~saa7164_thread_function.offset == 9;
axiom #funAddr~saa7164_initdev.base == -1 && #funAddr~saa7164_initdev.offset == 10;
axiom #funAddr~saa7164_finidev.base == -1 && #funAddr~saa7164_finidev.offset == 11;
axiom #funAddr~i2c_xfer.base == -1 && #funAddr~i2c_xfer.offset == 12;
axiom #funAddr~saa7164_functionality.base == -1 && #funAddr~saa7164_functionality.offset == 13;
axiom #funAddr~saa7164_dvb_start_feed.base == -1 && #funAddr~saa7164_dvb_start_feed.offset == 14;
axiom #funAddr~saa7164_dvb_stop_feed.base == -1 && #funAddr~saa7164_dvb_stop_feed.offset == 15;
axiom #funAddr~fops_read.base == -1 && #funAddr~fops_read.offset == 16;
axiom #funAddr~fops_poll.base == -1 && #funAddr~fops_poll.offset == 17;
axiom #funAddr~video_ioctl2.base == -1 && #funAddr~video_ioctl2.offset == 18;
axiom #funAddr~fops_open.base == -1 && #funAddr~fops_open.offset == 19;
axiom #funAddr~fops_release.base == -1 && #funAddr~fops_release.offset == 20;
axiom #funAddr~vidioc_querycap.base == -1 && #funAddr~vidioc_querycap.offset == 21;
axiom #funAddr~vidioc_enum_fmt_vid_cap.base == -1 && #funAddr~vidioc_enum_fmt_vid_cap.offset == 22;
axiom #funAddr~vidioc_g_fmt_vid_cap.base == -1 && #funAddr~vidioc_g_fmt_vid_cap.offset == 23;
axiom #funAddr~vidioc_s_fmt_vid_cap.base == -1 && #funAddr~vidioc_s_fmt_vid_cap.offset == 24;
axiom #funAddr~vidioc_try_fmt_vid_cap.base == -1 && #funAddr~vidioc_try_fmt_vid_cap.offset == 25;
axiom #funAddr~vidioc_g_std.base == -1 && #funAddr~vidioc_g_std.offset == 26;
axiom #funAddr~vidioc_s_std.base == -1 && #funAddr~vidioc_s_std.offset == 27;
axiom #funAddr~vidioc_enum_input.base == -1 && #funAddr~vidioc_enum_input.offset == 28;
axiom #funAddr~vidioc_g_input.base == -1 && #funAddr~vidioc_g_input.offset == 29;
axiom #funAddr~vidioc_s_input.base == -1 && #funAddr~vidioc_s_input.offset == 30;
axiom #funAddr~vidioc_queryctrl.base == -1 && #funAddr~vidioc_queryctrl.offset == 31;
axiom #funAddr~vidioc_g_ctrl.base == -1 && #funAddr~vidioc_g_ctrl.offset == 32;
axiom #funAddr~vidioc_s_ctrl.base == -1 && #funAddr~vidioc_s_ctrl.offset == 33;
axiom #funAddr~vidioc_g_ext_ctrls.base == -1 && #funAddr~vidioc_g_ext_ctrls.offset == 34;
axiom #funAddr~vidioc_s_ext_ctrls.base == -1 && #funAddr~vidioc_s_ext_ctrls.offset == 35;
axiom #funAddr~vidioc_try_ext_ctrls.base == -1 && #funAddr~vidioc_try_ext_ctrls.offset == 36;
axiom #funAddr~vidioc_g_tuner.base == -1 && #funAddr~vidioc_g_tuner.offset == 37;
axiom #funAddr~vidioc_s_tuner.base == -1 && #funAddr~vidioc_s_tuner.offset == 38;
axiom #funAddr~vidioc_g_frequency.base == -1 && #funAddr~vidioc_g_frequency.offset == 39;
axiom #funAddr~vidioc_s_frequency.base == -1 && #funAddr~vidioc_s_frequency.offset == 40;
axiom #funAddr~video_device_release.base == -1 && #funAddr~video_device_release.offset == 41;
axiom #funAddr~fops_read___0.base == -1 && #funAddr~fops_read___0.offset == 42;
axiom #funAddr~fops_poll___0.base == -1 && #funAddr~fops_poll___0.offset == 43;
axiom #funAddr~fops_open___0.base == -1 && #funAddr~fops_open___0.offset == 44;
axiom #funAddr~fops_release___0.base == -1 && #funAddr~fops_release___0.offset == 45;
axiom #funAddr~vidioc_querycap___0.base == -1 && #funAddr~vidioc_querycap___0.offset == 46;
axiom #funAddr~vidioc_enum_fmt_vid_cap___0.base == -1 && #funAddr~vidioc_enum_fmt_vid_cap___0.offset == 47;
axiom #funAddr~vidioc_g_fmt_vid_cap___0.base == -1 && #funAddr~vidioc_g_fmt_vid_cap___0.offset == 48;
axiom #funAddr~saa7164_vbi_fmt.base == -1 && #funAddr~saa7164_vbi_fmt.offset == 49;
axiom #funAddr~vidioc_s_fmt_vid_cap___0.base == -1 && #funAddr~vidioc_s_fmt_vid_cap___0.offset == 50;
axiom #funAddr~vidioc_try_fmt_vid_cap___0.base == -1 && #funAddr~vidioc_try_fmt_vid_cap___0.offset == 51;
axiom #funAddr~vidioc_g_std___0.base == -1 && #funAddr~vidioc_g_std___0.offset == 52;
axiom #funAddr~vidioc_s_std___0.base == -1 && #funAddr~vidioc_s_std___0.offset == 53;
axiom #funAddr~vidioc_enum_input___0.base == -1 && #funAddr~vidioc_enum_input___0.offset == 54;
axiom #funAddr~vidioc_g_input___0.base == -1 && #funAddr~vidioc_g_input___0.offset == 55;
axiom #funAddr~vidioc_s_input___0.base == -1 && #funAddr~vidioc_s_input___0.offset == 56;
axiom #funAddr~vidioc_queryctrl___0.base == -1 && #funAddr~vidioc_queryctrl___0.offset == 57;
axiom #funAddr~vidioc_g_ctrl___0.base == -1 && #funAddr~vidioc_g_ctrl___0.offset == 58;
axiom #funAddr~vidioc_s_ctrl___0.base == -1 && #funAddr~vidioc_s_ctrl___0.offset == 59;
axiom #funAddr~vidioc_g_ext_ctrls___0.base == -1 && #funAddr~vidioc_g_ext_ctrls___0.offset == 60;
axiom #funAddr~vidioc_s_ext_ctrls___0.base == -1 && #funAddr~vidioc_s_ext_ctrls___0.offset == 61;
axiom #funAddr~vidioc_try_ext_ctrls___0.base == -1 && #funAddr~vidioc_try_ext_ctrls___0.offset == 62;
axiom #funAddr~vidioc_g_tuner___0.base == -1 && #funAddr~vidioc_g_tuner___0.offset == 63;
axiom #funAddr~vidioc_s_tuner___0.base == -1 && #funAddr~vidioc_s_tuner___0.offset == 64;
axiom #funAddr~vidioc_g_frequency___0.base == -1 && #funAddr~vidioc_g_frequency___0.offset == 65;
axiom #funAddr~vidioc_s_frequency___0.base == -1 && #funAddr~vidioc_s_frequency___0.offset == 66;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~uprobe_task_state~UTASK_RUNNING == 0;
axiom ~uprobe_task_state~UTASK_SSTEP == 1;
axiom ~uprobe_task_state~UTASK_SSTEP_ACK == 2;
axiom ~uprobe_task_state~UTASK_SSTEP_TRAPPED == 3;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~probe_type~PROBE_DEFAULT_STRATEGY == 0;
axiom ~probe_type~PROBE_PREFER_ASYNCHRONOUS == 1;
axiom ~probe_type~PROBE_FORCE_SYNCHRONOUS == 2;
axiom ~pci_channel_state~pci_channel_io_normal == 1;
axiom ~pci_channel_state~pci_channel_io_frozen == 2;
axiom ~pci_channel_state~pci_channel_io_perm_failure == 3;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~fwnode_type~FWNODE_INVALID == 0;
axiom ~fwnode_type~FWNODE_OF == 1;
axiom ~fwnode_type~FWNODE_ACPI == 2;
axiom ~fwnode_type~FWNODE_PDATA == 3;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE == 1;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT == 2;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OVERLAY == 3;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_CAPTURE == 4;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VBI_OUTPUT == 5;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_CAPTURE == 6;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_SLICED_VBI_OUTPUT == 7;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY == 8;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE == 9;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE == 10;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_SDR_CAPTURE == 11;
axiom ~v4l2_buf_type~V4L2_BUF_TYPE_PRIVATE == 128;
axiom ~v4l2_priority~V4L2_PRIORITY_UNSET == 0;
axiom ~v4l2_priority~V4L2_PRIORITY_BACKGROUND == 1;
axiom ~v4l2_priority~V4L2_PRIORITY_INTERACTIVE == 2;
axiom ~v4l2_priority~V4L2_PRIORITY_RECORD == 3;
axiom ~v4l2_priority~V4L2_PRIORITY_DEFAULT == 2;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~dmx_output~DMX_OUT_DECODER == 0;
axiom ~dmx_output~DMX_OUT_TAP == 1;
axiom ~dmx_output~DMX_OUT_TS_TAP == 2;
axiom ~dmx_output~DMX_OUT_TSDEMUX_TAP == 3;
axiom ~dmx_input~DMX_IN_FRONTEND == 0;
axiom ~dmx_input~DMX_IN_DVR == 1;
axiom ~dmx_ts_pes~DMX_PES_AUDIO0 == 0;
axiom ~dmx_ts_pes~DMX_PES_VIDEO0 == 1;
axiom ~dmx_ts_pes~DMX_PES_TELETEXT0 == 2;
axiom ~dmx_ts_pes~DMX_PES_SUBTITLE0 == 3;
axiom ~dmx_ts_pes~DMX_PES_PCR0 == 4;
axiom ~dmx_ts_pes~DMX_PES_AUDIO1 == 5;
axiom ~dmx_ts_pes~DMX_PES_VIDEO1 == 6;
axiom ~dmx_ts_pes~DMX_PES_TELETEXT1 == 7;
axiom ~dmx_ts_pes~DMX_PES_SUBTITLE1 == 8;
axiom ~dmx_ts_pes~DMX_PES_PCR1 == 9;
axiom ~dmx_ts_pes~DMX_PES_AUDIO2 == 10;
axiom ~dmx_ts_pes~DMX_PES_VIDEO2 == 11;
axiom ~dmx_ts_pes~DMX_PES_TELETEXT2 == 12;
axiom ~dmx_ts_pes~DMX_PES_SUBTITLE2 == 13;
axiom ~dmx_ts_pes~DMX_PES_PCR2 == 14;
axiom ~dmx_ts_pes~DMX_PES_AUDIO3 == 15;
axiom ~dmx_ts_pes~DMX_PES_VIDEO3 == 16;
axiom ~dmx_ts_pes~DMX_PES_TELETEXT3 == 17;
axiom ~dmx_ts_pes~DMX_PES_SUBTITLE3 == 18;
axiom ~dmx_ts_pes~DMX_PES_PCR3 == 19;
axiom ~dmx_ts_pes~DMX_PES_OTHER == 20;
axiom ~dmx_source~DMX_SOURCE_FRONT0 == 0;
axiom ~dmx_source~DMX_SOURCE_FRONT1 == 1;
axiom ~dmx_source~DMX_SOURCE_FRONT2 == 2;
axiom ~dmx_source~DMX_SOURCE_FRONT3 == 3;
axiom ~dmx_source~DMX_SOURCE_DVR0 == 16;
axiom ~dmx_source~DMX_SOURCE_DVR1 == 17;
axiom ~dmx_source~DMX_SOURCE_DVR2 == 18;
axiom ~dmx_source~DMX_SOURCE_DVR3 == 19;
axiom ~dmx_success~DMX_OK == 0;
axiom ~dmx_success~DMX_LENGTH_ERROR == 1;
axiom ~dmx_success~DMX_OVERRUN_ERROR == 2;
axiom ~dmx_success~DMX_CRC_ERROR == 3;
axiom ~dmx_success~DMX_FRAME_ERROR == 4;
axiom ~dmx_success~DMX_FIFO_ERROR == 5;
axiom ~dmx_success~DMX_MISSED_ERROR == 6;
axiom ~dmx_frontend_source~DMX_MEMORY_FE == 0;
axiom ~dmx_frontend_source~DMX_FRONTEND_0 == 1;
axiom ~dmx_frontend_source~DMX_FRONTEND_1 == 2;
axiom ~dmx_frontend_source~DMX_FRONTEND_2 == 3;
axiom ~dmx_frontend_source~DMX_FRONTEND_3 == 4;
axiom ~dmx_frontend_source~DMX_STREAM_0 == 5;
axiom ~dmx_frontend_source~DMX_STREAM_1 == 6;
axiom ~dmx_frontend_source~DMX_STREAM_2 == 7;
axiom ~dmx_frontend_source~DMX_STREAM_3 == 8;
axiom ~dmxdev_type~DMXDEV_TYPE_NONE == 0;
axiom ~dmxdev_type~DMXDEV_TYPE_SEC == 1;
axiom ~dmxdev_type~DMXDEV_TYPE_PES == 2;
axiom ~dmxdev_state~DMXDEV_STATE_FREE == 0;
axiom ~dmxdev_state~DMXDEV_STATE_ALLOCATED == 1;
axiom ~dmxdev_state~DMXDEV_STATE_SET == 2;
axiom ~dmxdev_state~DMXDEV_STATE_GO == 3;
axiom ~dmxdev_state~DMXDEV_STATE_DONE == 4;
axiom ~dmxdev_state~DMXDEV_STATE_TIMEDOUT == 5;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE == 0;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE == 1;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ON == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_OFF == 3;
axiom ~ldv_29775~PHY_INTERFACE_MODE_NA == 0;
axiom ~ldv_29775~PHY_INTERFACE_MODE_MII == 1;
axiom ~ldv_29775~PHY_INTERFACE_MODE_GMII == 2;
axiom ~ldv_29775~PHY_INTERFACE_MODE_SGMII == 3;
axiom ~ldv_29775~PHY_INTERFACE_MODE_TBI == 4;
axiom ~ldv_29775~PHY_INTERFACE_MODE_REVMII == 5;
axiom ~ldv_29775~PHY_INTERFACE_MODE_RMII == 6;
axiom ~ldv_29775~PHY_INTERFACE_MODE_RGMII == 7;
axiom ~ldv_29775~PHY_INTERFACE_MODE_RGMII_ID == 8;
axiom ~ldv_29775~PHY_INTERFACE_MODE_RGMII_RXID == 9;
axiom ~ldv_29775~PHY_INTERFACE_MODE_RGMII_TXID == 10;
axiom ~ldv_29775~PHY_INTERFACE_MODE_RTBI == 11;
axiom ~ldv_29775~PHY_INTERFACE_MODE_SMII == 12;
axiom ~ldv_29775~PHY_INTERFACE_MODE_XGMII == 13;
axiom ~ldv_29775~PHY_INTERFACE_MODE_MOCA == 14;
axiom ~ldv_29775~PHY_INTERFACE_MODE_QSGMII == 15;
axiom ~ldv_29775~PHY_INTERFACE_MODE_MAX == 16;
axiom ~ldv_29829~MDIOBUS_ALLOCATED == 1;
axiom ~ldv_29829~MDIOBUS_REGISTERED == 2;
axiom ~ldv_29829~MDIOBUS_UNREGISTERED == 3;
axiom ~ldv_29829~MDIOBUS_RELEASED == 4;
axiom ~phy_state~PHY_DOWN == 0;
axiom ~phy_state~PHY_STARTING == 1;
axiom ~phy_state~PHY_READY == 2;
axiom ~phy_state~PHY_PENDING == 3;
axiom ~phy_state~PHY_UP == 4;
axiom ~phy_state~PHY_AN == 5;
axiom ~phy_state~PHY_RUNNING == 6;
axiom ~phy_state~PHY_NOLINK == 7;
axiom ~phy_state~PHY_FORCING == 8;
axiom ~phy_state~PHY_CHANGELINK == 9;
axiom ~phy_state~PHY_HALTED == 10;
axiom ~phy_state~PHY_RESUMING == 11;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_NONE == 0;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_DSA == 1;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_TRAILER == 2;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_EDSA == 3;
axiom ~dsa_tag_protocol~DSA_TAG_PROTO_BRCM == 4;
axiom ~netdev_tx~__NETDEV_TX_MIN == -2147483648;
axiom ~netdev_tx~NETDEV_TX_OK == 0;
axiom ~netdev_tx~NETDEV_TX_BUSY == 16;
axiom ~netdev_tx~NETDEV_TX_LOCKED == 32;
axiom ~rx_handler_result~RX_HANDLER_CONSUMED == 0;
axiom ~rx_handler_result~RX_HANDLER_ANOTHER == 1;
axiom ~rx_handler_result~RX_HANDLER_EXACT == 2;
axiom ~rx_handler_result~RX_HANDLER_PASS == 3;
axiom ~fe_type~FE_QPSK == 0;
axiom ~fe_type~FE_QAM == 1;
axiom ~fe_type~FE_OFDM == 2;
axiom ~fe_type~FE_ATSC == 3;
axiom ~fe_caps~FE_IS_STUPID == 0;
axiom ~fe_caps~FE_CAN_INVERSION_AUTO == 1;
axiom ~fe_caps~FE_CAN_FEC_1_2 == 2;
axiom ~fe_caps~FE_CAN_FEC_2_3 == 4;
axiom ~fe_caps~FE_CAN_FEC_3_4 == 8;
axiom ~fe_caps~FE_CAN_FEC_4_5 == 16;
axiom ~fe_caps~FE_CAN_FEC_5_6 == 32;
axiom ~fe_caps~FE_CAN_FEC_6_7 == 64;
axiom ~fe_caps~FE_CAN_FEC_7_8 == 128;
axiom ~fe_caps~FE_CAN_FEC_8_9 == 256;
axiom ~fe_caps~FE_CAN_FEC_AUTO == 512;
axiom ~fe_caps~FE_CAN_QPSK == 1024;
axiom ~fe_caps~FE_CAN_QAM_16 == 2048;
axiom ~fe_caps~FE_CAN_QAM_32 == 4096;
axiom ~fe_caps~FE_CAN_QAM_64 == 8192;
axiom ~fe_caps~FE_CAN_QAM_128 == 16384;
axiom ~fe_caps~FE_CAN_QAM_256 == 32768;
axiom ~fe_caps~FE_CAN_QAM_AUTO == 65536;
axiom ~fe_caps~FE_CAN_TRANSMISSION_MODE_AUTO == 131072;
axiom ~fe_caps~FE_CAN_BANDWIDTH_AUTO == 262144;
axiom ~fe_caps~FE_CAN_GUARD_INTERVAL_AUTO == 524288;
axiom ~fe_caps~FE_CAN_HIERARCHY_AUTO == 1048576;
axiom ~fe_caps~FE_CAN_8VSB == 2097152;
axiom ~fe_caps~FE_CAN_16VSB == 4194304;
axiom ~fe_caps~FE_HAS_EXTENDED_CAPS == 8388608;
axiom ~fe_caps~FE_CAN_MULTISTREAM == 67108864;
axiom ~fe_caps~FE_CAN_TURBO_FEC == 134217728;
axiom ~fe_caps~FE_CAN_2G_MODULATION == 268435456;
axiom ~fe_caps~FE_NEEDS_BENDING == 536870912;
axiom ~fe_caps~FE_CAN_RECOVER == 1073741824;
axiom ~fe_caps~FE_CAN_MUTE_TS == 2147483648;
axiom ~fe_sec_voltage~SEC_VOLTAGE_13 == 0;
axiom ~fe_sec_voltage~SEC_VOLTAGE_18 == 1;
axiom ~fe_sec_voltage~SEC_VOLTAGE_OFF == 2;
axiom ~fe_sec_tone_mode~SEC_TONE_ON == 0;
axiom ~fe_sec_tone_mode~SEC_TONE_OFF == 1;
axiom ~fe_sec_mini_cmd~SEC_MINI_A == 0;
axiom ~fe_sec_mini_cmd~SEC_MINI_B == 1;
axiom ~fe_status~FE_HAS_SIGNAL == 1;
axiom ~fe_status~FE_HAS_CARRIER == 2;
axiom ~fe_status~FE_HAS_VITERBI == 4;
axiom ~fe_status~FE_HAS_SYNC == 8;
axiom ~fe_status~FE_HAS_LOCK == 16;
axiom ~fe_status~FE_TIMEDOUT == 32;
axiom ~fe_status~FE_REINIT == 64;
axiom ~fe_spectral_inversion~INVERSION_OFF == 0;
axiom ~fe_spectral_inversion~INVERSION_ON == 1;
axiom ~fe_spectral_inversion~INVERSION_AUTO == 2;
axiom ~fe_code_rate~FEC_NONE == 0;
axiom ~fe_code_rate~FEC_1_2 == 1;
axiom ~fe_code_rate~FEC_2_3 == 2;
axiom ~fe_code_rate~FEC_3_4 == 3;
axiom ~fe_code_rate~FEC_4_5 == 4;
axiom ~fe_code_rate~FEC_5_6 == 5;
axiom ~fe_code_rate~FEC_6_7 == 6;
axiom ~fe_code_rate~FEC_7_8 == 7;
axiom ~fe_code_rate~FEC_8_9 == 8;
axiom ~fe_code_rate~FEC_AUTO == 9;
axiom ~fe_code_rate~FEC_3_5 == 10;
axiom ~fe_code_rate~FEC_9_10 == 11;
axiom ~fe_code_rate~FEC_2_5 == 12;
axiom ~fe_modulation~QPSK == 0;
axiom ~fe_modulation~QAM_16 == 1;
axiom ~fe_modulation~QAM_32 == 2;
axiom ~fe_modulation~QAM_64 == 3;
axiom ~fe_modulation~QAM_128 == 4;
axiom ~fe_modulation~QAM_256 == 5;
axiom ~fe_modulation~QAM_AUTO == 6;
axiom ~fe_modulation~VSB_8 == 7;
axiom ~fe_modulation~VSB_16 == 8;
axiom ~fe_modulation~PSK_8 == 9;
axiom ~fe_modulation~APSK_16 == 10;
axiom ~fe_modulation~APSK_32 == 11;
axiom ~fe_modulation~DQPSK == 12;
axiom ~fe_modulation~QAM_4_NR == 13;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_2K == 0;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_8K == 1;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_AUTO == 2;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_4K == 3;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_1K == 4;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_16K == 5;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_32K == 6;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_C1 == 7;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_C3780 == 8;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_32 == 0;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_16 == 1;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_8 == 2;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_4 == 3;
axiom ~fe_guard_interval~GUARD_INTERVAL_AUTO == 4;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_128 == 5;
axiom ~fe_guard_interval~GUARD_INTERVAL_19_128 == 6;
axiom ~fe_guard_interval~GUARD_INTERVAL_19_256 == 7;
axiom ~fe_guard_interval~GUARD_INTERVAL_PN420 == 8;
axiom ~fe_guard_interval~GUARD_INTERVAL_PN595 == 9;
axiom ~fe_guard_interval~GUARD_INTERVAL_PN945 == 10;
axiom ~fe_hierarchy~HIERARCHY_NONE == 0;
axiom ~fe_hierarchy~HIERARCHY_1 == 1;
axiom ~fe_hierarchy~HIERARCHY_2 == 2;
axiom ~fe_hierarchy~HIERARCHY_4 == 3;
axiom ~fe_hierarchy~HIERARCHY_AUTO == 4;
axiom ~fe_interleaving~INTERLEAVING_NONE == 0;
axiom ~fe_interleaving~INTERLEAVING_AUTO == 1;
axiom ~fe_interleaving~INTERLEAVING_240 == 2;
axiom ~fe_interleaving~INTERLEAVING_720 == 3;
axiom ~fe_pilot~PILOT_ON == 0;
axiom ~fe_pilot~PILOT_OFF == 1;
axiom ~fe_pilot~PILOT_AUTO == 2;
axiom ~fe_rolloff~ROLLOFF_35 == 0;
axiom ~fe_rolloff~ROLLOFF_20 == 1;
axiom ~fe_rolloff~ROLLOFF_25 == 2;
axiom ~fe_rolloff~ROLLOFF_AUTO == 3;
axiom ~fe_delivery_system~SYS_UNDEFINED == 0;
axiom ~fe_delivery_system~SYS_DVBC_ANNEX_A == 1;
axiom ~fe_delivery_system~SYS_DVBC_ANNEX_B == 2;
axiom ~fe_delivery_system~SYS_DVBT == 3;
axiom ~fe_delivery_system~SYS_DSS == 4;
axiom ~fe_delivery_system~SYS_DVBS == 5;
axiom ~fe_delivery_system~SYS_DVBS2 == 6;
axiom ~fe_delivery_system~SYS_DVBH == 7;
axiom ~fe_delivery_system~SYS_ISDBT == 8;
axiom ~fe_delivery_system~SYS_ISDBS == 9;
axiom ~fe_delivery_system~SYS_ISDBC == 10;
axiom ~fe_delivery_system~SYS_ATSC == 11;
axiom ~fe_delivery_system~SYS_ATSCMH == 12;
axiom ~fe_delivery_system~SYS_DTMB == 13;
axiom ~fe_delivery_system~SYS_CMMB == 14;
axiom ~fe_delivery_system~SYS_DAB == 15;
axiom ~fe_delivery_system~SYS_DVBT2 == 16;
axiom ~fe_delivery_system~SYS_TURBO == 17;
axiom ~fe_delivery_system~SYS_DVBC_ANNEX_C == 18;
axiom ~tuner_param~DVBFE_TUNER_FREQUENCY == 1;
axiom ~tuner_param~DVBFE_TUNER_TUNERSTEP == 2;
axiom ~tuner_param~DVBFE_TUNER_IFFREQ == 4;
axiom ~tuner_param~DVBFE_TUNER_BANDWIDTH == 8;
axiom ~tuner_param~DVBFE_TUNER_REFCLOCK == 16;
axiom ~tuner_param~DVBFE_TUNER_IQSENSE == 32;
axiom ~tuner_param~DVBFE_TUNER_DUMMY == -2147483648;
axiom ~dvbfe_algo~DVBFE_ALGO_HW == 1;
axiom ~dvbfe_algo~DVBFE_ALGO_SW == 2;
axiom ~dvbfe_algo~DVBFE_ALGO_CUSTOM == 4;
axiom ~dvbfe_algo~DVBFE_ALGO_RECOVERY == -2147483648;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_SUCCESS == 1;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_ASLEEP == 2;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_FAILED == 4;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_INVALID == 8;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_AGAIN == 16;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_ERROR == -2147483648;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_CUSTOM == 0;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_DEVNAME == 1;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_I2C == 2;
axiom ~v4l2_async_match_type~V4L2_ASYNC_MATCH_OF == 3;
axiom ~v4l2_mbus_type~V4L2_MBUS_PARALLEL == 0;
axiom ~v4l2_mbus_type~V4L2_MBUS_BT656 == 1;
axiom ~v4l2_mbus_type~V4L2_MBUS_CSI2 == 2;
axiom ~v4l2_subdev_ir_mode~V4L2_SUBDEV_IR_MODE_PULSE_WIDTH == 0;
axiom ~tmBusType~NONE == 0;
axiom ~tmBusType~TYPE_BUS_PCI == 1;
axiom ~tmBusType~TYPE_BUS_PCIe == 2;
axiom ~tmBusType~TYPE_BUS_USB == 3;
axiom ~tmBusType~TYPE_BUS_I2C == 4;
axiom ~port_t~SAA7164_MPEG_UNDEFINED == 0;
axiom ~port_t~SAA7164_MPEG_DVB == 1;
axiom ~port_t~SAA7164_MPEG_ENCODER == 2;
axiom ~port_t~SAA7164_MPEG_VBI == 3;
axiom ~saa7164_i2c_bus_nr~SAA7164_I2C_BUS_0 == 0;
axiom ~saa7164_i2c_bus_nr~SAA7164_I2C_BUS_1 == 1;
axiom ~saa7164_i2c_bus_nr~SAA7164_I2C_BUS_2 == 2;
axiom ~saa7164_buffer_flags~SAA7164_BUFFER_UNDEFINED == 0;
axiom ~saa7164_buffer_flags~SAA7164_BUFFER_FREE == 1;
axiom ~saa7164_buffer_flags~SAA7164_BUFFER_BUSY == 2;
axiom ~saa7164_buffer_flags~SAA7164_BUFFER_FULL == 3;
axiom ~saa7164_unit_type~SAA7164_UNIT_UNDEFINED == 0;
axiom ~saa7164_unit_type~SAA7164_UNIT_DIGITAL_DEMODULATOR == 1;
axiom ~saa7164_unit_type~SAA7164_UNIT_ANALOG_DEMODULATOR == 2;
axiom ~saa7164_unit_type~SAA7164_UNIT_TUNER == 3;
axiom ~saa7164_unit_type~SAA7164_UNIT_EEPROM == 4;
axiom ~saa7164_unit_type~SAA7164_UNIT_ZILOG_IRBLASTER == 5;
axiom ~saa7164_unit_type~SAA7164_UNIT_ENCODER == 6;
axiom ~ldv_34548~SAA7164_CHIP_UNDEFINED == 0;
axiom ~ldv_34548~SAA7164_CHIP_REV2 == 1;
axiom ~ldv_34548~SAA7164_CHIP_REV3 == 2;
axiom ~irqreturn~IRQ_NONE == 0;
axiom ~irqreturn~IRQ_HANDLED == 1;
axiom ~irqreturn~IRQ_WAKE_THREAD == 2;
axiom ~tda18271_role~TDA18271_MASTER == 0;
axiom ~tda18271_role~TDA18271_SLAVE == 1;
axiom ~tda18271_i2c_gate~TDA18271_GATE_AUTO == 0;
axiom ~tda18271_i2c_gate~TDA18271_GATE_ANALOG == 1;
axiom ~tda18271_i2c_gate~TDA18271_GATE_DIGITAL == 2;
axiom ~tda18271_output_options~TDA18271_OUTPUT_LT_XT_ON == 0;
axiom ~tda18271_output_options~TDA18271_OUTPUT_LT_OFF == 1;
axiom ~tda18271_output_options~TDA18271_OUTPUT_XT_OFF == 2;
axiom ~tda18271_small_i2c~TDA18271_39_BYTE_CHUNK_INIT == 0;
axiom ~tda18271_small_i2c~TDA18271_16_BYTE_CHUNK_INIT == 16;
axiom ~tda18271_small_i2c~TDA18271_08_BYTE_CHUNK_INIT == 8;
axiom ~tda18271_small_i2c~TDA18271_03_BYTE_CHUNK_INIT == 3;
axiom ~lgdt3306a_mpeg_mode~LGDT3306A_MPEG_PARALLEL == 0;
axiom ~lgdt3306a_mpeg_mode~LGDT3306A_MPEG_SERIAL == 1;
axiom ~lgdt3306a_tp_clock_edge~LGDT3306A_TPCLK_RISING_EDGE == 0;
axiom ~lgdt3306a_tp_clock_edge~LGDT3306A_TPCLK_FALLING_EDGE == 1;
axiom ~lgdt3306a_tp_valid_polarity~LGDT3306A_TP_VALID_LOW == 0;
axiom ~lgdt3306a_tp_valid_polarity~LGDT3306A_TP_VALID_HIGH == 1;
axiom ~tmComResCmd~SET_CUR == 1;
axiom ~tmComResCmd~GET_CUR == 129;
axiom ~tmComResCmd~GET_MIN == 130;
axiom ~tmComResCmd~GET_MAX == 131;
axiom ~tmComResCmd~GET_RES == 132;
axiom ~tmComResCmd~GET_LEN == 133;
axiom ~tmComResCmd~GET_INFO == 134;
axiom ~tmComResCmd~GET_DEF == 135;
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
var ~ldv_irq_2_0 : int;

var ~ldv_irq_2_2 : int;

var ~ldv_irq_2_1 : int;

var ~ldv_irq_1_3 : int;

var ~ldv_irq_1_0 : int;

var ~ldv_irq_1_2 : int;

var ~LDV_IN_INTERRUPT : int;

var ~ldv_irq_1_1 : int;

var ~ldv_irq_2_3 : int;

var ~saa7164_bcount : int;

var ~saa7164_idcount : int;

var ~jiffies : int;

var ~ldv_state_variable_8 : int;

var ~ldv_state_variable_0 : int;

var ~ldv_state_variable_5 : int;

var ~ldv_state_variable_12 : int;

var ~ldv_work_3_2 : int;

var ~ldv_work_3_0 : int;

var ~ldv_irq_data_2_3.base : int, ~ldv_irq_data_2_3.offset : int;

var ~ldv_state_variable_9 : int;

var ~ldv_irq_line_2_0 : int;

var ~ref_cnt : int;

var ~ldv_irq_line_1_1 : int;

var ~ldv_irq_data_2_2.base : int, ~ldv_irq_data_2_2.offset : int;

var ~ldv_work_3_3 : int;

var ~ldv_state_variable_1 : int;

var ~ldv_state_variable_7 : int;

var ~ldv_work_5_3 : int;

var ~ldv_irq_line_1_2 : int;

var ~ldv_irq_line_2_3 : int;

var ~ldv_irq_data_2_1.base : int, ~ldv_irq_data_2_1.offset : int;

var ~ldv_irq_data_1_1.base : int, ~ldv_irq_data_1_1.offset : int;

var ~ldv_irq_line_2_2 : int;

var ~ldv_state_variable_10 : int;

var ~ldv_work_4_0 : int;

var ~ldv_state_variable_6 : int;

var ~ldv_irq_data_1_0.base : int, ~ldv_irq_data_1_0.offset : int;

var ~ldv_work_4_1 : int;

var ~ldv_work_4_3 : int;

var ~ldv_work_3_1 : int;

var ~ldv_irq_line_2_1 : int;

var ~ldv_work_5_0 : int;

var ~ldv_irq_data_1_3.base : int, ~ldv_irq_data_1_3.offset : int;

var ~ldv_state_variable_2 : int;

var ~ldv_work_5_1 : int;

var ~ldv_irq_data_1_2.base : int, ~ldv_irq_data_1_2.offset : int;

var ~ldv_irq_data_2_0.base : int, ~ldv_irq_data_2_0.offset : int;

var ~ldv_work_4_2 : int;

var ~ldv_state_variable_11 : int;

var ~ldv_irq_line_1_3 : int;

var ~ldv_work_5_2 : int;

var ~ldv_state_variable_3 : int;

var ~ldv_irq_line_1_0 : int;

var ~ldv_state_variable_4 : int;

var ~saa_debug : int;

var ~fw_debug : int;

var ~encoder_buffers : int;

var ~vbi_buffers : int;

var ~waitsecs : int;

var ~card : [int]int;

var ~print_histogram : int;

var ~crc_checking : int;

var ~guard_checking : int;

var ~saa7164_devcount : int;

var ~ldv_retval_0 : int;

var ~ldv_retval_4 : int;

var ~ldv_retval_3 : int;

var ~#adapter_nr.base : int, ~#adapter_nr.offset : int;

var ~ldv_retval_2 : int;

var ~ldv_retval_1 : int;

var ~ldv_mutex_devlist : int;

var ~ldv_mutex_dmaqueue_lock_of_saa7164_port : int;

var ~ldv_mutex_i_mutex_of_inode : int;

var ~ldv_mutex_lock : int;

var ~ldv_mutex_lock_of_cmd : int;

var ~ldv_mutex_lock_of_saa7164_dev : int;

var ~ldv_mutex_lock_of_saa7164_dvb : int;

var ~ldv_mutex_lock_of_tmComResBusInfo : int;

var ~ldv_mutex_mutex_of_device : int;

var ~ldv_mutex_vb_lock_of_videobuf_queue : int;

var ~#saa7164_boards.base : int, ~#saa7164_boards.offset : int;

var ~saa7164_subids.subvendor : [int]int, ~saa7164_subids.subdevice : [int]int, ~saa7164_subids.card : [int]int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~system_wq.base : int, ~system_wq.offset : int;

var ~#iomem_resource.base : int, ~#iomem_resource.offset : int;

var ~ldv_work_struct_3_1.base : int, ~ldv_work_struct_3_1.offset : int;

var ~vbi_fops_group0.base : int, ~vbi_fops_group0.offset : int;

var ~saa7164_proc_fops_group1.base : int, ~saa7164_proc_fops_group1.offset : int;

var ~mpeg_ioctl_ops_group1.base : int, ~mpeg_ioctl_ops_group1.offset : int;

var ~ldv_work_struct_4_0.base : int, ~ldv_work_struct_4_0.offset : int;

var ~ldv_work_struct_3_3.base : int, ~ldv_work_struct_3_3.offset : int;

var ~mpeg_ioctl_ops_group3.base : int, ~mpeg_ioctl_ops_group3.offset : int;

var ~saa7164_proc_fops_group2.base : int, ~saa7164_proc_fops_group2.offset : int;

var ~vbi_ioctl_ops_group2.base : int, ~vbi_ioctl_ops_group2.offset : int;

var ~saa7164_i2c_algo_template_group0.base : int, ~saa7164_i2c_algo_template_group0.offset : int;

var ~ldv_work_struct_3_2.base : int, ~ldv_work_struct_3_2.offset : int;

var ~saa7164_pci_driver_group1.base : int, ~saa7164_pci_driver_group1.offset : int;

var ~mpeg_ioctl_ops_group0.base : int, ~mpeg_ioctl_ops_group0.offset : int;

var ~ldv_work_struct_3_0.base : int, ~ldv_work_struct_3_0.offset : int;

var ~mpeg_fops_group0.base : int, ~mpeg_fops_group0.offset : int;

var ~vbi_ioctl_ops_group0.base : int, ~vbi_ioctl_ops_group0.offset : int;

var ~ldv_work_struct_5_0.base : int, ~ldv_work_struct_5_0.offset : int;

var ~vbi_ioctl_ops_group3.base : int, ~vbi_ioctl_ops_group3.offset : int;

var ~vbi_ioctl_ops_group1.base : int, ~vbi_ioctl_ops_group1.offset : int;

var ~mpeg_ioctl_ops_group2.base : int, ~mpeg_ioctl_ops_group2.offset : int;

var ~#system_freezing_cnt.base : int, ~#system_freezing_cnt.offset : int;

var ~enable_msi : ~bool;

var ~#devlist.base : int, ~#devlist.offset : int;

var ~#saa7164_devlist.base : int, ~#saa7164_devlist.offset : int;

var ~#saa7164_proc_fops.base : int, ~#saa7164_proc_fops.offset : int;

var ~#saa7164_pci_tbl.base : int, ~#saa7164_pci_tbl.offset : int;

var ~#saa7164_pci_driver.base : int, ~#saa7164_pci_driver.offset : int;

var ~#saa7164_i2c_algo_template.base : int, ~#saa7164_i2c_algo_template.offset : int;

var ~saa7164_i2c_adap_template.owner.base : int, ~saa7164_i2c_adap_template.owner.offset : int, ~saa7164_i2c_adap_template.class : int, ~saa7164_i2c_adap_template.algo.base : int, ~saa7164_i2c_adap_template.algo.offset : int, ~saa7164_i2c_adap_template.algo_data.base : int, ~saa7164_i2c_adap_template.algo_data.offset : int, ~saa7164_i2c_adap_template.bus_lock.wait_lock.raw_lock.val.counter : int, ~saa7164_i2c_adap_template.bus_lock.wait_lock.magic : int, ~saa7164_i2c_adap_template.bus_lock.wait_lock.owner_cpu : int, ~saa7164_i2c_adap_template.bus_lock.wait_lock.owner.base : int, ~saa7164_i2c_adap_template.bus_lock.wait_lock.owner.offset : int, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.key.base : int, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.key.offset : int, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.name.base : int, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.name.offset : int, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.cpu : int, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.ip : int, ~saa7164_i2c_adap_template.bus_lock.waiters.rb_node.base : int, ~saa7164_i2c_adap_template.bus_lock.waiters.rb_node.offset : int, ~saa7164_i2c_adap_template.bus_lock.waiters_leftmost.base : int, ~saa7164_i2c_adap_template.bus_lock.waiters_leftmost.offset : int, ~saa7164_i2c_adap_template.bus_lock.owner.base : int, ~saa7164_i2c_adap_template.bus_lock.owner.offset : int, ~saa7164_i2c_adap_template.bus_lock.save_state : int, ~saa7164_i2c_adap_template.bus_lock.name.base : int, ~saa7164_i2c_adap_template.bus_lock.name.offset : int, ~saa7164_i2c_adap_template.bus_lock.file.base : int, ~saa7164_i2c_adap_template.bus_lock.file.offset : int, ~saa7164_i2c_adap_template.bus_lock.line : int, ~saa7164_i2c_adap_template.bus_lock.magic.base : int, ~saa7164_i2c_adap_template.bus_lock.magic.offset : int, ~saa7164_i2c_adap_template.timeout : int, ~saa7164_i2c_adap_template.retries : int, ~saa7164_i2c_adap_template.dev.parent.base : int, ~saa7164_i2c_adap_template.dev.parent.offset : int, ~saa7164_i2c_adap_template.dev.p.base : int, ~saa7164_i2c_adap_template.dev.p.offset : int, ~saa7164_i2c_adap_template.dev.kobj.name.base : int, ~saa7164_i2c_adap_template.dev.kobj.name.offset : int, ~saa7164_i2c_adap_template.dev.kobj.entry.next.base : int, ~saa7164_i2c_adap_template.dev.kobj.entry.next.offset : int, ~saa7164_i2c_adap_template.dev.kobj.entry.prev.base : int, ~saa7164_i2c_adap_template.dev.kobj.entry.prev.offset : int, ~saa7164_i2c_adap_template.dev.kobj.parent.base : int, ~saa7164_i2c_adap_template.dev.kobj.parent.offset : int, ~saa7164_i2c_adap_template.dev.kobj.kset.base : int, ~saa7164_i2c_adap_template.dev.kobj.kset.offset : int, ~saa7164_i2c_adap_template.dev.kobj.ktype.base : int, ~saa7164_i2c_adap_template.dev.kobj.ktype.offset : int, ~saa7164_i2c_adap_template.dev.kobj.sd.base : int, ~saa7164_i2c_adap_template.dev.kobj.sd.offset : int, ~saa7164_i2c_adap_template.dev.kobj.kref.refcount.counter : int, ~saa7164_i2c_adap_template.dev.kobj.release.work.data.counter : int, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.next.base : int, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.next.offset : int, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.prev.base : int, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.prev.offset : int, ~saa7164_i2c_adap_template.dev.kobj.release.work.func.base : int, ~saa7164_i2c_adap_template.dev.kobj.release.work.func.offset : int, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.key.base : int, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.name.base : int, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.cpu : int, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.ip : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.next.base : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.next.offset : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.pprev.base : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.pprev.offset : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.expires : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.function.base : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.function.offset : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.data : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.flags : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.slack : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_pid : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_site.base : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_site.offset : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_comm : [int]int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.key.base : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.name.base : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.cpu : int, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.ip : int, ~saa7164_i2c_adap_template.dev.kobj.release.wq.base : int, ~saa7164_i2c_adap_template.dev.kobj.release.wq.offset : int, ~saa7164_i2c_adap_template.dev.kobj.release.cpu : int, ~saa7164_i2c_adap_template.dev.kobj.state_initialized : int, ~saa7164_i2c_adap_template.dev.kobj.state_in_sysfs : int, ~saa7164_i2c_adap_template.dev.kobj.state_add_uevent_sent : int, ~saa7164_i2c_adap_template.dev.kobj.state_remove_uevent_sent : int, ~saa7164_i2c_adap_template.dev.kobj.uevent_suppress : int, ~saa7164_i2c_adap_template.dev.init_name.base : int, ~saa7164_i2c_adap_template.dev.init_name.offset : int, ~saa7164_i2c_adap_template.dev.type.base : int, ~saa7164_i2c_adap_template.dev.type.offset : int, ~saa7164_i2c_adap_template.dev.mutex.count.counter : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.raw_lock.val.counter : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.magic : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner_cpu : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.base : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.offset : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.base : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.base : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.cpu : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.ip : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.__padding : [int]int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.base : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.base : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.cpu : int, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.ip : int, ~saa7164_i2c_adap_template.dev.mutex.wait_list.next.base : int, ~saa7164_i2c_adap_template.dev.mutex.wait_list.next.offset : int, ~saa7164_i2c_adap_template.dev.mutex.wait_list.prev.base : int, ~saa7164_i2c_adap_template.dev.mutex.wait_list.prev.offset : int, ~saa7164_i2c_adap_template.dev.mutex.owner.base : int, ~saa7164_i2c_adap_template.dev.mutex.owner.offset : int, ~saa7164_i2c_adap_template.dev.mutex.magic.base : int, ~saa7164_i2c_adap_template.dev.mutex.magic.offset : int, ~saa7164_i2c_adap_template.dev.mutex.dep_map.key.base : int, ~saa7164_i2c_adap_template.dev.mutex.dep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.mutex.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.mutex.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.mutex.dep_map.name.base : int, ~saa7164_i2c_adap_template.dev.mutex.dep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.mutex.dep_map.cpu : int, ~saa7164_i2c_adap_template.dev.mutex.dep_map.ip : int, ~saa7164_i2c_adap_template.dev.bus.base : int, ~saa7164_i2c_adap_template.dev.bus.offset : int, ~saa7164_i2c_adap_template.dev.driver.base : int, ~saa7164_i2c_adap_template.dev.driver.offset : int, ~saa7164_i2c_adap_template.dev.platform_data.base : int, ~saa7164_i2c_adap_template.dev.platform_data.offset : int, ~saa7164_i2c_adap_template.dev.driver_data.base : int, ~saa7164_i2c_adap_template.dev.driver_data.offset : int, ~saa7164_i2c_adap_template.dev.power.power_state.event : int, ~saa7164_i2c_adap_template.dev.power.can_wakeup : int, ~saa7164_i2c_adap_template.dev.power.async_suspend : int, ~saa7164_i2c_adap_template.dev.power.is_prepared : int, ~saa7164_i2c_adap_template.dev.power.is_suspended : int, ~saa7164_i2c_adap_template.dev.power.is_noirq_suspended : int, ~saa7164_i2c_adap_template.dev.power.is_late_suspended : int, ~saa7164_i2c_adap_template.dev.power.ignore_children : int, ~saa7164_i2c_adap_template.dev.power.early_init : int, ~saa7164_i2c_adap_template.dev.power.direct_complete : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.raw_lock.val.counter : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.magic : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.owner_cpu : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.owner.base : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.owner.offset : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.base : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.base : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.cpu : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.ip : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.__padding : [int]int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.base : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.base : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.cpu : int, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.ip : int, ~saa7164_i2c_adap_template.dev.power.entry.next.base : int, ~saa7164_i2c_adap_template.dev.power.entry.next.offset : int, ~saa7164_i2c_adap_template.dev.power.entry.prev.base : int, ~saa7164_i2c_adap_template.dev.power.entry.prev.offset : int, ~saa7164_i2c_adap_template.dev.power.completion.done : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.raw_lock.val.counter : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.magic : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner_cpu : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.base : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.offset : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.base : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.base : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.cpu : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.ip : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.__padding : [int]int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.base : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.base : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.cpu : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.ip : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.next.base : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.next.offset : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.prev.base : int, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.prev.offset : int, ~saa7164_i2c_adap_template.dev.power.wakeup.base : int, ~saa7164_i2c_adap_template.dev.power.wakeup.offset : int, ~saa7164_i2c_adap_template.dev.power.wakeup_path : int, ~saa7164_i2c_adap_template.dev.power.syscore : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.next.base : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.next.offset : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.pprev.base : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.pprev.offset : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.expires : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.function.base : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.function.offset : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.data : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.flags : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.slack : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_pid : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_site.base : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_site.offset : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_comm : [int]int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.key.base : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.name.base : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.cpu : int, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.ip : int, ~saa7164_i2c_adap_template.dev.power.timer_expires : int, ~saa7164_i2c_adap_template.dev.power.work.data.counter : int, ~saa7164_i2c_adap_template.dev.power.work.entry.next.base : int, ~saa7164_i2c_adap_template.dev.power.work.entry.next.offset : int, ~saa7164_i2c_adap_template.dev.power.work.entry.prev.base : int, ~saa7164_i2c_adap_template.dev.power.work.entry.prev.offset : int, ~saa7164_i2c_adap_template.dev.power.work.func.base : int, ~saa7164_i2c_adap_template.dev.power.work.func.offset : int, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.key.base : int, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.name.base : int, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.cpu : int, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.ip : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.raw_lock.val.counter : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.magic : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner_cpu : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.base : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.offset : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.base : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.base : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.cpu : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.ip : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.__padding : [int]int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.base : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.base : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.cpu : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.ip : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.next.base : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.next.offset : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.prev.base : int, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.prev.offset : int, ~saa7164_i2c_adap_template.dev.power.wakeirq.base : int, ~saa7164_i2c_adap_template.dev.power.wakeirq.offset : int, ~saa7164_i2c_adap_template.dev.power.usage_count.counter : int, ~saa7164_i2c_adap_template.dev.power.child_count.counter : int, ~saa7164_i2c_adap_template.dev.power.disable_depth : int, ~saa7164_i2c_adap_template.dev.power.idle_notification : int, ~saa7164_i2c_adap_template.dev.power.request_pending : int, ~saa7164_i2c_adap_template.dev.power.deferred_resume : int, ~saa7164_i2c_adap_template.dev.power.run_wake : int, ~saa7164_i2c_adap_template.dev.power.runtime_auto : int, ~saa7164_i2c_adap_template.dev.power.no_callbacks : int, ~saa7164_i2c_adap_template.dev.power.irq_safe : int, ~saa7164_i2c_adap_template.dev.power.use_autosuspend : int, ~saa7164_i2c_adap_template.dev.power.timer_autosuspends : int, ~saa7164_i2c_adap_template.dev.power.memalloc_noio : int, ~saa7164_i2c_adap_template.dev.power.request : int, ~saa7164_i2c_adap_template.dev.power.runtime_status : int, ~saa7164_i2c_adap_template.dev.power.runtime_error : int, ~saa7164_i2c_adap_template.dev.power.autosuspend_delay : int, ~saa7164_i2c_adap_template.dev.power.last_busy : int, ~saa7164_i2c_adap_template.dev.power.active_jiffies : int, ~saa7164_i2c_adap_template.dev.power.suspended_jiffies : int, ~saa7164_i2c_adap_template.dev.power.accounting_timestamp : int, ~saa7164_i2c_adap_template.dev.power.subsys_data.base : int, ~saa7164_i2c_adap_template.dev.power.subsys_data.offset : int, ~saa7164_i2c_adap_template.dev.power.set_latency_tolerance.base : int, ~saa7164_i2c_adap_template.dev.power.set_latency_tolerance.offset : int, ~saa7164_i2c_adap_template.dev.power.qos.base : int, ~saa7164_i2c_adap_template.dev.power.qos.offset : int, ~saa7164_i2c_adap_template.dev.pm_domain.base : int, ~saa7164_i2c_adap_template.dev.pm_domain.offset : int, ~saa7164_i2c_adap_template.dev.pins.base : int, ~saa7164_i2c_adap_template.dev.pins.offset : int, ~saa7164_i2c_adap_template.dev.numa_node : int, ~saa7164_i2c_adap_template.dev.dma_mask.base : int, ~saa7164_i2c_adap_template.dev.dma_mask.offset : int, ~saa7164_i2c_adap_template.dev.coherent_dma_mask : int, ~saa7164_i2c_adap_template.dev.dma_pfn_offset : int, ~saa7164_i2c_adap_template.dev.dma_parms.base : int, ~saa7164_i2c_adap_template.dev.dma_parms.offset : int, ~saa7164_i2c_adap_template.dev.dma_pools.next.base : int, ~saa7164_i2c_adap_template.dev.dma_pools.next.offset : int, ~saa7164_i2c_adap_template.dev.dma_pools.prev.base : int, ~saa7164_i2c_adap_template.dev.dma_pools.prev.offset : int, ~saa7164_i2c_adap_template.dev.dma_mem.base : int, ~saa7164_i2c_adap_template.dev.dma_mem.offset : int, ~saa7164_i2c_adap_template.dev.cma_area.base : int, ~saa7164_i2c_adap_template.dev.cma_area.offset : int, ~saa7164_i2c_adap_template.dev.archdata.dma_ops.base : int, ~saa7164_i2c_adap_template.dev.archdata.dma_ops.offset : int, ~saa7164_i2c_adap_template.dev.archdata.iommu.base : int, ~saa7164_i2c_adap_template.dev.archdata.iommu.offset : int, ~saa7164_i2c_adap_template.dev.of_node.base : int, ~saa7164_i2c_adap_template.dev.of_node.offset : int, ~saa7164_i2c_adap_template.dev.fwnode.base : int, ~saa7164_i2c_adap_template.dev.fwnode.offset : int, ~saa7164_i2c_adap_template.dev.devt : int, ~saa7164_i2c_adap_template.dev.id : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.raw_lock.val.counter : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.magic : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.owner_cpu : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.owner.base : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.owner.offset : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.base : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.base : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.cpu : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.ip : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.__padding : [int]int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.base : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.offset : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.base : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.offset : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.cpu : int, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.ip : int, ~saa7164_i2c_adap_template.dev.devres_head.next.base : int, ~saa7164_i2c_adap_template.dev.devres_head.next.offset : int, ~saa7164_i2c_adap_template.dev.devres_head.prev.base : int, ~saa7164_i2c_adap_template.dev.devres_head.prev.offset : int, ~saa7164_i2c_adap_template.dev.knode_class.n_klist.base : int, ~saa7164_i2c_adap_template.dev.knode_class.n_klist.offset : int, ~saa7164_i2c_adap_template.dev.knode_class.n_node.next.base : int, ~saa7164_i2c_adap_template.dev.knode_class.n_node.next.offset : int, ~saa7164_i2c_adap_template.dev.knode_class.n_node.prev.base : int, ~saa7164_i2c_adap_template.dev.knode_class.n_node.prev.offset : int, ~saa7164_i2c_adap_template.dev.knode_class.n_ref.refcount.counter : int, ~saa7164_i2c_adap_template.dev.class.base : int, ~saa7164_i2c_adap_template.dev.class.offset : int, ~saa7164_i2c_adap_template.dev.groups.base : int, ~saa7164_i2c_adap_template.dev.groups.offset : int, ~saa7164_i2c_adap_template.dev.release.base : int, ~saa7164_i2c_adap_template.dev.release.offset : int, ~saa7164_i2c_adap_template.dev.iommu_group.base : int, ~saa7164_i2c_adap_template.dev.iommu_group.offset : int, ~saa7164_i2c_adap_template.dev.offline_disabled : int, ~saa7164_i2c_adap_template.dev.offline : int, ~saa7164_i2c_adap_template.nr : int, ~saa7164_i2c_adap_template.name : [int]int, ~saa7164_i2c_adap_template.dev_released.done : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.raw_lock.val.counter : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.magic : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.owner_cpu : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.owner.base : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.owner.offset : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.key.base : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.key.offset : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.name.base : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.name.offset : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.cpu : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.ip : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.__padding : [int]int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.base : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.offset : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.base : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.offset : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.cpu : int, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.ip : int, ~saa7164_i2c_adap_template.dev_released.wait.task_list.next.base : int, ~saa7164_i2c_adap_template.dev_released.wait.task_list.next.offset : int, ~saa7164_i2c_adap_template.dev_released.wait.task_list.prev.base : int, ~saa7164_i2c_adap_template.dev_released.wait.task_list.prev.offset : int, ~saa7164_i2c_adap_template.userspace_clients_lock.count.counter : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.raw_lock.val.counter : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.magic : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.owner_cpu : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.owner.base : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.owner.offset : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.key.base : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.key.offset : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.name.base : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.name.offset : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.cpu : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.ip : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.__padding : [int]int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.base : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.offset : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.base : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.offset : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.cpu : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.ip : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.next.base : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.next.offset : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.prev.base : int, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.prev.offset : int, ~saa7164_i2c_adap_template.userspace_clients_lock.owner.base : int, ~saa7164_i2c_adap_template.userspace_clients_lock.owner.offset : int, ~saa7164_i2c_adap_template.userspace_clients_lock.magic.base : int, ~saa7164_i2c_adap_template.userspace_clients_lock.magic.offset : int, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.key.base : int, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.key.offset : int, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.name.base : int, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.name.offset : int, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.cpu : int, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.ip : int, ~saa7164_i2c_adap_template.userspace_clients.next.base : int, ~saa7164_i2c_adap_template.userspace_clients.next.offset : int, ~saa7164_i2c_adap_template.userspace_clients.prev.base : int, ~saa7164_i2c_adap_template.userspace_clients.prev.offset : int, ~saa7164_i2c_adap_template.bus_recovery_info.base : int, ~saa7164_i2c_adap_template.bus_recovery_info.offset : int, ~saa7164_i2c_adap_template.quirks.base : int, ~saa7164_i2c_adap_template.quirks.offset : int;

var ~saa7164_i2c_client_template.flags : int, ~saa7164_i2c_client_template.addr : int, ~saa7164_i2c_client_template.name : [int]int, ~saa7164_i2c_client_template.adapter.base : int, ~saa7164_i2c_client_template.adapter.offset : int, ~saa7164_i2c_client_template.dev.parent.base : int, ~saa7164_i2c_client_template.dev.parent.offset : int, ~saa7164_i2c_client_template.dev.p.base : int, ~saa7164_i2c_client_template.dev.p.offset : int, ~saa7164_i2c_client_template.dev.kobj.name.base : int, ~saa7164_i2c_client_template.dev.kobj.name.offset : int, ~saa7164_i2c_client_template.dev.kobj.entry.next.base : int, ~saa7164_i2c_client_template.dev.kobj.entry.next.offset : int, ~saa7164_i2c_client_template.dev.kobj.entry.prev.base : int, ~saa7164_i2c_client_template.dev.kobj.entry.prev.offset : int, ~saa7164_i2c_client_template.dev.kobj.parent.base : int, ~saa7164_i2c_client_template.dev.kobj.parent.offset : int, ~saa7164_i2c_client_template.dev.kobj.kset.base : int, ~saa7164_i2c_client_template.dev.kobj.kset.offset : int, ~saa7164_i2c_client_template.dev.kobj.ktype.base : int, ~saa7164_i2c_client_template.dev.kobj.ktype.offset : int, ~saa7164_i2c_client_template.dev.kobj.sd.base : int, ~saa7164_i2c_client_template.dev.kobj.sd.offset : int, ~saa7164_i2c_client_template.dev.kobj.kref.refcount.counter : int, ~saa7164_i2c_client_template.dev.kobj.release.work.data.counter : int, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.next.base : int, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.next.offset : int, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.prev.base : int, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.prev.offset : int, ~saa7164_i2c_client_template.dev.kobj.release.work.func.base : int, ~saa7164_i2c_client_template.dev.kobj.release.work.func.offset : int, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.key.base : int, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.key.offset : int, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.name.base : int, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.name.offset : int, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.cpu : int, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.ip : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.next.base : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.next.offset : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.pprev.base : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.pprev.offset : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.expires : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.function.base : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.function.offset : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.data : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.flags : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.slack : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_pid : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_site.base : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_site.offset : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_comm : [int]int, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.key.base : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.key.offset : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.name.base : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.name.offset : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.cpu : int, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.ip : int, ~saa7164_i2c_client_template.dev.kobj.release.wq.base : int, ~saa7164_i2c_client_template.dev.kobj.release.wq.offset : int, ~saa7164_i2c_client_template.dev.kobj.release.cpu : int, ~saa7164_i2c_client_template.dev.kobj.state_initialized : int, ~saa7164_i2c_client_template.dev.kobj.state_in_sysfs : int, ~saa7164_i2c_client_template.dev.kobj.state_add_uevent_sent : int, ~saa7164_i2c_client_template.dev.kobj.state_remove_uevent_sent : int, ~saa7164_i2c_client_template.dev.kobj.uevent_suppress : int, ~saa7164_i2c_client_template.dev.init_name.base : int, ~saa7164_i2c_client_template.dev.init_name.offset : int, ~saa7164_i2c_client_template.dev.type.base : int, ~saa7164_i2c_client_template.dev.type.offset : int, ~saa7164_i2c_client_template.dev.mutex.count.counter : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.raw_lock.val.counter : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.magic : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner_cpu : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.base : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.offset : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.base : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.offset : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.base : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.offset : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.cpu : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.ip : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.__padding : [int]int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.base : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.offset : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.base : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.offset : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.cpu : int, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.ip : int, ~saa7164_i2c_client_template.dev.mutex.wait_list.next.base : int, ~saa7164_i2c_client_template.dev.mutex.wait_list.next.offset : int, ~saa7164_i2c_client_template.dev.mutex.wait_list.prev.base : int, ~saa7164_i2c_client_template.dev.mutex.wait_list.prev.offset : int, ~saa7164_i2c_client_template.dev.mutex.owner.base : int, ~saa7164_i2c_client_template.dev.mutex.owner.offset : int, ~saa7164_i2c_client_template.dev.mutex.magic.base : int, ~saa7164_i2c_client_template.dev.mutex.magic.offset : int, ~saa7164_i2c_client_template.dev.mutex.dep_map.key.base : int, ~saa7164_i2c_client_template.dev.mutex.dep_map.key.offset : int, ~saa7164_i2c_client_template.dev.mutex.dep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.mutex.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.mutex.dep_map.name.base : int, ~saa7164_i2c_client_template.dev.mutex.dep_map.name.offset : int, ~saa7164_i2c_client_template.dev.mutex.dep_map.cpu : int, ~saa7164_i2c_client_template.dev.mutex.dep_map.ip : int, ~saa7164_i2c_client_template.dev.bus.base : int, ~saa7164_i2c_client_template.dev.bus.offset : int, ~saa7164_i2c_client_template.dev.driver.base : int, ~saa7164_i2c_client_template.dev.driver.offset : int, ~saa7164_i2c_client_template.dev.platform_data.base : int, ~saa7164_i2c_client_template.dev.platform_data.offset : int, ~saa7164_i2c_client_template.dev.driver_data.base : int, ~saa7164_i2c_client_template.dev.driver_data.offset : int, ~saa7164_i2c_client_template.dev.power.power_state.event : int, ~saa7164_i2c_client_template.dev.power.can_wakeup : int, ~saa7164_i2c_client_template.dev.power.async_suspend : int, ~saa7164_i2c_client_template.dev.power.is_prepared : int, ~saa7164_i2c_client_template.dev.power.is_suspended : int, ~saa7164_i2c_client_template.dev.power.is_noirq_suspended : int, ~saa7164_i2c_client_template.dev.power.is_late_suspended : int, ~saa7164_i2c_client_template.dev.power.ignore_children : int, ~saa7164_i2c_client_template.dev.power.early_init : int, ~saa7164_i2c_client_template.dev.power.direct_complete : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.raw_lock.val.counter : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.magic : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.owner_cpu : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.owner.base : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.owner.offset : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.base : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.offset : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.base : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.offset : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.cpu : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.ip : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.__padding : [int]int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.base : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.offset : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.base : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.offset : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.cpu : int, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.ip : int, ~saa7164_i2c_client_template.dev.power.entry.next.base : int, ~saa7164_i2c_client_template.dev.power.entry.next.offset : int, ~saa7164_i2c_client_template.dev.power.entry.prev.base : int, ~saa7164_i2c_client_template.dev.power.entry.prev.offset : int, ~saa7164_i2c_client_template.dev.power.completion.done : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.raw_lock.val.counter : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.magic : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner_cpu : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.base : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.offset : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.base : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.offset : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.base : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.offset : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.cpu : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.ip : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.__padding : [int]int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.base : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.offset : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.base : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.offset : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.cpu : int, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.ip : int, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.next.base : int, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.next.offset : int, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.prev.base : int, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.prev.offset : int, ~saa7164_i2c_client_template.dev.power.wakeup.base : int, ~saa7164_i2c_client_template.dev.power.wakeup.offset : int, ~saa7164_i2c_client_template.dev.power.wakeup_path : int, ~saa7164_i2c_client_template.dev.power.syscore : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.next.base : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.next.offset : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.pprev.base : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.pprev.offset : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.expires : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.function.base : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.function.offset : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.data : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.flags : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.slack : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_pid : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_site.base : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_site.offset : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_comm : [int]int, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.key.base : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.key.offset : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.name.base : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.name.offset : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.cpu : int, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.ip : int, ~saa7164_i2c_client_template.dev.power.timer_expires : int, ~saa7164_i2c_client_template.dev.power.work.data.counter : int, ~saa7164_i2c_client_template.dev.power.work.entry.next.base : int, ~saa7164_i2c_client_template.dev.power.work.entry.next.offset : int, ~saa7164_i2c_client_template.dev.power.work.entry.prev.base : int, ~saa7164_i2c_client_template.dev.power.work.entry.prev.offset : int, ~saa7164_i2c_client_template.dev.power.work.func.base : int, ~saa7164_i2c_client_template.dev.power.work.func.offset : int, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.key.base : int, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.key.offset : int, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.name.base : int, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.name.offset : int, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.cpu : int, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.ip : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.raw_lock.val.counter : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.magic : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner_cpu : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.base : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.offset : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.base : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.offset : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.base : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.offset : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.cpu : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.ip : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.__padding : [int]int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.base : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.offset : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.base : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.offset : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.cpu : int, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.ip : int, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.next.base : int, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.next.offset : int, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.prev.base : int, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.prev.offset : int, ~saa7164_i2c_client_template.dev.power.wakeirq.base : int, ~saa7164_i2c_client_template.dev.power.wakeirq.offset : int, ~saa7164_i2c_client_template.dev.power.usage_count.counter : int, ~saa7164_i2c_client_template.dev.power.child_count.counter : int, ~saa7164_i2c_client_template.dev.power.disable_depth : int, ~saa7164_i2c_client_template.dev.power.idle_notification : int, ~saa7164_i2c_client_template.dev.power.request_pending : int, ~saa7164_i2c_client_template.dev.power.deferred_resume : int, ~saa7164_i2c_client_template.dev.power.run_wake : int, ~saa7164_i2c_client_template.dev.power.runtime_auto : int, ~saa7164_i2c_client_template.dev.power.no_callbacks : int, ~saa7164_i2c_client_template.dev.power.irq_safe : int, ~saa7164_i2c_client_template.dev.power.use_autosuspend : int, ~saa7164_i2c_client_template.dev.power.timer_autosuspends : int, ~saa7164_i2c_client_template.dev.power.memalloc_noio : int, ~saa7164_i2c_client_template.dev.power.request : int, ~saa7164_i2c_client_template.dev.power.runtime_status : int, ~saa7164_i2c_client_template.dev.power.runtime_error : int, ~saa7164_i2c_client_template.dev.power.autosuspend_delay : int, ~saa7164_i2c_client_template.dev.power.last_busy : int, ~saa7164_i2c_client_template.dev.power.active_jiffies : int, ~saa7164_i2c_client_template.dev.power.suspended_jiffies : int, ~saa7164_i2c_client_template.dev.power.accounting_timestamp : int, ~saa7164_i2c_client_template.dev.power.subsys_data.base : int, ~saa7164_i2c_client_template.dev.power.subsys_data.offset : int, ~saa7164_i2c_client_template.dev.power.set_latency_tolerance.base : int, ~saa7164_i2c_client_template.dev.power.set_latency_tolerance.offset : int, ~saa7164_i2c_client_template.dev.power.qos.base : int, ~saa7164_i2c_client_template.dev.power.qos.offset : int, ~saa7164_i2c_client_template.dev.pm_domain.base : int, ~saa7164_i2c_client_template.dev.pm_domain.offset : int, ~saa7164_i2c_client_template.dev.pins.base : int, ~saa7164_i2c_client_template.dev.pins.offset : int, ~saa7164_i2c_client_template.dev.numa_node : int, ~saa7164_i2c_client_template.dev.dma_mask.base : int, ~saa7164_i2c_client_template.dev.dma_mask.offset : int, ~saa7164_i2c_client_template.dev.coherent_dma_mask : int, ~saa7164_i2c_client_template.dev.dma_pfn_offset : int, ~saa7164_i2c_client_template.dev.dma_parms.base : int, ~saa7164_i2c_client_template.dev.dma_parms.offset : int, ~saa7164_i2c_client_template.dev.dma_pools.next.base : int, ~saa7164_i2c_client_template.dev.dma_pools.next.offset : int, ~saa7164_i2c_client_template.dev.dma_pools.prev.base : int, ~saa7164_i2c_client_template.dev.dma_pools.prev.offset : int, ~saa7164_i2c_client_template.dev.dma_mem.base : int, ~saa7164_i2c_client_template.dev.dma_mem.offset : int, ~saa7164_i2c_client_template.dev.cma_area.base : int, ~saa7164_i2c_client_template.dev.cma_area.offset : int, ~saa7164_i2c_client_template.dev.archdata.dma_ops.base : int, ~saa7164_i2c_client_template.dev.archdata.dma_ops.offset : int, ~saa7164_i2c_client_template.dev.archdata.iommu.base : int, ~saa7164_i2c_client_template.dev.archdata.iommu.offset : int, ~saa7164_i2c_client_template.dev.of_node.base : int, ~saa7164_i2c_client_template.dev.of_node.offset : int, ~saa7164_i2c_client_template.dev.fwnode.base : int, ~saa7164_i2c_client_template.dev.fwnode.offset : int, ~saa7164_i2c_client_template.dev.devt : int, ~saa7164_i2c_client_template.dev.id : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.raw_lock.val.counter : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.magic : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.owner_cpu : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.owner.base : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.owner.offset : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.base : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.offset : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.base : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.offset : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.cpu : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.ip : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.__padding : [int]int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.base : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.offset : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base : [int]int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset : [int]int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.base : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.offset : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.cpu : int, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.ip : int, ~saa7164_i2c_client_template.dev.devres_head.next.base : int, ~saa7164_i2c_client_template.dev.devres_head.next.offset : int, ~saa7164_i2c_client_template.dev.devres_head.prev.base : int, ~saa7164_i2c_client_template.dev.devres_head.prev.offset : int, ~saa7164_i2c_client_template.dev.knode_class.n_klist.base : int, ~saa7164_i2c_client_template.dev.knode_class.n_klist.offset : int, ~saa7164_i2c_client_template.dev.knode_class.n_node.next.base : int, ~saa7164_i2c_client_template.dev.knode_class.n_node.next.offset : int, ~saa7164_i2c_client_template.dev.knode_class.n_node.prev.base : int, ~saa7164_i2c_client_template.dev.knode_class.n_node.prev.offset : int, ~saa7164_i2c_client_template.dev.knode_class.n_ref.refcount.counter : int, ~saa7164_i2c_client_template.dev.class.base : int, ~saa7164_i2c_client_template.dev.class.offset : int, ~saa7164_i2c_client_template.dev.groups.base : int, ~saa7164_i2c_client_template.dev.groups.offset : int, ~saa7164_i2c_client_template.dev.release.base : int, ~saa7164_i2c_client_template.dev.release.offset : int, ~saa7164_i2c_client_template.dev.iommu_group.base : int, ~saa7164_i2c_client_template.dev.iommu_group.offset : int, ~saa7164_i2c_client_template.dev.offline_disabled : int, ~saa7164_i2c_client_template.dev.offline : int, ~saa7164_i2c_client_template.irq : int, ~saa7164_i2c_client_template.detected.next.base : int, ~saa7164_i2c_client_template.detected.next.offset : int, ~saa7164_i2c_client_template.detected.prev.base : int, ~saa7164_i2c_client_template.detected.prev.offset : int, ~saa7164_i2c_client_template.slave_cb.base : int, ~saa7164_i2c_client_template.slave_cb.offset : int;

var ~#hauppauge_hvr2200_1_config.base : int, ~#hauppauge_hvr2200_1_config.offset : int;

var ~#hauppauge_hvr2200_2_config.base : int, ~#hauppauge_hvr2200_2_config.offset : int;

var ~#hauppauge_tda18271_std_map.base : int, ~#hauppauge_tda18271_std_map.offset : int;

var ~#hauppauge_hvr22x0_tuner_config.base : int, ~#hauppauge_hvr22x0_tuner_config.offset : int;

var ~#hauppauge_hvr22x0s_tuner_config.base : int, ~#hauppauge_hvr22x0s_tuner_config.offset : int;

var ~#hauppauge_s5h1411_config.base : int, ~#hauppauge_s5h1411_config.offset : int;

var ~#hauppauge_hvr2255a_config.base : int, ~#hauppauge_hvr2255a_config.offset : int;

var ~#hauppauge_hvr2255b_config.base : int, ~#hauppauge_hvr2255b_config.offset : int;

var ~#hauppauge_hvr2255_tuner_config.base : int, ~#hauppauge_hvr2255_tuner_config.offset : int;

var ~saa7164_tvnorms.name.base : [int]int, ~saa7164_tvnorms.name.offset : [int]int, ~saa7164_tvnorms.id : [int]int;

var ~saa7164_v4l2_ctrls : [int]~u32;

var ~#mpeg_fops.base : int, ~#mpeg_fops.offset : int;

var ~#mpeg_ioctl_ops.base : int, ~#mpeg_ioctl_ops.offset : int;

var ~#saa7164_mpeg_template.base : int, ~#saa7164_mpeg_template.offset : int;

var ~saa7164_tvnorms___0.name.base : [int]int, ~saa7164_tvnorms___0.name.offset : [int]int, ~saa7164_tvnorms___0.id : [int]int;

var ~saa7164_v4l2_ctrls___0 : [int]~u32;

var ~#vbi_fops.base : int, ~#vbi_fops.offset : int;

var ~#vbi_ioctl_ops.base : int, ~#vbi_ioctl_ops.offset : int;

var ~#saa7164_vbi_template.base : int, ~#saa7164_vbi_template.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

var #memory_int : [int,int]int;

implementation ldv_mutex_unlock_52(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns (){
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;

  loc0:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    call ldv_mutex_unlock_dmaqueue_lock_of_saa7164_port(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    return;
}

procedure ldv_mutex_unlock_52(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns ();
modifies ~ldv_mutex_dmaqueue_lock_of_saa7164_port;

implementation saa7164_work_enchandler_helper(#in~port.base : int, #in~port.offset : int, #in~bufnr : int) returns (){
    var #t~mem382.base : int, #t~mem382.offset : int;
    var #t~mem383.base : int, #t~mem383.offset : int;
    var #t~mem384.base : int, #t~mem384.offset : int;
    var #t~mem385 : int;
    var #t~nondet386.base : int, #t~nondet386.offset : int;
    var #t~ret387 : int;
    var #t~mem388 : int;
    var #t~nondet389.base : int, #t~nondet389.offset : int;
    var #t~ret390 : int;
    var #t~mem391.base : int, #t~mem391.offset : int;
    var #t~mem392 : int;
    var #t~ret393 : ~u32;
    var #t~mem395.base : int, #t~mem395.offset : int;
    var #t~mem396 : int;
    var #t~mem397 : int;
    var #t~mem398 : int;
    var #t~mem399 : int;
    var #t~short400 : bool;
    var #t~mem401 : int;
    var #t~mem402 : int;
    var #t~short403 : bool;
    var #t~mem404 : int;
    var #t~mem405 : int;
    var #t~short406 : bool;
    var #t~mem407 : int;
    var #t~mem408 : int;
    var #t~short409 : bool;
    var #t~mem410 : int;
    var #t~mem411 : int;
    var #t~short412 : bool;
    var #t~mem413 : int;
    var #t~mem414 : int;
    var #t~short415 : bool;
    var #t~mem416 : int;
    var #t~mem417 : int;
    var #t~short418 : bool;
    var #t~nondet419.base : int, #t~nondet419.offset : int;
    var #t~ret420 : int;
    var #t~mem421 : int;
    var #t~mem422 : int;
    var #t~short423 : bool;
    var #t~mem424 : int;
    var #t~mem425 : int;
    var #t~ret426 : int;
    var #t~mem427.base : int, #t~mem427.offset : int;
    var #t~mem428 : int;
    var #t~mem429 : int;
    var #t~mem430.base : int, #t~mem430.offset : int;
    var #t~mem431.base : int, #t~mem431.offset : int;
    var #t~mem432 : int;
    var #t~memcpy433.base : int, #t~memcpy433.offset : int;
    var #t~mem434.base : int, #t~mem434.offset : int;
    var #t~mem435 : int;
    var #t~ret436 : ~u32;
    var #t~nondet439.base : int, #t~nondet439.offset : int;
    var #t~ret440 : int;
    var #t~nondet441.base : int, #t~nondet441.offset : int;
    var #t~ret442 : int;
    var #t~ret443 : int;
    var #t~mem444.base : int, #t~mem444.offset : int;
    var #t~mem445 : int;
    var #t~memset446.base : int, #t~memset446.offset : int;
    var #t~mem447.base : int, #t~mem447.offset : int;
    var #t~mem448 : int;
    var #t~ret449 : ~u32;
    var #t~mem451.base : int, #t~mem451.offset : int;
    var ~port.base : int, ~port.offset : int;
    var ~bufnr : int;
    var ~dev~317.base : int, ~dev~317.offset : int;
    var ~buf~317.base : int, ~buf~317.offset : int;
    var ~ubuf~317.base : int, ~ubuf~317.offset : int;
    var ~c~317.base : int, ~c~317.offset : int;
    var ~n~317.base : int, ~n~317.offset : int;
    var ~i~317 : int;
    var ~p~317.base : int, ~p~317.offset : int;
    var ~__mptr~317.base : int, ~__mptr~317.offset : int;
    var ~tmp~317 : int;
    var ~__mptr___0~317.base : int, ~__mptr___0~317.offset : int;
    var ~tmp___0~317 : int;

  loc1:
    ~port.base, ~port.offset := #in~port.base, #in~port.offset;
    ~bufnr := #in~bufnr;
    havoc ~dev~317.base, ~dev~317.offset;
    havoc ~buf~317.base, ~buf~317.offset;
    havoc ~ubuf~317.base, ~ubuf~317.offset;
    havoc ~c~317.base, ~c~317.offset;
    havoc ~n~317.base, ~n~317.offset;
    havoc ~i~317;
    havoc ~p~317.base, ~p~317.offset;
    havoc ~__mptr~317.base, ~__mptr~317.offset;
    havoc ~tmp~317;
    havoc ~__mptr___0~317.base, ~__mptr___0~317.offset;
    havoc ~tmp___0~317;
    call #t~mem382.base, #t~mem382.offset := read~$Pointer$(~port.base, ~port.offset + 0, 8);
    ~dev~317.base, ~dev~317.offset := #t~mem382.base, #t~mem382.offset;
    havoc #t~mem382.base, #t~mem382.offset;
    ~buf~317.base, ~buf~317.offset := 0, 0;
    ~ubuf~317.base, ~ubuf~317.offset := 0, 0;
    ~i~317 := 0;
    call ldv_mutex_lock_51(~port.base, ~port.offset + 115);
    call #t~mem383.base, #t~mem383.offset := read~$Pointer$(~port.base, ~port.offset + 263 + 0 + 0, 8);
    ~c~317.base, ~c~317.offset := #t~mem383.base, #t~mem383.offset;
    havoc #t~mem383.base, #t~mem383.offset;
    call #t~mem384.base, #t~mem384.offset := read~$Pointer$(~c~317.base, ~c~317.offset + 0, 8);
    ~n~317.base, ~n~317.offset := #t~mem384.base, #t~mem384.offset;
    havoc #t~mem384.base, #t~mem384.offset;
    assume !((~port.base + (~port.offset + 263 + 0)) % 18446744073709551616 != (~c~317.base + ~c~317.offset) % 18446744073709551616);
    call ldv_mutex_unlock_52(~port.base, ~port.offset + 115);
    return;
}

procedure saa7164_work_enchandler_helper(#in~port.base : int, #in~port.offset : int, #in~bufnr : int) returns ();
modifies #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_dmaqueue_lock_of_saa7164_port;

implementation saa7164_histogram_update(#in~hg.base : int, #in~hg.offset : int, #in~val : int) returns (){
    var #t~mem371 : int;
    var #t~mem372 : int;
    var ~hg.base : int, ~hg.offset : int;
    var ~val : int;
    var ~i~305 : int;

  loc2:
    ~hg.base, ~hg.offset := #in~hg.base, #in~hg.offset;
    ~val := #in~val;
    havoc ~i~305;
    ~i~305 := 0;
    goto loc3;
  loc3:
    goto loc3_0, loc3_1;
  loc3_0:
    assume ~i~305 <= 63;
    call #t~mem371 := read~int(~hg.base, ~hg.offset + 32 + ~i~305 * 16 + 0, 4);
    assume !(#t~mem371 % 4294967296 >= ~val % 4294967296);
    havoc #t~mem371;
    ~i~305 := ~i~305 + 1;
    goto loc3;
  loc3_1:
    assume !(~i~305 <= 63);
    assume true;
    return;
}

procedure saa7164_histogram_update(#in~hg.base : int, #in~hg.offset : int, #in~val : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation readl(#in~addr.base : int, #in~addr.offset : int) returns (#res : int){
    var ~addr.base : int, ~addr.offset : int;
    var ~ret~134 : int;

  loc4:
    ~addr.base, ~addr.offset := #in~addr.base, #in~addr.offset;
    havoc ~ret~134;
    #res := ~ret~134;
    assume true;
    return;
}

procedure readl(#in~addr.base : int, #in~addr.offset : int) returns (#res : int);
modifies ;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr8160 : int;

  loc5:
    #t~loopctr8160 := 0;
    assume !(#t~loopctr8160 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation work_init_3() returns (){
  loc6:
    ~ldv_work_3_0 := 0;
    ~ldv_work_3_1 := 0;
    ~ldv_work_3_2 := 0;
    ~ldv_work_3_3 := 0;
    assume true;
    return;
}

procedure work_init_3() returns ();
modifies ~ldv_work_3_0, ~ldv_work_3_1, ~ldv_work_3_2, ~ldv_work_3_3;

implementation ldv_mutex_unlock_dmaqueue_lock_of_saa7164_port(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc7:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    assume ~ldv_mutex_dmaqueue_lock_of_saa7164_port != 2;
    call ldv_error();
    return;
}

procedure ldv_mutex_unlock_dmaqueue_lock_of_saa7164_port(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ~ldv_mutex_dmaqueue_lock_of_saa7164_port;

implementation work_init_4() returns (){
  loc8:
    ~ldv_work_4_0 := 0;
    ~ldv_work_4_1 := 0;
    ~ldv_work_4_2 := 0;
    ~ldv_work_4_3 := 0;
    assume true;
    return;
}

procedure work_init_4() returns ();
modifies ~ldv_work_4_0, ~ldv_work_4_1, ~ldv_work_4_2, ~ldv_work_4_3;

implementation ldv_init_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~malloc8.base : int, #t~malloc8.offset : int;
    var ~size : int;
    var ~p~9.base : int, ~p~9.offset : int;
    var ~tmp~9.base : int, ~tmp~9.offset : int;

  loc9:
    ~size := #in~size;
    havoc ~p~9.base, ~p~9.offset;
    havoc ~tmp~9.base, ~tmp~9.offset;
    call #t~malloc8.base, #t~malloc8.offset := #Ultimate.alloc(1 * (if ~size % 4294967296 % 4294967296 <= 2147483647 then ~size % 4294967296 % 4294967296 else ~size % 4294967296 % 4294967296 - 4294967296));
    call #Ultimate.meminit(#t~malloc8.base, #t~malloc8.offset, 1, (if ~size % 4294967296 % 4294967296 <= 2147483647 then ~size % 4294967296 % 4294967296 else ~size % 4294967296 % 4294967296 - 4294967296), 1 * (if ~size % 4294967296 % 4294967296 <= 2147483647 then ~size % 4294967296 % 4294967296 else ~size % 4294967296 % 4294967296 - 4294967296));
    ~tmp~9.base, ~tmp~9.offset := #t~malloc8.base, #t~malloc8.offset;
    ~p~9.base, ~p~9.offset := ~tmp~9.base, ~tmp~9.offset;
    assume (~p~9.base + ~p~9.offset) % 18446744073709551616 != 0;
    #res.base, #res.offset := ~p~9.base, ~p~9.offset;
    assume true;
    return;
}

procedure ldv_init_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation main() returns (#res : int){
    var #t~ret1127.base : int, #t~ret1127.offset : int;
    var #t~ret1128.base : int, #t~ret1128.offset : int;
    var #t~ret1129.base : int, #t~ret1129.offset : int;
    var #t~ret1130.base : int, #t~ret1130.offset : int;
    var #t~ret1131.base : int, #t~ret1131.offset : int;
    var #t~ret1132.base : int, #t~ret1132.offset : int;
    var #t~nondet1133 : int;
    var #t~switch1134 : bool;
    var #t~nondet1135 : int;
    var #t~switch1136 : bool;
    var #t~ret1137 : int;
    var #t~ret1138 : int;
    var #t~nondet1139 : int;
    var #t~switch1140 : bool;
    var #t~ret1141 : int;
    var #t~mem1142 : int;
    var #t~ret1143 : int;
    var #t~mem1144 : int;
    var #t~mem1145 : int;
    var #t~ret1146 : ~loff_t;
    var #t~ret1147 : int;
    var #t~nondet1148 : int;
    var #t~switch1149 : bool;
    var #t~ret1150 : int;
    var ~ldvarg35~810.base : int, ~ldvarg35~810.offset : int;
    var ~tmp~810.base : int, ~tmp~810.offset : int;
    var ~#ldvarg48~810.base : int, ~#ldvarg48~810.offset : int;
    var ~#ldvarg51~810.base : int, ~#ldvarg51~810.offset : int;
    var ~ldvarg52~810.base : int, ~ldvarg52~810.offset : int;
    var ~tmp___0~810.base : int, ~tmp___0~810.offset : int;
    var ~#ldvarg49~810.base : int, ~#ldvarg49~810.offset : int;
    var ~ldvarg50~810.base : int, ~ldvarg50~810.offset : int;
    var ~tmp___1~810.base : int, ~tmp___1~810.offset : int;
    var ~tmp___2~810 : int;
    var ~tmp___3~810 : int;
    var ~tmp___4~810 : int;
    var ~tmp___5~810 : int;

  loc10:
    havoc ~ldvarg35~810.base, ~ldvarg35~810.offset;
    havoc ~tmp~810.base, ~tmp~810.offset;
    call ~#ldvarg48~810.base, ~#ldvarg48~810.offset := #Ultimate.alloc(4);
    call ~#ldvarg51~810.base, ~#ldvarg51~810.offset := #Ultimate.alloc(4);
    havoc ~ldvarg52~810.base, ~ldvarg52~810.offset;
    havoc ~tmp___0~810.base, ~tmp___0~810.offset;
    call ~#ldvarg49~810.base, ~#ldvarg49~810.offset := #Ultimate.alloc(8);
    havoc ~ldvarg50~810.base, ~ldvarg50~810.offset;
    havoc ~tmp___1~810.base, ~tmp___1~810.offset;
    havoc ~tmp___2~810;
    havoc ~tmp___3~810;
    havoc ~tmp___4~810;
    havoc ~tmp___5~810;
    call #t~ret1127.base, #t~ret1127.offset := ldv_init_zalloc(32);
    ~tmp~810.base, ~tmp~810.offset := #t~ret1127.base, #t~ret1127.offset;
    havoc #t~ret1127.base, #t~ret1127.offset;
    ~ldvarg35~810.base, ~ldvarg35~810.offset := ~tmp~810.base, ~tmp~810.offset;
    call #t~ret1128.base, #t~ret1128.offset := ldv_init_zalloc(1);
    ~tmp___0~810.base, ~tmp___0~810.offset := #t~ret1128.base, #t~ret1128.offset;
    havoc #t~ret1128.base, #t~ret1128.offset;
    ~ldvarg52~810.base, ~ldvarg52~810.offset := ~tmp___0~810.base, ~tmp___0~810.offset;
    call #t~ret1129.base, #t~ret1129.offset := ldv_init_zalloc(8);
    ~tmp___1~810.base, ~tmp___1~810.offset := #t~ret1129.base, #t~ret1129.offset;
    havoc #t~ret1129.base, #t~ret1129.offset;
    ~ldvarg50~810.base, ~ldvarg50~810.offset := ~tmp___1~810.base, ~tmp___1~810.offset;
    call ldv_initialize();
    call #t~ret1130.base, #t~ret1130.offset := ldv_memset(~#ldvarg48~810.base, ~#ldvarg48~810.offset, 0, 4);
    havoc #t~ret1130.base, #t~ret1130.offset;
    call #t~ret1131.base, #t~ret1131.offset := ldv_memset(~#ldvarg51~810.base, ~#ldvarg51~810.offset, 0, 8);
    havoc #t~ret1131.base, #t~ret1131.offset;
    call #t~ret1132.base, #t~ret1132.offset := ldv_memset(~#ldvarg49~810.base, ~#ldvarg49~810.offset, 0, 8);
    havoc #t~ret1132.base, #t~ret1132.offset;
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_11 := 0;
    call work_init_3();
    ~ldv_state_variable_3 := 1;
    ~ldv_state_variable_7 := 0;
    ~ldv_state_variable_9 := 0;
    ~ldv_state_variable_12 := 0;
    ~ldv_state_variable_2 := 1;
    ~ldv_state_variable_8 := 0;
    ~ldv_state_variable_1 := 1;
    call work_init_4();
    ~ldv_state_variable_4 := 1;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_10 := 0;
    call work_init_5();
    ~ldv_state_variable_5 := 1;
    assume -2147483648 <= #t~nondet1133 && #t~nondet1133 <= 2147483647;
    ~tmp___2~810 := #t~nondet1133;
    havoc #t~nondet1133;
    #t~switch1134 := ~tmp___2~810 == 0;
    assume !#t~switch1134;
    #t~switch1134 := #t~switch1134 || ~tmp___2~810 == 1;
    assume !#t~switch1134;
    #t~switch1134 := #t~switch1134 || ~tmp___2~810 == 2;
    assume #t~switch1134;
    assume ~ldv_state_variable_3 != 0;
    call invoke_work_3();
    return;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_6, ~ldv_state_variable_11, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_9, ~ldv_state_variable_12, ~ldv_state_variable_2, ~ldv_state_variable_8, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_10, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_3, ~ldv_retval_4, #valid, #length, ~ldv_work_3_0, ~ldv_work_3_1, ~ldv_work_3_2, ~ldv_work_3_3, ~vbi_fops_group0.base, ~vbi_fops_group0.offset, ~ldv_work_5_0, ~ldv_work_5_1, ~ldv_work_5_2, ~ldv_work_5_3, ~ldv_work_4_0, ~ldv_work_4_1, ~ldv_work_4_2, ~ldv_work_4_3, ~mpeg_fops_group0.base, ~mpeg_fops_group0.offset, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~vbi_ioctl_ops_group2.base, ~vbi_ioctl_ops_group2.offset, ~vbi_ioctl_ops_group1.base, ~vbi_ioctl_ops_group1.offset, ~vbi_ioctl_ops_group0.base, ~vbi_ioctl_ops_group0.offset, ~vbi_ioctl_ops_group3.base, ~vbi_ioctl_ops_group3.offset, ~saa7164_i2c_algo_template_group0.base, ~saa7164_i2c_algo_template_group0.offset, ~mpeg_ioctl_ops_group2.base, ~mpeg_ioctl_ops_group2.offset, ~mpeg_ioctl_ops_group1.base, ~mpeg_ioctl_ops_group1.offset, ~mpeg_ioctl_ops_group0.base, ~mpeg_ioctl_ops_group0.offset, ~mpeg_ioctl_ops_group3.base, ~mpeg_ioctl_ops_group3.offset, ~saa7164_proc_fops_group1.base, ~saa7164_proc_fops_group1.offset, ~saa7164_proc_fops_group2.base, ~saa7164_proc_fops_group2.offset, ~saa7164_pci_driver_group1.base, ~saa7164_pci_driver_group1.offset, ~ldv_mutex_dmaqueue_lock_of_saa7164_port, ~print_histogram, ~ldv_mutex_lock_of_saa7164_dev, ~ldv_mutex_lock_of_tmComResBusInfo, ~saa_debug, ~ldv_work_struct_3_0.base, ~ldv_work_struct_3_0.offset, ~ldv_work_struct_3_1.base, ~ldv_work_struct_3_1.offset, ~ldv_work_struct_3_2.base, ~ldv_work_struct_3_2.offset, ~ldv_work_struct_3_3.base, ~ldv_work_struct_3_3.offset, ~LDV_IN_INTERRUPT, ~ldv_irq_1_0, ~ldv_irq_2_0, ~ldv_mutex_lock_of_cmd, ~encoder_buffers, ~ldv_retval_2, ~vbi_buffers, ~ldv_retval_1, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~ldv_mutex_devlist, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~saa7164_devcount;

implementation work_init_5() returns (){
  loc11:
    ~ldv_work_5_0 := 0;
    ~ldv_work_5_1 := 0;
    ~ldv_work_5_2 := 0;
    ~ldv_work_5_3 := 0;
    assume true;
    return;
}

procedure work_init_5() returns ();
modifies ~ldv_work_5_0, ~ldv_work_5_1, ~ldv_work_5_2, ~ldv_work_5_3;

implementation ULTIMATE.init() returns (){
    var #t~nondet18.base : int, #t~nondet18.offset : int;
    var #t~nondet19.base : int, #t~nondet19.offset : int;
    var #t~nondet20.base : int, #t~nondet20.offset : int;
    var #t~nondet21.base : int, #t~nondet21.offset : int;
    var #t~nondet22.base : int, #t~nondet22.offset : int;
    var #t~nondet23.base : int, #t~nondet23.offset : int;
    var #t~nondet24.base : int, #t~nondet24.offset : int;
    var #t~nondet25.base : int, #t~nondet25.offset : int;
    var #t~nondet26.base : int, #t~nondet26.offset : int;
    var #t~nondet27.base : int, #t~nondet27.offset : int;
    var #t~nondet28.base : int, #t~nondet28.offset : int;
    var #t~nondet29.base : int, #t~nondet29.offset : int;
    var #t~nondet30.base : int, #t~nondet30.offset : int;
    var #t~nondet31.base : int, #t~nondet31.offset : int;
    var #t~nondet32.base : int, #t~nondet32.offset : int;
    var #t~nondet33.base : int, #t~nondet33.offset : int;
    var #t~nondet34.base : int, #t~nondet34.offset : int;
    var #t~nondet35.base : int, #t~nondet35.offset : int;
    var #t~nondet36.base : int, #t~nondet36.offset : int;
    var #t~nondet37.base : int, #t~nondet37.offset : int;
    var #t~nondet38.base : int, #t~nondet38.offset : int;
    var #t~nondet39.base : int, #t~nondet39.offset : int;
    var #t~nondet40.base : int, #t~nondet40.offset : int;
    var #t~nondet41.base : int, #t~nondet41.offset : int;
    var #t~nondet42.base : int, #t~nondet42.offset : int;
    var #t~nondet43.base : int, #t~nondet43.offset : int;
    var #t~nondet44.base : int, #t~nondet44.offset : int;
    var #t~nondet45.base : int, #t~nondet45.offset : int;
    var #t~nondet46.base : int, #t~nondet46.offset : int;
    var #t~nondet47.base : int, #t~nondet47.offset : int;
    var #t~nondet48.base : int, #t~nondet48.offset : int;
    var #t~nondet49.base : int, #t~nondet49.offset : int;
    var #t~nondet50.base : int, #t~nondet50.offset : int;
    var #t~nondet51.base : int, #t~nondet51.offset : int;
    var #t~nondet52.base : int, #t~nondet52.offset : int;
    var #t~nondet53.base : int, #t~nondet53.offset : int;
    var #t~nondet54.base : int, #t~nondet54.offset : int;
    var #t~nondet55.base : int, #t~nondet55.offset : int;
    var #t~nondet56.base : int, #t~nondet56.offset : int;
    var #t~nondet57.base : int, #t~nondet57.offset : int;
    var #t~nondet58.base : int, #t~nondet58.offset : int;
    var #t~nondet59.base : int, #t~nondet59.offset : int;
    var #t~nondet60.base : int, #t~nondet60.offset : int;
    var #t~nondet61.base : int, #t~nondet61.offset : int;
    var #t~nondet62.base : int, #t~nondet62.offset : int;
    var #t~nondet63.base : int, #t~nondet63.offset : int;
    var #t~nondet64.base : int, #t~nondet64.offset : int;
    var #t~nondet65.base : int, #t~nondet65.offset : int;
    var #t~nondet66.base : int, #t~nondet66.offset : int;
    var #t~nondet67.base : int, #t~nondet67.offset : int;
    var #t~nondet68.base : int, #t~nondet68.offset : int;
    var #t~nondet69.base : int, #t~nondet69.offset : int;
    var #t~nondet70.base : int, #t~nondet70.offset : int;
    var #t~nondet71.base : int, #t~nondet71.offset : int;
    var #t~nondet72.base : int, #t~nondet72.offset : int;
    var #t~nondet73.base : int, #t~nondet73.offset : int;
    var #t~nondet74.base : int, #t~nondet74.offset : int;
    var #t~nondet75.base : int, #t~nondet75.offset : int;
    var #t~nondet76.base : int, #t~nondet76.offset : int;
    var #t~nondet77.base : int, #t~nondet77.offset : int;
    var #t~nondet78.base : int, #t~nondet78.offset : int;
    var #t~nondet79.base : int, #t~nondet79.offset : int;
    var #t~nondet80.base : int, #t~nondet80.offset : int;
    var #t~nondet81.base : int, #t~nondet81.offset : int;
    var #t~nondet82.base : int, #t~nondet82.offset : int;
    var #t~nondet83.base : int, #t~nondet83.offset : int;
    var #t~nondet84.base : int, #t~nondet84.offset : int;
    var #t~nondet85.base : int, #t~nondet85.offset : int;
    var #t~nondet86.base : int, #t~nondet86.offset : int;
    var #t~nondet87.base : int, #t~nondet87.offset : int;
    var #t~nondet88.base : int, #t~nondet88.offset : int;
    var #t~nondet89.base : int, #t~nondet89.offset : int;
    var #t~nondet90.base : int, #t~nondet90.offset : int;
    var #t~nondet91.base : int, #t~nondet91.offset : int;
    var #t~nondet92.base : int, #t~nondet92.offset : int;
    var #t~nondet93.base : int, #t~nondet93.offset : int;
    var #t~nondet94.base : int, #t~nondet94.offset : int;
    var #t~nondet95.base : int, #t~nondet95.offset : int;
    var #t~nondet96.base : int, #t~nondet96.offset : int;
    var #t~nondet97.base : int, #t~nondet97.offset : int;
    var #t~nondet98.base : int, #t~nondet98.offset : int;
    var #t~nondet302.base : int, #t~nondet302.offset : int;
    var #t~union8084.__padding : [int]int, #t~union8084.dep_map.key.base : int, #t~union8084.dep_map.key.offset : int, #t~union8084.dep_map.class_cache.base : [int]int, #t~union8084.dep_map.class_cache.offset : [int]int, #t~union8084.dep_map.name.base : int, #t~union8084.dep_map.name.offset : int, #t~union8084.dep_map.cpu : int, #t~union8084.dep_map.ip : int;
    var #t~nondet303.base : int, #t~nondet303.offset : int;
    var #t~nondet1091.base : int, #t~nondet1091.offset : int;
    var #t~union8085.__padding : [int]int, #t~union8085.dep_map.key.base : int, #t~union8085.dep_map.key.offset : int, #t~union8085.dep_map.class_cache.base : [int]int, #t~union8085.dep_map.class_cache.offset : [int]int, #t~union8085.dep_map.name.base : int, #t~union8085.dep_map.name.offset : int, #t~union8085.dep_map.cpu : int, #t~union8085.dep_map.ip : int;
    var #t~init8086.base : [int]int, #t~init8086.offset : [int]int;
    var #t~init8087.base : [int]int, #t~init8087.offset : [int]int;
    var #t~init8088 : [int]int;
    var #t~init8089.base : [int]int, #t~init8089.offset : [int]int;
    var #t~init8091.base : [int]int, #t~init8091.offset : [int]int;
    var #t~union8090.raw_lock.val.counter : int, #t~union8090.magic : int, #t~union8090.owner_cpu : int, #t~union8090.owner.base : int, #t~union8090.owner.offset : int, #t~union8090.dep_map.key.base : int, #t~union8090.dep_map.key.offset : int, #t~union8090.dep_map.class_cache.base : [int]int, #t~union8090.dep_map.class_cache.offset : [int]int, #t~union8090.dep_map.name.base : int, #t~union8090.dep_map.name.offset : int, #t~union8090.dep_map.cpu : int, #t~union8090.dep_map.ip : int;
    var #t~union8092.__padding : [int]int, #t~union8092.dep_map.key.base : int, #t~union8092.dep_map.key.offset : int, #t~union8092.dep_map.class_cache.base : [int]int, #t~union8092.dep_map.class_cache.offset : [int]int, #t~union8092.dep_map.name.base : int, #t~union8092.dep_map.name.offset : int, #t~union8092.dep_map.cpu : int, #t~union8092.dep_map.ip : int;
    var #t~init8093.base : [int]int, #t~init8093.offset : [int]int;
    var #t~init8095.base : [int]int, #t~init8095.offset : [int]int;
    var #t~union8094.raw_lock.val.counter : int, #t~union8094.magic : int, #t~union8094.owner_cpu : int, #t~union8094.owner.base : int, #t~union8094.owner.offset : int, #t~union8094.dep_map.key.base : int, #t~union8094.dep_map.key.offset : int, #t~union8094.dep_map.class_cache.base : [int]int, #t~union8094.dep_map.class_cache.offset : [int]int, #t~union8094.dep_map.name.base : int, #t~union8094.dep_map.name.offset : int, #t~union8094.dep_map.cpu : int, #t~union8094.dep_map.ip : int;
    var #t~union8096.__padding : [int]int, #t~union8096.dep_map.key.base : int, #t~union8096.dep_map.key.offset : int, #t~union8096.dep_map.class_cache.base : [int]int, #t~union8096.dep_map.class_cache.offset : [int]int, #t~union8096.dep_map.name.base : int, #t~union8096.dep_map.name.offset : int, #t~union8096.dep_map.cpu : int, #t~union8096.dep_map.ip : int;
    var #t~init8098.base : [int]int, #t~init8098.offset : [int]int;
    var #t~union8097.raw_lock.val.counter : int, #t~union8097.magic : int, #t~union8097.owner_cpu : int, #t~union8097.owner.base : int, #t~union8097.owner.offset : int, #t~union8097.dep_map.key.base : int, #t~union8097.dep_map.key.offset : int, #t~union8097.dep_map.class_cache.base : [int]int, #t~union8097.dep_map.class_cache.offset : [int]int, #t~union8097.dep_map.name.base : int, #t~union8097.dep_map.name.offset : int, #t~union8097.dep_map.cpu : int, #t~union8097.dep_map.ip : int;
    var #t~union8099.__padding : [int]int, #t~union8099.dep_map.key.base : int, #t~union8099.dep_map.key.offset : int, #t~union8099.dep_map.class_cache.base : [int]int, #t~union8099.dep_map.class_cache.offset : [int]int, #t~union8099.dep_map.name.base : int, #t~union8099.dep_map.name.offset : int, #t~union8099.dep_map.cpu : int, #t~union8099.dep_map.ip : int;
    var #t~init8100 : [int]int;
    var #t~init8101.base : [int]int, #t~init8101.offset : [int]int;
    var #t~init8102.base : [int]int, #t~init8102.offset : [int]int;
    var #t~init8104.base : [int]int, #t~init8104.offset : [int]int;
    var #t~union8103.raw_lock.val.counter : int, #t~union8103.magic : int, #t~union8103.owner_cpu : int, #t~union8103.owner.base : int, #t~union8103.owner.offset : int, #t~union8103.dep_map.key.base : int, #t~union8103.dep_map.key.offset : int, #t~union8103.dep_map.class_cache.base : [int]int, #t~union8103.dep_map.class_cache.offset : [int]int, #t~union8103.dep_map.name.base : int, #t~union8103.dep_map.name.offset : int, #t~union8103.dep_map.cpu : int, #t~union8103.dep_map.ip : int;
    var #t~union8105.__padding : [int]int, #t~union8105.dep_map.key.base : int, #t~union8105.dep_map.key.offset : int, #t~union8105.dep_map.class_cache.base : [int]int, #t~union8105.dep_map.class_cache.offset : [int]int, #t~union8105.dep_map.name.base : int, #t~union8105.dep_map.name.offset : int, #t~union8105.dep_map.cpu : int, #t~union8105.dep_map.ip : int;
    var #t~init8107.base : [int]int, #t~init8107.offset : [int]int;
    var #t~union8106.raw_lock.val.counter : int, #t~union8106.magic : int, #t~union8106.owner_cpu : int, #t~union8106.owner.base : int, #t~union8106.owner.offset : int, #t~union8106.dep_map.key.base : int, #t~union8106.dep_map.key.offset : int, #t~union8106.dep_map.class_cache.base : [int]int, #t~union8106.dep_map.class_cache.offset : [int]int, #t~union8106.dep_map.name.base : int, #t~union8106.dep_map.name.offset : int, #t~union8106.dep_map.cpu : int, #t~union8106.dep_map.ip : int;
    var #t~union8108.__padding : [int]int, #t~union8108.dep_map.key.base : int, #t~union8108.dep_map.key.offset : int, #t~union8108.dep_map.class_cache.base : [int]int, #t~union8108.dep_map.class_cache.offset : [int]int, #t~union8108.dep_map.name.base : int, #t~union8108.dep_map.name.offset : int, #t~union8108.dep_map.cpu : int, #t~union8108.dep_map.ip : int;
    var #t~init8109 : [int]int;
    var #t~init8111.base : [int]int, #t~init8111.offset : [int]int;
    var #t~union8110.raw_lock.val.counter : int, #t~union8110.magic : int, #t~union8110.owner_cpu : int, #t~union8110.owner.base : int, #t~union8110.owner.offset : int, #t~union8110.dep_map.key.base : int, #t~union8110.dep_map.key.offset : int, #t~union8110.dep_map.class_cache.base : [int]int, #t~union8110.dep_map.class_cache.offset : [int]int, #t~union8110.dep_map.name.base : int, #t~union8110.dep_map.name.offset : int, #t~union8110.dep_map.cpu : int, #t~union8110.dep_map.ip : int;
    var #t~union8112.__padding : [int]int, #t~union8112.dep_map.key.base : int, #t~union8112.dep_map.key.offset : int, #t~union8112.dep_map.class_cache.base : [int]int, #t~union8112.dep_map.class_cache.offset : [int]int, #t~union8112.dep_map.name.base : int, #t~union8112.dep_map.name.offset : int, #t~union8112.dep_map.cpu : int, #t~union8112.dep_map.ip : int;
    var #t~init8114.base : [int]int, #t~init8114.offset : [int]int;
    var #t~union8113.raw_lock.val.counter : int, #t~union8113.magic : int, #t~union8113.owner_cpu : int, #t~union8113.owner.base : int, #t~union8113.owner.offset : int, #t~union8113.dep_map.key.base : int, #t~union8113.dep_map.key.offset : int, #t~union8113.dep_map.class_cache.base : [int]int, #t~union8113.dep_map.class_cache.offset : [int]int, #t~union8113.dep_map.name.base : int, #t~union8113.dep_map.name.offset : int, #t~union8113.dep_map.cpu : int, #t~union8113.dep_map.ip : int;
    var #t~union8115.__padding : [int]int, #t~union8115.dep_map.key.base : int, #t~union8115.dep_map.key.offset : int, #t~union8115.dep_map.class_cache.base : [int]int, #t~union8115.dep_map.class_cache.offset : [int]int, #t~union8115.dep_map.name.base : int, #t~union8115.dep_map.name.offset : int, #t~union8115.dep_map.cpu : int, #t~union8115.dep_map.ip : int;
    var #t~init8116.base : [int]int, #t~init8116.offset : [int]int;
    var #t~init8117 : [int]int;
    var #t~init8118.base : [int]int, #t~init8118.offset : [int]int;
    var #t~init8119 : [int]int;
    var #t~init8120.base : [int]int, #t~init8120.offset : [int]int;
    var #t~init8122.base : [int]int, #t~init8122.offset : [int]int;
    var #t~union8121.raw_lock.val.counter : int, #t~union8121.magic : int, #t~union8121.owner_cpu : int, #t~union8121.owner.base : int, #t~union8121.owner.offset : int, #t~union8121.dep_map.key.base : int, #t~union8121.dep_map.key.offset : int, #t~union8121.dep_map.class_cache.base : [int]int, #t~union8121.dep_map.class_cache.offset : [int]int, #t~union8121.dep_map.name.base : int, #t~union8121.dep_map.name.offset : int, #t~union8121.dep_map.cpu : int, #t~union8121.dep_map.ip : int;
    var #t~union8123.__padding : [int]int, #t~union8123.dep_map.key.base : int, #t~union8123.dep_map.key.offset : int, #t~union8123.dep_map.class_cache.base : [int]int, #t~union8123.dep_map.class_cache.offset : [int]int, #t~union8123.dep_map.name.base : int, #t~union8123.dep_map.name.offset : int, #t~union8123.dep_map.cpu : int, #t~union8123.dep_map.ip : int;
    var #t~init8124.base : [int]int, #t~init8124.offset : [int]int;
    var #t~init8126.base : [int]int, #t~init8126.offset : [int]int;
    var #t~union8125.raw_lock.val.counter : int, #t~union8125.magic : int, #t~union8125.owner_cpu : int, #t~union8125.owner.base : int, #t~union8125.owner.offset : int, #t~union8125.dep_map.key.base : int, #t~union8125.dep_map.key.offset : int, #t~union8125.dep_map.class_cache.base : [int]int, #t~union8125.dep_map.class_cache.offset : [int]int, #t~union8125.dep_map.name.base : int, #t~union8125.dep_map.name.offset : int, #t~union8125.dep_map.cpu : int, #t~union8125.dep_map.ip : int;
    var #t~union8127.__padding : [int]int, #t~union8127.dep_map.key.base : int, #t~union8127.dep_map.key.offset : int, #t~union8127.dep_map.class_cache.base : [int]int, #t~union8127.dep_map.class_cache.offset : [int]int, #t~union8127.dep_map.name.base : int, #t~union8127.dep_map.name.offset : int, #t~union8127.dep_map.cpu : int, #t~union8127.dep_map.ip : int;
    var #t~init8129.base : [int]int, #t~init8129.offset : [int]int;
    var #t~union8128.raw_lock.val.counter : int, #t~union8128.magic : int, #t~union8128.owner_cpu : int, #t~union8128.owner.base : int, #t~union8128.owner.offset : int, #t~union8128.dep_map.key.base : int, #t~union8128.dep_map.key.offset : int, #t~union8128.dep_map.class_cache.base : [int]int, #t~union8128.dep_map.class_cache.offset : [int]int, #t~union8128.dep_map.name.base : int, #t~union8128.dep_map.name.offset : int, #t~union8128.dep_map.cpu : int, #t~union8128.dep_map.ip : int;
    var #t~union8130.__padding : [int]int, #t~union8130.dep_map.key.base : int, #t~union8130.dep_map.key.offset : int, #t~union8130.dep_map.class_cache.base : [int]int, #t~union8130.dep_map.class_cache.offset : [int]int, #t~union8130.dep_map.name.base : int, #t~union8130.dep_map.name.offset : int, #t~union8130.dep_map.cpu : int, #t~union8130.dep_map.ip : int;
    var #t~init8131 : [int]int;
    var #t~init8132.base : [int]int, #t~init8132.offset : [int]int;
    var #t~init8133.base : [int]int, #t~init8133.offset : [int]int;
    var #t~init8135.base : [int]int, #t~init8135.offset : [int]int;
    var #t~union8134.raw_lock.val.counter : int, #t~union8134.magic : int, #t~union8134.owner_cpu : int, #t~union8134.owner.base : int, #t~union8134.owner.offset : int, #t~union8134.dep_map.key.base : int, #t~union8134.dep_map.key.offset : int, #t~union8134.dep_map.class_cache.base : [int]int, #t~union8134.dep_map.class_cache.offset : [int]int, #t~union8134.dep_map.name.base : int, #t~union8134.dep_map.name.offset : int, #t~union8134.dep_map.cpu : int, #t~union8134.dep_map.ip : int;
    var #t~union8136.__padding : [int]int, #t~union8136.dep_map.key.base : int, #t~union8136.dep_map.key.offset : int, #t~union8136.dep_map.class_cache.base : [int]int, #t~union8136.dep_map.class_cache.offset : [int]int, #t~union8136.dep_map.name.base : int, #t~union8136.dep_map.name.offset : int, #t~union8136.dep_map.cpu : int, #t~union8136.dep_map.ip : int;
    var #t~init8138.base : [int]int, #t~init8138.offset : [int]int;
    var #t~union8137.raw_lock.val.counter : int, #t~union8137.magic : int, #t~union8137.owner_cpu : int, #t~union8137.owner.base : int, #t~union8137.owner.offset : int, #t~union8137.dep_map.key.base : int, #t~union8137.dep_map.key.offset : int, #t~union8137.dep_map.class_cache.base : [int]int, #t~union8137.dep_map.class_cache.offset : [int]int, #t~union8137.dep_map.name.base : int, #t~union8137.dep_map.name.offset : int, #t~union8137.dep_map.cpu : int, #t~union8137.dep_map.ip : int;
    var #t~union8139.__padding : [int]int, #t~union8139.dep_map.key.base : int, #t~union8139.dep_map.key.offset : int, #t~union8139.dep_map.class_cache.base : [int]int, #t~union8139.dep_map.class_cache.offset : [int]int, #t~union8139.dep_map.name.base : int, #t~union8139.dep_map.name.offset : int, #t~union8139.dep_map.cpu : int, #t~union8139.dep_map.ip : int;
    var #t~union8140.__padding : [int]int, #t~union8140.dep_map.key.base : int, #t~union8140.dep_map.key.offset : int, #t~union8140.dep_map.class_cache.base : [int]int, #t~union8140.dep_map.class_cache.offset : [int]int, #t~union8140.dep_map.name.base : int, #t~union8140.dep_map.name.offset : int, #t~union8140.dep_map.cpu : int, #t~union8140.dep_map.ip : int;
    var #t~union8141.__padding : [int]int, #t~union8141.dep_map.key.base : int, #t~union8141.dep_map.key.offset : int, #t~union8141.dep_map.class_cache.base : [int]int, #t~union8141.dep_map.class_cache.offset : [int]int, #t~union8141.dep_map.name.base : int, #t~union8141.dep_map.name.offset : int, #t~union8141.dep_map.cpu : int, #t~union8141.dep_map.ip : int;
    var #t~union8142.__padding : [int]int, #t~union8142.dep_map.key.base : int, #t~union8142.dep_map.key.offset : int, #t~union8142.dep_map.class_cache.base : [int]int, #t~union8142.dep_map.class_cache.offset : [int]int, #t~union8142.dep_map.name.base : int, #t~union8142.dep_map.name.offset : int, #t~union8142.dep_map.cpu : int, #t~union8142.dep_map.ip : int;
    var #t~union8143.__padding : [int]int, #t~union8143.dep_map.key.base : int, #t~union8143.dep_map.key.offset : int, #t~union8143.dep_map.class_cache.base : [int]int, #t~union8143.dep_map.class_cache.offset : [int]int, #t~union8143.dep_map.name.base : int, #t~union8143.dep_map.name.offset : int, #t~union8143.dep_map.cpu : int, #t~union8143.dep_map.ip : int;
    var #t~union8144.__padding : [int]int, #t~union8144.dep_map.key.base : int, #t~union8144.dep_map.key.offset : int, #t~union8144.dep_map.class_cache.base : [int]int, #t~union8144.dep_map.class_cache.offset : [int]int, #t~union8144.dep_map.name.base : int, #t~union8144.dep_map.name.offset : int, #t~union8144.dep_map.cpu : int, #t~union8144.dep_map.ip : int;
    var #t~union8145.__padding : [int]int, #t~union8145.dep_map.key.base : int, #t~union8145.dep_map.key.offset : int, #t~union8145.dep_map.class_cache.base : [int]int, #t~union8145.dep_map.class_cache.offset : [int]int, #t~union8145.dep_map.name.base : int, #t~union8145.dep_map.name.offset : int, #t~union8145.dep_map.cpu : int, #t~union8145.dep_map.ip : int;
    var #t~union8146.__padding : [int]int, #t~union8146.dep_map.key.base : int, #t~union8146.dep_map.key.offset : int, #t~union8146.dep_map.class_cache.base : [int]int, #t~union8146.dep_map.class_cache.offset : [int]int, #t~union8146.dep_map.name.base : int, #t~union8146.dep_map.name.offset : int, #t~union8146.dep_map.cpu : int, #t~union8146.dep_map.ip : int;
    var #t~union8147.__padding : [int]int, #t~union8147.dep_map.key.base : int, #t~union8147.dep_map.key.offset : int, #t~union8147.dep_map.class_cache.base : [int]int, #t~union8147.dep_map.class_cache.offset : [int]int, #t~union8147.dep_map.name.base : int, #t~union8147.dep_map.name.offset : int, #t~union8147.dep_map.cpu : int, #t~union8147.dep_map.ip : int;
    var #t~union8148.__padding : [int]int, #t~union8148.dep_map.key.base : int, #t~union8148.dep_map.key.offset : int, #t~union8148.dep_map.class_cache.base : [int]int, #t~union8148.dep_map.class_cache.offset : [int]int, #t~union8148.dep_map.name.base : int, #t~union8148.dep_map.name.offset : int, #t~union8148.dep_map.cpu : int, #t~union8148.dep_map.ip : int;
    var #t~union8149.__padding : [int]int, #t~union8149.dep_map.key.base : int, #t~union8149.dep_map.key.offset : int, #t~union8149.dep_map.class_cache.base : [int]int, #t~union8149.dep_map.class_cache.offset : [int]int, #t~union8149.dep_map.name.base : int, #t~union8149.dep_map.name.offset : int, #t~union8149.dep_map.cpu : int, #t~union8149.dep_map.ip : int;
    var #t~union8150.__padding : [int]int, #t~union8150.dep_map.key.base : int, #t~union8150.dep_map.key.offset : int, #t~union8150.dep_map.class_cache.base : [int]int, #t~union8150.dep_map.class_cache.offset : [int]int, #t~union8150.dep_map.name.base : int, #t~union8150.dep_map.name.offset : int, #t~union8150.dep_map.cpu : int, #t~union8150.dep_map.ip : int;
    var #t~union8151.__padding : [int]int, #t~union8151.dep_map.key.base : int, #t~union8151.dep_map.key.offset : int, #t~union8151.dep_map.class_cache.base : [int]int, #t~union8151.dep_map.class_cache.offset : [int]int, #t~union8151.dep_map.name.base : int, #t~union8151.dep_map.name.offset : int, #t~union8151.dep_map.cpu : int, #t~union8151.dep_map.ip : int;

  loc12:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_irq_2_0 := 0;
    ~ldv_irq_2_2 := 0;
    ~ldv_irq_2_1 := 0;
    ~ldv_irq_1_3 := 0;
    ~ldv_irq_1_0 := 0;
    ~ldv_irq_1_2 := 0;
    ~LDV_IN_INTERRUPT := 1;
    ~ldv_irq_1_1 := 0;
    ~ldv_irq_2_3 := 0;
    ~saa7164_bcount := 14;
    ~saa7164_idcount := 13;
    ~ldv_state_variable_8 := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_state_variable_5 := 0;
    ~ldv_state_variable_12 := 0;
    ~ldv_work_3_2 := 0;
    ~ldv_work_3_0 := 0;
    ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset := 0, 0;
    ~ldv_state_variable_9 := 0;
    ~ldv_irq_line_2_0 := 0;
    ~ref_cnt := 0;
    ~ldv_irq_line_1_1 := 0;
    ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset := 0, 0;
    ~ldv_work_3_3 := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_work_5_3 := 0;
    ~ldv_irq_line_1_2 := 0;
    ~ldv_irq_line_2_3 := 0;
    ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset := 0, 0;
    ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset := 0, 0;
    ~ldv_irq_line_2_2 := 0;
    ~ldv_state_variable_10 := 0;
    ~ldv_work_4_0 := 0;
    ~ldv_state_variable_6 := 0;
    ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset := 0, 0;
    ~ldv_work_4_1 := 0;
    ~ldv_work_4_3 := 0;
    ~ldv_work_3_1 := 0;
    ~ldv_irq_line_2_1 := 0;
    ~ldv_work_5_0 := 0;
    ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset := 0, 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_work_5_1 := 0;
    ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset := 0, 0;
    ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset := 0, 0;
    ~ldv_work_4_2 := 0;
    ~ldv_state_variable_11 := 0;
    ~ldv_irq_line_1_3 := 0;
    ~ldv_work_5_2 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_irq_line_1_0 := 0;
    ~ldv_state_variable_4 := 0;
    ~saa_debug := 0;
    ~fw_debug := 0;
    ~encoder_buffers := 64;
    ~vbi_buffers := 64;
    ~waitsecs := 10;
    ~card := ~card[0 := 4294967295];
    ~card := ~card[1 := 4294967295];
    ~card := ~card[2 := 4294967295];
    ~card := ~card[3 := 4294967295];
    ~card := ~card[4 := 4294967295];
    ~card := ~card[5 := 4294967295];
    ~card := ~card[6 := 4294967295];
    ~card := ~card[7 := 4294967295];
    ~print_histogram := 64;
    ~crc_checking := 1;
    ~guard_checking := 1;
    ~saa7164_devcount := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_4 := 0;
    ~ldv_retval_3 := 0;
    call ~#adapter_nr.base, ~#adapter_nr.offset := #Ultimate.alloc(16);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 0, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 2, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 4, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 6, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 8, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 10, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 12, 2);
    call write~int(-1, ~#adapter_nr.base, ~#adapter_nr.offset + 14, 2);
    ~ldv_retval_2 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_mutex_devlist := 1;
    ~ldv_mutex_dmaqueue_lock_of_saa7164_port := 1;
    ~ldv_mutex_i_mutex_of_inode := 1;
    ~ldv_mutex_lock := 1;
    ~ldv_mutex_lock_of_cmd := 1;
    ~ldv_mutex_lock_of_saa7164_dev := 1;
    ~ldv_mutex_lock_of_saa7164_dvb := 1;
    ~ldv_mutex_lock_of_tmComResBusInfo := 1;
    ~ldv_mutex_mutex_of_device := 1;
    ~ldv_mutex_vb_lock_of_videobuf_queue := 1;
    call ~#saa7164_boards.base, ~#saa7164_boards.offset := #Ultimate.alloc(2632);
    call #t~nondet18.base, #t~nondet18.offset := #Ultimate.alloc(8);
    call write~$Pointer$(#t~nondet18.base, #t~nondet18.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 0, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 8, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 12, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 16, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 20, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 24, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 28, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 32, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 0 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 0 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 0 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 0 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 0 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 19 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 19 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 19 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 19 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 19 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 19 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 38 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 38 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 38 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 38 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 38 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 38 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 57 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 57 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 57 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 57 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 57 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 57 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 76 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 76 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 76 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 76 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 76 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 76 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 95 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 95 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 95 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 95 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 95 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 95 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 114 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 114 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 114 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 114 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 114 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 0 + 36 + 133 + 18, 1);
    call #t~nondet19.base, #t~nondet19.offset := #Ultimate.alloc(13);
    call write~$Pointer$(#t~nondet19.base, #t~nondet19.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 0, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 8, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 12, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 16, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 20, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 24, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 28, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 32, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 0 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 0 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 0 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 0 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 0 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 19 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 19 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 19 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 19 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 19 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 19 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 38 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 38 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 38 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 38 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 38 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 38 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 57 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 57 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 57 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 57 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 57 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 57 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 76 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 76 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 76 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 76 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 76 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 76 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 95 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 95 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 95 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 95 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 95 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 95 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 114 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 114 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 114 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 114 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 114 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 188 + 36 + 133 + 18, 1);
    call #t~nondet20.base, #t~nondet20.offset := #Ultimate.alloc(13);
    call write~$Pointer$(#t~nondet20.base, #t~nondet20.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 0, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 8, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 12, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 16, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 20, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 24, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 28, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 32, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 0 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 0 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 0 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 0 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 0 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 19 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 19 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 19 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 19 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 19 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 19 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 38 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 38 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 38 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 38 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 38 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 38 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 57 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 57 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 57 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 57 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 57 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 57 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 76 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 76 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 76 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 76 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 76 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 76 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 95 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 95 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 95 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 95 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 95 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 95 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 114 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 114 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 114 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 114 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 114 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 376 + 36 + 133 + 18, 1);
    call #t~nondet21.base, #t~nondet21.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet21.base, #t~nondet21.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 0, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 8, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 12, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 16, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 20, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 24, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 28, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 32, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 0 + 0, 4);
    call write~int(34, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 0 + 4, 1);
    call #t~nondet22.base, #t~nondet22.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet22.base, #t~nondet22.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 0 + 13, 4);
    call write~int(80, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 0 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 0 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 19 + 0, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 19 + 4, 1);
    call #t~nondet23.base, #t~nondet23.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet23.base, #t~nondet23.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 19 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 19 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 19 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 19 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 38 + 0, 4);
    call write~int(7, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 38 + 4, 1);
    call #t~nondet24.base, #t~nondet24.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet24.base, #t~nondet24.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 38 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 38 + 13, 4);
    call write~int(25, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 38 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 38 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 57 + 0, 4);
    call write~int(8, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 57 + 4, 1);
    call #t~nondet25.base, #t~nondet25.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet25.base, #t~nondet25.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 57 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 57 + 13, 4);
    call write~int(26, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 57 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 57 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 76 + 0, 4);
    call write~int(30, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 76 + 4, 1);
    call #t~nondet26.base, #t~nondet26.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet26.base, #t~nondet26.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 76 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 76 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 76 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 76 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 95 + 0, 4);
    call write~int(32, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 95 + 4, 1);
    call #t~nondet27.base, #t~nondet27.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet27.base, #t~nondet27.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 95 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 95 + 13, 4);
    call write~int(25, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 95 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 95 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 114 + 0, 4);
    call write~int(35, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 114 + 4, 1);
    call #t~nondet28.base, #t~nondet28.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet28.base, #t~nondet28.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 114 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 114 + 13, 4);
    call write~int(26, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 114 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 564 + 36 + 133 + 18, 1);
    call #t~nondet29.base, #t~nondet29.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet29.base, #t~nondet29.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 0, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 8, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 12, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 16, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 20, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 24, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 28, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 32, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 0 + 0, 4);
    call write~int(29, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 0 + 4, 1);
    call #t~nondet30.base, #t~nondet30.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet30.base, #t~nondet30.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 0 + 13, 4);
    call write~int(80, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 0 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 0 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 19 + 0, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 19 + 4, 1);
    call #t~nondet31.base, #t~nondet31.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet31.base, #t~nondet31.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 19 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 19 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 19 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 19 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 38 + 0, 4);
    call write~int(27, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 38 + 4, 1);
    call #t~nondet32.base, #t~nondet32.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet32.base, #t~nondet32.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 38 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 38 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 38 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 38 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 57 + 0, 4);
    call write~int(30, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 57 + 4, 1);
    call #t~nondet33.base, #t~nondet33.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet33.base, #t~nondet33.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 57 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 57 + 13, 4);
    call write~int(8, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 57 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 57 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 76 + 0, 4);
    call write~int(31, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 76 + 4, 1);
    call #t~nondet34.base, #t~nondet34.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet34.base, #t~nondet34.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 76 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 76 + 13, 4);
    call write~int(9, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 76 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 76 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 95 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 95 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 95 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 95 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 95 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 95 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 114 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 114 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 114 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 114 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 114 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 752 + 36 + 133 + 18, 1);
    call #t~nondet35.base, #t~nondet35.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet35.base, #t~nondet35.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 0, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 8, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 12, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 16, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 20, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 24, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 28, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 32, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 0 + 0, 4);
    call write~int(6, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 0 + 4, 1);
    call #t~nondet36.base, #t~nondet36.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet36.base, #t~nondet36.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 0 + 13, 4);
    call write~int(80, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 0 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 0 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 19 + 0, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 19 + 4, 1);
    call #t~nondet37.base, #t~nondet37.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet37.base, #t~nondet37.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 19 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 19 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 19 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 19 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 38 + 0, 4);
    call write~int(5, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 38 + 4, 1);
    call #t~nondet38.base, #t~nondet38.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet38.base, #t~nondet38.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 38 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 38 + 13, 4);
    call write~int(8, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 38 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 38 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 57 + 0, 4);
    call write~int(30, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 57 + 4, 1);
    call #t~nondet39.base, #t~nondet39.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet39.base, #t~nondet39.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 57 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 57 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 57 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 57 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 76 + 0, 4);
    call write~int(31, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 76 + 4, 1);
    call #t~nondet40.base, #t~nondet40.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet40.base, #t~nondet40.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 76 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 76 + 13, 4);
    call write~int(9, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 76 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 76 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 95 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 95 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 95 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 95 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 95 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 95 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 114 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 114 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 114 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 114 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 114 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 940 + 36 + 133 + 18, 1);
    call #t~nondet41.base, #t~nondet41.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet41.base, #t~nondet41.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 0, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 8, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 12, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 16, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 20, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 24, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 28, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 32, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 0 + 0, 4);
    call write~int(29, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 0 + 4, 1);
    call #t~nondet42.base, #t~nondet42.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet42.base, #t~nondet42.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 0 + 13, 4);
    call write~int(80, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 0 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 0 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 19 + 0, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 19 + 4, 1);
    call #t~nondet43.base, #t~nondet43.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet43.base, #t~nondet43.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 19 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 19 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 19 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 19 + 18, 1);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 38 + 0, 4);
    call write~int(5, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 38 + 4, 1);
    call #t~nondet44.base, #t~nondet44.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet44.base, #t~nondet44.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 38 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 38 + 13, 4);
    call write~int(66, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 38 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 38 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 57 + 0, 4);
    call write~int(27, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 57 + 4, 1);
    call #t~nondet45.base, #t~nondet45.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet45.base, #t~nondet45.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 57 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 57 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 57 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 57 + 18, 1);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 76 + 0, 4);
    call write~int(28, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 76 + 4, 1);
    call #t~nondet46.base, #t~nondet46.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet46.base, #t~nondet46.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 76 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 76 + 13, 4);
    call write~int(66, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 76 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 76 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 95 + 0, 4);
    call write~int(30, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 95 + 4, 1);
    call #t~nondet47.base, #t~nondet47.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet47.base, #t~nondet47.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 95 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 95 + 13, 4);
    call write~int(8, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 95 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 95 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 114 + 0, 4);
    call write~int(31, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 114 + 4, 1);
    call #t~nondet48.base, #t~nondet48.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet48.base, #t~nondet48.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 114 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 114 + 13, 4);
    call write~int(9, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 114 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1128 + 36 + 133 + 18, 1);
    call #t~nondet49.base, #t~nondet49.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet49.base, #t~nondet49.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 0, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 8, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 12, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 16, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 20, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 24, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 28, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 32, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 0 + 0, 4);
    call write~int(40, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 0 + 4, 1);
    call #t~nondet50.base, #t~nondet50.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet50.base, #t~nondet50.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 0 + 13, 4);
    call write~int(80, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 0 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 0 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 19 + 0, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 19 + 4, 1);
    call #t~nondet51.base, #t~nondet51.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet51.base, #t~nondet51.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 19 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 19 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 19 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 19 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 38 + 0, 4);
    call write~int(7, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 38 + 4, 1);
    call #t~nondet52.base, #t~nondet52.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet52.base, #t~nondet52.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 38 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 38 + 13, 4);
    call write~int(25, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 38 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 38 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 57 + 0, 4);
    call write~int(8, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 57 + 4, 1);
    call #t~nondet53.base, #t~nondet53.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet53.base, #t~nondet53.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 57 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 57 + 13, 4);
    call write~int(26, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 57 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 57 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 76 + 0, 4);
    call write~int(36, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 76 + 4, 1);
    call #t~nondet54.base, #t~nondet54.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet54.base, #t~nondet54.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 76 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 76 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 76 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 76 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 95 + 0, 4);
    call write~int(38, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 95 + 4, 1);
    call #t~nondet55.base, #t~nondet55.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet55.base, #t~nondet55.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 95 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 95 + 13, 4);
    call write~int(25, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 95 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 95 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 114 + 0, 4);
    call write~int(41, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 114 + 4, 1);
    call #t~nondet56.base, #t~nondet56.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet56.base, #t~nondet56.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 114 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 114 + 13, 4);
    call write~int(26, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 114 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1316 + 36 + 133 + 18, 1);
    call #t~nondet57.base, #t~nondet57.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet57.base, #t~nondet57.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 0, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 8, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 12, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 16, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 20, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 24, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 28, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 32, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 0 + 0, 4);
    call write~int(38, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 0 + 4, 1);
    call #t~nondet58.base, #t~nondet58.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet58.base, #t~nondet58.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 0 + 13, 4);
    call write~int(80, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 0 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 0 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 19 + 0, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 19 + 4, 1);
    call #t~nondet59.base, #t~nondet59.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet59.base, #t~nondet59.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 19 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 19 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 19 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 19 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 38 + 0, 4);
    call write~int(7, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 38 + 4, 1);
    call #t~nondet60.base, #t~nondet60.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet60.base, #t~nondet60.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 38 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 38 + 13, 4);
    call write~int(25, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 38 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 38 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 57 + 0, 4);
    call write~int(8, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 57 + 4, 1);
    call #t~nondet61.base, #t~nondet61.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet61.base, #t~nondet61.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 57 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 57 + 13, 4);
    call write~int(26, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 57 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 57 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 76 + 0, 4);
    call write~int(34, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 76 + 4, 1);
    call #t~nondet62.base, #t~nondet62.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet62.base, #t~nondet62.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 76 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 76 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 76 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 76 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 95 + 0, 4);
    call write~int(36, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 95 + 4, 1);
    call #t~nondet63.base, #t~nondet63.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet63.base, #t~nondet63.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 95 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 95 + 13, 4);
    call write~int(25, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 95 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 95 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 114 + 0, 4);
    call write~int(39, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 114 + 4, 1);
    call #t~nondet64.base, #t~nondet64.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet64.base, #t~nondet64.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 114 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 114 + 13, 4);
    call write~int(26, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 114 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1504 + 36 + 133 + 18, 1);
    call #t~nondet65.base, #t~nondet65.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet65.base, #t~nondet65.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 0, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 8, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 12, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 16, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 20, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 24, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 28, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 32, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 0 + 0, 4);
    call write~int(29, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 0 + 4, 1);
    call #t~nondet66.base, #t~nondet66.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet66.base, #t~nondet66.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 0 + 13, 4);
    call write~int(80, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 0 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 0 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 19 + 0, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 19 + 4, 1);
    call #t~nondet67.base, #t~nondet67.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet67.base, #t~nondet67.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 19 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 19 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 19 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 19 + 18, 1);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 38 + 0, 4);
    call write~int(5, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 38 + 4, 1);
    call #t~nondet68.base, #t~nondet68.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet68.base, #t~nondet68.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 38 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 38 + 13, 4);
    call write~int(66, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 38 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 38 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 57 + 0, 4);
    call write~int(27, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 57 + 4, 1);
    call #t~nondet69.base, #t~nondet69.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet69.base, #t~nondet69.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 57 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 57 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 57 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 57 + 18, 1);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 76 + 0, 4);
    call write~int(28, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 76 + 4, 1);
    call #t~nondet70.base, #t~nondet70.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet70.base, #t~nondet70.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 76 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 76 + 13, 4);
    call write~int(66, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 76 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 76 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 95 + 0, 4);
    call write~int(30, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 95 + 4, 1);
    call #t~nondet71.base, #t~nondet71.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet71.base, #t~nondet71.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 95 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 95 + 13, 4);
    call write~int(8, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 95 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 95 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 114 + 0, 4);
    call write~int(31, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 114 + 4, 1);
    call #t~nondet72.base, #t~nondet72.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet72.base, #t~nondet72.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 114 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 114 + 13, 4);
    call write~int(9, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 114 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1692 + 36 + 133 + 18, 1);
    call #t~nondet73.base, #t~nondet73.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet73.base, #t~nondet73.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 0, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 8, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 12, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 16, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 20, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 24, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 28, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 32, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 0 + 0, 4);
    call write~int(35, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 0 + 4, 1);
    call #t~nondet74.base, #t~nondet74.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet74.base, #t~nondet74.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 0 + 13, 4);
    call write~int(80, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 0 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 0 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 19 + 0, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 19 + 4, 1);
    call #t~nondet75.base, #t~nondet75.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet75.base, #t~nondet75.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 19 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 19 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 19 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 19 + 18, 1);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 38 + 0, 4);
    call write~int(5, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 38 + 4, 1);
    call #t~nondet76.base, #t~nondet76.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet76.base, #t~nondet76.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 38 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 38 + 13, 4);
    call write~int(66, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 38 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 38 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 57 + 0, 4);
    call write~int(33, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 57 + 4, 1);
    call #t~nondet77.base, #t~nondet77.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet77.base, #t~nondet77.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 57 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 57 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 57 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 57 + 18, 1);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 76 + 0, 4);
    call write~int(34, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 76 + 4, 1);
    call #t~nondet78.base, #t~nondet78.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet78.base, #t~nondet78.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 76 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 76 + 13, 4);
    call write~int(66, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 76 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 76 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 95 + 0, 4);
    call write~int(36, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 95 + 4, 1);
    call #t~nondet79.base, #t~nondet79.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet79.base, #t~nondet79.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 95 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 95 + 13, 4);
    call write~int(8, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 95 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 95 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 114 + 0, 4);
    call write~int(37, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 114 + 4, 1);
    call #t~nondet80.base, #t~nondet80.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet80.base, #t~nondet80.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 114 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 114 + 13, 4);
    call write~int(9, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 114 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 1880 + 36 + 133 + 18, 1);
    call #t~nondet81.base, #t~nondet81.offset := #Ultimate.alloc(31);
    call write~$Pointer$(#t~nondet81.base, #t~nondet81.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 0, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 8, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 12, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 16, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 20, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 24, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 28, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 32, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 0 + 0, 4);
    call write~int(39, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 0 + 4, 1);
    call #t~nondet82.base, #t~nondet82.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet82.base, #t~nondet82.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 0 + 13, 4);
    call write~int(80, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 0 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 0 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 19 + 0, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 19 + 4, 1);
    call #t~nondet83.base, #t~nondet83.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet83.base, #t~nondet83.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 19 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 19 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 19 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 19 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 38 + 0, 4);
    call write~int(6, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 38 + 4, 1);
    call #t~nondet84.base, #t~nondet84.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet84.base, #t~nondet84.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 38 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 38 + 13, 4);
    call write~int(89, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 38 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 38 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 57 + 0, 4);
    call write~int(36, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 57 + 4, 1);
    call #t~nondet85.base, #t~nondet85.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet85.base, #t~nondet85.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 57 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 57 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 57 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 57 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 76 + 0, 4);
    call write~int(38, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 76 + 4, 1);
    call #t~nondet86.base, #t~nondet86.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet86.base, #t~nondet86.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 76 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 76 + 13, 4);
    call write~int(14, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 76 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 76 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 95 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 95 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 95 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 95 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 95 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 95 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 114 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 114 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 114 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 114 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 114 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2068 + 36 + 133 + 18, 1);
    call #t~nondet87.base, #t~nondet87.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet87.base, #t~nondet87.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 0, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 8, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 12, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 16, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 20, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 24, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 28, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 32, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 0 + 0, 4);
    call write~int(40, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 0 + 4, 1);
    call #t~nondet88.base, #t~nondet88.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet88.base, #t~nondet88.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 0 + 13, 4);
    call write~int(80, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 0 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 0 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 19 + 0, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 19 + 4, 1);
    call #t~nondet89.base, #t~nondet89.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet89.base, #t~nondet89.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 19 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 19 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 19 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 19 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 38 + 0, 4);
    call write~int(6, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 38 + 4, 1);
    call #t~nondet90.base, #t~nondet90.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet90.base, #t~nondet90.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 38 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 38 + 13, 4);
    call write~int(89, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 38 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 38 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 57 + 0, 4);
    call write~int(37, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 57 + 4, 1);
    call #t~nondet91.base, #t~nondet91.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet91.base, #t~nondet91.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 57 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 57 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 57 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 57 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 76 + 0, 4);
    call write~int(39, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 76 + 4, 1);
    call #t~nondet92.base, #t~nondet92.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet92.base, #t~nondet92.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 76 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 76 + 13, 4);
    call write~int(14, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 76 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 76 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 95 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 95 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 95 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 95 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 95 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 95 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 114 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 114 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 114 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 114 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 114 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2256 + 36 + 133 + 18, 1);
    call #t~nondet93.base, #t~nondet93.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet93.base, #t~nondet93.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 0, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 8, 4);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 12, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 16, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 20, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 24, 4);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 28, 4);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 32, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 0 + 0, 4);
    call write~int(40, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 0 + 4, 1);
    call #t~nondet94.base, #t~nondet94.offset := #Ultimate.alloc(10);
    call write~$Pointer$(#t~nondet94.base, #t~nondet94.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 0 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 0 + 13, 4);
    call write~int(80, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 0 + 17, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 0 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 19 + 0, 4);
    call write~int(4, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 19 + 4, 1);
    call #t~nondet95.base, #t~nondet95.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet95.base, #t~nondet95.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 19 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 19 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 19 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 19 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 38 + 0, 4);
    call write~int(6, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 38 + 4, 1);
    call #t~nondet96.base, #t~nondet96.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet96.base, #t~nondet96.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 38 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 38 + 13, 4);
    call write~int(100, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 38 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 38 + 18, 1);
    call write~int(3, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 57 + 0, 4);
    call write~int(37, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 57 + 4, 1);
    call #t~nondet97.base, #t~nondet97.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet97.base, #t~nondet97.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 57 + 5, 8);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 57 + 13, 4);
    call write~int(96, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 57 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 57 + 18, 1);
    call write~int(1, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 76 + 0, 4);
    call write~int(39, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 76 + 4, 1);
    call #t~nondet98.base, #t~nondet98.offset := #Ultimate.alloc(9);
    call write~$Pointer$(#t~nondet98.base, #t~nondet98.offset, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 76 + 5, 8);
    call write~int(2, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 76 + 13, 4);
    call write~int(102, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 76 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 76 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 95 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 95 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 95 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 95 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 95 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 95 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 114 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 114 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 114 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 114 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 114 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 114 + 18, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 133 + 0, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 133 + 4, 1);
    call write~$Pointer$(0, 0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 133 + 5, 8);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 133 + 13, 4);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 133 + 17, 1);
    call write~int(0, ~#saa7164_boards.base, ~#saa7164_boards.offset + 2444 + 36 + 133 + 18, 1);
    havoc #t~nondet18.base, #t~nondet18.offset;
    havoc #t~nondet19.base, #t~nondet19.offset;
    havoc #t~nondet20.base, #t~nondet20.offset;
    havoc #t~nondet21.base, #t~nondet21.offset;
    havoc #t~nondet22.base, #t~nondet22.offset;
    havoc #t~nondet23.base, #t~nondet23.offset;
    havoc #t~nondet24.base, #t~nondet24.offset;
    havoc #t~nondet25.base, #t~nondet25.offset;
    havoc #t~nondet26.base, #t~nondet26.offset;
    havoc #t~nondet27.base, #t~nondet27.offset;
    havoc #t~nondet28.base, #t~nondet28.offset;
    havoc #t~nondet29.base, #t~nondet29.offset;
    havoc #t~nondet30.base, #t~nondet30.offset;
    havoc #t~nondet31.base, #t~nondet31.offset;
    havoc #t~nondet32.base, #t~nondet32.offset;
    havoc #t~nondet33.base, #t~nondet33.offset;
    havoc #t~nondet34.base, #t~nondet34.offset;
    havoc #t~nondet35.base, #t~nondet35.offset;
    havoc #t~nondet36.base, #t~nondet36.offset;
    havoc #t~nondet37.base, #t~nondet37.offset;
    havoc #t~nondet38.base, #t~nondet38.offset;
    havoc #t~nondet39.base, #t~nondet39.offset;
    havoc #t~nondet40.base, #t~nondet40.offset;
    havoc #t~nondet41.base, #t~nondet41.offset;
    havoc #t~nondet42.base, #t~nondet42.offset;
    havoc #t~nondet43.base, #t~nondet43.offset;
    havoc #t~nondet44.base, #t~nondet44.offset;
    havoc #t~nondet45.base, #t~nondet45.offset;
    havoc #t~nondet46.base, #t~nondet46.offset;
    havoc #t~nondet47.base, #t~nondet47.offset;
    havoc #t~nondet48.base, #t~nondet48.offset;
    havoc #t~nondet49.base, #t~nondet49.offset;
    havoc #t~nondet50.base, #t~nondet50.offset;
    havoc #t~nondet51.base, #t~nondet51.offset;
    havoc #t~nondet52.base, #t~nondet52.offset;
    havoc #t~nondet53.base, #t~nondet53.offset;
    havoc #t~nondet54.base, #t~nondet54.offset;
    havoc #t~nondet55.base, #t~nondet55.offset;
    havoc #t~nondet56.base, #t~nondet56.offset;
    havoc #t~nondet57.base, #t~nondet57.offset;
    havoc #t~nondet58.base, #t~nondet58.offset;
    havoc #t~nondet59.base, #t~nondet59.offset;
    havoc #t~nondet60.base, #t~nondet60.offset;
    havoc #t~nondet61.base, #t~nondet61.offset;
    havoc #t~nondet62.base, #t~nondet62.offset;
    havoc #t~nondet63.base, #t~nondet63.offset;
    havoc #t~nondet64.base, #t~nondet64.offset;
    havoc #t~nondet65.base, #t~nondet65.offset;
    havoc #t~nondet66.base, #t~nondet66.offset;
    havoc #t~nondet67.base, #t~nondet67.offset;
    havoc #t~nondet68.base, #t~nondet68.offset;
    havoc #t~nondet69.base, #t~nondet69.offset;
    havoc #t~nondet70.base, #t~nondet70.offset;
    havoc #t~nondet71.base, #t~nondet71.offset;
    havoc #t~nondet72.base, #t~nondet72.offset;
    havoc #t~nondet73.base, #t~nondet73.offset;
    havoc #t~nondet74.base, #t~nondet74.offset;
    havoc #t~nondet75.base, #t~nondet75.offset;
    havoc #t~nondet76.base, #t~nondet76.offset;
    havoc #t~nondet77.base, #t~nondet77.offset;
    havoc #t~nondet78.base, #t~nondet78.offset;
    havoc #t~nondet79.base, #t~nondet79.offset;
    havoc #t~nondet80.base, #t~nondet80.offset;
    havoc #t~nondet81.base, #t~nondet81.offset;
    havoc #t~nondet82.base, #t~nondet82.offset;
    havoc #t~nondet83.base, #t~nondet83.offset;
    havoc #t~nondet84.base, #t~nondet84.offset;
    havoc #t~nondet85.base, #t~nondet85.offset;
    havoc #t~nondet86.base, #t~nondet86.offset;
    havoc #t~nondet87.base, #t~nondet87.offset;
    havoc #t~nondet88.base, #t~nondet88.offset;
    havoc #t~nondet89.base, #t~nondet89.offset;
    havoc #t~nondet90.base, #t~nondet90.offset;
    havoc #t~nondet91.base, #t~nondet91.offset;
    havoc #t~nondet92.base, #t~nondet92.offset;
    havoc #t~nondet93.base, #t~nondet93.offset;
    havoc #t~nondet94.base, #t~nondet94.offset;
    havoc #t~nondet95.base, #t~nondet95.offset;
    havoc #t~nondet96.base, #t~nondet96.offset;
    havoc #t~nondet97.base, #t~nondet97.offset;
    havoc #t~nondet98.base, #t~nondet98.offset;
    ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card := ~saa7164_subids.subvendor[0 := 0], ~saa7164_subids.subdevice[0 := 0], ~saa7164_subids.card[0 := 0];
    ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card := ~saa7164_subids.subvendor[1 := 0], ~saa7164_subids.subdevice[1 := 0], ~saa7164_subids.card[1 := 0];
    ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card := ~saa7164_subids.subvendor[2 := 0], ~saa7164_subids.subdevice[2 := 0], ~saa7164_subids.card[2 := 0];
    ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card := ~saa7164_subids.subvendor[3 := 0], ~saa7164_subids.subdevice[3 := 0], ~saa7164_subids.card[3 := 0];
    ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card := ~saa7164_subids.subvendor[4 := 0], ~saa7164_subids.subdevice[4 := 0], ~saa7164_subids.card[4 := 0];
    ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card := ~saa7164_subids.subvendor[5 := 0], ~saa7164_subids.subdevice[5 := 0], ~saa7164_subids.card[5 := 0];
    ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card := ~saa7164_subids.subvendor[6 := 0], ~saa7164_subids.subdevice[6 := 0], ~saa7164_subids.card[6 := 0];
    ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card := ~saa7164_subids.subvendor[7 := 0], ~saa7164_subids.subdevice[7 := 0], ~saa7164_subids.card[7 := 0];
    ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card := ~saa7164_subids.subvendor[8 := 0], ~saa7164_subids.subdevice[8 := 0], ~saa7164_subids.card[8 := 0];
    ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card := ~saa7164_subids.subvendor[9 := 0], ~saa7164_subids.subdevice[9 := 0], ~saa7164_subids.card[9 := 0];
    ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card := ~saa7164_subids.subvendor[10 := 0], ~saa7164_subids.subdevice[10 := 0], ~saa7164_subids.card[10 := 0];
    ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card := ~saa7164_subids.subvendor[11 := 0], ~saa7164_subids.subdevice[11 := 0], ~saa7164_subids.card[11 := 0];
    ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card := ~saa7164_subids.subvendor[12 := 0], ~saa7164_subids.subdevice[12 := 0], ~saa7164_subids.card[12 := 0];
    ~ldv_work_struct_3_1.base, ~ldv_work_struct_3_1.offset := 0, 0;
    ~vbi_fops_group0.base, ~vbi_fops_group0.offset := 0, 0;
    ~saa7164_proc_fops_group1.base, ~saa7164_proc_fops_group1.offset := 0, 0;
    ~mpeg_ioctl_ops_group1.base, ~mpeg_ioctl_ops_group1.offset := 0, 0;
    ~ldv_work_struct_4_0.base, ~ldv_work_struct_4_0.offset := 0, 0;
    ~ldv_work_struct_3_3.base, ~ldv_work_struct_3_3.offset := 0, 0;
    ~mpeg_ioctl_ops_group3.base, ~mpeg_ioctl_ops_group3.offset := 0, 0;
    ~saa7164_proc_fops_group2.base, ~saa7164_proc_fops_group2.offset := 0, 0;
    ~vbi_ioctl_ops_group2.base, ~vbi_ioctl_ops_group2.offset := 0, 0;
    ~saa7164_i2c_algo_template_group0.base, ~saa7164_i2c_algo_template_group0.offset := 0, 0;
    ~ldv_work_struct_3_2.base, ~ldv_work_struct_3_2.offset := 0, 0;
    ~saa7164_pci_driver_group1.base, ~saa7164_pci_driver_group1.offset := 0, 0;
    ~mpeg_ioctl_ops_group0.base, ~mpeg_ioctl_ops_group0.offset := 0, 0;
    ~ldv_work_struct_3_0.base, ~ldv_work_struct_3_0.offset := 0, 0;
    ~mpeg_fops_group0.base, ~mpeg_fops_group0.offset := 0, 0;
    ~vbi_ioctl_ops_group0.base, ~vbi_ioctl_ops_group0.offset := 0, 0;
    ~ldv_work_struct_5_0.base, ~ldv_work_struct_5_0.offset := 0, 0;
    ~vbi_ioctl_ops_group3.base, ~vbi_ioctl_ops_group3.offset := 0, 0;
    ~vbi_ioctl_ops_group1.base, ~vbi_ioctl_ops_group1.offset := 0, 0;
    ~mpeg_ioctl_ops_group2.base, ~mpeg_ioctl_ops_group2.offset := 0, 0;
    ~enable_msi := 1;
    call ~#devlist.base, ~#devlist.offset := #Ultimate.alloc(148);
    call write~int(1, ~#devlist.base, ~#devlist.offset + 0 + 0, 4);
    call write~int(0, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(3735899821, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 4, 4);
    call write~int(4294967295, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, -1, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 20 + 8 + 8, 8);
    call #t~nondet302.base, #t~nondet302.offset := #Ultimate.alloc(18);
    call write~$Pointer$(#t~nondet302.base, #t~nondet302.offset, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8084.__padding[0], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0, 1);
    call write~int(#t~union8084.__padding[1], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8084.__padding[2], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[3], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[4], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[5], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[6], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[7], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[8], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[9], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[10], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[11], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[12], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[13], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[14], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[15], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[16], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[17], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[18], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[19], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[20], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[21], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[22], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8084.__padding[23], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8084.dep_map.key.base, #t~union8084.dep_map.key.offset, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8084.dep_map.class_cache.base[0], #t~union8084.dep_map.class_cache.offset[0], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8084.dep_map.class_cache.base[1], #t~union8084.dep_map.class_cache.offset[1], ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8084.dep_map.name.base, #t~union8084.dep_map.name.offset, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8084.dep_map.cpu, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8084.dep_map.ip, ~#devlist.base, ~#devlist.offset + 4 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(~#devlist.base, ~#devlist.offset + 72, ~#devlist.base, ~#devlist.offset + 72 + 0, 8);
    call write~$Pointer$(~#devlist.base, ~#devlist.offset + 72, ~#devlist.base, ~#devlist.offset + 72 + 8, 8);
    call write~$Pointer$(0, 0, ~#devlist.base, ~#devlist.offset + 88, 8);
    call write~$Pointer$(~#devlist.base, ~#devlist.offset, ~#devlist.base, ~#devlist.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#devlist.base, ~#devlist.offset + 104 + 0, 8);
    call write~int(0, ~#devlist.base, ~#devlist.offset + 104 + 8 + 0, 8);
    call write~int(0, ~#devlist.base, ~#devlist.offset + 104 + 8 + 8, 8);
    call #t~nondet303.base, #t~nondet303.offset := #Ultimate.alloc(8);
    call write~$Pointer$(#t~nondet303.base, #t~nondet303.offset, ~#devlist.base, ~#devlist.offset + 104 + 24, 8);
    call write~int(0, ~#devlist.base, ~#devlist.offset + 104 + 32, 4);
    call write~int(0, ~#devlist.base, ~#devlist.offset + 104 + 36, 8);
    havoc #t~nondet302.base, #t~nondet302.offset;
    havoc #t~union8084.__padding, #t~union8084.dep_map.key.base, #t~union8084.dep_map.key.offset, #t~union8084.dep_map.class_cache.base, #t~union8084.dep_map.class_cache.offset, #t~union8084.dep_map.name.base, #t~union8084.dep_map.name.offset, #t~union8084.dep_map.cpu, #t~union8084.dep_map.ip;
    havoc #t~nondet303.base, #t~nondet303.offset;
    call ~#saa7164_devlist.base, ~#saa7164_devlist.offset := #Ultimate.alloc(16);
    call write~$Pointer$(~#saa7164_devlist.base, ~#saa7164_devlist.offset, ~#saa7164_devlist.base, ~#saa7164_devlist.offset + 0, 8);
    call write~$Pointer$(~#saa7164_devlist.base, ~#saa7164_devlist.offset, ~#saa7164_devlist.base, ~#saa7164_devlist.offset + 8, 8);
    call ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset := #Ultimate.alloc(224);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 0, 8);
    call write~$Pointer$(#funAddr~seq_lseek.base, #funAddr~seq_lseek.offset, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 8, 8);
    call write~$Pointer$(#funAddr~seq_read.base, #funAddr~seq_read.offset, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 88, 8);
    call write~$Pointer$(#funAddr~saa7164_proc_open.base, #funAddr~saa7164_proc_open.offset, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 104, 8);
    call write~$Pointer$(#funAddr~single_release.base, #funAddr~single_release.offset, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset + 216, 8);
    call ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset := #Ultimate.alloc(64);
    call write~int(4401, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 0 + 0, 4);
    call write~int(29028, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 0 + 4, 4);
    call write~int(4294967295, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 0 + 8, 4);
    call write~int(4294967295, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 0 + 12, 4);
    call write~int(0, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 0 + 16, 4);
    call write~int(0, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 0 + 20, 4);
    call write~int(0, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 0 + 24, 8);
    call write~int(0, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 32 + 0, 4);
    call write~int(0, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 32 + 4, 4);
    call write~int(0, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 32 + 8, 4);
    call write~int(0, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 32 + 12, 4);
    call write~int(0, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 32 + 16, 4);
    call write~int(0, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 32 + 20, 4);
    call write~int(0, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset + 32 + 24, 8);
    call ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset := #Ultimate.alloc(305);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 0 + 8, 8);
    call #t~nondet1091.base, #t~nondet1091.offset := #Ultimate.alloc(8);
    call write~$Pointer$(#t~nondet1091.base, #t~nondet1091.offset, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 16, 8);
    call write~$Pointer$(~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 24, 8);
    call write~$Pointer$(#funAddr~saa7164_initdev.base, #funAddr~saa7164_initdev.offset, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 32, 8);
    call write~$Pointer$(#funAddr~saa7164_finidev.base, #funAddr~saa7164_finidev.offset, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 16, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 24, 8);
    call write~int(0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 32, 1);
    call write~int(0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 33, 4);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 37, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 45, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 53, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 61, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 69, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 77, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 85, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 93, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 101, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 104 + 109, 8);
    call write~int(0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8085.__padding[0], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union8085.__padding[1], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8085.__padding[2], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[3], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[4], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[5], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[6], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[7], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[8], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[9], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[10], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[11], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[12], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[13], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[14], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[15], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[16], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[17], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[18], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[19], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[20], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[21], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[22], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8085.__padding[23], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8085.dep_map.key.base, #t~union8085.dep_map.key.offset, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8085.dep_map.class_cache.base[0], #t~union8085.dep_map.class_cache.offset[0], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8085.dep_map.class_cache.base[1], #t~union8085.dep_map.class_cache.offset[1], ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8085.dep_map.name.base, #t~union8085.dep_map.name.offset, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8085.dep_map.cpu, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8085.dep_map.ip, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset + 221 + 68 + 8, 8);
    havoc #t~nondet1091.base, #t~nondet1091.offset;
    havoc #t~union8085.__padding, #t~union8085.dep_map.key.base, #t~union8085.dep_map.key.offset, #t~union8085.dep_map.class_cache.base, #t~union8085.dep_map.class_cache.offset, #t~union8085.dep_map.name.base, #t~union8085.dep_map.name.offset, #t~union8085.dep_map.cpu, #t~union8085.dep_map.ip;
    call ~#saa7164_i2c_algo_template.base, ~#saa7164_i2c_algo_template.offset := #Ultimate.alloc(40);
    call write~$Pointer$(#funAddr~i2c_xfer.base, #funAddr~i2c_xfer.offset, ~#saa7164_i2c_algo_template.base, ~#saa7164_i2c_algo_template.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_i2c_algo_template.base, ~#saa7164_i2c_algo_template.offset + 8, 8);
    call write~$Pointer$(#funAddr~saa7164_functionality.base, #funAddr~saa7164_functionality.offset, ~#saa7164_i2c_algo_template.base, ~#saa7164_i2c_algo_template.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#saa7164_i2c_algo_template.base, ~#saa7164_i2c_algo_template.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#saa7164_i2c_algo_template.base, ~#saa7164_i2c_algo_template.offset + 32, 8);
    #t~init8086.base, #t~init8086.offset := #t~init8086.base[0 := 0], #t~init8086.offset[0 := 0];
    #t~init8086.base, #t~init8086.offset := #t~init8086.base[1 := 0], #t~init8086.offset[1 := 0];
    #t~init8087.base, #t~init8087.offset := #t~init8087.base[0 := 0], #t~init8087.offset[0 := 0];
    #t~init8087.base, #t~init8087.offset := #t~init8087.base[1 := 0], #t~init8087.offset[1 := 0];
    #t~init8088 := #t~init8088[0 := 0];
    #t~init8088 := #t~init8088[1 := 0];
    #t~init8088 := #t~init8088[2 := 0];
    #t~init8088 := #t~init8088[3 := 0];
    #t~init8088 := #t~init8088[4 := 0];
    #t~init8088 := #t~init8088[5 := 0];
    #t~init8088 := #t~init8088[6 := 0];
    #t~init8088 := #t~init8088[7 := 0];
    #t~init8088 := #t~init8088[8 := 0];
    #t~init8088 := #t~init8088[9 := 0];
    #t~init8088 := #t~init8088[10 := 0];
    #t~init8088 := #t~init8088[11 := 0];
    #t~init8088 := #t~init8088[12 := 0];
    #t~init8088 := #t~init8088[13 := 0];
    #t~init8088 := #t~init8088[14 := 0];
    #t~init8088 := #t~init8088[15 := 0];
    #t~init8089.base, #t~init8089.offset := #t~init8089.base[0 := 0], #t~init8089.offset[0 := 0];
    #t~init8089.base, #t~init8089.offset := #t~init8089.base[1 := 0], #t~init8089.offset[1 := 0];
    #t~init8091.base, #t~init8091.offset := #t~init8091.base[0 := 0], #t~init8091.offset[0 := 0];
    #t~init8091.base, #t~init8091.offset := #t~init8091.base[1 := 0], #t~init8091.offset[1 := 0];
    #t~union8090.raw_lock.val.counter, #t~union8090.magic, #t~union8090.owner_cpu, #t~union8090.owner.base, #t~union8090.owner.offset, #t~union8090.dep_map.key.base, #t~union8090.dep_map.key.offset, #t~union8090.dep_map.class_cache.base, #t~union8090.dep_map.class_cache.offset, #t~union8090.dep_map.name.base, #t~union8090.dep_map.name.offset, #t~union8090.dep_map.cpu, #t~union8090.dep_map.ip := 0, 0, 0, 0, 0, 0, 0, #t~init8091.base, #t~init8091.offset, 0, 0, 0, 0;
    #t~init8093.base, #t~init8093.offset := #t~init8093.base[0 := 0], #t~init8093.offset[0 := 0];
    #t~init8093.base, #t~init8093.offset := #t~init8093.base[1 := 0], #t~init8093.offset[1 := 0];
    #t~init8095.base, #t~init8095.offset := #t~init8095.base[0 := 0], #t~init8095.offset[0 := 0];
    #t~init8095.base, #t~init8095.offset := #t~init8095.base[1 := 0], #t~init8095.offset[1 := 0];
    #t~union8094.raw_lock.val.counter, #t~union8094.magic, #t~union8094.owner_cpu, #t~union8094.owner.base, #t~union8094.owner.offset, #t~union8094.dep_map.key.base, #t~union8094.dep_map.key.offset, #t~union8094.dep_map.class_cache.base, #t~union8094.dep_map.class_cache.offset, #t~union8094.dep_map.name.base, #t~union8094.dep_map.name.offset, #t~union8094.dep_map.cpu, #t~union8094.dep_map.ip := 0, 0, 0, 0, 0, 0, 0, #t~init8095.base, #t~init8095.offset, 0, 0, 0, 0;
    #t~init8098.base, #t~init8098.offset := #t~init8098.base[0 := 0], #t~init8098.offset[0 := 0];
    #t~init8098.base, #t~init8098.offset := #t~init8098.base[1 := 0], #t~init8098.offset[1 := 0];
    #t~union8097.raw_lock.val.counter, #t~union8097.magic, #t~union8097.owner_cpu, #t~union8097.owner.base, #t~union8097.owner.offset, #t~union8097.dep_map.key.base, #t~union8097.dep_map.key.offset, #t~union8097.dep_map.class_cache.base, #t~union8097.dep_map.class_cache.offset, #t~union8097.dep_map.name.base, #t~union8097.dep_map.name.offset, #t~union8097.dep_map.cpu, #t~union8097.dep_map.ip := 0, 0, 0, 0, 0, 0, 0, #t~init8098.base, #t~init8098.offset, 0, 0, 0, 0;
    #t~init8100 := #t~init8100[0 := 0];
    #t~init8100 := #t~init8100[1 := 0];
    #t~init8100 := #t~init8100[2 := 0];
    #t~init8100 := #t~init8100[3 := 0];
    #t~init8100 := #t~init8100[4 := 0];
    #t~init8100 := #t~init8100[5 := 0];
    #t~init8100 := #t~init8100[6 := 0];
    #t~init8100 := #t~init8100[7 := 0];
    #t~init8100 := #t~init8100[8 := 0];
    #t~init8100 := #t~init8100[9 := 0];
    #t~init8100 := #t~init8100[10 := 0];
    #t~init8100 := #t~init8100[11 := 0];
    #t~init8100 := #t~init8100[12 := 0];
    #t~init8100 := #t~init8100[13 := 0];
    #t~init8100 := #t~init8100[14 := 0];
    #t~init8100 := #t~init8100[15 := 0];
    #t~init8101.base, #t~init8101.offset := #t~init8101.base[0 := 0], #t~init8101.offset[0 := 0];
    #t~init8101.base, #t~init8101.offset := #t~init8101.base[1 := 0], #t~init8101.offset[1 := 0];
    #t~init8102.base, #t~init8102.offset := #t~init8102.base[0 := 0], #t~init8102.offset[0 := 0];
    #t~init8102.base, #t~init8102.offset := #t~init8102.base[1 := 0], #t~init8102.offset[1 := 0];
    #t~init8104.base, #t~init8104.offset := #t~init8104.base[0 := 0], #t~init8104.offset[0 := 0];
    #t~init8104.base, #t~init8104.offset := #t~init8104.base[1 := 0], #t~init8104.offset[1 := 0];
    #t~union8103.raw_lock.val.counter, #t~union8103.magic, #t~union8103.owner_cpu, #t~union8103.owner.base, #t~union8103.owner.offset, #t~union8103.dep_map.key.base, #t~union8103.dep_map.key.offset, #t~union8103.dep_map.class_cache.base, #t~union8103.dep_map.class_cache.offset, #t~union8103.dep_map.name.base, #t~union8103.dep_map.name.offset, #t~union8103.dep_map.cpu, #t~union8103.dep_map.ip := 0, 0, 0, 0, 0, 0, 0, #t~init8104.base, #t~init8104.offset, 0, 0, 0, 0;
    #t~init8107.base, #t~init8107.offset := #t~init8107.base[0 := 0], #t~init8107.offset[0 := 0];
    #t~init8107.base, #t~init8107.offset := #t~init8107.base[1 := 0], #t~init8107.offset[1 := 0];
    #t~union8106.raw_lock.val.counter, #t~union8106.magic, #t~union8106.owner_cpu, #t~union8106.owner.base, #t~union8106.owner.offset, #t~union8106.dep_map.key.base, #t~union8106.dep_map.key.offset, #t~union8106.dep_map.class_cache.base, #t~union8106.dep_map.class_cache.offset, #t~union8106.dep_map.name.base, #t~union8106.dep_map.name.offset, #t~union8106.dep_map.cpu, #t~union8106.dep_map.ip := 0, 0, 0, 0, 0, 0, 0, #t~init8107.base, #t~init8107.offset, 0, 0, 0, 0;
    #t~init8109 := #t~init8109[0 := 115];
    #t~init8109 := #t~init8109[1 := 97];
    #t~init8109 := #t~init8109[2 := 97];
    #t~init8109 := #t~init8109[3 := 55];
    #t~init8109 := #t~init8109[4 := 49];
    #t~init8109 := #t~init8109[5 := 54];
    #t~init8109 := #t~init8109[6 := 52];
    #t~init8109 := #t~init8109[7 := 0];
    #t~init8109 := #t~init8109[8 := 0];
    #t~init8109 := #t~init8109[9 := 0];
    #t~init8109 := #t~init8109[10 := 0];
    #t~init8109 := #t~init8109[11 := 0];
    #t~init8109 := #t~init8109[12 := 0];
    #t~init8109 := #t~init8109[13 := 0];
    #t~init8109 := #t~init8109[14 := 0];
    #t~init8109 := #t~init8109[15 := 0];
    #t~init8109 := #t~init8109[16 := 0];
    #t~init8109 := #t~init8109[17 := 0];
    #t~init8109 := #t~init8109[18 := 0];
    #t~init8109 := #t~init8109[19 := 0];
    #t~init8109 := #t~init8109[20 := 0];
    #t~init8109 := #t~init8109[21 := 0];
    #t~init8109 := #t~init8109[22 := 0];
    #t~init8109 := #t~init8109[23 := 0];
    #t~init8109 := #t~init8109[24 := 0];
    #t~init8109 := #t~init8109[25 := 0];
    #t~init8109 := #t~init8109[26 := 0];
    #t~init8109 := #t~init8109[27 := 0];
    #t~init8109 := #t~init8109[28 := 0];
    #t~init8109 := #t~init8109[29 := 0];
    #t~init8109 := #t~init8109[30 := 0];
    #t~init8109 := #t~init8109[31 := 0];
    #t~init8109 := #t~init8109[32 := 0];
    #t~init8109 := #t~init8109[33 := 0];
    #t~init8109 := #t~init8109[34 := 0];
    #t~init8109 := #t~init8109[35 := 0];
    #t~init8109 := #t~init8109[36 := 0];
    #t~init8109 := #t~init8109[37 := 0];
    #t~init8109 := #t~init8109[38 := 0];
    #t~init8109 := #t~init8109[39 := 0];
    #t~init8109 := #t~init8109[40 := 0];
    #t~init8109 := #t~init8109[41 := 0];
    #t~init8109 := #t~init8109[42 := 0];
    #t~init8109 := #t~init8109[43 := 0];
    #t~init8109 := #t~init8109[44 := 0];
    #t~init8109 := #t~init8109[45 := 0];
    #t~init8109 := #t~init8109[46 := 0];
    #t~init8109 := #t~init8109[47 := 0];
    #t~init8111.base, #t~init8111.offset := #t~init8111.base[0 := 0], #t~init8111.offset[0 := 0];
    #t~init8111.base, #t~init8111.offset := #t~init8111.base[1 := 0], #t~init8111.offset[1 := 0];
    #t~union8110.raw_lock.val.counter, #t~union8110.magic, #t~union8110.owner_cpu, #t~union8110.owner.base, #t~union8110.owner.offset, #t~union8110.dep_map.key.base, #t~union8110.dep_map.key.offset, #t~union8110.dep_map.class_cache.base, #t~union8110.dep_map.class_cache.offset, #t~union8110.dep_map.name.base, #t~union8110.dep_map.name.offset, #t~union8110.dep_map.cpu, #t~union8110.dep_map.ip := 0, 0, 0, 0, 0, 0, 0, #t~init8111.base, #t~init8111.offset, 0, 0, 0, 0;
    #t~init8114.base, #t~init8114.offset := #t~init8114.base[0 := 0], #t~init8114.offset[0 := 0];
    #t~init8114.base, #t~init8114.offset := #t~init8114.base[1 := 0], #t~init8114.offset[1 := 0];
    #t~union8113.raw_lock.val.counter, #t~union8113.magic, #t~union8113.owner_cpu, #t~union8113.owner.base, #t~union8113.owner.offset, #t~union8113.dep_map.key.base, #t~union8113.dep_map.key.offset, #t~union8113.dep_map.class_cache.base, #t~union8113.dep_map.class_cache.offset, #t~union8113.dep_map.name.base, #t~union8113.dep_map.name.offset, #t~union8113.dep_map.cpu, #t~union8113.dep_map.ip := 0, 0, 0, 0, 0, 0, 0, #t~init8114.base, #t~init8114.offset, 0, 0, 0, 0;
    #t~init8116.base, #t~init8116.offset := #t~init8116.base[0 := 0], #t~init8116.offset[0 := 0];
    #t~init8116.base, #t~init8116.offset := #t~init8116.base[1 := 0], #t~init8116.offset[1 := 0];
    ~saa7164_i2c_adap_template.owner.base, ~saa7164_i2c_adap_template.owner.offset, ~saa7164_i2c_adap_template.class, ~saa7164_i2c_adap_template.algo.base, ~saa7164_i2c_adap_template.algo.offset, ~saa7164_i2c_adap_template.algo_data.base, ~saa7164_i2c_adap_template.algo_data.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.raw_lock.val.counter, ~saa7164_i2c_adap_template.bus_lock.wait_lock.magic, ~saa7164_i2c_adap_template.bus_lock.wait_lock.owner_cpu, ~saa7164_i2c_adap_template.bus_lock.wait_lock.owner.base, ~saa7164_i2c_adap_template.bus_lock.wait_lock.owner.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.key.base, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.key.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.name.base, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.name.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.cpu, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.ip, ~saa7164_i2c_adap_template.bus_lock.waiters.rb_node.base, ~saa7164_i2c_adap_template.bus_lock.waiters.rb_node.offset, ~saa7164_i2c_adap_template.bus_lock.waiters_leftmost.base, ~saa7164_i2c_adap_template.bus_lock.waiters_leftmost.offset, ~saa7164_i2c_adap_template.bus_lock.owner.base, ~saa7164_i2c_adap_template.bus_lock.owner.offset, ~saa7164_i2c_adap_template.bus_lock.save_state, ~saa7164_i2c_adap_template.bus_lock.name.base, ~saa7164_i2c_adap_template.bus_lock.name.offset, ~saa7164_i2c_adap_template.bus_lock.file.base, ~saa7164_i2c_adap_template.bus_lock.file.offset, ~saa7164_i2c_adap_template.bus_lock.line, ~saa7164_i2c_adap_template.bus_lock.magic.base, ~saa7164_i2c_adap_template.bus_lock.magic.offset, ~saa7164_i2c_adap_template.timeout, ~saa7164_i2c_adap_template.retries, ~saa7164_i2c_adap_template.dev.parent.base, ~saa7164_i2c_adap_template.dev.parent.offset, ~saa7164_i2c_adap_template.dev.p.base, ~saa7164_i2c_adap_template.dev.p.offset, ~saa7164_i2c_adap_template.dev.kobj.name.base, ~saa7164_i2c_adap_template.dev.kobj.name.offset, ~saa7164_i2c_adap_template.dev.kobj.entry.next.base, ~saa7164_i2c_adap_template.dev.kobj.entry.next.offset, ~saa7164_i2c_adap_template.dev.kobj.entry.prev.base, ~saa7164_i2c_adap_template.dev.kobj.entry.prev.offset, ~saa7164_i2c_adap_template.dev.kobj.parent.base, ~saa7164_i2c_adap_template.dev.kobj.parent.offset, ~saa7164_i2c_adap_template.dev.kobj.kset.base, ~saa7164_i2c_adap_template.dev.kobj.kset.offset, ~saa7164_i2c_adap_template.dev.kobj.ktype.base, ~saa7164_i2c_adap_template.dev.kobj.ktype.offset, ~saa7164_i2c_adap_template.dev.kobj.sd.base, ~saa7164_i2c_adap_template.dev.kobj.sd.offset, ~saa7164_i2c_adap_template.dev.kobj.kref.refcount.counter, ~saa7164_i2c_adap_template.dev.kobj.release.work.data.counter, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.next.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.next.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.prev.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.prev.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.func.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.func.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.key.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.key.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.name.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.name.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.cpu, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.ip, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.next.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.next.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.pprev.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.pprev.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.expires, ~saa7164_i2c_adap_template.dev.kobj.release.timer.function.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.function.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.data, ~saa7164_i2c_adap_template.dev.kobj.release.timer.flags, ~saa7164_i2c_adap_template.dev.kobj.release.timer.slack, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_pid, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_site.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_site.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_comm, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.key.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.key.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.name.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.name.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.cpu, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.ip, ~saa7164_i2c_adap_template.dev.kobj.release.wq.base, ~saa7164_i2c_adap_template.dev.kobj.release.wq.offset, ~saa7164_i2c_adap_template.dev.kobj.release.cpu, ~saa7164_i2c_adap_template.dev.kobj.state_initialized, ~saa7164_i2c_adap_template.dev.kobj.state_in_sysfs, ~saa7164_i2c_adap_template.dev.kobj.state_add_uevent_sent, ~saa7164_i2c_adap_template.dev.kobj.state_remove_uevent_sent, ~saa7164_i2c_adap_template.dev.kobj.uevent_suppress, ~saa7164_i2c_adap_template.dev.init_name.base, ~saa7164_i2c_adap_template.dev.init_name.offset, ~saa7164_i2c_adap_template.dev.type.base, ~saa7164_i2c_adap_template.dev.type.offset, ~saa7164_i2c_adap_template.dev.mutex.count.counter, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.mutex.wait_list.next.base, ~saa7164_i2c_adap_template.dev.mutex.wait_list.next.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_list.prev.base, ~saa7164_i2c_adap_template.dev.mutex.wait_list.prev.offset, ~saa7164_i2c_adap_template.dev.mutex.owner.base, ~saa7164_i2c_adap_template.dev.mutex.owner.offset, ~saa7164_i2c_adap_template.dev.mutex.magic.base, ~saa7164_i2c_adap_template.dev.mutex.magic.offset, ~saa7164_i2c_adap_template.dev.mutex.dep_map.key.base, ~saa7164_i2c_adap_template.dev.mutex.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.mutex.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.mutex.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.mutex.dep_map.name.base, ~saa7164_i2c_adap_template.dev.mutex.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.mutex.dep_map.cpu, ~saa7164_i2c_adap_template.dev.mutex.dep_map.ip, ~saa7164_i2c_adap_template.dev.bus.base, ~saa7164_i2c_adap_template.dev.bus.offset, ~saa7164_i2c_adap_template.dev.driver.base, ~saa7164_i2c_adap_template.dev.driver.offset, ~saa7164_i2c_adap_template.dev.platform_data.base, ~saa7164_i2c_adap_template.dev.platform_data.offset, ~saa7164_i2c_adap_template.dev.driver_data.base, ~saa7164_i2c_adap_template.dev.driver_data.offset, ~saa7164_i2c_adap_template.dev.power.power_state.event, ~saa7164_i2c_adap_template.dev.power.can_wakeup, ~saa7164_i2c_adap_template.dev.power.async_suspend, ~saa7164_i2c_adap_template.dev.power.is_prepared, ~saa7164_i2c_adap_template.dev.power.is_suspended, ~saa7164_i2c_adap_template.dev.power.is_noirq_suspended, ~saa7164_i2c_adap_template.dev.power.is_late_suspended, ~saa7164_i2c_adap_template.dev.power.ignore_children, ~saa7164_i2c_adap_template.dev.power.early_init, ~saa7164_i2c_adap_template.dev.power.direct_complete, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.entry.next.base, ~saa7164_i2c_adap_template.dev.power.entry.next.offset, ~saa7164_i2c_adap_template.dev.power.entry.prev.base, ~saa7164_i2c_adap_template.dev.power.entry.prev.offset, ~saa7164_i2c_adap_template.dev.power.completion.done, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.next.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.next.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.prev.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.prev.offset, ~saa7164_i2c_adap_template.dev.power.wakeup.base, ~saa7164_i2c_adap_template.dev.power.wakeup.offset, ~saa7164_i2c_adap_template.dev.power.wakeup_path, ~saa7164_i2c_adap_template.dev.power.syscore, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.next.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.next.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.pprev.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.pprev.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.expires, ~saa7164_i2c_adap_template.dev.power.suspend_timer.function.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.function.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.data, ~saa7164_i2c_adap_template.dev.power.suspend_timer.flags, ~saa7164_i2c_adap_template.dev.power.suspend_timer.slack, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_pid, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_site.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_site.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_comm, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.key.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.name.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.cpu, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.ip, ~saa7164_i2c_adap_template.dev.power.timer_expires, ~saa7164_i2c_adap_template.dev.power.work.data.counter, ~saa7164_i2c_adap_template.dev.power.work.entry.next.base, ~saa7164_i2c_adap_template.dev.power.work.entry.next.offset, ~saa7164_i2c_adap_template.dev.power.work.entry.prev.base, ~saa7164_i2c_adap_template.dev.power.work.entry.prev.offset, ~saa7164_i2c_adap_template.dev.power.work.func.base, ~saa7164_i2c_adap_template.dev.power.work.func.offset, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.key.base, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.name.base, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.cpu, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.ip, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.next.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.next.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.prev.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.prev.offset, ~saa7164_i2c_adap_template.dev.power.wakeirq.base, ~saa7164_i2c_adap_template.dev.power.wakeirq.offset, ~saa7164_i2c_adap_template.dev.power.usage_count.counter, ~saa7164_i2c_adap_template.dev.power.child_count.counter, ~saa7164_i2c_adap_template.dev.power.disable_depth, ~saa7164_i2c_adap_template.dev.power.idle_notification, ~saa7164_i2c_adap_template.dev.power.request_pending, ~saa7164_i2c_adap_template.dev.power.deferred_resume, ~saa7164_i2c_adap_template.dev.power.run_wake, ~saa7164_i2c_adap_template.dev.power.runtime_auto, ~saa7164_i2c_adap_template.dev.power.no_callbacks, ~saa7164_i2c_adap_template.dev.power.irq_safe, ~saa7164_i2c_adap_template.dev.power.use_autosuspend, ~saa7164_i2c_adap_template.dev.power.timer_autosuspends, ~saa7164_i2c_adap_template.dev.power.memalloc_noio, ~saa7164_i2c_adap_template.dev.power.request, ~saa7164_i2c_adap_template.dev.power.runtime_status, ~saa7164_i2c_adap_template.dev.power.runtime_error, ~saa7164_i2c_adap_template.dev.power.autosuspend_delay, ~saa7164_i2c_adap_template.dev.power.last_busy, ~saa7164_i2c_adap_template.dev.power.active_jiffies, ~saa7164_i2c_adap_template.dev.power.suspended_jiffies, ~saa7164_i2c_adap_template.dev.power.accounting_timestamp, ~saa7164_i2c_adap_template.dev.power.subsys_data.base, ~saa7164_i2c_adap_template.dev.power.subsys_data.offset, ~saa7164_i2c_adap_template.dev.power.set_latency_tolerance.base, ~saa7164_i2c_adap_template.dev.power.set_latency_tolerance.offset, ~saa7164_i2c_adap_template.dev.power.qos.base, ~saa7164_i2c_adap_template.dev.power.qos.offset, ~saa7164_i2c_adap_template.dev.pm_domain.base, ~saa7164_i2c_adap_template.dev.pm_domain.offset, ~saa7164_i2c_adap_template.dev.pins.base, ~saa7164_i2c_adap_template.dev.pins.offset, ~saa7164_i2c_adap_template.dev.numa_node, ~saa7164_i2c_adap_template.dev.dma_mask.base, ~saa7164_i2c_adap_template.dev.dma_mask.offset, ~saa7164_i2c_adap_template.dev.coherent_dma_mask, ~saa7164_i2c_adap_template.dev.dma_pfn_offset, ~saa7164_i2c_adap_template.dev.dma_parms.base, ~saa7164_i2c_adap_template.dev.dma_parms.offset, ~saa7164_i2c_adap_template.dev.dma_pools.next.base, ~saa7164_i2c_adap_template.dev.dma_pools.next.offset, ~saa7164_i2c_adap_template.dev.dma_pools.prev.base, ~saa7164_i2c_adap_template.dev.dma_pools.prev.offset, ~saa7164_i2c_adap_template.dev.dma_mem.base, ~saa7164_i2c_adap_template.dev.dma_mem.offset, ~saa7164_i2c_adap_template.dev.cma_area.base, ~saa7164_i2c_adap_template.dev.cma_area.offset, ~saa7164_i2c_adap_template.dev.archdata.dma_ops.base, ~saa7164_i2c_adap_template.dev.archdata.dma_ops.offset, ~saa7164_i2c_adap_template.dev.archdata.iommu.base, ~saa7164_i2c_adap_template.dev.archdata.iommu.offset, ~saa7164_i2c_adap_template.dev.of_node.base, ~saa7164_i2c_adap_template.dev.of_node.offset, ~saa7164_i2c_adap_template.dev.fwnode.base, ~saa7164_i2c_adap_template.dev.fwnode.offset, ~saa7164_i2c_adap_template.dev.devt, ~saa7164_i2c_adap_template.dev.id, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.devres_head.next.base, ~saa7164_i2c_adap_template.dev.devres_head.next.offset, ~saa7164_i2c_adap_template.dev.devres_head.prev.base, ~saa7164_i2c_adap_template.dev.devres_head.prev.offset, ~saa7164_i2c_adap_template.dev.knode_class.n_klist.base, ~saa7164_i2c_adap_template.dev.knode_class.n_klist.offset, ~saa7164_i2c_adap_template.dev.knode_class.n_node.next.base, ~saa7164_i2c_adap_template.dev.knode_class.n_node.next.offset, ~saa7164_i2c_adap_template.dev.knode_class.n_node.prev.base, ~saa7164_i2c_adap_template.dev.knode_class.n_node.prev.offset, ~saa7164_i2c_adap_template.dev.knode_class.n_ref.refcount.counter, ~saa7164_i2c_adap_template.dev.class.base, ~saa7164_i2c_adap_template.dev.class.offset, ~saa7164_i2c_adap_template.dev.groups.base, ~saa7164_i2c_adap_template.dev.groups.offset, ~saa7164_i2c_adap_template.dev.release.base, ~saa7164_i2c_adap_template.dev.release.offset, ~saa7164_i2c_adap_template.dev.iommu_group.base, ~saa7164_i2c_adap_template.dev.iommu_group.offset, ~saa7164_i2c_adap_template.dev.offline_disabled, ~saa7164_i2c_adap_template.dev.offline, ~saa7164_i2c_adap_template.nr, ~saa7164_i2c_adap_template.name, ~saa7164_i2c_adap_template.dev_released.done, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev_released.wait.task_list.next.base, ~saa7164_i2c_adap_template.dev_released.wait.task_list.next.offset, ~saa7164_i2c_adap_template.dev_released.wait.task_list.prev.base, ~saa7164_i2c_adap_template.dev_released.wait.task_list.prev.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.count.counter, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.next.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.next.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.prev.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.prev.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.owner.base, ~saa7164_i2c_adap_template.userspace_clients_lock.owner.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.magic.base, ~saa7164_i2c_adap_template.userspace_clients_lock.magic.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.key.base, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.key.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.name.base, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.name.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.cpu, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.ip, ~saa7164_i2c_adap_template.userspace_clients.next.base, ~saa7164_i2c_adap_template.userspace_clients.next.offset, ~saa7164_i2c_adap_template.userspace_clients.prev.base, ~saa7164_i2c_adap_template.userspace_clients.prev.offset, ~saa7164_i2c_adap_template.bus_recovery_info.base, ~saa7164_i2c_adap_template.bus_recovery_info.offset, ~saa7164_i2c_adap_template.quirks.base, ~saa7164_i2c_adap_template.quirks.offset := ~#__this_module.base, ~#__this_module.offset, 0, ~#saa7164_i2c_algo_template.base, ~#saa7164_i2c_algo_template.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init8086.base, #t~init8086.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init8087.base, #t~init8087.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init8088, 0, 0, #t~init8089.base, #t~init8089.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~union8090.raw_lock.val.counter, #t~union8090.magic, #t~union8090.owner_cpu, #t~union8090.owner.base, #t~union8090.owner.offset, #t~union8090.dep_map.key.base, #t~union8090.dep_map.key.offset, #t~union8090.dep_map.class_cache.base, #t~union8090.dep_map.class_cache.offset, #t~union8090.dep_map.name.base, #t~union8090.dep_map.name.offset, #t~union8090.dep_map.cpu, #t~union8090.dep_map.ip, #t~union8092.__padding, #t~union8092.dep_map.key.base, #t~union8092.dep_map.key.offset, #t~union8092.dep_map.class_cache.base, #t~union8092.dep_map.class_cache.offset, #t~union8092.dep_map.name.base, #t~union8092.dep_map.name.offset, #t~union8092.dep_map.cpu, #t~union8092.dep_map.ip, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init8093.base, #t~init8093.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~union8094.raw_lock.val.counter, #t~union8094.magic, #t~union8094.owner_cpu, #t~union8094.owner.base, #t~union8094.owner.offset, #t~union8094.dep_map.key.base, #t~union8094.dep_map.key.offset, #t~union8094.dep_map.class_cache.base, #t~union8094.dep_map.class_cache.offset, #t~union8094.dep_map.name.base, #t~union8094.dep_map.name.offset, #t~union8094.dep_map.cpu, #t~union8094.dep_map.ip, #t~union8096.__padding, #t~union8096.dep_map.key.base, #t~union8096.dep_map.key.offset, #t~union8096.dep_map.class_cache.base, #t~union8096.dep_map.class_cache.offset, #t~union8096.dep_map.name.base, #t~union8096.dep_map.name.offset, #t~union8096.dep_map.cpu, #t~union8096.dep_map.ip, 0, 0, 0, 0, 0, #t~union8097.raw_lock.val.counter, #t~union8097.magic, #t~union8097.owner_cpu, #t~union8097.owner.base, #t~union8097.owner.offset, #t~union8097.dep_map.key.base, #t~union8097.dep_map.key.offset, #t~union8097.dep_map.class_cache.base, #t~union8097.dep_map.class_cache.offset, #t~union8097.dep_map.name.base, #t~union8097.dep_map.name.offset, #t~union8097.dep_map.cpu, #t~union8097.dep_map.ip, #t~union8099.__padding, #t~union8099.dep_map.key.base, #t~union8099.dep_map.key.offset, #t~union8099.dep_map.class_cache.base, #t~union8099.dep_map.class_cache.offset, #t~union8099.dep_map.name.base, #t~union8099.dep_map.name.offset, #t~union8099.dep_map.cpu, #t~union8099.dep_map.ip, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init8100, 0, 0, #t~init8101.base, #t~init8101.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init8102.base, #t~init8102.offset, 0, 0, 0, 0, #t~union8103.raw_lock.val.counter, #t~union8103.magic, #t~union8103.owner_cpu, #t~union8103.owner.base, #t~union8103.owner.offset, #t~union8103.dep_map.key.base, #t~union8103.dep_map.key.offset, #t~union8103.dep_map.class_cache.base, #t~union8103.dep_map.class_cache.offset, #t~union8103.dep_map.name.base, #t~union8103.dep_map.name.offset, #t~union8103.dep_map.cpu, #t~union8103.dep_map.ip, #t~union8105.__padding, #t~union8105.dep_map.key.base, #t~union8105.dep_map.key.offset, #t~union8105.dep_map.class_cache.base, #t~union8105.dep_map.class_cache.offset, #t~union8105.dep_map.name.base, #t~union8105.dep_map.name.offset, #t~union8105.dep_map.cpu, #t~union8105.dep_map.ip, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~union8106.raw_lock.val.counter, #t~union8106.magic, #t~union8106.owner_cpu, #t~union8106.owner.base, #t~union8106.owner.offset, #t~union8106.dep_map.key.base, #t~union8106.dep_map.key.offset, #t~union8106.dep_map.class_cache.base, #t~union8106.dep_map.class_cache.offset, #t~union8106.dep_map.name.base, #t~union8106.dep_map.name.offset, #t~union8106.dep_map.cpu, #t~union8106.dep_map.ip, #t~union8108.__padding, #t~union8108.dep_map.key.base, #t~union8108.dep_map.key.offset, #t~union8108.dep_map.class_cache.base, #t~union8108.dep_map.class_cache.offset, #t~union8108.dep_map.name.base, #t~union8108.dep_map.name.offset, #t~union8108.dep_map.cpu, #t~union8108.dep_map.ip, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init8109, 0, #t~union8110.raw_lock.val.counter, #t~union8110.magic, #t~union8110.owner_cpu, #t~union8110.owner.base, #t~union8110.owner.offset, #t~union8110.dep_map.key.base, #t~union8110.dep_map.key.offset, #t~union8110.dep_map.class_cache.base, #t~union8110.dep_map.class_cache.offset, #t~union8110.dep_map.name.base, #t~union8110.dep_map.name.offset, #t~union8110.dep_map.cpu, #t~union8110.dep_map.ip, #t~union8112.__padding, #t~union8112.dep_map.key.base, #t~union8112.dep_map.key.offset, #t~union8112.dep_map.class_cache.base, #t~union8112.dep_map.class_cache.offset, #t~union8112.dep_map.name.base, #t~union8112.dep_map.name.offset, #t~union8112.dep_map.cpu, #t~union8112.dep_map.ip, 0, 0, 0, 0, 0, #t~union8113.raw_lock.val.counter, #t~union8113.magic, #t~union8113.owner_cpu, #t~union8113.owner.base, #t~union8113.owner.offset, #t~union8113.dep_map.key.base, #t~union8113.dep_map.key.offset, #t~union8113.dep_map.class_cache.base, #t~union8113.dep_map.class_cache.offset, #t~union8113.dep_map.name.base, #t~union8113.dep_map.name.offset, #t~union8113.dep_map.cpu, #t~union8113.dep_map.ip, #t~union8115.__padding, #t~union8115.dep_map.key.base, #t~union8115.dep_map.key.offset, #t~union8115.dep_map.class_cache.base, #t~union8115.dep_map.class_cache.offset, #t~union8115.dep_map.name.base, #t~union8115.dep_map.name.offset, #t~union8115.dep_map.cpu, #t~union8115.dep_map.ip, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init8116.base, #t~init8116.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    havoc #t~init8086.base, #t~init8086.offset;
    havoc #t~init8087.base, #t~init8087.offset;
    havoc #t~init8088;
    havoc #t~init8089.base, #t~init8089.offset;
    havoc #t~init8091.base, #t~init8091.offset;
    havoc #t~union8090.raw_lock.val.counter, #t~union8090.magic, #t~union8090.owner_cpu, #t~union8090.owner.base, #t~union8090.owner.offset, #t~union8090.dep_map.key.base, #t~union8090.dep_map.key.offset, #t~union8090.dep_map.class_cache.base, #t~union8090.dep_map.class_cache.offset, #t~union8090.dep_map.name.base, #t~union8090.dep_map.name.offset, #t~union8090.dep_map.cpu, #t~union8090.dep_map.ip;
    havoc #t~union8092.__padding, #t~union8092.dep_map.key.base, #t~union8092.dep_map.key.offset, #t~union8092.dep_map.class_cache.base, #t~union8092.dep_map.class_cache.offset, #t~union8092.dep_map.name.base, #t~union8092.dep_map.name.offset, #t~union8092.dep_map.cpu, #t~union8092.dep_map.ip;
    havoc #t~init8093.base, #t~init8093.offset;
    havoc #t~init8095.base, #t~init8095.offset;
    havoc #t~union8094.raw_lock.val.counter, #t~union8094.magic, #t~union8094.owner_cpu, #t~union8094.owner.base, #t~union8094.owner.offset, #t~union8094.dep_map.key.base, #t~union8094.dep_map.key.offset, #t~union8094.dep_map.class_cache.base, #t~union8094.dep_map.class_cache.offset, #t~union8094.dep_map.name.base, #t~union8094.dep_map.name.offset, #t~union8094.dep_map.cpu, #t~union8094.dep_map.ip;
    havoc #t~union8096.__padding, #t~union8096.dep_map.key.base, #t~union8096.dep_map.key.offset, #t~union8096.dep_map.class_cache.base, #t~union8096.dep_map.class_cache.offset, #t~union8096.dep_map.name.base, #t~union8096.dep_map.name.offset, #t~union8096.dep_map.cpu, #t~union8096.dep_map.ip;
    havoc #t~init8098.base, #t~init8098.offset;
    havoc #t~union8097.raw_lock.val.counter, #t~union8097.magic, #t~union8097.owner_cpu, #t~union8097.owner.base, #t~union8097.owner.offset, #t~union8097.dep_map.key.base, #t~union8097.dep_map.key.offset, #t~union8097.dep_map.class_cache.base, #t~union8097.dep_map.class_cache.offset, #t~union8097.dep_map.name.base, #t~union8097.dep_map.name.offset, #t~union8097.dep_map.cpu, #t~union8097.dep_map.ip;
    havoc #t~union8099.__padding, #t~union8099.dep_map.key.base, #t~union8099.dep_map.key.offset, #t~union8099.dep_map.class_cache.base, #t~union8099.dep_map.class_cache.offset, #t~union8099.dep_map.name.base, #t~union8099.dep_map.name.offset, #t~union8099.dep_map.cpu, #t~union8099.dep_map.ip;
    havoc #t~init8100;
    havoc #t~init8101.base, #t~init8101.offset;
    havoc #t~init8102.base, #t~init8102.offset;
    havoc #t~init8104.base, #t~init8104.offset;
    havoc #t~union8103.raw_lock.val.counter, #t~union8103.magic, #t~union8103.owner_cpu, #t~union8103.owner.base, #t~union8103.owner.offset, #t~union8103.dep_map.key.base, #t~union8103.dep_map.key.offset, #t~union8103.dep_map.class_cache.base, #t~union8103.dep_map.class_cache.offset, #t~union8103.dep_map.name.base, #t~union8103.dep_map.name.offset, #t~union8103.dep_map.cpu, #t~union8103.dep_map.ip;
    havoc #t~union8105.__padding, #t~union8105.dep_map.key.base, #t~union8105.dep_map.key.offset, #t~union8105.dep_map.class_cache.base, #t~union8105.dep_map.class_cache.offset, #t~union8105.dep_map.name.base, #t~union8105.dep_map.name.offset, #t~union8105.dep_map.cpu, #t~union8105.dep_map.ip;
    havoc #t~init8107.base, #t~init8107.offset;
    havoc #t~union8106.raw_lock.val.counter, #t~union8106.magic, #t~union8106.owner_cpu, #t~union8106.owner.base, #t~union8106.owner.offset, #t~union8106.dep_map.key.base, #t~union8106.dep_map.key.offset, #t~union8106.dep_map.class_cache.base, #t~union8106.dep_map.class_cache.offset, #t~union8106.dep_map.name.base, #t~union8106.dep_map.name.offset, #t~union8106.dep_map.cpu, #t~union8106.dep_map.ip;
    havoc #t~union8108.__padding, #t~union8108.dep_map.key.base, #t~union8108.dep_map.key.offset, #t~union8108.dep_map.class_cache.base, #t~union8108.dep_map.class_cache.offset, #t~union8108.dep_map.name.base, #t~union8108.dep_map.name.offset, #t~union8108.dep_map.cpu, #t~union8108.dep_map.ip;
    havoc #t~init8109;
    havoc #t~init8111.base, #t~init8111.offset;
    havoc #t~union8110.raw_lock.val.counter, #t~union8110.magic, #t~union8110.owner_cpu, #t~union8110.owner.base, #t~union8110.owner.offset, #t~union8110.dep_map.key.base, #t~union8110.dep_map.key.offset, #t~union8110.dep_map.class_cache.base, #t~union8110.dep_map.class_cache.offset, #t~union8110.dep_map.name.base, #t~union8110.dep_map.name.offset, #t~union8110.dep_map.cpu, #t~union8110.dep_map.ip;
    havoc #t~union8112.__padding, #t~union8112.dep_map.key.base, #t~union8112.dep_map.key.offset, #t~union8112.dep_map.class_cache.base, #t~union8112.dep_map.class_cache.offset, #t~union8112.dep_map.name.base, #t~union8112.dep_map.name.offset, #t~union8112.dep_map.cpu, #t~union8112.dep_map.ip;
    havoc #t~init8114.base, #t~init8114.offset;
    havoc #t~union8113.raw_lock.val.counter, #t~union8113.magic, #t~union8113.owner_cpu, #t~union8113.owner.base, #t~union8113.owner.offset, #t~union8113.dep_map.key.base, #t~union8113.dep_map.key.offset, #t~union8113.dep_map.class_cache.base, #t~union8113.dep_map.class_cache.offset, #t~union8113.dep_map.name.base, #t~union8113.dep_map.name.offset, #t~union8113.dep_map.cpu, #t~union8113.dep_map.ip;
    havoc #t~union8115.__padding, #t~union8115.dep_map.key.base, #t~union8115.dep_map.key.offset, #t~union8115.dep_map.class_cache.base, #t~union8115.dep_map.class_cache.offset, #t~union8115.dep_map.name.base, #t~union8115.dep_map.name.offset, #t~union8115.dep_map.cpu, #t~union8115.dep_map.ip;
    havoc #t~init8116.base, #t~init8116.offset;
    #t~init8117 := #t~init8117[0 := 115];
    #t~init8117 := #t~init8117[1 := 97];
    #t~init8117 := #t~init8117[2 := 97];
    #t~init8117 := #t~init8117[3 := 55];
    #t~init8117 := #t~init8117[4 := 49];
    #t~init8117 := #t~init8117[5 := 54];
    #t~init8117 := #t~init8117[6 := 52];
    #t~init8117 := #t~init8117[7 := 32];
    #t~init8117 := #t~init8117[8 := 105];
    #t~init8117 := #t~init8117[9 := 110];
    #t~init8117 := #t~init8117[10 := 116];
    #t~init8117 := #t~init8117[11 := 101];
    #t~init8117 := #t~init8117[12 := 114];
    #t~init8117 := #t~init8117[13 := 110];
    #t~init8117 := #t~init8117[14 := 97];
    #t~init8117 := #t~init8117[15 := 108];
    #t~init8117 := #t~init8117[16 := 0];
    #t~init8117 := #t~init8117[17 := 0];
    #t~init8117 := #t~init8117[18 := 0];
    #t~init8117 := #t~init8117[19 := 0];
    #t~init8118.base, #t~init8118.offset := #t~init8118.base[0 := 0], #t~init8118.offset[0 := 0];
    #t~init8118.base, #t~init8118.offset := #t~init8118.base[1 := 0], #t~init8118.offset[1 := 0];
    #t~init8119 := #t~init8119[0 := 0];
    #t~init8119 := #t~init8119[1 := 0];
    #t~init8119 := #t~init8119[2 := 0];
    #t~init8119 := #t~init8119[3 := 0];
    #t~init8119 := #t~init8119[4 := 0];
    #t~init8119 := #t~init8119[5 := 0];
    #t~init8119 := #t~init8119[6 := 0];
    #t~init8119 := #t~init8119[7 := 0];
    #t~init8119 := #t~init8119[8 := 0];
    #t~init8119 := #t~init8119[9 := 0];
    #t~init8119 := #t~init8119[10 := 0];
    #t~init8119 := #t~init8119[11 := 0];
    #t~init8119 := #t~init8119[12 := 0];
    #t~init8119 := #t~init8119[13 := 0];
    #t~init8119 := #t~init8119[14 := 0];
    #t~init8119 := #t~init8119[15 := 0];
    #t~init8120.base, #t~init8120.offset := #t~init8120.base[0 := 0], #t~init8120.offset[0 := 0];
    #t~init8120.base, #t~init8120.offset := #t~init8120.base[1 := 0], #t~init8120.offset[1 := 0];
    #t~init8122.base, #t~init8122.offset := #t~init8122.base[0 := 0], #t~init8122.offset[0 := 0];
    #t~init8122.base, #t~init8122.offset := #t~init8122.base[1 := 0], #t~init8122.offset[1 := 0];
    #t~union8121.raw_lock.val.counter, #t~union8121.magic, #t~union8121.owner_cpu, #t~union8121.owner.base, #t~union8121.owner.offset, #t~union8121.dep_map.key.base, #t~union8121.dep_map.key.offset, #t~union8121.dep_map.class_cache.base, #t~union8121.dep_map.class_cache.offset, #t~union8121.dep_map.name.base, #t~union8121.dep_map.name.offset, #t~union8121.dep_map.cpu, #t~union8121.dep_map.ip := 0, 0, 0, 0, 0, 0, 0, #t~init8122.base, #t~init8122.offset, 0, 0, 0, 0;
    #t~init8124.base, #t~init8124.offset := #t~init8124.base[0 := 0], #t~init8124.offset[0 := 0];
    #t~init8124.base, #t~init8124.offset := #t~init8124.base[1 := 0], #t~init8124.offset[1 := 0];
    #t~init8126.base, #t~init8126.offset := #t~init8126.base[0 := 0], #t~init8126.offset[0 := 0];
    #t~init8126.base, #t~init8126.offset := #t~init8126.base[1 := 0], #t~init8126.offset[1 := 0];
    #t~union8125.raw_lock.val.counter, #t~union8125.magic, #t~union8125.owner_cpu, #t~union8125.owner.base, #t~union8125.owner.offset, #t~union8125.dep_map.key.base, #t~union8125.dep_map.key.offset, #t~union8125.dep_map.class_cache.base, #t~union8125.dep_map.class_cache.offset, #t~union8125.dep_map.name.base, #t~union8125.dep_map.name.offset, #t~union8125.dep_map.cpu, #t~union8125.dep_map.ip := 0, 0, 0, 0, 0, 0, 0, #t~init8126.base, #t~init8126.offset, 0, 0, 0, 0;
    #t~init8129.base, #t~init8129.offset := #t~init8129.base[0 := 0], #t~init8129.offset[0 := 0];
    #t~init8129.base, #t~init8129.offset := #t~init8129.base[1 := 0], #t~init8129.offset[1 := 0];
    #t~union8128.raw_lock.val.counter, #t~union8128.magic, #t~union8128.owner_cpu, #t~union8128.owner.base, #t~union8128.owner.offset, #t~union8128.dep_map.key.base, #t~union8128.dep_map.key.offset, #t~union8128.dep_map.class_cache.base, #t~union8128.dep_map.class_cache.offset, #t~union8128.dep_map.name.base, #t~union8128.dep_map.name.offset, #t~union8128.dep_map.cpu, #t~union8128.dep_map.ip := 0, 0, 0, 0, 0, 0, 0, #t~init8129.base, #t~init8129.offset, 0, 0, 0, 0;
    #t~init8131 := #t~init8131[0 := 0];
    #t~init8131 := #t~init8131[1 := 0];
    #t~init8131 := #t~init8131[2 := 0];
    #t~init8131 := #t~init8131[3 := 0];
    #t~init8131 := #t~init8131[4 := 0];
    #t~init8131 := #t~init8131[5 := 0];
    #t~init8131 := #t~init8131[6 := 0];
    #t~init8131 := #t~init8131[7 := 0];
    #t~init8131 := #t~init8131[8 := 0];
    #t~init8131 := #t~init8131[9 := 0];
    #t~init8131 := #t~init8131[10 := 0];
    #t~init8131 := #t~init8131[11 := 0];
    #t~init8131 := #t~init8131[12 := 0];
    #t~init8131 := #t~init8131[13 := 0];
    #t~init8131 := #t~init8131[14 := 0];
    #t~init8131 := #t~init8131[15 := 0];
    #t~init8132.base, #t~init8132.offset := #t~init8132.base[0 := 0], #t~init8132.offset[0 := 0];
    #t~init8132.base, #t~init8132.offset := #t~init8132.base[1 := 0], #t~init8132.offset[1 := 0];
    #t~init8133.base, #t~init8133.offset := #t~init8133.base[0 := 0], #t~init8133.offset[0 := 0];
    #t~init8133.base, #t~init8133.offset := #t~init8133.base[1 := 0], #t~init8133.offset[1 := 0];
    #t~init8135.base, #t~init8135.offset := #t~init8135.base[0 := 0], #t~init8135.offset[0 := 0];
    #t~init8135.base, #t~init8135.offset := #t~init8135.base[1 := 0], #t~init8135.offset[1 := 0];
    #t~union8134.raw_lock.val.counter, #t~union8134.magic, #t~union8134.owner_cpu, #t~union8134.owner.base, #t~union8134.owner.offset, #t~union8134.dep_map.key.base, #t~union8134.dep_map.key.offset, #t~union8134.dep_map.class_cache.base, #t~union8134.dep_map.class_cache.offset, #t~union8134.dep_map.name.base, #t~union8134.dep_map.name.offset, #t~union8134.dep_map.cpu, #t~union8134.dep_map.ip := 0, 0, 0, 0, 0, 0, 0, #t~init8135.base, #t~init8135.offset, 0, 0, 0, 0;
    #t~init8138.base, #t~init8138.offset := #t~init8138.base[0 := 0], #t~init8138.offset[0 := 0];
    #t~init8138.base, #t~init8138.offset := #t~init8138.base[1 := 0], #t~init8138.offset[1 := 0];
    #t~union8137.raw_lock.val.counter, #t~union8137.magic, #t~union8137.owner_cpu, #t~union8137.owner.base, #t~union8137.owner.offset, #t~union8137.dep_map.key.base, #t~union8137.dep_map.key.offset, #t~union8137.dep_map.class_cache.base, #t~union8137.dep_map.class_cache.offset, #t~union8137.dep_map.name.base, #t~union8137.dep_map.name.offset, #t~union8137.dep_map.cpu, #t~union8137.dep_map.ip := 0, 0, 0, 0, 0, 0, 0, #t~init8138.base, #t~init8138.offset, 0, 0, 0, 0;
    ~saa7164_i2c_client_template.flags, ~saa7164_i2c_client_template.addr, ~saa7164_i2c_client_template.name, ~saa7164_i2c_client_template.adapter.base, ~saa7164_i2c_client_template.adapter.offset, ~saa7164_i2c_client_template.dev.parent.base, ~saa7164_i2c_client_template.dev.parent.offset, ~saa7164_i2c_client_template.dev.p.base, ~saa7164_i2c_client_template.dev.p.offset, ~saa7164_i2c_client_template.dev.kobj.name.base, ~saa7164_i2c_client_template.dev.kobj.name.offset, ~saa7164_i2c_client_template.dev.kobj.entry.next.base, ~saa7164_i2c_client_template.dev.kobj.entry.next.offset, ~saa7164_i2c_client_template.dev.kobj.entry.prev.base, ~saa7164_i2c_client_template.dev.kobj.entry.prev.offset, ~saa7164_i2c_client_template.dev.kobj.parent.base, ~saa7164_i2c_client_template.dev.kobj.parent.offset, ~saa7164_i2c_client_template.dev.kobj.kset.base, ~saa7164_i2c_client_template.dev.kobj.kset.offset, ~saa7164_i2c_client_template.dev.kobj.ktype.base, ~saa7164_i2c_client_template.dev.kobj.ktype.offset, ~saa7164_i2c_client_template.dev.kobj.sd.base, ~saa7164_i2c_client_template.dev.kobj.sd.offset, ~saa7164_i2c_client_template.dev.kobj.kref.refcount.counter, ~saa7164_i2c_client_template.dev.kobj.release.work.data.counter, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.next.base, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.next.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.prev.base, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.prev.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.func.base, ~saa7164_i2c_client_template.dev.kobj.release.work.func.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.key.base, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.key.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.class_cache.base, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.name.base, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.name.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.cpu, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.ip, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.next.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.next.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.pprev.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.pprev.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.expires, ~saa7164_i2c_client_template.dev.kobj.release.timer.function.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.function.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.data, ~saa7164_i2c_client_template.dev.kobj.release.timer.flags, ~saa7164_i2c_client_template.dev.kobj.release.timer.slack, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_pid, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_site.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_site.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_comm, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.key.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.key.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.class_cache.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.name.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.name.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.cpu, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.ip, ~saa7164_i2c_client_template.dev.kobj.release.wq.base, ~saa7164_i2c_client_template.dev.kobj.release.wq.offset, ~saa7164_i2c_client_template.dev.kobj.release.cpu, ~saa7164_i2c_client_template.dev.kobj.state_initialized, ~saa7164_i2c_client_template.dev.kobj.state_in_sysfs, ~saa7164_i2c_client_template.dev.kobj.state_add_uevent_sent, ~saa7164_i2c_client_template.dev.kobj.state_remove_uevent_sent, ~saa7164_i2c_client_template.dev.kobj.uevent_suppress, ~saa7164_i2c_client_template.dev.init_name.base, ~saa7164_i2c_client_template.dev.init_name.offset, ~saa7164_i2c_client_template.dev.type.base, ~saa7164_i2c_client_template.dev.type.offset, ~saa7164_i2c_client_template.dev.mutex.count.counter, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.mutex.wait_list.next.base, ~saa7164_i2c_client_template.dev.mutex.wait_list.next.offset, ~saa7164_i2c_client_template.dev.mutex.wait_list.prev.base, ~saa7164_i2c_client_template.dev.mutex.wait_list.prev.offset, ~saa7164_i2c_client_template.dev.mutex.owner.base, ~saa7164_i2c_client_template.dev.mutex.owner.offset, ~saa7164_i2c_client_template.dev.mutex.magic.base, ~saa7164_i2c_client_template.dev.mutex.magic.offset, ~saa7164_i2c_client_template.dev.mutex.dep_map.key.base, ~saa7164_i2c_client_template.dev.mutex.dep_map.key.offset, ~saa7164_i2c_client_template.dev.mutex.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.mutex.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.mutex.dep_map.name.base, ~saa7164_i2c_client_template.dev.mutex.dep_map.name.offset, ~saa7164_i2c_client_template.dev.mutex.dep_map.cpu, ~saa7164_i2c_client_template.dev.mutex.dep_map.ip, ~saa7164_i2c_client_template.dev.bus.base, ~saa7164_i2c_client_template.dev.bus.offset, ~saa7164_i2c_client_template.dev.driver.base, ~saa7164_i2c_client_template.dev.driver.offset, ~saa7164_i2c_client_template.dev.platform_data.base, ~saa7164_i2c_client_template.dev.platform_data.offset, ~saa7164_i2c_client_template.dev.driver_data.base, ~saa7164_i2c_client_template.dev.driver_data.offset, ~saa7164_i2c_client_template.dev.power.power_state.event, ~saa7164_i2c_client_template.dev.power.can_wakeup, ~saa7164_i2c_client_template.dev.power.async_suspend, ~saa7164_i2c_client_template.dev.power.is_prepared, ~saa7164_i2c_client_template.dev.power.is_suspended, ~saa7164_i2c_client_template.dev.power.is_noirq_suspended, ~saa7164_i2c_client_template.dev.power.is_late_suspended, ~saa7164_i2c_client_template.dev.power.ignore_children, ~saa7164_i2c_client_template.dev.power.early_init, ~saa7164_i2c_client_template.dev.power.direct_complete, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.power.entry.next.base, ~saa7164_i2c_client_template.dev.power.entry.next.offset, ~saa7164_i2c_client_template.dev.power.entry.prev.base, ~saa7164_i2c_client_template.dev.power.entry.prev.offset, ~saa7164_i2c_client_template.dev.power.completion.done, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.next.base, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.next.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.prev.base, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.prev.offset, ~saa7164_i2c_client_template.dev.power.wakeup.base, ~saa7164_i2c_client_template.dev.power.wakeup.offset, ~saa7164_i2c_client_template.dev.power.wakeup_path, ~saa7164_i2c_client_template.dev.power.syscore, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.next.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.next.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.pprev.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.pprev.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.expires, ~saa7164_i2c_client_template.dev.power.suspend_timer.function.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.function.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.data, ~saa7164_i2c_client_template.dev.power.suspend_timer.flags, ~saa7164_i2c_client_template.dev.power.suspend_timer.slack, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_pid, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_site.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_site.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_comm, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.key.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.key.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.name.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.name.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.cpu, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.ip, ~saa7164_i2c_client_template.dev.power.timer_expires, ~saa7164_i2c_client_template.dev.power.work.data.counter, ~saa7164_i2c_client_template.dev.power.work.entry.next.base, ~saa7164_i2c_client_template.dev.power.work.entry.next.offset, ~saa7164_i2c_client_template.dev.power.work.entry.prev.base, ~saa7164_i2c_client_template.dev.power.work.entry.prev.offset, ~saa7164_i2c_client_template.dev.power.work.func.base, ~saa7164_i2c_client_template.dev.power.work.func.offset, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.key.base, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.key.offset, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.name.base, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.name.offset, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.cpu, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.ip, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.next.base, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.next.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.prev.base, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.prev.offset, ~saa7164_i2c_client_template.dev.power.wakeirq.base, ~saa7164_i2c_client_template.dev.power.wakeirq.offset, ~saa7164_i2c_client_template.dev.power.usage_count.counter, ~saa7164_i2c_client_template.dev.power.child_count.counter, ~saa7164_i2c_client_template.dev.power.disable_depth, ~saa7164_i2c_client_template.dev.power.idle_notification, ~saa7164_i2c_client_template.dev.power.request_pending, ~saa7164_i2c_client_template.dev.power.deferred_resume, ~saa7164_i2c_client_template.dev.power.run_wake, ~saa7164_i2c_client_template.dev.power.runtime_auto, ~saa7164_i2c_client_template.dev.power.no_callbacks, ~saa7164_i2c_client_template.dev.power.irq_safe, ~saa7164_i2c_client_template.dev.power.use_autosuspend, ~saa7164_i2c_client_template.dev.power.timer_autosuspends, ~saa7164_i2c_client_template.dev.power.memalloc_noio, ~saa7164_i2c_client_template.dev.power.request, ~saa7164_i2c_client_template.dev.power.runtime_status, ~saa7164_i2c_client_template.dev.power.runtime_error, ~saa7164_i2c_client_template.dev.power.autosuspend_delay, ~saa7164_i2c_client_template.dev.power.last_busy, ~saa7164_i2c_client_template.dev.power.active_jiffies, ~saa7164_i2c_client_template.dev.power.suspended_jiffies, ~saa7164_i2c_client_template.dev.power.accounting_timestamp, ~saa7164_i2c_client_template.dev.power.subsys_data.base, ~saa7164_i2c_client_template.dev.power.subsys_data.offset, ~saa7164_i2c_client_template.dev.power.set_latency_tolerance.base, ~saa7164_i2c_client_template.dev.power.set_latency_tolerance.offset, ~saa7164_i2c_client_template.dev.power.qos.base, ~saa7164_i2c_client_template.dev.power.qos.offset, ~saa7164_i2c_client_template.dev.pm_domain.base, ~saa7164_i2c_client_template.dev.pm_domain.offset, ~saa7164_i2c_client_template.dev.pins.base, ~saa7164_i2c_client_template.dev.pins.offset, ~saa7164_i2c_client_template.dev.numa_node, ~saa7164_i2c_client_template.dev.dma_mask.base, ~saa7164_i2c_client_template.dev.dma_mask.offset, ~saa7164_i2c_client_template.dev.coherent_dma_mask, ~saa7164_i2c_client_template.dev.dma_pfn_offset, ~saa7164_i2c_client_template.dev.dma_parms.base, ~saa7164_i2c_client_template.dev.dma_parms.offset, ~saa7164_i2c_client_template.dev.dma_pools.next.base, ~saa7164_i2c_client_template.dev.dma_pools.next.offset, ~saa7164_i2c_client_template.dev.dma_pools.prev.base, ~saa7164_i2c_client_template.dev.dma_pools.prev.offset, ~saa7164_i2c_client_template.dev.dma_mem.base, ~saa7164_i2c_client_template.dev.dma_mem.offset, ~saa7164_i2c_client_template.dev.cma_area.base, ~saa7164_i2c_client_template.dev.cma_area.offset, ~saa7164_i2c_client_template.dev.archdata.dma_ops.base, ~saa7164_i2c_client_template.dev.archdata.dma_ops.offset, ~saa7164_i2c_client_template.dev.archdata.iommu.base, ~saa7164_i2c_client_template.dev.archdata.iommu.offset, ~saa7164_i2c_client_template.dev.of_node.base, ~saa7164_i2c_client_template.dev.of_node.offset, ~saa7164_i2c_client_template.dev.fwnode.base, ~saa7164_i2c_client_template.dev.fwnode.offset, ~saa7164_i2c_client_template.dev.devt, ~saa7164_i2c_client_template.dev.id, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.devres_head.next.base, ~saa7164_i2c_client_template.dev.devres_head.next.offset, ~saa7164_i2c_client_template.dev.devres_head.prev.base, ~saa7164_i2c_client_template.dev.devres_head.prev.offset, ~saa7164_i2c_client_template.dev.knode_class.n_klist.base, ~saa7164_i2c_client_template.dev.knode_class.n_klist.offset, ~saa7164_i2c_client_template.dev.knode_class.n_node.next.base, ~saa7164_i2c_client_template.dev.knode_class.n_node.next.offset, ~saa7164_i2c_client_template.dev.knode_class.n_node.prev.base, ~saa7164_i2c_client_template.dev.knode_class.n_node.prev.offset, ~saa7164_i2c_client_template.dev.knode_class.n_ref.refcount.counter, ~saa7164_i2c_client_template.dev.class.base, ~saa7164_i2c_client_template.dev.class.offset, ~saa7164_i2c_client_template.dev.groups.base, ~saa7164_i2c_client_template.dev.groups.offset, ~saa7164_i2c_client_template.dev.release.base, ~saa7164_i2c_client_template.dev.release.offset, ~saa7164_i2c_client_template.dev.iommu_group.base, ~saa7164_i2c_client_template.dev.iommu_group.offset, ~saa7164_i2c_client_template.dev.offline_disabled, ~saa7164_i2c_client_template.dev.offline, ~saa7164_i2c_client_template.irq, ~saa7164_i2c_client_template.detected.next.base, ~saa7164_i2c_client_template.detected.next.offset, ~saa7164_i2c_client_template.detected.prev.base, ~saa7164_i2c_client_template.detected.prev.offset, ~saa7164_i2c_client_template.slave_cb.base, ~saa7164_i2c_client_template.slave_cb.offset := 0, 0, #t~init8117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init8118.base, #t~init8118.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init8119, 0, 0, #t~init8120.base, #t~init8120.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~union8121.raw_lock.val.counter, #t~union8121.magic, #t~union8121.owner_cpu, #t~union8121.owner.base, #t~union8121.owner.offset, #t~union8121.dep_map.key.base, #t~union8121.dep_map.key.offset, #t~union8121.dep_map.class_cache.base, #t~union8121.dep_map.class_cache.offset, #t~union8121.dep_map.name.base, #t~union8121.dep_map.name.offset, #t~union8121.dep_map.cpu, #t~union8121.dep_map.ip, #t~union8123.__padding, #t~union8123.dep_map.key.base, #t~union8123.dep_map.key.offset, #t~union8123.dep_map.class_cache.base, #t~union8123.dep_map.class_cache.offset, #t~union8123.dep_map.name.base, #t~union8123.dep_map.name.offset, #t~union8123.dep_map.cpu, #t~union8123.dep_map.ip, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init8124.base, #t~init8124.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~union8125.raw_lock.val.counter, #t~union8125.magic, #t~union8125.owner_cpu, #t~union8125.owner.base, #t~union8125.owner.offset, #t~union8125.dep_map.key.base, #t~union8125.dep_map.key.offset, #t~union8125.dep_map.class_cache.base, #t~union8125.dep_map.class_cache.offset, #t~union8125.dep_map.name.base, #t~union8125.dep_map.name.offset, #t~union8125.dep_map.cpu, #t~union8125.dep_map.ip, #t~union8127.__padding, #t~union8127.dep_map.key.base, #t~union8127.dep_map.key.offset, #t~union8127.dep_map.class_cache.base, #t~union8127.dep_map.class_cache.offset, #t~union8127.dep_map.name.base, #t~union8127.dep_map.name.offset, #t~union8127.dep_map.cpu, #t~union8127.dep_map.ip, 0, 0, 0, 0, 0, #t~union8128.raw_lock.val.counter, #t~union8128.magic, #t~union8128.owner_cpu, #t~union8128.owner.base, #t~union8128.owner.offset, #t~union8128.dep_map.key.base, #t~union8128.dep_map.key.offset, #t~union8128.dep_map.class_cache.base, #t~union8128.dep_map.class_cache.offset, #t~union8128.dep_map.name.base, #t~union8128.dep_map.name.offset, #t~union8128.dep_map.cpu, #t~union8128.dep_map.ip, #t~union8130.__padding, #t~union8130.dep_map.key.base, #t~union8130.dep_map.key.offset, #t~union8130.dep_map.class_cache.base, #t~union8130.dep_map.class_cache.offset, #t~union8130.dep_map.name.base, #t~union8130.dep_map.name.offset, #t~union8130.dep_map.cpu, #t~union8130.dep_map.ip, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init8131, 0, 0, #t~init8132.base, #t~init8132.offset, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~init8133.base, #t~init8133.offset, 0, 0, 0, 0, #t~union8134.raw_lock.val.counter, #t~union8134.magic, #t~union8134.owner_cpu, #t~union8134.owner.base, #t~union8134.owner.offset, #t~union8134.dep_map.key.base, #t~union8134.dep_map.key.offset, #t~union8134.dep_map.class_cache.base, #t~union8134.dep_map.class_cache.offset, #t~union8134.dep_map.name.base, #t~union8134.dep_map.name.offset, #t~union8134.dep_map.cpu, #t~union8134.dep_map.ip, #t~union8136.__padding, #t~union8136.dep_map.key.base, #t~union8136.dep_map.key.offset, #t~union8136.dep_map.class_cache.base, #t~union8136.dep_map.class_cache.offset, #t~union8136.dep_map.name.base, #t~union8136.dep_map.name.offset, #t~union8136.dep_map.cpu, #t~union8136.dep_map.ip, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, #t~union8137.raw_lock.val.counter, #t~union8137.magic, #t~union8137.owner_cpu, #t~union8137.owner.base, #t~union8137.owner.offset, #t~union8137.dep_map.key.base, #t~union8137.dep_map.key.offset, #t~union8137.dep_map.class_cache.base, #t~union8137.dep_map.class_cache.offset, #t~union8137.dep_map.name.base, #t~union8137.dep_map.name.offset, #t~union8137.dep_map.cpu, #t~union8137.dep_map.ip, #t~union8139.__padding, #t~union8139.dep_map.key.base, #t~union8139.dep_map.key.offset, #t~union8139.dep_map.class_cache.base, #t~union8139.dep_map.class_cache.offset, #t~union8139.dep_map.name.base, #t~union8139.dep_map.name.offset, #t~union8139.dep_map.cpu, #t~union8139.dep_map.ip, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    havoc #t~init8117;
    havoc #t~init8118.base, #t~init8118.offset;
    havoc #t~init8119;
    havoc #t~init8120.base, #t~init8120.offset;
    havoc #t~init8122.base, #t~init8122.offset;
    havoc #t~union8121.raw_lock.val.counter, #t~union8121.magic, #t~union8121.owner_cpu, #t~union8121.owner.base, #t~union8121.owner.offset, #t~union8121.dep_map.key.base, #t~union8121.dep_map.key.offset, #t~union8121.dep_map.class_cache.base, #t~union8121.dep_map.class_cache.offset, #t~union8121.dep_map.name.base, #t~union8121.dep_map.name.offset, #t~union8121.dep_map.cpu, #t~union8121.dep_map.ip;
    havoc #t~union8123.__padding, #t~union8123.dep_map.key.base, #t~union8123.dep_map.key.offset, #t~union8123.dep_map.class_cache.base, #t~union8123.dep_map.class_cache.offset, #t~union8123.dep_map.name.base, #t~union8123.dep_map.name.offset, #t~union8123.dep_map.cpu, #t~union8123.dep_map.ip;
    havoc #t~init8124.base, #t~init8124.offset;
    havoc #t~init8126.base, #t~init8126.offset;
    havoc #t~union8125.raw_lock.val.counter, #t~union8125.magic, #t~union8125.owner_cpu, #t~union8125.owner.base, #t~union8125.owner.offset, #t~union8125.dep_map.key.base, #t~union8125.dep_map.key.offset, #t~union8125.dep_map.class_cache.base, #t~union8125.dep_map.class_cache.offset, #t~union8125.dep_map.name.base, #t~union8125.dep_map.name.offset, #t~union8125.dep_map.cpu, #t~union8125.dep_map.ip;
    havoc #t~union8127.__padding, #t~union8127.dep_map.key.base, #t~union8127.dep_map.key.offset, #t~union8127.dep_map.class_cache.base, #t~union8127.dep_map.class_cache.offset, #t~union8127.dep_map.name.base, #t~union8127.dep_map.name.offset, #t~union8127.dep_map.cpu, #t~union8127.dep_map.ip;
    havoc #t~init8129.base, #t~init8129.offset;
    havoc #t~union8128.raw_lock.val.counter, #t~union8128.magic, #t~union8128.owner_cpu, #t~union8128.owner.base, #t~union8128.owner.offset, #t~union8128.dep_map.key.base, #t~union8128.dep_map.key.offset, #t~union8128.dep_map.class_cache.base, #t~union8128.dep_map.class_cache.offset, #t~union8128.dep_map.name.base, #t~union8128.dep_map.name.offset, #t~union8128.dep_map.cpu, #t~union8128.dep_map.ip;
    havoc #t~union8130.__padding, #t~union8130.dep_map.key.base, #t~union8130.dep_map.key.offset, #t~union8130.dep_map.class_cache.base, #t~union8130.dep_map.class_cache.offset, #t~union8130.dep_map.name.base, #t~union8130.dep_map.name.offset, #t~union8130.dep_map.cpu, #t~union8130.dep_map.ip;
    havoc #t~init8131;
    havoc #t~init8132.base, #t~init8132.offset;
    havoc #t~init8133.base, #t~init8133.offset;
    havoc #t~init8135.base, #t~init8135.offset;
    havoc #t~union8134.raw_lock.val.counter, #t~union8134.magic, #t~union8134.owner_cpu, #t~union8134.owner.base, #t~union8134.owner.offset, #t~union8134.dep_map.key.base, #t~union8134.dep_map.key.offset, #t~union8134.dep_map.class_cache.base, #t~union8134.dep_map.class_cache.offset, #t~union8134.dep_map.name.base, #t~union8134.dep_map.name.offset, #t~union8134.dep_map.cpu, #t~union8134.dep_map.ip;
    havoc #t~union8136.__padding, #t~union8136.dep_map.key.base, #t~union8136.dep_map.key.offset, #t~union8136.dep_map.class_cache.base, #t~union8136.dep_map.class_cache.offset, #t~union8136.dep_map.name.base, #t~union8136.dep_map.name.offset, #t~union8136.dep_map.cpu, #t~union8136.dep_map.ip;
    havoc #t~init8138.base, #t~init8138.offset;
    havoc #t~union8137.raw_lock.val.counter, #t~union8137.magic, #t~union8137.owner_cpu, #t~union8137.owner.base, #t~union8137.owner.offset, #t~union8137.dep_map.key.base, #t~union8137.dep_map.key.offset, #t~union8137.dep_map.class_cache.base, #t~union8137.dep_map.class_cache.offset, #t~union8137.dep_map.name.base, #t~union8137.dep_map.name.offset, #t~union8137.dep_map.cpu, #t~union8137.dep_map.ip;
    havoc #t~union8139.__padding, #t~union8139.dep_map.key.base, #t~union8139.dep_map.key.offset, #t~union8139.dep_map.class_cache.base, #t~union8139.dep_map.class_cache.offset, #t~union8139.dep_map.name.base, #t~union8139.dep_map.name.offset, #t~union8139.dep_map.cpu, #t~union8139.dep_map.ip;
    call ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset := #Ultimate.alloc(18);
    call write~int(8, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 0, 1);
    call write~int(1, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 1, 1);
    call write~int(200, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 2, 1);
    call write~int(1, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 3, 1);
    call write~int(3300, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 4, 2);
    call write~int(3500, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 6, 2);
    call write~int(4000, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 8, 2);
    call write~int(16000, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 10, 2);
    call write~int(0, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 12, 1);
    call write~int(0, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 13, 1);
    call write~int(0, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 14, 1);
    call write~int(0, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 15, 1);
    call write~int(0, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 16, 1);
    call write~int(0, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset + 17, 1);
    call ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset := #Ultimate.alloc(18);
    call write~int(9, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 0, 1);
    call write~int(1, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 1, 1);
    call write~int(200, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 2, 1);
    call write~int(1, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 3, 1);
    call write~int(3300, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 4, 2);
    call write~int(3500, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 6, 2);
    call write~int(4000, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 8, 2);
    call write~int(16000, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 10, 2);
    call write~int(0, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 12, 1);
    call write~int(0, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 13, 1);
    call write~int(0, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 14, 1);
    call write~int(0, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 15, 1);
    call write~int(0, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 16, 1);
    call write~int(0, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset + 17, 1);
    call ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset := #Ultimate.alloc(105);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 0 + 0, 2);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 0 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 0 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 0 + 4, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 0 + 5, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 0 + 6, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 7 + 0, 2);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 7 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 7 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 7 + 4, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 7 + 5, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 7 + 6, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 14 + 0, 2);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 14 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 14 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 14 + 4, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 14 + 5, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 14 + 6, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 21 + 0, 2);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 21 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 21 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 21 + 4, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 21 + 5, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 21 + 6, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 28 + 0, 2);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 28 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 28 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 28 + 4, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 28 + 5, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 28 + 6, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 35 + 0, 2);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 35 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 35 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 35 + 4, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 35 + 5, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 35 + 6, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 42 + 0, 2);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 42 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 42 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 42 + 4, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 42 + 5, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 42 + 6, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 49 + 0, 2);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 49 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 49 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 49 + 4, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 49 + 5, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 49 + 6, 1);
    call write~int(3250, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 56 + 0, 2);
    call write~int(3, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 56 + 2, 1);
    call write~int(3, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 56 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 56 + 4, 1);
    call write~int(6, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 56 + 5, 1);
    call write~int(55, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 56 + 6, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 63 + 0, 2);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 63 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 63 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 63 + 4, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 63 + 5, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 63 + 6, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 70 + 0, 2);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 70 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 70 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 70 + 4, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 70 + 5, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 70 + 6, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 77 + 0, 2);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 77 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 77 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 77 + 4, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 77 + 5, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 77 + 6, 1);
    call write~int(4000, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 84 + 0, 2);
    call write~int(3, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 84 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 84 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 84 + 4, 1);
    call write~int(6, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 84 + 5, 1);
    call write~int(55, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 84 + 6, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 91 + 0, 2);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 91 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 91 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 91 + 4, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 91 + 5, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 91 + 6, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 98 + 0, 2);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 98 + 2, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 98 + 3, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 98 + 4, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 98 + 5, 1);
    call write~int(0, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset + 98 + 6, 1);
    call ~#hauppauge_hvr22x0_tuner_config.base, ~#hauppauge_hvr22x0_tuner_config.offset := #Ultimate.alloc(30);
    call write~$Pointer$(~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset, ~#hauppauge_hvr22x0_tuner_config.base, ~#hauppauge_hvr22x0_tuner_config.offset + 0, 8);
    call write~int(0, ~#hauppauge_hvr22x0_tuner_config.base, ~#hauppauge_hvr22x0_tuner_config.offset + 8, 4);
    call write~int(1, ~#hauppauge_hvr22x0_tuner_config.base, ~#hauppauge_hvr22x0_tuner_config.offset + 12, 4);
    call write~int(0, ~#hauppauge_hvr22x0_tuner_config.base, ~#hauppauge_hvr22x0_tuner_config.offset + 16, 4);
    call write~int(0, ~#hauppauge_hvr22x0_tuner_config.base, ~#hauppauge_hvr22x0_tuner_config.offset + 20, 4);
    call write~int(0, ~#hauppauge_hvr22x0_tuner_config.base, ~#hauppauge_hvr22x0_tuner_config.offset + 24, 1);
    call write~int(0, ~#hauppauge_hvr22x0_tuner_config.base, ~#hauppauge_hvr22x0_tuner_config.offset + 25, 1);
    call write~int(0, ~#hauppauge_hvr22x0_tuner_config.base, ~#hauppauge_hvr22x0_tuner_config.offset + 26, 4);
    call ~#hauppauge_hvr22x0s_tuner_config.base, ~#hauppauge_hvr22x0s_tuner_config.offset := #Ultimate.alloc(30);
    call write~$Pointer$(~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset, ~#hauppauge_hvr22x0s_tuner_config.base, ~#hauppauge_hvr22x0s_tuner_config.offset + 0, 8);
    call write~int(1, ~#hauppauge_hvr22x0s_tuner_config.base, ~#hauppauge_hvr22x0s_tuner_config.offset + 8, 4);
    call write~int(1, ~#hauppauge_hvr22x0s_tuner_config.base, ~#hauppauge_hvr22x0s_tuner_config.offset + 12, 4);
    call write~int(1, ~#hauppauge_hvr22x0s_tuner_config.base, ~#hauppauge_hvr22x0s_tuner_config.offset + 16, 4);
    call write~int(0, ~#hauppauge_hvr22x0s_tuner_config.base, ~#hauppauge_hvr22x0s_tuner_config.offset + 20, 4);
    call write~int(1, ~#hauppauge_hvr22x0s_tuner_config.base, ~#hauppauge_hvr22x0s_tuner_config.offset + 24, 1);
    call write~int(0, ~#hauppauge_hvr22x0s_tuner_config.base, ~#hauppauge_hvr22x0s_tuner_config.offset + 25, 1);
    call write~int(0, ~#hauppauge_hvr22x0s_tuner_config.base, ~#hauppauge_hvr22x0s_tuner_config.offset + 26, 4);
    call ~#hauppauge_s5h1411_config.base, ~#hauppauge_s5h1411_config.offset := #Ultimate.alloc(10);
    call write~int(1, ~#hauppauge_s5h1411_config.base, ~#hauppauge_s5h1411_config.offset + 0, 1);
    call write~int(1, ~#hauppauge_s5h1411_config.base, ~#hauppauge_s5h1411_config.offset + 1, 1);
    call write~int(1, ~#hauppauge_s5h1411_config.base, ~#hauppauge_s5h1411_config.offset + 2, 2);
    call write~int(4000, ~#hauppauge_s5h1411_config.base, ~#hauppauge_s5h1411_config.offset + 4, 2);
    call write~int(3250, ~#hauppauge_s5h1411_config.base, ~#hauppauge_s5h1411_config.offset + 6, 2);
    call write~int(1, ~#hauppauge_s5h1411_config.base, ~#hauppauge_s5h1411_config.offset + 8, 1);
    call write~int(1, ~#hauppauge_s5h1411_config.base, ~#hauppauge_s5h1411_config.offset + 9, 1);
    call ~#hauppauge_hvr2255a_config.base, ~#hauppauge_hvr2255a_config.offset := #Ultimate.alloc(23);
    call write~int(89, ~#hauppauge_hvr2255a_config.base, ~#hauppauge_hvr2255a_config.offset + 0, 1);
    call write~int(4000, ~#hauppauge_hvr2255a_config.base, ~#hauppauge_hvr2255a_config.offset + 1, 2);
    call write~int(3250, ~#hauppauge_hvr2255a_config.base, ~#hauppauge_hvr2255a_config.offset + 3, 2);
    call write~int(1, ~#hauppauge_hvr2255a_config.base, ~#hauppauge_hvr2255a_config.offset + 5, 1);
    call write~int(0, ~#hauppauge_hvr2255a_config.base, ~#hauppauge_hvr2255a_config.offset + 6, 1);
    call write~int(1, ~#hauppauge_hvr2255a_config.base, ~#hauppauge_hvr2255a_config.offset + 7, 4);
    call write~int(0, ~#hauppauge_hvr2255a_config.base, ~#hauppauge_hvr2255a_config.offset + 11, 4);
    call write~int(1, ~#hauppauge_hvr2255a_config.base, ~#hauppauge_hvr2255a_config.offset + 15, 4);
    call write~int(25, ~#hauppauge_hvr2255a_config.base, ~#hauppauge_hvr2255a_config.offset + 19, 4);
    call ~#hauppauge_hvr2255b_config.base, ~#hauppauge_hvr2255b_config.offset := #Ultimate.alloc(23);
    call write~int(14, ~#hauppauge_hvr2255b_config.base, ~#hauppauge_hvr2255b_config.offset + 0, 1);
    call write~int(4000, ~#hauppauge_hvr2255b_config.base, ~#hauppauge_hvr2255b_config.offset + 1, 2);
    call write~int(3250, ~#hauppauge_hvr2255b_config.base, ~#hauppauge_hvr2255b_config.offset + 3, 2);
    call write~int(1, ~#hauppauge_hvr2255b_config.base, ~#hauppauge_hvr2255b_config.offset + 5, 1);
    call write~int(0, ~#hauppauge_hvr2255b_config.base, ~#hauppauge_hvr2255b_config.offset + 6, 1);
    call write~int(1, ~#hauppauge_hvr2255b_config.base, ~#hauppauge_hvr2255b_config.offset + 7, 4);
    call write~int(0, ~#hauppauge_hvr2255b_config.base, ~#hauppauge_hvr2255b_config.offset + 11, 4);
    call write~int(1, ~#hauppauge_hvr2255b_config.base, ~#hauppauge_hvr2255b_config.offset + 15, 4);
    call write~int(25, ~#hauppauge_hvr2255b_config.base, ~#hauppauge_hvr2255b_config.offset + 19, 4);
    call ~#hauppauge_hvr2255_tuner_config.base, ~#hauppauge_hvr2255_tuner_config.offset := #Ultimate.alloc(10);
    call write~$Pointer$(0, 0, ~#hauppauge_hvr2255_tuner_config.base, ~#hauppauge_hvr2255_tuner_config.offset + 0, 8);
    call write~int(1, ~#hauppauge_hvr2255_tuner_config.base, ~#hauppauge_hvr2255_tuner_config.offset + 8, 1);
    call write~int(1, ~#hauppauge_hvr2255_tuner_config.base, ~#hauppauge_hvr2255_tuner_config.offset + 9, 1);
    ~saa7164_tvnorms.name.base, ~saa7164_tvnorms.name.offset, ~saa7164_tvnorms.id := ~saa7164_tvnorms.name.base[0 := 0], ~saa7164_tvnorms.name.offset[0 := 0], ~saa7164_tvnorms.id[0 := 0];
    ~saa7164_tvnorms.name.base, ~saa7164_tvnorms.name.offset, ~saa7164_tvnorms.id := ~saa7164_tvnorms.name.base[1 := 0], ~saa7164_tvnorms.name.offset[1 := 0], ~saa7164_tvnorms.id[1 := 0];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[0 := 9963776];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[1 := 9963777];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[2 := 9963778];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[3 := 9963779];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[4 := 9963781];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[5 := 9963803];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[6 := 10029312];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[7 := 10029513];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[8 := 10029514];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[9 := 10029515];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[10 := 10029421];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[11 := 10029518];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[12 := 10029519];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[13 := 10029520];
    ~saa7164_v4l2_ctrls := ~saa7164_v4l2_ctrls[14 := 0];
    call ~#mpeg_fops.base, ~#mpeg_fops.offset := #Ultimate.alloc(80);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#mpeg_fops.base, ~#mpeg_fops.offset + 0, 8);
    call write~$Pointer$(#funAddr~fops_read.base, #funAddr~fops_read.offset, ~#mpeg_fops.base, ~#mpeg_fops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#mpeg_fops.base, ~#mpeg_fops.offset + 16, 8);
    call write~$Pointer$(#funAddr~fops_poll.base, #funAddr~fops_poll.offset, ~#mpeg_fops.base, ~#mpeg_fops.offset + 24, 8);
    call write~$Pointer$(#funAddr~video_ioctl2.base, #funAddr~video_ioctl2.offset, ~#mpeg_fops.base, ~#mpeg_fops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#mpeg_fops.base, ~#mpeg_fops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#mpeg_fops.base, ~#mpeg_fops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#mpeg_fops.base, ~#mpeg_fops.offset + 56, 8);
    call write~$Pointer$(#funAddr~fops_open.base, #funAddr~fops_open.offset, ~#mpeg_fops.base, ~#mpeg_fops.offset + 64, 8);
    call write~$Pointer$(#funAddr~fops_release.base, #funAddr~fops_release.offset, ~#mpeg_fops.base, ~#mpeg_fops.offset + 72, 8);
    call ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset := #Ultimate.alloc(912);
    call write~$Pointer$(#funAddr~vidioc_querycap.base, #funAddr~vidioc_querycap.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~vidioc_enum_fmt_vid_cap.base, #funAddr~vidioc_enum_fmt_vid_cap.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~vidioc_g_fmt_vid_cap.base, #funAddr~vidioc_g_fmt_vid_cap.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 136, 8);
    call write~$Pointer$(#funAddr~vidioc_s_fmt_vid_cap.base, #funAddr~vidioc_s_fmt_vid_cap.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 224, 8);
    call write~$Pointer$(#funAddr~vidioc_try_fmt_vid_cap.base, #funAddr~vidioc_try_fmt_vid_cap.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 408, 8);
    call write~$Pointer$(#funAddr~vidioc_g_std.base, #funAddr~vidioc_g_std.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 416, 8);
    call write~$Pointer$(#funAddr~vidioc_s_std.base, #funAddr~vidioc_s_std.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 424, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 432, 8);
    call write~$Pointer$(#funAddr~vidioc_enum_input.base, #funAddr~vidioc_enum_input.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 440, 8);
    call write~$Pointer$(#funAddr~vidioc_g_input.base, #funAddr~vidioc_g_input.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 448, 8);
    call write~$Pointer$(#funAddr~vidioc_s_input.base, #funAddr~vidioc_s_input.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 464, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 472, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 480, 8);
    call write~$Pointer$(#funAddr~vidioc_queryctrl.base, #funAddr~vidioc_queryctrl.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 488, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 496, 8);
    call write~$Pointer$(#funAddr~vidioc_g_ctrl.base, #funAddr~vidioc_g_ctrl.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 504, 8);
    call write~$Pointer$(#funAddr~vidioc_s_ctrl.base, #funAddr~vidioc_s_ctrl.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 512, 8);
    call write~$Pointer$(#funAddr~vidioc_g_ext_ctrls.base, #funAddr~vidioc_g_ext_ctrls.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 520, 8);
    call write~$Pointer$(#funAddr~vidioc_s_ext_ctrls.base, #funAddr~vidioc_s_ext_ctrls.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 528, 8);
    call write~$Pointer$(#funAddr~vidioc_try_ext_ctrls.base, #funAddr~vidioc_try_ext_ctrls.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 536, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 544, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 552, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 560, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 568, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 576, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 584, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 592, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 600, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 608, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 616, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 624, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 632, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 640, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 648, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 656, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 664, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 672, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 680, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 688, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 696, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 704, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 712, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 720, 8);
    call write~$Pointer$(#funAddr~vidioc_g_tuner.base, #funAddr~vidioc_g_tuner.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 728, 8);
    call write~$Pointer$(#funAddr~vidioc_s_tuner.base, #funAddr~vidioc_s_tuner.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 736, 8);
    call write~$Pointer$(#funAddr~vidioc_g_frequency.base, #funAddr~vidioc_g_frequency.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 744, 8);
    call write~$Pointer$(#funAddr~vidioc_s_frequency.base, #funAddr~vidioc_s_frequency.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 752, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 760, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 768, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 776, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 784, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 792, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 800, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 808, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 816, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 824, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 832, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 840, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 848, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 856, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 864, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 872, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 880, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 888, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 896, 8);
    call write~$Pointer$(0, 0, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset + 904, 8);
    call ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset := #Ultimate.alloc(1731);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 16, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 24, 4);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 28, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 36, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 40, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 44, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 52, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 56, 2);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 58, 2);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 60, 2);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 62, 2);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 64, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 72, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 80, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 88, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 92, 4);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 96, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 104 + 0 + 0, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 0 + 104 + 0 + 4, 4);
    call write~$Pointer$(~#mpeg_fops.base, ~#mpeg_fops.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 24, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 32, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 40, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 48, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 56 + 0 + 0, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 0 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 0 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 0 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 0 + 24, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 0 + 32 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 0 + 32 + 8 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 0 + 32 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 0 + 32 + 24, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 0 + 32 + 32, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 0 + 32 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 0 + 8, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 16, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 24, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 32, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 40, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 44, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 48, 4);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 52, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 0, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 1, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 2, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 3, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 4, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 5, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 6, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 7, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 8, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 9, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 10, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 11, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 12, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 13, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 14, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 60 + 15, 1);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 76 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 76 + 8 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 76 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 76 + 24, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 76 + 32, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 76 + 76 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 196, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 60 + 204, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 268, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 269, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 270, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 271, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 16 + 272, 1);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 289, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 297, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 0 + 0, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 4, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8140.__padding[0], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0, 1);
    call write~int(#t~union8140.__padding[1], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8140.__padding[2], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[3], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[4], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[5], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[6], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[7], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[8], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[9], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[10], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[11], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[12], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[13], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[14], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[15], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[16], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[17], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[18], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[19], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[20], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[21], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[22], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8140.__padding[23], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8140.dep_map.key.base, #t~union8140.dep_map.key.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8140.dep_map.class_cache.base[0], #t~union8140.dep_map.class_cache.offset[0], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8140.dep_map.class_cache.base[1], #t~union8140.dep_map.class_cache.offset[1], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8140.dep_map.name.base, #t~union8140.dep_map.name.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8140.dep_map.cpu, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8140.dep_map.ip, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 4 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 72 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 72 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 88, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 96, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 104 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 104 + 8 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 104 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 104 + 24, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 104 + 32, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 305 + 104 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 453, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 461, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 469, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 477, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 0 + 0, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 4, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 5, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 6, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 7, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 8, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 9, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 10, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 11, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 12, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 4, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8141.__padding[0], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0, 1);
    call write~int(#t~union8141.__padding[1], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8141.__padding[2], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[3], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[4], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[5], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[6], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[7], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[8], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[9], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[10], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[11], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[12], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[13], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[14], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[15], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[16], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[17], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[18], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[19], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[20], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[21], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[22], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8141.__padding[23], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8141.dep_map.key.base, #t~union8141.dep_map.key.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8141.dep_map.class_cache.base[0], #t~union8141.dep_map.class_cache.offset[0], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8141.dep_map.class_cache.base[1], #t~union8141.dep_map.class_cache.offset[1], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8141.dep_map.name.base, #t~union8141.dep_map.name.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8141.dep_map.cpu, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8141.dep_map.ip, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 13 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 81 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 81 + 8, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 0, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8142.__padding[0], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union8142.__padding[1], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8142.__padding[2], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[3], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[4], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[5], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[6], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[7], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[8], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[9], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[10], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[11], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[12], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[13], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[14], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[15], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[16], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[17], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[18], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[19], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[20], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[21], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[22], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8142.__padding[23], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8142.dep_map.key.base, #t~union8142.dep_map.key.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8142.dep_map.class_cache.base[0], #t~union8142.dep_map.class_cache.offset[0], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8142.dep_map.class_cache.base[1], #t~union8142.dep_map.class_cache.offset[1], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8142.dep_map.name.base, #t~union8142.dep_map.name.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8142.dep_map.cpu, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8142.dep_map.ip, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 97 + 4 + 68 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 185, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 193, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 194, 1);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 0 + 8, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 16, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 24, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 32, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 40, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 44, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 48, 4);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 52, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 0, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 1, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 2, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 3, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 4, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 5, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 6, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 7, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 8, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 9, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 10, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 11, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 12, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 13, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 14, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 60 + 15, 1);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 76 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 76 + 8 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 76 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 76 + 24, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 76 + 32, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 195 + 76 + 36, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 315, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 323 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 323 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 323 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 323 + 24, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 323 + 32 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 323 + 32 + 8 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 323 + 32 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 323 + 32 + 24, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 323 + 32 + 32, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 323 + 32 + 36, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8143.__padding[0], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union8143.__padding[1], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8143.__padding[2], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[3], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[4], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[5], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[6], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[7], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[8], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[9], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[10], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[11], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[12], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[13], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[14], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[15], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[16], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[17], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[18], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[19], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[20], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[21], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[22], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8143.__padding[23], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8143.dep_map.key.base, #t~union8143.dep_map.key.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8143.dep_map.class_cache.base[0], #t~union8143.dep_map.class_cache.offset[0], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8143.dep_map.class_cache.base[1], #t~union8143.dep_map.class_cache.offset[1], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8143.dep_map.name.base, #t~union8143.dep_map.name.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8143.dep_map.cpu, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8143.dep_map.ip, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 399 + 68 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 483, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 491 + 0, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 495 + 0, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 499, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 500, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 501, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 502, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 503, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 504, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 505, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 506, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 507, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 508, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 509, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 510, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 514, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 518, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 522, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 526, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 534, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 542, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 550, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 558, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 566, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 485 + 574, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1067, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1075, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1083, 4);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1087, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1095, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1103, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1111, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1119 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1119 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1135, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1143, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1151 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1151 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1167, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1175, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1183, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1187, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 4, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8144.__padding[0], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0, 1);
    call write~int(#t~union8144.__padding[1], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8144.__padding[2], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[3], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[4], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[5], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[6], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[7], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[8], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[9], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[10], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[11], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[12], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[13], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[14], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[15], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[16], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[17], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[18], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[19], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[20], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[21], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[22], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8144.__padding[23], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8144.dep_map.key.base, #t~union8144.dep_map.key.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8144.dep_map.class_cache.base[0], #t~union8144.dep_map.class_cache.offset[0], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8144.dep_map.class_cache.base[1], #t~union8144.dep_map.class_cache.offset[1], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8144.dep_map.name.base, #t~union8144.dep_map.name.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8144.dep_map.cpu, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8144.dep_map.ip, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1191 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1259 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1259 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1275 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1275 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1275 + 8 + 8, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1275 + 24 + 0 + 0, 4);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1303, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1311, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1319, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1327, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1335, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 120 + 1336, 1);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1457, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1465, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1473, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1481, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1489, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1497, 8);
    call write~int(115, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 0, 1);
    call write~int(97, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 1, 1);
    call write~int(97, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 2, 1);
    call write~int(55, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 3, 1);
    call write~int(49, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 4, 1);
    call write~int(54, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 5, 1);
    call write~int(52, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 6, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 7, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 8, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 9, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 10, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 11, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 12, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 13, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 14, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 15, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 16, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 17, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 18, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 19, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 20, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 21, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 22, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 23, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 24, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 25, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 26, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 27, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 28, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 29, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 30, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1505 + 31, 1);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1537, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1541, 4);
    call write~int(-1, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1545, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1549, 2);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1551, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1559, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 4, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8145.__padding[0], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0, 1);
    call write~int(#t~union8145.__padding[1], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8145.__padding[2], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[3], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[4], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[5], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[6], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[7], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[8], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[9], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[10], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[11], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[12], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[13], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[14], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[15], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[16], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[17], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[18], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[19], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[20], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[21], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[22], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8145.__padding[23], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8145.dep_map.key.base, #t~union8145.dep_map.key.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8145.dep_map.class_cache.base[0], #t~union8145.dep_map.class_cache.offset[0], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8145.dep_map.class_cache.base[1], #t~union8145.dep_map.class_cache.offset[1], ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8145.dep_map.name.base, #t~union8145.dep_map.name.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8145.dep_map.cpu, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8145.dep_map.ip, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1563 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1631 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1631 + 8, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1647, 4);
    call write~int(28672, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1651, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1659, 8);
    call write~$Pointer$(~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1667, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1675 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1675 + 8, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1675 + 16, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1699 + 0, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1699 + 8, 8);
    call write~int(0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1699 + 16, 8);
    call write~$Pointer$(0, 0, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset + 1723, 8);
    havoc #t~union8140.__padding, #t~union8140.dep_map.key.base, #t~union8140.dep_map.key.offset, #t~union8140.dep_map.class_cache.base, #t~union8140.dep_map.class_cache.offset, #t~union8140.dep_map.name.base, #t~union8140.dep_map.name.offset, #t~union8140.dep_map.cpu, #t~union8140.dep_map.ip;
    havoc #t~union8141.__padding, #t~union8141.dep_map.key.base, #t~union8141.dep_map.key.offset, #t~union8141.dep_map.class_cache.base, #t~union8141.dep_map.class_cache.offset, #t~union8141.dep_map.name.base, #t~union8141.dep_map.name.offset, #t~union8141.dep_map.cpu, #t~union8141.dep_map.ip;
    havoc #t~union8142.__padding, #t~union8142.dep_map.key.base, #t~union8142.dep_map.key.offset, #t~union8142.dep_map.class_cache.base, #t~union8142.dep_map.class_cache.offset, #t~union8142.dep_map.name.base, #t~union8142.dep_map.name.offset, #t~union8142.dep_map.cpu, #t~union8142.dep_map.ip;
    havoc #t~union8143.__padding, #t~union8143.dep_map.key.base, #t~union8143.dep_map.key.offset, #t~union8143.dep_map.class_cache.base, #t~union8143.dep_map.class_cache.offset, #t~union8143.dep_map.name.base, #t~union8143.dep_map.name.offset, #t~union8143.dep_map.cpu, #t~union8143.dep_map.ip;
    havoc #t~union8144.__padding, #t~union8144.dep_map.key.base, #t~union8144.dep_map.key.offset, #t~union8144.dep_map.class_cache.base, #t~union8144.dep_map.class_cache.offset, #t~union8144.dep_map.name.base, #t~union8144.dep_map.name.offset, #t~union8144.dep_map.cpu, #t~union8144.dep_map.ip;
    havoc #t~union8145.__padding, #t~union8145.dep_map.key.base, #t~union8145.dep_map.key.offset, #t~union8145.dep_map.class_cache.base, #t~union8145.dep_map.class_cache.offset, #t~union8145.dep_map.name.base, #t~union8145.dep_map.name.offset, #t~union8145.dep_map.cpu, #t~union8145.dep_map.ip;
    ~saa7164_tvnorms___0.name.base, ~saa7164_tvnorms___0.name.offset, ~saa7164_tvnorms___0.id := ~saa7164_tvnorms___0.name.base[0 := 0], ~saa7164_tvnorms___0.name.offset[0 := 0], ~saa7164_tvnorms___0.id[0 := 0];
    ~saa7164_tvnorms___0.name.base, ~saa7164_tvnorms___0.name.offset, ~saa7164_tvnorms___0.id := ~saa7164_tvnorms___0.name.base[1 := 0], ~saa7164_tvnorms___0.name.offset[1 := 0], ~saa7164_tvnorms___0.id[1 := 0];
    ~saa7164_v4l2_ctrls___0 := ~saa7164_v4l2_ctrls___0[0 := 0];
    call ~#vbi_fops.base, ~#vbi_fops.offset := #Ultimate.alloc(80);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#vbi_fops.base, ~#vbi_fops.offset + 0, 8);
    call write~$Pointer$(#funAddr~fops_read___0.base, #funAddr~fops_read___0.offset, ~#vbi_fops.base, ~#vbi_fops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#vbi_fops.base, ~#vbi_fops.offset + 16, 8);
    call write~$Pointer$(#funAddr~fops_poll___0.base, #funAddr~fops_poll___0.offset, ~#vbi_fops.base, ~#vbi_fops.offset + 24, 8);
    call write~$Pointer$(#funAddr~video_ioctl2.base, #funAddr~video_ioctl2.offset, ~#vbi_fops.base, ~#vbi_fops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#vbi_fops.base, ~#vbi_fops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#vbi_fops.base, ~#vbi_fops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#vbi_fops.base, ~#vbi_fops.offset + 56, 8);
    call write~$Pointer$(#funAddr~fops_open___0.base, #funAddr~fops_open___0.offset, ~#vbi_fops.base, ~#vbi_fops.offset + 64, 8);
    call write~$Pointer$(#funAddr~fops_release___0.base, #funAddr~fops_release___0.offset, ~#vbi_fops.base, ~#vbi_fops.offset + 72, 8);
    call ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset := #Ultimate.alloc(912);
    call write~$Pointer$(#funAddr~vidioc_querycap___0.base, #funAddr~vidioc_querycap___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~vidioc_enum_fmt_vid_cap___0.base, #funAddr~vidioc_enum_fmt_vid_cap___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~vidioc_g_fmt_vid_cap___0.base, #funAddr~vidioc_g_fmt_vid_cap___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 80, 8);
    call write~$Pointer$(#funAddr~saa7164_vbi_fmt.base, #funAddr~saa7164_vbi_fmt.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 136, 8);
    call write~$Pointer$(#funAddr~vidioc_s_fmt_vid_cap___0.base, #funAddr~vidioc_s_fmt_vid_cap___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 168, 8);
    call write~$Pointer$(#funAddr~saa7164_vbi_fmt.base, #funAddr~saa7164_vbi_fmt.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 224, 8);
    call write~$Pointer$(#funAddr~vidioc_try_fmt_vid_cap___0.base, #funAddr~vidioc_try_fmt_vid_cap___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 256, 8);
    call write~$Pointer$(#funAddr~saa7164_vbi_fmt.base, #funAddr~saa7164_vbi_fmt.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 408, 8);
    call write~$Pointer$(#funAddr~vidioc_g_std___0.base, #funAddr~vidioc_g_std___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 416, 8);
    call write~$Pointer$(#funAddr~vidioc_s_std___0.base, #funAddr~vidioc_s_std___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 424, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 432, 8);
    call write~$Pointer$(#funAddr~vidioc_enum_input___0.base, #funAddr~vidioc_enum_input___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 440, 8);
    call write~$Pointer$(#funAddr~vidioc_g_input___0.base, #funAddr~vidioc_g_input___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 448, 8);
    call write~$Pointer$(#funAddr~vidioc_s_input___0.base, #funAddr~vidioc_s_input___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 464, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 472, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 480, 8);
    call write~$Pointer$(#funAddr~vidioc_queryctrl___0.base, #funAddr~vidioc_queryctrl___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 488, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 496, 8);
    call write~$Pointer$(#funAddr~vidioc_g_ctrl___0.base, #funAddr~vidioc_g_ctrl___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 504, 8);
    call write~$Pointer$(#funAddr~vidioc_s_ctrl___0.base, #funAddr~vidioc_s_ctrl___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 512, 8);
    call write~$Pointer$(#funAddr~vidioc_g_ext_ctrls___0.base, #funAddr~vidioc_g_ext_ctrls___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 520, 8);
    call write~$Pointer$(#funAddr~vidioc_s_ext_ctrls___0.base, #funAddr~vidioc_s_ext_ctrls___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 528, 8);
    call write~$Pointer$(#funAddr~vidioc_try_ext_ctrls___0.base, #funAddr~vidioc_try_ext_ctrls___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 536, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 544, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 552, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 560, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 568, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 576, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 584, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 592, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 600, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 608, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 616, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 624, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 632, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 640, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 648, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 656, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 664, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 672, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 680, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 688, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 696, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 704, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 712, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 720, 8);
    call write~$Pointer$(#funAddr~vidioc_g_tuner___0.base, #funAddr~vidioc_g_tuner___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 728, 8);
    call write~$Pointer$(#funAddr~vidioc_s_tuner___0.base, #funAddr~vidioc_s_tuner___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 736, 8);
    call write~$Pointer$(#funAddr~vidioc_g_frequency___0.base, #funAddr~vidioc_g_frequency___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 744, 8);
    call write~$Pointer$(#funAddr~vidioc_s_frequency___0.base, #funAddr~vidioc_s_frequency___0.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 752, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 760, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 768, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 776, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 784, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 792, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 800, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 808, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 816, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 824, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 832, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 840, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 848, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 856, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 864, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 872, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 880, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 888, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 896, 8);
    call write~$Pointer$(0, 0, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset + 904, 8);
    call ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset := #Ultimate.alloc(1731);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 16, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 24, 4);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 28, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 36, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 40, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 44, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 52, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 56, 2);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 58, 2);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 60, 2);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 62, 2);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 64, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 72, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 80, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 88, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 92, 4);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 96, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 104 + 0 + 0, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 0 + 104 + 0 + 4, 4);
    call write~$Pointer$(~#vbi_fops.base, ~#vbi_fops.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 24, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 32, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 40, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 48, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 56 + 0 + 0, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 0 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 0 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 0 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 0 + 24, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 0 + 32 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 0 + 32 + 8 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 0 + 32 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 0 + 32 + 24, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 0 + 32 + 32, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 0 + 32 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 0 + 8, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 16, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 24, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 32, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 40, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 44, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 48, 4);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 52, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 0, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 1, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 2, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 3, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 4, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 5, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 6, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 7, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 8, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 9, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 10, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 11, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 12, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 13, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 14, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 60 + 15, 1);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 76 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 76 + 8 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 76 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 76 + 24, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 76 + 32, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 76 + 76 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 196, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 60 + 204, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 268, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 269, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 270, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 271, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 16 + 272, 1);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 289, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 297, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 0 + 0, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 4, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8146.__padding[0], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0, 1);
    call write~int(#t~union8146.__padding[1], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8146.__padding[2], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[3], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[4], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[5], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[6], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[7], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[8], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[9], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[10], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[11], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[12], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[13], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[14], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[15], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[16], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[17], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[18], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[19], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[20], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[21], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[22], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8146.__padding[23], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8146.dep_map.key.base, #t~union8146.dep_map.key.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8146.dep_map.class_cache.base[0], #t~union8146.dep_map.class_cache.offset[0], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8146.dep_map.class_cache.base[1], #t~union8146.dep_map.class_cache.offset[1], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8146.dep_map.name.base, #t~union8146.dep_map.name.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8146.dep_map.cpu, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8146.dep_map.ip, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 4 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 72 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 72 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 88, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 96, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 104 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 104 + 8 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 104 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 104 + 24, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 104 + 32, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 305 + 104 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 453, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 461, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 469, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 477, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 0 + 0, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 4, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 5, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 6, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 7, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 8, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 9, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 10, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 11, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 12, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 4, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8147.__padding[0], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0, 1);
    call write~int(#t~union8147.__padding[1], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8147.__padding[2], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[3], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[4], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[5], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[6], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[7], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[8], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[9], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[10], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[11], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[12], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[13], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[14], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[15], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[16], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[17], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[18], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[19], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[20], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[21], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[22], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8147.__padding[23], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8147.dep_map.key.base, #t~union8147.dep_map.key.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8147.dep_map.class_cache.base[0], #t~union8147.dep_map.class_cache.offset[0], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8147.dep_map.class_cache.base[1], #t~union8147.dep_map.class_cache.offset[1], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8147.dep_map.name.base, #t~union8147.dep_map.name.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8147.dep_map.cpu, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8147.dep_map.ip, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 13 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 81 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 81 + 8, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 0, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8148.__padding[0], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union8148.__padding[1], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8148.__padding[2], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[3], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[4], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[5], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[6], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[7], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[8], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[9], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[10], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[11], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[12], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[13], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[14], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[15], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[16], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[17], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[18], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[19], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[20], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[21], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[22], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8148.__padding[23], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8148.dep_map.key.base, #t~union8148.dep_map.key.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8148.dep_map.class_cache.base[0], #t~union8148.dep_map.class_cache.offset[0], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8148.dep_map.class_cache.base[1], #t~union8148.dep_map.class_cache.offset[1], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8148.dep_map.name.base, #t~union8148.dep_map.name.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8148.dep_map.cpu, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8148.dep_map.ip, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 97 + 4 + 68 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 185, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 193, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 194, 1);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 0 + 8, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 16, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 24, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 32, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 40, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 44, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 48, 4);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 52, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 0, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 1, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 2, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 3, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 4, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 5, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 6, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 7, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 8, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 9, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 10, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 11, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 12, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 13, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 14, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 60 + 15, 1);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 76 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 76 + 8 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 76 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 76 + 24, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 76 + 32, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 195 + 76 + 36, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 315, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 323 + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 323 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 323 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 323 + 24, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 323 + 32 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 323 + 32 + 8 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 323 + 32 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 323 + 32 + 24, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 323 + 32 + 32, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 323 + 32 + 36, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 4, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8149.__padding[0], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union8149.__padding[1], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8149.__padding[2], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[3], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[4], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[5], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[6], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[7], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[8], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[9], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[10], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[11], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[12], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[13], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[14], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[15], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[16], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[17], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[18], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[19], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[20], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[21], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[22], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8149.__padding[23], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8149.dep_map.key.base, #t~union8149.dep_map.key.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8149.dep_map.class_cache.base[0], #t~union8149.dep_map.class_cache.offset[0], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8149.dep_map.class_cache.base[1], #t~union8149.dep_map.class_cache.offset[1], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8149.dep_map.name.base, #t~union8149.dep_map.name.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8149.dep_map.cpu, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8149.dep_map.ip, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 399 + 68 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 483, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 491 + 0, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 495 + 0, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 499, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 500, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 501, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 502, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 503, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 504, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 505, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 506, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 507, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 508, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 509, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 510, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 514, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 518, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 522, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 526, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 534, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 542, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 550, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 558, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 566, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 485 + 574, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1067, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1075, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1083, 4);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1087, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1095, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1103, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1111, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1119 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1119 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1135, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1143, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1151 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1151 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1167, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1175, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1183, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1187, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 4, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8150.__padding[0], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0, 1);
    call write~int(#t~union8150.__padding[1], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8150.__padding[2], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[3], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[4], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[5], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[6], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[7], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[8], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[9], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[10], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[11], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[12], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[13], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[14], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[15], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[16], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[17], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[18], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[19], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[20], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[21], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[22], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8150.__padding[23], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8150.dep_map.key.base, #t~union8150.dep_map.key.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8150.dep_map.class_cache.base[0], #t~union8150.dep_map.class_cache.offset[0], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8150.dep_map.class_cache.base[1], #t~union8150.dep_map.class_cache.offset[1], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8150.dep_map.name.base, #t~union8150.dep_map.name.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8150.dep_map.cpu, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8150.dep_map.ip, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1191 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1259 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1259 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1275 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1275 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1275 + 8 + 8, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1275 + 24 + 0 + 0, 4);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1303, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1311, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1319, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1327, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1335, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 120 + 1336, 1);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1457, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1465, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1473, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1481, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1489, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1497, 8);
    call write~int(115, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 0, 1);
    call write~int(97, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 1, 1);
    call write~int(97, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 2, 1);
    call write~int(55, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 3, 1);
    call write~int(49, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 4, 1);
    call write~int(54, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 5, 1);
    call write~int(52, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 6, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 7, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 8, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 9, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 10, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 11, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 12, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 13, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 14, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 15, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 16, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 17, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 18, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 19, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 20, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 21, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 22, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 23, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 24, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 25, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 26, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 27, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 28, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 29, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 30, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1505 + 31, 1);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1537, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1541, 4);
    call write~int(-1, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1545, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1549, 2);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1551, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1559, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 4, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union8151.__padding[0], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0, 1);
    call write~int(#t~union8151.__padding[1], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union8151.__padding[2], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[3], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[4], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[5], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[6], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[7], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[8], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[9], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[10], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[11], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[12], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[13], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[14], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[15], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[16], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[17], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[18], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[19], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[20], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[21], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[22], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union8151.__padding[23], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union8151.dep_map.key.base, #t~union8151.dep_map.key.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union8151.dep_map.class_cache.base[0], #t~union8151.dep_map.class_cache.offset[0], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union8151.dep_map.class_cache.base[1], #t~union8151.dep_map.class_cache.offset[1], ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union8151.dep_map.name.base, #t~union8151.dep_map.name.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union8151.dep_map.cpu, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union8151.dep_map.ip, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1563 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1631 + 0, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1631 + 8, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1647, 4);
    call write~int(28672, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1651, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1659, 8);
    call write~$Pointer$(~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1667, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1675 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1675 + 8, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1675 + 16, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1699 + 0, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1699 + 8, 8);
    call write~int(0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1699 + 16, 8);
    call write~$Pointer$(0, 0, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset + 1723, 8);
    havoc #t~union8146.__padding, #t~union8146.dep_map.key.base, #t~union8146.dep_map.key.offset, #t~union8146.dep_map.class_cache.base, #t~union8146.dep_map.class_cache.offset, #t~union8146.dep_map.name.base, #t~union8146.dep_map.name.offset, #t~union8146.dep_map.cpu, #t~union8146.dep_map.ip;
    havoc #t~union8147.__padding, #t~union8147.dep_map.key.base, #t~union8147.dep_map.key.offset, #t~union8147.dep_map.class_cache.base, #t~union8147.dep_map.class_cache.offset, #t~union8147.dep_map.name.base, #t~union8147.dep_map.name.offset, #t~union8147.dep_map.cpu, #t~union8147.dep_map.ip;
    havoc #t~union8148.__padding, #t~union8148.dep_map.key.base, #t~union8148.dep_map.key.offset, #t~union8148.dep_map.class_cache.base, #t~union8148.dep_map.class_cache.offset, #t~union8148.dep_map.name.base, #t~union8148.dep_map.name.offset, #t~union8148.dep_map.cpu, #t~union8148.dep_map.ip;
    havoc #t~union8149.__padding, #t~union8149.dep_map.key.base, #t~union8149.dep_map.key.offset, #t~union8149.dep_map.class_cache.base, #t~union8149.dep_map.class_cache.offset, #t~union8149.dep_map.name.base, #t~union8149.dep_map.name.offset, #t~union8149.dep_map.cpu, #t~union8149.dep_map.ip;
    havoc #t~union8150.__padding, #t~union8150.dep_map.key.base, #t~union8150.dep_map.key.offset, #t~union8150.dep_map.class_cache.base, #t~union8150.dep_map.class_cache.offset, #t~union8150.dep_map.name.base, #t~union8150.dep_map.name.offset, #t~union8150.dep_map.cpu, #t~union8150.dep_map.ip;
    havoc #t~union8151.__padding, #t~union8151.dep_map.key.base, #t~union8151.dep_map.key.offset, #t~union8151.dep_map.class_cache.base, #t~union8151.dep_map.class_cache.offset, #t~union8151.dep_map.name.base, #t~union8151.dep_map.name.offset, #t~union8151.dep_map.cpu, #t~union8151.dep_map.ip;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_irq_2_0, ~ldv_irq_2_2, ~ldv_irq_2_1, ~ldv_irq_1_3, ~ldv_irq_1_0, ~ldv_irq_1_2, ~LDV_IN_INTERRUPT, ~ldv_irq_1_1, ~ldv_irq_2_3, ~saa7164_bcount, ~saa7164_idcount, ~ldv_state_variable_8, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_state_variable_12, ~ldv_work_3_2, ~ldv_work_3_0, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~ldv_state_variable_9, ~ldv_irq_line_2_0, ~ref_cnt, ~ldv_irq_line_1_1, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_work_3_3, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_work_5_3, ~ldv_irq_line_1_2, ~ldv_irq_line_2_3, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset, ~ldv_irq_line_2_2, ~ldv_state_variable_10, ~ldv_work_4_0, ~ldv_state_variable_6, ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset, ~ldv_work_4_1, ~ldv_work_4_3, ~ldv_work_3_1, ~ldv_irq_line_2_1, ~ldv_work_5_0, ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset, ~ldv_state_variable_2, ~ldv_work_5_1, ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_work_4_2, ~ldv_state_variable_11, ~ldv_irq_line_1_3, ~ldv_work_5_2, ~ldv_state_variable_3, ~ldv_irq_line_1_0, ~ldv_state_variable_4, ~saa_debug, ~fw_debug, ~encoder_buffers, ~vbi_buffers, ~waitsecs, ~card, ~print_histogram, ~crc_checking, ~guard_checking, ~saa7164_devcount, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_3, ~#adapter_nr.base, ~#adapter_nr.offset, ~ldv_retval_2, ~ldv_retval_1, ~ldv_mutex_devlist, ~ldv_mutex_dmaqueue_lock_of_saa7164_port, ~ldv_mutex_i_mutex_of_inode, ~ldv_mutex_lock, ~ldv_mutex_lock_of_cmd, ~ldv_mutex_lock_of_saa7164_dev, ~ldv_mutex_lock_of_saa7164_dvb, ~ldv_mutex_lock_of_tmComResBusInfo, ~ldv_mutex_mutex_of_device, ~ldv_mutex_vb_lock_of_videobuf_queue, ~#saa7164_boards.base, ~#saa7164_boards.offset, ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card, ~ldv_work_struct_3_1.base, ~ldv_work_struct_3_1.offset, ~vbi_fops_group0.base, ~vbi_fops_group0.offset, ~saa7164_proc_fops_group1.base, ~saa7164_proc_fops_group1.offset, ~mpeg_ioctl_ops_group1.base, ~mpeg_ioctl_ops_group1.offset, ~ldv_work_struct_4_0.base, ~ldv_work_struct_4_0.offset, ~ldv_work_struct_3_3.base, ~ldv_work_struct_3_3.offset, ~mpeg_ioctl_ops_group3.base, ~mpeg_ioctl_ops_group3.offset, ~saa7164_proc_fops_group2.base, ~saa7164_proc_fops_group2.offset, ~vbi_ioctl_ops_group2.base, ~vbi_ioctl_ops_group2.offset, ~saa7164_i2c_algo_template_group0.base, ~saa7164_i2c_algo_template_group0.offset, ~ldv_work_struct_3_2.base, ~ldv_work_struct_3_2.offset, ~saa7164_pci_driver_group1.base, ~saa7164_pci_driver_group1.offset, ~mpeg_ioctl_ops_group0.base, ~mpeg_ioctl_ops_group0.offset, ~ldv_work_struct_3_0.base, ~ldv_work_struct_3_0.offset, ~mpeg_fops_group0.base, ~mpeg_fops_group0.offset, ~vbi_ioctl_ops_group0.base, ~vbi_ioctl_ops_group0.offset, ~ldv_work_struct_5_0.base, ~ldv_work_struct_5_0.offset, ~vbi_ioctl_ops_group3.base, ~vbi_ioctl_ops_group3.offset, ~vbi_ioctl_ops_group1.base, ~vbi_ioctl_ops_group1.offset, ~mpeg_ioctl_ops_group2.base, ~mpeg_ioctl_ops_group2.offset, ~enable_msi, ~#devlist.base, ~#devlist.offset, ~#saa7164_devlist.base, ~#saa7164_devlist.offset, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset, ~#saa7164_i2c_algo_template.base, ~#saa7164_i2c_algo_template.offset, ~saa7164_i2c_adap_template.owner.base, ~saa7164_i2c_adap_template.owner.offset, ~saa7164_i2c_adap_template.class, ~saa7164_i2c_adap_template.algo.base, ~saa7164_i2c_adap_template.algo.offset, ~saa7164_i2c_adap_template.algo_data.base, ~saa7164_i2c_adap_template.algo_data.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.raw_lock.val.counter, ~saa7164_i2c_adap_template.bus_lock.wait_lock.magic, ~saa7164_i2c_adap_template.bus_lock.wait_lock.owner_cpu, ~saa7164_i2c_adap_template.bus_lock.wait_lock.owner.base, ~saa7164_i2c_adap_template.bus_lock.wait_lock.owner.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.key.base, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.key.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.name.base, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.name.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.cpu, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.ip, ~saa7164_i2c_adap_template.bus_lock.waiters.rb_node.base, ~saa7164_i2c_adap_template.bus_lock.waiters.rb_node.offset, ~saa7164_i2c_adap_template.bus_lock.waiters_leftmost.base, ~saa7164_i2c_adap_template.bus_lock.waiters_leftmost.offset, ~saa7164_i2c_adap_template.bus_lock.owner.base, ~saa7164_i2c_adap_template.bus_lock.owner.offset, ~saa7164_i2c_adap_template.bus_lock.save_state, ~saa7164_i2c_adap_template.bus_lock.name.base, ~saa7164_i2c_adap_template.bus_lock.name.offset, ~saa7164_i2c_adap_template.bus_lock.file.base, ~saa7164_i2c_adap_template.bus_lock.file.offset, ~saa7164_i2c_adap_template.bus_lock.line, ~saa7164_i2c_adap_template.bus_lock.magic.base, ~saa7164_i2c_adap_template.bus_lock.magic.offset, ~saa7164_i2c_adap_template.timeout, ~saa7164_i2c_adap_template.retries, ~saa7164_i2c_adap_template.dev.parent.base, ~saa7164_i2c_adap_template.dev.parent.offset, ~saa7164_i2c_adap_template.dev.p.base, ~saa7164_i2c_adap_template.dev.p.offset, ~saa7164_i2c_adap_template.dev.kobj.name.base, ~saa7164_i2c_adap_template.dev.kobj.name.offset, ~saa7164_i2c_adap_template.dev.kobj.entry.next.base, ~saa7164_i2c_adap_template.dev.kobj.entry.next.offset, ~saa7164_i2c_adap_template.dev.kobj.entry.prev.base, ~saa7164_i2c_adap_template.dev.kobj.entry.prev.offset, ~saa7164_i2c_adap_template.dev.kobj.parent.base, ~saa7164_i2c_adap_template.dev.kobj.parent.offset, ~saa7164_i2c_adap_template.dev.kobj.kset.base, ~saa7164_i2c_adap_template.dev.kobj.kset.offset, ~saa7164_i2c_adap_template.dev.kobj.ktype.base, ~saa7164_i2c_adap_template.dev.kobj.ktype.offset, ~saa7164_i2c_adap_template.dev.kobj.sd.base, ~saa7164_i2c_adap_template.dev.kobj.sd.offset, ~saa7164_i2c_adap_template.dev.kobj.kref.refcount.counter, ~saa7164_i2c_adap_template.dev.kobj.release.work.data.counter, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.next.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.next.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.prev.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.prev.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.func.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.func.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.key.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.key.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.name.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.name.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.cpu, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.ip, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.next.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.next.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.pprev.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.pprev.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.expires, ~saa7164_i2c_adap_template.dev.kobj.release.timer.function.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.function.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.data, ~saa7164_i2c_adap_template.dev.kobj.release.timer.flags, ~saa7164_i2c_adap_template.dev.kobj.release.timer.slack, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_pid, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_site.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_site.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_comm, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.key.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.key.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.name.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.name.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.cpu, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.ip, ~saa7164_i2c_adap_template.dev.kobj.release.wq.base, ~saa7164_i2c_adap_template.dev.kobj.release.wq.offset, ~saa7164_i2c_adap_template.dev.kobj.release.cpu, ~saa7164_i2c_adap_template.dev.kobj.state_initialized, ~saa7164_i2c_adap_template.dev.kobj.state_in_sysfs, ~saa7164_i2c_adap_template.dev.kobj.state_add_uevent_sent, ~saa7164_i2c_adap_template.dev.kobj.state_remove_uevent_sent, ~saa7164_i2c_adap_template.dev.kobj.uevent_suppress, ~saa7164_i2c_adap_template.dev.init_name.base, ~saa7164_i2c_adap_template.dev.init_name.offset, ~saa7164_i2c_adap_template.dev.type.base, ~saa7164_i2c_adap_template.dev.type.offset, ~saa7164_i2c_adap_template.dev.mutex.count.counter, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.mutex.wait_list.next.base, ~saa7164_i2c_adap_template.dev.mutex.wait_list.next.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_list.prev.base, ~saa7164_i2c_adap_template.dev.mutex.wait_list.prev.offset, ~saa7164_i2c_adap_template.dev.mutex.owner.base, ~saa7164_i2c_adap_template.dev.mutex.owner.offset, ~saa7164_i2c_adap_template.dev.mutex.magic.base, ~saa7164_i2c_adap_template.dev.mutex.magic.offset, ~saa7164_i2c_adap_template.dev.mutex.dep_map.key.base, ~saa7164_i2c_adap_template.dev.mutex.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.mutex.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.mutex.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.mutex.dep_map.name.base, ~saa7164_i2c_adap_template.dev.mutex.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.mutex.dep_map.cpu, ~saa7164_i2c_adap_template.dev.mutex.dep_map.ip, ~saa7164_i2c_adap_template.dev.bus.base, ~saa7164_i2c_adap_template.dev.bus.offset, ~saa7164_i2c_adap_template.dev.driver.base, ~saa7164_i2c_adap_template.dev.driver.offset, ~saa7164_i2c_adap_template.dev.platform_data.base, ~saa7164_i2c_adap_template.dev.platform_data.offset, ~saa7164_i2c_adap_template.dev.driver_data.base, ~saa7164_i2c_adap_template.dev.driver_data.offset, ~saa7164_i2c_adap_template.dev.power.power_state.event, ~saa7164_i2c_adap_template.dev.power.can_wakeup, ~saa7164_i2c_adap_template.dev.power.async_suspend, ~saa7164_i2c_adap_template.dev.power.is_prepared, ~saa7164_i2c_adap_template.dev.power.is_suspended, ~saa7164_i2c_adap_template.dev.power.is_noirq_suspended, ~saa7164_i2c_adap_template.dev.power.is_late_suspended, ~saa7164_i2c_adap_template.dev.power.ignore_children, ~saa7164_i2c_adap_template.dev.power.early_init, ~saa7164_i2c_adap_template.dev.power.direct_complete, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.entry.next.base, ~saa7164_i2c_adap_template.dev.power.entry.next.offset, ~saa7164_i2c_adap_template.dev.power.entry.prev.base, ~saa7164_i2c_adap_template.dev.power.entry.prev.offset, ~saa7164_i2c_adap_template.dev.power.completion.done, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.next.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.next.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.prev.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.prev.offset, ~saa7164_i2c_adap_template.dev.power.wakeup.base, ~saa7164_i2c_adap_template.dev.power.wakeup.offset, ~saa7164_i2c_adap_template.dev.power.wakeup_path, ~saa7164_i2c_adap_template.dev.power.syscore, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.next.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.next.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.pprev.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.pprev.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.expires, ~saa7164_i2c_adap_template.dev.power.suspend_timer.function.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.function.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.data, ~saa7164_i2c_adap_template.dev.power.suspend_timer.flags, ~saa7164_i2c_adap_template.dev.power.suspend_timer.slack, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_pid, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_site.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_site.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_comm, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.key.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.name.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.cpu, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.ip, ~saa7164_i2c_adap_template.dev.power.timer_expires, ~saa7164_i2c_adap_template.dev.power.work.data.counter, ~saa7164_i2c_adap_template.dev.power.work.entry.next.base, ~saa7164_i2c_adap_template.dev.power.work.entry.next.offset, ~saa7164_i2c_adap_template.dev.power.work.entry.prev.base, ~saa7164_i2c_adap_template.dev.power.work.entry.prev.offset, ~saa7164_i2c_adap_template.dev.power.work.func.base, ~saa7164_i2c_adap_template.dev.power.work.func.offset, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.key.base, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.name.base, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.cpu, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.ip, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.next.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.next.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.prev.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.prev.offset, ~saa7164_i2c_adap_template.dev.power.wakeirq.base, ~saa7164_i2c_adap_template.dev.power.wakeirq.offset, ~saa7164_i2c_adap_template.dev.power.usage_count.counter, ~saa7164_i2c_adap_template.dev.power.child_count.counter, ~saa7164_i2c_adap_template.dev.power.disable_depth, ~saa7164_i2c_adap_template.dev.power.idle_notification, ~saa7164_i2c_adap_template.dev.power.request_pending, ~saa7164_i2c_adap_template.dev.power.deferred_resume, ~saa7164_i2c_adap_template.dev.power.run_wake, ~saa7164_i2c_adap_template.dev.power.runtime_auto, ~saa7164_i2c_adap_template.dev.power.no_callbacks, ~saa7164_i2c_adap_template.dev.power.irq_safe, ~saa7164_i2c_adap_template.dev.power.use_autosuspend, ~saa7164_i2c_adap_template.dev.power.timer_autosuspends, ~saa7164_i2c_adap_template.dev.power.memalloc_noio, ~saa7164_i2c_adap_template.dev.power.request, ~saa7164_i2c_adap_template.dev.power.runtime_status, ~saa7164_i2c_adap_template.dev.power.runtime_error, ~saa7164_i2c_adap_template.dev.power.autosuspend_delay, ~saa7164_i2c_adap_template.dev.power.last_busy, ~saa7164_i2c_adap_template.dev.power.active_jiffies, ~saa7164_i2c_adap_template.dev.power.suspended_jiffies, ~saa7164_i2c_adap_template.dev.power.accounting_timestamp, ~saa7164_i2c_adap_template.dev.power.subsys_data.base, ~saa7164_i2c_adap_template.dev.power.subsys_data.offset, ~saa7164_i2c_adap_template.dev.power.set_latency_tolerance.base, ~saa7164_i2c_adap_template.dev.power.set_latency_tolerance.offset, ~saa7164_i2c_adap_template.dev.power.qos.base, ~saa7164_i2c_adap_template.dev.power.qos.offset, ~saa7164_i2c_adap_template.dev.pm_domain.base, ~saa7164_i2c_adap_template.dev.pm_domain.offset, ~saa7164_i2c_adap_template.dev.pins.base, ~saa7164_i2c_adap_template.dev.pins.offset, ~saa7164_i2c_adap_template.dev.numa_node, ~saa7164_i2c_adap_template.dev.dma_mask.base, ~saa7164_i2c_adap_template.dev.dma_mask.offset, ~saa7164_i2c_adap_template.dev.coherent_dma_mask, ~saa7164_i2c_adap_template.dev.dma_pfn_offset, ~saa7164_i2c_adap_template.dev.dma_parms.base, ~saa7164_i2c_adap_template.dev.dma_parms.offset, ~saa7164_i2c_adap_template.dev.dma_pools.next.base, ~saa7164_i2c_adap_template.dev.dma_pools.next.offset, ~saa7164_i2c_adap_template.dev.dma_pools.prev.base, ~saa7164_i2c_adap_template.dev.dma_pools.prev.offset, ~saa7164_i2c_adap_template.dev.dma_mem.base, ~saa7164_i2c_adap_template.dev.dma_mem.offset, ~saa7164_i2c_adap_template.dev.cma_area.base, ~saa7164_i2c_adap_template.dev.cma_area.offset, ~saa7164_i2c_adap_template.dev.archdata.dma_ops.base, ~saa7164_i2c_adap_template.dev.archdata.dma_ops.offset, ~saa7164_i2c_adap_template.dev.archdata.iommu.base, ~saa7164_i2c_adap_template.dev.archdata.iommu.offset, ~saa7164_i2c_adap_template.dev.of_node.base, ~saa7164_i2c_adap_template.dev.of_node.offset, ~saa7164_i2c_adap_template.dev.fwnode.base, ~saa7164_i2c_adap_template.dev.fwnode.offset, ~saa7164_i2c_adap_template.dev.devt, ~saa7164_i2c_adap_template.dev.id, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.devres_head.next.base, ~saa7164_i2c_adap_template.dev.devres_head.next.offset, ~saa7164_i2c_adap_template.dev.devres_head.prev.base, ~saa7164_i2c_adap_template.dev.devres_head.prev.offset, ~saa7164_i2c_adap_template.dev.knode_class.n_klist.base, ~saa7164_i2c_adap_template.dev.knode_class.n_klist.offset, ~saa7164_i2c_adap_template.dev.knode_class.n_node.next.base, ~saa7164_i2c_adap_template.dev.knode_class.n_node.next.offset, ~saa7164_i2c_adap_template.dev.knode_class.n_node.prev.base, ~saa7164_i2c_adap_template.dev.knode_class.n_node.prev.offset, ~saa7164_i2c_adap_template.dev.knode_class.n_ref.refcount.counter, ~saa7164_i2c_adap_template.dev.class.base, ~saa7164_i2c_adap_template.dev.class.offset, ~saa7164_i2c_adap_template.dev.groups.base, ~saa7164_i2c_adap_template.dev.groups.offset, ~saa7164_i2c_adap_template.dev.release.base, ~saa7164_i2c_adap_template.dev.release.offset, ~saa7164_i2c_adap_template.dev.iommu_group.base, ~saa7164_i2c_adap_template.dev.iommu_group.offset, ~saa7164_i2c_adap_template.dev.offline_disabled, ~saa7164_i2c_adap_template.dev.offline, ~saa7164_i2c_adap_template.nr, ~saa7164_i2c_adap_template.name, ~saa7164_i2c_adap_template.dev_released.done, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev_released.wait.task_list.next.base, ~saa7164_i2c_adap_template.dev_released.wait.task_list.next.offset, ~saa7164_i2c_adap_template.dev_released.wait.task_list.prev.base, ~saa7164_i2c_adap_template.dev_released.wait.task_list.prev.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.count.counter, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.next.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.next.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.prev.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.prev.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.owner.base, ~saa7164_i2c_adap_template.userspace_clients_lock.owner.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.magic.base, ~saa7164_i2c_adap_template.userspace_clients_lock.magic.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.key.base, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.key.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.name.base, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.name.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.cpu, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.ip, ~saa7164_i2c_adap_template.userspace_clients.next.base, ~saa7164_i2c_adap_template.userspace_clients.next.offset, ~saa7164_i2c_adap_template.userspace_clients.prev.base, ~saa7164_i2c_adap_template.userspace_clients.prev.offset, ~saa7164_i2c_adap_template.bus_recovery_info.base, ~saa7164_i2c_adap_template.bus_recovery_info.offset, ~saa7164_i2c_adap_template.quirks.base, ~saa7164_i2c_adap_template.quirks.offset, ~saa7164_i2c_client_template.flags, ~saa7164_i2c_client_template.addr, ~saa7164_i2c_client_template.name, ~saa7164_i2c_client_template.adapter.base, ~saa7164_i2c_client_template.adapter.offset, ~saa7164_i2c_client_template.dev.parent.base, ~saa7164_i2c_client_template.dev.parent.offset, ~saa7164_i2c_client_template.dev.p.base, ~saa7164_i2c_client_template.dev.p.offset, ~saa7164_i2c_client_template.dev.kobj.name.base, ~saa7164_i2c_client_template.dev.kobj.name.offset, ~saa7164_i2c_client_template.dev.kobj.entry.next.base, ~saa7164_i2c_client_template.dev.kobj.entry.next.offset, ~saa7164_i2c_client_template.dev.kobj.entry.prev.base, ~saa7164_i2c_client_template.dev.kobj.entry.prev.offset, ~saa7164_i2c_client_template.dev.kobj.parent.base, ~saa7164_i2c_client_template.dev.kobj.parent.offset, ~saa7164_i2c_client_template.dev.kobj.kset.base, ~saa7164_i2c_client_template.dev.kobj.kset.offset, ~saa7164_i2c_client_template.dev.kobj.ktype.base, ~saa7164_i2c_client_template.dev.kobj.ktype.offset, ~saa7164_i2c_client_template.dev.kobj.sd.base, ~saa7164_i2c_client_template.dev.kobj.sd.offset, ~saa7164_i2c_client_template.dev.kobj.kref.refcount.counter, ~saa7164_i2c_client_template.dev.kobj.release.work.data.counter, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.next.base, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.next.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.prev.base, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.prev.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.func.base, ~saa7164_i2c_client_template.dev.kobj.release.work.func.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.key.base, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.key.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.class_cache.base, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.name.base, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.name.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.cpu, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.ip, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.next.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.next.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.pprev.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.pprev.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.expires, ~saa7164_i2c_client_template.dev.kobj.release.timer.function.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.function.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.data, ~saa7164_i2c_client_template.dev.kobj.release.timer.flags, ~saa7164_i2c_client_template.dev.kobj.release.timer.slack, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_pid, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_site.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_site.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_comm, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.key.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.key.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.class_cache.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.name.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.name.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.cpu, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.ip, ~saa7164_i2c_client_template.dev.kobj.release.wq.base, ~saa7164_i2c_client_template.dev.kobj.release.wq.offset, ~saa7164_i2c_client_template.dev.kobj.release.cpu, ~saa7164_i2c_client_template.dev.kobj.state_initialized, ~saa7164_i2c_client_template.dev.kobj.state_in_sysfs, ~saa7164_i2c_client_template.dev.kobj.state_add_uevent_sent, ~saa7164_i2c_client_template.dev.kobj.state_remove_uevent_sent, ~saa7164_i2c_client_template.dev.kobj.uevent_suppress, ~saa7164_i2c_client_template.dev.init_name.base, ~saa7164_i2c_client_template.dev.init_name.offset, ~saa7164_i2c_client_template.dev.type.base, ~saa7164_i2c_client_template.dev.type.offset, ~saa7164_i2c_client_template.dev.mutex.count.counter, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.mutex.wait_list.next.base, ~saa7164_i2c_client_template.dev.mutex.wait_list.next.offset, ~saa7164_i2c_client_template.dev.mutex.wait_list.prev.base, ~saa7164_i2c_client_template.dev.mutex.wait_list.prev.offset, ~saa7164_i2c_client_template.dev.mutex.owner.base, ~saa7164_i2c_client_template.dev.mutex.owner.offset, ~saa7164_i2c_client_template.dev.mutex.magic.base, ~saa7164_i2c_client_template.dev.mutex.magic.offset, ~saa7164_i2c_client_template.dev.mutex.dep_map.key.base, ~saa7164_i2c_client_template.dev.mutex.dep_map.key.offset, ~saa7164_i2c_client_template.dev.mutex.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.mutex.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.mutex.dep_map.name.base, ~saa7164_i2c_client_template.dev.mutex.dep_map.name.offset, ~saa7164_i2c_client_template.dev.mutex.dep_map.cpu, ~saa7164_i2c_client_template.dev.mutex.dep_map.ip, ~saa7164_i2c_client_template.dev.bus.base, ~saa7164_i2c_client_template.dev.bus.offset, ~saa7164_i2c_client_template.dev.driver.base, ~saa7164_i2c_client_template.dev.driver.offset, ~saa7164_i2c_client_template.dev.platform_data.base, ~saa7164_i2c_client_template.dev.platform_data.offset, ~saa7164_i2c_client_template.dev.driver_data.base, ~saa7164_i2c_client_template.dev.driver_data.offset, ~saa7164_i2c_client_template.dev.power.power_state.event, ~saa7164_i2c_client_template.dev.power.can_wakeup, ~saa7164_i2c_client_template.dev.power.async_suspend, ~saa7164_i2c_client_template.dev.power.is_prepared, ~saa7164_i2c_client_template.dev.power.is_suspended, ~saa7164_i2c_client_template.dev.power.is_noirq_suspended, ~saa7164_i2c_client_template.dev.power.is_late_suspended, ~saa7164_i2c_client_template.dev.power.ignore_children, ~saa7164_i2c_client_template.dev.power.early_init, ~saa7164_i2c_client_template.dev.power.direct_complete, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.power.entry.next.base, ~saa7164_i2c_client_template.dev.power.entry.next.offset, ~saa7164_i2c_client_template.dev.power.entry.prev.base, ~saa7164_i2c_client_template.dev.power.entry.prev.offset, ~saa7164_i2c_client_template.dev.power.completion.done, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.next.base, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.next.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.prev.base, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.prev.offset, ~saa7164_i2c_client_template.dev.power.wakeup.base, ~saa7164_i2c_client_template.dev.power.wakeup.offset, ~saa7164_i2c_client_template.dev.power.wakeup_path, ~saa7164_i2c_client_template.dev.power.syscore, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.next.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.next.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.pprev.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.pprev.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.expires, ~saa7164_i2c_client_template.dev.power.suspend_timer.function.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.function.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.data, ~saa7164_i2c_client_template.dev.power.suspend_timer.flags, ~saa7164_i2c_client_template.dev.power.suspend_timer.slack, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_pid, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_site.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_site.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_comm, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.key.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.key.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.name.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.name.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.cpu, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.ip, ~saa7164_i2c_client_template.dev.power.timer_expires, ~saa7164_i2c_client_template.dev.power.work.data.counter, ~saa7164_i2c_client_template.dev.power.work.entry.next.base, ~saa7164_i2c_client_template.dev.power.work.entry.next.offset, ~saa7164_i2c_client_template.dev.power.work.entry.prev.base, ~saa7164_i2c_client_template.dev.power.work.entry.prev.offset, ~saa7164_i2c_client_template.dev.power.work.func.base, ~saa7164_i2c_client_template.dev.power.work.func.offset, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.key.base, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.key.offset, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.name.base, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.name.offset, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.cpu, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.ip, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.next.base, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.next.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.prev.base, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.prev.offset, ~saa7164_i2c_client_template.dev.power.wakeirq.base, ~saa7164_i2c_client_template.dev.power.wakeirq.offset, ~saa7164_i2c_client_template.dev.power.usage_count.counter, ~saa7164_i2c_client_template.dev.power.child_count.counter, ~saa7164_i2c_client_template.dev.power.disable_depth, ~saa7164_i2c_client_template.dev.power.idle_notification, ~saa7164_i2c_client_template.dev.power.request_pending, ~saa7164_i2c_client_template.dev.power.deferred_resume, ~saa7164_i2c_client_template.dev.power.run_wake, ~saa7164_i2c_client_template.dev.power.runtime_auto, ~saa7164_i2c_client_template.dev.power.no_callbacks, ~saa7164_i2c_client_template.dev.power.irq_safe, ~saa7164_i2c_client_template.dev.power.use_autosuspend, ~saa7164_i2c_client_template.dev.power.timer_autosuspends, ~saa7164_i2c_client_template.dev.power.memalloc_noio, ~saa7164_i2c_client_template.dev.power.request, ~saa7164_i2c_client_template.dev.power.runtime_status, ~saa7164_i2c_client_template.dev.power.runtime_error, ~saa7164_i2c_client_template.dev.power.autosuspend_delay, ~saa7164_i2c_client_template.dev.power.last_busy, ~saa7164_i2c_client_template.dev.power.active_jiffies, ~saa7164_i2c_client_template.dev.power.suspended_jiffies, ~saa7164_i2c_client_template.dev.power.accounting_timestamp, ~saa7164_i2c_client_template.dev.power.subsys_data.base, ~saa7164_i2c_client_template.dev.power.subsys_data.offset, ~saa7164_i2c_client_template.dev.power.set_latency_tolerance.base, ~saa7164_i2c_client_template.dev.power.set_latency_tolerance.offset, ~saa7164_i2c_client_template.dev.power.qos.base, ~saa7164_i2c_client_template.dev.power.qos.offset, ~saa7164_i2c_client_template.dev.pm_domain.base, ~saa7164_i2c_client_template.dev.pm_domain.offset, ~saa7164_i2c_client_template.dev.pins.base, ~saa7164_i2c_client_template.dev.pins.offset, ~saa7164_i2c_client_template.dev.numa_node, ~saa7164_i2c_client_template.dev.dma_mask.base, ~saa7164_i2c_client_template.dev.dma_mask.offset, ~saa7164_i2c_client_template.dev.coherent_dma_mask, ~saa7164_i2c_client_template.dev.dma_pfn_offset, ~saa7164_i2c_client_template.dev.dma_parms.base, ~saa7164_i2c_client_template.dev.dma_parms.offset, ~saa7164_i2c_client_template.dev.dma_pools.next.base, ~saa7164_i2c_client_template.dev.dma_pools.next.offset, ~saa7164_i2c_client_template.dev.dma_pools.prev.base, ~saa7164_i2c_client_template.dev.dma_pools.prev.offset, ~saa7164_i2c_client_template.dev.dma_mem.base, ~saa7164_i2c_client_template.dev.dma_mem.offset, ~saa7164_i2c_client_template.dev.cma_area.base, ~saa7164_i2c_client_template.dev.cma_area.offset, ~saa7164_i2c_client_template.dev.archdata.dma_ops.base, ~saa7164_i2c_client_template.dev.archdata.dma_ops.offset, ~saa7164_i2c_client_template.dev.archdata.iommu.base, ~saa7164_i2c_client_template.dev.archdata.iommu.offset, ~saa7164_i2c_client_template.dev.of_node.base, ~saa7164_i2c_client_template.dev.of_node.offset, ~saa7164_i2c_client_template.dev.fwnode.base, ~saa7164_i2c_client_template.dev.fwnode.offset, ~saa7164_i2c_client_template.dev.devt, ~saa7164_i2c_client_template.dev.id, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.devres_head.next.base, ~saa7164_i2c_client_template.dev.devres_head.next.offset, ~saa7164_i2c_client_template.dev.devres_head.prev.base, ~saa7164_i2c_client_template.dev.devres_head.prev.offset, ~saa7164_i2c_client_template.dev.knode_class.n_klist.base, ~saa7164_i2c_client_template.dev.knode_class.n_klist.offset, ~saa7164_i2c_client_template.dev.knode_class.n_node.next.base, ~saa7164_i2c_client_template.dev.knode_class.n_node.next.offset, ~saa7164_i2c_client_template.dev.knode_class.n_node.prev.base, ~saa7164_i2c_client_template.dev.knode_class.n_node.prev.offset, ~saa7164_i2c_client_template.dev.knode_class.n_ref.refcount.counter, ~saa7164_i2c_client_template.dev.class.base, ~saa7164_i2c_client_template.dev.class.offset, ~saa7164_i2c_client_template.dev.groups.base, ~saa7164_i2c_client_template.dev.groups.offset, ~saa7164_i2c_client_template.dev.release.base, ~saa7164_i2c_client_template.dev.release.offset, ~saa7164_i2c_client_template.dev.iommu_group.base, ~saa7164_i2c_client_template.dev.iommu_group.offset, ~saa7164_i2c_client_template.dev.offline_disabled, ~saa7164_i2c_client_template.dev.offline, ~saa7164_i2c_client_template.irq, ~saa7164_i2c_client_template.detected.next.base, ~saa7164_i2c_client_template.detected.next.offset, ~saa7164_i2c_client_template.detected.prev.base, ~saa7164_i2c_client_template.detected.prev.offset, ~saa7164_i2c_client_template.slave_cb.base, ~saa7164_i2c_client_template.slave_cb.offset, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset, ~#hauppauge_hvr22x0_tuner_config.base, ~#hauppauge_hvr22x0_tuner_config.offset, ~#hauppauge_hvr22x0s_tuner_config.base, ~#hauppauge_hvr22x0s_tuner_config.offset, ~#hauppauge_s5h1411_config.base, ~#hauppauge_s5h1411_config.offset, ~#hauppauge_hvr2255a_config.base, ~#hauppauge_hvr2255a_config.offset, ~#hauppauge_hvr2255b_config.base, ~#hauppauge_hvr2255b_config.offset, ~#hauppauge_hvr2255_tuner_config.base, ~#hauppauge_hvr2255_tuner_config.offset, ~saa7164_tvnorms.name.base, ~saa7164_tvnorms.name.offset, ~saa7164_tvnorms.id, ~saa7164_v4l2_ctrls, ~#mpeg_fops.base, ~#mpeg_fops.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset, ~saa7164_tvnorms___0.name.base, ~saa7164_tvnorms___0.name.offset, ~saa7164_tvnorms___0.id, ~saa7164_v4l2_ctrls___0, ~#vbi_fops.base, ~#vbi_fops.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_mutex_lock_51(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns (){
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;

  loc13:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    call ldv_mutex_lock_dmaqueue_lock_of_saa7164_port(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    call mutex_lock(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    assume true;
    return;
}

procedure ldv_mutex_lock_51(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns ();
modifies ~ldv_mutex_dmaqueue_lock_of_saa7164_port;

implementation ldv_error() returns (){
  loc14:
    assume !false;
    goto loc15;
  loc15:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation invoke_work_3() returns (){
    var #t~nondet1112 : int;
    var #t~switch1113 : bool;
    var ~tmp~765 : int;

  loc16:
    havoc ~tmp~765;
    assume -2147483648 <= #t~nondet1112 && #t~nondet1112 <= 2147483647;
    ~tmp~765 := #t~nondet1112;
    havoc #t~nondet1112;
    #t~switch1113 := ~tmp~765 == 0;
    assume !#t~switch1113;
    #t~switch1113 := #t~switch1113 || ~tmp~765 == 1;
    assume !#t~switch1113;
    #t~switch1113 := #t~switch1113 || ~tmp~765 == 2;
    assume !#t~switch1113;
    #t~switch1113 := #t~switch1113 || ~tmp~765 == 3;
    assume #t~switch1113;
    assume ~ldv_work_3_3 == 2 || ~ldv_work_3_3 == 3;
    ~ldv_work_3_3 := 4;
    call saa7164_work_enchandler(~ldv_work_struct_3_0.base, ~ldv_work_struct_3_0.offset);
    return;
}

procedure invoke_work_3() returns ();
modifies ~ldv_work_3_0, ~ldv_work_3_1, ~ldv_work_3_2, ~ldv_work_3_3, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_dmaqueue_lock_of_saa7164_port, ~print_histogram;

implementation ldv_mutex_lock_dmaqueue_lock_of_saa7164_port(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc17:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    assume !(~ldv_mutex_dmaqueue_lock_of_saa7164_port != 1);
    ~ldv_mutex_dmaqueue_lock_of_saa7164_port := 2;
    assume true;
    return;
}

procedure ldv_mutex_lock_dmaqueue_lock_of_saa7164_port(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ~ldv_mutex_dmaqueue_lock_of_saa7164_port;

implementation saa7164_work_enchandler(#in~w.base : int, #in~w.offset : int) returns (){
    var #t~mem452.base : int, #t~mem452.offset : int;
    var #t~mem454 : int;
    var #t~ret455 : int;
    var #t~mem457 : int;
    var #t~mem458 : int;
    var #t~mem460 : int;
    var #t~mem461 : int;
    var #t~mem462 : int;
    var #t~mem464 : int;
    var #t~nondet465.base : int, #t~nondet465.offset : int;
    var #t~ret466 : int;
    var #t~mem467.base : int, #t~mem467.offset : int;
    var #t~mem468 : int;
    var #t~ret469 : int;
    var #t~mem470 : int;
    var #t~nondet471.base : int, #t~nondet471.offset : int;
    var #t~ret472 : int;
    var #t~mem473 : int;
    var #t~mem474 : int;
    var #t~mem475 : int;
    var #t~mem477 : int;
    var #t~mem478 : int;
    var #t~nondet479.base : int, #t~nondet479.offset : int;
    var #t~ret480 : int;
    var #t~mem482 : int;
    var #t~mem483 : int;
    var ~w.base : int, ~w.offset : int;
    var ~port~346.base : int, ~port~346.offset : int;
    var ~__mptr~346.base : int, ~__mptr~346.offset : int;
    var ~dev~346.base : int, ~dev~346.offset : int;
    var ~wp~346 : ~u32;
    var ~mcb~346 : ~u32;
    var ~rp~346 : ~u32;
    var ~cnt~346 : ~u32;
    var ~tmp~346 : int;

  loc18:
    ~w.base, ~w.offset := #in~w.base, #in~w.offset;
    havoc ~port~346.base, ~port~346.offset;
    havoc ~__mptr~346.base, ~__mptr~346.offset;
    havoc ~dev~346.base, ~dev~346.offset;
    havoc ~wp~346;
    havoc ~mcb~346;
    havoc ~rp~346;
    havoc ~cnt~346;
    havoc ~tmp~346;
    ~__mptr~346.base, ~__mptr~346.offset := ~w.base, ~w.offset;
    ~port~346.base, ~port~346.offset := ~__mptr~346.base, ~__mptr~346.offset + -68324824;
    call #t~mem452.base, #t~mem452.offset := read~$Pointer$(~port~346.base, ~port~346.offset + 0, 8);
    ~dev~346.base, ~dev~346.offset := #t~mem452.base, #t~mem452.offset;
    havoc #t~mem452.base, #t~mem452.offset;
    ~cnt~346 := 0;
    call #t~mem454 := read~int(~port~346.base, ~port~346.offset + 355, 8);
    call write~int(#t~mem454, ~port~346.base, ~port~346.offset + 371, 8);
    havoc #t~mem454;
    call #t~ret455 := jiffies_to_msecs(~jiffies);
    ~tmp~346 := #t~ret455;
    havoc #t~ret455;
    call write~int(~tmp~346 % 4294967296, ~port~346.base, ~port~346.offset + 355, 8);
    call #t~mem457 := read~int(~port~346.base, ~port~346.offset + 355, 8);
    call #t~mem458 := read~int(~port~346.base, ~port~346.offset + 371, 8);
    call write~int(#t~mem457 - #t~mem458, ~port~346.base, ~port~346.offset + 371, 8);
    havoc #t~mem457;
    havoc #t~mem458;
    call #t~mem460 := read~int(~port~346.base, ~port~346.offset + 371, 8);
    call saa7164_histogram_update(~port~346.base, ~port~346.offset + 1483, #t~mem460);
    havoc #t~mem460;
    call #t~mem461 := read~int(~port~346.base, ~port~346.offset + 355, 8);
    call #t~mem462 := read~int(~port~346.base, ~port~346.offset + 347, 8);
    call write~int(#t~mem461 - #t~mem462, ~port~346.base, ~port~346.offset + 387, 8);
    havoc #t~mem461;
    havoc #t~mem462;
    call #t~mem464 := read~int(~port~346.base, ~port~346.offset + 387, 8);
    call saa7164_histogram_update(~port~346.base, ~port~346.offset + 2539, #t~mem464);
    havoc #t~mem464;
    assume !(~bitwiseAnd(~saa_debug, 256) % 4294967296 != 0);
    call #t~mem467.base, #t~mem467.offset := read~$Pointer$(~dev~346.base, ~dev~346.offset + 218, 8);
    call #t~mem468 := read~int(~port~346.base, ~port~346.offset + 79, 4);
    call #t~ret469 := readl(#t~mem467.base, #t~mem467.offset + (if ~shiftRight(#t~mem468, 2) % 4294967296 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~shiftRight(#t~mem468, 2) % 4294967296 % 18446744073709551616 % 18446744073709551616 else ~shiftRight(#t~mem468, 2) % 4294967296 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616) * 1);
    ~wp~346 := #t~ret469;
    havoc #t~mem467.base, #t~mem467.offset;
    havoc #t~mem468;
    havoc #t~ret469;
    call #t~mem470 := read~int(~port~346.base, ~port~346.offset + 60 + 15, 1);
    assume !((#t~mem470 % 256 + -1) % 4294967296 < ~wp~346 % 4294967296);
    havoc #t~mem470;
    assume !(~wp~346 % 4294967296 == 0);
    ~mcb~346 := ~wp~346 - 1;
    call #t~mem474 := read~int(~port~346.base, ~port~346.offset + 8427, 4);
    assume !(#t~mem474 % 4294967296 == 0);
    havoc #t~mem474;
    call #t~mem477 := read~int(~port~346.base, ~port~346.offset + 383, 4);
    ~rp~346 := ~bitwiseAnd(#t~mem477 + 1, 7);
    havoc #t~mem477;
    call #t~mem478 := read~int(~port~346.base, ~port~346.offset + 60 + 15, 1);
    assume !((#t~mem478 % 256 + -1) % 4294967296 < ~rp~346 % 4294967296);
    havoc #t~mem478;
    call saa7164_work_enchandler_helper(~port~346.base, ~port~346.offset, (if ~rp~346 % 4294967296 % 4294967296 <= 2147483647 then ~rp~346 % 4294967296 % 4294967296 else ~rp~346 % 4294967296 % 4294967296 - 4294967296));
    return;
}

procedure saa7164_work_enchandler(#in~w.base : int, #in~w.offset : int) returns ();
modifies #memory_int, ~print_histogram, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_dmaqueue_lock_of_saa7164_port;

implementation ULTIMATE.start() returns (){
    var #t~ret8152 : int;

  loc19:
    call ULTIMATE.init();
    call #t~ret8152 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_irq_2_0, ~ldv_irq_2_2, ~ldv_irq_2_1, ~ldv_irq_1_3, ~ldv_irq_1_0, ~ldv_irq_1_2, ~LDV_IN_INTERRUPT, ~ldv_irq_1_1, ~ldv_irq_2_3, ~saa7164_bcount, ~saa7164_idcount, ~ldv_state_variable_8, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_state_variable_12, ~ldv_work_3_2, ~ldv_work_3_0, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~ldv_state_variable_9, ~ldv_irq_line_2_0, ~ref_cnt, ~ldv_irq_line_1_1, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_work_3_3, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_work_5_3, ~ldv_irq_line_1_2, ~ldv_irq_line_2_3, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset, ~ldv_irq_line_2_2, ~ldv_state_variable_10, ~ldv_work_4_0, ~ldv_state_variable_6, ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset, ~ldv_work_4_1, ~ldv_work_4_3, ~ldv_work_3_1, ~ldv_irq_line_2_1, ~ldv_work_5_0, ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset, ~ldv_state_variable_2, ~ldv_work_5_1, ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_work_4_2, ~ldv_state_variable_11, ~ldv_irq_line_1_3, ~ldv_work_5_2, ~ldv_state_variable_3, ~ldv_irq_line_1_0, ~ldv_state_variable_4, ~saa_debug, ~fw_debug, ~encoder_buffers, ~vbi_buffers, ~waitsecs, ~card, ~print_histogram, ~crc_checking, ~guard_checking, ~saa7164_devcount, ~ldv_retval_0, ~ldv_retval_4, ~ldv_retval_3, ~#adapter_nr.base, ~#adapter_nr.offset, ~ldv_retval_2, ~ldv_retval_1, ~ldv_mutex_devlist, ~ldv_mutex_dmaqueue_lock_of_saa7164_port, ~ldv_mutex_i_mutex_of_inode, ~ldv_mutex_lock, ~ldv_mutex_lock_of_cmd, ~ldv_mutex_lock_of_saa7164_dev, ~ldv_mutex_lock_of_saa7164_dvb, ~ldv_mutex_lock_of_tmComResBusInfo, ~ldv_mutex_mutex_of_device, ~ldv_mutex_vb_lock_of_videobuf_queue, ~#saa7164_boards.base, ~#saa7164_boards.offset, ~saa7164_subids.subvendor, ~saa7164_subids.subdevice, ~saa7164_subids.card, ~ldv_work_struct_3_1.base, ~ldv_work_struct_3_1.offset, ~vbi_fops_group0.base, ~vbi_fops_group0.offset, ~saa7164_proc_fops_group1.base, ~saa7164_proc_fops_group1.offset, ~mpeg_ioctl_ops_group1.base, ~mpeg_ioctl_ops_group1.offset, ~ldv_work_struct_4_0.base, ~ldv_work_struct_4_0.offset, ~ldv_work_struct_3_3.base, ~ldv_work_struct_3_3.offset, ~mpeg_ioctl_ops_group3.base, ~mpeg_ioctl_ops_group3.offset, ~saa7164_proc_fops_group2.base, ~saa7164_proc_fops_group2.offset, ~vbi_ioctl_ops_group2.base, ~vbi_ioctl_ops_group2.offset, ~saa7164_i2c_algo_template_group0.base, ~saa7164_i2c_algo_template_group0.offset, ~ldv_work_struct_3_2.base, ~ldv_work_struct_3_2.offset, ~saa7164_pci_driver_group1.base, ~saa7164_pci_driver_group1.offset, ~mpeg_ioctl_ops_group0.base, ~mpeg_ioctl_ops_group0.offset, ~ldv_work_struct_3_0.base, ~ldv_work_struct_3_0.offset, ~mpeg_fops_group0.base, ~mpeg_fops_group0.offset, ~vbi_ioctl_ops_group0.base, ~vbi_ioctl_ops_group0.offset, ~ldv_work_struct_5_0.base, ~ldv_work_struct_5_0.offset, ~vbi_ioctl_ops_group3.base, ~vbi_ioctl_ops_group3.offset, ~vbi_ioctl_ops_group1.base, ~vbi_ioctl_ops_group1.offset, ~mpeg_ioctl_ops_group2.base, ~mpeg_ioctl_ops_group2.offset, ~enable_msi, ~#devlist.base, ~#devlist.offset, ~#saa7164_devlist.base, ~#saa7164_devlist.offset, ~#saa7164_proc_fops.base, ~#saa7164_proc_fops.offset, ~#saa7164_pci_tbl.base, ~#saa7164_pci_tbl.offset, ~#saa7164_pci_driver.base, ~#saa7164_pci_driver.offset, ~#saa7164_i2c_algo_template.base, ~#saa7164_i2c_algo_template.offset, ~saa7164_i2c_adap_template.owner.base, ~saa7164_i2c_adap_template.owner.offset, ~saa7164_i2c_adap_template.class, ~saa7164_i2c_adap_template.algo.base, ~saa7164_i2c_adap_template.algo.offset, ~saa7164_i2c_adap_template.algo_data.base, ~saa7164_i2c_adap_template.algo_data.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.raw_lock.val.counter, ~saa7164_i2c_adap_template.bus_lock.wait_lock.magic, ~saa7164_i2c_adap_template.bus_lock.wait_lock.owner_cpu, ~saa7164_i2c_adap_template.bus_lock.wait_lock.owner.base, ~saa7164_i2c_adap_template.bus_lock.wait_lock.owner.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.key.base, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.key.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.name.base, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.name.offset, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.cpu, ~saa7164_i2c_adap_template.bus_lock.wait_lock.dep_map.ip, ~saa7164_i2c_adap_template.bus_lock.waiters.rb_node.base, ~saa7164_i2c_adap_template.bus_lock.waiters.rb_node.offset, ~saa7164_i2c_adap_template.bus_lock.waiters_leftmost.base, ~saa7164_i2c_adap_template.bus_lock.waiters_leftmost.offset, ~saa7164_i2c_adap_template.bus_lock.owner.base, ~saa7164_i2c_adap_template.bus_lock.owner.offset, ~saa7164_i2c_adap_template.bus_lock.save_state, ~saa7164_i2c_adap_template.bus_lock.name.base, ~saa7164_i2c_adap_template.bus_lock.name.offset, ~saa7164_i2c_adap_template.bus_lock.file.base, ~saa7164_i2c_adap_template.bus_lock.file.offset, ~saa7164_i2c_adap_template.bus_lock.line, ~saa7164_i2c_adap_template.bus_lock.magic.base, ~saa7164_i2c_adap_template.bus_lock.magic.offset, ~saa7164_i2c_adap_template.timeout, ~saa7164_i2c_adap_template.retries, ~saa7164_i2c_adap_template.dev.parent.base, ~saa7164_i2c_adap_template.dev.parent.offset, ~saa7164_i2c_adap_template.dev.p.base, ~saa7164_i2c_adap_template.dev.p.offset, ~saa7164_i2c_adap_template.dev.kobj.name.base, ~saa7164_i2c_adap_template.dev.kobj.name.offset, ~saa7164_i2c_adap_template.dev.kobj.entry.next.base, ~saa7164_i2c_adap_template.dev.kobj.entry.next.offset, ~saa7164_i2c_adap_template.dev.kobj.entry.prev.base, ~saa7164_i2c_adap_template.dev.kobj.entry.prev.offset, ~saa7164_i2c_adap_template.dev.kobj.parent.base, ~saa7164_i2c_adap_template.dev.kobj.parent.offset, ~saa7164_i2c_adap_template.dev.kobj.kset.base, ~saa7164_i2c_adap_template.dev.kobj.kset.offset, ~saa7164_i2c_adap_template.dev.kobj.ktype.base, ~saa7164_i2c_adap_template.dev.kobj.ktype.offset, ~saa7164_i2c_adap_template.dev.kobj.sd.base, ~saa7164_i2c_adap_template.dev.kobj.sd.offset, ~saa7164_i2c_adap_template.dev.kobj.kref.refcount.counter, ~saa7164_i2c_adap_template.dev.kobj.release.work.data.counter, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.next.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.next.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.prev.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.entry.prev.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.func.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.func.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.key.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.key.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.name.base, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.name.offset, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.cpu, ~saa7164_i2c_adap_template.dev.kobj.release.work.lockdep_map.ip, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.next.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.next.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.pprev.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.entry.pprev.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.expires, ~saa7164_i2c_adap_template.dev.kobj.release.timer.function.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.function.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.data, ~saa7164_i2c_adap_template.dev.kobj.release.timer.flags, ~saa7164_i2c_adap_template.dev.kobj.release.timer.slack, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_pid, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_site.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_site.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.start_comm, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.key.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.key.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.name.base, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.name.offset, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.cpu, ~saa7164_i2c_adap_template.dev.kobj.release.timer.lockdep_map.ip, ~saa7164_i2c_adap_template.dev.kobj.release.wq.base, ~saa7164_i2c_adap_template.dev.kobj.release.wq.offset, ~saa7164_i2c_adap_template.dev.kobj.release.cpu, ~saa7164_i2c_adap_template.dev.kobj.state_initialized, ~saa7164_i2c_adap_template.dev.kobj.state_in_sysfs, ~saa7164_i2c_adap_template.dev.kobj.state_add_uevent_sent, ~saa7164_i2c_adap_template.dev.kobj.state_remove_uevent_sent, ~saa7164_i2c_adap_template.dev.kobj.uevent_suppress, ~saa7164_i2c_adap_template.dev.init_name.base, ~saa7164_i2c_adap_template.dev.init_name.offset, ~saa7164_i2c_adap_template.dev.type.base, ~saa7164_i2c_adap_template.dev.type.offset, ~saa7164_i2c_adap_template.dev.mutex.count.counter, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.mutex.wait_list.next.base, ~saa7164_i2c_adap_template.dev.mutex.wait_list.next.offset, ~saa7164_i2c_adap_template.dev.mutex.wait_list.prev.base, ~saa7164_i2c_adap_template.dev.mutex.wait_list.prev.offset, ~saa7164_i2c_adap_template.dev.mutex.owner.base, ~saa7164_i2c_adap_template.dev.mutex.owner.offset, ~saa7164_i2c_adap_template.dev.mutex.magic.base, ~saa7164_i2c_adap_template.dev.mutex.magic.offset, ~saa7164_i2c_adap_template.dev.mutex.dep_map.key.base, ~saa7164_i2c_adap_template.dev.mutex.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.mutex.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.mutex.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.mutex.dep_map.name.base, ~saa7164_i2c_adap_template.dev.mutex.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.mutex.dep_map.cpu, ~saa7164_i2c_adap_template.dev.mutex.dep_map.ip, ~saa7164_i2c_adap_template.dev.bus.base, ~saa7164_i2c_adap_template.dev.bus.offset, ~saa7164_i2c_adap_template.dev.driver.base, ~saa7164_i2c_adap_template.dev.driver.offset, ~saa7164_i2c_adap_template.dev.platform_data.base, ~saa7164_i2c_adap_template.dev.platform_data.offset, ~saa7164_i2c_adap_template.dev.driver_data.base, ~saa7164_i2c_adap_template.dev.driver_data.offset, ~saa7164_i2c_adap_template.dev.power.power_state.event, ~saa7164_i2c_adap_template.dev.power.can_wakeup, ~saa7164_i2c_adap_template.dev.power.async_suspend, ~saa7164_i2c_adap_template.dev.power.is_prepared, ~saa7164_i2c_adap_template.dev.power.is_suspended, ~saa7164_i2c_adap_template.dev.power.is_noirq_suspended, ~saa7164_i2c_adap_template.dev.power.is_late_suspended, ~saa7164_i2c_adap_template.dev.power.ignore_children, ~saa7164_i2c_adap_template.dev.power.early_init, ~saa7164_i2c_adap_template.dev.power.direct_complete, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.entry.next.base, ~saa7164_i2c_adap_template.dev.power.entry.next.offset, ~saa7164_i2c_adap_template.dev.power.entry.prev.base, ~saa7164_i2c_adap_template.dev.power.entry.prev.offset, ~saa7164_i2c_adap_template.dev.power.completion.done, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.next.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.next.offset, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.prev.base, ~saa7164_i2c_adap_template.dev.power.completion.wait.task_list.prev.offset, ~saa7164_i2c_adap_template.dev.power.wakeup.base, ~saa7164_i2c_adap_template.dev.power.wakeup.offset, ~saa7164_i2c_adap_template.dev.power.wakeup_path, ~saa7164_i2c_adap_template.dev.power.syscore, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.next.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.next.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.pprev.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.entry.pprev.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.expires, ~saa7164_i2c_adap_template.dev.power.suspend_timer.function.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.function.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.data, ~saa7164_i2c_adap_template.dev.power.suspend_timer.flags, ~saa7164_i2c_adap_template.dev.power.suspend_timer.slack, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_pid, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_site.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_site.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.start_comm, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.key.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.name.base, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.cpu, ~saa7164_i2c_adap_template.dev.power.suspend_timer.lockdep_map.ip, ~saa7164_i2c_adap_template.dev.power.timer_expires, ~saa7164_i2c_adap_template.dev.power.work.data.counter, ~saa7164_i2c_adap_template.dev.power.work.entry.next.base, ~saa7164_i2c_adap_template.dev.power.work.entry.next.offset, ~saa7164_i2c_adap_template.dev.power.work.entry.prev.base, ~saa7164_i2c_adap_template.dev.power.work.entry.prev.offset, ~saa7164_i2c_adap_template.dev.power.work.func.base, ~saa7164_i2c_adap_template.dev.power.work.func.offset, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.key.base, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.name.base, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.cpu, ~saa7164_i2c_adap_template.dev.power.work.lockdep_map.ip, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.next.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.next.offset, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.prev.base, ~saa7164_i2c_adap_template.dev.power.wait_queue.task_list.prev.offset, ~saa7164_i2c_adap_template.dev.power.wakeirq.base, ~saa7164_i2c_adap_template.dev.power.wakeirq.offset, ~saa7164_i2c_adap_template.dev.power.usage_count.counter, ~saa7164_i2c_adap_template.dev.power.child_count.counter, ~saa7164_i2c_adap_template.dev.power.disable_depth, ~saa7164_i2c_adap_template.dev.power.idle_notification, ~saa7164_i2c_adap_template.dev.power.request_pending, ~saa7164_i2c_adap_template.dev.power.deferred_resume, ~saa7164_i2c_adap_template.dev.power.run_wake, ~saa7164_i2c_adap_template.dev.power.runtime_auto, ~saa7164_i2c_adap_template.dev.power.no_callbacks, ~saa7164_i2c_adap_template.dev.power.irq_safe, ~saa7164_i2c_adap_template.dev.power.use_autosuspend, ~saa7164_i2c_adap_template.dev.power.timer_autosuspends, ~saa7164_i2c_adap_template.dev.power.memalloc_noio, ~saa7164_i2c_adap_template.dev.power.request, ~saa7164_i2c_adap_template.dev.power.runtime_status, ~saa7164_i2c_adap_template.dev.power.runtime_error, ~saa7164_i2c_adap_template.dev.power.autosuspend_delay, ~saa7164_i2c_adap_template.dev.power.last_busy, ~saa7164_i2c_adap_template.dev.power.active_jiffies, ~saa7164_i2c_adap_template.dev.power.suspended_jiffies, ~saa7164_i2c_adap_template.dev.power.accounting_timestamp, ~saa7164_i2c_adap_template.dev.power.subsys_data.base, ~saa7164_i2c_adap_template.dev.power.subsys_data.offset, ~saa7164_i2c_adap_template.dev.power.set_latency_tolerance.base, ~saa7164_i2c_adap_template.dev.power.set_latency_tolerance.offset, ~saa7164_i2c_adap_template.dev.power.qos.base, ~saa7164_i2c_adap_template.dev.power.qos.offset, ~saa7164_i2c_adap_template.dev.pm_domain.base, ~saa7164_i2c_adap_template.dev.pm_domain.offset, ~saa7164_i2c_adap_template.dev.pins.base, ~saa7164_i2c_adap_template.dev.pins.offset, ~saa7164_i2c_adap_template.dev.numa_node, ~saa7164_i2c_adap_template.dev.dma_mask.base, ~saa7164_i2c_adap_template.dev.dma_mask.offset, ~saa7164_i2c_adap_template.dev.coherent_dma_mask, ~saa7164_i2c_adap_template.dev.dma_pfn_offset, ~saa7164_i2c_adap_template.dev.dma_parms.base, ~saa7164_i2c_adap_template.dev.dma_parms.offset, ~saa7164_i2c_adap_template.dev.dma_pools.next.base, ~saa7164_i2c_adap_template.dev.dma_pools.next.offset, ~saa7164_i2c_adap_template.dev.dma_pools.prev.base, ~saa7164_i2c_adap_template.dev.dma_pools.prev.offset, ~saa7164_i2c_adap_template.dev.dma_mem.base, ~saa7164_i2c_adap_template.dev.dma_mem.offset, ~saa7164_i2c_adap_template.dev.cma_area.base, ~saa7164_i2c_adap_template.dev.cma_area.offset, ~saa7164_i2c_adap_template.dev.archdata.dma_ops.base, ~saa7164_i2c_adap_template.dev.archdata.dma_ops.offset, ~saa7164_i2c_adap_template.dev.archdata.iommu.base, ~saa7164_i2c_adap_template.dev.archdata.iommu.offset, ~saa7164_i2c_adap_template.dev.of_node.base, ~saa7164_i2c_adap_template.dev.of_node.offset, ~saa7164_i2c_adap_template.dev.fwnode.base, ~saa7164_i2c_adap_template.dev.fwnode.offset, ~saa7164_i2c_adap_template.dev.devt, ~saa7164_i2c_adap_template.dev.id, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev.devres_head.next.base, ~saa7164_i2c_adap_template.dev.devres_head.next.offset, ~saa7164_i2c_adap_template.dev.devres_head.prev.base, ~saa7164_i2c_adap_template.dev.devres_head.prev.offset, ~saa7164_i2c_adap_template.dev.knode_class.n_klist.base, ~saa7164_i2c_adap_template.dev.knode_class.n_klist.offset, ~saa7164_i2c_adap_template.dev.knode_class.n_node.next.base, ~saa7164_i2c_adap_template.dev.knode_class.n_node.next.offset, ~saa7164_i2c_adap_template.dev.knode_class.n_node.prev.base, ~saa7164_i2c_adap_template.dev.knode_class.n_node.prev.offset, ~saa7164_i2c_adap_template.dev.knode_class.n_ref.refcount.counter, ~saa7164_i2c_adap_template.dev.class.base, ~saa7164_i2c_adap_template.dev.class.offset, ~saa7164_i2c_adap_template.dev.groups.base, ~saa7164_i2c_adap_template.dev.groups.offset, ~saa7164_i2c_adap_template.dev.release.base, ~saa7164_i2c_adap_template.dev.release.offset, ~saa7164_i2c_adap_template.dev.iommu_group.base, ~saa7164_i2c_adap_template.dev.iommu_group.offset, ~saa7164_i2c_adap_template.dev.offline_disabled, ~saa7164_i2c_adap_template.dev.offline, ~saa7164_i2c_adap_template.nr, ~saa7164_i2c_adap_template.name, ~saa7164_i2c_adap_template.dev_released.done, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.dev_released.wait.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.dev_released.wait.task_list.next.base, ~saa7164_i2c_adap_template.dev_released.wait.task_list.next.offset, ~saa7164_i2c_adap_template.dev_released.wait.task_list.prev.base, ~saa7164_i2c_adap_template.dev_released.wait.task_list.prev.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.count.counter, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.next.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.next.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.prev.base, ~saa7164_i2c_adap_template.userspace_clients_lock.wait_list.prev.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.owner.base, ~saa7164_i2c_adap_template.userspace_clients_lock.owner.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.magic.base, ~saa7164_i2c_adap_template.userspace_clients_lock.magic.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.key.base, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.key.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.class_cache.base, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.class_cache.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.name.base, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.name.offset, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.cpu, ~saa7164_i2c_adap_template.userspace_clients_lock.dep_map.ip, ~saa7164_i2c_adap_template.userspace_clients.next.base, ~saa7164_i2c_adap_template.userspace_clients.next.offset, ~saa7164_i2c_adap_template.userspace_clients.prev.base, ~saa7164_i2c_adap_template.userspace_clients.prev.offset, ~saa7164_i2c_adap_template.bus_recovery_info.base, ~saa7164_i2c_adap_template.bus_recovery_info.offset, ~saa7164_i2c_adap_template.quirks.base, ~saa7164_i2c_adap_template.quirks.offset, ~saa7164_i2c_client_template.flags, ~saa7164_i2c_client_template.addr, ~saa7164_i2c_client_template.name, ~saa7164_i2c_client_template.adapter.base, ~saa7164_i2c_client_template.adapter.offset, ~saa7164_i2c_client_template.dev.parent.base, ~saa7164_i2c_client_template.dev.parent.offset, ~saa7164_i2c_client_template.dev.p.base, ~saa7164_i2c_client_template.dev.p.offset, ~saa7164_i2c_client_template.dev.kobj.name.base, ~saa7164_i2c_client_template.dev.kobj.name.offset, ~saa7164_i2c_client_template.dev.kobj.entry.next.base, ~saa7164_i2c_client_template.dev.kobj.entry.next.offset, ~saa7164_i2c_client_template.dev.kobj.entry.prev.base, ~saa7164_i2c_client_template.dev.kobj.entry.prev.offset, ~saa7164_i2c_client_template.dev.kobj.parent.base, ~saa7164_i2c_client_template.dev.kobj.parent.offset, ~saa7164_i2c_client_template.dev.kobj.kset.base, ~saa7164_i2c_client_template.dev.kobj.kset.offset, ~saa7164_i2c_client_template.dev.kobj.ktype.base, ~saa7164_i2c_client_template.dev.kobj.ktype.offset, ~saa7164_i2c_client_template.dev.kobj.sd.base, ~saa7164_i2c_client_template.dev.kobj.sd.offset, ~saa7164_i2c_client_template.dev.kobj.kref.refcount.counter, ~saa7164_i2c_client_template.dev.kobj.release.work.data.counter, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.next.base, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.next.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.prev.base, ~saa7164_i2c_client_template.dev.kobj.release.work.entry.prev.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.func.base, ~saa7164_i2c_client_template.dev.kobj.release.work.func.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.key.base, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.key.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.class_cache.base, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.name.base, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.name.offset, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.cpu, ~saa7164_i2c_client_template.dev.kobj.release.work.lockdep_map.ip, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.next.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.next.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.pprev.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.entry.pprev.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.expires, ~saa7164_i2c_client_template.dev.kobj.release.timer.function.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.function.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.data, ~saa7164_i2c_client_template.dev.kobj.release.timer.flags, ~saa7164_i2c_client_template.dev.kobj.release.timer.slack, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_pid, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_site.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_site.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.start_comm, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.key.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.key.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.class_cache.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.name.base, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.name.offset, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.cpu, ~saa7164_i2c_client_template.dev.kobj.release.timer.lockdep_map.ip, ~saa7164_i2c_client_template.dev.kobj.release.wq.base, ~saa7164_i2c_client_template.dev.kobj.release.wq.offset, ~saa7164_i2c_client_template.dev.kobj.release.cpu, ~saa7164_i2c_client_template.dev.kobj.state_initialized, ~saa7164_i2c_client_template.dev.kobj.state_in_sysfs, ~saa7164_i2c_client_template.dev.kobj.state_add_uevent_sent, ~saa7164_i2c_client_template.dev.kobj.state_remove_uevent_sent, ~saa7164_i2c_client_template.dev.kobj.uevent_suppress, ~saa7164_i2c_client_template.dev.init_name.base, ~saa7164_i2c_client_template.dev.init_name.offset, ~saa7164_i2c_client_template.dev.type.base, ~saa7164_i2c_client_template.dev.type.offset, ~saa7164_i2c_client_template.dev.mutex.count.counter, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.mutex.wait_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.mutex.wait_list.next.base, ~saa7164_i2c_client_template.dev.mutex.wait_list.next.offset, ~saa7164_i2c_client_template.dev.mutex.wait_list.prev.base, ~saa7164_i2c_client_template.dev.mutex.wait_list.prev.offset, ~saa7164_i2c_client_template.dev.mutex.owner.base, ~saa7164_i2c_client_template.dev.mutex.owner.offset, ~saa7164_i2c_client_template.dev.mutex.magic.base, ~saa7164_i2c_client_template.dev.mutex.magic.offset, ~saa7164_i2c_client_template.dev.mutex.dep_map.key.base, ~saa7164_i2c_client_template.dev.mutex.dep_map.key.offset, ~saa7164_i2c_client_template.dev.mutex.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.mutex.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.mutex.dep_map.name.base, ~saa7164_i2c_client_template.dev.mutex.dep_map.name.offset, ~saa7164_i2c_client_template.dev.mutex.dep_map.cpu, ~saa7164_i2c_client_template.dev.mutex.dep_map.ip, ~saa7164_i2c_client_template.dev.bus.base, ~saa7164_i2c_client_template.dev.bus.offset, ~saa7164_i2c_client_template.dev.driver.base, ~saa7164_i2c_client_template.dev.driver.offset, ~saa7164_i2c_client_template.dev.platform_data.base, ~saa7164_i2c_client_template.dev.platform_data.offset, ~saa7164_i2c_client_template.dev.driver_data.base, ~saa7164_i2c_client_template.dev.driver_data.offset, ~saa7164_i2c_client_template.dev.power.power_state.event, ~saa7164_i2c_client_template.dev.power.can_wakeup, ~saa7164_i2c_client_template.dev.power.async_suspend, ~saa7164_i2c_client_template.dev.power.is_prepared, ~saa7164_i2c_client_template.dev.power.is_suspended, ~saa7164_i2c_client_template.dev.power.is_noirq_suspended, ~saa7164_i2c_client_template.dev.power.is_late_suspended, ~saa7164_i2c_client_template.dev.power.ignore_children, ~saa7164_i2c_client_template.dev.power.early_init, ~saa7164_i2c_client_template.dev.power.direct_complete, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.power.entry.next.base, ~saa7164_i2c_client_template.dev.power.entry.next.offset, ~saa7164_i2c_client_template.dev.power.entry.prev.base, ~saa7164_i2c_client_template.dev.power.entry.prev.offset, ~saa7164_i2c_client_template.dev.power.completion.done, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.completion.wait.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.next.base, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.next.offset, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.prev.base, ~saa7164_i2c_client_template.dev.power.completion.wait.task_list.prev.offset, ~saa7164_i2c_client_template.dev.power.wakeup.base, ~saa7164_i2c_client_template.dev.power.wakeup.offset, ~saa7164_i2c_client_template.dev.power.wakeup_path, ~saa7164_i2c_client_template.dev.power.syscore, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.next.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.next.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.pprev.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.entry.pprev.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.expires, ~saa7164_i2c_client_template.dev.power.suspend_timer.function.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.function.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.data, ~saa7164_i2c_client_template.dev.power.suspend_timer.flags, ~saa7164_i2c_client_template.dev.power.suspend_timer.slack, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_pid, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_site.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_site.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.start_comm, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.key.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.key.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.name.base, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.name.offset, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.cpu, ~saa7164_i2c_client_template.dev.power.suspend_timer.lockdep_map.ip, ~saa7164_i2c_client_template.dev.power.timer_expires, ~saa7164_i2c_client_template.dev.power.work.data.counter, ~saa7164_i2c_client_template.dev.power.work.entry.next.base, ~saa7164_i2c_client_template.dev.power.work.entry.next.offset, ~saa7164_i2c_client_template.dev.power.work.entry.prev.base, ~saa7164_i2c_client_template.dev.power.work.entry.prev.offset, ~saa7164_i2c_client_template.dev.power.work.func.base, ~saa7164_i2c_client_template.dev.power.work.func.offset, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.key.base, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.key.offset, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.name.base, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.name.offset, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.cpu, ~saa7164_i2c_client_template.dev.power.work.lockdep_map.ip, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.power.wait_queue.lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.next.base, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.next.offset, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.prev.base, ~saa7164_i2c_client_template.dev.power.wait_queue.task_list.prev.offset, ~saa7164_i2c_client_template.dev.power.wakeirq.base, ~saa7164_i2c_client_template.dev.power.wakeirq.offset, ~saa7164_i2c_client_template.dev.power.usage_count.counter, ~saa7164_i2c_client_template.dev.power.child_count.counter, ~saa7164_i2c_client_template.dev.power.disable_depth, ~saa7164_i2c_client_template.dev.power.idle_notification, ~saa7164_i2c_client_template.dev.power.request_pending, ~saa7164_i2c_client_template.dev.power.deferred_resume, ~saa7164_i2c_client_template.dev.power.run_wake, ~saa7164_i2c_client_template.dev.power.runtime_auto, ~saa7164_i2c_client_template.dev.power.no_callbacks, ~saa7164_i2c_client_template.dev.power.irq_safe, ~saa7164_i2c_client_template.dev.power.use_autosuspend, ~saa7164_i2c_client_template.dev.power.timer_autosuspends, ~saa7164_i2c_client_template.dev.power.memalloc_noio, ~saa7164_i2c_client_template.dev.power.request, ~saa7164_i2c_client_template.dev.power.runtime_status, ~saa7164_i2c_client_template.dev.power.runtime_error, ~saa7164_i2c_client_template.dev.power.autosuspend_delay, ~saa7164_i2c_client_template.dev.power.last_busy, ~saa7164_i2c_client_template.dev.power.active_jiffies, ~saa7164_i2c_client_template.dev.power.suspended_jiffies, ~saa7164_i2c_client_template.dev.power.accounting_timestamp, ~saa7164_i2c_client_template.dev.power.subsys_data.base, ~saa7164_i2c_client_template.dev.power.subsys_data.offset, ~saa7164_i2c_client_template.dev.power.set_latency_tolerance.base, ~saa7164_i2c_client_template.dev.power.set_latency_tolerance.offset, ~saa7164_i2c_client_template.dev.power.qos.base, ~saa7164_i2c_client_template.dev.power.qos.offset, ~saa7164_i2c_client_template.dev.pm_domain.base, ~saa7164_i2c_client_template.dev.pm_domain.offset, ~saa7164_i2c_client_template.dev.pins.base, ~saa7164_i2c_client_template.dev.pins.offset, ~saa7164_i2c_client_template.dev.numa_node, ~saa7164_i2c_client_template.dev.dma_mask.base, ~saa7164_i2c_client_template.dev.dma_mask.offset, ~saa7164_i2c_client_template.dev.coherent_dma_mask, ~saa7164_i2c_client_template.dev.dma_pfn_offset, ~saa7164_i2c_client_template.dev.dma_parms.base, ~saa7164_i2c_client_template.dev.dma_parms.offset, ~saa7164_i2c_client_template.dev.dma_pools.next.base, ~saa7164_i2c_client_template.dev.dma_pools.next.offset, ~saa7164_i2c_client_template.dev.dma_pools.prev.base, ~saa7164_i2c_client_template.dev.dma_pools.prev.offset, ~saa7164_i2c_client_template.dev.dma_mem.base, ~saa7164_i2c_client_template.dev.dma_mem.offset, ~saa7164_i2c_client_template.dev.cma_area.base, ~saa7164_i2c_client_template.dev.cma_area.offset, ~saa7164_i2c_client_template.dev.archdata.dma_ops.base, ~saa7164_i2c_client_template.dev.archdata.dma_ops.offset, ~saa7164_i2c_client_template.dev.archdata.iommu.base, ~saa7164_i2c_client_template.dev.archdata.iommu.offset, ~saa7164_i2c_client_template.dev.of_node.base, ~saa7164_i2c_client_template.dev.of_node.offset, ~saa7164_i2c_client_template.dev.fwnode.base, ~saa7164_i2c_client_template.dev.fwnode.offset, ~saa7164_i2c_client_template.dev.devt, ~saa7164_i2c_client_template.dev.id, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.raw_lock.val.counter, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.magic, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.owner_cpu, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.owner.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.owner.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.key.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.name.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.cpu, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.rlock.dep_map.ip, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.__padding, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.key.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.class_cache.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.base, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.name.offset, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.cpu, ~saa7164_i2c_client_template.dev.devres_lock.__annonCompField17.__annonCompField16.dep_map.ip, ~saa7164_i2c_client_template.dev.devres_head.next.base, ~saa7164_i2c_client_template.dev.devres_head.next.offset, ~saa7164_i2c_client_template.dev.devres_head.prev.base, ~saa7164_i2c_client_template.dev.devres_head.prev.offset, ~saa7164_i2c_client_template.dev.knode_class.n_klist.base, ~saa7164_i2c_client_template.dev.knode_class.n_klist.offset, ~saa7164_i2c_client_template.dev.knode_class.n_node.next.base, ~saa7164_i2c_client_template.dev.knode_class.n_node.next.offset, ~saa7164_i2c_client_template.dev.knode_class.n_node.prev.base, ~saa7164_i2c_client_template.dev.knode_class.n_node.prev.offset, ~saa7164_i2c_client_template.dev.knode_class.n_ref.refcount.counter, ~saa7164_i2c_client_template.dev.class.base, ~saa7164_i2c_client_template.dev.class.offset, ~saa7164_i2c_client_template.dev.groups.base, ~saa7164_i2c_client_template.dev.groups.offset, ~saa7164_i2c_client_template.dev.release.base, ~saa7164_i2c_client_template.dev.release.offset, ~saa7164_i2c_client_template.dev.iommu_group.base, ~saa7164_i2c_client_template.dev.iommu_group.offset, ~saa7164_i2c_client_template.dev.offline_disabled, ~saa7164_i2c_client_template.dev.offline, ~saa7164_i2c_client_template.irq, ~saa7164_i2c_client_template.detected.next.base, ~saa7164_i2c_client_template.detected.next.offset, ~saa7164_i2c_client_template.detected.prev.base, ~saa7164_i2c_client_template.detected.prev.offset, ~saa7164_i2c_client_template.slave_cb.base, ~saa7164_i2c_client_template.slave_cb.offset, ~#hauppauge_hvr2200_1_config.base, ~#hauppauge_hvr2200_1_config.offset, ~#hauppauge_hvr2200_2_config.base, ~#hauppauge_hvr2200_2_config.offset, ~#hauppauge_tda18271_std_map.base, ~#hauppauge_tda18271_std_map.offset, ~#hauppauge_hvr22x0_tuner_config.base, ~#hauppauge_hvr22x0_tuner_config.offset, ~#hauppauge_hvr22x0s_tuner_config.base, ~#hauppauge_hvr22x0s_tuner_config.offset, ~#hauppauge_s5h1411_config.base, ~#hauppauge_s5h1411_config.offset, ~#hauppauge_hvr2255a_config.base, ~#hauppauge_hvr2255a_config.offset, ~#hauppauge_hvr2255b_config.base, ~#hauppauge_hvr2255b_config.offset, ~#hauppauge_hvr2255_tuner_config.base, ~#hauppauge_hvr2255_tuner_config.offset, ~saa7164_tvnorms.name.base, ~saa7164_tvnorms.name.offset, ~saa7164_tvnorms.id, ~saa7164_v4l2_ctrls, ~#mpeg_fops.base, ~#mpeg_fops.offset, ~#mpeg_ioctl_ops.base, ~#mpeg_ioctl_ops.offset, ~#saa7164_mpeg_template.base, ~#saa7164_mpeg_template.offset, ~saa7164_tvnorms___0.name.base, ~saa7164_tvnorms___0.name.offset, ~saa7164_tvnorms___0.id, ~saa7164_v4l2_ctrls___0, ~#vbi_fops.base, ~#vbi_fops.offset, ~#vbi_ioctl_ops.base, ~#vbi_ioctl_ops.offset, ~#saa7164_vbi_template.base, ~#saa7164_vbi_template.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_state_variable_6, ~ldv_state_variable_11, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_9, ~ldv_state_variable_12, ~ldv_state_variable_2, ~ldv_state_variable_8, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_10, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_3, ~ldv_retval_4;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_work_3_0, ~ldv_work_3_1, ~ldv_work_3_2, ~ldv_work_3_3, ~vbi_fops_group0.base, ~vbi_fops_group0.offset, ~ldv_work_5_0, ~ldv_work_5_1, ~ldv_work_5_2, ~ldv_work_5_3, ~ldv_work_4_0, ~ldv_work_4_1, ~ldv_work_4_2, ~ldv_work_4_3, ~mpeg_fops_group0.base, ~mpeg_fops_group0.offset, ~vbi_ioctl_ops_group2.base, ~vbi_ioctl_ops_group2.offset, ~vbi_ioctl_ops_group1.base, ~vbi_ioctl_ops_group1.offset, ~vbi_ioctl_ops_group0.base, ~vbi_ioctl_ops_group0.offset, ~vbi_ioctl_ops_group3.base, ~vbi_ioctl_ops_group3.offset, ~saa7164_i2c_algo_template_group0.base, ~saa7164_i2c_algo_template_group0.offset, ~mpeg_ioctl_ops_group2.base, ~mpeg_ioctl_ops_group2.offset, ~mpeg_ioctl_ops_group1.base, ~mpeg_ioctl_ops_group1.offset, ~mpeg_ioctl_ops_group0.base, ~mpeg_ioctl_ops_group0.offset, ~mpeg_ioctl_ops_group3.base, ~mpeg_ioctl_ops_group3.offset, ~saa7164_proc_fops_group1.base, ~saa7164_proc_fops_group1.offset, ~saa7164_proc_fops_group2.base, ~saa7164_proc_fops_group2.offset, ~ldv_state_variable_11, ~saa7164_pci_driver_group1.base, ~saa7164_pci_driver_group1.offset, ~ldv_mutex_dmaqueue_lock_of_saa7164_port, ~print_histogram, ~ldv_mutex_lock_of_saa7164_dev, ~ldv_mutex_lock_of_tmComResBusInfo, ~saa_debug, ~ldv_work_struct_3_0.base, ~ldv_work_struct_3_0.offset, ~ldv_work_struct_3_1.base, ~ldv_work_struct_3_1.offset, ~ldv_work_struct_3_2.base, ~ldv_work_struct_3_2.offset, ~ldv_work_struct_3_3.base, ~ldv_work_struct_3_3.offset, ~LDV_IN_INTERRUPT, ~ldv_irq_1_0, ~ldv_irq_2_0, ~ldv_mutex_lock_of_cmd, ~ldv_state_variable_10, ~encoder_buffers, ~ldv_state_variable_9, ~ref_cnt, ~ldv_retval_2, ~vbi_buffers, ~ldv_retval_1, ~ldv_state_variable_7, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~ldv_mutex_devlist, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~saa7164_devcount, ~ldv_state_variable_8, ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_12, ~ldv_state_variable_2, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_3, ~ldv_retval_4;

implementation ldv_memset(#in~s.base : int, #in~s.offset : int, #in~c : int, #in~n : int) returns (#res.base : int, #res.offset : int){
    var #t~memset9.base : int, #t~memset9.offset : int;
    var ~s.base : int, ~s.offset : int;
    var ~c : int;
    var ~n : int;
    var ~tmp~11.base : int, ~tmp~11.offset : int;

  loc20:
    ~s.base, ~s.offset := #in~s.base, #in~s.offset;
    ~c := #in~c;
    ~n := #in~n;
    havoc ~tmp~11.base, ~tmp~11.offset;
    call #t~memset9.base, #t~memset9.offset := #Ultimate.C_memset(~s.base, ~s.offset, ~c, (if ~n % 4294967296 % 4294967296 <= 2147483647 then ~n % 4294967296 % 4294967296 else ~n % 4294967296 % 4294967296 - 4294967296));
    ~tmp~11.base, ~tmp~11.offset := ~s.base, ~s.offset;
    havoc #t~memset9.base, #t~memset9.offset;
    #res.base, #res.offset := ~tmp~11.base, ~tmp~11.offset;
    assume true;
    return;
}

procedure ldv_memset(#in~s.base : int, #in~s.offset : int, #in~c : int, #in~n : int) returns (#res.base : int, #res.offset : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation #Ultimate.meminit(#ptr.base : int, #ptr.offset : int, #amountOfFields : int, #sizeOfFields : int, #product : int) returns (){
    var #t~loopctr8161 : int;

  loc21:
    #t~loopctr8161 := 0;
    assume !(#t~loopctr8161 < #product);
    assume true;
    return;
}

procedure #Ultimate.meminit(#ptr.base : int, #ptr.offset : int, #amountOfFields : int, #sizeOfFields : int, #product : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

procedure wake_up_process(#in~204.base : int, #in~204.offset : int) returns (#res : int);
modifies ;

procedure dvb_dmxdev_init(#in~2254.base : int, #in~2254.offset : int, #in~2255.base : int, #in~2255.offset : int) returns (#res : int);
modifies ;

procedure ioremap_nocache(#in~199 : int, #in~200 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure freezing_slow_path(#in~283.base : int, #in~283.offset : int) returns (#res : ~bool);
modifies ;

procedure free_irq(#in~218 : int, #in~219.base : int, #in~219.offset : int) returns ();
modifies ;

procedure __might_sleep(#in~150.base : int, #in~150.offset : int, #in~151 : int, #in~152 : int) returns ();
modifies ;

procedure v4l2_device_unregister(#in~301.base : int, #in~301.offset : int) returns ();
modifies ;

procedure kthread_should_stop() returns (#res : ~bool);
modifies ;

procedure __symbol_put(#in~2262.base : int, #in~2262.offset : int) returns ();
modifies ;

procedure dvb_dmx_release(#in~2258.base : int, #in~2258.offset : int) returns ();
modifies ;

procedure crc32_le(#in~275 : int, #in~276.base : int, #in~276.offset : int, #in~277 : int) returns (#res : ~u32);
modifies ;

procedure memcpy(#in~166.base : int, #in~166.offset : int, #in~167.base : int, #in~167.offset : int, #in~168 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure i2c_add_adapter(#in~1161.base : int, #in~1161.offset : int) returns (#res : int);
modifies ;

procedure __refrigerator(#in~287 : int) returns (#res : ~bool);
modifies ;

procedure sprintf(#in~4493.base : int, #in~4493.offset : int, #in~4494.base : int, #in~4494.offset : int) returns (#res : int);
modifies ;

procedure __request_module(#in~2259 : int, #in~2260.base : int, #in~2260.offset : int) returns (#res : int);
modifies ;

procedure memcmp(#in~3432.base : int, #in~3432.offset : int, #in~3433.base : int, #in~3433.offset : int, #in~3434 : int) returns (#res : int);
modifies ;

procedure remove_proc_entry(#in~227.base : int, #in~227.offset : int, #in~228.base : int, #in~228.offset : int) returns ();
modifies ;

procedure strlcpy(#in~1158.base : int, #in~1158.offset : int, #in~1159.base : int, #in~1159.offset : int, #in~1160 : int) returns (#res : int);
modifies ;

procedure __xadd_wrong_size() returns ();
modifies ;

procedure dma_supported(#in~269.base : int, #in~269.offset : int, #in~270 : int) returns (#res : int);
modifies ;

procedure i2c_new_device(#in~2245.base : int, #in~2245.offset : int, #in~2246.base : int, #in~2246.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure video_devdata(#in~4515.base : int, #in~4515.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure iounmap(#in~202.base : int, #in~202.offset : int) returns ();
modifies ;

procedure i2c_unregister_device(#in~2247.base : int, #in~2247.offset : int) returns ();
modifies ;

procedure __might_fault(#in~4491.base : int, #in~4491.offset : int, #in~4492 : int) returns ();
modifies ;

procedure list_del(#in~164.base : int, #in~164.offset : int) returns ();
modifies ;

procedure schedule() returns ();
modifies ;

procedure dvb_register_adapter(#in~2248.base : int, #in~2248.offset : int, #in~2249.base : int, #in~2249.offset : int, #in~2250.base : int, #in~2250.offset : int, #in~2251.base : int, #in~2251.offset : int, #in~2252.base : int, #in~2252.offset : int) returns (#res : int);
modifies ;

procedure video_ioctl2(#in~4522.base : int, #in~4522.offset : int, #in~4523 : int, #in~4524 : int) returns (#res : int);
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure ldv_initialize() returns ();
modifies ;

procedure __VERIFIER_nondet_pointer() returns (#res.base : int, #res.offset : int);
modifies ;

procedure dvb_frontend_detach(#in~2272.base : int, #in~2272.offset : int) returns ();
modifies ;

procedure dvb_unregister_frontend(#in~2271.base : int, #in~2271.offset : int) returns (#res : int);
modifies ;

procedure pci_enable_msi_range(#in~265.base : int, #in~265.offset : int, #in~266 : int, #in~267 : int) returns (#res : int);
modifies ;

procedure prepare_to_wait_event(#in~3186.base : int, #in~3186.offset : int, #in~3187.base : int, #in~3187.offset : int, #in~3188 : int) returns (#res : int);
modifies ;

procedure print_hex_dump(#in~3424.base : int, #in~3424.offset : int, #in~3425.base : int, #in~3425.offset : int, #in~3426 : int, #in~3427 : int, #in~3428 : int, #in~3429.base : int, #in~3429.offset : int, #in~3430 : int, #in~3431 : int) returns ();
modifies ;

procedure pci_disable_device(#in~258.base : int, #in~258.offset : int) returns ();
modifies ;

procedure dvb_net_release(#in~2265.base : int, #in~2265.offset : int) returns ();
modifies ;

procedure video_unregister_device(#in~4512.base : int, #in~4512.offset : int) returns ();
modifies ;

procedure proc_create_data(#in~221.base : int, #in~221.offset : int, #in~222 : int, #in~223.base : int, #in~223.offset : int, #in~224.base : int, #in~224.offset : int, #in~225.base : int, #in~225.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure v4l2_ctrl_query_fill(#in~4517.base : int, #in~4517.offset : int, #in~4518 : int, #in~4519 : int, #in~4520 : int, #in~4521 : int) returns (#res : int);
modifies ;

procedure seq_lseek(#in~233.base : int, #in~233.offset : int, #in~234 : int, #in~235 : int) returns (#res : ~loff_t);
modifies ;

procedure dvb_register_frontend(#in~2269.base : int, #in~2269.offset : int, #in~2270.base : int, #in~2270.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_assume(#in~7 : int) returns ();
modifies ;

procedure __list_add(#in~159.base : int, #in~159.offset : int, #in~160.base : int, #in~160.offset : int, #in~161.base : int, #in~161.offset : int) returns ();
modifies ;

procedure __const_udelay(#in~2949 : int) returns ();
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];

procedure __bad_percpu_size() returns ();
modifies ;

procedure kthread_stop(#in~282.base : int, #in~282.offset : int) returns (#res : int);
modifies ;

procedure ldv_shutdown_11() returns (#res : int);
modifies ;

procedure _copy_to_user(#in~4498.base : int, #in~4498.offset : int, #in~4499.base : int, #in~4499.offset : int, #in~4500 : int) returns (#res : int);
modifies ;

procedure kthread_create_on_node(#in~278.base : int, #in~278.offset : int, #in~279.base : int, #in~279.offset : int, #in~280 : int, #in~281.base : int, #in~281.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure memset(#in~1.base : int, #in~1.offset : int, #in~2 : int, #in~3 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __init_work(#in~187.base : int, #in~187.offset : int, #in~188 : int) returns ();
modifies ;

procedure __pci_register_driver(#in~260.base : int, #in~260.offset : int, #in~261.base : int, #in~261.offset : int, #in~262.base : int, #in~262.offset : int) returns (#res : int);
modifies ;

procedure request_firmware(#in~2688.base : int, #in~2688.offset : int, #in~2689.base : int, #in~2689.offset : int, #in~2690.base : int, #in~2690.offset : int) returns (#res : int);
modifies ;

procedure __init_waitqueue_head(#in~180.base : int, #in~180.offset : int, #in~181.base : int, #in~181.offset : int, #in~182.base : int, #in~182.offset : int) returns ();
modifies ;

procedure i2c_del_adapter(#in~1162.base : int, #in~1162.offset : int) returns ();
modifies ;

procedure schedule_timeout(#in~3191 : int) returns (#res : int);
modifies ;

procedure finish_wait(#in~3189.base : int, #in~3189.offset : int, #in~3190.base : int, #in~3190.offset : int) returns ();
modifies ;

procedure video_device_alloc() returns (#res.base : int, #res.offset : int);
modifies ;

procedure __cmpxchg_wrong_size() returns ();
modifies ;

procedure msleep(#in~14 : int) returns ();
modifies ;

procedure pci_unregister_driver(#in~263.base : int, #in~263.offset : int) returns ();
modifies ;

procedure dvb_unregister_adapter(#in~2253.base : int, #in~2253.offset : int) returns (#res : int);
modifies ;

procedure seq_read(#in~229.base : int, #in~229.offset : int, #in~230.base : int, #in~230.offset : int, #in~231 : int, #in~232.base : int, #in~232.offset : int) returns (#res : int);
modifies ;

procedure set_freezable() returns (#res : ~bool);
modifies ;

procedure video_device_release(#in~4513.base : int, #in~4513.offset : int) returns ();
modifies ;

procedure seq_printf(#in~236.base : int, #in~236.offset : int, #in~237.base : int, #in~237.offset : int) returns (#res : int);
modifies ;

procedure mutex_unlock(#in~4.base : int, #in~4.offset : int) returns ();
modifies ;

procedure debug_check_no_locks_held() returns ();
modifies ;

procedure msleep_interruptible(#in~220 : int) returns (#res : int);
modifies ;

procedure mutex_lock(#in~10.base : int, #in~10.offset : int) returns ();
modifies ;

procedure dvb_net_init(#in~2266.base : int, #in~2266.offset : int, #in~2267.base : int, #in~2267.offset : int, #in~2268.base : int, #in~2268.offset : int) returns (#res : int);
modifies ;

procedure __kmalloc(#in~206 : int, #in~207 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure pci_set_master(#in~259.base : int, #in~259.offset : int) returns ();
modifies ;

procedure module_put(#in~2264.base : int, #in~2264.offset : int) returns ();
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure __list_del_entry(#in~163.base : int, #in~163.offset : int) returns ();
modifies ;

procedure printk(#in~0.base : int, #in~0.offset : int) returns (#res : int);
modifies ;

procedure calloc(#in~5 : int, #in~6 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure dev_err(#in~248.base : int, #in~248.offset : int, #in~249.base : int, #in~249.offset : int) returns ();
modifies ;

procedure try_module_get(#in~2263.base : int, #in~2263.offset : int) returns (#res : ~bool);
modifies ;

procedure __mutex_init(#in~176.base : int, #in~176.offset : int, #in~177.base : int, #in~177.offset : int, #in~178.base : int, #in~178.offset : int) returns ();
modifies ;

procedure queue_work_on(#in~11 : int, #in~12.base : int, #in~12.offset : int, #in~13.base : int, #in~13.offset : int) returns (#res : ~bool);
modifies ;

procedure lockdep_init_map(#in~172.base : int, #in~172.offset : int, #in~173.base : int, #in~173.offset : int, #in~174.base : int, #in~174.offset : int, #in~175 : int) returns ();
modifies ;

procedure release_firmware(#in~2691.base : int, #in~2691.offset : int) returns ();
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure jiffies_to_msecs(#in~179 : int) returns (#res : int);
modifies ;

procedure strcpy(#in~169.base : int, #in~169.offset : int, #in~170.base : int, #in~170.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure dma_free_attrs(#in~4320.base : int, #in~4320.offset : int, #in~4321 : int, #in~4322.base : int, #in~4322.offset : int, #in~4323 : int, #in~4324.base : int, #in~4324.offset : int) returns ();
modifies ;

procedure single_open(#in~238.base : int, #in~238.offset : int, #in~239.base : int, #in~239.offset : int, #in~240.base : int, #in~240.offset : int) returns (#res : int);
modifies ;

procedure dvb_dmx_swfilter_packets(#in~296.base : int, #in~296.offset : int, #in~297.base : int, #in~297.offset : int, #in~298 : int) returns ();
modifies ;

procedure __release_region(#in~196.base : int, #in~196.offset : int, #in~197 : int, #in~198 : int) returns ();
modifies ;

procedure v4l2_device_register(#in~299.base : int, #in~299.offset : int, #in~300.base : int, #in~300.offset : int) returns (#res : int);
modifies ;

procedure kfree(#in~205.base : int, #in~205.offset : int) returns ();
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];

procedure single_release(#in~241.base : int, #in~241.offset : int, #in~242.base : int, #in~242.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_error() returns ();
modifies ;

procedure __video_register_device(#in~4504.base : int, #in~4504.offset : int, #in~4505 : int, #in~4506 : int, #in~4507 : int, #in~4508.base : int, #in~4508.offset : int) returns (#res : int);
modifies ;

procedure pci_enable_device(#in~257.base : int, #in~257.offset : int) returns (#res : int);
modifies ;

procedure __symbol_get(#in~2261.base : int, #in~2261.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __wake_up(#in~183.base : int, #in~183.offset : int, #in~184 : int, #in~185 : int, #in~186.base : int, #in~186.offset : int) returns ();
modifies ;

procedure tveeprom_hauppauge_analog(#in~15.base : int, #in~15.offset : int, #in~16.base : int, #in~16.offset : int, #in~17.base : int, #in~17.offset : int) returns ();
modifies ;

procedure dvb_dmxdev_release(#in~2256.base : int, #in~2256.offset : int) returns ();
modifies ;

procedure dma_alloc_attrs(#in~4315.base : int, #in~4315.offset : int, #in~4316 : int, #in~4317.base : int, #in~4317.offset : int, #in~4318 : int, #in~4319.base : int, #in~4319.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __copy_to_user_overflow() returns ();
modifies ;

procedure snprintf(#in~153.base : int, #in~153.offset : int, #in~154 : int, #in~155.base : int, #in~155.offset : int) returns (#res : int);
modifies ;

procedure pci_disable_msi(#in~264.base : int, #in~264.offset : int) returns ();
modifies ;

procedure __request_region(#in~191.base : int, #in~191.offset : int, #in~192 : int, #in~193 : int, #in~194.base : int, #in~194.offset : int, #in~195 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure pci_bus_read_config_byte(#in~250.base : int, #in~250.offset : int, #in~251 : int, #in~252 : int, #in~253.base : int, #in~253.offset : int) returns (#res : int);
modifies ;

procedure dvb_dmx_init(#in~2257.base : int, #in~2257.offset : int) returns (#res : int);
modifies ;

procedure request_threaded_irq(#in~211 : int, #in~212.base : int, #in~212.offset : int, #in~213.base : int, #in~213.offset : int, #in~214 : int, #in~215.base : int, #in~215.offset : int, #in~216.base : int, #in~216.offset : int) returns (#res : int);
modifies ;


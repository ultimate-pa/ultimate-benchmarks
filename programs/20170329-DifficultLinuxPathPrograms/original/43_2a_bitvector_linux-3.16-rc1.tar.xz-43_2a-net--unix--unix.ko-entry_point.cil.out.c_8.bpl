type STRUCT~map_segment;
type STRUCT~perf_event;
type STRUCT~optimistic_spin_queue;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~uprobe;
type STRUCT~return_instance;
type STRUCT~xol_area;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~kernfs_open_node;
type STRUCT~kernfs_iattrs;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~tracepoint;
type STRUCT~ftrace_event_call;
type STRUCT~kmem_cache_node;
type STRUCT~mem_cgroup;
type STRUCT~sem_undo_list;
type STRUCT~pid_namespace;
type STRUCT~seccomp_filter;
type STRUCT~assoc_array_ptr;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~tty_struct;
type STRUCT~autogroup;
type STRUCT~tty_audit_buf;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~sched_class;
type STRUCT~task_group;
type STRUCT~fs_struct;
type STRUCT~files_struct;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~bio_list;
type STRUCT~blk_plug;
type STRUCT~reclaim_state;
type STRUCT~backing_dev_info;
type STRUCT~io_context;
type STRUCT~robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~numa_group;
type STRUCT~pipe_inode_info;
type STRUCT~ftrace_ret_stack;
type STRUCT~writeback_control;
type STRUCT~swap_info_struct;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~cdev;
type STRUCT~posix_acl;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~kstatfs;
type STRUCT~pinctrl;
type STRUCT~pinctrl_state;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~of_device_id;
type STRUCT~acpi_device_id;
type STRUCT~driver_private;
type STRUCT~acpi_device;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~cma;
type STRUCT~device_node;
type STRUCT~iommu_group;
type STRUCT~sec_path;
type STRUCT~prot_inuse;
type STRUCT~proc_dir_entry;
type STRUCT~ipv4_devconf;
type STRUCT~fib_rules_ops;
type STRUCT~fib_table;
type STRUCT~inet_peer_base;
type STRUCT~tcpm_hash_bucket;
type STRUCT~xt_table;
type STRUCT~ipv6_devconf;
type STRUCT~rt6_info;
type STRUCT~rt6_statistics;
type STRUCT~fib6_table;
type STRUCT~sctp_mib;
type STRUCT~nf_logger;
type STRUCT~ebt_table;
type STRUCT~ip_conntrack_stat;
type STRUCT~nf_ct_event_notifier;
type STRUCT~nf_exp_event_notifier;
type STRUCT~nft_af_info;
type STRUCT~net_generic;
type STRUCT~netns_ipvs;
type STRUCT~mii_bus;
type STRUCT~cgroup_taskset;
type STRUCT~uts_namespace;
type STRUCT~ipc_namespace;
type STRUCT~mnt_namespace;
type STRUCT~Qdisc;
type STRUCT~netpoll_info;
type STRUCT~pcpu_lstats;
type STRUCT~pcpu_dstats;
type STRUCT~pcpu_vstats;
type STRUCT~iw_handler_def;
type STRUCT~iw_public_data;
type STRUCT~forwarding_accel_ops;
type STRUCT~vlan_info;
type STRUCT~tipc_bearer;
type STRUCT~in_device;
type STRUCT~dn_dev;
type STRUCT~inet6_dev;
type STRUCT~wireless_dev;
type STRUCT~cpu_rmap;
type STRUCT~garp_port;
type STRUCT~mrp_port;
type STRUCT~phy_device;
type STRUCT~kioctx;
type STRUCT~eventfd_ctx;
type STRUCT~rtable;
type STRUCT~dn_route;
type STRUCT~xfrm_state;
type STRUCT~xfrm_policy;
type STRUCT~inet_hashinfo;
type STRUCT~udp_table;
type STRUCT~raw_hashinfo;
type STRUCT~request_sock_ops;
type STRUCT~timewait_sock_ops;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__u64 = int;
type ~s8 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~oom_flags_t = int;
type ~pteval_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~cputime_t = int;
type ~__kernel_sa_family_t = int;
type ~qsize_t = int;
type ~sk_buff_data_t = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_clock_t = ~__kernel_long_t;
type ~__be16 = ~__u16;
type ~__be32 = ~__u32;
type ~__sum16 = ~__u16;
type ~__wsum = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint8_t = ~__u8;
type ~uint32_t = ~__u32;
type ~uint64_t = ~__u64;
type ~dma_addr_t = ~u64;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~sa_family_t = ~__kernel_sa_family_t;
type ~socket_state = int;
type ~projid_t = ~__kernel_uid32_t;
type ~dma_cookie_t = ~s32;
type ~netdev_features_t = ~u64;
type ~compat_time_t = ~s32;
type ~compat_long_t = ~s32;
type ~compat_uptr_t = ~u32;
type ~netdev_tx_t = int;
type ~rx_handler_result_t = int;
type ~__portpair = ~__u32;
type ~__addrpair = ~__u64;
const #funAddr~unix_peer_get.base : int;
const #funAddr~unix_peer_get.offset : int;
const #funAddr~unix_release.base : int;
const #funAddr~unix_release.offset : int;
const #funAddr~unix_bind.base : int;
const #funAddr~unix_bind.offset : int;
const #funAddr~unix_stream_connect.base : int;
const #funAddr~unix_stream_connect.offset : int;
const #funAddr~unix_socketpair.base : int;
const #funAddr~unix_socketpair.offset : int;
const #funAddr~unix_accept.base : int;
const #funAddr~unix_accept.offset : int;
const #funAddr~unix_getname.base : int;
const #funAddr~unix_getname.offset : int;
const #funAddr~unix_poll.base : int;
const #funAddr~unix_poll.offset : int;
const #funAddr~unix_ioctl.base : int;
const #funAddr~unix_ioctl.offset : int;
const #funAddr~unix_listen.base : int;
const #funAddr~unix_listen.offset : int;
const #funAddr~unix_shutdown.base : int;
const #funAddr~unix_shutdown.offset : int;
const #funAddr~sock_no_setsockopt.base : int;
const #funAddr~sock_no_setsockopt.offset : int;
const #funAddr~sock_no_getsockopt.base : int;
const #funAddr~sock_no_getsockopt.offset : int;
const #funAddr~unix_stream_sendmsg.base : int;
const #funAddr~unix_stream_sendmsg.offset : int;
const #funAddr~unix_stream_recvmsg.base : int;
const #funAddr~unix_stream_recvmsg.offset : int;
const #funAddr~sock_no_mmap.base : int;
const #funAddr~sock_no_mmap.offset : int;
const #funAddr~sock_no_sendpage.base : int;
const #funAddr~sock_no_sendpage.offset : int;
const #funAddr~unix_set_peek_off.base : int;
const #funAddr~unix_set_peek_off.offset : int;
const #funAddr~unix_dgram_connect.base : int;
const #funAddr~unix_dgram_connect.offset : int;
const #funAddr~sock_no_accept.base : int;
const #funAddr~sock_no_accept.offset : int;
const #funAddr~unix_dgram_poll.base : int;
const #funAddr~unix_dgram_poll.offset : int;
const #funAddr~sock_no_listen.base : int;
const #funAddr~sock_no_listen.offset : int;
const #funAddr~unix_dgram_sendmsg.base : int;
const #funAddr~unix_dgram_sendmsg.offset : int;
const #funAddr~unix_dgram_recvmsg.base : int;
const #funAddr~unix_dgram_recvmsg.offset : int;
const #funAddr~unix_seqpacket_sendmsg.base : int;
const #funAddr~unix_seqpacket_sendmsg.offset : int;
const #funAddr~unix_seqpacket_recvmsg.base : int;
const #funAddr~unix_seqpacket_recvmsg.offset : int;
const #funAddr~unix_write_space.base : int;
const #funAddr~unix_write_space.offset : int;
const #funAddr~unix_sock_destructor.base : int;
const #funAddr~unix_sock_destructor.offset : int;
const #funAddr~autoremove_wake_function.base : int;
const #funAddr~autoremove_wake_function.offset : int;
const #funAddr~unix_destruct_scm.base : int;
const #funAddr~unix_destruct_scm.offset : int;
const #funAddr~unix_inq_len.base : int;
const #funAddr~unix_inq_len.offset : int;
const #funAddr~unix_outq_len.base : int;
const #funAddr~unix_outq_len.offset : int;
const #funAddr~unix_seq_start.base : int;
const #funAddr~unix_seq_start.offset : int;
const #funAddr~unix_seq_stop.base : int;
const #funAddr~unix_seq_stop.offset : int;
const #funAddr~unix_seq_next.base : int;
const #funAddr~unix_seq_next.offset : int;
const #funAddr~unix_seq_show.base : int;
const #funAddr~unix_seq_show.offset : int;
const #funAddr~seq_lseek.base : int;
const #funAddr~seq_lseek.offset : int;
const #funAddr~seq_read.base : int;
const #funAddr~seq_read.offset : int;
const #funAddr~unix_seq_open.base : int;
const #funAddr~unix_seq_open.offset : int;
const #funAddr~seq_release_net.base : int;
const #funAddr~seq_release_net.offset : int;
const #funAddr~unix_create.base : int;
const #funAddr~unix_create.offset : int;
const #funAddr~unix_net_init.base : int;
const #funAddr~unix_net_init.offset : int;
const #funAddr~unix_net_exit.base : int;
const #funAddr~unix_net_exit.offset : int;
const #funAddr~dec_inflight.base : int;
const #funAddr~dec_inflight.offset : int;
const #funAddr~inc_inflight_move_tail.base : int;
const #funAddr~inc_inflight_move_tail.offset : int;
const #funAddr~inc_inflight.base : int;
const #funAddr~inc_inflight.offset : int;
const #funAddr~proc_dointvec.base : int;
const #funAddr~proc_dointvec.offset : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~uprobe_task_state~UTASK_RUNNING : int;
const ~uprobe_task_state~UTASK_SSTEP : int;
const ~uprobe_task_state~UTASK_SSTEP_ACK : int;
const ~uprobe_task_state~UTASK_SSTEP_TRAPPED : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~ldv_17650~SS_FREE : int;
const ~ldv_17650~SS_UNCONNECTED : int;
const ~ldv_17650~SS_CONNECTING : int;
const ~ldv_17650~SS_CONNECTED : int;
const ~ldv_17650~SS_DISCONNECTING : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_RESUME_LATENCY : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY_TOLERANCE : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS : int;
const ~pm_qos_type~PM_QOS_UNITIALIZED : int;
const ~pm_qos_type~PM_QOS_MAX : int;
const ~pm_qos_type~PM_QOS_MIN : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ON : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_OFF : int;
const ~netdev_tx~__NETDEV_TX_MIN : int;
const ~netdev_tx~NETDEV_TX_OK : int;
const ~netdev_tx~NETDEV_TX_BUSY : int;
const ~netdev_tx~NETDEV_TX_LOCKED : int;
const ~rx_handler_result~RX_HANDLER_CONSUMED : int;
const ~rx_handler_result~RX_HANDLER_ANOTHER : int;
const ~rx_handler_result~RX_HANDLER_EXACT : int;
const ~rx_handler_result~RX_HANDLER_PASS : int;
const ~sock_flags~SOCK_DEAD : int;
const ~sock_flags~SOCK_DONE : int;
const ~sock_flags~SOCK_URGINLINE : int;
const ~sock_flags~SOCK_KEEPOPEN : int;
const ~sock_flags~SOCK_LINGER : int;
const ~sock_flags~SOCK_DESTROY : int;
const ~sock_flags~SOCK_BROADCAST : int;
const ~sock_flags~SOCK_TIMESTAMP : int;
const ~sock_flags~SOCK_ZAPPED : int;
const ~sock_flags~SOCK_USE_WRITE_QUEUE : int;
const ~sock_flags~SOCK_DBG : int;
const ~sock_flags~SOCK_RCVTSTAMP : int;
const ~sock_flags~SOCK_RCVTSTAMPNS : int;
const ~sock_flags~SOCK_LOCALROUTE : int;
const ~sock_flags~SOCK_QUEUE_SHRUNK : int;
const ~sock_flags~SOCK_MEMALLOC : int;
const ~sock_flags~SOCK_TIMESTAMPING_TX_HARDWARE : int;
const ~sock_flags~SOCK_TIMESTAMPING_TX_SOFTWARE : int;
const ~sock_flags~SOCK_TIMESTAMPING_RX_HARDWARE : int;
const ~sock_flags~SOCK_TIMESTAMPING_RX_SOFTWARE : int;
const ~sock_flags~SOCK_TIMESTAMPING_SOFTWARE : int;
const ~sock_flags~SOCK_TIMESTAMPING_RAW_HARDWARE : int;
const ~sock_flags~SOCK_TIMESTAMPING_SYS_HARDWARE : int;
const ~sock_flags~SOCK_FASYNC : int;
const ~sock_flags~SOCK_RXQ_OVFL : int;
const ~sock_flags~SOCK_ZEROCOPY : int;
const ~sock_flags~SOCK_WIFI_STATUS : int;
const ~sock_flags~SOCK_NOFCS : int;
const ~sock_flags~SOCK_FILTER_LOCKED : int;
const ~sock_flags~SOCK_SELECT_ERR_QUEUE : int;
axiom #funAddr~unix_peer_get.base == -1 && #funAddr~unix_peer_get.offset == 0;
axiom #funAddr~unix_release.base == -1 && #funAddr~unix_release.offset == 1;
axiom #funAddr~unix_bind.base == -1 && #funAddr~unix_bind.offset == 2;
axiom #funAddr~unix_stream_connect.base == -1 && #funAddr~unix_stream_connect.offset == 3;
axiom #funAddr~unix_socketpair.base == -1 && #funAddr~unix_socketpair.offset == 4;
axiom #funAddr~unix_accept.base == -1 && #funAddr~unix_accept.offset == 5;
axiom #funAddr~unix_getname.base == -1 && #funAddr~unix_getname.offset == 6;
axiom #funAddr~unix_poll.base == -1 && #funAddr~unix_poll.offset == 7;
axiom #funAddr~unix_ioctl.base == -1 && #funAddr~unix_ioctl.offset == 8;
axiom #funAddr~unix_listen.base == -1 && #funAddr~unix_listen.offset == 9;
axiom #funAddr~unix_shutdown.base == -1 && #funAddr~unix_shutdown.offset == 10;
axiom #funAddr~sock_no_setsockopt.base == -1 && #funAddr~sock_no_setsockopt.offset == 11;
axiom #funAddr~sock_no_getsockopt.base == -1 && #funAddr~sock_no_getsockopt.offset == 12;
axiom #funAddr~unix_stream_sendmsg.base == -1 && #funAddr~unix_stream_sendmsg.offset == 13;
axiom #funAddr~unix_stream_recvmsg.base == -1 && #funAddr~unix_stream_recvmsg.offset == 14;
axiom #funAddr~sock_no_mmap.base == -1 && #funAddr~sock_no_mmap.offset == 15;
axiom #funAddr~sock_no_sendpage.base == -1 && #funAddr~sock_no_sendpage.offset == 16;
axiom #funAddr~unix_set_peek_off.base == -1 && #funAddr~unix_set_peek_off.offset == 17;
axiom #funAddr~unix_dgram_connect.base == -1 && #funAddr~unix_dgram_connect.offset == 18;
axiom #funAddr~sock_no_accept.base == -1 && #funAddr~sock_no_accept.offset == 19;
axiom #funAddr~unix_dgram_poll.base == -1 && #funAddr~unix_dgram_poll.offset == 20;
axiom #funAddr~sock_no_listen.base == -1 && #funAddr~sock_no_listen.offset == 21;
axiom #funAddr~unix_dgram_sendmsg.base == -1 && #funAddr~unix_dgram_sendmsg.offset == 22;
axiom #funAddr~unix_dgram_recvmsg.base == -1 && #funAddr~unix_dgram_recvmsg.offset == 23;
axiom #funAddr~unix_seqpacket_sendmsg.base == -1 && #funAddr~unix_seqpacket_sendmsg.offset == 24;
axiom #funAddr~unix_seqpacket_recvmsg.base == -1 && #funAddr~unix_seqpacket_recvmsg.offset == 25;
axiom #funAddr~unix_write_space.base == -1 && #funAddr~unix_write_space.offset == 26;
axiom #funAddr~unix_sock_destructor.base == -1 && #funAddr~unix_sock_destructor.offset == 27;
axiom #funAddr~autoremove_wake_function.base == -1 && #funAddr~autoremove_wake_function.offset == 28;
axiom #funAddr~unix_destruct_scm.base == -1 && #funAddr~unix_destruct_scm.offset == 29;
axiom #funAddr~unix_inq_len.base == -1 && #funAddr~unix_inq_len.offset == 30;
axiom #funAddr~unix_outq_len.base == -1 && #funAddr~unix_outq_len.offset == 31;
axiom #funAddr~unix_seq_start.base == -1 && #funAddr~unix_seq_start.offset == 32;
axiom #funAddr~unix_seq_stop.base == -1 && #funAddr~unix_seq_stop.offset == 33;
axiom #funAddr~unix_seq_next.base == -1 && #funAddr~unix_seq_next.offset == 34;
axiom #funAddr~unix_seq_show.base == -1 && #funAddr~unix_seq_show.offset == 35;
axiom #funAddr~seq_lseek.base == -1 && #funAddr~seq_lseek.offset == 36;
axiom #funAddr~seq_read.base == -1 && #funAddr~seq_read.offset == 37;
axiom #funAddr~unix_seq_open.base == -1 && #funAddr~unix_seq_open.offset == 38;
axiom #funAddr~seq_release_net.base == -1 && #funAddr~seq_release_net.offset == 39;
axiom #funAddr~unix_create.base == -1 && #funAddr~unix_create.offset == 40;
axiom #funAddr~unix_net_init.base == -1 && #funAddr~unix_net_init.offset == 41;
axiom #funAddr~unix_net_exit.base == -1 && #funAddr~unix_net_exit.offset == 42;
axiom #funAddr~dec_inflight.base == -1 && #funAddr~dec_inflight.offset == 43;
axiom #funAddr~inc_inflight_move_tail.base == -1 && #funAddr~inc_inflight_move_tail.offset == 44;
axiom #funAddr~inc_inflight.base == -1 && #funAddr~inc_inflight.offset == 45;
axiom #funAddr~proc_dointvec.base == -1 && #funAddr~proc_dointvec.offset == 46;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~uprobe_task_state~UTASK_RUNNING == 0;
axiom ~uprobe_task_state~UTASK_SSTEP == 1;
axiom ~uprobe_task_state~UTASK_SSTEP_ACK == 2;
axiom ~uprobe_task_state~UTASK_SSTEP_TRAPPED == 3;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~ldv_17650~SS_FREE == 0;
axiom ~ldv_17650~SS_UNCONNECTED == 1;
axiom ~ldv_17650~SS_CONNECTING == 2;
axiom ~ldv_17650~SS_CONNECTED == 3;
axiom ~ldv_17650~SS_DISCONNECTING == 4;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_RESUME_LATENCY == 1;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY_TOLERANCE == 2;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS == 3;
axiom ~pm_qos_type~PM_QOS_UNITIALIZED == 0;
axiom ~pm_qos_type~PM_QOS_MAX == 1;
axiom ~pm_qos_type~PM_QOS_MIN == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE == 0;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE == 1;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ON == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_OFF == 3;
axiom ~netdev_tx~__NETDEV_TX_MIN == -2147483648;
axiom ~netdev_tx~NETDEV_TX_OK == 0;
axiom ~netdev_tx~NETDEV_TX_BUSY == 16;
axiom ~netdev_tx~NETDEV_TX_LOCKED == 32;
axiom ~rx_handler_result~RX_HANDLER_CONSUMED == 0;
axiom ~rx_handler_result~RX_HANDLER_ANOTHER == 1;
axiom ~rx_handler_result~RX_HANDLER_EXACT == 2;
axiom ~rx_handler_result~RX_HANDLER_PASS == 3;
axiom ~sock_flags~SOCK_DEAD == 0;
axiom ~sock_flags~SOCK_DONE == 1;
axiom ~sock_flags~SOCK_URGINLINE == 2;
axiom ~sock_flags~SOCK_KEEPOPEN == 3;
axiom ~sock_flags~SOCK_LINGER == 4;
axiom ~sock_flags~SOCK_DESTROY == 5;
axiom ~sock_flags~SOCK_BROADCAST == 6;
axiom ~sock_flags~SOCK_TIMESTAMP == 7;
axiom ~sock_flags~SOCK_ZAPPED == 8;
axiom ~sock_flags~SOCK_USE_WRITE_QUEUE == 9;
axiom ~sock_flags~SOCK_DBG == 10;
axiom ~sock_flags~SOCK_RCVTSTAMP == 11;
axiom ~sock_flags~SOCK_RCVTSTAMPNS == 12;
axiom ~sock_flags~SOCK_LOCALROUTE == 13;
axiom ~sock_flags~SOCK_QUEUE_SHRUNK == 14;
axiom ~sock_flags~SOCK_MEMALLOC == 15;
axiom ~sock_flags~SOCK_TIMESTAMPING_TX_HARDWARE == 16;
axiom ~sock_flags~SOCK_TIMESTAMPING_TX_SOFTWARE == 17;
axiom ~sock_flags~SOCK_TIMESTAMPING_RX_HARDWARE == 18;
axiom ~sock_flags~SOCK_TIMESTAMPING_RX_SOFTWARE == 19;
axiom ~sock_flags~SOCK_TIMESTAMPING_SOFTWARE == 20;
axiom ~sock_flags~SOCK_TIMESTAMPING_RAW_HARDWARE == 21;
axiom ~sock_flags~SOCK_TIMESTAMPING_SYS_HARDWARE == 22;
axiom ~sock_flags~SOCK_FASYNC == 23;
axiom ~sock_flags~SOCK_RXQ_OVFL == 24;
axiom ~sock_flags~SOCK_ZEROCOPY == 25;
axiom ~sock_flags~SOCK_WIFI_STATUS == 26;
axiom ~sock_flags~SOCK_NOFCS == 27;
axiom ~sock_flags~SOCK_FILTER_LOCKED == 28;
axiom ~sock_flags~SOCK_SELECT_ERR_QUEUE == 29;
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseComplement" } ~bitwiseComplement(in0 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseXor" } ~bitwiseXor(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
var ~ldv_state_variable_6 : int;

var ~ldv_state_variable_0 : int;

var ~ldv_state_variable_5 : int;

var ~ldv_state_variable_2 : int;

var ~ldv_state_variable_3 : int;

var ~ref_cnt : int;

var ~unix_seq_ops_group2.base : int, ~unix_seq_ops_group2.offset : int;

var ~ldv_state_variable_1 : int;

var ~ldv_state_variable_7 : int;

var ~ldv_state_variable_4 : int;

var ~unix_tot_inflight : int;

var ~ldv_retval_0 : int;

var ~ldv_retval_1.base : int, ~ldv_retval_1.offset : int;

var ~ldv_retval_3 : int;

var ~ldv_retval_2.base : int, ~ldv_retval_2.offset : int;

var ~ldv_spin : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~#rcu_lock_map.base : int, ~#rcu_lock_map.offset : int;

var ~unix_seqpacket_ops_group2.base : int, ~unix_seqpacket_ops_group2.offset : int;

var ~unix_stream_ops_group3.base : int, ~unix_stream_ops_group3.offset : int;

var ~unix_seqpacket_ops_group5.base : int, ~unix_seqpacket_ops_group5.offset : int;

var ~unix_dgram_ops_group5.base : int, ~unix_dgram_ops_group5.offset : int;

var ~unix_seqpacket_ops_group4.base : int, ~unix_seqpacket_ops_group4.offset : int;

var ~unix_stream_ops_group1.base : int, ~unix_stream_ops_group1.offset : int;

var ~unix_stream_ops_group4.base : int, ~unix_stream_ops_group4.offset : int;

var ~unix_seq_fops_group2.base : int, ~unix_seq_fops_group2.offset : int;

var ~unix_seqpacket_ops_group1.base : int, ~unix_seqpacket_ops_group1.offset : int;

var ~unix_dgram_ops_group3.base : int, ~unix_dgram_ops_group3.offset : int;

var ~unix_dgram_ops_group0.base : int, ~unix_dgram_ops_group0.offset : int;

var ~unix_stream_ops_group0.base : int, ~unix_stream_ops_group0.offset : int;

var ~unix_stream_ops_group5.base : int, ~unix_stream_ops_group5.offset : int;

var ~unix_seqpacket_ops_group0.base : int, ~unix_seqpacket_ops_group0.offset : int;

var ~unix_net_ops_group0.base : int, ~unix_net_ops_group0.offset : int;

var ~unix_seqpacket_ops_group3.base : int, ~unix_seqpacket_ops_group3.offset : int;

var ~unix_dgram_ops_group4.base : int, ~unix_dgram_ops_group4.offset : int;

var ~unix_seq_ops_group1.base : int, ~unix_seq_ops_group1.offset : int;

var ~unix_seq_ops_group3.base : int, ~unix_seq_ops_group3.offset : int;

var ~unix_dgram_ops_group1.base : int, ~unix_dgram_ops_group1.offset : int;

var ~unix_seq_fops_group1.base : int, ~unix_seq_fops_group1.offset : int;

var ~unix_dgram_ops_group2.base : int, ~unix_dgram_ops_group2.offset : int;

var ~unix_stream_ops_group2.base : int, ~unix_stream_ops_group2.offset : int;

var ~#unix_socket_table.base : int, ~#unix_socket_table.offset : int;

var ~#system_freezing_cnt.base : int, ~#system_freezing_cnt.offset : int;

var ~#unix_table_lock.base : int, ~#unix_table_lock.offset : int;

var ~#unix_nr_socks.base : int, ~#unix_nr_socks.offset : int;

var ~#unix_stream_ops.base : int, ~#unix_stream_ops.offset : int;

var ~#unix_dgram_ops.base : int, ~#unix_dgram_ops.offset : int;

var ~#unix_seqpacket_ops.base : int, ~#unix_seqpacket_ops.offset : int;

var ~#unix_proto.base : int, ~#unix_proto.offset : int;

var ~#af_unix_sk_receive_queue_lock_key.base : int, ~#af_unix_sk_receive_queue_lock_key.offset : int;

var ~#unix_seq_ops.base : int, ~#unix_seq_ops.offset : int;

var ~#unix_seq_fops.base : int, ~#unix_seq_fops.offset : int;

var ~#unix_family_ops.base : int, ~#unix_family_ops.offset : int;

var ~#unix_net_ops.base : int, ~#unix_net_ops.offset : int;

var ~#gc_inflight_list.base : int, ~#gc_inflight_list.offset : int;

var ~#gc_candidates.base : int, ~#gc_candidates.offset : int;

var ~#unix_gc_lock.base : int, ~#unix_gc_lock.offset : int;

var ~#unix_gc_wait.base : int, ~#unix_gc_wait.offset : int;

var ~gc_in_progress : ~bool;

var ~#init_user_ns.base : int, ~#init_user_ns.offset : int;

var ~#init_net.base : int, ~#init_net.offset : int;

var ~#unix_table.base : int, ~#unix_table.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_int : [int,int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

implementation ldv_seq_operations_4() returns (){
    var #t~ret1340.base : int, #t~ret1340.offset : int;
    var ~tmp~1287.base : int, ~tmp~1287.offset : int;

  loc0:
    havoc ~tmp~1287.base, ~tmp~1287.offset;
    call #t~ret1340.base, #t~ret1340.offset := ldv_zalloc(264);
    ~tmp~1287.base, ~tmp~1287.offset := #t~ret1340.base, #t~ret1340.offset;
    havoc #t~ret1340.base, #t~ret1340.offset;
    ~unix_seq_ops_group1.base, ~unix_seq_ops_group1.offset := ~tmp~1287.base, ~tmp~1287.offset;
    assume true;
    return;
}

procedure ldv_seq_operations_4() returns ();
modifies ~unix_seq_ops_group1.base, ~unix_seq_ops_group1.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ldv_spin_lock_1(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc1:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    call _raw_spin_lock(~lock.base, ~lock.offset + 0 + 0);
    assume true;
    return;
}

procedure ldv_spin_lock_1(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ;

implementation ldv_file_operations_3() returns (){
    var #t~ret1320.base : int, #t~ret1320.offset : int;
    var #t~ret1321.base : int, #t~ret1321.offset : int;
    var ~tmp~1279.base : int, ~tmp~1279.offset : int;
    var ~tmp___0~1279.base : int, ~tmp___0~1279.offset : int;

  loc2:
    havoc ~tmp~1279.base, ~tmp~1279.offset;
    havoc ~tmp___0~1279.base, ~tmp___0~1279.offset;
    call #t~ret1320.base, #t~ret1320.offset := ldv_zalloc(1032);
    ~tmp~1279.base, ~tmp~1279.offset := #t~ret1320.base, #t~ret1320.offset;
    havoc #t~ret1320.base, #t~ret1320.offset;
    ~unix_seq_fops_group1.base, ~unix_seq_fops_group1.offset := ~tmp~1279.base, ~tmp~1279.offset;
    call #t~ret1321.base, #t~ret1321.offset := ldv_zalloc(512);
    ~tmp___0~1279.base, ~tmp___0~1279.offset := #t~ret1321.base, #t~ret1321.offset;
    havoc #t~ret1321.base, #t~ret1321.offset;
    ~unix_seq_fops_group2.base, ~unix_seq_fops_group2.offset := ~tmp___0~1279.base, ~tmp___0~1279.offset;
    assume true;
    return;
}

procedure ldv_file_operations_3() returns ();
modifies ~unix_seq_fops_group1.base, ~unix_seq_fops_group1.offset, ~unix_seq_fops_group2.base, ~unix_seq_fops_group2.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation main() returns (#res : int){
    var #t~nondet1341 : int;
    var #t~nondet1342 : int;
    var #t~nondet1343 : int;
    var #t~ret1344.base : int, #t~ret1344.offset : int;
    var #t~nondet1345 : int;
    var #t~nondet1346 : int;
    var #t~nondet1347 : int;
    var #t~nondet1348 : int;
    var #t~nondet1349 : int;
    var #t~nondet1350 : int;
    var #t~ret1351.base : int, #t~ret1351.offset : int;
    var #t~nondet1352 : int;
    var #t~nondet1353 : int;
    var #t~nondet1354 : int;
    var #t~nondet1355 : int;
    var #t~ret1356.base : int, #t~ret1356.offset : int;
    var #t~nondet1357 : int;
    var #t~nondet1358 : int;
    var #t~nondet1359 : int;
    var #t~nondet1360 : int;
    var #t~ret1361.base : int, #t~ret1361.offset : int;
    var #t~ret1362.base : int, #t~ret1362.offset : int;
    var #t~ret1363.base : int, #t~ret1363.offset : int;
    var #t~ret1364.base : int, #t~ret1364.offset : int;
    var #t~nondet1365 : int;
    var #t~nondet1366 : int;
    var #t~ret1367.base : int, #t~ret1367.offset : int;
    var #t~nondet1368 : int;
    var #t~nondet1369 : int;
    var #t~nondet1370 : int;
    var #t~ret1371.base : int, #t~ret1371.offset : int;
    var #t~nondet1372 : int;
    var #t~ret1373.base : int, #t~ret1373.offset : int;
    var #t~nondet1374 : int;
    var #t~nondet1375 : int;
    var #t~nondet1376 : int;
    var #t~nondet1377 : int;
    var #t~ret1378.base : int, #t~ret1378.offset : int;
    var #t~nondet1379 : int;
    var #t~nondet1380 : int;
    var #t~ret1381.base : int, #t~ret1381.offset : int;
    var #t~nondet1382 : int;
    var #t~ret1383.base : int, #t~ret1383.offset : int;
    var #t~nondet1384 : int;
    var #t~nondet1385 : int;
    var #t~nondet1386 : int;
    var #t~ret1387.base : int, #t~ret1387.offset : int;
    var #t~nondet1388 : int;
    var #t~nondet1389 : int;
    var #t~nondet1390 : int;
    var #t~nondet1391 : int;
    var #t~nondet1392 : int;
    var #t~nondet1393 : int;
    var #t~ret1394.base : int, #t~ret1394.offset : int;
    var #t~nondet1395 : int;
    var #t~ret1396.base : int, #t~ret1396.offset : int;
    var #t~ret1397.base : int, #t~ret1397.offset : int;
    var #t~nondet1398 : int;
    var #t~ret1399.base : int, #t~ret1399.offset : int;
    var #t~nondet1400 : int;
    var #t~nondet1401 : int;
    var #t~nondet1402 : int;
    var #t~nondet1403 : int;
    var #t~nondet1404 : int;
    var #t~nondet1405 : int;
    var #t~ret1406.base : int, #t~ret1406.offset : int;
    var #t~ret1407.base : int, #t~ret1407.offset : int;
    var #t~ret1408.base : int, #t~ret1408.offset : int;
    var #t~ret1409.base : int, #t~ret1409.offset : int;
    var #t~nondet1410 : int;
    var #t~nondet1411 : int;
    var #t~ret1412.base : int, #t~ret1412.offset : int;
    var #t~nondet1413 : int;
    var #t~nondet1414 : int;
    var #t~ret1415.base : int, #t~ret1415.offset : int;
    var #t~ret1416.base : int, #t~ret1416.offset : int;
    var #t~nondet1417 : int;
    var #t~nondet1418 : int;
    var #t~nondet1419 : int;
    var #t~nondet1420 : int;
    var #t~nondet1421 : int;
    var #t~nondet1422 : int;
    var #t~nondet1423 : int;
    var #t~ret1424.base : int, #t~ret1424.offset : int;
    var #t~nondet1425 : int;
    var #t~nondet1426 : int;
    var #t~nondet1427 : int;
    var #t~nondet1428 : int;
    var #t~nondet1429 : int;
    var #t~nondet1430 : int;
    var #t~ret1431.base : int, #t~ret1431.offset : int;
    var #t~nondet1432 : int;
    var #t~ret1433.base : int, #t~ret1433.offset : int;
    var #t~nondet1434 : int;
    var #t~nondet1435 : int;
    var #t~nondet1436 : int;
    var #t~nondet1437 : int;
    var #t~switch1438 : bool;
    var #t~nondet1439 : int;
    var #t~switch1440 : bool;
    var #t~ret1441 : int;
    var #t~ret1442 : int;
    var #t~ret1443 : int;
    var #t~ret1444 : int;
    var #t~ret1445 : int;
    var #t~ret1446 : int;
    var #t~ret1447 : int;
    var #t~ret1448 : int;
    var #t~ret1449 : int;
    var #t~ret1450 : int;
    var #t~ret1451 : int;
    var #t~ret1452 : int;
    var #t~ret1453 : int;
    var #t~ret1454 : int;
    var #t~ret1455 : int;
    var #t~ret1456 : int;
    var #t~ret1457 : int;
    var #t~nondet1458 : int;
    var #t~switch1459 : bool;
    var #t~ret1460 : int;
    var #t~ret1461 : int;
    var #t~ret1462 : int;
    var #t~ret1463 : ~loff_t;
    var #t~nondet1464 : int;
    var #t~switch1465 : bool;
    var #t~ret1466 : int;
    var #t~ret1467 : int;
    var #t~ret1468 : int;
    var #t~ret1469 : int;
    var #t~ret1470 : int;
    var #t~ret1471 : int;
    var #t~ret1472 : int;
    var #t~ret1473 : int;
    var #t~ret1474 : int;
    var #t~ret1475 : int;
    var #t~ret1476 : int;
    var #t~ret1477 : int;
    var #t~ret1478 : int;
    var #t~ret1479 : int;
    var #t~ret1480 : int;
    var #t~ret1481 : int;
    var #t~ret1482 : int;
    var #t~nondet1483 : int;
    var #t~switch1484 : bool;
    var #t~ret1485 : int;
    var #t~nondet1486 : int;
    var #t~switch1487 : bool;
    var #t~ret1488 : int;
    var #t~nondet1489 : int;
    var #t~switch1490 : bool;
    var #t~ret1491.base : int, #t~ret1491.offset : int;
    var #t~ret1492 : int;
    var #t~ret1493.base : int, #t~ret1493.offset : int;
    var #t~nondet1494 : int;
    var #t~switch1495 : bool;
    var #t~ret1496 : int;
    var #t~nondet1497 : int;
    var #t~switch1498 : bool;
    var #t~ret1499 : int;
    var #t~ret1500 : int;
    var #t~ret1501 : int;
    var #t~ret1502 : int;
    var #t~ret1503 : int;
    var #t~ret1504 : int;
    var #t~ret1505 : int;
    var #t~ret1506 : int;
    var #t~ret1507 : int;
    var #t~ret1508 : int;
    var #t~ret1509 : int;
    var #t~ret1510 : int;
    var #t~ret1511 : int;
    var #t~ret1512 : int;
    var #t~ret1513 : int;
    var #t~ret1514 : int;
    var #t~ret1515 : int;
    var ~ldvarg18~1289 : int;
    var ~tmp~1289 : int;
    var ~ldvarg11~1289 : int;
    var ~tmp___0~1289 : int;
    var ~ldvarg20~1289 : int;
    var ~tmp___1~1289 : int;
    var ~ldvarg7~1289.base : int, ~ldvarg7~1289.offset : int;
    var ~tmp___2~1289.base : int, ~tmp___2~1289.offset : int;
    var ~ldvarg23~1289 : int;
    var ~tmp___3~1289 : int;
    var ~ldvarg3~1289 : int;
    var ~tmp___4~1289 : int;
    var ~ldvarg12~1289 : int;
    var ~tmp___5~1289 : int;
    var ~ldvarg8~1289 : int;
    var ~tmp___6~1289 : int;
    var ~ldvarg1~1289 : int;
    var ~tmp___7~1289 : int;
    var ~ldvarg13~1289 : int;
    var ~tmp___8~1289 : int;
    var ~ldvarg10~1289.base : int, ~ldvarg10~1289.offset : int;
    var ~tmp___9~1289.base : int, ~tmp___9~1289.offset : int;
    var ~ldvarg9~1289 : int;
    var ~tmp___10~1289 : int;
    var ~ldvarg24~1289 : int;
    var ~tmp___11~1289 : int;
    var ~ldvarg27~1289 : int;
    var ~tmp___12~1289 : int;
    var ~ldvarg26~1289 : int;
    var ~tmp___13~1289 : int;
    var ~ldvarg0~1289.base : int, ~ldvarg0~1289.offset : int;
    var ~tmp___14~1289.base : int, ~tmp___14~1289.offset : int;
    var ~ldvarg5~1289 : int;
    var ~tmp___15~1289 : int;
    var ~ldvarg16~1289 : int;
    var ~tmp___16~1289 : int;
    var ~ldvarg6~1289 : int;
    var ~tmp___17~1289 : int;
    var ~ldvarg15~1289 : int;
    var ~tmp___18~1289 : int;
    var ~ldvarg21~1289.base : int, ~ldvarg21~1289.offset : int;
    var ~tmp___19~1289.base : int, ~tmp___19~1289.offset : int;
    var ~ldvarg25~1289.base : int, ~ldvarg25~1289.offset : int;
    var ~tmp___20~1289.base : int, ~tmp___20~1289.offset : int;
    var ~ldvarg17~1289.base : int, ~ldvarg17~1289.offset : int;
    var ~tmp___21~1289.base : int, ~tmp___21~1289.offset : int;
    var ~ldvarg4~1289.base : int, ~ldvarg4~1289.offset : int;
    var ~tmp___22~1289.base : int, ~tmp___22~1289.offset : int;
    var ~ldvarg14~1289 : int;
    var ~tmp___23~1289 : int;
    var ~ldvarg22~1289 : int;
    var ~tmp___24~1289 : int;
    var ~ldvarg19~1289.base : int, ~ldvarg19~1289.offset : int;
    var ~tmp___25~1289.base : int, ~tmp___25~1289.offset : int;
    var ~ldvarg28~1289 : int;
    var ~tmp___26~1289 : int;
    var ~ldvarg2~1289 : int;
    var ~tmp___27~1289 : int;
    var ~ldvarg32~1289 : int;
    var ~tmp___28~1289 : int;
    var ~ldvarg31~1289.base : int, ~ldvarg31~1289.offset : int;
    var ~tmp___29~1289.base : int, ~tmp___29~1289.offset : int;
    var ~ldvarg29~1289 : int;
    var ~tmp___30~1289 : int;
    var ~ldvarg33~1289.base : int, ~ldvarg33~1289.offset : int;
    var ~tmp___31~1289.base : int, ~tmp___31~1289.offset : int;
    var ~ldvarg30~1289 : ~loff_t;
    var ~tmp___32~1289 : ~loff_t;
    var ~ldvarg39~1289 : int;
    var ~tmp___33~1289 : int;
    var ~ldvarg51~1289 : int;
    var ~tmp___34~1289 : int;
    var ~ldvarg60~1289 : int;
    var ~tmp___35~1289 : int;
    var ~ldvarg41~1289.base : int, ~ldvarg41~1289.offset : int;
    var ~tmp___36~1289.base : int, ~tmp___36~1289.offset : int;
    var ~ldvarg43~1289 : int;
    var ~tmp___37~1289 : int;
    var ~ldvarg42~1289 : int;
    var ~tmp___38~1289 : int;
    var ~ldvarg59~1289.base : int, ~ldvarg59~1289.offset : int;
    var ~tmp___39~1289.base : int, ~tmp___39~1289.offset : int;
    var ~ldvarg56~1289 : int;
    var ~tmp___40~1289 : int;
    var ~ldvarg49~1289.base : int, ~ldvarg49~1289.offset : int;
    var ~tmp___41~1289.base : int, ~tmp___41~1289.offset : int;
    var ~ldvarg62~1289 : int;
    var ~tmp___42~1289 : int;
    var ~ldvarg50~1289 : int;
    var ~tmp___43~1289 : int;
    var ~ldvarg46~1289 : int;
    var ~tmp___44~1289 : int;
    var ~ldvarg57~1289.base : int, ~ldvarg57~1289.offset : int;
    var ~tmp___45~1289.base : int, ~tmp___45~1289.offset : int;
    var ~ldvarg58~1289 : int;
    var ~tmp___46~1289 : int;
    var ~ldvarg37~1289 : int;
    var ~tmp___47~1289 : int;
    var ~ldvarg53~1289 : int;
    var ~tmp___48~1289 : int;
    var ~ldvarg55~1289 : int;
    var ~tmp___49~1289 : int;
    var ~ldvarg36~1289 : int;
    var ~tmp___50~1289 : int;
    var ~ldvarg40~1289 : int;
    var ~tmp___51~1289 : int;
    var ~ldvarg44~1289.base : int, ~ldvarg44~1289.offset : int;
    var ~tmp___52~1289.base : int, ~tmp___52~1289.offset : int;
    var ~ldvarg45~1289 : int;
    var ~tmp___53~1289 : int;
    var ~ldvarg35~1289.base : int, ~ldvarg35~1289.offset : int;
    var ~tmp___54~1289.base : int, ~tmp___54~1289.offset : int;
    var ~ldvarg38~1289.base : int, ~ldvarg38~1289.offset : int;
    var ~tmp___55~1289.base : int, ~tmp___55~1289.offset : int;
    var ~ldvarg48~1289 : int;
    var ~tmp___56~1289 : int;
    var ~ldvarg54~1289.base : int, ~ldvarg54~1289.offset : int;
    var ~tmp___57~1289.base : int, ~tmp___57~1289.offset : int;
    var ~ldvarg61~1289 : int;
    var ~tmp___58~1289 : int;
    var ~ldvarg52~1289 : int;
    var ~tmp___59~1289 : int;
    var ~ldvarg34~1289 : int;
    var ~tmp___60~1289 : int;
    var ~ldvarg47~1289 : int;
    var ~tmp___61~1289 : int;
    var ~ldvarg65~1289 : int;
    var ~tmp___62~1289 : int;
    var ~ldvarg63~1289 : int;
    var ~tmp___63~1289 : int;
    var ~ldvarg66~1289.base : int, ~ldvarg66~1289.offset : int;
    var ~tmp___64~1289.base : int, ~tmp___64~1289.offset : int;
    var ~ldvarg64~1289.base : int, ~ldvarg64~1289.offset : int;
    var ~tmp___65~1289.base : int, ~tmp___65~1289.offset : int;
    var ~ldvarg77~1289.base : int, ~ldvarg77~1289.offset : int;
    var ~tmp___66~1289.base : int, ~tmp___66~1289.offset : int;
    var ~ldvarg84~1289.base : int, ~ldvarg84~1289.offset : int;
    var ~tmp___67~1289.base : int, ~tmp___67~1289.offset : int;
    var ~ldvarg94~1289 : int;
    var ~tmp___68~1289 : int;
    var ~ldvarg91~1289 : int;
    var ~tmp___69~1289 : int;
    var ~ldvarg67~1289.base : int, ~ldvarg67~1289.offset : int;
    var ~tmp___70~1289.base : int, ~tmp___70~1289.offset : int;
    var ~ldvarg80~1289 : int;
    var ~tmp___71~1289 : int;
    var ~ldvarg87~1289 : int;
    var ~tmp___72~1289 : int;
    var ~ldvarg71~1289.base : int, ~ldvarg71~1289.offset : int;
    var ~tmp___73~1289.base : int, ~tmp___73~1289.offset : int;
    var ~ldvarg86~1289.base : int, ~ldvarg86~1289.offset : int;
    var ~tmp___74~1289.base : int, ~tmp___74~1289.offset : int;
    var ~ldvarg72~1289 : int;
    var ~tmp___75~1289 : int;
    var ~ldvarg79~1289 : int;
    var ~tmp___76~1289 : int;
    var ~ldvarg83~1289 : int;
    var ~tmp___77~1289 : int;
    var ~ldvarg81~1289 : int;
    var ~tmp___78~1289 : int;
    var ~ldvarg95~1289 : int;
    var ~tmp___79~1289 : int;
    var ~ldvarg85~1289 : int;
    var ~tmp___80~1289 : int;
    var ~ldvarg73~1289 : int;
    var ~tmp___81~1289 : int;
    var ~ldvarg88~1289.base : int, ~ldvarg88~1289.offset : int;
    var ~tmp___82~1289.base : int, ~tmp___82~1289.offset : int;
    var ~ldvarg70~1289 : int;
    var ~tmp___83~1289 : int;
    var ~ldvarg78~1289 : int;
    var ~tmp___84~1289 : int;
    var ~ldvarg90~1289 : int;
    var ~tmp___85~1289 : int;
    var ~ldvarg68~1289 : int;
    var ~tmp___86~1289 : int;
    var ~ldvarg69~1289 : int;
    var ~tmp___87~1289 : int;
    var ~ldvarg93~1289 : int;
    var ~tmp___88~1289 : int;
    var ~ldvarg92~1289.base : int, ~ldvarg92~1289.offset : int;
    var ~tmp___89~1289.base : int, ~tmp___89~1289.offset : int;
    var ~ldvarg89~1289 : int;
    var ~tmp___90~1289 : int;
    var ~ldvarg74~1289.base : int, ~ldvarg74~1289.offset : int;
    var ~tmp___91~1289.base : int, ~tmp___91~1289.offset : int;
    var ~ldvarg76~1289 : int;
    var ~tmp___92~1289 : int;
    var ~ldvarg82~1289 : int;
    var ~tmp___93~1289 : int;
    var ~ldvarg75~1289 : int;
    var ~tmp___94~1289 : int;
    var ~tmp___95~1289 : int;
    var ~tmp___96~1289 : int;
    var ~tmp___97~1289 : int;
    var ~tmp___98~1289 : int;
    var ~tmp___99~1289 : int;
    var ~tmp___100~1289 : int;
    var ~tmp___101~1289 : int;
    var ~tmp___102~1289 : int;
    var ~tmp___103~1289 : int;

  loc3:
    havoc ~ldvarg18~1289;
    havoc ~tmp~1289;
    havoc ~ldvarg11~1289;
    havoc ~tmp___0~1289;
    havoc ~ldvarg20~1289;
    havoc ~tmp___1~1289;
    havoc ~ldvarg7~1289.base, ~ldvarg7~1289.offset;
    havoc ~tmp___2~1289.base, ~tmp___2~1289.offset;
    havoc ~ldvarg23~1289;
    havoc ~tmp___3~1289;
    havoc ~ldvarg3~1289;
    havoc ~tmp___4~1289;
    havoc ~ldvarg12~1289;
    havoc ~tmp___5~1289;
    havoc ~ldvarg8~1289;
    havoc ~tmp___6~1289;
    havoc ~ldvarg1~1289;
    havoc ~tmp___7~1289;
    havoc ~ldvarg13~1289;
    havoc ~tmp___8~1289;
    havoc ~ldvarg10~1289.base, ~ldvarg10~1289.offset;
    havoc ~tmp___9~1289.base, ~tmp___9~1289.offset;
    havoc ~ldvarg9~1289;
    havoc ~tmp___10~1289;
    havoc ~ldvarg24~1289;
    havoc ~tmp___11~1289;
    havoc ~ldvarg27~1289;
    havoc ~tmp___12~1289;
    havoc ~ldvarg26~1289;
    havoc ~tmp___13~1289;
    havoc ~ldvarg0~1289.base, ~ldvarg0~1289.offset;
    havoc ~tmp___14~1289.base, ~tmp___14~1289.offset;
    havoc ~ldvarg5~1289;
    havoc ~tmp___15~1289;
    havoc ~ldvarg16~1289;
    havoc ~tmp___16~1289;
    havoc ~ldvarg6~1289;
    havoc ~tmp___17~1289;
    havoc ~ldvarg15~1289;
    havoc ~tmp___18~1289;
    havoc ~ldvarg21~1289.base, ~ldvarg21~1289.offset;
    havoc ~tmp___19~1289.base, ~tmp___19~1289.offset;
    havoc ~ldvarg25~1289.base, ~ldvarg25~1289.offset;
    havoc ~tmp___20~1289.base, ~tmp___20~1289.offset;
    havoc ~ldvarg17~1289.base, ~ldvarg17~1289.offset;
    havoc ~tmp___21~1289.base, ~tmp___21~1289.offset;
    havoc ~ldvarg4~1289.base, ~ldvarg4~1289.offset;
    havoc ~tmp___22~1289.base, ~tmp___22~1289.offset;
    havoc ~ldvarg14~1289;
    havoc ~tmp___23~1289;
    havoc ~ldvarg22~1289;
    havoc ~tmp___24~1289;
    havoc ~ldvarg19~1289.base, ~ldvarg19~1289.offset;
    havoc ~tmp___25~1289.base, ~tmp___25~1289.offset;
    havoc ~ldvarg28~1289;
    havoc ~tmp___26~1289;
    havoc ~ldvarg2~1289;
    havoc ~tmp___27~1289;
    havoc ~ldvarg32~1289;
    havoc ~tmp___28~1289;
    havoc ~ldvarg31~1289.base, ~ldvarg31~1289.offset;
    havoc ~tmp___29~1289.base, ~tmp___29~1289.offset;
    havoc ~ldvarg29~1289;
    havoc ~tmp___30~1289;
    havoc ~ldvarg33~1289.base, ~ldvarg33~1289.offset;
    havoc ~tmp___31~1289.base, ~tmp___31~1289.offset;
    havoc ~ldvarg30~1289;
    havoc ~tmp___32~1289;
    havoc ~ldvarg39~1289;
    havoc ~tmp___33~1289;
    havoc ~ldvarg51~1289;
    havoc ~tmp___34~1289;
    havoc ~ldvarg60~1289;
    havoc ~tmp___35~1289;
    havoc ~ldvarg41~1289.base, ~ldvarg41~1289.offset;
    havoc ~tmp___36~1289.base, ~tmp___36~1289.offset;
    havoc ~ldvarg43~1289;
    havoc ~tmp___37~1289;
    havoc ~ldvarg42~1289;
    havoc ~tmp___38~1289;
    havoc ~ldvarg59~1289.base, ~ldvarg59~1289.offset;
    havoc ~tmp___39~1289.base, ~tmp___39~1289.offset;
    havoc ~ldvarg56~1289;
    havoc ~tmp___40~1289;
    havoc ~ldvarg49~1289.base, ~ldvarg49~1289.offset;
    havoc ~tmp___41~1289.base, ~tmp___41~1289.offset;
    havoc ~ldvarg62~1289;
    havoc ~tmp___42~1289;
    havoc ~ldvarg50~1289;
    havoc ~tmp___43~1289;
    havoc ~ldvarg46~1289;
    havoc ~tmp___44~1289;
    havoc ~ldvarg57~1289.base, ~ldvarg57~1289.offset;
    havoc ~tmp___45~1289.base, ~tmp___45~1289.offset;
    havoc ~ldvarg58~1289;
    havoc ~tmp___46~1289;
    havoc ~ldvarg37~1289;
    havoc ~tmp___47~1289;
    havoc ~ldvarg53~1289;
    havoc ~tmp___48~1289;
    havoc ~ldvarg55~1289;
    havoc ~tmp___49~1289;
    havoc ~ldvarg36~1289;
    havoc ~tmp___50~1289;
    havoc ~ldvarg40~1289;
    havoc ~tmp___51~1289;
    havoc ~ldvarg44~1289.base, ~ldvarg44~1289.offset;
    havoc ~tmp___52~1289.base, ~tmp___52~1289.offset;
    havoc ~ldvarg45~1289;
    havoc ~tmp___53~1289;
    havoc ~ldvarg35~1289.base, ~ldvarg35~1289.offset;
    havoc ~tmp___54~1289.base, ~tmp___54~1289.offset;
    havoc ~ldvarg38~1289.base, ~ldvarg38~1289.offset;
    havoc ~tmp___55~1289.base, ~tmp___55~1289.offset;
    havoc ~ldvarg48~1289;
    havoc ~tmp___56~1289;
    havoc ~ldvarg54~1289.base, ~ldvarg54~1289.offset;
    havoc ~tmp___57~1289.base, ~tmp___57~1289.offset;
    havoc ~ldvarg61~1289;
    havoc ~tmp___58~1289;
    havoc ~ldvarg52~1289;
    havoc ~tmp___59~1289;
    havoc ~ldvarg34~1289;
    havoc ~tmp___60~1289;
    havoc ~ldvarg47~1289;
    havoc ~tmp___61~1289;
    havoc ~ldvarg65~1289;
    havoc ~tmp___62~1289;
    havoc ~ldvarg63~1289;
    havoc ~tmp___63~1289;
    havoc ~ldvarg66~1289.base, ~ldvarg66~1289.offset;
    havoc ~tmp___64~1289.base, ~tmp___64~1289.offset;
    havoc ~ldvarg64~1289.base, ~ldvarg64~1289.offset;
    havoc ~tmp___65~1289.base, ~tmp___65~1289.offset;
    havoc ~ldvarg77~1289.base, ~ldvarg77~1289.offset;
    havoc ~tmp___66~1289.base, ~tmp___66~1289.offset;
    havoc ~ldvarg84~1289.base, ~ldvarg84~1289.offset;
    havoc ~tmp___67~1289.base, ~tmp___67~1289.offset;
    havoc ~ldvarg94~1289;
    havoc ~tmp___68~1289;
    havoc ~ldvarg91~1289;
    havoc ~tmp___69~1289;
    havoc ~ldvarg67~1289.base, ~ldvarg67~1289.offset;
    havoc ~tmp___70~1289.base, ~tmp___70~1289.offset;
    havoc ~ldvarg80~1289;
    havoc ~tmp___71~1289;
    havoc ~ldvarg87~1289;
    havoc ~tmp___72~1289;
    havoc ~ldvarg71~1289.base, ~ldvarg71~1289.offset;
    havoc ~tmp___73~1289.base, ~tmp___73~1289.offset;
    havoc ~ldvarg86~1289.base, ~ldvarg86~1289.offset;
    havoc ~tmp___74~1289.base, ~tmp___74~1289.offset;
    havoc ~ldvarg72~1289;
    havoc ~tmp___75~1289;
    havoc ~ldvarg79~1289;
    havoc ~tmp___76~1289;
    havoc ~ldvarg83~1289;
    havoc ~tmp___77~1289;
    havoc ~ldvarg81~1289;
    havoc ~tmp___78~1289;
    havoc ~ldvarg95~1289;
    havoc ~tmp___79~1289;
    havoc ~ldvarg85~1289;
    havoc ~tmp___80~1289;
    havoc ~ldvarg73~1289;
    havoc ~tmp___81~1289;
    havoc ~ldvarg88~1289.base, ~ldvarg88~1289.offset;
    havoc ~tmp___82~1289.base, ~tmp___82~1289.offset;
    havoc ~ldvarg70~1289;
    havoc ~tmp___83~1289;
    havoc ~ldvarg78~1289;
    havoc ~tmp___84~1289;
    havoc ~ldvarg90~1289;
    havoc ~tmp___85~1289;
    havoc ~ldvarg68~1289;
    havoc ~tmp___86~1289;
    havoc ~ldvarg69~1289;
    havoc ~tmp___87~1289;
    havoc ~ldvarg93~1289;
    havoc ~tmp___88~1289;
    havoc ~ldvarg92~1289.base, ~ldvarg92~1289.offset;
    havoc ~tmp___89~1289.base, ~tmp___89~1289.offset;
    havoc ~ldvarg89~1289;
    havoc ~tmp___90~1289;
    havoc ~ldvarg74~1289.base, ~ldvarg74~1289.offset;
    havoc ~tmp___91~1289.base, ~tmp___91~1289.offset;
    havoc ~ldvarg76~1289;
    havoc ~tmp___92~1289;
    havoc ~ldvarg82~1289;
    havoc ~tmp___93~1289;
    havoc ~ldvarg75~1289;
    havoc ~tmp___94~1289;
    havoc ~tmp___95~1289;
    havoc ~tmp___96~1289;
    havoc ~tmp___97~1289;
    havoc ~tmp___98~1289;
    havoc ~tmp___99~1289;
    havoc ~tmp___100~1289;
    havoc ~tmp___101~1289;
    havoc ~tmp___102~1289;
    havoc ~tmp___103~1289;
    assume -2147483648 <= #t~nondet1341 && #t~nondet1341 <= 2147483647;
    ~tmp~1289 := #t~nondet1341;
    havoc #t~nondet1341;
    ~ldvarg18~1289 := ~tmp~1289;
    assume -2147483648 <= #t~nondet1342 && #t~nondet1342 <= 2147483647;
    ~tmp___0~1289 := #t~nondet1342;
    havoc #t~nondet1342;
    ~ldvarg11~1289 := ~tmp___0~1289;
    assume -2147483648 <= #t~nondet1343 && #t~nondet1343 <= 2147483647;
    ~tmp___1~1289 := #t~nondet1343;
    havoc #t~nondet1343;
    ~ldvarg20~1289 := ~tmp___1~1289;
    call #t~ret1344.base, #t~ret1344.offset := ldv_zalloc(1);
    ~tmp___2~1289.base, ~tmp___2~1289.offset := #t~ret1344.base, #t~ret1344.offset;
    havoc #t~ret1344.base, #t~ret1344.offset;
    ~ldvarg7~1289.base, ~ldvarg7~1289.offset := ~tmp___2~1289.base, ~tmp___2~1289.offset;
    assume -2147483648 <= #t~nondet1345 && #t~nondet1345 <= 2147483647;
    ~tmp___3~1289 := #t~nondet1345;
    havoc #t~nondet1345;
    ~ldvarg23~1289 := ~tmp___3~1289;
    assume -2147483648 <= #t~nondet1346 && #t~nondet1346 <= 2147483647;
    ~tmp___4~1289 := #t~nondet1346;
    havoc #t~nondet1346;
    ~ldvarg3~1289 := ~tmp___4~1289;
    ~tmp___5~1289 := #t~nondet1347;
    havoc #t~nondet1347;
    ~ldvarg12~1289 := ~tmp___5~1289;
    assume -2147483648 <= #t~nondet1348 && #t~nondet1348 <= 2147483647;
    ~tmp___6~1289 := #t~nondet1348;
    havoc #t~nondet1348;
    ~ldvarg8~1289 := ~tmp___6~1289;
    assume -2147483648 <= #t~nondet1349 && #t~nondet1349 <= 2147483647;
    ~tmp___7~1289 := #t~nondet1349;
    havoc #t~nondet1349;
    ~ldvarg1~1289 := ~tmp___7~1289;
    ~tmp___8~1289 := #t~nondet1350;
    havoc #t~nondet1350;
    ~ldvarg13~1289 := ~tmp___8~1289;
    call #t~ret1351.base, #t~ret1351.offset := ldv_zalloc(4);
    ~tmp___9~1289.base, ~tmp___9~1289.offset := #t~ret1351.base, #t~ret1351.offset;
    havoc #t~ret1351.base, #t~ret1351.offset;
    ~ldvarg10~1289.base, ~ldvarg10~1289.offset := ~tmp___9~1289.base, ~tmp___9~1289.offset;
    assume -2147483648 <= #t~nondet1352 && #t~nondet1352 <= 2147483647;
    ~tmp___10~1289 := #t~nondet1352;
    havoc #t~nondet1352;
    ~ldvarg9~1289 := ~tmp___10~1289;
    ~tmp___11~1289 := #t~nondet1353;
    havoc #t~nondet1353;
    ~ldvarg24~1289 := ~tmp___11~1289;
    assume -2147483648 <= #t~nondet1354 && #t~nondet1354 <= 2147483647;
    ~tmp___12~1289 := #t~nondet1354;
    havoc #t~nondet1354;
    ~ldvarg27~1289 := ~tmp___12~1289;
    assume -2147483648 <= #t~nondet1355 && #t~nondet1355 <= 2147483647;
    ~tmp___13~1289 := #t~nondet1355;
    havoc #t~nondet1355;
    ~ldvarg26~1289 := ~tmp___13~1289;
    call #t~ret1356.base, #t~ret1356.offset := ldv_zalloc(16);
    ~tmp___14~1289.base, ~tmp___14~1289.offset := #t~ret1356.base, #t~ret1356.offset;
    havoc #t~ret1356.base, #t~ret1356.offset;
    ~ldvarg0~1289.base, ~ldvarg0~1289.offset := ~tmp___14~1289.base, ~tmp___14~1289.offset;
    assume -2147483648 <= #t~nondet1357 && #t~nondet1357 <= 2147483647;
    ~tmp___15~1289 := #t~nondet1357;
    havoc #t~nondet1357;
    ~ldvarg5~1289 := ~tmp___15~1289;
    assume -2147483648 <= #t~nondet1358 && #t~nondet1358 <= 2147483647;
    ~tmp___16~1289 := #t~nondet1358;
    havoc #t~nondet1358;
    ~ldvarg16~1289 := ~tmp___16~1289;
    assume -2147483648 <= #t~nondet1359 && #t~nondet1359 <= 2147483647;
    ~tmp___17~1289 := #t~nondet1359;
    havoc #t~nondet1359;
    ~ldvarg6~1289 := ~tmp___17~1289;
    assume -2147483648 <= #t~nondet1360 && #t~nondet1360 <= 2147483647;
    ~tmp___18~1289 := #t~nondet1360;
    havoc #t~nondet1360;
    ~ldvarg15~1289 := ~tmp___18~1289;
    call #t~ret1361.base, #t~ret1361.offset := ldv_zalloc(1);
    ~tmp___19~1289.base, ~tmp___19~1289.offset := #t~ret1361.base, #t~ret1361.offset;
    havoc #t~ret1361.base, #t~ret1361.offset;
    ~ldvarg21~1289.base, ~ldvarg21~1289.offset := ~tmp___19~1289.base, ~tmp___19~1289.offset;
    call #t~ret1362.base, #t~ret1362.offset := ldv_zalloc(1272);
    ~tmp___20~1289.base, ~tmp___20~1289.offset := #t~ret1362.base, #t~ret1362.offset;
    havoc #t~ret1362.base, #t~ret1362.offset;
    ~ldvarg25~1289.base, ~ldvarg25~1289.offset := ~tmp___20~1289.base, ~tmp___20~1289.offset;
    call #t~ret1363.base, #t~ret1363.offset := ldv_zalloc(64);
    ~tmp___21~1289.base, ~tmp___21~1289.offset := #t~ret1363.base, #t~ret1363.offset;
    havoc #t~ret1363.base, #t~ret1363.offset;
    ~ldvarg17~1289.base, ~ldvarg17~1289.offset := ~tmp___21~1289.base, ~tmp___21~1289.offset;
    call #t~ret1364.base, #t~ret1364.offset := ldv_zalloc(4);
    ~tmp___22~1289.base, ~tmp___22~1289.offset := #t~ret1364.base, #t~ret1364.offset;
    havoc #t~ret1364.base, #t~ret1364.offset;
    ~ldvarg4~1289.base, ~ldvarg4~1289.offset := ~tmp___22~1289.base, ~tmp___22~1289.offset;
    assume -2147483648 <= #t~nondet1365 && #t~nondet1365 <= 2147483647;
    ~tmp___23~1289 := #t~nondet1365;
    havoc #t~nondet1365;
    ~ldvarg14~1289 := ~tmp___23~1289;
    assume -2147483648 <= #t~nondet1366 && #t~nondet1366 <= 2147483647;
    ~tmp___24~1289 := #t~nondet1366;
    havoc #t~nondet1366;
    ~ldvarg22~1289 := ~tmp___24~1289;
    call #t~ret1367.base, #t~ret1367.offset := ldv_zalloc(184);
    ~tmp___25~1289.base, ~tmp___25~1289.offset := #t~ret1367.base, #t~ret1367.offset;
    havoc #t~ret1367.base, #t~ret1367.offset;
    ~ldvarg19~1289.base, ~ldvarg19~1289.offset := ~tmp___25~1289.base, ~tmp___25~1289.offset;
    assume -2147483648 <= #t~nondet1368 && #t~nondet1368 <= 2147483647;
    ~tmp___26~1289 := #t~nondet1368;
    havoc #t~nondet1368;
    ~ldvarg28~1289 := ~tmp___26~1289;
    assume -2147483648 <= #t~nondet1369 && #t~nondet1369 <= 2147483647;
    ~tmp___27~1289 := #t~nondet1369;
    havoc #t~nondet1369;
    ~ldvarg2~1289 := ~tmp___27~1289;
    assume -2147483648 <= #t~nondet1370 && #t~nondet1370 <= 2147483647;
    ~tmp___28~1289 := #t~nondet1370;
    havoc #t~nondet1370;
    ~ldvarg32~1289 := ~tmp___28~1289;
    call #t~ret1371.base, #t~ret1371.offset := ldv_zalloc(8);
    ~tmp___29~1289.base, ~tmp___29~1289.offset := #t~ret1371.base, #t~ret1371.offset;
    havoc #t~ret1371.base, #t~ret1371.offset;
    ~ldvarg31~1289.base, ~ldvarg31~1289.offset := ~tmp___29~1289.base, ~tmp___29~1289.offset;
    assume -2147483648 <= #t~nondet1372 && #t~nondet1372 <= 2147483647;
    ~tmp___30~1289 := #t~nondet1372;
    havoc #t~nondet1372;
    ~ldvarg29~1289 := ~tmp___30~1289;
    call #t~ret1373.base, #t~ret1373.offset := ldv_zalloc(1);
    ~tmp___31~1289.base, ~tmp___31~1289.offset := #t~ret1373.base, #t~ret1373.offset;
    havoc #t~ret1373.base, #t~ret1373.offset;
    ~ldvarg33~1289.base, ~ldvarg33~1289.offset := ~tmp___31~1289.base, ~tmp___31~1289.offset;
    assume -9223372036854775808 <= #t~nondet1374 && #t~nondet1374 <= 9223372036854775807;
    ~tmp___32~1289 := #t~nondet1374;
    havoc #t~nondet1374;
    ~ldvarg30~1289 := ~tmp___32~1289;
    assume -2147483648 <= #t~nondet1375 && #t~nondet1375 <= 2147483647;
    ~tmp___33~1289 := #t~nondet1375;
    havoc #t~nondet1375;
    ~ldvarg39~1289 := ~tmp___33~1289;
    assume -2147483648 <= #t~nondet1376 && #t~nondet1376 <= 2147483647;
    ~tmp___34~1289 := #t~nondet1376;
    havoc #t~nondet1376;
    ~ldvarg51~1289 := ~tmp___34~1289;
    assume -2147483648 <= #t~nondet1377 && #t~nondet1377 <= 2147483647;
    ~tmp___35~1289 := #t~nondet1377;
    havoc #t~nondet1377;
    ~ldvarg60~1289 := ~tmp___35~1289;
    call #t~ret1378.base, #t~ret1378.offset := ldv_zalloc(1);
    ~tmp___36~1289.base, ~tmp___36~1289.offset := #t~ret1378.base, #t~ret1378.offset;
    havoc #t~ret1378.base, #t~ret1378.offset;
    ~ldvarg41~1289.base, ~ldvarg41~1289.offset := ~tmp___36~1289.base, ~tmp___36~1289.offset;
    assume -2147483648 <= #t~nondet1379 && #t~nondet1379 <= 2147483647;
    ~tmp___37~1289 := #t~nondet1379;
    havoc #t~nondet1379;
    ~ldvarg43~1289 := ~tmp___37~1289;
    assume -2147483648 <= #t~nondet1380 && #t~nondet1380 <= 2147483647;
    ~tmp___38~1289 := #t~nondet1380;
    havoc #t~nondet1380;
    ~ldvarg42~1289 := ~tmp___38~1289;
    call #t~ret1381.base, #t~ret1381.offset := ldv_zalloc(1272);
    ~tmp___39~1289.base, ~tmp___39~1289.offset := #t~ret1381.base, #t~ret1381.offset;
    havoc #t~ret1381.base, #t~ret1381.offset;
    ~ldvarg59~1289.base, ~ldvarg59~1289.offset := ~tmp___39~1289.base, ~tmp___39~1289.offset;
    assume -2147483648 <= #t~nondet1382 && #t~nondet1382 <= 2147483647;
    ~tmp___40~1289 := #t~nondet1382;
    havoc #t~nondet1382;
    ~ldvarg56~1289 := ~tmp___40~1289;
    call #t~ret1383.base, #t~ret1383.offset := ldv_zalloc(1);
    ~tmp___41~1289.base, ~tmp___41~1289.offset := #t~ret1383.base, #t~ret1383.offset;
    havoc #t~ret1383.base, #t~ret1383.offset;
    ~ldvarg49~1289.base, ~ldvarg49~1289.offset := ~tmp___41~1289.base, ~tmp___41~1289.offset;
    assume -2147483648 <= #t~nondet1384 && #t~nondet1384 <= 2147483647;
    ~tmp___42~1289 := #t~nondet1384;
    havoc #t~nondet1384;
    ~ldvarg62~1289 := ~tmp___42~1289;
    assume -2147483648 <= #t~nondet1385 && #t~nondet1385 <= 2147483647;
    ~tmp___43~1289 := #t~nondet1385;
    havoc #t~nondet1385;
    ~ldvarg50~1289 := ~tmp___43~1289;
    ~tmp___44~1289 := #t~nondet1386;
    havoc #t~nondet1386;
    ~ldvarg46~1289 := ~tmp___44~1289;
    call #t~ret1387.base, #t~ret1387.offset := ldv_zalloc(64);
    ~tmp___45~1289.base, ~tmp___45~1289.offset := #t~ret1387.base, #t~ret1387.offset;
    havoc #t~ret1387.base, #t~ret1387.offset;
    ~ldvarg57~1289.base, ~ldvarg57~1289.offset := ~tmp___45~1289.base, ~tmp___45~1289.offset;
    assume -2147483648 <= #t~nondet1388 && #t~nondet1388 <= 2147483647;
    ~tmp___46~1289 := #t~nondet1388;
    havoc #t~nondet1388;
    ~ldvarg58~1289 := ~tmp___46~1289;
    assume -2147483648 <= #t~nondet1389 && #t~nondet1389 <= 2147483647;
    ~tmp___47~1289 := #t~nondet1389;
    havoc #t~nondet1389;
    ~ldvarg37~1289 := ~tmp___47~1289;
    assume -2147483648 <= #t~nondet1390 && #t~nondet1390 <= 2147483647;
    ~tmp___48~1289 := #t~nondet1390;
    havoc #t~nondet1390;
    ~ldvarg53~1289 := ~tmp___48~1289;
    assume -2147483648 <= #t~nondet1391 && #t~nondet1391 <= 2147483647;
    ~tmp___49~1289 := #t~nondet1391;
    havoc #t~nondet1391;
    ~ldvarg55~1289 := ~tmp___49~1289;
    assume -2147483648 <= #t~nondet1392 && #t~nondet1392 <= 2147483647;
    ~tmp___50~1289 := #t~nondet1392;
    havoc #t~nondet1392;
    ~ldvarg36~1289 := ~tmp___50~1289;
    assume -2147483648 <= #t~nondet1393 && #t~nondet1393 <= 2147483647;
    ~tmp___51~1289 := #t~nondet1393;
    havoc #t~nondet1393;
    ~ldvarg40~1289 := ~tmp___51~1289;
    call #t~ret1394.base, #t~ret1394.offset := ldv_zalloc(4);
    ~tmp___52~1289.base, ~tmp___52~1289.offset := #t~ret1394.base, #t~ret1394.offset;
    havoc #t~ret1394.base, #t~ret1394.offset;
    ~ldvarg44~1289.base, ~ldvarg44~1289.offset := ~tmp___52~1289.base, ~tmp___52~1289.offset;
    assume -2147483648 <= #t~nondet1395 && #t~nondet1395 <= 2147483647;
    ~tmp___53~1289 := #t~nondet1395;
    havoc #t~nondet1395;
    ~ldvarg45~1289 := ~tmp___53~1289;
    call #t~ret1396.base, #t~ret1396.offset := ldv_zalloc(16);
    ~tmp___54~1289.base, ~tmp___54~1289.offset := #t~ret1396.base, #t~ret1396.offset;
    havoc #t~ret1396.base, #t~ret1396.offset;
    ~ldvarg35~1289.base, ~ldvarg35~1289.offset := ~tmp___54~1289.base, ~tmp___54~1289.offset;
    call #t~ret1397.base, #t~ret1397.offset := ldv_zalloc(4);
    ~tmp___55~1289.base, ~tmp___55~1289.offset := #t~ret1397.base, #t~ret1397.offset;
    havoc #t~ret1397.base, #t~ret1397.offset;
    ~ldvarg38~1289.base, ~ldvarg38~1289.offset := ~tmp___55~1289.base, ~tmp___55~1289.offset;
    assume -2147483648 <= #t~nondet1398 && #t~nondet1398 <= 2147483647;
    ~tmp___56~1289 := #t~nondet1398;
    havoc #t~nondet1398;
    ~ldvarg48~1289 := ~tmp___56~1289;
    call #t~ret1399.base, #t~ret1399.offset := ldv_zalloc(184);
    ~tmp___57~1289.base, ~tmp___57~1289.offset := #t~ret1399.base, #t~ret1399.offset;
    havoc #t~ret1399.base, #t~ret1399.offset;
    ~ldvarg54~1289.base, ~ldvarg54~1289.offset := ~tmp___57~1289.base, ~tmp___57~1289.offset;
    assume -2147483648 <= #t~nondet1400 && #t~nondet1400 <= 2147483647;
    ~tmp___58~1289 := #t~nondet1400;
    havoc #t~nondet1400;
    ~ldvarg61~1289 := ~tmp___58~1289;
    ~tmp___59~1289 := #t~nondet1401;
    havoc #t~nondet1401;
    ~ldvarg52~1289 := ~tmp___59~1289;
    assume -2147483648 <= #t~nondet1402 && #t~nondet1402 <= 2147483647;
    ~tmp___60~1289 := #t~nondet1402;
    havoc #t~nondet1402;
    ~ldvarg34~1289 := ~tmp___60~1289;
    ~tmp___61~1289 := #t~nondet1403;
    havoc #t~nondet1403;
    ~ldvarg47~1289 := ~tmp___61~1289;
    assume -2147483648 <= #t~nondet1404 && #t~nondet1404 <= 2147483647;
    ~tmp___62~1289 := #t~nondet1404;
    havoc #t~nondet1404;
    ~ldvarg65~1289 := ~tmp___62~1289;
    assume -2147483648 <= #t~nondet1405 && #t~nondet1405 <= 2147483647;
    ~tmp___63~1289 := #t~nondet1405;
    havoc #t~nondet1405;
    ~ldvarg63~1289 := ~tmp___63~1289;
    call #t~ret1406.base, #t~ret1406.offset := ldv_zalloc(48);
    ~tmp___64~1289.base, ~tmp___64~1289.offset := #t~ret1406.base, #t~ret1406.offset;
    havoc #t~ret1406.base, #t~ret1406.offset;
    ~ldvarg66~1289.base, ~ldvarg66~1289.offset := ~tmp___64~1289.base, ~tmp___64~1289.offset;
    call #t~ret1407.base, #t~ret1407.offset := ldv_zalloc(7168);
    ~tmp___65~1289.base, ~tmp___65~1289.offset := #t~ret1407.base, #t~ret1407.offset;
    havoc #t~ret1407.base, #t~ret1407.offset;
    ~ldvarg64~1289.base, ~ldvarg64~1289.offset := ~tmp___65~1289.base, ~tmp___65~1289.offset;
    call #t~ret1408.base, #t~ret1408.offset := ldv_zalloc(4);
    ~tmp___66~1289.base, ~tmp___66~1289.offset := #t~ret1408.base, #t~ret1408.offset;
    havoc #t~ret1408.base, #t~ret1408.offset;
    ~ldvarg77~1289.base, ~ldvarg77~1289.offset := ~tmp___66~1289.base, ~tmp___66~1289.offset;
    call #t~ret1409.base, #t~ret1409.offset := ldv_zalloc(64);
    ~tmp___67~1289.base, ~tmp___67~1289.offset := #t~ret1409.base, #t~ret1409.offset;
    havoc #t~ret1409.base, #t~ret1409.offset;
    ~ldvarg84~1289.base, ~ldvarg84~1289.offset := ~tmp___67~1289.base, ~tmp___67~1289.offset;
    assume -2147483648 <= #t~nondet1410 && #t~nondet1410 <= 2147483647;
    ~tmp___68~1289 := #t~nondet1410;
    havoc #t~nondet1410;
    ~ldvarg94~1289 := ~tmp___68~1289;
    ~tmp___69~1289 := #t~nondet1411;
    havoc #t~nondet1411;
    ~ldvarg91~1289 := ~tmp___69~1289;
    call #t~ret1412.base, #t~ret1412.offset := ldv_zalloc(16);
    ~tmp___70~1289.base, ~tmp___70~1289.offset := #t~ret1412.base, #t~ret1412.offset;
    havoc #t~ret1412.base, #t~ret1412.offset;
    ~ldvarg67~1289.base, ~ldvarg67~1289.offset := ~tmp___70~1289.base, ~tmp___70~1289.offset;
    ~tmp___71~1289 := #t~nondet1413;
    havoc #t~nondet1413;
    ~ldvarg80~1289 := ~tmp___71~1289;
    assume -2147483648 <= #t~nondet1414 && #t~nondet1414 <= 2147483647;
    ~tmp___72~1289 := #t~nondet1414;
    havoc #t~nondet1414;
    ~ldvarg87~1289 := ~tmp___72~1289;
    call #t~ret1415.base, #t~ret1415.offset := ldv_zalloc(4);
    ~tmp___73~1289.base, ~tmp___73~1289.offset := #t~ret1415.base, #t~ret1415.offset;
    havoc #t~ret1415.base, #t~ret1415.offset;
    ~ldvarg71~1289.base, ~ldvarg71~1289.offset := ~tmp___73~1289.base, ~tmp___73~1289.offset;
    call #t~ret1416.base, #t~ret1416.offset := ldv_zalloc(184);
    ~tmp___74~1289.base, ~tmp___74~1289.offset := #t~ret1416.base, #t~ret1416.offset;
    havoc #t~ret1416.base, #t~ret1416.offset;
    ~ldvarg86~1289.base, ~ldvarg86~1289.offset := ~tmp___74~1289.base, ~tmp___74~1289.offset;
    assume -2147483648 <= #t~nondet1417 && #t~nondet1417 <= 2147483647;
    ~tmp___75~1289 := #t~nondet1417;
    havoc #t~nondet1417;
    ~ldvarg72~1289 := ~tmp___75~1289;
    ~tmp___76~1289 := #t~nondet1418;
    havoc #t~nondet1418;
    ~ldvarg79~1289 := ~tmp___76~1289;
    assume -2147483648 <= #t~nondet1419 && #t~nondet1419 <= 2147483647;
    ~tmp___77~1289 := #t~nondet1419;
    havoc #t~nondet1419;
    ~ldvarg83~1289 := ~tmp___77~1289;
    assume -2147483648 <= #t~nondet1420 && #t~nondet1420 <= 2147483647;
    ~tmp___78~1289 := #t~nondet1420;
    havoc #t~nondet1420;
    ~ldvarg81~1289 := ~tmp___78~1289;
    assume -2147483648 <= #t~nondet1421 && #t~nondet1421 <= 2147483647;
    ~tmp___79~1289 := #t~nondet1421;
    havoc #t~nondet1421;
    ~ldvarg95~1289 := ~tmp___79~1289;
    assume -2147483648 <= #t~nondet1422 && #t~nondet1422 <= 2147483647;
    ~tmp___80~1289 := #t~nondet1422;
    havoc #t~nondet1422;
    ~ldvarg85~1289 := ~tmp___80~1289;
    assume -2147483648 <= #t~nondet1423 && #t~nondet1423 <= 2147483647;
    ~tmp___81~1289 := #t~nondet1423;
    havoc #t~nondet1423;
    ~ldvarg73~1289 := ~tmp___81~1289;
    call #t~ret1424.base, #t~ret1424.offset := ldv_zalloc(1);
    ~tmp___82~1289.base, ~tmp___82~1289.offset := #t~ret1424.base, #t~ret1424.offset;
    havoc #t~ret1424.base, #t~ret1424.offset;
    ~ldvarg88~1289.base, ~ldvarg88~1289.offset := ~tmp___82~1289.base, ~tmp___82~1289.offset;
    assume -2147483648 <= #t~nondet1425 && #t~nondet1425 <= 2147483647;
    ~tmp___83~1289 := #t~nondet1425;
    havoc #t~nondet1425;
    ~ldvarg70~1289 := ~tmp___83~1289;
    assume -2147483648 <= #t~nondet1426 && #t~nondet1426 <= 2147483647;
    ~tmp___84~1289 := #t~nondet1426;
    havoc #t~nondet1426;
    ~ldvarg78~1289 := ~tmp___84~1289;
    assume -2147483648 <= #t~nondet1427 && #t~nondet1427 <= 2147483647;
    ~tmp___85~1289 := #t~nondet1427;
    havoc #t~nondet1427;
    ~ldvarg90~1289 := ~tmp___85~1289;
    assume -2147483648 <= #t~nondet1428 && #t~nondet1428 <= 2147483647;
    ~tmp___86~1289 := #t~nondet1428;
    havoc #t~nondet1428;
    ~ldvarg68~1289 := ~tmp___86~1289;
    assume -2147483648 <= #t~nondet1429 && #t~nondet1429 <= 2147483647;
    ~tmp___87~1289 := #t~nondet1429;
    havoc #t~nondet1429;
    ~ldvarg69~1289 := ~tmp___87~1289;
    assume -2147483648 <= #t~nondet1430 && #t~nondet1430 <= 2147483647;
    ~tmp___88~1289 := #t~nondet1430;
    havoc #t~nondet1430;
    ~ldvarg93~1289 := ~tmp___88~1289;
    call #t~ret1431.base, #t~ret1431.offset := ldv_zalloc(1272);
    ~tmp___89~1289.base, ~tmp___89~1289.offset := #t~ret1431.base, #t~ret1431.offset;
    havoc #t~ret1431.base, #t~ret1431.offset;
    ~ldvarg92~1289.base, ~ldvarg92~1289.offset := ~tmp___89~1289.base, ~tmp___89~1289.offset;
    assume -2147483648 <= #t~nondet1432 && #t~nondet1432 <= 2147483647;
    ~tmp___90~1289 := #t~nondet1432;
    havoc #t~nondet1432;
    ~ldvarg89~1289 := ~tmp___90~1289;
    call #t~ret1433.base, #t~ret1433.offset := ldv_zalloc(1);
    ~tmp___91~1289.base, ~tmp___91~1289.offset := #t~ret1433.base, #t~ret1433.offset;
    havoc #t~ret1433.base, #t~ret1433.offset;
    ~ldvarg74~1289.base, ~ldvarg74~1289.offset := ~tmp___91~1289.base, ~tmp___91~1289.offset;
    assume -2147483648 <= #t~nondet1434 && #t~nondet1434 <= 2147483647;
    ~tmp___92~1289 := #t~nondet1434;
    havoc #t~nondet1434;
    ~ldvarg76~1289 := ~tmp___92~1289;
    assume -2147483648 <= #t~nondet1435 && #t~nondet1435 <= 2147483647;
    ~tmp___93~1289 := #t~nondet1435;
    havoc #t~nondet1435;
    ~ldvarg82~1289 := ~tmp___93~1289;
    assume -2147483648 <= #t~nondet1436 && #t~nondet1436 <= 2147483647;
    ~tmp___94~1289 := #t~nondet1436;
    havoc #t~nondet1436;
    ~ldvarg75~1289 := ~tmp___94~1289;
    call ldv_initialize();
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_4 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_5 := 0;
    goto loc4;
  loc4:
    assume -2147483648 <= #t~nondet1437 && #t~nondet1437 <= 2147483647;
    ~tmp___95~1289 := #t~nondet1437;
    havoc #t~nondet1437;
    #t~switch1438 := ~tmp___95~1289 == 0;
    goto loc5;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume #t~switch1438;
    assume ~ldv_state_variable_6 != 0;
    assume -2147483648 <= #t~nondet1439 && #t~nondet1439 <= 2147483647;
    ~tmp___96~1289 := #t~nondet1439;
    havoc #t~nondet1439;
    #t~switch1440 := ~tmp___96~1289 == 0;
    assume !#t~switch1440;
    #t~switch1440 := #t~switch1440 || ~tmp___96~1289 == 1;
    assume !#t~switch1440;
    #t~switch1440 := #t~switch1440 || ~tmp___96~1289 == 2;
    assume !#t~switch1440;
    #t~switch1440 := #t~switch1440 || ~tmp___96~1289 == 3;
    assume !#t~switch1440;
    #t~switch1440 := #t~switch1440 || ~tmp___96~1289 == 4;
    assume !#t~switch1440;
    #t~switch1440 := #t~switch1440 || ~tmp___96~1289 == 5;
    assume !#t~switch1440;
    #t~switch1440 := #t~switch1440 || ~tmp___96~1289 == 6;
    assume !#t~switch1440;
    #t~switch1440 := #t~switch1440 || ~tmp___96~1289 == 7;
    assume #t~switch1440;
    assume ~ldv_state_variable_6 == 1;
    call #t~ret1448 := unix_bind(~unix_dgram_ops_group5.base, ~unix_dgram_ops_group5.offset, ~unix_dgram_ops_group1.base, ~unix_dgram_ops_group1.offset, ~ldvarg14~1289);
    return;
  loc5_1:
    assume !#t~switch1438;
    #t~switch1438 := #t~switch1438 || ~tmp___95~1289 == 1;
    assume !#t~switch1438;
    #t~switch1438 := #t~switch1438 || ~tmp___95~1289 == 2;
    assume !#t~switch1438;
    #t~switch1438 := #t~switch1438 || ~tmp___95~1289 == 3;
    assume !#t~switch1438;
    #t~switch1438 := #t~switch1438 || ~tmp___95~1289 == 4;
    assume !#t~switch1438;
    #t~switch1438 := #t~switch1438 || ~tmp___95~1289 == 5;
    goto loc6;
  loc6:
    goto loc6_0, loc6_1;
  loc6_0:
    assume #t~switch1438;
    assume ~ldv_state_variable_4 != 0;
    assume -2147483648 <= #t~nondet1489 && #t~nondet1489 <= 2147483647;
    ~tmp___101~1289 := #t~nondet1489;
    havoc #t~nondet1489;
    #t~switch1490 := ~tmp___101~1289 == 0;
    assume #t~switch1490;
    assume ~ldv_state_variable_4 == 1;
    call #t~ret1491.base, #t~ret1491.offset := unix_seq_start(~unix_seq_ops_group1.base, ~unix_seq_ops_group1.offset, ~unix_seq_ops_group3.base, ~unix_seq_ops_group3.offset);
    ~ldv_retval_2.base, ~ldv_retval_2.offset := #t~ret1491.base, #t~ret1491.offset;
    havoc #t~ret1491.base, #t~ret1491.offset;
    assume (~ldv_retval_2.base + ~ldv_retval_2.offset) % 18446744073709551616 != 0;
    ~ldv_state_variable_4 := 3;
    ~ref_cnt := ~ref_cnt + 1;
    assume !((~ldv_retval_2.base + ~ldv_retval_2.offset) % 18446744073709551616 == 0);
    goto loc4;
  loc6_1:
    assume !#t~switch1438;
    #t~switch1438 := #t~switch1438 || ~tmp___95~1289 == 6;
    assume #t~switch1438;
    assume ~ldv_state_variable_0 != 0;
    assume -2147483648 <= #t~nondet1494 && #t~nondet1494 <= 2147483647;
    ~tmp___102~1289 := #t~nondet1494;
    havoc #t~nondet1494;
    #t~switch1495 := ~tmp___102~1289 == 0;
    assume !#t~switch1495;
    #t~switch1495 := #t~switch1495 || ~tmp___102~1289 == 1;
    assume #t~switch1495;
    assume ~ldv_state_variable_0 == 1;
    call #t~ret1496 := af_unix_init();
    assume -2147483648 <= #t~ret1496 && #t~ret1496 <= 2147483647;
    ~ldv_retval_3 := #t~ret1496;
    havoc #t~ret1496;
    assume ~ldv_retval_3 == 0;
    ~ldv_state_variable_0 := 3;
    ~ldv_state_variable_5 := 1;
    call ldv_initialize_proto_ops_5();
    ~ldv_state_variable_2 := 1;
    ~ldv_state_variable_7 := 1;
    call ldv_initialize_proto_ops_7();
    ~ldv_state_variable_3 := 1;
    call ldv_file_operations_3();
    ~ldv_state_variable_1 := 1;
    call ldv_initialize_pernet_operations_1();
    ~ldv_state_variable_4 := 1;
    call ldv_seq_operations_4();
    ~ldv_state_variable_6 := 1;
    call ldv_initialize_proto_ops_6();
    assume !(~ldv_retval_3 != 0);
    goto loc4;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_2, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_2.base, ~ldv_retval_2.offset, ~ldv_retval_1.base, ~ldv_retval_1.offset, ~ldv_retval_3, #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~unix_net_ops_group0.base, ~unix_net_ops_group0.offset, ~unix_seq_fops_group1.base, ~unix_seq_fops_group1.offset, ~unix_seq_fops_group2.base, ~unix_seq_fops_group2.offset, ~unix_stream_ops_group3.base, ~unix_stream_ops_group3.offset, ~unix_stream_ops_group0.base, ~unix_stream_ops_group0.offset, ~unix_stream_ops_group4.base, ~unix_stream_ops_group4.offset, ~unix_stream_ops_group5.base, ~unix_stream_ops_group5.offset, ~unix_stream_ops_group1.base, ~unix_stream_ops_group1.offset, ~unix_stream_ops_group2.base, ~unix_stream_ops_group2.offset, ~unix_dgram_ops_group3.base, ~unix_dgram_ops_group3.offset, ~unix_dgram_ops_group0.base, ~unix_dgram_ops_group0.offset, ~unix_dgram_ops_group4.base, ~unix_dgram_ops_group4.offset, ~unix_dgram_ops_group5.base, ~unix_dgram_ops_group5.offset, ~unix_dgram_ops_group1.base, ~unix_dgram_ops_group1.offset, ~unix_dgram_ops_group2.base, ~unix_dgram_ops_group2.offset, ~unix_seqpacket_ops_group3.base, ~unix_seqpacket_ops_group3.offset, ~unix_seqpacket_ops_group0.base, ~unix_seqpacket_ops_group0.offset, ~unix_seqpacket_ops_group4.base, ~unix_seqpacket_ops_group4.offset, ~unix_seqpacket_ops_group5.base, ~unix_seqpacket_ops_group5.offset, ~unix_seqpacket_ops_group1.base, ~unix_seqpacket_ops_group1.offset, ~unix_seqpacket_ops_group2.base, ~unix_seqpacket_ops_group2.offset, ~unix_seq_ops_group1.base, ~unix_seq_ops_group1.offset, ~ldv_spin, ~unix_tot_inflight, ~gc_in_progress;

implementation ldv_spin_lock() returns (){
  loc7:
    ~ldv_spin := 1;
    assume true;
    return;
}

procedure ldv_spin_lock() returns ();
modifies ~ldv_spin;

implementation ldv_initialize_pernet_operations_1() returns (){
    var #t~ret1319.base : int, #t~ret1319.offset : int;
    var ~tmp~1277.base : int, ~tmp~1277.offset : int;

  loc8:
    havoc ~tmp~1277.base, ~tmp~1277.offset;
    call #t~ret1319.base, #t~ret1319.offset := ldv_zalloc(7168);
    ~tmp~1277.base, ~tmp~1277.offset := #t~ret1319.base, #t~ret1319.offset;
    havoc #t~ret1319.base, #t~ret1319.offset;
    ~unix_net_ops_group0.base, ~unix_net_ops_group0.offset := ~tmp~1277.base, ~tmp~1277.offset;
    assume true;
    return;
}

procedure ldv_initialize_pernet_operations_1() returns ();
modifies ~unix_net_ops_group0.base, ~unix_net_ops_group0.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation unix_bind(#in~sock.base : int, #in~sock.offset : int, #in~uaddr.base : int, #in~uaddr.offset : int, #in~addr_len : int) returns (#res : int){
    var #t~mem689.base : int, #t~mem689.offset : int;
    var #t~ret690.base : int, #t~ret690.offset : int;
    var #t~mem691 : int;
    var #t~ret692 : int;
    var #t~ret693 : int;
    var #t~ret694 : int;
    var #t~mem695.base : int, #t~mem695.offset : int;
    var #t~ret696.base : int, #t~ret696.offset : int;
    var #t~memcpy697.base : int, #t~memcpy697.offset : int;
    var #t~mem699 : int;
    var #t~mem700 : int;
    var #t~mem702 : int;
    var #t~ret703.base : int, #t~ret703.offset : int;
    var #t~ret704 : int;
    var #t~mem705 : int;
    var #t~ret706 : int;
    var #t~mem708.base : int, #t~mem708.offset : int;
    var #t~mem709.base : int, #t~mem709.offset : int;
    var #t~mem710 : int;
    var #t~mem714.base : int, #t~mem714.offset : int;
    var #t~mem715.base : int, #t~mem715.offset : int;
    var #t~mem716 : int;
    var #t~mem717 : int;
    var #t~mem718 : int;
    var #t~ret719.base : int, #t~ret719.offset : int;
    var #t~mem720 : int;
    var ~sock.base : int, ~sock.offset : int;
    var ~uaddr.base : int, ~uaddr.offset : int;
    var ~addr_len : int;
    var ~sk~770.base : int, ~sk~770.offset : int;
    var ~net~770.base : int, ~net~770.offset : int;
    var ~tmp~770.base : int, ~tmp~770.offset : int;
    var ~u~770.base : int, ~u~770.offset : int;
    var ~sunaddr~770.base : int, ~sunaddr~770.offset : int;
    var ~sun_path~770.base : int, ~sun_path~770.offset : int;
    var ~err~770 : int;
    var ~#hash~770.base : int, ~#hash~770.offset : int;
    var ~addr~770.base : int, ~addr~770.offset : int;
    var ~list~770.base : int, ~list~770.offset : int;
    var ~tmp___0~770.base : int, ~tmp___0~770.offset : int;
    var ~__len~770 : int;
    var ~__ret~770.base : int, ~__ret~770.offset : int;
    var ~#path~770.base : int, ~#path~770.offset : int;
    var ~mode~770 : ~umode_t;
    var ~tmp___1~770.base : int, ~tmp___1~770.offset : int;
    var ~tmp___2~770 : int;
    var ~tmp___3~770.base : int, ~tmp___3~770.offset : int;

  loc9:
    ~sock.base, ~sock.offset := #in~sock.base, #in~sock.offset;
    ~uaddr.base, ~uaddr.offset := #in~uaddr.base, #in~uaddr.offset;
    ~addr_len := #in~addr_len;
    havoc ~sk~770.base, ~sk~770.offset;
    havoc ~net~770.base, ~net~770.offset;
    havoc ~tmp~770.base, ~tmp~770.offset;
    havoc ~u~770.base, ~u~770.offset;
    havoc ~sunaddr~770.base, ~sunaddr~770.offset;
    havoc ~sun_path~770.base, ~sun_path~770.offset;
    havoc ~err~770;
    call ~#hash~770.base, ~#hash~770.offset := #Ultimate.alloc(4);
    havoc ~addr~770.base, ~addr~770.offset;
    havoc ~list~770.base, ~list~770.offset;
    havoc ~tmp___0~770.base, ~tmp___0~770.offset;
    havoc ~__len~770;
    havoc ~__ret~770.base, ~__ret~770.offset;
    call ~#path~770.base, ~#path~770.offset := #Ultimate.alloc(16);
    havoc ~mode~770;
    havoc ~tmp___1~770.base, ~tmp___1~770.offset;
    havoc ~tmp___2~770;
    havoc ~tmp___3~770.base, ~tmp___3~770.offset;
    call #t~mem689.base, #t~mem689.offset := read~$Pointer$(~sock.base, ~sock.offset + 30, 8);
    ~sk~770.base, ~sk~770.offset := #t~mem689.base, #t~mem689.offset;
    havoc #t~mem689.base, #t~mem689.offset;
    call #t~ret690.base, #t~ret690.offset := sock_net(~sk~770.base, ~sk~770.offset);
    ~tmp~770.base, ~tmp~770.offset := #t~ret690.base, #t~ret690.offset;
    havoc #t~ret690.base, #t~ret690.offset;
    ~net~770.base, ~net~770.offset := ~tmp~770.base, ~tmp~770.offset;
    ~u~770.base, ~u~770.offset := ~sk~770.base, ~sk~770.offset;
    ~sunaddr~770.base, ~sunaddr~770.offset := ~uaddr.base, ~uaddr.offset;
    ~sun_path~770.base, ~sun_path~770.offset := ~sunaddr~770.base, ~sunaddr~770.offset + 2;
    ~err~770 := -22;
    call #t~mem691 := read~int(~sunaddr~770.base, ~sunaddr~770.offset + 0, 2);
    assume !(#t~mem691 % 65536 % 4294967296 != 1);
    havoc #t~mem691;
    assume ~addr_len == 2;
    call #t~ret692 := unix_autobind(~sock.base, ~sock.offset);
    return;
}

procedure unix_bind(#in~sock.base : int, #in~sock.offset : int, #in~uaddr.base : int, #in~uaddr.offset : int, #in~addr_len : int) returns (#res : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length, ~ldv_spin;

implementation ULTIMATE.init() returns (){
    var #t~union1639.head : int, #t~union1639.tail : int;
    var #t~nondet480.base : int, #t~nondet480.offset : int;
    var #t~union1640.__padding : [int]int, #t~union1640.dep_map.key.base : int, #t~union1640.dep_map.key.offset : int, #t~union1640.dep_map.class_cache.base : [int]int, #t~union1640.dep_map.class_cache.offset : [int]int, #t~union1640.dep_map.name.base : int, #t~union1640.dep_map.name.offset : int, #t~union1640.dep_map.cpu : int, #t~union1640.dep_map.ip : int;
    var #t~union1641.base : int, #t~union1641.offset : int;
    var #t~union1642.base : int, #t~union1642.offset : int;
    var #t~union1643.base : int, #t~union1643.offset : int;
    var #t~union1644.head : int, #t~union1644.tail : int;
    var #t~nondet1546.base : int, #t~nondet1546.offset : int;
    var #t~union1645.__padding : [int]int, #t~union1645.dep_map.key.base : int, #t~union1645.dep_map.key.offset : int, #t~union1645.dep_map.class_cache.base : [int]int, #t~union1645.dep_map.class_cache.offset : [int]int, #t~union1645.dep_map.name.base : int, #t~union1645.dep_map.name.offset : int, #t~union1645.dep_map.cpu : int, #t~union1645.dep_map.ip : int;
    var #t~union1646.head : int, #t~union1646.tail : int;
    var #t~nondet1547.base : int, #t~nondet1547.offset : int;
    var #t~union1647.__padding : [int]int, #t~union1647.dep_map.key.base : int, #t~union1647.dep_map.key.offset : int, #t~union1647.dep_map.class_cache.base : [int]int, #t~union1647.dep_map.class_cache.offset : [int]int, #t~union1647.dep_map.name.base : int, #t~union1647.dep_map.name.offset : int, #t~union1647.dep_map.cpu : int, #t~union1647.dep_map.ip : int;
    var #t~nondet1627.base : int, #t~nondet1627.offset : int;

  loc10:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_state_variable_5 := 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_state_variable_3 := 0;
    ~ref_cnt := 0;
    ~unix_seq_ops_group2.base, ~unix_seq_ops_group2.offset := 0, 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_state_variable_4 := 0;
    ~unix_tot_inflight := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_1.base, ~ldv_retval_1.offset := 0, 0;
    ~ldv_retval_3 := 0;
    ~ldv_retval_2.base, ~ldv_retval_2.offset := 0, 0;
    ~ldv_spin := 0;
    ~unix_seqpacket_ops_group2.base, ~unix_seqpacket_ops_group2.offset := 0, 0;
    ~unix_stream_ops_group3.base, ~unix_stream_ops_group3.offset := 0, 0;
    ~unix_seqpacket_ops_group5.base, ~unix_seqpacket_ops_group5.offset := 0, 0;
    ~unix_dgram_ops_group5.base, ~unix_dgram_ops_group5.offset := 0, 0;
    ~unix_seqpacket_ops_group4.base, ~unix_seqpacket_ops_group4.offset := 0, 0;
    ~unix_stream_ops_group1.base, ~unix_stream_ops_group1.offset := 0, 0;
    ~unix_stream_ops_group4.base, ~unix_stream_ops_group4.offset := 0, 0;
    ~unix_seq_fops_group2.base, ~unix_seq_fops_group2.offset := 0, 0;
    ~unix_seqpacket_ops_group1.base, ~unix_seqpacket_ops_group1.offset := 0, 0;
    ~unix_dgram_ops_group3.base, ~unix_dgram_ops_group3.offset := 0, 0;
    ~unix_dgram_ops_group0.base, ~unix_dgram_ops_group0.offset := 0, 0;
    ~unix_stream_ops_group0.base, ~unix_stream_ops_group0.offset := 0, 0;
    ~unix_stream_ops_group5.base, ~unix_stream_ops_group5.offset := 0, 0;
    ~unix_seqpacket_ops_group0.base, ~unix_seqpacket_ops_group0.offset := 0, 0;
    ~unix_net_ops_group0.base, ~unix_net_ops_group0.offset := 0, 0;
    ~unix_seqpacket_ops_group3.base, ~unix_seqpacket_ops_group3.offset := 0, 0;
    ~unix_dgram_ops_group4.base, ~unix_dgram_ops_group4.offset := 0, 0;
    ~unix_seq_ops_group1.base, ~unix_seq_ops_group1.offset := 0, 0;
    ~unix_seq_ops_group3.base, ~unix_seq_ops_group3.offset := 0, 0;
    ~unix_dgram_ops_group1.base, ~unix_dgram_ops_group1.offset := 0, 0;
    ~unix_seq_fops_group1.base, ~unix_seq_fops_group1.offset := 0, 0;
    ~unix_dgram_ops_group2.base, ~unix_dgram_ops_group2.offset := 0, 0;
    ~unix_stream_ops_group2.base, ~unix_stream_ops_group2.offset := 0, 0;
    call ~#unix_socket_table.base, ~#unix_socket_table.offset := #Ultimate.alloc(4096);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 16 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 24 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 32 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 40 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 48 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 56 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 64 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 72 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 80 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 88 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 96 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 104 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 112 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 120 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 128 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 136 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 144 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 152 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 160 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 168 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 176 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 184 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 192 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 200 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 208 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 216 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 224 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 232 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 240 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 248 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 256 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 264 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 272 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 280 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 288 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 296 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 304 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 312 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 320 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 328 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 336 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 344 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 352 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 360 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 368 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 376 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 384 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 392 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 400 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 408 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 416 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 424 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 432 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 440 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 448 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 456 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 464 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 472 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 480 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 488 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 496 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 504 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 512 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 520 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 528 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 536 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 544 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 552 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 560 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 568 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 576 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 584 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 592 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 600 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 608 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 616 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 624 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 632 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 640 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 648 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 656 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 664 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 672 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 680 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 688 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 696 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 704 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 712 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 720 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 728 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 736 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 744 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 752 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 760 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 768 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 776 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 784 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 792 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 800 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 808 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 816 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 824 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 832 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 840 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 848 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 856 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 864 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 872 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 880 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 888 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 896 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 904 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 912 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 920 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 928 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 936 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 944 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 952 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 960 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 968 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 976 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 984 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 992 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1000 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1008 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1016 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1024 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1032 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1040 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1048 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1056 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1064 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1072 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1080 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1088 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1096 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1104 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1112 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1120 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1128 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1136 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1144 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1152 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1160 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1168 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1176 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1184 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1192 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1200 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1208 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1216 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1224 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1232 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1240 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1248 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1256 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1264 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1272 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1280 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1288 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1296 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1304 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1312 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1320 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1328 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1336 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1344 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1352 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1360 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1368 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1376 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1384 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1392 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1400 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1408 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1416 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1424 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1432 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1440 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1448 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1456 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1464 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1472 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1480 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1488 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1496 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1504 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1512 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1520 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1528 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1536 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1544 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1552 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1560 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1568 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1576 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1584 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1592 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1600 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1608 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1616 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1624 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1632 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1640 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1648 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1656 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1664 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1672 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1680 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1688 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1696 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1704 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1712 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1720 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1728 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1736 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1744 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1752 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1760 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1768 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1776 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1784 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1792 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1800 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1808 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1816 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1824 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1832 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1840 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1848 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1856 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1864 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1872 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1880 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1888 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1896 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1904 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1912 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1920 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1928 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1936 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1944 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1952 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1960 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1968 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1976 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1984 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 1992 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2000 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2008 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2016 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2024 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2032 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2040 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2048 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2056 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2064 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2072 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2080 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2088 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2096 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2104 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2112 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2120 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2128 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2136 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2144 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2152 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2160 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2168 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2176 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2184 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2192 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2200 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2208 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2216 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2224 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2232 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2240 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2248 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2256 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2264 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2272 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2280 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2288 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2296 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2304 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2312 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2320 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2328 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2336 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2344 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2352 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2360 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2368 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2376 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2384 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2392 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2400 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2408 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2416 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2424 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2432 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2440 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2448 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2456 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2464 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2472 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2480 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2488 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2496 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2504 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2512 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2520 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2528 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2536 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2544 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2552 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2560 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2568 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2576 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2584 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2592 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2600 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2608 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2616 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2624 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2632 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2640 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2648 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2656 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2664 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2672 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2680 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2688 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2696 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2704 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2712 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2720 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2728 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2736 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2744 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2752 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2760 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2768 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2776 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2784 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2792 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2800 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2808 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2816 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2824 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2832 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2840 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2848 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2856 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2864 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2872 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2880 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2888 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2896 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2904 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2912 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2920 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2928 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2936 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2944 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2952 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2960 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2968 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2976 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2984 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 2992 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3000 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3008 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3016 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3024 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3032 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3040 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3048 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3056 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3064 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3072 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3080 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3088 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3096 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3104 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3112 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3120 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3128 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3136 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3144 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3152 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3160 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3168 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3176 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3184 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3192 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3200 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3208 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3216 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3224 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3232 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3240 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3248 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3256 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3264 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3272 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3280 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3288 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3296 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3304 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3312 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3320 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3328 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3336 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3344 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3352 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3360 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3368 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3376 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3384 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3392 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3400 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3408 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3416 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3424 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3432 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3440 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3448 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3456 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3464 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3472 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3480 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3488 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3496 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3504 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3512 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3520 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3528 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3536 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3544 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3552 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3560 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3568 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3576 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3584 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3592 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3600 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3608 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3616 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3624 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3632 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3640 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3648 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3656 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3664 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3672 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3680 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3688 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3696 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3704 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3712 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3720 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3728 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3736 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3744 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3752 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3760 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3768 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3776 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3784 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3792 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3800 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3808 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3816 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3824 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3832 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3840 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3848 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3856 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3864 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3872 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3880 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3888 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3896 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3904 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3912 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3920 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3928 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3936 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3944 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3952 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3960 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3968 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3976 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3984 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 3992 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 4000 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 4008 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 4016 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 4024 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 4032 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 4040 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 4048 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 4056 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 4064 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 4072 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 4080 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_socket_table.base, ~#unix_socket_table.offset + 4088 + 0, 8);
    call ~#unix_table_lock.base, ~#unix_table_lock.offset := #Ultimate.alloc(68);
    call write~int(0, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union1639.head, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union1639.tail, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(3735899821, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 4, 4);
    call write~int(4294967295, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 8, 4);
    call write~$Pointer$(0, -1, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 20 + 8 + 8, 8);
    call #t~nondet480.base, #t~nondet480.offset := #Ultimate.alloc(16);
    call write~$Pointer$(#t~nondet480.base, #t~nondet480.offset, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union1640.__padding[0], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0, 1);
    call write~int(#t~union1640.__padding[1], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union1640.__padding[2], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[3], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[4], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[5], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[6], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[7], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[8], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[9], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[10], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[11], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[12], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[13], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[14], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[15], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[16], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[17], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[18], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[19], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[20], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[21], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[22], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1640.__padding[23], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union1640.dep_map.key.base, #t~union1640.dep_map.key.offset, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union1640.dep_map.class_cache.base[0], #t~union1640.dep_map.class_cache.offset[0], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union1640.dep_map.class_cache.base[1], #t~union1640.dep_map.class_cache.offset[1], ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union1640.dep_map.name.base, #t~union1640.dep_map.name.offset, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union1640.dep_map.cpu, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union1640.dep_map.ip, ~#unix_table_lock.base, ~#unix_table_lock.offset + 0 + 0 + 24 + 36, 8);
    havoc #t~union1639.head, #t~union1639.tail;
    havoc #t~nondet480.base, #t~nondet480.offset;
    havoc #t~union1640.__padding, #t~union1640.dep_map.key.base, #t~union1640.dep_map.key.offset, #t~union1640.dep_map.class_cache.base, #t~union1640.dep_map.class_cache.offset, #t~union1640.dep_map.name.base, #t~union1640.dep_map.name.offset, #t~union1640.dep_map.cpu, #t~union1640.dep_map.ip;
    call ~#unix_nr_socks.base, ~#unix_nr_socks.offset := #Ultimate.alloc(8);
    call write~int(0, ~#unix_nr_socks.base, ~#unix_nr_socks.offset + 0, 8);
    call ~#unix_stream_ops.base, ~#unix_stream_ops.offset := #Ultimate.alloc(180);
    call write~int(1, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 0, 4);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 4, 8);
    call write~$Pointer$(#funAddr~unix_release.base, #funAddr~unix_release.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 12, 8);
    call write~$Pointer$(#funAddr~unix_bind.base, #funAddr~unix_bind.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 20, 8);
    call write~$Pointer$(#funAddr~unix_stream_connect.base, #funAddr~unix_stream_connect.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 28, 8);
    call write~$Pointer$(#funAddr~unix_socketpair.base, #funAddr~unix_socketpair.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 36, 8);
    call write~$Pointer$(#funAddr~unix_accept.base, #funAddr~unix_accept.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 44, 8);
    call write~$Pointer$(#funAddr~unix_getname.base, #funAddr~unix_getname.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 52, 8);
    call write~$Pointer$(#funAddr~unix_poll.base, #funAddr~unix_poll.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 60, 8);
    call write~$Pointer$(#funAddr~unix_ioctl.base, #funAddr~unix_ioctl.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 68, 8);
    call write~$Pointer$(0, 0, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 76, 8);
    call write~$Pointer$(#funAddr~unix_listen.base, #funAddr~unix_listen.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 84, 8);
    call write~$Pointer$(#funAddr~unix_shutdown.base, #funAddr~unix_shutdown.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 92, 8);
    call write~$Pointer$(#funAddr~sock_no_setsockopt.base, #funAddr~sock_no_setsockopt.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 100, 8);
    call write~$Pointer$(#funAddr~sock_no_getsockopt.base, #funAddr~sock_no_getsockopt.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 108, 8);
    call write~$Pointer$(0, 0, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 116, 8);
    call write~$Pointer$(0, 0, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 124, 8);
    call write~$Pointer$(#funAddr~unix_stream_sendmsg.base, #funAddr~unix_stream_sendmsg.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 132, 8);
    call write~$Pointer$(#funAddr~unix_stream_recvmsg.base, #funAddr~unix_stream_recvmsg.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 140, 8);
    call write~$Pointer$(#funAddr~sock_no_mmap.base, #funAddr~sock_no_mmap.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 148, 8);
    call write~$Pointer$(#funAddr~sock_no_sendpage.base, #funAddr~sock_no_sendpage.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 156, 8);
    call write~$Pointer$(0, 0, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 164, 8);
    call write~$Pointer$(#funAddr~unix_set_peek_off.base, #funAddr~unix_set_peek_off.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset + 172, 8);
    call ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset := #Ultimate.alloc(180);
    call write~int(1, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 0, 4);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 4, 8);
    call write~$Pointer$(#funAddr~unix_release.base, #funAddr~unix_release.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 12, 8);
    call write~$Pointer$(#funAddr~unix_bind.base, #funAddr~unix_bind.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 20, 8);
    call write~$Pointer$(#funAddr~unix_dgram_connect.base, #funAddr~unix_dgram_connect.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 28, 8);
    call write~$Pointer$(#funAddr~unix_socketpair.base, #funAddr~unix_socketpair.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 36, 8);
    call write~$Pointer$(#funAddr~sock_no_accept.base, #funAddr~sock_no_accept.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 44, 8);
    call write~$Pointer$(#funAddr~unix_getname.base, #funAddr~unix_getname.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 52, 8);
    call write~$Pointer$(#funAddr~unix_dgram_poll.base, #funAddr~unix_dgram_poll.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 60, 8);
    call write~$Pointer$(#funAddr~unix_ioctl.base, #funAddr~unix_ioctl.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 68, 8);
    call write~$Pointer$(0, 0, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 76, 8);
    call write~$Pointer$(#funAddr~sock_no_listen.base, #funAddr~sock_no_listen.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 84, 8);
    call write~$Pointer$(#funAddr~unix_shutdown.base, #funAddr~unix_shutdown.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 92, 8);
    call write~$Pointer$(#funAddr~sock_no_setsockopt.base, #funAddr~sock_no_setsockopt.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 100, 8);
    call write~$Pointer$(#funAddr~sock_no_getsockopt.base, #funAddr~sock_no_getsockopt.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 108, 8);
    call write~$Pointer$(0, 0, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 116, 8);
    call write~$Pointer$(0, 0, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 124, 8);
    call write~$Pointer$(#funAddr~unix_dgram_sendmsg.base, #funAddr~unix_dgram_sendmsg.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 132, 8);
    call write~$Pointer$(#funAddr~unix_dgram_recvmsg.base, #funAddr~unix_dgram_recvmsg.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 140, 8);
    call write~$Pointer$(#funAddr~sock_no_mmap.base, #funAddr~sock_no_mmap.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 148, 8);
    call write~$Pointer$(#funAddr~sock_no_sendpage.base, #funAddr~sock_no_sendpage.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 156, 8);
    call write~$Pointer$(0, 0, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 164, 8);
    call write~$Pointer$(#funAddr~unix_set_peek_off.base, #funAddr~unix_set_peek_off.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset + 172, 8);
    call ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset := #Ultimate.alloc(180);
    call write~int(1, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 0, 4);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 4, 8);
    call write~$Pointer$(#funAddr~unix_release.base, #funAddr~unix_release.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 12, 8);
    call write~$Pointer$(#funAddr~unix_bind.base, #funAddr~unix_bind.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 20, 8);
    call write~$Pointer$(#funAddr~unix_stream_connect.base, #funAddr~unix_stream_connect.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 28, 8);
    call write~$Pointer$(#funAddr~unix_socketpair.base, #funAddr~unix_socketpair.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 36, 8);
    call write~$Pointer$(#funAddr~unix_accept.base, #funAddr~unix_accept.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 44, 8);
    call write~$Pointer$(#funAddr~unix_getname.base, #funAddr~unix_getname.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 52, 8);
    call write~$Pointer$(#funAddr~unix_dgram_poll.base, #funAddr~unix_dgram_poll.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 60, 8);
    call write~$Pointer$(#funAddr~unix_ioctl.base, #funAddr~unix_ioctl.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 68, 8);
    call write~$Pointer$(0, 0, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 76, 8);
    call write~$Pointer$(#funAddr~unix_listen.base, #funAddr~unix_listen.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 84, 8);
    call write~$Pointer$(#funAddr~unix_shutdown.base, #funAddr~unix_shutdown.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 92, 8);
    call write~$Pointer$(#funAddr~sock_no_setsockopt.base, #funAddr~sock_no_setsockopt.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 100, 8);
    call write~$Pointer$(#funAddr~sock_no_getsockopt.base, #funAddr~sock_no_getsockopt.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 108, 8);
    call write~$Pointer$(0, 0, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 116, 8);
    call write~$Pointer$(0, 0, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 124, 8);
    call write~$Pointer$(#funAddr~unix_seqpacket_sendmsg.base, #funAddr~unix_seqpacket_sendmsg.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 132, 8);
    call write~$Pointer$(#funAddr~unix_seqpacket_recvmsg.base, #funAddr~unix_seqpacket_recvmsg.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 140, 8);
    call write~$Pointer$(#funAddr~sock_no_mmap.base, #funAddr~sock_no_mmap.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 148, 8);
    call write~$Pointer$(#funAddr~sock_no_sendpage.base, #funAddr~sock_no_sendpage.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 156, 8);
    call write~$Pointer$(0, 0, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 164, 8);
    call write~$Pointer$(#funAddr~unix_set_peek_off.base, #funAddr~unix_set_peek_off.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset + 172, 8);
    call ~#unix_proto.base, ~#unix_proto.offset := #Ultimate.alloc(401);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 192, 8);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 200, 4);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 204, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 212, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 220, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 228, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 236, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 244, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 252, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 260, 8);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 268, 4);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 272, 1);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 273, 8);
    call write~int(1728, ~#unix_proto.base, ~#unix_proto.offset + 281, 4);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 285, 4);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 289, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 297, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 305, 8);
    call write~$Pointer$(#t~union1641.base, #t~union1641.offset, ~#unix_proto.base, ~#unix_proto.offset + 313 + 0, 8);
    call write~$Pointer$(#t~union1642.base, #t~union1642.offset, ~#unix_proto.base, ~#unix_proto.offset + 313 + 0, 8);
    call write~$Pointer$(#t~union1643.base, #t~union1643.offset, ~#unix_proto.base, ~#unix_proto.offset + 313 + 0, 8);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#unix_proto.base, ~#unix_proto.offset + 321, 8);
    call write~int(85, ~#unix_proto.base, ~#unix_proto.offset + 329 + 0, 1);
    call write~int(78, ~#unix_proto.base, ~#unix_proto.offset + 329 + 1, 1);
    call write~int(73, ~#unix_proto.base, ~#unix_proto.offset + 329 + 2, 1);
    call write~int(88, ~#unix_proto.base, ~#unix_proto.offset + 329 + 3, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 4, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 5, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 6, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 7, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 8, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 9, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 10, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 11, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 12, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 13, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 14, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 15, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 16, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 17, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 18, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 19, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 20, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 21, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 22, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 23, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 24, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 25, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 26, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 27, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 28, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 29, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 30, 1);
    call write~int(0, ~#unix_proto.base, ~#unix_proto.offset + 329 + 31, 1);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 361 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 361 + 8, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 377, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 385, 8);
    call write~$Pointer$(0, 0, ~#unix_proto.base, ~#unix_proto.offset + 393, 8);
    havoc #t~union1641.base, #t~union1641.offset;
    havoc #t~union1642.base, #t~union1642.offset;
    havoc #t~union1643.base, #t~union1643.offset;
    call ~#af_unix_sk_receive_queue_lock_key.base, ~#af_unix_sk_receive_queue_lock_key.offset := #Ultimate.alloc(8);
    call write~int(0, ~#af_unix_sk_receive_queue_lock_key.base, ~#af_unix_sk_receive_queue_lock_key.offset + 0 + 0 + 0, 1);
    call write~int(0, ~#af_unix_sk_receive_queue_lock_key.base, ~#af_unix_sk_receive_queue_lock_key.offset + 0 + 1 + 0, 1);
    call write~int(0, ~#af_unix_sk_receive_queue_lock_key.base, ~#af_unix_sk_receive_queue_lock_key.offset + 0 + 2 + 0, 1);
    call write~int(0, ~#af_unix_sk_receive_queue_lock_key.base, ~#af_unix_sk_receive_queue_lock_key.offset + 0 + 3 + 0, 1);
    call write~int(0, ~#af_unix_sk_receive_queue_lock_key.base, ~#af_unix_sk_receive_queue_lock_key.offset + 0 + 4 + 0, 1);
    call write~int(0, ~#af_unix_sk_receive_queue_lock_key.base, ~#af_unix_sk_receive_queue_lock_key.offset + 0 + 5 + 0, 1);
    call write~int(0, ~#af_unix_sk_receive_queue_lock_key.base, ~#af_unix_sk_receive_queue_lock_key.offset + 0 + 6 + 0, 1);
    call write~int(0, ~#af_unix_sk_receive_queue_lock_key.base, ~#af_unix_sk_receive_queue_lock_key.offset + 0 + 7 + 0, 1);
    call ~#unix_seq_ops.base, ~#unix_seq_ops.offset := #Ultimate.alloc(32);
    call write~$Pointer$(#funAddr~unix_seq_start.base, #funAddr~unix_seq_start.offset, ~#unix_seq_ops.base, ~#unix_seq_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~unix_seq_stop.base, #funAddr~unix_seq_stop.offset, ~#unix_seq_ops.base, ~#unix_seq_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~unix_seq_next.base, #funAddr~unix_seq_next.offset, ~#unix_seq_ops.base, ~#unix_seq_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~unix_seq_show.base, #funAddr~unix_seq_show.offset, ~#unix_seq_ops.base, ~#unix_seq_ops.offset + 24, 8);
    call ~#unix_seq_fops.base, ~#unix_seq_fops.offset := #Ultimate.alloc(232);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 0, 8);
    call write~$Pointer$(#funAddr~seq_lseek.base, #funAddr~seq_lseek.offset, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 8, 8);
    call write~$Pointer$(#funAddr~seq_read.base, #funAddr~seq_read.offset, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 96, 8);
    call write~$Pointer$(#funAddr~unix_seq_open.base, #funAddr~unix_seq_open.offset, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 112, 8);
    call write~$Pointer$(#funAddr~seq_release_net.base, #funAddr~seq_release_net.offset, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#unix_seq_fops.base, ~#unix_seq_fops.offset + 224, 8);
    call ~#unix_family_ops.base, ~#unix_family_ops.offset := #Ultimate.alloc(20);
    call write~int(1, ~#unix_family_ops.base, ~#unix_family_ops.offset + 0, 4);
    call write~$Pointer$(#funAddr~unix_create.base, #funAddr~unix_create.offset, ~#unix_family_ops.base, ~#unix_family_ops.offset + 4, 8);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#unix_family_ops.base, ~#unix_family_ops.offset + 12, 8);
    call ~#unix_net_ops.base, ~#unix_net_ops.offset := #Ultimate.alloc(52);
    call write~$Pointer$(0, 0, ~#unix_net_ops.base, ~#unix_net_ops.offset + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_net_ops.base, ~#unix_net_ops.offset + 0 + 8, 8);
    call write~$Pointer$(#funAddr~unix_net_init.base, #funAddr~unix_net_init.offset, ~#unix_net_ops.base, ~#unix_net_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~unix_net_exit.base, #funAddr~unix_net_exit.offset, ~#unix_net_ops.base, ~#unix_net_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#unix_net_ops.base, ~#unix_net_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#unix_net_ops.base, ~#unix_net_ops.offset + 40, 8);
    call write~int(0, ~#unix_net_ops.base, ~#unix_net_ops.offset + 48, 4);
    call ~#gc_inflight_list.base, ~#gc_inflight_list.offset := #Ultimate.alloc(16);
    call write~$Pointer$(~#gc_inflight_list.base, ~#gc_inflight_list.offset, ~#gc_inflight_list.base, ~#gc_inflight_list.offset + 0, 8);
    call write~$Pointer$(~#gc_inflight_list.base, ~#gc_inflight_list.offset, ~#gc_inflight_list.base, ~#gc_inflight_list.offset + 8, 8);
    call ~#gc_candidates.base, ~#gc_candidates.offset := #Ultimate.alloc(16);
    call write~$Pointer$(~#gc_candidates.base, ~#gc_candidates.offset, ~#gc_candidates.base, ~#gc_candidates.offset + 0, 8);
    call write~$Pointer$(~#gc_candidates.base, ~#gc_candidates.offset, ~#gc_candidates.base, ~#gc_candidates.offset + 8, 8);
    call ~#unix_gc_lock.base, ~#unix_gc_lock.offset := #Ultimate.alloc(68);
    call write~int(0, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union1644.head, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union1644.tail, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(3735899821, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 4, 4);
    call write~int(4294967295, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 8, 4);
    call write~$Pointer$(0, -1, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 20 + 8 + 8, 8);
    call #t~nondet1546.base, #t~nondet1546.offset := #Ultimate.alloc(13);
    call write~$Pointer$(#t~nondet1546.base, #t~nondet1546.offset, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union1645.__padding[0], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0, 1);
    call write~int(#t~union1645.__padding[1], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union1645.__padding[2], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[3], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[4], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[5], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[6], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[7], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[8], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[9], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[10], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[11], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[12], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[13], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[14], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[15], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[16], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[17], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[18], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[19], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[20], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[21], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[22], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1645.__padding[23], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union1645.dep_map.key.base, #t~union1645.dep_map.key.offset, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union1645.dep_map.class_cache.base[0], #t~union1645.dep_map.class_cache.offset[0], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union1645.dep_map.class_cache.base[1], #t~union1645.dep_map.class_cache.offset[1], ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union1645.dep_map.name.base, #t~union1645.dep_map.name.offset, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union1645.dep_map.cpu, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union1645.dep_map.ip, ~#unix_gc_lock.base, ~#unix_gc_lock.offset + 0 + 0 + 24 + 36, 8);
    havoc #t~union1644.head, #t~union1644.tail;
    havoc #t~nondet1546.base, #t~nondet1546.offset;
    havoc #t~union1645.__padding, #t~union1645.dep_map.key.base, #t~union1645.dep_map.key.offset, #t~union1645.dep_map.class_cache.base, #t~union1645.dep_map.class_cache.offset, #t~union1645.dep_map.name.base, #t~union1645.dep_map.name.offset, #t~union1645.dep_map.cpu, #t~union1645.dep_map.ip;
    call ~#unix_gc_wait.base, ~#unix_gc_wait.offset := #Ultimate.alloc(84);
    call write~int(0, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union1646.head, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union1646.tail, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(3735899821, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 4, 4);
    call write~int(4294967295, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, -1, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call #t~nondet1547.base, #t~nondet1547.offset := #Ultimate.alloc(18);
    call write~$Pointer$(#t~nondet1547.base, #t~nondet1547.offset, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union1647.__padding[0], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union1647.__padding[1], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union1647.__padding[2], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[3], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[4], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[5], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[6], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[7], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[8], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[9], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[10], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[11], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[12], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[13], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[14], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[15], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[16], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[17], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[18], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[19], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[20], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[21], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[22], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1647.__padding[23], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union1647.dep_map.key.base, #t~union1647.dep_map.key.offset, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union1647.dep_map.class_cache.base[0], #t~union1647.dep_map.class_cache.offset[0], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union1647.dep_map.class_cache.base[1], #t~union1647.dep_map.class_cache.offset[1], ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union1647.dep_map.name.base, #t~union1647.dep_map.name.offset, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union1647.dep_map.cpu, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union1647.dep_map.ip, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(~#unix_gc_wait.base, ~#unix_gc_wait.offset + 68, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 68 + 0, 8);
    call write~$Pointer$(~#unix_gc_wait.base, ~#unix_gc_wait.offset + 68, ~#unix_gc_wait.base, ~#unix_gc_wait.offset + 68 + 8, 8);
    havoc #t~union1646.head, #t~union1646.tail;
    havoc #t~nondet1547.base, #t~nondet1547.offset;
    havoc #t~union1647.__padding, #t~union1647.dep_map.key.base, #t~union1647.dep_map.key.offset, #t~union1647.dep_map.class_cache.base, #t~union1647.dep_map.class_cache.offset, #t~union1647.dep_map.name.base, #t~union1647.dep_map.name.offset, #t~union1647.dep_map.cpu, #t~union1647.dep_map.ip;
    ~gc_in_progress := 0;
    call ~#unix_table.base, ~#unix_table.offset := #Ultimate.alloc(124);
    call #t~nondet1627.base, #t~nondet1627.offset := #Ultimate.alloc(15);
    call write~$Pointer$(#t~nondet1627.base, #t~nondet1627.offset, ~#unix_table.base, ~#unix_table.offset + 0 + 0, 8);
    call write~$Pointer$(~#init_net.base, ~#init_net.offset + 616 + 0, ~#unix_table.base, ~#unix_table.offset + 0 + 8, 8);
    call write~int(4, ~#unix_table.base, ~#unix_table.offset + 0 + 16, 4);
    call write~int(420, ~#unix_table.base, ~#unix_table.offset + 0 + 20, 2);
    call write~$Pointer$(0, 0, ~#unix_table.base, ~#unix_table.offset + 0 + 22, 8);
    call write~$Pointer$(#funAddr~proc_dointvec.base, #funAddr~proc_dointvec.offset, ~#unix_table.base, ~#unix_table.offset + 0 + 30, 8);
    call write~$Pointer$(0, 0, ~#unix_table.base, ~#unix_table.offset + 0 + 38, 8);
    call write~$Pointer$(0, 0, ~#unix_table.base, ~#unix_table.offset + 0 + 46, 8);
    call write~$Pointer$(0, 0, ~#unix_table.base, ~#unix_table.offset + 0 + 54, 8);
    call write~$Pointer$(0, 0, ~#unix_table.base, ~#unix_table.offset + 62 + 0, 8);
    call write~$Pointer$(0, 0, ~#unix_table.base, ~#unix_table.offset + 62 + 8, 8);
    call write~int(0, ~#unix_table.base, ~#unix_table.offset + 62 + 16, 4);
    call write~int(0, ~#unix_table.base, ~#unix_table.offset + 62 + 20, 2);
    call write~$Pointer$(0, 0, ~#unix_table.base, ~#unix_table.offset + 62 + 22, 8);
    call write~$Pointer$(0, 0, ~#unix_table.base, ~#unix_table.offset + 62 + 30, 8);
    call write~$Pointer$(0, 0, ~#unix_table.base, ~#unix_table.offset + 62 + 38, 8);
    call write~$Pointer$(0, 0, ~#unix_table.base, ~#unix_table.offset + 62 + 46, 8);
    call write~$Pointer$(0, 0, ~#unix_table.base, ~#unix_table.offset + 62 + 54, 8);
    havoc #t~nondet1627.base, #t~nondet1627.offset;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_6, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_state_variable_2, ~ldv_state_variable_3, ~ref_cnt, ~unix_seq_ops_group2.base, ~unix_seq_ops_group2.offset, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_state_variable_4, ~unix_tot_inflight, ~ldv_retval_0, ~ldv_retval_1.base, ~ldv_retval_1.offset, ~ldv_retval_3, ~ldv_retval_2.base, ~ldv_retval_2.offset, ~ldv_spin, ~unix_seqpacket_ops_group2.base, ~unix_seqpacket_ops_group2.offset, ~unix_stream_ops_group3.base, ~unix_stream_ops_group3.offset, ~unix_seqpacket_ops_group5.base, ~unix_seqpacket_ops_group5.offset, ~unix_dgram_ops_group5.base, ~unix_dgram_ops_group5.offset, ~unix_seqpacket_ops_group4.base, ~unix_seqpacket_ops_group4.offset, ~unix_stream_ops_group1.base, ~unix_stream_ops_group1.offset, ~unix_stream_ops_group4.base, ~unix_stream_ops_group4.offset, ~unix_seq_fops_group2.base, ~unix_seq_fops_group2.offset, ~unix_seqpacket_ops_group1.base, ~unix_seqpacket_ops_group1.offset, ~unix_dgram_ops_group3.base, ~unix_dgram_ops_group3.offset, ~unix_dgram_ops_group0.base, ~unix_dgram_ops_group0.offset, ~unix_stream_ops_group0.base, ~unix_stream_ops_group0.offset, ~unix_stream_ops_group5.base, ~unix_stream_ops_group5.offset, ~unix_seqpacket_ops_group0.base, ~unix_seqpacket_ops_group0.offset, ~unix_net_ops_group0.base, ~unix_net_ops_group0.offset, ~unix_seqpacket_ops_group3.base, ~unix_seqpacket_ops_group3.offset, ~unix_dgram_ops_group4.base, ~unix_dgram_ops_group4.offset, ~unix_seq_ops_group1.base, ~unix_seq_ops_group1.offset, ~unix_seq_ops_group3.base, ~unix_seq_ops_group3.offset, ~unix_dgram_ops_group1.base, ~unix_dgram_ops_group1.offset, ~unix_seq_fops_group1.base, ~unix_seq_fops_group1.offset, ~unix_dgram_ops_group2.base, ~unix_dgram_ops_group2.offset, ~unix_stream_ops_group2.base, ~unix_stream_ops_group2.offset, ~#unix_socket_table.base, ~#unix_socket_table.offset, ~#unix_table_lock.base, ~#unix_table_lock.offset, ~#unix_nr_socks.base, ~#unix_nr_socks.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset, ~#unix_proto.base, ~#unix_proto.offset, ~#af_unix_sk_receive_queue_lock_key.base, ~#af_unix_sk_receive_queue_lock_key.offset, ~#unix_seq_ops.base, ~#unix_seq_ops.offset, ~#unix_seq_fops.base, ~#unix_seq_fops.offset, ~#unix_family_ops.base, ~#unix_family_ops.offset, ~#unix_net_ops.base, ~#unix_net_ops.offset, ~#gc_inflight_list.base, ~#gc_inflight_list.offset, ~#gc_candidates.base, ~#gc_candidates.offset, ~#unix_gc_lock.base, ~#unix_gc_lock.offset, ~#unix_gc_wait.base, ~#unix_gc_wait.offset, ~gc_in_progress, ~#unix_table.base, ~#unix_table.offset, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, #valid, #length;

implementation ldv_error() returns (){
  loc11:
    assume !false;
    goto loc12;
  loc12:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation kzalloc(#in~size : int, #in~flags : int) returns (#res.base : int, #res.offset : int){
    var ~size : int;
    var ~flags : int;

  loc13:
    ~size := #in~size;
    ~flags := #in~flags;
    call ldv_check_alloc_flags(~flags);
    return;
}

procedure kzalloc(#in~size : int, #in~flags : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~nondet126 : int;
    var #t~malloc127.base : int, #t~malloc127.offset : int;
    var ~size : int;
    var ~p~207.base : int, ~p~207.offset : int;
    var ~tmp~207.base : int, ~tmp~207.offset : int;
    var ~tmp___0~207 : int;

  loc14:
    ~size := #in~size;
    havoc ~p~207.base, ~p~207.offset;
    havoc ~tmp~207.base, ~tmp~207.offset;
    havoc ~tmp___0~207;
    assume -2147483648 <= #t~nondet126 && #t~nondet126 <= 2147483647;
    ~tmp___0~207 := #t~nondet126;
    havoc #t~nondet126;
    assume ~tmp___0~207 != 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation read_pnet(#in~pnet.base : int, #in~pnet.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~mem256.base : int, #t~mem256.offset : int;
    var ~pnet.base : int, ~pnet.offset : int;

  loc15:
    ~pnet.base, ~pnet.offset := #in~pnet.base, #in~pnet.offset;
    call #t~mem256.base, #t~mem256.offset := read~$Pointer$(~pnet.base, ~pnet.offset, 8);
    #res.base, #res.offset := #t~mem256.base, #t~mem256.offset;
    havoc #t~mem256.base, #t~mem256.offset;
    assume true;
    return;
}

procedure read_pnet(#in~pnet.base : int, #in~pnet.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation ULTIMATE.start() returns (){
    var #t~ret1648 : int;

  loc16:
    call ULTIMATE.init();
    call #t~ret1648 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_state_variable_6, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_state_variable_2, ~ldv_state_variable_3, ~ref_cnt, ~unix_seq_ops_group2.base, ~unix_seq_ops_group2.offset, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_state_variable_4, ~unix_tot_inflight, ~ldv_retval_0, ~ldv_retval_1.base, ~ldv_retval_1.offset, ~ldv_retval_3, ~ldv_retval_2.base, ~ldv_retval_2.offset, ~ldv_spin, ~unix_seqpacket_ops_group2.base, ~unix_seqpacket_ops_group2.offset, ~unix_stream_ops_group3.base, ~unix_stream_ops_group3.offset, ~unix_seqpacket_ops_group5.base, ~unix_seqpacket_ops_group5.offset, ~unix_dgram_ops_group5.base, ~unix_dgram_ops_group5.offset, ~unix_seqpacket_ops_group4.base, ~unix_seqpacket_ops_group4.offset, ~unix_stream_ops_group1.base, ~unix_stream_ops_group1.offset, ~unix_stream_ops_group4.base, ~unix_stream_ops_group4.offset, ~unix_seq_fops_group2.base, ~unix_seq_fops_group2.offset, ~unix_seqpacket_ops_group1.base, ~unix_seqpacket_ops_group1.offset, ~unix_dgram_ops_group3.base, ~unix_dgram_ops_group3.offset, ~unix_dgram_ops_group0.base, ~unix_dgram_ops_group0.offset, ~unix_stream_ops_group0.base, ~unix_stream_ops_group0.offset, ~unix_stream_ops_group5.base, ~unix_stream_ops_group5.offset, ~unix_seqpacket_ops_group0.base, ~unix_seqpacket_ops_group0.offset, ~unix_net_ops_group0.base, ~unix_net_ops_group0.offset, ~unix_seqpacket_ops_group3.base, ~unix_seqpacket_ops_group3.offset, ~unix_dgram_ops_group4.base, ~unix_dgram_ops_group4.offset, ~unix_seq_ops_group1.base, ~unix_seq_ops_group1.offset, ~unix_seq_ops_group3.base, ~unix_seq_ops_group3.offset, ~unix_dgram_ops_group1.base, ~unix_dgram_ops_group1.offset, ~unix_seq_fops_group1.base, ~unix_seq_fops_group1.offset, ~unix_dgram_ops_group2.base, ~unix_dgram_ops_group2.offset, ~unix_stream_ops_group2.base, ~unix_stream_ops_group2.offset, ~#unix_socket_table.base, ~#unix_socket_table.offset, ~#unix_table_lock.base, ~#unix_table_lock.offset, ~#unix_nr_socks.base, ~#unix_nr_socks.offset, ~#unix_stream_ops.base, ~#unix_stream_ops.offset, ~#unix_dgram_ops.base, ~#unix_dgram_ops.offset, ~#unix_seqpacket_ops.base, ~#unix_seqpacket_ops.offset, ~#unix_proto.base, ~#unix_proto.offset, ~#af_unix_sk_receive_queue_lock_key.base, ~#af_unix_sk_receive_queue_lock_key.offset, ~#unix_seq_ops.base, ~#unix_seq_ops.offset, ~#unix_seq_fops.base, ~#unix_seq_fops.offset, ~#unix_family_ops.base, ~#unix_family_ops.offset, ~#unix_net_ops.base, ~#unix_net_ops.offset, ~#gc_inflight_list.base, ~#gc_inflight_list.offset, ~#gc_candidates.base, ~#gc_candidates.offset, ~#unix_gc_lock.base, ~#unix_gc_lock.offset, ~#unix_gc_wait.base, ~#unix_gc_wait.offset, ~gc_in_progress, ~#unix_table.base, ~#unix_table.offset, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_2, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_2.base, ~ldv_retval_2.offset, ~ldv_retval_1.base, ~ldv_retval_1.offset, ~ldv_retval_3;
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~unix_net_ops_group0.base, ~unix_net_ops_group0.offset, ~unix_seq_fops_group1.base, ~unix_seq_fops_group1.offset, ~unix_seq_fops_group2.base, ~unix_seq_fops_group2.offset, ~unix_stream_ops_group3.base, ~unix_stream_ops_group3.offset, ~unix_stream_ops_group0.base, ~unix_stream_ops_group0.offset, ~unix_stream_ops_group4.base, ~unix_stream_ops_group4.offset, ~unix_stream_ops_group5.base, ~unix_stream_ops_group5.offset, ~unix_stream_ops_group1.base, ~unix_stream_ops_group1.offset, ~unix_stream_ops_group2.base, ~unix_stream_ops_group2.offset, ~unix_dgram_ops_group3.base, ~unix_dgram_ops_group3.offset, ~unix_dgram_ops_group0.base, ~unix_dgram_ops_group0.offset, ~unix_dgram_ops_group4.base, ~unix_dgram_ops_group4.offset, ~unix_dgram_ops_group5.base, ~unix_dgram_ops_group5.offset, ~unix_dgram_ops_group1.base, ~unix_dgram_ops_group1.offset, ~unix_dgram_ops_group2.base, ~unix_dgram_ops_group2.offset, ~unix_seqpacket_ops_group3.base, ~unix_seqpacket_ops_group3.offset, ~unix_seqpacket_ops_group0.base, ~unix_seqpacket_ops_group0.offset, ~unix_seqpacket_ops_group4.base, ~unix_seqpacket_ops_group4.offset, ~unix_seqpacket_ops_group5.base, ~unix_seqpacket_ops_group5.offset, ~unix_seqpacket_ops_group1.base, ~unix_seqpacket_ops_group1.offset, ~unix_seqpacket_ops_group2.base, ~unix_seqpacket_ops_group2.offset, ~unix_seq_ops_group1.base, ~unix_seq_ops_group1.offset, ~ldv_spin, ~unix_tot_inflight, ~gc_in_progress, ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_7, ~ldv_state_variable_2, ~ldv_state_variable_1, ~ldv_state_variable_4, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_5, ~ldv_retval_0, ~ldv_retval_2.base, ~ldv_retval_2.offset, ~ldv_retval_1.base, ~ldv_retval_1.offset, ~ldv_retval_3;

implementation sock_net(#in~sk.base : int, #in~sk.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~ret457.base : int, #t~ret457.offset : int;
    var ~sk.base : int, ~sk.offset : int;
    var ~tmp~510.base : int, ~tmp~510.offset : int;

  loc17:
    ~sk.base, ~sk.offset := #in~sk.base, #in~sk.offset;
    havoc ~tmp~510.base, ~tmp~510.offset;
    call #t~ret457.base, #t~ret457.offset := read_pnet(~sk.base, ~sk.offset + 0 + 49);
    ~tmp~510.base, ~tmp~510.offset := #t~ret457.base, #t~ret457.offset;
    havoc #t~ret457.base, #t~ret457.offset;
    #res.base, #res.offset := ~tmp~510.base, ~tmp~510.offset;
    assume true;
    return;
}

procedure sock_net(#in~sk.base : int, #in~sk.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation af_unix_init() returns (#res : int){
    var #t~ret1314 : int;
    var #t~nondet1315.base : int, #t~nondet1315.offset : int;
    var #t~ret1316 : int;
    var #t~ret1317 : int;
    var #t~ret1318 : int;
    var ~rc~1269 : int;

  loc18:
    havoc ~rc~1269;
    ~rc~1269 := -1;
    call #t~ret1314 := proto_register(~#unix_proto.base, ~#unix_proto.offset, 1);
    assume -2147483648 <= #t~ret1314 && #t~ret1314 <= 2147483647;
    ~rc~1269 := #t~ret1314;
    havoc #t~ret1314;
    assume !(~rc~1269 != 0);
    call #t~ret1317 := sock_register(~#unix_family_ops.base, ~#unix_family_ops.offset);
    assume -2147483648 <= #t~ret1317 && #t~ret1317 <= 2147483647;
    havoc #t~ret1317;
    call #t~ret1318 := register_pernet_subsys(~#unix_net_ops.base, ~#unix_net_ops.offset);
    assume -2147483648 <= #t~ret1318 && #t~ret1318 <= 2147483647;
    havoc #t~ret1318;
    #res := ~rc~1269;
    assume true;
    return;
}

procedure af_unix_init() returns (#res : int);
modifies #valid, #length;

implementation spin_lock(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc19:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    call ldv_spin_lock();
    call ldv_spin_lock_1(~lock.base, ~lock.offset);
    assume true;
    return;
}

procedure spin_lock(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ~ldv_spin;

implementation ldv_initialize_proto_ops_5() returns (){
    var #t~ret1334.base : int, #t~ret1334.offset : int;
    var #t~ret1335.base : int, #t~ret1335.offset : int;
    var #t~ret1336.base : int, #t~ret1336.offset : int;
    var #t~ret1337.base : int, #t~ret1337.offset : int;
    var #t~ret1338.base : int, #t~ret1338.offset : int;
    var #t~ret1339.base : int, #t~ret1339.offset : int;
    var ~tmp~1285.base : int, ~tmp~1285.offset : int;
    var ~tmp___0~1285.base : int, ~tmp___0~1285.offset : int;
    var ~tmp___1~1285.base : int, ~tmp___1~1285.offset : int;
    var ~tmp___2~1285.base : int, ~tmp___2~1285.offset : int;
    var ~tmp___3~1285.base : int, ~tmp___3~1285.offset : int;
    var ~tmp___4~1285.base : int, ~tmp___4~1285.offset : int;

  loc20:
    havoc ~tmp~1285.base, ~tmp~1285.offset;
    havoc ~tmp___0~1285.base, ~tmp___0~1285.offset;
    havoc ~tmp___1~1285.base, ~tmp___1~1285.offset;
    havoc ~tmp___2~1285.base, ~tmp___2~1285.offset;
    havoc ~tmp___3~1285.base, ~tmp___3~1285.offset;
    havoc ~tmp___4~1285.base, ~tmp___4~1285.offset;
    call #t~ret1334.base, #t~ret1334.offset := ldv_zalloc(512);
    ~tmp~1285.base, ~tmp~1285.offset := #t~ret1334.base, #t~ret1334.offset;
    havoc #t~ret1334.base, #t~ret1334.offset;
    ~unix_seqpacket_ops_group3.base, ~unix_seqpacket_ops_group3.offset := ~tmp~1285.base, ~tmp~1285.offset;
    call #t~ret1335.base, #t~ret1335.offset := ldv_zalloc(56);
    ~tmp___0~1285.base, ~tmp___0~1285.offset := #t~ret1335.base, #t~ret1335.offset;
    havoc #t~ret1335.base, #t~ret1335.offset;
    ~unix_seqpacket_ops_group0.base, ~unix_seqpacket_ops_group0.offset := ~tmp___0~1285.base, ~tmp___0~1285.offset;
    call #t~ret1336.base, #t~ret1336.offset := ldv_zalloc(88);
    ~tmp___1~1285.base, ~tmp___1~1285.offset := #t~ret1336.base, #t~ret1336.offset;
    havoc #t~ret1336.base, #t~ret1336.offset;
    ~unix_seqpacket_ops_group4.base, ~unix_seqpacket_ops_group4.offset := ~tmp___1~1285.base, ~tmp___1~1285.offset;
    call #t~ret1337.base, #t~ret1337.offset := ldv_zalloc(48);
    ~tmp___2~1285.base, ~tmp___2~1285.offset := #t~ret1337.base, #t~ret1337.offset;
    havoc #t~ret1337.base, #t~ret1337.offset;
    ~unix_seqpacket_ops_group5.base, ~unix_seqpacket_ops_group5.offset := ~tmp___2~1285.base, ~tmp___2~1285.offset;
    call #t~ret1338.base, #t~ret1338.offset := ldv_zalloc(16);
    ~tmp___3~1285.base, ~tmp___3~1285.offset := #t~ret1338.base, #t~ret1338.offset;
    havoc #t~ret1338.base, #t~ret1338.offset;
    ~unix_seqpacket_ops_group1.base, ~unix_seqpacket_ops_group1.offset := ~tmp___3~1285.base, ~tmp___3~1285.offset;
    call #t~ret1339.base, #t~ret1339.offset := ldv_zalloc(48);
    ~tmp___4~1285.base, ~tmp___4~1285.offset := #t~ret1339.base, #t~ret1339.offset;
    havoc #t~ret1339.base, #t~ret1339.offset;
    ~unix_seqpacket_ops_group2.base, ~unix_seqpacket_ops_group2.offset := ~tmp___4~1285.base, ~tmp___4~1285.offset;
    assume true;
    return;
}

procedure ldv_initialize_proto_ops_5() returns ();
modifies ~unix_seqpacket_ops_group3.base, ~unix_seqpacket_ops_group3.offset, ~unix_seqpacket_ops_group0.base, ~unix_seqpacket_ops_group0.offset, ~unix_seqpacket_ops_group4.base, ~unix_seqpacket_ops_group4.offset, ~unix_seqpacket_ops_group5.base, ~unix_seqpacket_ops_group5.offset, ~unix_seqpacket_ops_group1.base, ~unix_seqpacket_ops_group1.offset, ~unix_seqpacket_ops_group2.base, ~unix_seqpacket_ops_group2.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ldv_check_alloc_flags(#in~flags : int) returns (){
    var ~flags : int;

  loc21:
    ~flags := #in~flags;
    assume !(~ldv_spin == 0 || ~bitwiseAnd(~flags, 16) % 4294967296 == 0);
    call ldv_error();
    return;
}

procedure ldv_check_alloc_flags(#in~flags : int) returns ();
modifies ;

implementation unix_seq_start(#in~seq.base : int, #in~seq.offset : int, #in~pos.base : int, #in~pos.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~mem1283 : int;
    var #t~mem1284 : int;
    var #t~ret1285.base : int, #t~ret1285.offset : int;
    var ~seq.base : int, ~seq.offset : int;
    var ~pos.base : int, ~pos.offset : int;
    var ~tmp~1239.base : int, ~tmp~1239.offset : int;

  loc22:
    ~seq.base, ~seq.offset := #in~seq.base, #in~seq.offset;
    ~pos.base, ~pos.offset := #in~pos.base, #in~pos.offset;
    havoc ~tmp~1239.base, ~tmp~1239.offset;
    call spin_lock(~#unix_table_lock.base, ~#unix_table_lock.offset);
    call #t~mem1283 := read~int(~pos.base, ~pos.offset, 8);
    assume #t~mem1283 == 0;
    havoc #t~mem1283;
    #res.base, #res.offset := 0, 1;
    assume true;
    return;
}

procedure unix_seq_start(#in~seq.base : int, #in~seq.offset : int, #in~pos.base : int, #in~pos.offset : int) returns (#res.base : int, #res.offset : int);
modifies ~ldv_spin, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ldv_initialize_proto_ops_6() returns (){
    var #t~ret1328.base : int, #t~ret1328.offset : int;
    var #t~ret1329.base : int, #t~ret1329.offset : int;
    var #t~ret1330.base : int, #t~ret1330.offset : int;
    var #t~ret1331.base : int, #t~ret1331.offset : int;
    var #t~ret1332.base : int, #t~ret1332.offset : int;
    var #t~ret1333.base : int, #t~ret1333.offset : int;
    var ~tmp~1283.base : int, ~tmp~1283.offset : int;
    var ~tmp___0~1283.base : int, ~tmp___0~1283.offset : int;
    var ~tmp___1~1283.base : int, ~tmp___1~1283.offset : int;
    var ~tmp___2~1283.base : int, ~tmp___2~1283.offset : int;
    var ~tmp___3~1283.base : int, ~tmp___3~1283.offset : int;
    var ~tmp___4~1283.base : int, ~tmp___4~1283.offset : int;

  loc23:
    havoc ~tmp~1283.base, ~tmp~1283.offset;
    havoc ~tmp___0~1283.base, ~tmp___0~1283.offset;
    havoc ~tmp___1~1283.base, ~tmp___1~1283.offset;
    havoc ~tmp___2~1283.base, ~tmp___2~1283.offset;
    havoc ~tmp___3~1283.base, ~tmp___3~1283.offset;
    havoc ~tmp___4~1283.base, ~tmp___4~1283.offset;
    call #t~ret1328.base, #t~ret1328.offset := ldv_zalloc(512);
    ~tmp~1283.base, ~tmp~1283.offset := #t~ret1328.base, #t~ret1328.offset;
    havoc #t~ret1328.base, #t~ret1328.offset;
    ~unix_dgram_ops_group3.base, ~unix_dgram_ops_group3.offset := ~tmp~1283.base, ~tmp~1283.offset;
    call #t~ret1329.base, #t~ret1329.offset := ldv_zalloc(56);
    ~tmp___0~1283.base, ~tmp___0~1283.offset := #t~ret1329.base, #t~ret1329.offset;
    havoc #t~ret1329.base, #t~ret1329.offset;
    ~unix_dgram_ops_group0.base, ~unix_dgram_ops_group0.offset := ~tmp___0~1283.base, ~tmp___0~1283.offset;
    call #t~ret1330.base, #t~ret1330.offset := ldv_zalloc(88);
    ~tmp___1~1283.base, ~tmp___1~1283.offset := #t~ret1330.base, #t~ret1330.offset;
    havoc #t~ret1330.base, #t~ret1330.offset;
    ~unix_dgram_ops_group4.base, ~unix_dgram_ops_group4.offset := ~tmp___1~1283.base, ~tmp___1~1283.offset;
    call #t~ret1331.base, #t~ret1331.offset := ldv_zalloc(48);
    ~tmp___2~1283.base, ~tmp___2~1283.offset := #t~ret1331.base, #t~ret1331.offset;
    havoc #t~ret1331.base, #t~ret1331.offset;
    ~unix_dgram_ops_group5.base, ~unix_dgram_ops_group5.offset := ~tmp___2~1283.base, ~tmp___2~1283.offset;
    call #t~ret1332.base, #t~ret1332.offset := ldv_zalloc(16);
    ~tmp___3~1283.base, ~tmp___3~1283.offset := #t~ret1332.base, #t~ret1332.offset;
    havoc #t~ret1332.base, #t~ret1332.offset;
    ~unix_dgram_ops_group1.base, ~unix_dgram_ops_group1.offset := ~tmp___3~1283.base, ~tmp___3~1283.offset;
    call #t~ret1333.base, #t~ret1333.offset := ldv_zalloc(48);
    ~tmp___4~1283.base, ~tmp___4~1283.offset := #t~ret1333.base, #t~ret1333.offset;
    havoc #t~ret1333.base, #t~ret1333.offset;
    ~unix_dgram_ops_group2.base, ~unix_dgram_ops_group2.offset := ~tmp___4~1283.base, ~tmp___4~1283.offset;
    assume true;
    return;
}

procedure ldv_initialize_proto_ops_6() returns ();
modifies ~unix_dgram_ops_group3.base, ~unix_dgram_ops_group3.offset, ~unix_dgram_ops_group0.base, ~unix_dgram_ops_group0.offset, ~unix_dgram_ops_group4.base, ~unix_dgram_ops_group4.offset, ~unix_dgram_ops_group5.base, ~unix_dgram_ops_group5.offset, ~unix_dgram_ops_group1.base, ~unix_dgram_ops_group1.offset, ~unix_dgram_ops_group2.base, ~unix_dgram_ops_group2.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ldv_initialize_proto_ops_7() returns (){
    var #t~ret1322.base : int, #t~ret1322.offset : int;
    var #t~ret1323.base : int, #t~ret1323.offset : int;
    var #t~ret1324.base : int, #t~ret1324.offset : int;
    var #t~ret1325.base : int, #t~ret1325.offset : int;
    var #t~ret1326.base : int, #t~ret1326.offset : int;
    var #t~ret1327.base : int, #t~ret1327.offset : int;
    var ~tmp~1281.base : int, ~tmp~1281.offset : int;
    var ~tmp___0~1281.base : int, ~tmp___0~1281.offset : int;
    var ~tmp___1~1281.base : int, ~tmp___1~1281.offset : int;
    var ~tmp___2~1281.base : int, ~tmp___2~1281.offset : int;
    var ~tmp___3~1281.base : int, ~tmp___3~1281.offset : int;
    var ~tmp___4~1281.base : int, ~tmp___4~1281.offset : int;

  loc24:
    havoc ~tmp~1281.base, ~tmp~1281.offset;
    havoc ~tmp___0~1281.base, ~tmp___0~1281.offset;
    havoc ~tmp___1~1281.base, ~tmp___1~1281.offset;
    havoc ~tmp___2~1281.base, ~tmp___2~1281.offset;
    havoc ~tmp___3~1281.base, ~tmp___3~1281.offset;
    havoc ~tmp___4~1281.base, ~tmp___4~1281.offset;
    call #t~ret1322.base, #t~ret1322.offset := ldv_zalloc(512);
    ~tmp~1281.base, ~tmp~1281.offset := #t~ret1322.base, #t~ret1322.offset;
    havoc #t~ret1322.base, #t~ret1322.offset;
    ~unix_stream_ops_group3.base, ~unix_stream_ops_group3.offset := ~tmp~1281.base, ~tmp~1281.offset;
    call #t~ret1323.base, #t~ret1323.offset := ldv_zalloc(56);
    ~tmp___0~1281.base, ~tmp___0~1281.offset := #t~ret1323.base, #t~ret1323.offset;
    havoc #t~ret1323.base, #t~ret1323.offset;
    ~unix_stream_ops_group0.base, ~unix_stream_ops_group0.offset := ~tmp___0~1281.base, ~tmp___0~1281.offset;
    call #t~ret1324.base, #t~ret1324.offset := ldv_zalloc(88);
    ~tmp___1~1281.base, ~tmp___1~1281.offset := #t~ret1324.base, #t~ret1324.offset;
    havoc #t~ret1324.base, #t~ret1324.offset;
    ~unix_stream_ops_group4.base, ~unix_stream_ops_group4.offset := ~tmp___1~1281.base, ~tmp___1~1281.offset;
    call #t~ret1325.base, #t~ret1325.offset := ldv_zalloc(48);
    ~tmp___2~1281.base, ~tmp___2~1281.offset := #t~ret1325.base, #t~ret1325.offset;
    havoc #t~ret1325.base, #t~ret1325.offset;
    ~unix_stream_ops_group5.base, ~unix_stream_ops_group5.offset := ~tmp___2~1281.base, ~tmp___2~1281.offset;
    call #t~ret1326.base, #t~ret1326.offset := ldv_zalloc(16);
    ~tmp___3~1281.base, ~tmp___3~1281.offset := #t~ret1326.base, #t~ret1326.offset;
    havoc #t~ret1326.base, #t~ret1326.offset;
    ~unix_stream_ops_group1.base, ~unix_stream_ops_group1.offset := ~tmp___3~1281.base, ~tmp___3~1281.offset;
    call #t~ret1327.base, #t~ret1327.offset := ldv_zalloc(48);
    ~tmp___4~1281.base, ~tmp___4~1281.offset := #t~ret1327.base, #t~ret1327.offset;
    havoc #t~ret1327.base, #t~ret1327.offset;
    ~unix_stream_ops_group2.base, ~unix_stream_ops_group2.offset := ~tmp___4~1281.base, ~tmp___4~1281.offset;
    assume true;
    return;
}

procedure ldv_initialize_proto_ops_7() returns ();
modifies ~unix_stream_ops_group3.base, ~unix_stream_ops_group3.offset, ~unix_stream_ops_group0.base, ~unix_stream_ops_group0.offset, ~unix_stream_ops_group4.base, ~unix_stream_ops_group4.offset, ~unix_stream_ops_group5.base, ~unix_stream_ops_group5.offset, ~unix_stream_ops_group1.base, ~unix_stream_ops_group1.offset, ~unix_stream_ops_group2.base, ~unix_stream_ops_group2.offset, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation unix_autobind(#in~sock.base : int, #in~sock.offset : int) returns (#res : int){
    var #t~mem641.base : int, #t~mem641.offset : int;
    var #t~ret642.base : int, #t~ret642.offset : int;
    var #t~ret643 : int;
    var #t~mem644.base : int, #t~mem644.offset : int;
    var #t~ret645.base : int, #t~ret645.offset : int;
    var #t~nondet647.base : int, #t~nondet647.offset : int;
    var #t~ret648 : int;
    var #t~mem650 : int;
    var #t~ret651 : ~__wsum;
    var #t~ret652 : int;
    var #t~mem654 : int;
    var #t~mem655 : int;
    var #t~mem656 : int;
    var #t~ret657.base : int, #t~ret657.offset : int;
    var #t~nondet658.base : int, #t~nondet658.offset : int;
    var #t~ret659 : int;
    var #t~mem661 : int;
    var #t~mem660 : int;
    var #t~mem664 : int;
    var ~sock.base : int, ~sock.offset : int;
    var ~sk~730.base : int, ~sk~730.offset : int;
    var ~net~730.base : int, ~net~730.offset : int;
    var ~tmp~730.base : int, ~tmp~730.offset : int;
    var ~u~730.base : int, ~u~730.offset : int;
    var ~ordernum~730 : ~u32;
    var ~addr~730.base : int, ~addr~730.offset : int;
    var ~err~730 : int;
    var ~retries~730 : int;
    var ~tmp___0~730.base : int, ~tmp___0~730.offset : int;
    var ~tmp___1~730 : int;
    var ~tmp___2~730 : ~__wsum;
    var ~tmp___3~730 : int;
    var ~tmp___4~730.base : int, ~tmp___4~730.offset : int;

  loc25:
    ~sock.base, ~sock.offset := #in~sock.base, #in~sock.offset;
    havoc ~sk~730.base, ~sk~730.offset;
    havoc ~net~730.base, ~net~730.offset;
    havoc ~tmp~730.base, ~tmp~730.offset;
    havoc ~u~730.base, ~u~730.offset;
    havoc ~ordernum~730;
    havoc ~addr~730.base, ~addr~730.offset;
    havoc ~err~730;
    havoc ~retries~730;
    havoc ~tmp___0~730.base, ~tmp___0~730.offset;
    havoc ~tmp___1~730;
    havoc ~tmp___2~730;
    havoc ~tmp___3~730;
    havoc ~tmp___4~730.base, ~tmp___4~730.offset;
    call #t~mem641.base, #t~mem641.offset := read~$Pointer$(~sock.base, ~sock.offset + 30, 8);
    ~sk~730.base, ~sk~730.offset := #t~mem641.base, #t~mem641.offset;
    havoc #t~mem641.base, #t~mem641.offset;
    call #t~ret642.base, #t~ret642.offset := sock_net(~sk~730.base, ~sk~730.offset);
    ~tmp~730.base, ~tmp~730.offset := #t~ret642.base, #t~ret642.offset;
    havoc #t~ret642.base, #t~ret642.offset;
    ~net~730.base, ~net~730.offset := ~tmp~730.base, ~tmp~730.offset;
    ~u~730.base, ~u~730.offset := ~sk~730.base, ~sk~730.offset;
    ~ordernum~730 := 1;
    ~retries~730 := 0;
    call #t~ret643 := mutex_lock_interruptible_nested(~u~730.base, ~u~730.offset + 1234, 0);
    assume -2147483648 <= #t~ret643 && #t~ret643 <= 2147483647;
    ~err~730 := #t~ret643;
    havoc #t~ret643;
    assume !(~err~730 != 0);
    ~err~730 := 0;
    call #t~mem644.base, #t~mem644.offset := read~$Pointer$(~u~730.base, ~u~730.offset + 1210, 8);
    assume !((#t~mem644.base + #t~mem644.offset) % 18446744073709551616 != 0);
    havoc #t~mem644.base, #t~mem644.offset;
    ~err~730 := -12;
    call #t~ret645.base, #t~ret645.offset := kzalloc(30, 208);
    return;
}

procedure unix_autobind(#in~sock.base : int, #in~sock.offset : int) returns (#res : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length, ~ldv_spin;

procedure __VERIFIER_nondet_loff_t() returns (#res : ~loff_t);
modifies ;

procedure __xchg_wrong_size() returns ();
modifies ;

procedure seq_release_net(#in~252.base : int, #in~252.offset : int, #in~253.base : int, #in~253.offset : int) returns (#res : int);
modifies ;

procedure sock_no_accept(#in~401.base : int, #in~401.offset : int, #in~402.base : int, #in~402.offset : int, #in~403 : int) returns (#res : int);
modifies ;

procedure seq_puts(#in~192.base : int, #in~192.offset : int, #in~193.base : int, #in~193.offset : int) returns (#res : int);
modifies ;

procedure rcu_lockdep_current_cpu_online() returns (#res : ~bool);
modifies ;

procedure sock_init_data(#in~424.base : int, #in~424.offset : int, #in~425.base : int, #in~425.offset : int) returns ();
modifies ;

procedure debug_lockdep_rcu_enabled() returns (#res : int);
modifies ;

procedure seq_putc(#in~190.base : int, #in~190.offset : int, #in~191 : int) returns (#res : int);
modifies ;

procedure proto_unregister(#in~380.base : int, #in~380.offset : int) returns ();
modifies ;

procedure freezing_slow_path(#in~459.base : int, #in~459.offset : int) returns (#res : ~bool);
modifies ;

procedure __might_sleep(#in~2.base : int, #in~2.offset : int, #in~3 : int, #in~4 : int) returns ();
modifies ;

procedure sock_wake_async(#in~168.base : int, #in~168.offset : int, #in~169 : int, #in~170 : int) returns (#res : int);
modifies ;

procedure lock_release(#in~58.base : int, #in~58.offset : int, #in~59 : int, #in~60 : int) returns ();
modifies ;

procedure sk_filter(#in~339.base : int, #in~339.offset : int, #in~340.base : int, #in~340.offset : int) returns (#res : int);
modifies ;

procedure put_cmsg(#in~163.base : int, #in~163.offset : int, #in~164 : int, #in~165 : int, #in~166 : int, #in~167.base : int, #in~167.offset : int) returns (#res : int);
modifies ;

procedure from_kgid_munged(#in~78.base : int, #in~78.offset : int, #in~79.val : int) returns (#res : ~gid_t);
modifies ;

procedure sk_alloc(#in~385.base : int, #in~385.offset : int, #in~386 : int, #in~387 : int, #in~388.base : int, #in~388.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __refrigerator(#in~463 : int) returns (#res : ~bool);
modifies ;

procedure lockref_get(#in~151.base : int, #in~151.offset : int) returns ();
modifies ;

procedure sprintf(#in~5.base : int, #in~5.offset : int, #in~6.base : int, #in~6.offset : int) returns (#res : int);
modifies ;

procedure strlen(#in~33.base : int, #in~33.offset : int) returns (#res : int);
modifies ;

procedure memcmp(#in~30.base : int, #in~30.offset : int, #in~31.base : int, #in~31.offset : int, #in~32 : int) returns (#res : int);
modifies ;

procedure sk_free(#in~389.base : int, #in~389.offset : int) returns ();
modifies ;

procedure remove_proc_entry(#in~246.base : int, #in~246.offset : int, #in~247.base : int, #in~247.offset : int) returns ();
modifies ;

procedure current_umask() returns (#res : int);
modifies ;

procedure __xadd_wrong_size() returns ();
modifies ;

procedure scm_detach_fds(#in~278.base : int, #in~278.offset : int, #in~279.base : int, #in~279.offset : int) returns ();
modifies ;

procedure sock_wmalloc(#in~390.base : int, #in~390.offset : int, #in~391 : int, #in~392 : int, #in~393 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure seq_open_net(#in~248.base : int, #in~248.offset : int, #in~249.base : int, #in~249.offset : int, #in~250.base : int, #in~250.offset : int, #in~251 : int) returns (#res : int);
modifies ;

procedure proc_dointvec(#in~1618.base : int, #in~1618.offset : int, #in~1619 : int, #in~1620.base : int, #in~1620.offset : int, #in~1621.base : int, #in~1621.offset : int, #in~1622.base : int, #in~1622.offset : int) returns (#res : int);
modifies ;

procedure sock_unregister(#in~172 : int) returns ();
modifies ;

procedure from_kuid_munged(#in~76.base : int, #in~76.offset : int, #in~77.val : int) returns (#res : ~uid_t);
modifies ;

procedure list_del(#in~1523.base : int, #in~1523.offset : int) returns ();
modifies ;

procedure __VERIFIER_nondet_size_t() returns (#res : int);
modifies ;

procedure creds_are_invalid(#in~134.base : int, #in~134.offset : int) returns (#res : ~bool);
modifies ;

procedure schedule() returns ();
modifies ;

procedure sock_wfree(#in~394.base : int, #in~394.offset : int) returns ();
modifies ;

procedure __raw_spin_lock_init(#in~65.base : int, #in~65.offset : int, #in~66.base : int, #in~66.offset : int, #in~67.base : int, #in~67.offset : int) returns ();
modifies ;

procedure __scm_send(#in~280.base : int, #in~280.offset : int, #in~281.base : int, #in~281.offset : int, #in~282.base : int, #in~282.offset : int) returns (#res : int);
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure security_socket_getpeersec_dgram(#in~269.base : int, #in~269.offset : int, #in~270.base : int, #in~270.offset : int, #in~271.base : int, #in~271.offset : int) returns (#res : int);
modifies ;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure ldv_initialize() returns ();
modifies ;

procedure done_path_create(#in~161.base : int, #in~161.offset : int, #in~162.base : int, #in~162.offset : int) returns ();
modifies ;

procedure __sock_recv_timestamp(#in~454.base : int, #in~454.offset : int, #in~455.base : int, #in~455.offset : int, #in~456.base : int, #in~456.offset : int) returns ();
modifies ;

procedure rcu_is_watching() returns (#res : ~bool);
modifies ;

procedure prepare_to_wait_event(#in~1527.base : int, #in~1527.offset : int, #in~1528.base : int, #in~1528.offset : int, #in~1529 : int) returns (#res : int);
modifies ;

procedure skb_queue_purge(#in~217.base : int, #in~217.offset : int) returns ();
modifies ;

procedure __skb_recv_datagram(#in~218.base : int, #in~218.offset : int, #in~219 : int, #in~220.base : int, #in~220.offset : int, #in~221.base : int, #in~221.offset : int, #in~222.base : int, #in~222.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure security_path_mknod(#in~274.base : int, #in~274.offset : int, #in~275.base : int, #in~275.offset : int, #in~276 : int, #in~277 : int) returns (#res : int);
modifies ;

procedure proc_create_data(#in~240.base : int, #in~240.offset : int, #in~241 : int, #in~242.base : int, #in~242.offset : int, #in~243.base : int, #in~243.offset : int, #in~244.base : int, #in~244.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure seq_lseek(#in~187.base : int, #in~187.offset : int, #in~188 : int, #in~189 : int) returns (#res : ~loff_t);
modifies ;

procedure __VERIFIER_assume(#in~expression : int) returns ();
modifies ;

procedure __list_add(#in~1517.base : int, #in~1517.offset : int, #in~1518.base : int, #in~1518.offset : int, #in~1519.base : int, #in~1519.offset : int) returns ();
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];

procedure __bad_percpu_size() returns ();
modifies ;

procedure prepare_to_wait_exclusive(#in~95.base : int, #in~95.offset : int, #in~96.base : int, #in~96.offset : int, #in~97 : int) returns ();
modifies ;

procedure pid_vnr(#in~129.base : int, #in~129.offset : int) returns (#res : ~pid_t);
modifies ;

procedure skb_recv_datagram(#in~223.base : int, #in~223.offset : int, #in~224 : int, #in~225 : int, #in~226.base : int, #in~226.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure _cond_resched() returns (#res : int);
modifies ;

procedure path_get(#in~152.base : int, #in~152.offset : int) returns ();
modifies ;

procedure register_pernet_subsys(#in~257.base : int, #in~257.offset : int) returns (#res : int);
modifies ;

procedure unregister_pernet_subsys(#in~258.base : int, #in~258.offset : int) returns ();
modifies ;

procedure touch_atime(#in~177.base : int, #in~177.offset : int) returns ();
modifies ;

procedure memset(#in~27.base : int, #in~27.offset : int, #in~28 : int, #in~29 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure unregister_net_sysctl_table(#in~1626.base : int, #in~1626.offset : int) returns ();
modifies ;

procedure kern_path(#in~154.base : int, #in~154.offset : int, #in~155 : int, #in~156.base : int, #in~156.offset : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_ulong() returns (#res : int);
modifies ;

procedure skb_queue_tail(#in~210.base : int, #in~210.offset : int, #in~211.base : int, #in~211.offset : int) returns ();
modifies ;

procedure send_sig(#in~144 : int, #in~145.base : int, #in~145.offset : int, #in~146 : int) returns (#res : int);
modifies ;

procedure skb_copy_datagram_iovec(#in~227.base : int, #in~227.offset : int, #in~228 : int, #in~229.base : int, #in~229.offset : int, #in~230 : int) returns (#res : int);
modifies ;

procedure get_max_files() returns (#res : int);
modifies ;

procedure warn_slowpath_null(#in~21.base : int, #in~21.offset : int, #in~22 : int) returns ();
modifies ;

procedure skb_put(#in~215.base : int, #in~215.offset : int, #in~216 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure sock_i_ino(#in~436.base : int, #in~436.offset : int) returns (#res : int);
modifies ;

procedure lock_is_held(#in~61.base : int, #in~61.offset : int) returns (#res : int);
modifies ;

procedure __init_waitqueue_head(#in~80.base : int, #in~80.offset : int, #in~81.base : int, #in~81.offset : int, #in~82.base : int, #in~82.offset : int) returns ();
modifies ;

procedure schedule_timeout(#in~141 : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock(#in~68.base : int, #in~68.offset : int) returns ();
modifies ;

procedure finish_wait(#in~98.base : int, #in~98.offset : int, #in~99.base : int, #in~99.offset : int) returns ();
modifies ;

procedure security_sock_graft(#in~272.base : int, #in~272.offset : int, #in~273.base : int, #in~273.offset : int) returns ();
modifies ;

procedure skb_dequeue(#in~214.base : int, #in~214.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure _raw_write_lock_bh(#in~70.base : int, #in~70.offset : int) returns ();
modifies ;

procedure autoremove_wake_function(#in~100.base : int, #in~100.offset : int, #in~101 : int, #in~102 : int, #in~103.base : int, #in~103.offset : int) returns (#res : int);
modifies ;

procedure kern_path_create(#in~157 : int, #in~158.base : int, #in~158.offset : int, #in~159.base : int, #in~159.offset : int, #in~160 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure _raw_write_unlock_bh(#in~71.base : int, #in~71.offset : int) returns ();
modifies ;

procedure vfs_mknod(#in~173.base : int, #in~173.offset : int, #in~174.base : int, #in~174.offset : int, #in~175 : int, #in~176 : int) returns (#res : int);
modifies ;

procedure inode_permission(#in~178.base : int, #in~178.offset : int, #in~179 : int) returns (#res : int);
modifies ;

procedure seq_read(#in~183.base : int, #in~183.offset : int, #in~184.base : int, #in~184.offset : int, #in~185 : int, #in~186.base : int, #in~186.offset : int) returns (#res : int);
modifies ;

procedure proto_register(#in~378.base : int, #in~378.offset : int, #in~379 : int) returns (#res : int);
modifies ;

procedure mutex_lock_interruptible_nested(#in~107.base : int, #in~107.offset : int, #in~108 : int) returns (#res : int);
modifies ;

procedure __invalid_creds(#in~131.base : int, #in~131.offset : int, #in~132.base : int, #in~132.offset : int, #in~133 : int) returns ();
modifies ;

procedure seq_printf(#in~194.base : int, #in~194.offset : int, #in~195.base : int, #in~195.offset : int) returns (#res : int);
modifies ;

procedure mutex_unlock(#in~109.base : int, #in~109.offset : int) returns ();
modifies ;

procedure __memcpy(#in~24.base : int, #in~24.offset : int, #in~25.base : int, #in~25.offset : int, #in~26 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure debug_check_no_locks_held() returns ();
modifies ;

procedure __VERIFIER_nondet_uint() returns (#res : int);
modifies ;

procedure __local_bh_enable_ip(#in~45 : int, #in~46 : int) returns ();
modifies ;

procedure path_put(#in~153.base : int, #in~153.offset : int) returns ();
modifies ;

procedure sock_no_getsockopt(#in~406.base : int, #in~406.offset : int, #in~407 : int, #in~408 : int, #in~409.base : int, #in~409.offset : int, #in~410.base : int, #in~410.offset : int) returns (#res : int);
modifies ;

procedure sock_alloc_send_pskb(#in~395.base : int, #in~395.offset : int, #in~396 : int, #in~397 : int, #in~398 : int, #in~399.base : int, #in~399.offset : int, #in~400 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __kmalloc(#in~123 : int, #in~124 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure consume_skb(#in~197.base : int, #in~197.offset : int) returns ();
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure __list_del_entry(#in~1522.base : int, #in~1522.offset : int) returns ();
modifies ;

procedure put_pid(#in~128.base : int, #in~128.offset : int) returns ();
modifies ;

procedure security_secid_to_secctx(#in~259 : int, #in~260.base : int, #in~260.offset : int, #in~261.base : int, #in~261.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock(#in~69.base : int, #in~69.offset : int) returns ();
modifies ;

procedure __local_bh_disable_ip(#in~43 : int, #in~44 : int) returns ();
modifies ;

procedure might_fault() returns ();
modifies ;

procedure printk(#in~1.base : int, #in~1.offset : int) returns (#res : int);
modifies ;

procedure calloc(#in~nmemb : int, #in~size : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure kfree_skb(#in~196.base : int, #in~196.offset : int) returns ();
modifies ;

procedure __scm_destroy(#in~283.base : int, #in~283.offset : int) returns ();
modifies ;

procedure __mutex_init(#in~104.base : int, #in~104.offset : int, #in~105.base : int, #in~105.offset : int, #in~106.base : int, #in~106.offset : int) returns ();
modifies ;

procedure skb_free_datagram(#in~236.base : int, #in~236.offset : int, #in~237.base : int, #in~237.offset : int) returns ();
modifies ;

procedure lockdep_init_map(#in~47.base : int, #in~47.offset : int, #in~48.base : int, #in~48.offset : int, #in~49.base : int, #in~49.offset : int, #in~50 : int) returns ();
modifies ;

procedure sock_no_listen(#in~404.base : int, #in~404.offset : int, #in~405 : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure sock_register(#in~171.base : int, #in~171.offset : int) returns (#res : int);
modifies ;

procedure skb_copy_datagram_from_iovec(#in~231.base : int, #in~231.offset : int, #in~232 : int, #in~233.base : int, #in~233.offset : int, #in~234 : int, #in~235 : int) returns (#res : int);
modifies ;

procedure sock_prot_inuse_add(#in~381.base : int, #in~381.offset : int, #in~382.base : int, #in~382.offset : int, #in~383 : int) returns ();
modifies ;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure csum_partial(#in~180.base : int, #in~180.offset : int, #in~181 : int, #in~182 : int) returns (#res : ~__wsum);
modifies ;

procedure kfree(#in~122.base : int, #in~122.offset : int) returns ();
modifies ;

procedure security_unix_may_send(#in~267.base : int, #in~267.offset : int, #in~268.base : int, #in~268.offset : int) returns (#res : int);
modifies ;

procedure scm_fp_dup(#in~284.base : int, #in~284.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];

procedure register_net_sysctl(#in~1623.base : int, #in~1623.offset : int, #in~1624.base : int, #in~1624.offset : int, #in~1625.base : int, #in~1625.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __VERIFIER_error() returns ();
modifies ;

procedure sock_no_mmap(#in~416.base : int, #in~416.offset : int, #in~417.base : int, #in~417.offset : int, #in~418.base : int, #in~418.offset : int) returns (#res : int);
modifies ;

procedure __wake_up_sync_key(#in~88.base : int, #in~88.offset : int, #in~89 : int, #in~90 : int, #in~91.base : int, #in~91.offset : int) returns ();
modifies ;

procedure lock_acquire(#in~51.base : int, #in~51.offset : int, #in~52 : int, #in~53 : int, #in~54 : int, #in~55 : int, #in~56.base : int, #in~56.offset : int, #in~57 : int) returns ();
modifies ;

procedure lockdep_rcu_suspicious(#in~62.base : int, #in~62.offset : int, #in~63 : int, #in~64.base : int, #in~64.offset : int) returns ();
modifies ;

procedure sock_no_setsockopt(#in~411.base : int, #in~411.offset : int, #in~412 : int, #in~413 : int, #in~414.base : int, #in~414.offset : int, #in~415 : int) returns (#res : int);
modifies ;

procedure __wake_up(#in~84.base : int, #in~84.offset : int, #in~85 : int, #in~86 : int, #in~87.base : int, #in~87.offset : int) returns ();
modifies ;

procedure prepare_to_wait(#in~92.base : int, #in~92.offset : int, #in~93.base : int, #in~93.offset : int, #in~94 : int) returns ();
modifies ;

procedure mntget(#in~458.base : int, #in~458.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure kmemdup(#in~1615.base : int, #in~1615.offset : int, #in~1616 : int, #in~1617 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure skb_unlink(#in~212.base : int, #in~212.offset : int, #in~213.base : int, #in~213.offset : int) returns ();
modifies ;

procedure sock_no_sendpage(#in~419.base : int, #in~419.offset : int, #in~420.base : int, #in~420.offset : int, #in~421 : int, #in~422 : int, #in~423 : int) returns (#res : int);
modifies ;

procedure security_unix_stream_connect(#in~264.base : int, #in~264.offset : int, #in~265.base : int, #in~265.offset : int, #in~266.base : int, #in~266.offset : int) returns (#res : int);
modifies ;

procedure __put_cred(#in~130.base : int, #in~130.offset : int) returns ();
modifies ;

procedure security_release_secctx(#in~262.base : int, #in~262.offset : int, #in~263 : int) returns ();
modifies ;

procedure ktime_get_real() returns (#res.tv64 : int);
modifies ;

procedure ldv_check_final_state() returns ();
modifies ;


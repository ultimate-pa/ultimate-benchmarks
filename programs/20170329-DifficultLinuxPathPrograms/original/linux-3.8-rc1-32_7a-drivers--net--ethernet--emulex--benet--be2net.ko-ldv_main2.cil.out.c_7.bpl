type STRUCT~perf_event;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~sysfs_dirent;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~device_node;
type STRUCT~iommu_group;
type STRUCT~hotplug_slot;
type STRUCT~pci_sriov;
type STRUCT~proc_dir_entry;
type STRUCT~pcie_link_state;
type STRUCT~pci_vpd;
type STRUCT~pci_ats;
type STRUCT~return_instance;
type STRUCT~uprobe;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~mmu_notifier_mm;
type STRUCT~kmem_cache_node;
type STRUCT~mem_cgroup;
type STRUCT~poll_table_struct;
type STRUCT~pipe_inode_info;
type STRUCT~sec_path;
type STRUCT~sem_undo_list;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~pid_namespace;
type STRUCT~writeback_control;
type STRUCT~swap_info_struct;
type STRUCT~backing_dev_info;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~cdev;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~mtd_info;
type STRUCT~nameidata;
type STRUCT~kstatfs;
type STRUCT~seccomp_filter;
type STRUCT~keyring_list;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~tty_struct;
type STRUCT~autogroup;
type STRUCT~tty_audit_buf;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~sched_class;
type STRUCT~task_group;
type STRUCT~fs_struct;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~bio_list;
type STRUCT~blk_plug;
type STRUCT~reclaim_state;
type STRUCT~io_context;
type STRUCT~robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~prot_inuse;
type STRUCT~ipv4_devconf;
type STRUCT~fib_rules_ops;
type STRUCT~fib_table;
type STRUCT~tcpm_hash_bucket;
type STRUCT~xt_table;
type STRUCT~rt6_info;
type STRUCT~rt6_statistics;
type STRUCT~fib6_table;
type STRUCT~sctp_mib;
type STRUCT~nf_logger;
type STRUCT~ebt_table;
type STRUCT~ip_conntrack_stat;
type STRUCT~nf_ct_event_notifier;
type STRUCT~nf_exp_event_notifier;
type STRUCT~net_generic;
type STRUCT~netns_ipvs;
type STRUCT~mii_bus;
type STRUCT~css_id;
type STRUCT~eventfd_ctx;
type STRUCT~cgroup_taskset;
type STRUCT~uts_namespace;
type STRUCT~ipc_namespace;
type STRUCT~mnt_namespace;
type STRUCT~Qdisc;
type STRUCT~netpoll_info;
type STRUCT~pcpu_lstats;
type STRUCT~pcpu_tstats;
type STRUCT~pcpu_dstats;
type STRUCT~pcpu_vstats;
type STRUCT~iw_handler_def;
type STRUCT~iw_public_data;
type STRUCT~vlan_info;
type STRUCT~in_device;
type STRUCT~dn_dev;
type STRUCT~inet6_dev;
type STRUCT~wireless_dev;
type STRUCT~cpu_rmap;
type STRUCT~garp_port;
type STRUCT~mrp_port;
type STRUCT~phy_device;
type STRUCT~kioctx;
type STRUCT~dn_route;
type STRUCT~xfrm_state;
type STRUCT~xfrm_policy;
type STRUCT~udp_table;
type STRUCT~raw_hashinfo;
type STRUCT~request_sock;
type STRUCT~ocrdma_dev;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__s64 = int;
type ~__u64 = int;
type ~s8 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~ushort = int;
type ~uint = int;
type ~ulong = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~oom_flags_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~kernel_ulong_t = int;
type ~pci_power_t = int;
type ~pci_channel_state_t = int;
type ~pci_dev_flags_t = int;
type ~pci_bus_flags_t = int;
type ~pci_ers_result_t = int;
type ~__kernel_sa_family_t = int;
type ~sk_buff_data_t = int;
type ~qsize_t = int;
type ~cputime_t = int;
type ~ldv_func_ret_type___4 = int;
type ~ldv_func_ret_type___6 = int;
type ~ldv_func_ret_type___8 = int;
type ~ldv_func_ret_type___10 = int;
type ~ldv_func_ret_type___12 = int;
type ~ldv_func_ret_type___14 = int;
type ~ldv_func_ret_type___16 = int;
type ~ldv_func_ret_type___18 = int;
type ~ldv_func_ret_type___20 = int;
type ~ldv_func_ret_type___22 = int;
type ~ldv_func_ret_type___24 = int;
type ~ldv_func_ret_type___26 = int;
type ~ldv_func_ret_type___28 = int;
type ~ldv_func_ret_type___30 = int;
type ~ldv_func_ret_type___32 = int;
type ~ldv_func_ret_type___34 = int;
type ~ldv_func_ret_type___36 = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_clock_t = ~__kernel_long_t;
type ~__be16 = ~__u16;
type ~__be32 = ~__u32;
type ~__sum16 = ~__u16;
type ~__wsum = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint8_t = ~__u8;
type ~uint32_t = ~__u32;
type ~uint64_t = ~__u64;
type ~dma_addr_t = ~u64;
type ~phys_addr_t = ~u64;
type ~resource_size_t = ~phys_addr_t;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~kuid_t = ~uid_t;
type ~kgid_t = ~gid_t;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~irqreturn_t = int;
type ~sa_family_t = ~__kernel_sa_family_t;
type ~socket_state = int;
type ~dma_cookie_t = ~s32;
type ~netdev_features_t = ~u64;
type ~projid_t = ~__kernel_uid32_t;
type ~kprojid_t = ~projid_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~compat_long_t = ~s32;
type ~compat_uptr_t = ~u32;
type ~netdev_tx_t = int;
type ~gro_result_t = int;
type ~rx_handler_result_t = int;
type ~__portpair = ~__u32;
type ~__addrpair = ~__u64;
const #funAddr~be_msix.base : int;
const #funAddr~be_msix.offset : int;
const #funAddr~be_intx.base : int;
const #funAddr~be_intx.offset : int;
const #funAddr~be_open.base : int;
const #funAddr~be_open.offset : int;
const #funAddr~be_close.base : int;
const #funAddr~be_close.offset : int;
const #funAddr~be_xmit.base : int;
const #funAddr~be_xmit.offset : int;
const #funAddr~be_set_rx_mode.base : int;
const #funAddr~be_set_rx_mode.offset : int;
const #funAddr~be_mac_addr_set.base : int;
const #funAddr~be_mac_addr_set.offset : int;
const #funAddr~eth_validate_addr.base : int;
const #funAddr~eth_validate_addr.offset : int;
const #funAddr~be_change_mtu.base : int;
const #funAddr~be_change_mtu.offset : int;
const #funAddr~be_get_stats64.base : int;
const #funAddr~be_get_stats64.offset : int;
const #funAddr~be_vlan_add_vid.base : int;
const #funAddr~be_vlan_add_vid.offset : int;
const #funAddr~be_vlan_rem_vid.base : int;
const #funAddr~be_vlan_rem_vid.offset : int;
const #funAddr~be_netpoll.base : int;
const #funAddr~be_netpoll.offset : int;
const #funAddr~be_set_vf_mac.base : int;
const #funAddr~be_set_vf_mac.offset : int;
const #funAddr~be_set_vf_vlan.base : int;
const #funAddr~be_set_vf_vlan.offset : int;
const #funAddr~be_set_vf_tx_rate.base : int;
const #funAddr~be_set_vf_tx_rate.offset : int;
const #funAddr~be_get_vf_config.base : int;
const #funAddr~be_get_vf_config.offset : int;
const #funAddr~be_poll.base : int;
const #funAddr~be_poll.offset : int;
const #funAddr~be_worker.base : int;
const #funAddr~be_worker.offset : int;
const #funAddr~delayed_work_timer_fn.base : int;
const #funAddr~delayed_work_timer_fn.offset : int;
const #funAddr~be_func_recovery_task.base : int;
const #funAddr~be_func_recovery_task.offset : int;
const #funAddr~be_eeh_err_detected.base : int;
const #funAddr~be_eeh_err_detected.offset : int;
const #funAddr~be_eeh_reset.base : int;
const #funAddr~be_eeh_reset.offset : int;
const #funAddr~be_eeh_resume.base : int;
const #funAddr~be_eeh_resume.offset : int;
const #funAddr~be_probe.base : int;
const #funAddr~be_probe.offset : int;
const #funAddr~be_remove.base : int;
const #funAddr~be_remove.offset : int;
const #funAddr~be_suspend.base : int;
const #funAddr~be_suspend.offset : int;
const #funAddr~be_resume.base : int;
const #funAddr~be_resume.offset : int;
const #funAddr~be_shutdown.base : int;
const #funAddr~be_shutdown.offset : int;
const #funAddr~be_get_settings.base : int;
const #funAddr~be_get_settings.offset : int;
const #funAddr~be_get_drvinfo.base : int;
const #funAddr~be_get_drvinfo.offset : int;
const #funAddr~be_get_reg_len.base : int;
const #funAddr~be_get_reg_len.offset : int;
const #funAddr~be_get_regs.base : int;
const #funAddr~be_get_regs.offset : int;
const #funAddr~be_get_wol.base : int;
const #funAddr~be_get_wol.offset : int;
const #funAddr~be_set_wol.base : int;
const #funAddr~be_set_wol.offset : int;
const #funAddr~be_get_msg_level.base : int;
const #funAddr~be_get_msg_level.offset : int;
const #funAddr~be_set_msg_level.base : int;
const #funAddr~be_set_msg_level.offset : int;
const #funAddr~ethtool_op_get_link.base : int;
const #funAddr~ethtool_op_get_link.offset : int;
const #funAddr~be_get_eeprom_len.base : int;
const #funAddr~be_get_eeprom_len.offset : int;
const #funAddr~be_read_eeprom.base : int;
const #funAddr~be_read_eeprom.offset : int;
const #funAddr~be_get_coalesce.base : int;
const #funAddr~be_get_coalesce.offset : int;
const #funAddr~be_set_coalesce.base : int;
const #funAddr~be_set_coalesce.offset : int;
const #funAddr~be_get_ringparam.base : int;
const #funAddr~be_get_ringparam.offset : int;
const #funAddr~be_get_pauseparam.base : int;
const #funAddr~be_get_pauseparam.offset : int;
const #funAddr~be_set_pauseparam.base : int;
const #funAddr~be_set_pauseparam.offset : int;
const #funAddr~be_self_test.base : int;
const #funAddr~be_self_test.offset : int;
const #funAddr~be_get_stat_strings.base : int;
const #funAddr~be_get_stat_strings.offset : int;
const #funAddr~be_set_phys_id.base : int;
const #funAddr~be_set_phys_id.offset : int;
const #funAddr~be_get_ethtool_stats.base : int;
const #funAddr~be_get_ethtool_stats.offset : int;
const #funAddr~be_get_sset_count.base : int;
const #funAddr~be_get_sset_count.offset : int;
const #funAddr~be_get_rxnfc.base : int;
const #funAddr~be_get_rxnfc.offset : int;
const #funAddr~be_set_rxnfc.base : int;
const #funAddr~be_set_rxnfc.offset : int;
const #funAddr~be_do_flash.base : int;
const #funAddr~be_do_flash.offset : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~irqreturn~IRQ_NONE : int;
const ~irqreturn~IRQ_HANDLED : int;
const ~irqreturn~IRQ_WAKE_THREAD : int;
const ~pci_channel_state~pci_channel_io_normal : int;
const ~pci_channel_state~pci_channel_io_frozen : int;
const ~pci_channel_state~pci_channel_io_perm_failure : int;
const ~uprobe_task_state~UTASK_RUNNING : int;
const ~uprobe_task_state~UTASK_SSTEP : int;
const ~uprobe_task_state~UTASK_SSTEP_ACK : int;
const ~uprobe_task_state~UTASK_SSTEP_TRAPPED : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~ldv_18407~SS_FREE : int;
const ~ldv_18407~SS_UNCONNECTED : int;
const ~ldv_18407~SS_CONNECTING : int;
const ~ldv_18407~SS_CONNECTED : int;
const ~ldv_18407~SS_DISCONNECTING : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS : int;
const ~pm_qos_type~PM_QOS_UNITIALIZED : int;
const ~pm_qos_type~PM_QOS_MAX : int;
const ~pm_qos_type~PM_QOS_MIN : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ON : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_OFF : int;
const ~netdev_tx~__NETDEV_TX_MIN : int;
const ~netdev_tx~NETDEV_TX_OK : int;
const ~netdev_tx~NETDEV_TX_BUSY : int;
const ~netdev_tx~NETDEV_TX_LOCKED : int;
const ~gro_result~GRO_MERGED : int;
const ~gro_result~GRO_MERGED_FREE : int;
const ~gro_result~GRO_HELD : int;
const ~gro_result~GRO_NORMAL : int;
const ~gro_result~GRO_DROP : int;
const ~rx_handler_result~RX_HANDLER_CONSUMED : int;
const ~rx_handler_result~RX_HANDLER_ANOTHER : int;
const ~rx_handler_result~RX_HANDLER_EXACT : int;
const ~rx_handler_result~RX_HANDLER_PASS : int;
const ~be_interrupt_mode~BE_INTERRUPT_MODE_MSIX : int;
const ~be_interrupt_mode~BE_INTERRUPT_MODE_INTX : int;
const ~be_interrupt_mode~BE_INTERRUPT_MODE_MSI : int;
axiom #funAddr~be_msix.base == -1 && #funAddr~be_msix.offset == 0;
axiom #funAddr~be_intx.base == -1 && #funAddr~be_intx.offset == 1;
axiom #funAddr~be_open.base == -1 && #funAddr~be_open.offset == 2;
axiom #funAddr~be_close.base == -1 && #funAddr~be_close.offset == 3;
axiom #funAddr~be_xmit.base == -1 && #funAddr~be_xmit.offset == 4;
axiom #funAddr~be_set_rx_mode.base == -1 && #funAddr~be_set_rx_mode.offset == 5;
axiom #funAddr~be_mac_addr_set.base == -1 && #funAddr~be_mac_addr_set.offset == 6;
axiom #funAddr~eth_validate_addr.base == -1 && #funAddr~eth_validate_addr.offset == 7;
axiom #funAddr~be_change_mtu.base == -1 && #funAddr~be_change_mtu.offset == 8;
axiom #funAddr~be_get_stats64.base == -1 && #funAddr~be_get_stats64.offset == 9;
axiom #funAddr~be_vlan_add_vid.base == -1 && #funAddr~be_vlan_add_vid.offset == 10;
axiom #funAddr~be_vlan_rem_vid.base == -1 && #funAddr~be_vlan_rem_vid.offset == 11;
axiom #funAddr~be_netpoll.base == -1 && #funAddr~be_netpoll.offset == 12;
axiom #funAddr~be_set_vf_mac.base == -1 && #funAddr~be_set_vf_mac.offset == 13;
axiom #funAddr~be_set_vf_vlan.base == -1 && #funAddr~be_set_vf_vlan.offset == 14;
axiom #funAddr~be_set_vf_tx_rate.base == -1 && #funAddr~be_set_vf_tx_rate.offset == 15;
axiom #funAddr~be_get_vf_config.base == -1 && #funAddr~be_get_vf_config.offset == 16;
axiom #funAddr~be_poll.base == -1 && #funAddr~be_poll.offset == 17;
axiom #funAddr~be_worker.base == -1 && #funAddr~be_worker.offset == 18;
axiom #funAddr~delayed_work_timer_fn.base == -1 && #funAddr~delayed_work_timer_fn.offset == 19;
axiom #funAddr~be_func_recovery_task.base == -1 && #funAddr~be_func_recovery_task.offset == 20;
axiom #funAddr~be_eeh_err_detected.base == -1 && #funAddr~be_eeh_err_detected.offset == 21;
axiom #funAddr~be_eeh_reset.base == -1 && #funAddr~be_eeh_reset.offset == 22;
axiom #funAddr~be_eeh_resume.base == -1 && #funAddr~be_eeh_resume.offset == 23;
axiom #funAddr~be_probe.base == -1 && #funAddr~be_probe.offset == 24;
axiom #funAddr~be_remove.base == -1 && #funAddr~be_remove.offset == 25;
axiom #funAddr~be_suspend.base == -1 && #funAddr~be_suspend.offset == 26;
axiom #funAddr~be_resume.base == -1 && #funAddr~be_resume.offset == 27;
axiom #funAddr~be_shutdown.base == -1 && #funAddr~be_shutdown.offset == 28;
axiom #funAddr~be_get_settings.base == -1 && #funAddr~be_get_settings.offset == 29;
axiom #funAddr~be_get_drvinfo.base == -1 && #funAddr~be_get_drvinfo.offset == 30;
axiom #funAddr~be_get_reg_len.base == -1 && #funAddr~be_get_reg_len.offset == 31;
axiom #funAddr~be_get_regs.base == -1 && #funAddr~be_get_regs.offset == 32;
axiom #funAddr~be_get_wol.base == -1 && #funAddr~be_get_wol.offset == 33;
axiom #funAddr~be_set_wol.base == -1 && #funAddr~be_set_wol.offset == 34;
axiom #funAddr~be_get_msg_level.base == -1 && #funAddr~be_get_msg_level.offset == 35;
axiom #funAddr~be_set_msg_level.base == -1 && #funAddr~be_set_msg_level.offset == 36;
axiom #funAddr~ethtool_op_get_link.base == -1 && #funAddr~ethtool_op_get_link.offset == 37;
axiom #funAddr~be_get_eeprom_len.base == -1 && #funAddr~be_get_eeprom_len.offset == 38;
axiom #funAddr~be_read_eeprom.base == -1 && #funAddr~be_read_eeprom.offset == 39;
axiom #funAddr~be_get_coalesce.base == -1 && #funAddr~be_get_coalesce.offset == 40;
axiom #funAddr~be_set_coalesce.base == -1 && #funAddr~be_set_coalesce.offset == 41;
axiom #funAddr~be_get_ringparam.base == -1 && #funAddr~be_get_ringparam.offset == 42;
axiom #funAddr~be_get_pauseparam.base == -1 && #funAddr~be_get_pauseparam.offset == 43;
axiom #funAddr~be_set_pauseparam.base == -1 && #funAddr~be_set_pauseparam.offset == 44;
axiom #funAddr~be_self_test.base == -1 && #funAddr~be_self_test.offset == 45;
axiom #funAddr~be_get_stat_strings.base == -1 && #funAddr~be_get_stat_strings.offset == 46;
axiom #funAddr~be_set_phys_id.base == -1 && #funAddr~be_set_phys_id.offset == 47;
axiom #funAddr~be_get_ethtool_stats.base == -1 && #funAddr~be_get_ethtool_stats.offset == 48;
axiom #funAddr~be_get_sset_count.base == -1 && #funAddr~be_get_sset_count.offset == 49;
axiom #funAddr~be_get_rxnfc.base == -1 && #funAddr~be_get_rxnfc.offset == 50;
axiom #funAddr~be_set_rxnfc.base == -1 && #funAddr~be_set_rxnfc.offset == 51;
axiom #funAddr~be_do_flash.base == -1 && #funAddr~be_do_flash.offset == 52;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~irqreturn~IRQ_NONE == 0;
axiom ~irqreturn~IRQ_HANDLED == 1;
axiom ~irqreturn~IRQ_WAKE_THREAD == 2;
axiom ~pci_channel_state~pci_channel_io_normal == 1;
axiom ~pci_channel_state~pci_channel_io_frozen == 2;
axiom ~pci_channel_state~pci_channel_io_perm_failure == 3;
axiom ~uprobe_task_state~UTASK_RUNNING == 0;
axiom ~uprobe_task_state~UTASK_SSTEP == 1;
axiom ~uprobe_task_state~UTASK_SSTEP_ACK == 2;
axiom ~uprobe_task_state~UTASK_SSTEP_TRAPPED == 3;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~ldv_18407~SS_FREE == 0;
axiom ~ldv_18407~SS_UNCONNECTED == 1;
axiom ~ldv_18407~SS_CONNECTING == 2;
axiom ~ldv_18407~SS_CONNECTED == 3;
axiom ~ldv_18407~SS_DISCONNECTING == 4;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY == 1;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS == 2;
axiom ~pm_qos_type~PM_QOS_UNITIALIZED == 0;
axiom ~pm_qos_type~PM_QOS_MAX == 1;
axiom ~pm_qos_type~PM_QOS_MIN == 2;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE == 0;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE == 1;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ON == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_OFF == 3;
axiom ~netdev_tx~__NETDEV_TX_MIN == -2147483648;
axiom ~netdev_tx~NETDEV_TX_OK == 0;
axiom ~netdev_tx~NETDEV_TX_BUSY == 16;
axiom ~netdev_tx~NETDEV_TX_LOCKED == 32;
axiom ~gro_result~GRO_MERGED == 0;
axiom ~gro_result~GRO_MERGED_FREE == 1;
axiom ~gro_result~GRO_HELD == 2;
axiom ~gro_result~GRO_NORMAL == 3;
axiom ~gro_result~GRO_DROP == 4;
axiom ~rx_handler_result~RX_HANDLER_CONSUMED == 0;
axiom ~rx_handler_result~RX_HANDLER_ANOTHER == 1;
axiom ~rx_handler_result~RX_HANDLER_EXACT == 2;
axiom ~rx_handler_result~RX_HANDLER_PASS == 3;
axiom ~be_interrupt_mode~BE_INTERRUPT_MODE_MSIX == 0;
axiom ~be_interrupt_mode~BE_INTERRUPT_MODE_INTX == 1;
axiom ~be_interrupt_mode~BE_INTERRUPT_MODE_MSI == 2;
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseXor" } ~bitwiseXor(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseComplement" } ~bitwiseComplement(in0 : int) returns (out : int);
var ~nr_cpu_ids : int;

var ~jiffies : int;

var ~num_vfs : int;

var ~ue_status_low_desc.base : [int]int, ~ue_status_low_desc.offset : [int]int;

var ~ue_status_hi_desc.base : [int]int, ~ue_status_hi_desc.offset : [int]int;

var ~#flash_cookie.base : int, ~#flash_cookie.offset : int;

var ~LDV_IN_INTERRUPT : int;

var ~#et_self_tests.base : int, ~#et_self_tests.offset : int;

var ~ldv_mutex_be_adapter_list_lock : int;

var ~ldv_mutex_lock : int;

var ~ldv_mutex_mbox_lock_of_be_adapter : int;

var ~ldv_mutex_mutex_of_device : int;

var ~pv_irq_ops.save_fl.func.base : int, ~pv_irq_ops.save_fl.func.offset : int, ~pv_irq_ops.restore_fl.func.base : int, ~pv_irq_ops.restore_fl.func.offset : int, ~pv_irq_ops.irq_disable.func.base : int, ~pv_irq_ops.irq_disable.func.offset : int, ~pv_irq_ops.irq_enable.func.base : int, ~pv_irq_ops.irq_enable.func.offset : int, ~pv_irq_ops.safe_halt.base : int, ~pv_irq_ops.safe_halt.offset : int, ~pv_irq_ops.halt.base : int, ~pv_irq_ops.halt.offset : int, ~pv_irq_ops.adjust_exception_frame.base : int, ~pv_irq_ops.adjust_exception_frame.offset : int;

var ~cpu_online_mask.base : int, ~cpu_online_mask.offset : int;

var ~system_wq.base : int, ~system_wq.offset : int;

var ~#x86_dma_fallback_dev.base : int, ~#x86_dma_fallback_dev.offset : int;

var ~dma_ops.base : int, ~dma_ops.offset : int;

var ~#be_ethtool_ops.base : int, ~#be_ethtool_ops.offset : int;

var ~rx_frag_size : ~ushort;

var ~#be_netdev_ops.base : int, ~#be_netdev_ops.offset : int;

var ~cmd_priv_map.opcode : [int]int, ~cmd_priv_map.subsystem : [int]int, ~cmd_priv_map.priv_mask : [int]int;

var ~#et_stats.base : int, ~#et_stats.offset : int;

var ~#et_rx_stats.base : int, ~#et_rx_stats.offset : int;

var ~#et_tx_stats.base : int, ~#et_tx_stats.offset : int;

var ~ocrdma_drv.base : int, ~ocrdma_drv.offset : int;

var ~#be_adapter_list.base : int, ~#be_adapter_list.offset : int;

var ~#be_adapter_list_lock.base : int, ~#be_adapter_list_lock.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

var #memory_int : [int,int]int;

implementation get_dma_ops(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~ret238 : int;
    var #t~mem239.base : int, #t~mem239.offset : int;
    var #t~short240 : bool;
    var #t~mem241.base : int, #t~mem241.offset : int;
    var ~dev.base : int, ~dev.offset : int;
    var ~tmp~157 : int;

  loc0:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    havoc ~tmp~157;
    call #t~ret238 := ldv__builtin_expect((if (~dev.base + ~dev.offset) % 18446744073709551616 == 0 then 1 else 0), 0);
    assume -9223372036854775808 <= #t~ret238 && #t~ret238 <= 9223372036854775807;
    ~tmp~157 := #t~ret238;
    havoc #t~ret238;
    #t~short240 := ~tmp~157 != 0;
    assume #t~short240;
    assume #t~short240;
    havoc #t~mem239.base, #t~mem239.offset;
    havoc #t~short240;
    #res.base, #res.offset := ~dma_ops.base, ~dma_ops.offset;
    assume true;
    return;
}

procedure get_dma_ops(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation netdev_priv(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int){
    var ~dev.base : int, ~dev.offset : int;

  loc1:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    #res.base, #res.offset := ~dev.base, ~dev.offset + 2816;
    assume true;
    return;
}

procedure netdev_priv(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr4982 : int;

  loc2:
    #t~loopctr4982 := 0;
    goto loc3;
  loc3:
    goto loc3_0, loc3_1;
  loc3_0:
    assume #t~loopctr4982 < #amount;
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset + #t~loopctr4982 * 1 := 0], #memory_$Pointer$.offset[#ptr.base,#ptr.offset + #t~loopctr4982 * 1 := #value % 256];
    #memory_int := #memory_int[#ptr.base,#ptr.offset + #t~loopctr4982 * 1 := #value];
    #t~loopctr4982 := #t~loopctr4982 + 1;
    goto loc3;
  loc3_1:
    assume !(#t~loopctr4982 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation wrb_from_mbox(#in~adapter.base : int, #in~adapter.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~mem3349.base : int, #t~mem3349.offset : int;
    var #t~memset3350.base : int, #t~memset3350.offset : int;
    var ~adapter.base : int, ~adapter.offset : int;
    var ~mbox_mem~2238.base : int, ~mbox_mem~2238.offset : int;
    var ~wrb~2238.base : int, ~wrb~2238.offset : int;

  loc4:
    ~adapter.base, ~adapter.offset := #in~adapter.base, #in~adapter.offset;
    havoc ~mbox_mem~2238.base, ~mbox_mem~2238.offset;
    havoc ~wrb~2238.base, ~wrb~2238.offset;
    ~mbox_mem~2238.base, ~mbox_mem~2238.offset := ~adapter.base, ~adapter.offset + 188;
    call #t~mem3349.base, #t~mem3349.offset := read~$Pointer$(~mbox_mem~2238.base, ~mbox_mem~2238.offset + 0, 8);
    ~wrb~2238.base, ~wrb~2238.offset := #t~mem3349.base, #t~mem3349.offset + 0;
    havoc #t~mem3349.base, #t~mem3349.offset;
    call #t~memset3350.base, #t~memset3350.offset := #Ultimate.C_memset(~wrb~2238.base, ~wrb~2238.offset, 0, 256);
    havoc #t~memset3350.base, #t~memset3350.offset;
    #res.base, #res.offset := ~wrb~2238.base, ~wrb~2238.offset;
    assume true;
    return;
}

procedure wrb_from_mbox(#in~adapter.base : int, #in~adapter.offset : int) returns (#res.base : int, #res.offset : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation be_cmd_get_ext_fat_capabilites(#in~adapter.base : int, #in~adapter.offset : int, #in~cmd.base : int, #in~cmd.offset : int) returns (#res : int){
    var #t~ret4109 : int;
    var #t~ret4110.base : int, #t~ret4110.offset : int;
    var #t~mem4111.base : int, #t~mem4111.offset : int;
    var #t~mem4112 : int;
    var #t~ret4114 : int;
    var ~adapter.base : int, ~adapter.offset : int;
    var ~cmd.base : int, ~cmd.offset : int;
    var ~wrb~2660.base : int, ~wrb~2660.offset : int;
    var ~req~2660.base : int, ~req~2660.offset : int;
    var ~status~2660 : int;
    var ~tmp~2660 : int;

  loc5:
    ~adapter.base, ~adapter.offset := #in~adapter.base, #in~adapter.offset;
    ~cmd.base, ~cmd.offset := #in~cmd.base, #in~cmd.offset;
    havoc ~wrb~2660.base, ~wrb~2660.offset;
    havoc ~req~2660.base, ~req~2660.offset;
    havoc ~status~2660;
    havoc ~tmp~2660;
    call #t~ret4109 := ldv_mutex_lock_interruptible_42(~adapter.base, ~adapter.offset + 32);
    assume -2147483648 <= #t~ret4109 && #t~ret4109 <= 2147483647;
    ~tmp~2660 := #t~ret4109;
    havoc #t~ret4109;
    assume !(~tmp~2660 != 0);
    call #t~ret4110.base, #t~ret4110.offset := wrb_from_mbox(~adapter.base, ~adapter.offset);
    ~wrb~2660.base, ~wrb~2660.offset := #t~ret4110.base, #t~ret4110.offset;
    havoc #t~ret4110.base, #t~ret4110.offset;
    assume (~wrb~2660.base + ~wrb~2660.offset) % 18446744073709551616 == 0;
    ~status~2660 := -16;
    call ldv_mutex_unlock_43(~adapter.base, ~adapter.offset + 32);
    return;
}

procedure be_cmd_get_ext_fat_capabilites(#in~adapter.base : int, #in~adapter.offset : int, #in~cmd.base : int, #in~cmd.offset : int) returns (#res : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_mbox_lock_of_be_adapter, #valid, #length;

implementation ldv_mutex_lock_interruptible_42(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns (#res : int){
    var #t~ret4325 : int;
    var #t~ret4326 : int;
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;
    var ~ldv_func_res~2808 : ~ldv_func_ret_type___30;
    var ~tmp~2808 : int;
    var ~tmp___0~2808 : int;

  loc6:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    havoc ~ldv_func_res~2808;
    havoc ~tmp~2808;
    havoc ~tmp___0~2808;
    call #t~ret4325 := mutex_lock_interruptible(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    assume -2147483648 <= #t~ret4325 && #t~ret4325 <= 2147483647;
    ~tmp~2808 := #t~ret4325;
    havoc #t~ret4325;
    ~ldv_func_res~2808 := ~tmp~2808;
    call #t~ret4326 := ldv_mutex_lock_interruptible_mbox_lock_of_be_adapter(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    assume -2147483648 <= #t~ret4326 && #t~ret4326 <= 2147483647;
    ~tmp___0~2808 := #t~ret4326;
    havoc #t~ret4326;
    #res := ~tmp___0~2808;
    assume true;
    return;
}

procedure ldv_mutex_lock_interruptible_42(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns (#res : int);
modifies ~ldv_mutex_mbox_lock_of_be_adapter;

implementation main() returns (#res : int){
    var #t~nondet4848 : int;
    var #t~switch4849 : bool;
    var #t~ret4850 : int;
    var #t~ret4851 : int;
    var #t~ret4852 : int;
    var #t~ret4853 : int;
    var #t~ret4854 : int;
    var #t~ret4855 : int;
    var #t~ret4856 : int;
    var #t~ret4857 : int;
    var #t~ret4858 : ~u32;
    var #t~ret4859 : int;
    var #t~ret4860 : int;
    var #t~ret4861 : int;
    var #t~ret4862 : int;
    var #t~ret4863 : int;
    var #t~nondet4864 : int;
    var ~var_group1~3134.base : int, ~var_group1~3134.offset : int;
    var ~var_group2~3134.base : int, ~var_group2~3134.offset : int;
    var ~var_group3~3134.base : int, ~var_group3~3134.offset : int;
    var ~var_group4~3134.base : int, ~var_group4~3134.offset : int;
    var ~var_group5~3134.base : int, ~var_group5~3134.offset : int;
    var ~var_be_read_eeprom_25_p2~3134.base : int, ~var_be_read_eeprom_25_p2~3134.offset : int;
    var ~var_group6~3134.base : int, ~var_group6~3134.offset : int;
    var ~var_group7~3134.base : int, ~var_group7~3134.offset : int;
    var ~var_group8~3134.base : int, ~var_group8~3134.offset : int;
    var ~var_be_get_stat_strings_8_p1~3134 : ~uint32_t;
    var ~var_be_get_stat_strings_8_p2~3134.base : int, ~var_be_get_stat_strings_8_p2~3134.offset : int;
    var ~var_be_set_phys_id_17_p1~3134 : int;
    var ~var_be_set_msg_level_28_p1~3134 : ~u32;
    var ~var_be_get_sset_count_9_p1~3134 : int;
    var ~var_group9~3134.base : int, ~var_group9~3134.offset : int;
    var ~var_be_get_ethtool_stats_7_p2~3134.base : int, ~var_be_get_ethtool_stats_7_p2~3134.offset : int;
    var ~var_group10~3134.base : int, ~var_group10~3134.offset : int;
    var ~var_be_get_regs_4_p2~3134.base : int, ~var_be_get_regs_4_p2~3134.offset : int;
    var ~var_group11~3134.base : int, ~var_group11~3134.offset : int;
    var ~var_group12~3134.base : int, ~var_group12~3134.offset : int;
    var ~var_be_self_test_22_p2~3134.base : int, ~var_be_self_test_22_p2~3134.offset : int;
    var ~var_group13~3134.base : int, ~var_group13~3134.offset : int;
    var ~var_be_get_rxnfc_30_p2~3134.base : int, ~var_be_get_rxnfc_30_p2~3134.offset : int;
    var ~tmp~3134 : int;
    var ~tmp___0~3134 : int;

  loc7:
    havoc ~var_group1~3134.base, ~var_group1~3134.offset;
    havoc ~var_group2~3134.base, ~var_group2~3134.offset;
    havoc ~var_group3~3134.base, ~var_group3~3134.offset;
    havoc ~var_group4~3134.base, ~var_group4~3134.offset;
    havoc ~var_group5~3134.base, ~var_group5~3134.offset;
    havoc ~var_be_read_eeprom_25_p2~3134.base, ~var_be_read_eeprom_25_p2~3134.offset;
    havoc ~var_group6~3134.base, ~var_group6~3134.offset;
    havoc ~var_group7~3134.base, ~var_group7~3134.offset;
    havoc ~var_group8~3134.base, ~var_group8~3134.offset;
    havoc ~var_be_get_stat_strings_8_p1~3134;
    havoc ~var_be_get_stat_strings_8_p2~3134.base, ~var_be_get_stat_strings_8_p2~3134.offset;
    havoc ~var_be_set_phys_id_17_p1~3134;
    havoc ~var_be_set_msg_level_28_p1~3134;
    havoc ~var_be_get_sset_count_9_p1~3134;
    havoc ~var_group9~3134.base, ~var_group9~3134.offset;
    havoc ~var_be_get_ethtool_stats_7_p2~3134.base, ~var_be_get_ethtool_stats_7_p2~3134.offset;
    havoc ~var_group10~3134.base, ~var_group10~3134.offset;
    havoc ~var_be_get_regs_4_p2~3134.base, ~var_be_get_regs_4_p2~3134.offset;
    havoc ~var_group11~3134.base, ~var_group11~3134.offset;
    havoc ~var_group12~3134.base, ~var_group12~3134.offset;
    havoc ~var_be_self_test_22_p2~3134.base, ~var_be_self_test_22_p2~3134.offset;
    havoc ~var_group13~3134.base, ~var_group13~3134.offset;
    havoc ~var_be_get_rxnfc_30_p2~3134.base, ~var_be_get_rxnfc_30_p2~3134.offset;
    havoc ~tmp~3134;
    havoc ~tmp___0~3134;
    ~LDV_IN_INTERRUPT := 1;
    call ldv_initialize();
    assume -2147483648 <= #t~nondet4864 && #t~nondet4864 <= 2147483647;
    ~tmp___0~3134 := #t~nondet4864;
    havoc #t~nondet4864;
    assume ~tmp___0~3134 != 0;
    assume -2147483648 <= #t~nondet4848 && #t~nondet4848 <= 2147483647;
    ~tmp~3134 := #t~nondet4848;
    havoc #t~nondet4848;
    #t~switch4849 := ~tmp~3134 == 0;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 1;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 2;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 3;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 4;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 5;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 6;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 7;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 8;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 9;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 10;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 11;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 12;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 13;
    assume !#t~switch4849;
    #t~switch4849 := #t~switch4849 || ~tmp~3134 == 14;
    assume #t~switch4849;
    call ldv_handler_precall();
    call be_set_msg_level(~var_group1~3134.base, ~var_group1~3134.offset, ~var_be_set_msg_level_28_p1~3134);
    return;
}

procedure main() returns (#res : int);
modifies ~LDV_IN_INTERRUPT, ~ldv_mutex_be_adapter_list_lock, ~ldv_mutex_lock, ~ldv_mutex_mbox_lock_of_be_adapter, ~ldv_mutex_mutex_of_device, #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation ldv_mutex_unlock_mbox_lock_of_be_adapter(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc8:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    assume !(~ldv_mutex_mbox_lock_of_be_adapter == 2);
    call ldv_error();
    return;
}

procedure ldv_mutex_unlock_mbox_lock_of_be_adapter(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ~ldv_mutex_mbox_lock_of_be_adapter;

implementation ldv_mutex_unlock_43(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns (){
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;

  loc9:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    call ldv_mutex_unlock_mbox_lock_of_be_adapter(~ldv_func_arg1.base, ~ldv_func_arg1.offset);
    return;
}

procedure ldv_mutex_unlock_43(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int) returns ();
modifies ~ldv_mutex_mbox_lock_of_be_adapter;

implementation ULTIMATE.init() returns (){
    var #t~nondet0.base : int, #t~nondet0.offset : int;
    var #t~nondet1.base : int, #t~nondet1.offset : int;
    var #t~nondet2.base : int, #t~nondet2.offset : int;
    var #t~nondet3.base : int, #t~nondet3.offset : int;
    var #t~nondet4.base : int, #t~nondet4.offset : int;
    var #t~nondet5.base : int, #t~nondet5.offset : int;
    var #t~nondet6.base : int, #t~nondet6.offset : int;
    var #t~nondet7.base : int, #t~nondet7.offset : int;
    var #t~nondet8.base : int, #t~nondet8.offset : int;
    var #t~nondet9.base : int, #t~nondet9.offset : int;
    var #t~nondet10.base : int, #t~nondet10.offset : int;
    var #t~nondet11.base : int, #t~nondet11.offset : int;
    var #t~nondet12.base : int, #t~nondet12.offset : int;
    var #t~nondet13.base : int, #t~nondet13.offset : int;
    var #t~nondet14.base : int, #t~nondet14.offset : int;
    var #t~nondet15.base : int, #t~nondet15.offset : int;
    var #t~nondet16.base : int, #t~nondet16.offset : int;
    var #t~nondet17.base : int, #t~nondet17.offset : int;
    var #t~nondet18.base : int, #t~nondet18.offset : int;
    var #t~nondet19.base : int, #t~nondet19.offset : int;
    var #t~nondet20.base : int, #t~nondet20.offset : int;
    var #t~nondet21.base : int, #t~nondet21.offset : int;
    var #t~nondet22.base : int, #t~nondet22.offset : int;
    var #t~nondet23.base : int, #t~nondet23.offset : int;
    var #t~nondet24.base : int, #t~nondet24.offset : int;
    var #t~nondet25.base : int, #t~nondet25.offset : int;
    var #t~nondet26.base : int, #t~nondet26.offset : int;
    var #t~nondet27.base : int, #t~nondet27.offset : int;
    var #t~nondet28.base : int, #t~nondet28.offset : int;
    var #t~nondet29.base : int, #t~nondet29.offset : int;
    var #t~nondet30.base : int, #t~nondet30.offset : int;
    var #t~nondet31.base : int, #t~nondet31.offset : int;
    var #t~nondet32.base : int, #t~nondet32.offset : int;
    var #t~nondet33.base : int, #t~nondet33.offset : int;
    var #t~nondet34.base : int, #t~nondet34.offset : int;
    var #t~nondet35.base : int, #t~nondet35.offset : int;
    var #t~nondet36.base : int, #t~nondet36.offset : int;
    var #t~nondet37.base : int, #t~nondet37.offset : int;
    var #t~nondet38.base : int, #t~nondet38.offset : int;
    var #t~nondet39.base : int, #t~nondet39.offset : int;
    var #t~nondet40.base : int, #t~nondet40.offset : int;
    var #t~nondet41.base : int, #t~nondet41.offset : int;
    var #t~nondet42.base : int, #t~nondet42.offset : int;
    var #t~nondet43.base : int, #t~nondet43.offset : int;
    var #t~nondet44.base : int, #t~nondet44.offset : int;
    var #t~nondet45.base : int, #t~nondet45.offset : int;
    var #t~nondet46.base : int, #t~nondet46.offset : int;
    var #t~nondet47.base : int, #t~nondet47.offset : int;
    var #t~nondet48.base : int, #t~nondet48.offset : int;
    var #t~nondet49.base : int, #t~nondet49.offset : int;
    var #t~nondet50.base : int, #t~nondet50.offset : int;
    var #t~nondet51.base : int, #t~nondet51.offset : int;
    var #t~nondet52.base : int, #t~nondet52.offset : int;
    var #t~nondet53.base : int, #t~nondet53.offset : int;
    var #t~nondet54.base : int, #t~nondet54.offset : int;
    var #t~nondet55.base : int, #t~nondet55.offset : int;
    var #t~nondet56.base : int, #t~nondet56.offset : int;
    var #t~nondet57.base : int, #t~nondet57.offset : int;
    var #t~nondet58.base : int, #t~nondet58.offset : int;
    var #t~nondet59.base : int, #t~nondet59.offset : int;
    var #t~nondet60.base : int, #t~nondet60.offset : int;
    var #t~nondet61.base : int, #t~nondet61.offset : int;
    var #t~nondet62.base : int, #t~nondet62.offset : int;
    var #t~nondet63.base : int, #t~nondet63.offset : int;
    var #t~union4979.head : int, #t~union4979.tail : int;
    var #t~nondet4870.base : int, #t~nondet4870.offset : int;
    var #t~union4980.__padding : [int]int, #t~union4980.dep_map.key.base : int, #t~union4980.dep_map.key.offset : int, #t~union4980.dep_map.class_cache.base : [int]int, #t~union4980.dep_map.class_cache.offset : [int]int, #t~union4980.dep_map.name.base : int, #t~union4980.dep_map.name.offset : int, #t~union4980.dep_map.cpu : int, #t~union4980.dep_map.ip : int;
    var #t~nondet4871.base : int, #t~nondet4871.offset : int;

  loc10:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~num_vfs := 0;
    call #t~nondet0.base, #t~nondet0.offset := #Ultimate.alloc(4);
    #memory_int := #memory_int[#t~nondet0.base,#t~nondet0.offset + 0 := 67];
    #memory_int := #memory_int[#t~nondet0.base,#t~nondet0.offset + 1 := 69];
    #memory_int := #memory_int[#t~nondet0.base,#t~nondet0.offset + 2 := 86];
    #memory_int := #memory_int[#t~nondet0.base,#t~nondet0.offset + 3 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[0 := #t~nondet0.base], ~ue_status_low_desc.offset[0 := #t~nondet0.offset];
    call #t~nondet1.base, #t~nondet1.offset := #Ultimate.alloc(4);
    #memory_int := #memory_int[#t~nondet1.base,#t~nondet1.offset + 0 := 67];
    #memory_int := #memory_int[#t~nondet1.base,#t~nondet1.offset + 1 := 84];
    #memory_int := #memory_int[#t~nondet1.base,#t~nondet1.offset + 2 := 88];
    #memory_int := #memory_int[#t~nondet1.base,#t~nondet1.offset + 3 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[1 := #t~nondet1.base], ~ue_status_low_desc.offset[1 := #t~nondet1.offset];
    call #t~nondet2.base, #t~nondet2.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet2.base,#t~nondet2.offset + 0 := 68];
    #memory_int := #memory_int[#t~nondet2.base,#t~nondet2.offset + 1 := 66];
    #memory_int := #memory_int[#t~nondet2.base,#t~nondet2.offset + 2 := 85];
    #memory_int := #memory_int[#t~nondet2.base,#t~nondet2.offset + 3 := 70];
    #memory_int := #memory_int[#t~nondet2.base,#t~nondet2.offset + 4 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[2 := #t~nondet2.base], ~ue_status_low_desc.offset[2 := #t~nondet2.offset];
    call #t~nondet3.base, #t~nondet3.offset := #Ultimate.alloc(4);
    #memory_int := #memory_int[#t~nondet3.base,#t~nondet3.offset + 0 := 69];
    #memory_int := #memory_int[#t~nondet3.base,#t~nondet3.offset + 1 := 82];
    #memory_int := #memory_int[#t~nondet3.base,#t~nondet3.offset + 2 := 88];
    #memory_int := #memory_int[#t~nondet3.base,#t~nondet3.offset + 3 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[3 := #t~nondet3.base], ~ue_status_low_desc.offset[3 := #t~nondet3.offset];
    call #t~nondet4.base, #t~nondet4.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet4.base,#t~nondet4.offset + 0 := 72];
    #memory_int := #memory_int[#t~nondet4.base,#t~nondet4.offset + 1 := 111];
    #memory_int := #memory_int[#t~nondet4.base,#t~nondet4.offset + 2 := 115];
    #memory_int := #memory_int[#t~nondet4.base,#t~nondet4.offset + 3 := 116];
    #memory_int := #memory_int[#t~nondet4.base,#t~nondet4.offset + 4 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[4 := #t~nondet4.base], ~ue_status_low_desc.offset[4 := #t~nondet4.offset];
    call #t~nondet5.base, #t~nondet5.offset := #Ultimate.alloc(4);
    #memory_int := #memory_int[#t~nondet5.base,#t~nondet5.offset + 0 := 77];
    #memory_int := #memory_int[#t~nondet5.base,#t~nondet5.offset + 1 := 80];
    #memory_int := #memory_int[#t~nondet5.base,#t~nondet5.offset + 2 := 85];
    #memory_int := #memory_int[#t~nondet5.base,#t~nondet5.offset + 3 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[5 := #t~nondet5.base], ~ue_status_low_desc.offset[5 := #t~nondet5.offset];
    call #t~nondet6.base, #t~nondet6.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet6.base,#t~nondet6.offset + 0 := 78];
    #memory_int := #memory_int[#t~nondet6.base,#t~nondet6.offset + 1 := 68];
    #memory_int := #memory_int[#t~nondet6.base,#t~nondet6.offset + 2 := 77];
    #memory_int := #memory_int[#t~nondet6.base,#t~nondet6.offset + 3 := 65];
    #memory_int := #memory_int[#t~nondet6.base,#t~nondet6.offset + 4 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[6 := #t~nondet6.base], ~ue_status_low_desc.offset[6 := #t~nondet6.offset];
    call #t~nondet7.base, #t~nondet7.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet7.base,#t~nondet7.offset + 0 := 80];
    #memory_int := #memory_int[#t~nondet7.base,#t~nondet7.offset + 1 := 84];
    #memory_int := #memory_int[#t~nondet7.base,#t~nondet7.offset + 2 := 67];
    #memory_int := #memory_int[#t~nondet7.base,#t~nondet7.offset + 3 := 32];
    #memory_int := #memory_int[#t~nondet7.base,#t~nondet7.offset + 4 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[7 := #t~nondet7.base], ~ue_status_low_desc.offset[7 := #t~nondet7.offset];
    call #t~nondet8.base, #t~nondet8.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet8.base,#t~nondet8.offset + 0 := 82];
    #memory_int := #memory_int[#t~nondet8.base,#t~nondet8.offset + 1 := 68];
    #memory_int := #memory_int[#t~nondet8.base,#t~nondet8.offset + 2 := 77];
    #memory_int := #memory_int[#t~nondet8.base,#t~nondet8.offset + 3 := 65];
    #memory_int := #memory_int[#t~nondet8.base,#t~nondet8.offset + 4 := 32];
    #memory_int := #memory_int[#t~nondet8.base,#t~nondet8.offset + 5 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[8 := #t~nondet8.base], ~ue_status_low_desc.offset[8 := #t~nondet8.offset];
    call #t~nondet9.base, #t~nondet9.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet9.base,#t~nondet9.offset + 0 := 82];
    #memory_int := #memory_int[#t~nondet9.base,#t~nondet9.offset + 1 := 88];
    #memory_int := #memory_int[#t~nondet9.base,#t~nondet9.offset + 2 := 70];
    #memory_int := #memory_int[#t~nondet9.base,#t~nondet9.offset + 3 := 32];
    #memory_int := #memory_int[#t~nondet9.base,#t~nondet9.offset + 4 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[9 := #t~nondet9.base], ~ue_status_low_desc.offset[9 := #t~nondet9.offset];
    call #t~nondet10.base, #t~nondet10.offset := #Ultimate.alloc(7);
    #memory_int := #memory_int[#t~nondet10.base,#t~nondet10.offset + 0 := 82];
    #memory_int := #memory_int[#t~nondet10.base,#t~nondet10.offset + 1 := 88];
    #memory_int := #memory_int[#t~nondet10.base,#t~nondet10.offset + 2 := 73];
    #memory_int := #memory_int[#t~nondet10.base,#t~nondet10.offset + 3 := 80];
    #memory_int := #memory_int[#t~nondet10.base,#t~nondet10.offset + 4 := 83];
    #memory_int := #memory_int[#t~nondet10.base,#t~nondet10.offset + 5 := 32];
    #memory_int := #memory_int[#t~nondet10.base,#t~nondet10.offset + 6 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[10 := #t~nondet10.base], ~ue_status_low_desc.offset[10 := #t~nondet10.offset];
    call #t~nondet11.base, #t~nondet11.offset := #Ultimate.alloc(8);
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[11 := #t~nondet11.base], ~ue_status_low_desc.offset[11 := #t~nondet11.offset];
    call #t~nondet12.base, #t~nondet12.offset := #Ultimate.alloc(8);
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[12 := #t~nondet12.base], ~ue_status_low_desc.offset[12 := #t~nondet12.offset];
    call #t~nondet13.base, #t~nondet13.offset := #Ultimate.alloc(8);
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[13 := #t~nondet13.base], ~ue_status_low_desc.offset[13 := #t~nondet13.offset];
    call #t~nondet14.base, #t~nondet14.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet14.base,#t~nondet14.offset + 0 := 84];
    #memory_int := #memory_int[#t~nondet14.base,#t~nondet14.offset + 1 := 73];
    #memory_int := #memory_int[#t~nondet14.base,#t~nondet14.offset + 2 := 77];
    #memory_int := #memory_int[#t~nondet14.base,#t~nondet14.offset + 3 := 32];
    #memory_int := #memory_int[#t~nondet14.base,#t~nondet14.offset + 4 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[14 := #t~nondet14.base], ~ue_status_low_desc.offset[14 := #t~nondet14.offset];
    call #t~nondet15.base, #t~nondet15.offset := #Ultimate.alloc(7);
    #memory_int := #memory_int[#t~nondet15.base,#t~nondet15.offset + 0 := 84];
    #memory_int := #memory_int[#t~nondet15.base,#t~nondet15.offset + 1 := 80];
    #memory_int := #memory_int[#t~nondet15.base,#t~nondet15.offset + 2 := 79];
    #memory_int := #memory_int[#t~nondet15.base,#t~nondet15.offset + 3 := 83];
    #memory_int := #memory_int[#t~nondet15.base,#t~nondet15.offset + 4 := 84];
    #memory_int := #memory_int[#t~nondet15.base,#t~nondet15.offset + 5 := 32];
    #memory_int := #memory_int[#t~nondet15.base,#t~nondet15.offset + 6 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[15 := #t~nondet15.base], ~ue_status_low_desc.offset[15 := #t~nondet15.offset];
    call #t~nondet16.base, #t~nondet16.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet16.base,#t~nondet16.offset + 0 := 84];
    #memory_int := #memory_int[#t~nondet16.base,#t~nondet16.offset + 1 := 80];
    #memory_int := #memory_int[#t~nondet16.base,#t~nondet16.offset + 2 := 82];
    #memory_int := #memory_int[#t~nondet16.base,#t~nondet16.offset + 3 := 69];
    #memory_int := #memory_int[#t~nondet16.base,#t~nondet16.offset + 4 := 32];
    #memory_int := #memory_int[#t~nondet16.base,#t~nondet16.offset + 5 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[16 := #t~nondet16.base], ~ue_status_low_desc.offset[16 := #t~nondet16.offset];
    call #t~nondet17.base, #t~nondet17.offset := #Ultimate.alloc(7);
    #memory_int := #memory_int[#t~nondet17.base,#t~nondet17.offset + 0 := 84];
    #memory_int := #memory_int[#t~nondet17.base,#t~nondet17.offset + 1 := 88];
    #memory_int := #memory_int[#t~nondet17.base,#t~nondet17.offset + 2 := 73];
    #memory_int := #memory_int[#t~nondet17.base,#t~nondet17.offset + 3 := 80];
    #memory_int := #memory_int[#t~nondet17.base,#t~nondet17.offset + 4 := 83];
    #memory_int := #memory_int[#t~nondet17.base,#t~nondet17.offset + 5 := 32];
    #memory_int := #memory_int[#t~nondet17.base,#t~nondet17.offset + 6 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[17 := #t~nondet17.base], ~ue_status_low_desc.offset[17 := #t~nondet17.offset];
    call #t~nondet18.base, #t~nondet18.offset := #Ultimate.alloc(8);
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[18 := #t~nondet18.base], ~ue_status_low_desc.offset[18 := #t~nondet18.offset];
    call #t~nondet19.base, #t~nondet19.offset := #Ultimate.alloc(8);
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[19 := #t~nondet19.base], ~ue_status_low_desc.offset[19 := #t~nondet19.offset];
    call #t~nondet20.base, #t~nondet20.offset := #Ultimate.alloc(4);
    #memory_int := #memory_int[#t~nondet20.base,#t~nondet20.offset + 0 := 85];
    #memory_int := #memory_int[#t~nondet20.base,#t~nondet20.offset + 1 := 67];
    #memory_int := #memory_int[#t~nondet20.base,#t~nondet20.offset + 2 := 32];
    #memory_int := #memory_int[#t~nondet20.base,#t~nondet20.offset + 3 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[20 := #t~nondet20.base], ~ue_status_low_desc.offset[20 := #t~nondet20.offset];
    call #t~nondet21.base, #t~nondet21.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet21.base,#t~nondet21.offset + 0 := 87];
    #memory_int := #memory_int[#t~nondet21.base,#t~nondet21.offset + 1 := 68];
    #memory_int := #memory_int[#t~nondet21.base,#t~nondet21.offset + 2 := 77];
    #memory_int := #memory_int[#t~nondet21.base,#t~nondet21.offset + 3 := 65];
    #memory_int := #memory_int[#t~nondet21.base,#t~nondet21.offset + 4 := 32];
    #memory_int := #memory_int[#t~nondet21.base,#t~nondet21.offset + 5 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[21 := #t~nondet21.base], ~ue_status_low_desc.offset[21 := #t~nondet21.offset];
    call #t~nondet22.base, #t~nondet22.offset := #Ultimate.alloc(8);
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[22 := #t~nondet22.base], ~ue_status_low_desc.offset[22 := #t~nondet22.offset];
    call #t~nondet23.base, #t~nondet23.offset := #Ultimate.alloc(7);
    #memory_int := #memory_int[#t~nondet23.base,#t~nondet23.offset + 0 := 72];
    #memory_int := #memory_int[#t~nondet23.base,#t~nondet23.offset + 1 := 79];
    #memory_int := #memory_int[#t~nondet23.base,#t~nondet23.offset + 2 := 83];
    #memory_int := #memory_int[#t~nondet23.base,#t~nondet23.offset + 3 := 84];
    #memory_int := #memory_int[#t~nondet23.base,#t~nondet23.offset + 4 := 49];
    #memory_int := #memory_int[#t~nondet23.base,#t~nondet23.offset + 5 := 32];
    #memory_int := #memory_int[#t~nondet23.base,#t~nondet23.offset + 6 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[23 := #t~nondet23.base], ~ue_status_low_desc.offset[23 := #t~nondet23.offset];
    call #t~nondet24.base, #t~nondet24.offset := #Ultimate.alloc(12);
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[24 := #t~nondet24.base], ~ue_status_low_desc.offset[24 := #t~nondet24.offset];
    call #t~nondet25.base, #t~nondet25.offset := #Ultimate.alloc(12);
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[25 := #t~nondet25.base], ~ue_status_low_desc.offset[25 := #t~nondet25.offset];
    call #t~nondet26.base, #t~nondet26.offset := #Ultimate.alloc(11);
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[26 := #t~nondet26.base], ~ue_status_low_desc.offset[26 := #t~nondet26.offset];
    call #t~nondet27.base, #t~nondet27.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet27.base,#t~nondet27.offset + 0 := 77];
    #memory_int := #memory_int[#t~nondet27.base,#t~nondet27.offset + 1 := 66];
    #memory_int := #memory_int[#t~nondet27.base,#t~nondet27.offset + 2 := 79];
    #memory_int := #memory_int[#t~nondet27.base,#t~nondet27.offset + 3 := 88];
    #memory_int := #memory_int[#t~nondet27.base,#t~nondet27.offset + 4 := 32];
    #memory_int := #memory_int[#t~nondet27.base,#t~nondet27.offset + 5 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[27 := #t~nondet27.base], ~ue_status_low_desc.offset[27 := #t~nondet27.offset];
    call #t~nondet28.base, #t~nondet28.offset := #Ultimate.alloc(8);
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[28 := #t~nondet28.base], ~ue_status_low_desc.offset[28 := #t~nondet28.offset];
    call #t~nondet29.base, #t~nondet29.offset := #Ultimate.alloc(8);
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[29 := #t~nondet29.base], ~ue_status_low_desc.offset[29 := #t~nondet29.offset];
    call #t~nondet30.base, #t~nondet30.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet30.base,#t~nondet30.offset + 0 := 74];
    #memory_int := #memory_int[#t~nondet30.base,#t~nondet30.offset + 1 := 84];
    #memory_int := #memory_int[#t~nondet30.base,#t~nondet30.offset + 2 := 65];
    #memory_int := #memory_int[#t~nondet30.base,#t~nondet30.offset + 3 := 71];
    #memory_int := #memory_int[#t~nondet30.base,#t~nondet30.offset + 4 := 0];
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[30 := #t~nondet30.base], ~ue_status_low_desc.offset[30 := #t~nondet30.offset];
    call #t~nondet31.base, #t~nondet31.offset := #Ultimate.alloc(12);
    ~ue_status_low_desc.base, ~ue_status_low_desc.offset := ~ue_status_low_desc.base[31 := #t~nondet31.base], ~ue_status_low_desc.offset[31 := #t~nondet31.offset];
    havoc #t~nondet0.base, #t~nondet0.offset;
    havoc #t~nondet1.base, #t~nondet1.offset;
    havoc #t~nondet2.base, #t~nondet2.offset;
    havoc #t~nondet3.base, #t~nondet3.offset;
    havoc #t~nondet4.base, #t~nondet4.offset;
    havoc #t~nondet5.base, #t~nondet5.offset;
    havoc #t~nondet6.base, #t~nondet6.offset;
    havoc #t~nondet7.base, #t~nondet7.offset;
    havoc #t~nondet8.base, #t~nondet8.offset;
    havoc #t~nondet9.base, #t~nondet9.offset;
    havoc #t~nondet10.base, #t~nondet10.offset;
    havoc #t~nondet11.base, #t~nondet11.offset;
    havoc #t~nondet12.base, #t~nondet12.offset;
    havoc #t~nondet13.base, #t~nondet13.offset;
    havoc #t~nondet14.base, #t~nondet14.offset;
    havoc #t~nondet15.base, #t~nondet15.offset;
    havoc #t~nondet16.base, #t~nondet16.offset;
    havoc #t~nondet17.base, #t~nondet17.offset;
    havoc #t~nondet18.base, #t~nondet18.offset;
    havoc #t~nondet19.base, #t~nondet19.offset;
    havoc #t~nondet20.base, #t~nondet20.offset;
    havoc #t~nondet21.base, #t~nondet21.offset;
    havoc #t~nondet22.base, #t~nondet22.offset;
    havoc #t~nondet23.base, #t~nondet23.offset;
    havoc #t~nondet24.base, #t~nondet24.offset;
    havoc #t~nondet25.base, #t~nondet25.offset;
    havoc #t~nondet26.base, #t~nondet26.offset;
    havoc #t~nondet27.base, #t~nondet27.offset;
    havoc #t~nondet28.base, #t~nondet28.offset;
    havoc #t~nondet29.base, #t~nondet29.offset;
    havoc #t~nondet30.base, #t~nondet30.offset;
    havoc #t~nondet31.base, #t~nondet31.offset;
    call #t~nondet32.base, #t~nondet32.offset := #Ultimate.alloc(11);
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[0 := #t~nondet32.base], ~ue_status_hi_desc.offset[0 := #t~nondet32.offset];
    call #t~nondet33.base, #t~nondet33.offset := #Ultimate.alloc(9);
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[1 := #t~nondet33.base], ~ue_status_hi_desc.offset[1 := #t~nondet33.offset];
    call #t~nondet34.base, #t~nondet34.offset := #Ultimate.alloc(11);
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[2 := #t~nondet34.base], ~ue_status_hi_desc.offset[2 := #t~nondet34.offset];
    call #t~nondet35.base, #t~nondet35.offset := #Ultimate.alloc(9);
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[3 := #t~nondet35.base], ~ue_status_hi_desc.offset[3 := #t~nondet35.offset];
    call #t~nondet36.base, #t~nondet36.offset := #Ultimate.alloc(11);
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[4 := #t~nondet36.base], ~ue_status_hi_desc.offset[4 := #t~nondet36.offset];
    call #t~nondet37.base, #t~nondet37.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet37.base,#t~nondet37.offset + 0 := 80];
    #memory_int := #memory_int[#t~nondet37.base,#t~nondet37.offset + 1 := 67];
    #memory_int := #memory_int[#t~nondet37.base,#t~nondet37.offset + 2 := 84];
    #memory_int := #memory_int[#t~nondet37.base,#t~nondet37.offset + 3 := 76];
    #memory_int := #memory_int[#t~nondet37.base,#t~nondet37.offset + 4 := 48];
    #memory_int := #memory_int[#t~nondet37.base,#t~nondet37.offset + 5 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[5 := #t~nondet37.base], ~ue_status_hi_desc.offset[5 := #t~nondet37.offset];
    call #t~nondet38.base, #t~nondet38.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet38.base,#t~nondet38.offset + 0 := 80];
    #memory_int := #memory_int[#t~nondet38.base,#t~nondet38.offset + 1 := 67];
    #memory_int := #memory_int[#t~nondet38.base,#t~nondet38.offset + 2 := 84];
    #memory_int := #memory_int[#t~nondet38.base,#t~nondet38.offset + 3 := 76];
    #memory_int := #memory_int[#t~nondet38.base,#t~nondet38.offset + 4 := 49];
    #memory_int := #memory_int[#t~nondet38.base,#t~nondet38.offset + 5 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[6 := #t~nondet38.base], ~ue_status_hi_desc.offset[6 := #t~nondet38.offset];
    call #t~nondet39.base, #t~nondet39.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet39.base,#t~nondet39.offset + 0 := 80];
    #memory_int := #memory_int[#t~nondet39.base,#t~nondet39.offset + 1 := 77];
    #memory_int := #memory_int[#t~nondet39.base,#t~nondet39.offset + 2 := 69];
    #memory_int := #memory_int[#t~nondet39.base,#t~nondet39.offset + 3 := 77];
    #memory_int := #memory_int[#t~nondet39.base,#t~nondet39.offset + 4 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[7 := #t~nondet39.base], ~ue_status_hi_desc.offset[7 := #t~nondet39.offset];
    call #t~nondet40.base, #t~nondet40.offset := #Ultimate.alloc(3);
    #memory_int := #memory_int[#t~nondet40.base,#t~nondet40.offset + 0 := 82];
    #memory_int := #memory_int[#t~nondet40.base,#t~nondet40.offset + 1 := 82];
    #memory_int := #memory_int[#t~nondet40.base,#t~nondet40.offset + 2 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[8 := #t~nondet40.base], ~ue_status_hi_desc.offset[8 := #t~nondet40.offset];
    call #t~nondet41.base, #t~nondet41.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet41.base,#t~nondet41.offset + 0 := 84];
    #memory_int := #memory_int[#t~nondet41.base,#t~nondet41.offset + 1 := 88];
    #memory_int := #memory_int[#t~nondet41.base,#t~nondet41.offset + 2 := 80];
    #memory_int := #memory_int[#t~nondet41.base,#t~nondet41.offset + 3 := 66];
    #memory_int := #memory_int[#t~nondet41.base,#t~nondet41.offset + 4 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[9 := #t~nondet41.base], ~ue_status_hi_desc.offset[9 := #t~nondet41.offset];
    call #t~nondet42.base, #t~nondet42.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet42.base,#t~nondet42.offset + 0 := 82];
    #memory_int := #memory_int[#t~nondet42.base,#t~nondet42.offset + 1 := 88];
    #memory_int := #memory_int[#t~nondet42.base,#t~nondet42.offset + 2 := 80];
    #memory_int := #memory_int[#t~nondet42.base,#t~nondet42.offset + 3 := 80];
    #memory_int := #memory_int[#t~nondet42.base,#t~nondet42.offset + 4 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[10 := #t~nondet42.base], ~ue_status_hi_desc.offset[10 := #t~nondet42.offset];
    call #t~nondet43.base, #t~nondet43.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet43.base,#t~nondet43.offset + 0 := 88];
    #memory_int := #memory_int[#t~nondet43.base,#t~nondet43.offset + 1 := 65];
    #memory_int := #memory_int[#t~nondet43.base,#t~nondet43.offset + 2 := 85];
    #memory_int := #memory_int[#t~nondet43.base,#t~nondet43.offset + 3 := 73];
    #memory_int := #memory_int[#t~nondet43.base,#t~nondet43.offset + 4 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[11 := #t~nondet43.base], ~ue_status_hi_desc.offset[11 := #t~nondet43.offset];
    call #t~nondet44.base, #t~nondet44.offset := #Ultimate.alloc(4);
    #memory_int := #memory_int[#t~nondet44.base,#t~nondet44.offset + 0 := 84];
    #memory_int := #memory_int[#t~nondet44.base,#t~nondet44.offset + 1 := 88];
    #memory_int := #memory_int[#t~nondet44.base,#t~nondet44.offset + 2 := 80];
    #memory_int := #memory_int[#t~nondet44.base,#t~nondet44.offset + 3 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[12 := #t~nondet44.base], ~ue_status_hi_desc.offset[12 := #t~nondet44.offset];
    call #t~nondet45.base, #t~nondet45.offset := #Ultimate.alloc(4);
    #memory_int := #memory_int[#t~nondet45.base,#t~nondet45.offset + 0 := 65];
    #memory_int := #memory_int[#t~nondet45.base,#t~nondet45.offset + 1 := 82];
    #memory_int := #memory_int[#t~nondet45.base,#t~nondet45.offset + 2 := 77];
    #memory_int := #memory_int[#t~nondet45.base,#t~nondet45.offset + 3 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[13 := #t~nondet45.base], ~ue_status_hi_desc.offset[13 := #t~nondet45.offset];
    call #t~nondet46.base, #t~nondet46.offset := #Ultimate.alloc(4);
    #memory_int := #memory_int[#t~nondet46.base,#t~nondet46.offset + 0 := 73];
    #memory_int := #memory_int[#t~nondet46.base,#t~nondet46.offset + 1 := 80];
    #memory_int := #memory_int[#t~nondet46.base,#t~nondet46.offset + 2 := 67];
    #memory_int := #memory_int[#t~nondet46.base,#t~nondet46.offset + 3 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[14 := #t~nondet46.base], ~ue_status_hi_desc.offset[14 := #t~nondet46.offset];
    call #t~nondet47.base, #t~nondet47.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet47.base,#t~nondet47.offset + 0 := 72];
    #memory_int := #memory_int[#t~nondet47.base,#t~nondet47.offset + 1 := 79];
    #memory_int := #memory_int[#t~nondet47.base,#t~nondet47.offset + 2 := 83];
    #memory_int := #memory_int[#t~nondet47.base,#t~nondet47.offset + 3 := 84];
    #memory_int := #memory_int[#t~nondet47.base,#t~nondet47.offset + 4 := 50];
    #memory_int := #memory_int[#t~nondet47.base,#t~nondet47.offset + 5 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[15 := #t~nondet47.base], ~ue_status_hi_desc.offset[15 := #t~nondet47.offset];
    call #t~nondet48.base, #t~nondet48.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet48.base,#t~nondet48.offset + 0 := 72];
    #memory_int := #memory_int[#t~nondet48.base,#t~nondet48.offset + 1 := 79];
    #memory_int := #memory_int[#t~nondet48.base,#t~nondet48.offset + 2 := 83];
    #memory_int := #memory_int[#t~nondet48.base,#t~nondet48.offset + 3 := 84];
    #memory_int := #memory_int[#t~nondet48.base,#t~nondet48.offset + 4 := 51];
    #memory_int := #memory_int[#t~nondet48.base,#t~nondet48.offset + 5 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[16 := #t~nondet48.base], ~ue_status_hi_desc.offset[16 := #t~nondet48.offset];
    call #t~nondet49.base, #t~nondet49.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet49.base,#t~nondet49.offset + 0 := 72];
    #memory_int := #memory_int[#t~nondet49.base,#t~nondet49.offset + 1 := 79];
    #memory_int := #memory_int[#t~nondet49.base,#t~nondet49.offset + 2 := 83];
    #memory_int := #memory_int[#t~nondet49.base,#t~nondet49.offset + 3 := 84];
    #memory_int := #memory_int[#t~nondet49.base,#t~nondet49.offset + 4 := 52];
    #memory_int := #memory_int[#t~nondet49.base,#t~nondet49.offset + 5 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[17 := #t~nondet49.base], ~ue_status_hi_desc.offset[17 := #t~nondet49.offset];
    call #t~nondet50.base, #t~nondet50.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet50.base,#t~nondet50.offset + 0 := 72];
    #memory_int := #memory_int[#t~nondet50.base,#t~nondet50.offset + 1 := 79];
    #memory_int := #memory_int[#t~nondet50.base,#t~nondet50.offset + 2 := 83];
    #memory_int := #memory_int[#t~nondet50.base,#t~nondet50.offset + 3 := 84];
    #memory_int := #memory_int[#t~nondet50.base,#t~nondet50.offset + 4 := 53];
    #memory_int := #memory_int[#t~nondet50.base,#t~nondet50.offset + 5 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[18 := #t~nondet50.base], ~ue_status_hi_desc.offset[18 := #t~nondet50.offset];
    call #t~nondet51.base, #t~nondet51.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet51.base,#t~nondet51.offset + 0 := 72];
    #memory_int := #memory_int[#t~nondet51.base,#t~nondet51.offset + 1 := 79];
    #memory_int := #memory_int[#t~nondet51.base,#t~nondet51.offset + 2 := 83];
    #memory_int := #memory_int[#t~nondet51.base,#t~nondet51.offset + 3 := 84];
    #memory_int := #memory_int[#t~nondet51.base,#t~nondet51.offset + 4 := 54];
    #memory_int := #memory_int[#t~nondet51.base,#t~nondet51.offset + 5 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[19 := #t~nondet51.base], ~ue_status_hi_desc.offset[19 := #t~nondet51.offset];
    call #t~nondet52.base, #t~nondet52.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet52.base,#t~nondet52.offset + 0 := 72];
    #memory_int := #memory_int[#t~nondet52.base,#t~nondet52.offset + 1 := 79];
    #memory_int := #memory_int[#t~nondet52.base,#t~nondet52.offset + 2 := 83];
    #memory_int := #memory_int[#t~nondet52.base,#t~nondet52.offset + 3 := 84];
    #memory_int := #memory_int[#t~nondet52.base,#t~nondet52.offset + 4 := 55];
    #memory_int := #memory_int[#t~nondet52.base,#t~nondet52.offset + 5 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[20 := #t~nondet52.base], ~ue_status_hi_desc.offset[20 := #t~nondet52.offset];
    call #t~nondet53.base, #t~nondet53.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet53.base,#t~nondet53.offset + 0 := 72];
    #memory_int := #memory_int[#t~nondet53.base,#t~nondet53.offset + 1 := 79];
    #memory_int := #memory_int[#t~nondet53.base,#t~nondet53.offset + 2 := 83];
    #memory_int := #memory_int[#t~nondet53.base,#t~nondet53.offset + 3 := 84];
    #memory_int := #memory_int[#t~nondet53.base,#t~nondet53.offset + 4 := 56];
    #memory_int := #memory_int[#t~nondet53.base,#t~nondet53.offset + 5 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[21 := #t~nondet53.base], ~ue_status_hi_desc.offset[21 := #t~nondet53.offset];
    call #t~nondet54.base, #t~nondet54.offset := #Ultimate.alloc(6);
    #memory_int := #memory_int[#t~nondet54.base,#t~nondet54.offset + 0 := 72];
    #memory_int := #memory_int[#t~nondet54.base,#t~nondet54.offset + 1 := 79];
    #memory_int := #memory_int[#t~nondet54.base,#t~nondet54.offset + 2 := 83];
    #memory_int := #memory_int[#t~nondet54.base,#t~nondet54.offset + 3 := 84];
    #memory_int := #memory_int[#t~nondet54.base,#t~nondet54.offset + 4 := 57];
    #memory_int := #memory_int[#t~nondet54.base,#t~nondet54.offset + 5 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[22 := #t~nondet54.base], ~ue_status_hi_desc.offset[22 := #t~nondet54.offset];
    call #t~nondet55.base, #t~nondet55.offset := #Ultimate.alloc(5);
    #memory_int := #memory_int[#t~nondet55.base,#t~nondet55.offset + 0 := 78];
    #memory_int := #memory_int[#t~nondet55.base,#t~nondet55.offset + 1 := 69];
    #memory_int := #memory_int[#t~nondet55.base,#t~nondet55.offset + 2 := 84];
    #memory_int := #memory_int[#t~nondet55.base,#t~nondet55.offset + 3 := 67];
    #memory_int := #memory_int[#t~nondet55.base,#t~nondet55.offset + 4 := 0];
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[23 := #t~nondet55.base], ~ue_status_hi_desc.offset[23 := #t~nondet55.offset];
    call #t~nondet56.base, #t~nondet56.offset := #Ultimate.alloc(8);
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[24 := #t~nondet56.base], ~ue_status_hi_desc.offset[24 := #t~nondet56.offset];
    call #t~nondet57.base, #t~nondet57.offset := #Ultimate.alloc(8);
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[25 := #t~nondet57.base], ~ue_status_hi_desc.offset[25 := #t~nondet57.offset];
    call #t~nondet58.base, #t~nondet58.offset := #Ultimate.alloc(8);
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[26 := #t~nondet58.base], ~ue_status_hi_desc.offset[26 := #t~nondet58.offset];
    call #t~nondet59.base, #t~nondet59.offset := #Ultimate.alloc(8);
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[27 := #t~nondet59.base], ~ue_status_hi_desc.offset[27 := #t~nondet59.offset];
    call #t~nondet60.base, #t~nondet60.offset := #Ultimate.alloc(8);
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[28 := #t~nondet60.base], ~ue_status_hi_desc.offset[28 := #t~nondet60.offset];
    call #t~nondet61.base, #t~nondet61.offset := #Ultimate.alloc(8);
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[29 := #t~nondet61.base], ~ue_status_hi_desc.offset[29 := #t~nondet61.offset];
    call #t~nondet62.base, #t~nondet62.offset := #Ultimate.alloc(8);
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[30 := #t~nondet62.base], ~ue_status_hi_desc.offset[30 := #t~nondet62.offset];
    call #t~nondet63.base, #t~nondet63.offset := #Ultimate.alloc(8);
    ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset := ~ue_status_hi_desc.base[31 := #t~nondet63.base], ~ue_status_hi_desc.offset[31 := #t~nondet63.offset];
    havoc #t~nondet32.base, #t~nondet32.offset;
    havoc #t~nondet33.base, #t~nondet33.offset;
    havoc #t~nondet34.base, #t~nondet34.offset;
    havoc #t~nondet35.base, #t~nondet35.offset;
    havoc #t~nondet36.base, #t~nondet36.offset;
    havoc #t~nondet37.base, #t~nondet37.offset;
    havoc #t~nondet38.base, #t~nondet38.offset;
    havoc #t~nondet39.base, #t~nondet39.offset;
    havoc #t~nondet40.base, #t~nondet40.offset;
    havoc #t~nondet41.base, #t~nondet41.offset;
    havoc #t~nondet42.base, #t~nondet42.offset;
    havoc #t~nondet43.base, #t~nondet43.offset;
    havoc #t~nondet44.base, #t~nondet44.offset;
    havoc #t~nondet45.base, #t~nondet45.offset;
    havoc #t~nondet46.base, #t~nondet46.offset;
    havoc #t~nondet47.base, #t~nondet47.offset;
    havoc #t~nondet48.base, #t~nondet48.offset;
    havoc #t~nondet49.base, #t~nondet49.offset;
    havoc #t~nondet50.base, #t~nondet50.offset;
    havoc #t~nondet51.base, #t~nondet51.offset;
    havoc #t~nondet52.base, #t~nondet52.offset;
    havoc #t~nondet53.base, #t~nondet53.offset;
    havoc #t~nondet54.base, #t~nondet54.offset;
    havoc #t~nondet55.base, #t~nondet55.offset;
    havoc #t~nondet56.base, #t~nondet56.offset;
    havoc #t~nondet57.base, #t~nondet57.offset;
    havoc #t~nondet58.base, #t~nondet58.offset;
    havoc #t~nondet59.base, #t~nondet59.offset;
    havoc #t~nondet60.base, #t~nondet60.offset;
    havoc #t~nondet61.base, #t~nondet61.offset;
    havoc #t~nondet62.base, #t~nondet62.offset;
    havoc #t~nondet63.base, #t~nondet63.offset;
    call ~#flash_cookie.base, ~#flash_cookie.offset := #Ultimate.alloc(32);
    call write~int(42, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 0, 1);
    call write~int(42, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 1, 1);
    call write~int(42, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 2, 1);
    call write~int(32, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 3, 1);
    call write~int(83, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 4, 1);
    call write~int(69, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 5, 1);
    call write~int(32, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 6, 1);
    call write~int(70, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 7, 1);
    call write~int(76, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 8, 1);
    call write~int(65, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 9, 1);
    call write~int(83, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 10, 1);
    call write~int(0, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 11, 1);
    call write~int(0, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 12, 1);
    call write~int(0, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 13, 1);
    call write~int(0, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 14, 1);
    call write~int(0, ~#flash_cookie.base, ~#flash_cookie.offset + 0 + 15, 1);
    call write~int(72, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 0, 1);
    call write~int(32, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 1, 1);
    call write~int(68, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 2, 1);
    call write~int(73, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 3, 1);
    call write~int(82, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 4, 1);
    call write~int(69, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 5, 1);
    call write~int(67, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 6, 1);
    call write~int(84, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 7, 1);
    call write~int(79, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 8, 1);
    call write~int(82, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 9, 1);
    call write~int(89, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 10, 1);
    call write~int(32, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 11, 1);
    call write~int(42, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 12, 1);
    call write~int(42, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 13, 1);
    call write~int(42, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 14, 1);
    call write~int(32, ~#flash_cookie.base, ~#flash_cookie.offset + 16 + 15, 1);
    ~LDV_IN_INTERRUPT := 0;
    call ~#et_self_tests.base, ~#et_self_tests.offset := #Ultimate.alloc(160);
    call write~int(77, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 0, 1);
    call write~int(65, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 1, 1);
    call write~int(67, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 2, 1);
    call write~int(32, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 3, 1);
    call write~int(76, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 4, 1);
    call write~int(111, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 5, 1);
    call write~int(111, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 6, 1);
    call write~int(112, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 7, 1);
    call write~int(98, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 8, 1);
    call write~int(97, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 9, 1);
    call write~int(99, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 10, 1);
    call write~int(107, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 11, 1);
    call write~int(32, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 12, 1);
    call write~int(116, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 13, 1);
    call write~int(101, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 14, 1);
    call write~int(115, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 15, 1);
    call write~int(116, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 16, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 17, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 18, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 19, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 20, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 21, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 22, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 23, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 24, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 25, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 26, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 27, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 28, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 29, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 30, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 0 + 31, 1);
    call write~int(80, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 0, 1);
    call write~int(72, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 1, 1);
    call write~int(89, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 2, 1);
    call write~int(32, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 3, 1);
    call write~int(76, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 4, 1);
    call write~int(111, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 5, 1);
    call write~int(111, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 6, 1);
    call write~int(112, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 7, 1);
    call write~int(98, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 8, 1);
    call write~int(97, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 9, 1);
    call write~int(99, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 10, 1);
    call write~int(107, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 11, 1);
    call write~int(32, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 12, 1);
    call write~int(116, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 13, 1);
    call write~int(101, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 14, 1);
    call write~int(115, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 15, 1);
    call write~int(116, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 16, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 17, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 18, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 19, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 20, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 21, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 22, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 23, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 24, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 25, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 26, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 27, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 28, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 29, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 30, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 32 + 31, 1);
    call write~int(69, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 0, 1);
    call write~int(120, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 1, 1);
    call write~int(116, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 2, 1);
    call write~int(101, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 3, 1);
    call write~int(114, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 4, 1);
    call write~int(110, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 5, 1);
    call write~int(97, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 6, 1);
    call write~int(108, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 7, 1);
    call write~int(32, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 8, 1);
    call write~int(76, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 9, 1);
    call write~int(111, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 10, 1);
    call write~int(111, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 11, 1);
    call write~int(112, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 12, 1);
    call write~int(98, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 13, 1);
    call write~int(97, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 14, 1);
    call write~int(99, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 15, 1);
    call write~int(107, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 16, 1);
    call write~int(32, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 17, 1);
    call write~int(116, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 18, 1);
    call write~int(101, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 19, 1);
    call write~int(115, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 20, 1);
    call write~int(116, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 21, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 22, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 23, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 24, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 25, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 26, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 27, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 28, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 29, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 30, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 64 + 31, 1);
    call write~int(68, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 0, 1);
    call write~int(68, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 1, 1);
    call write~int(82, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 2, 1);
    call write~int(32, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 3, 1);
    call write~int(68, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 4, 1);
    call write~int(77, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 5, 1);
    call write~int(65, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 6, 1);
    call write~int(32, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 7, 1);
    call write~int(116, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 8, 1);
    call write~int(101, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 9, 1);
    call write~int(115, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 10, 1);
    call write~int(116, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 11, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 12, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 13, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 14, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 15, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 16, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 17, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 18, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 19, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 20, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 21, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 22, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 23, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 24, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 25, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 26, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 27, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 28, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 29, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 30, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 96 + 31, 1);
    call write~int(76, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 0, 1);
    call write~int(105, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 1, 1);
    call write~int(110, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 2, 1);
    call write~int(107, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 3, 1);
    call write~int(32, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 4, 1);
    call write~int(116, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 5, 1);
    call write~int(101, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 6, 1);
    call write~int(115, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 7, 1);
    call write~int(116, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 8, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 9, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 10, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 11, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 12, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 13, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 14, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 15, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 16, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 17, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 18, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 19, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 20, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 21, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 22, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 23, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 24, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 25, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 26, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 27, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 28, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 29, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 30, 1);
    call write~int(0, ~#et_self_tests.base, ~#et_self_tests.offset + 128 + 31, 1);
    ~ldv_mutex_be_adapter_list_lock := 0;
    ~ldv_mutex_lock := 0;
    ~ldv_mutex_mbox_lock_of_be_adapter := 0;
    ~ldv_mutex_mutex_of_device := 0;
    call ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset := #Ultimate.alloc(368);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset + 360, 8);
    ~rx_frag_size := 2048;
    call ~#be_netdev_ops.base, ~#be_netdev_ops.offset := #Ultimate.alloc(408);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~be_open.base, #funAddr~be_open.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~be_close.base, #funAddr~be_close.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~be_xmit.base, #funAddr~be_xmit.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~be_set_rx_mode.base, #funAddr~be_set_rx_mode.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~be_mac_addr_set.base, #funAddr~be_mac_addr_set.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 64, 8);
    call write~$Pointer$(#funAddr~eth_validate_addr.base, #funAddr~eth_validate_addr.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 88, 8);
    call write~$Pointer$(#funAddr~be_change_mtu.base, #funAddr~be_change_mtu.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 112, 8);
    call write~$Pointer$(#funAddr~be_get_stats64.base, #funAddr~be_get_stats64.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 128, 8);
    call write~$Pointer$(#funAddr~be_vlan_add_vid.base, #funAddr~be_vlan_add_vid.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 136, 8);
    call write~$Pointer$(#funAddr~be_vlan_rem_vid.base, #funAddr~be_vlan_rem_vid.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 144, 8);
    call write~$Pointer$(#funAddr~be_netpoll.base, #funAddr~be_netpoll.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 168, 8);
    call write~$Pointer$(#funAddr~be_set_vf_mac.base, #funAddr~be_set_vf_mac.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 176, 8);
    call write~$Pointer$(#funAddr~be_set_vf_vlan.base, #funAddr~be_set_vf_vlan.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 184, 8);
    call write~$Pointer$(#funAddr~be_set_vf_tx_rate.base, #funAddr~be_set_vf_tx_rate.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 200, 8);
    call write~$Pointer$(#funAddr~be_get_vf_config.base, #funAddr~be_get_vf_config.offset, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 328, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#be_netdev_ops.base, ~#be_netdev_ops.offset + 400, 8);
    ~cmd_priv_map.opcode, ~cmd_priv_map.subsystem, ~cmd_priv_map.priv_mask := ~cmd_priv_map.opcode[0 := 0], ~cmd_priv_map.subsystem[0 := 0], ~cmd_priv_map.priv_mask[0 := 0];
    ~cmd_priv_map.opcode, ~cmd_priv_map.subsystem, ~cmd_priv_map.priv_mask := ~cmd_priv_map.opcode[1 := 0], ~cmd_priv_map.subsystem[1 := 0], ~cmd_priv_map.priv_mask[1 := 0];
    ~cmd_priv_map.opcode, ~cmd_priv_map.subsystem, ~cmd_priv_map.priv_mask := ~cmd_priv_map.opcode[2 := 0], ~cmd_priv_map.subsystem[2 := 0], ~cmd_priv_map.priv_mask[2 := 0];
    ~cmd_priv_map.opcode, ~cmd_priv_map.subsystem, ~cmd_priv_map.priv_mask := ~cmd_priv_map.opcode[3 := 0], ~cmd_priv_map.subsystem[3 := 0], ~cmd_priv_map.priv_mask[3 := 0];
    ~cmd_priv_map.opcode, ~cmd_priv_map.subsystem, ~cmd_priv_map.priv_mask := ~cmd_priv_map.opcode[4 := 0], ~cmd_priv_map.subsystem[4 := 0], ~cmd_priv_map.priv_mask[4 := 0];
    call ~#et_stats.base, ~#et_stats.offset := #Ultimate.alloc(1408);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 2, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 4, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 5, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 6, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 7, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 8, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 9, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 10, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 11, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 12, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 13, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 14, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 15, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 16, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 17, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 0 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 0 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 0 + 36, 4);
    call write~int(36, ~#et_stats.base, ~#et_stats.offset + 0 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 2, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 3, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 4, 1);
    call write~int(105, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 5, 1);
    call write~int(103, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 6, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 7, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 8, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 9, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 10, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 11, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 12, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 13, 1);
    call write~int(121, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 14, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 15, 1);
    call write~int(98, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 16, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 17, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 18, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 19, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 20, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 21, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 22, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 23, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 24, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 44 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 44 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 44 + 36, 4);
    call write~int(40, ~#et_stats.base, ~#et_stats.offset + 44 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 2, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 3, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 4, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 5, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 6, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 7, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 8, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 9, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 10, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 11, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 12, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 13, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 14, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 15, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 16, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 17, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 88 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 88 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 88 + 36, 4);
    call write~int(44, ~#et_stats.base, ~#et_stats.offset + 88 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 2, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 3, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 4, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 5, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 6, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 7, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 8, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 9, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 10, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 11, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 12, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 13, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 14, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 15, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 16, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 17, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 132 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 132 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 132 + 36, 4);
    call write~int(52, ~#et_stats.base, ~#et_stats.offset + 132 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 2, 1);
    call write~int(105, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 3, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 4, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 5, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 6, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 7, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 8, 1);
    call write~int(103, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 9, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 10, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 11, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 12, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 13, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 14, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 15, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 16, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 17, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 176 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 176 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 176 + 36, 4);
    call write~int(56, ~#et_stats.base, ~#et_stats.offset + 176 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 2, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 3, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 4, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 5, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 6, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 7, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 8, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 9, 1);
    call write~int(103, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 10, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 11, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 12, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 13, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 14, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 15, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 16, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 17, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 220 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 220 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 220 + 36, 4);
    call write~int(60, ~#et_stats.base, ~#et_stats.offset + 220 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 2, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 4, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 5, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 6, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 7, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 8, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 9, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 10, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 11, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 12, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 13, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 14, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 15, 1);
    call write~int(103, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 16, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 17, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 264 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 264 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 264 + 36, 4);
    call write~int(64, ~#et_stats.base, ~#et_stats.offset + 264 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 2, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 3, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 4, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 5, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 6, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 7, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 8, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 9, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 10, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 11, 1);
    call write~int(105, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 12, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 13, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 14, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 15, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 16, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 17, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 308 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 308 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 308 + 36, 4);
    call write~int(68, ~#et_stats.base, ~#et_stats.offset + 308 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 2, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 4, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 5, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 6, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 7, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 8, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 9, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 10, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 11, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 12, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 13, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 14, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 15, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 16, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 17, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 18, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 352 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 352 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 352 + 36, 4);
    call write~int(72, ~#et_stats.base, ~#et_stats.offset + 352 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 2, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 4, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 5, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 6, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 7, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 8, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 9, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 10, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 11, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 12, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 13, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 14, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 15, 1);
    call write~int(104, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 16, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 17, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 18, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 396 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 396 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 396 + 36, 4);
    call write~int(76, ~#et_stats.base, ~#et_stats.offset + 396 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 2, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 4, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 5, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 6, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 7, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 8, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 9, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 10, 1);
    call write~int(104, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 11, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 12, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 13, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 14, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 15, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 16, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 17, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 18, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 19, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 20, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 21, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 22, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 23, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 24, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 25, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 440 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 440 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 440 + 36, 4);
    call write~int(80, ~#et_stats.base, ~#et_stats.offset + 440 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 2, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 4, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 5, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 6, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 7, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 8, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 9, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 10, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 11, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 12, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 13, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 14, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 15, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 16, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 17, 1);
    call write~int(103, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 18, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 19, 1);
    call write~int(104, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 484 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 484 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 484 + 36, 4);
    call write~int(84, ~#et_stats.base, ~#et_stats.offset + 484 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 2, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 4, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 5, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 6, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 7, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 8, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 9, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 10, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 11, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 12, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 13, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 14, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 15, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 16, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 17, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 528 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 528 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 528 + 36, 4);
    call write~int(88, ~#et_stats.base, ~#et_stats.offset + 528 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 1, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 2, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 3, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 4, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 5, 1);
    call write~int(105, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 6, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 7, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 8, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 9, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 10, 1);
    call write~int(118, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 11, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 12, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 13, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 14, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 15, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 16, 1);
    call write~int(119, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 17, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 18, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 19, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 20, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 21, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 572 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 572 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 572 + 36, 4);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 572 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 2, 1);
    call write~int(105, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 3, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 4, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 5, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 6, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 7, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 8, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 9, 1);
    call write~int(105, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 10, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 11, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 12, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 13, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 14, 1);
    call write~int(118, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 15, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 16, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 17, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 18, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 19, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 20, 1);
    call write~int(119, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 21, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 22, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 23, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 24, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 25, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 616 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 616 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 616 + 36, 4);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 616 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 2, 1);
    call write~int(105, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 3, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 4, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 5, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 6, 1);
    call write~int(104, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 7, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 8, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 9, 1);
    call write~int(107, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 10, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 11, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 12, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 13, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 14, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 15, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 16, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 17, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 660 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 660 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 660 + 36, 4);
    call write~int(92, ~#et_stats.base, ~#et_stats.offset + 660 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 2, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 3, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 4, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 5, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 6, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 7, 1);
    call write~int(104, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 8, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 9, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 10, 1);
    call write~int(107, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 11, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 12, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 13, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 14, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 15, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 16, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 17, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 18, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 704 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 704 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 704 + 36, 4);
    call write~int(96, ~#et_stats.base, ~#et_stats.offset + 704 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 2, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 3, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 4, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 5, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 6, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 7, 1);
    call write~int(104, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 8, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 9, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 10, 1);
    call write~int(107, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 11, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 12, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 13, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 14, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 15, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 16, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 17, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 18, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 748 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 748 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 748 + 36, 4);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 748 + 40, 4);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 2, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 3, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 4, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 5, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 6, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 7, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 8, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 9, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 10, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 11, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 12, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 13, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 14, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 15, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 16, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 17, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 792 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 792 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 792 + 36, 4);
    call write~int(104, ~#et_stats.base, ~#et_stats.offset + 792 + 40, 4);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 2, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 3, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 4, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 5, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 6, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 7, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 8, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 9, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 10, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 11, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 12, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 13, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 14, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 15, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 16, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 17, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 836 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 836 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 836 + 36, 4);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 836 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 2, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 4, 1);
    call write~int(105, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 5, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 6, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 7, 1);
    call write~int(105, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 8, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 9, 1);
    call write~int(121, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 10, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 11, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 12, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 13, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 14, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 15, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 16, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 17, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 18, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 19, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 20, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 21, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 22, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 880 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 880 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 880 + 36, 4);
    call write~int(48, ~#et_stats.base, ~#et_stats.offset + 880 + 40, 4);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 2, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 4, 1);
    call write~int(105, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 5, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 6, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 7, 1);
    call write~int(105, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 8, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 9, 1);
    call write~int(121, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 10, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 11, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 12, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 13, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 14, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 15, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 16, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 17, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 18, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 19, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 20, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 21, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 924 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 924 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 924 + 36, 4);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 924 + 40, 4);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 0, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 1, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 2, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 3, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 4, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 5, 1);
    call write~int(105, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 6, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 7, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 8, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 9, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 10, 1);
    call write~int(118, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 11, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 12, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 13, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 14, 1);
    call write~int(108, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 15, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 16, 1);
    call write~int(119, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 17, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 18, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 19, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 20, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 21, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 968 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 968 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 968 + 36, 4);
    call write~int(124, ~#et_stats.base, ~#et_stats.offset + 968 + 40, 4);
    call write~int(106, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 0, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 1, 1);
    call write~int(98, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 2, 1);
    call write~int(98, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 3, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 4, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 5, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 6, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 7, 1);
    call write~int(118, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 8, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 9, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 10, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 11, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 12, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 13, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 14, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 15, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 16, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 17, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1012 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 1012 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 1012 + 36, 4);
    call write~int(128, ~#et_stats.base, ~#et_stats.offset + 1012 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 2, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 4, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 5, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 6, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 7, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 8, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 9, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 10, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 11, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 12, 1);
    call write~int(98, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 13, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 14, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 15, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 16, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 17, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1056 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 1056 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 1056 + 36, 4);
    call write~int(8, ~#et_stats.base, ~#et_stats.offset + 1056 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 2, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 4, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 5, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 6, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 7, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 8, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 9, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 10, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 11, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 12, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 13, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 14, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 15, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 16, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 17, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 18, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 19, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1100 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 1100 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 1100 + 36, 4);
    call write~int(16, ~#et_stats.base, ~#et_stats.offset + 1100 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 2, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 4, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 5, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 6, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 7, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 8, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 9, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 10, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 11, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 12, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 13, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 14, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 15, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 16, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 17, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 18, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 19, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 20, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1144 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 1144 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 1144 + 36, 4);
    call write~int(20, ~#et_stats.base, ~#et_stats.offset + 1144 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 2, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 4, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 5, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 6, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 7, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 8, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 9, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 10, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 11, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 12, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 13, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 14, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 15, 1);
    call write~int(121, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 16, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 17, 1);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 18, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 19, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 20, 1);
    call write~int(103, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 21, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1188 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 1188 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 1188 + 36, 4);
    call write~int(24, ~#et_stats.base, ~#et_stats.offset + 1188 + 40, 4);
    call write~int(102, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 0, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 1, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 2, 1);
    call write~int(119, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 3, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 4, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 5, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 6, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 7, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 8, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 9, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 10, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 11, 1);
    call write~int(99, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 12, 1);
    call write~int(107, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 13, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 14, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 15, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 16, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 17, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1232 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 1232 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 1232 + 36, 4);
    call write~int(28, ~#et_stats.base, ~#et_stats.offset + 1232 + 40, 4);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 0, 1);
    call write~int(120, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 2, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 4, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 5, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 6, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 7, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 8, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 9, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 10, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 11, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 12, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 13, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 14, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 15, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 16, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 17, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1276 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 1276 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 1276 + 36, 4);
    call write~int(32, ~#et_stats.base, ~#et_stats.offset + 1276 + 40, 4);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 0, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 1, 1);
    call write~int(104, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 2, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 3, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 4, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 5, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 6, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 7, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 8, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 9, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 10, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 11, 1);
    call write~int(115, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 12, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 13, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 14, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 15, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 16, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 17, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 18, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 19, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1320 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 1320 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 1320 + 36, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 1320 + 40, 4);
    call write~int(98, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 0, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 1, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 2, 1);
    call write~int(111, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 3, 1);
    call write~int(110, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 4, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 5, 1);
    call write~int(100, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 6, 1);
    call write~int(105, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 7, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 8, 1);
    call write~int(95, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 9, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 10, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 11, 1);
    call write~int(109, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 12, 1);
    call write~int(112, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 13, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 14, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 15, 1);
    call write~int(97, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 16, 1);
    call write~int(116, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 17, 1);
    call write~int(117, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 18, 1);
    call write~int(114, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 19, 1);
    call write~int(101, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 20, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 21, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 22, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 23, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 24, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 25, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 26, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 27, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 28, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 29, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 30, 1);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1364 + 0 + 31, 1);
    call write~int(2, ~#et_stats.base, ~#et_stats.offset + 1364 + 32, 4);
    call write~int(4, ~#et_stats.base, ~#et_stats.offset + 1364 + 36, 4);
    call write~int(0, ~#et_stats.base, ~#et_stats.offset + 1364 + 40, 4);
    call ~#et_rx_stats.base, ~#et_rx_stats.offset := #Ultimate.alloc(308);
    call write~int(114, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 0, 1);
    call write~int(120, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 1, 1);
    call write~int(95, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 2, 1);
    call write~int(98, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 3, 1);
    call write~int(121, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 4, 1);
    call write~int(116, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 5, 1);
    call write~int(101, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 6, 1);
    call write~int(115, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 7, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 8, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 9, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 10, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 11, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 12, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 13, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 14, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 15, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 16, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 17, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 18, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 19, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 20, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 21, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 22, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 23, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 24, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 25, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 26, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 27, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 28, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 29, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 30, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 0 + 31, 1);
    call write~int(1, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 32, 4);
    call write~int(8, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 36, 4);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 0 + 40, 4);
    call write~int(114, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 0, 1);
    call write~int(120, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 1, 1);
    call write~int(95, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 2, 1);
    call write~int(112, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 3, 1);
    call write~int(107, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 4, 1);
    call write~int(116, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 5, 1);
    call write~int(115, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 6, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 7, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 8, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 9, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 10, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 11, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 12, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 13, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 14, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 15, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 16, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 17, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 18, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 19, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 20, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 21, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 22, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 23, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 24, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 25, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 26, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 27, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 28, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 29, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 30, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 0 + 31, 1);
    call write~int(1, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 32, 4);
    call write~int(8, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 36, 4);
    call write~int(8, ~#et_rx_stats.base, ~#et_rx_stats.offset + 44 + 40, 4);
    call write~int(114, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 0, 1);
    call write~int(120, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 1, 1);
    call write~int(95, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 2, 1);
    call write~int(99, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 3, 1);
    call write~int(111, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 4, 1);
    call write~int(109, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 5, 1);
    call write~int(112, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 6, 1);
    call write~int(108, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 7, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 8, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 9, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 10, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 11, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 12, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 13, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 14, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 15, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 16, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 17, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 18, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 19, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 20, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 21, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 22, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 23, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 24, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 25, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 26, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 27, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 28, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 29, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 30, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 0 + 31, 1);
    call write~int(1, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 32, 4);
    call write~int(4, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 36, 4);
    call write~int(44, ~#et_rx_stats.base, ~#et_rx_stats.offset + 88 + 40, 4);
    call write~int(114, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 0, 1);
    call write~int(120, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 1, 1);
    call write~int(95, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 2, 1);
    call write~int(109, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 3, 1);
    call write~int(99, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 4, 1);
    call write~int(97, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 5, 1);
    call write~int(115, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 6, 1);
    call write~int(116, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 7, 1);
    call write~int(95, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 8, 1);
    call write~int(112, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 9, 1);
    call write~int(107, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 10, 1);
    call write~int(116, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 11, 1);
    call write~int(115, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 12, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 13, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 14, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 15, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 16, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 17, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 18, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 19, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 20, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 21, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 22, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 23, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 24, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 25, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 26, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 27, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 28, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 29, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 30, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 0 + 31, 1);
    call write~int(1, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 32, 4);
    call write~int(4, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 36, 4);
    call write~int(48, ~#et_rx_stats.base, ~#et_rx_stats.offset + 132 + 40, 4);
    call write~int(114, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 0, 1);
    call write~int(120, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 1, 1);
    call write~int(95, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 2, 1);
    call write~int(112, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 3, 1);
    call write~int(111, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 4, 1);
    call write~int(115, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 5, 1);
    call write~int(116, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 6, 1);
    call write~int(95, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 7, 1);
    call write~int(102, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 8, 1);
    call write~int(97, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 9, 1);
    call write~int(105, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 10, 1);
    call write~int(108, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 11, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 12, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 13, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 14, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 15, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 16, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 17, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 18, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 19, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 20, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 21, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 22, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 23, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 24, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 25, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 26, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 27, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 28, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 29, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 30, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 0 + 31, 1);
    call write~int(1, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 32, 4);
    call write~int(4, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 36, 4);
    call write~int(40, ~#et_rx_stats.base, ~#et_rx_stats.offset + 176 + 40, 4);
    call write~int(114, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 0, 1);
    call write~int(120, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 1, 1);
    call write~int(95, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 2, 1);
    call write~int(100, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 3, 1);
    call write~int(114, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 4, 1);
    call write~int(111, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 5, 1);
    call write~int(112, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 6, 1);
    call write~int(115, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 7, 1);
    call write~int(95, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 8, 1);
    call write~int(110, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 9, 1);
    call write~int(111, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 10, 1);
    call write~int(95, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 11, 1);
    call write~int(115, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 12, 1);
    call write~int(107, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 13, 1);
    call write~int(98, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 14, 1);
    call write~int(115, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 15, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 16, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 17, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 18, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 19, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 20, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 21, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 22, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 23, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 24, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 25, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 26, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 27, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 28, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 29, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 30, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 0 + 31, 1);
    call write~int(1, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 32, 4);
    call write~int(4, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 36, 4);
    call write~int(32, ~#et_rx_stats.base, ~#et_rx_stats.offset + 220 + 40, 4);
    call write~int(114, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 0, 1);
    call write~int(120, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 1, 1);
    call write~int(95, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 2, 1);
    call write~int(100, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 3, 1);
    call write~int(114, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 4, 1);
    call write~int(111, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 5, 1);
    call write~int(112, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 6, 1);
    call write~int(115, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 7, 1);
    call write~int(95, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 8, 1);
    call write~int(110, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 9, 1);
    call write~int(111, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 10, 1);
    call write~int(95, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 11, 1);
    call write~int(102, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 12, 1);
    call write~int(114, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 13, 1);
    call write~int(97, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 14, 1);
    call write~int(103, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 15, 1);
    call write~int(115, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 16, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 17, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 18, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 19, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 20, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 21, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 22, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 23, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 24, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 25, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 26, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 27, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 28, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 29, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 30, 1);
    call write~int(0, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 0 + 31, 1);
    call write~int(1, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 32, 4);
    call write~int(4, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 36, 4);
    call write~int(36, ~#et_rx_stats.base, ~#et_rx_stats.offset + 264 + 40, 4);
    call ~#et_tx_stats.base, ~#et_tx_stats.offset := #Ultimate.alloc(264);
    call write~int(116, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 0, 1);
    call write~int(120, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 1, 1);
    call write~int(95, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 2, 1);
    call write~int(99, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 3, 1);
    call write~int(111, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 4, 1);
    call write~int(109, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 5, 1);
    call write~int(112, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 6, 1);
    call write~int(108, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 7, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 8, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 9, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 10, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 11, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 12, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 13, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 14, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 15, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 16, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 17, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 18, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 19, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 20, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 21, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 22, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 23, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 24, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 25, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 26, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 27, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 28, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 29, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 30, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 0 + 31, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 32, 4);
    call write~int(8, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 36, 4);
    call write~int(32, ~#et_tx_stats.base, ~#et_tx_stats.offset + 0 + 40, 4);
    call write~int(116, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 0, 1);
    call write~int(120, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 1, 1);
    call write~int(95, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 2, 1);
    call write~int(98, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 3, 1);
    call write~int(121, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 4, 1);
    call write~int(116, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 5, 1);
    call write~int(101, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 6, 1);
    call write~int(115, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 7, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 8, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 9, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 10, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 11, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 12, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 13, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 14, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 15, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 16, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 17, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 18, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 19, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 20, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 21, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 22, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 23, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 24, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 25, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 26, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 27, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 28, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 29, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 30, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 0 + 31, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 32, 4);
    call write~int(8, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 36, 4);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 44 + 40, 4);
    call write~int(116, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 0, 1);
    call write~int(120, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 1, 1);
    call write~int(95, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 2, 1);
    call write~int(112, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 3, 1);
    call write~int(107, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 4, 1);
    call write~int(116, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 5, 1);
    call write~int(115, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 6, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 7, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 8, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 9, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 10, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 11, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 12, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 13, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 14, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 15, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 16, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 17, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 18, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 19, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 20, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 21, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 22, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 23, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 24, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 25, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 26, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 27, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 28, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 29, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 30, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 0 + 31, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 32, 4);
    call write~int(8, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 36, 4);
    call write~int(8, ~#et_tx_stats.base, ~#et_tx_stats.offset + 88 + 40, 4);
    call write~int(116, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 0, 1);
    call write~int(120, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 1, 1);
    call write~int(95, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 2, 1);
    call write~int(114, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 3, 1);
    call write~int(101, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 4, 1);
    call write~int(113, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 5, 1);
    call write~int(115, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 6, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 7, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 8, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 9, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 10, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 11, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 12, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 13, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 14, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 15, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 16, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 17, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 18, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 19, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 20, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 21, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 22, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 23, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 24, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 25, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 26, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 27, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 28, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 29, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 30, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 0 + 31, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 32, 4);
    call write~int(8, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 36, 4);
    call write~int(16, ~#et_tx_stats.base, ~#et_tx_stats.offset + 132 + 40, 4);
    call write~int(116, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 0, 1);
    call write~int(120, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 1, 1);
    call write~int(95, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 2, 1);
    call write~int(119, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 3, 1);
    call write~int(114, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 4, 1);
    call write~int(98, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 5, 1);
    call write~int(115, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 6, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 7, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 8, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 9, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 10, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 11, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 12, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 13, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 14, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 15, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 16, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 17, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 18, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 19, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 20, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 21, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 22, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 23, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 24, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 25, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 26, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 27, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 28, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 29, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 30, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 0 + 31, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 32, 4);
    call write~int(8, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 36, 4);
    call write~int(24, ~#et_tx_stats.base, ~#et_tx_stats.offset + 176 + 40, 4);
    call write~int(116, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 0, 1);
    call write~int(120, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 1, 1);
    call write~int(95, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 2, 1);
    call write~int(115, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 3, 1);
    call write~int(116, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 4, 1);
    call write~int(111, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 5, 1);
    call write~int(112, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 6, 1);
    call write~int(115, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 7, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 8, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 9, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 10, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 11, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 12, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 13, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 14, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 15, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 16, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 17, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 18, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 19, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 20, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 21, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 22, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 23, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 24, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 25, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 26, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 27, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 28, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 29, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 30, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 0 + 31, 1);
    call write~int(0, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 32, 4);
    call write~int(4, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 36, 4);
    call write~int(48, ~#et_tx_stats.base, ~#et_tx_stats.offset + 220 + 40, 4);
    ~ocrdma_drv.base, ~ocrdma_drv.offset := 0, 0;
    call ~#be_adapter_list.base, ~#be_adapter_list.offset := #Ultimate.alloc(16);
    call write~$Pointer$(~#be_adapter_list.base, ~#be_adapter_list.offset, ~#be_adapter_list.base, ~#be_adapter_list.offset + 0, 8);
    call write~$Pointer$(~#be_adapter_list.base, ~#be_adapter_list.offset, ~#be_adapter_list.base, ~#be_adapter_list.offset + 8, 8);
    call ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset := #Ultimate.alloc(156);
    call write~int(1, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 0 + 0, 4);
    call write~int(0, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union4979.head, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union4979.tail, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(3735899821, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 4, 4);
    call write~int(4294967295, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, 18446744073709551615, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 20 + 0, 8);
    call write~int(0, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 20 + 8 + 0, 8);
    call write~int(0, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 20 + 8 + 8, 8);
    call #t~nondet4870.base, #t~nondet4870.offset := #Ultimate.alloc(31);
    call write~$Pointer$(#t~nondet4870.base, #t~nondet4870.offset, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union4980.__padding[0], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0, 1);
    call write~int(#t~union4980.__padding[1], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union4980.__padding[2], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[3], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[4], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[5], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[6], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[7], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[8], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[9], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[10], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[11], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[12], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[13], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[14], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[15], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[16], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[17], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[18], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[19], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[20], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[21], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[22], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union4980.__padding[23], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union4980.dep_map.key.base, #t~union4980.dep_map.key.offset, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union4980.dep_map.class_cache.base[0], #t~union4980.dep_map.class_cache.offset[0], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union4980.dep_map.class_cache.base[1], #t~union4980.dep_map.class_cache.offset[1], ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union4980.dep_map.name.base, #t~union4980.dep_map.name.offset, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union4980.dep_map.cpu, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union4980.dep_map.ip, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 4 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 72, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 72 + 0, 8);
    call write~$Pointer$(~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 72, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 72 + 8, 8);
    call write~$Pointer$(0, 0, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 96, 8);
    call write~$Pointer$(~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 112 + 0, 8);
    call write~int(0, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 112 + 8 + 0, 8);
    call write~int(0, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 112 + 8 + 8, 8);
    call #t~nondet4871.base, #t~nondet4871.offset := #Ultimate.alloc(21);
    call write~$Pointer$(#t~nondet4871.base, #t~nondet4871.offset, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 112 + 24, 8);
    call write~int(0, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 112 + 32, 4);
    call write~int(0, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset + 112 + 36, 8);
    havoc #t~union4979.head, #t~union4979.tail;
    havoc #t~nondet4870.base, #t~nondet4870.offset;
    havoc #t~union4980.__padding, #t~union4980.dep_map.key.base, #t~union4980.dep_map.key.offset, #t~union4980.dep_map.class_cache.base, #t~union4980.dep_map.class_cache.offset, #t~union4980.dep_map.name.base, #t~union4980.dep_map.name.offset, #t~union4980.dep_map.cpu, #t~union4980.dep_map.ip;
    havoc #t~nondet4871.base, #t~nondet4871.offset;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~num_vfs, ~ue_status_low_desc.base, ~ue_status_low_desc.offset, ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset, ~#flash_cookie.base, ~#flash_cookie.offset, ~LDV_IN_INTERRUPT, ~#et_self_tests.base, ~#et_self_tests.offset, ~ldv_mutex_be_adapter_list_lock, ~ldv_mutex_lock, ~ldv_mutex_mbox_lock_of_be_adapter, ~ldv_mutex_mutex_of_device, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset, ~rx_frag_size, ~#be_netdev_ops.base, ~#be_netdev_ops.offset, ~cmd_priv_map.opcode, ~cmd_priv_map.subsystem, ~cmd_priv_map.priv_mask, ~#et_stats.base, ~#et_stats.offset, ~#et_rx_stats.base, ~#et_rx_stats.offset, ~#et_tx_stats.base, ~#et_tx_stats.offset, ~ocrdma_drv.base, ~ocrdma_drv.offset, ~#be_adapter_list.base, ~#be_adapter_list.offset, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_error() returns (){
  loc11:
    assume !false;
    goto loc12;
  loc12:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation pci_alloc_consistent(#in~hwdev.base : int, #in~hwdev.offset : int, #in~size : int, #in~dma_handle.base : int, #in~dma_handle.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~ite323.base : int, #t~ite323.offset : int;
    var #t~ret324.base : int, #t~ret324.offset : int;
    var ~hwdev.base : int, ~hwdev.offset : int;
    var ~size : int;
    var ~dma_handle.base : int, ~dma_handle.offset : int;
    var ~tmp~220.base : int, ~tmp~220.offset : int;

  loc13:
    ~hwdev.base, ~hwdev.offset := #in~hwdev.base, #in~hwdev.offset;
    ~size := #in~size;
    ~dma_handle.base, ~dma_handle.offset := #in~dma_handle.base, #in~dma_handle.offset;
    havoc ~tmp~220.base, ~tmp~220.offset;
    assume !((~hwdev.base + ~hwdev.offset) % 18446744073709551616 != 0);
    #t~ite323.base, #t~ite323.offset := 0, 0;
    call #t~ret324.base, #t~ret324.offset := dma_alloc_attrs(#t~ite323.base, #t~ite323.offset, ~size, ~dma_handle.base, ~dma_handle.offset, 32, 0, 0);
    ~tmp~220.base, ~tmp~220.offset := #t~ret324.base, #t~ret324.offset;
    havoc #t~ite323.base, #t~ite323.offset;
    havoc #t~ret324.base, #t~ret324.offset;
    #res.base, #res.offset := ~tmp~220.base, ~tmp~220.offset;
    assume true;
    return;
}

procedure pci_alloc_consistent(#in~hwdev.base : int, #in~hwdev.offset : int, #in~size : int, #in~dma_handle.base : int, #in~dma_handle.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation be_set_fw_log_level(#in~adapter.base : int, #in~adapter.offset : int, #in~level : int) returns (){
    var #t~memset4731.base : int, #t~memset4731.offset : int;
    var #t~mem4733.base : int, #t~mem4733.offset : int;
    var #t~mem4734 : int;
    var #t~ret4735.base : int, #t~ret4735.offset : int;
    var #t~mem4737.base : int, #t~mem4737.offset : int;
    var #t~mem4738.base : int, #t~mem4738.offset : int;
    var #t~nondet4739.base : int, #t~nondet4739.offset : int;
    var #t~ret4740 : int;
    var #t~ret4741 : int;
    var #t~mem4742.base : int, #t~mem4742.offset : int;
    var #t~mem4743 : int;
    var #t~mem4744 : int;
    var #t~mem4746 : int;
    var #t~ret4747 : int;
    var #t~mem4748.base : int, #t~mem4748.offset : int;
    var #t~nondet4749.base : int, #t~nondet4749.offset : int;
    var #t~ret4750 : int;
    var #t~mem4751.base : int, #t~mem4751.offset : int;
    var #t~nondet4752.base : int, #t~nondet4752.offset : int;
    var #t~ret4753 : int;
    var #t~mem4754.base : int, #t~mem4754.offset : int;
    var #t~mem4755 : int;
    var #t~mem4756.base : int, #t~mem4756.offset : int;
    var #t~mem4757 : int;
    var ~adapter.base : int, ~adapter.offset : int;
    var ~level : int;
    var ~#extfat_cmd~3046.base : int, ~#extfat_cmd~3046.offset : int;
    var ~cfgs~3046.base : int, ~cfgs~3046.offset : int;
    var ~status~3046 : int;
    var ~i~3046 : int;
    var ~j~3046 : int;
    var ~num_modes~3046 : ~u32;

  loc14:
    ~adapter.base, ~adapter.offset := #in~adapter.base, #in~adapter.offset;
    ~level := #in~level;
    call ~#extfat_cmd~3046.base, ~#extfat_cmd~3046.offset := #Ultimate.alloc(20);
    havoc ~cfgs~3046.base, ~cfgs~3046.offset;
    havoc ~status~3046;
    havoc ~i~3046;
    havoc ~j~3046;
    havoc ~num_modes~3046;
    call #t~memset4731.base, #t~memset4731.offset := #Ultimate.C_memset(~#extfat_cmd~3046.base, ~#extfat_cmd~3046.offset, 0, 24);
    havoc #t~memset4731.base, #t~memset4731.offset;
    call write~int(2844, ~#extfat_cmd~3046.base, ~#extfat_cmd~3046.offset + 16, 4);
    call #t~mem4733.base, #t~mem4733.offset := read~$Pointer$(~adapter.base, ~adapter.offset + 0, 8);
    call #t~mem4734 := read~int(~#extfat_cmd~3046.base, ~#extfat_cmd~3046.offset + 16, 4);
    call #t~ret4735.base, #t~ret4735.offset := pci_alloc_consistent(#t~mem4733.base, #t~mem4733.offset, #t~mem4734, ~#extfat_cmd~3046.base, ~#extfat_cmd~3046.offset + 8);
    call write~$Pointer$(#t~ret4735.base, #t~ret4735.offset, ~#extfat_cmd~3046.base, ~#extfat_cmd~3046.offset + 0, 8);
    havoc #t~mem4733.base, #t~mem4733.offset;
    havoc #t~mem4734;
    havoc #t~ret4735.base, #t~ret4735.offset;
    call #t~mem4737.base, #t~mem4737.offset := read~$Pointer$(~#extfat_cmd~3046.base, ~#extfat_cmd~3046.offset + 0, 8);
    assume !((#t~mem4737.base + #t~mem4737.offset) % 18446744073709551616 == 0);
    havoc #t~mem4737.base, #t~mem4737.offset;
    call #t~ret4741 := be_cmd_get_ext_fat_capabilites(~adapter.base, ~adapter.offset, ~#extfat_cmd~3046.base, ~#extfat_cmd~3046.offset);
    return;
}

procedure be_set_fw_log_level(#in~adapter.base : int, #in~adapter.offset : int, #in~level : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length, ~ldv_mutex_mbox_lock_of_be_adapter;

implementation ldv_mutex_lock_interruptible_mbox_lock_of_be_adapter(#in~lock.base : int, #in~lock.offset : int) returns (#res : int){
    var #t~nondet4978 : int;
    var ~lock.base : int, ~lock.offset : int;
    var ~nondetermined~3228 : int;

  loc15:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    havoc ~nondetermined~3228;
    assume ~ldv_mutex_mbox_lock_of_be_adapter == 1;
    assume -2147483648 <= #t~nondet4978 && #t~nondet4978 <= 2147483647;
    ~nondetermined~3228 := #t~nondet4978;
    havoc #t~nondet4978;
    assume ~nondetermined~3228 != 0;
    ~ldv_mutex_mbox_lock_of_be_adapter := 2;
    #res := 0;
    assume true;
    return;
}

procedure ldv_mutex_lock_interruptible_mbox_lock_of_be_adapter(#in~lock.base : int, #in~lock.offset : int) returns (#res : int);
modifies ~ldv_mutex_mbox_lock_of_be_adapter;

implementation be_set_msg_level(#in~netdev.base : int, #in~netdev.offset : int, #in~level : int) returns (){
    var #t~ret4758.base : int, #t~ret4758.offset : int;
    var #t~mem4759.base : int, #t~mem4759.offset : int;
    var #t~mem4760 : int;
    var #t~mem4761.base : int, #t~mem4761.offset : int;
    var #t~mem4762 : int;
    var #t~short4763 : bool;
    var #t~mem4764.base : int, #t~mem4764.offset : int;
    var #t~nondet4765.base : int, #t~nondet4765.offset : int;
    var #t~ret4766 : int;
    var #t~mem4767 : int;
    var #t~mem4768 : int;
    var #t~ite4769 : int;
    var ~netdev.base : int, ~netdev.offset : int;
    var ~level : int;
    var ~adapter~3060.base : int, ~adapter~3060.offset : int;
    var ~tmp~3060.base : int, ~tmp~3060.offset : int;

  loc16:
    ~netdev.base, ~netdev.offset := #in~netdev.base, #in~netdev.offset;
    ~level := #in~level;
    havoc ~adapter~3060.base, ~adapter~3060.offset;
    havoc ~tmp~3060.base, ~tmp~3060.offset;
    call #t~ret4758.base, #t~ret4758.offset := netdev_priv(~netdev.base, ~netdev.offset);
    ~tmp~3060.base, ~tmp~3060.offset := #t~ret4758.base, #t~ret4758.offset;
    havoc #t~ret4758.base, #t~ret4758.offset;
    ~adapter~3060.base, ~adapter~3060.offset := ~tmp~3060.base, ~tmp~3060.offset;
    call #t~mem4759.base, #t~mem4759.offset := read~$Pointer$(~adapter~3060.base, ~adapter~3060.offset + 0, 8);
    call #t~mem4760 := read~int(#t~mem4759.base, #t~mem4759.offset + 62, 2);
    #t~short4763 := #t~mem4760 % 65536 % 4294967296 == 57888;
    assume !#t~short4763;
    call #t~mem4761.base, #t~mem4761.offset := read~$Pointer$(~adapter~3060.base, ~adapter~3060.offset + 0, 8);
    call #t~mem4762 := read~int(#t~mem4761.base, #t~mem4761.offset + 62, 2);
    #t~short4763 := #t~mem4762 % 65536 % 4294967296 == 57896;
    assume !#t~short4763;
    havoc #t~mem4759.base, #t~mem4759.offset;
    havoc #t~mem4760;
    havoc #t~mem4761.base, #t~mem4761.offset;
    havoc #t~mem4762;
    havoc #t~short4763;
    call #t~mem4767 := read~int(~adapter~3060.base, ~adapter~3060.offset + 317409, 4);
    assume !(#t~mem4767 % 4294967296 == ~level % 4294967296);
    havoc #t~mem4767;
    call #t~mem4768 := read~int(~adapter~3060.base, ~adapter~3060.offset + 317409, 4);
    assume ~bitwiseAnd(~bitwiseXor(#t~mem4768, ~level), 8192) % 4294967296 != 0;
    havoc #t~mem4768;
    assume ~bitwiseAnd(~level, 8192) % 4294967296 != 0;
    #t~ite4769 := 48;
    call be_set_fw_log_level(~adapter~3060.base, ~adapter~3060.offset, #t~ite4769);
    return;
}

procedure be_set_msg_level(#in~netdev.base : int, #in~netdev.offset : int, #in~level : int) returns ();
modifies #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_mbox_lock_of_be_adapter;

implementation ULTIMATE.start() returns (){
    var #t~ret4981 : int;

  loc17:
    call ULTIMATE.init();
    call #t~ret4981 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~num_vfs, ~ue_status_low_desc.base, ~ue_status_low_desc.offset, ~ue_status_hi_desc.base, ~ue_status_hi_desc.offset, ~#flash_cookie.base, ~#flash_cookie.offset, ~LDV_IN_INTERRUPT, ~#et_self_tests.base, ~#et_self_tests.offset, ~ldv_mutex_be_adapter_list_lock, ~ldv_mutex_lock, ~ldv_mutex_mbox_lock_of_be_adapter, ~ldv_mutex_mutex_of_device, ~#be_ethtool_ops.base, ~#be_ethtool_ops.offset, ~rx_frag_size, ~#be_netdev_ops.base, ~#be_netdev_ops.offset, ~cmd_priv_map.opcode, ~cmd_priv_map.subsystem, ~cmd_priv_map.priv_mask, ~#et_stats.base, ~#et_stats.offset, ~#et_rx_stats.base, ~#et_rx_stats.offset, ~#et_tx_stats.base, ~#et_tx_stats.offset, ~ocrdma_drv.base, ~ocrdma_drv.offset, ~#be_adapter_list.base, ~#be_adapter_list.offset, ~#be_adapter_list_lock.base, ~#be_adapter_list_lock.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~LDV_IN_INTERRUPT;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex_be_adapter_list_lock, ~ldv_mutex_lock, ~ldv_mutex_mbox_lock_of_be_adapter, ~ldv_mutex_mutex_of_device, ~LDV_IN_INTERRUPT;

implementation is_device_dma_capable(#in~dev.base : int, #in~dev.offset : int) returns (#res : int){
    var #t~mem212.base : int, #t~mem212.offset : int;
    var #t~mem213.base : int, #t~mem213.offset : int;
    var #t~mem214 : int;
    var #t~short215 : bool;
    var ~dev.base : int, ~dev.offset : int;

  loc18:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    call #t~mem212.base, #t~mem212.offset := read~$Pointer$(~dev.base, ~dev.offset + 856, 8);
    #t~short215 := (#t~mem212.base + #t~mem212.offset) % 18446744073709551616 != 0;
    assume !#t~short215;
    #res := (if #t~short215 then 1 else 0);
    havoc #t~mem212.base, #t~mem212.offset;
    havoc #t~mem213.base, #t~mem213.offset;
    havoc #t~mem214;
    havoc #t~short215;
    assume true;
    return;
}

procedure is_device_dma_capable(#in~dev.base : int, #in~dev.offset : int) returns (#res : int);
modifies ;

implementation ldv_initialize() returns (){
  loc19:
    ~ldv_mutex_be_adapter_list_lock := 1;
    ~ldv_mutex_lock := 1;
    ~ldv_mutex_mbox_lock_of_be_adapter := 1;
    ~ldv_mutex_mutex_of_device := 1;
    assume true;
    return;
}

procedure ldv_initialize() returns ();
modifies ~ldv_mutex_be_adapter_list_lock, ~ldv_mutex_lock, ~ldv_mutex_mbox_lock_of_be_adapter, ~ldv_mutex_mutex_of_device;

implementation dma_alloc_attrs(#in~dev.base : int, #in~dev.offset : int, #in~size : int, #in~dma_handle.base : int, #in~dma_handle.offset : int, #in~gfp : int, #in~attrs.base : int, #in~attrs.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~ret294.base : int, #t~ret294.offset : int;
    var #t~ret295 : int;
    var #t~mem296.base : int, #t~mem296.offset : int;
    var #t~ret297 : ~gfp_t;
    var #t~mem304.base : int, #t~mem304.offset : int;
    var #t~ret305.base : int, #t~ret305.offset : int;
    var #t~mem306 : int;
    var ~dev.base : int, ~dev.offset : int;
    var ~size : int;
    var ~dma_handle.base : int, ~dma_handle.offset : int;
    var ~gfp : int;
    var ~attrs.base : int, ~attrs.offset : int;
    var ~ops~200.base : int, ~ops~200.offset : int;
    var ~tmp~200.base : int, ~tmp~200.offset : int;
    var ~memory~200.base : int, ~memory~200.offset : int;
    var ~tmp___0~200 : int;
    var ~tmp___1~200 : ~gfp_t;

  loc20:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    ~size := #in~size;
    ~dma_handle.base, ~dma_handle.offset := #in~dma_handle.base, #in~dma_handle.offset;
    ~gfp := #in~gfp;
    ~attrs.base, ~attrs.offset := #in~attrs.base, #in~attrs.offset;
    havoc ~ops~200.base, ~ops~200.offset;
    havoc ~tmp~200.base, ~tmp~200.offset;
    havoc ~memory~200.base, ~memory~200.offset;
    havoc ~tmp___0~200;
    havoc ~tmp___1~200;
    call #t~ret294.base, #t~ret294.offset := get_dma_ops(~dev.base, ~dev.offset);
    ~tmp~200.base, ~tmp~200.offset := #t~ret294.base, #t~ret294.offset;
    havoc #t~ret294.base, #t~ret294.offset;
    ~ops~200.base, ~ops~200.offset := ~tmp~200.base, ~tmp~200.offset;
    ~gfp := ~bitwiseAnd(~gfp, 4294967288);
    assume !((~dev.base + ~dev.offset) % 18446744073709551616 == 0);
    call #t~ret295 := is_device_dma_capable(~dev.base, ~dev.offset);
    assume -2147483648 <= #t~ret295 && #t~ret295 <= 2147483647;
    ~tmp___0~200 := #t~ret295;
    havoc #t~ret295;
    assume ~tmp___0~200 == 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure dma_alloc_attrs(#in~dev.base : int, #in~dev.offset : int, #in~size : int, #in~dma_handle.base : int, #in~dma_handle.offset : int, #in~gfp : int, #in~attrs.base : int, #in~attrs.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation ldv__builtin_expect(#in~exp : int, #in~c : int) returns (#res : int){
    var ~exp : int;
    var ~c : int;

  loc21:
    ~exp := #in~exp;
    ~c := #in~c;
    #res := ~exp;
    assume true;
    return;
}

procedure ldv__builtin_expect(#in~exp : int, #in~c : int) returns (#res : int);
modifies ;

procedure pci_enable_pcie_error_reporting(#in~610.base : int, #in~610.offset : int) returns (#res : int);
modifies ;

procedure pci_release_regions(#in~193.base : int, #in~193.offset : int) returns ();
modifies ;

procedure skb_clone(#in~337.base : int, #in~337.offset : int, #in~338 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ethtool_op_get_link(#in~4348.base : int, #in~4348.offset : int) returns (#res : ~u32);
modifies ;

procedure free_irq(#in~515 : int, #in~516.base : int, #in~516.offset : int) returns ();
modifies ;

procedure dma_set_mask(#in~289.base : int, #in~289.offset : int, #in~290 : int) returns (#res : int);
modifies ;

procedure __might_sleep(#in~66.base : int, #in~66.offset : int, #in~67 : int, #in~68 : int) returns ();
modifies ;

procedure netif_carrier_on(#in~447.base : int, #in~447.offset : int) returns ();
modifies ;

procedure pci_disable_pcie_error_reporting(#in~611.base : int, #in~611.offset : int) returns (#res : int);
modifies ;

procedure pci_bus_read_config_dword(#in~160.base : int, #in~160.offset : int, #in~161 : int, #in~162 : int, #in~163.base : int, #in~163.offset : int) returns (#res : int);
modifies ;

procedure ioread32(#in~129.base : int, #in~129.offset : int) returns (#res : int);
modifies ;

procedure register_netdev(#in~460.base : int, #in~460.offset : int) returns (#res : int);
modifies ;

procedure sprintf(#in~69.base : int, #in~69.offset : int, #in~70.base : int, #in~70.offset : int) returns (#res : int);
modifies ;

procedure memcmp(#in~84.base : int, #in~84.offset : int, #in~85.base : int, #in~85.offset : int, #in~86 : int) returns (#res : int);
modifies ;

procedure netif_set_real_num_rx_queues(#in~441.base : int, #in~441.offset : int, #in~442 : int) returns (#res : int);
modifies ;

procedure strlcpy(#in~4336.base : int, #in~4336.offset : int, #in~4337.base : int, #in~4337.offset : int, #in~4338 : int) returns (#res : int);
modifies ;

procedure iowrite32(#in~130 : int, #in~131.base : int, #in~131.offset : int) returns ();
modifies ;

procedure dma_supported(#in~287.base : int, #in~287.offset : int, #in~288 : int) returns (#res : int);
modifies ;

procedure eth_validate_addr(#in~465.base : int, #in~465.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_bh(#in~3132.base : int, #in~3132.offset : int) returns ();
modifies ;

procedure pci_get_device(#in~153 : int, #in~154 : int, #in~155.base : int, #in~155.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure debug_dma_mapping_error(#in~223.base : int, #in~223.offset : int, #in~224 : int) returns ();
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure netif_device_attach(#in~450.base : int, #in~450.offset : int) returns ();
modifies ;

procedure list_del(#in~4869.base : int, #in~4869.offset : int) returns ();
modifies ;

procedure netif_device_detach(#in~449.base : int, #in~449.offset : int) returns ();
modifies ;

procedure netif_receive_skb(#in~444.base : int, #in~444.offset : int) returns (#res : int);
modifies ;

procedure alloc_etherdev_mqs(#in~466 : int, #in~467 : int, #in~468 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure debug_dma_free_coherent(#in~234.base : int, #in~234.offset : int, #in~235 : int, #in~236.base : int, #in~236.offset : int, #in~237 : int) returns ();
modifies ;

procedure netif_napi_add(#in~416.base : int, #in~416.offset : int, #in~417.base : int, #in~417.offset : int, #in~418.base : int, #in~418.offset : int, #in~419 : int) returns ();
modifies ;

procedure pci_save_state(#in~180.base : int, #in~180.offset : int) returns (#res : int);
modifies ;

procedure __napi_schedule(#in~406.base : int, #in~406.offset : int) returns ();
modifies ;

procedure ___pskb_trim(#in~367.base : int, #in~367.offset : int, #in~368 : int) returns (#res : int);
modifies ;

procedure dev_get_drvdata(#in~140.base : int, #in~140.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __raw_spin_lock_init(#in~104.base : int, #in~104.offset : int, #in~105.base : int, #in~105.offset : int, #in~106.base : int, #in~106.offset : int) returns ();
modifies ;

procedure _dev_info(#in~147.base : int, #in~147.offset : int, #in~148.base : int, #in~148.offset : int) returns (#res : int);
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure __phys_addr(#in~73 : int) returns (#res : int);
modifies ;

procedure alloc_pages_current(#in~137 : int, #in~138 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure pci_choose_state(#in~184.base : int, #in~184.offset : int, #in~185.event : int) returns (#res : ~pci_power_t);
modifies ;

procedure pci_iomap(#in~134.base : int, #in~134.offset : int, #in~135 : int, #in~136 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __netdev_alloc_skb(#in~379.base : int, #in~379.offset : int, #in~380 : int, #in~381 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure pci_disable_device(#in~178.base : int, #in~178.offset : int) returns ();
modifies ;

procedure napi_gro_frags(#in~446.base : int, #in~446.offset : int) returns (#res : ~gro_result_t);
modifies ;

procedure pci_request_regions(#in~191.base : int, #in~191.offset : int, #in~192.base : int, #in~192.offset : int) returns (#res : int);
modifies ;

procedure C.complete(#in~3135.base : int, #in~3135.offset : int) returns ();
modifies ;

procedure __list_add(#in~4865.base : int, #in~4865.offset : int, #in~4866.base : int, #in~4866.offset : int, #in~4867.base : int, #in~4867.offset : int) returns ();
modifies ;

procedure __const_udelay(#in~403 : int) returns ();
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];

procedure __bad_percpu_size() returns ();
modifies ;

procedure memset(#in~78.base : int, #in~78.offset : int, #in~79 : int, #in~80 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __init_work(#in~120.base : int, #in~120.offset : int, #in~121 : int) returns ();
modifies ;

procedure debug_dma_map_page(#in~216.base : int, #in~216.offset : int, #in~217.base : int, #in~217.offset : int, #in~218 : int, #in~219 : int, #in~220 : int, #in~221 : int, #in~222 : int) returns ();
modifies ;

procedure warn_slowpath_null(#in~90.base : int, #in~90.offset : int, #in~91 : int) returns ();
modifies ;

procedure request_firmware(#in~533.base : int, #in~533.offset : int, #in~534.base : int, #in~534.offset : int, #in~535.base : int, #in~535.offset : int) returns (#res : int);
modifies ;

procedure pci_disable_sriov(#in~330.base : int, #in~330.offset : int) returns ();
modifies ;

procedure __init_waitqueue_head(#in~109.base : int, #in~109.offset : int, #in~110.base : int, #in~110.offset : int, #in~111.base : int, #in~111.offset : int) returns ();
modifies ;

procedure dev_warn(#in~145.base : int, #in~145.offset : int, #in~146.base : int, #in~146.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock(#in~107.base : int, #in~107.offset : int) returns ();
modifies ;

procedure pci_bus_read_config_word(#in~156.base : int, #in~156.offset : int, #in~157 : int, #in~158 : int, #in~159.base : int, #in~159.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock_bh(#in~3131.base : int, #in~3131.offset : int) returns ();
modifies ;

procedure msleep(#in~404 : int) returns ();
modifies ;

procedure pci_bus_write_config_dword(#in~164.base : int, #in~164.offset : int, #in~165 : int, #in~166 : int, #in~167 : int) returns (#res : int);
modifies ;

procedure cancel_delayed_work_sync(#in~126.base : int, #in~126.offset : int) returns (#res : ~bool);
modifies ;

procedure pci_cleanup_aer_uncorrect_error_status(#in~612.base : int, #in~612.offset : int) returns (#res : int);
modifies ;

procedure skb_push(#in~361.base : int, #in~361.offset : int, #in~362 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure netif_carrier_off(#in~448.base : int, #in~448.offset : int) returns ();
modifies ;

procedure wait_for_completion_timeout(#in~3133.base : int, #in~3133.offset : int, #in~3134 : int) returns (#res : int);
modifies ;

procedure __bad_size_call_parameter() returns ();
modifies ;

procedure rtnl_unlock() returns ();
modifies ;

procedure pci_enable_sriov(#in~328.base : int, #in~328.offset : int, #in~329 : int) returns (#res : int);
modifies ;

procedure mutex_unlock(#in~102.base : int, #in~102.offset : int) returns ();
modifies ;

procedure pskb_expand_head(#in~339.base : int, #in~339.offset : int, #in~340 : int, #in~341 : int, #in~342 : int) returns (#res : int);
modifies ;

procedure __memcpy(#in~75.base : int, #in~75.offset : int, #in~76.base : int, #in~76.offset : int, #in~77 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure queue_delayed_work_on(#in~122 : int, #in~123.base : int, #in~123.offset : int, #in~124.base : int, #in~124.offset : int, #in~125 : int) returns (#res : ~bool);
modifies ;

procedure napi_get_frags(#in~445.base : int, #in~445.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure netif_set_real_num_tx_queues(#in~439.base : int, #in~439.offset : int, #in~440 : int) returns (#res : int);
modifies ;

procedure pci_disable_msix(#in~197.base : int, #in~197.offset : int) returns ();
modifies ;

procedure msleep_interruptible(#in~3136 : int) returns (#res : int);
modifies ;

procedure mutex_lock(#in~103.base : int, #in~103.offset : int) returns ();
modifies ;

procedure debug_dma_unmap_page(#in~225.base : int, #in~225.offset : int, #in~226 : int, #in~227 : int, #in~228 : int, #in~229 : int) returns ();
modifies ;

procedure __netif_schedule(#in~421.base : int, #in~421.offset : int) returns ();
modifies ;

procedure debug_dma_alloc_coherent(#in~230.base : int, #in~230.offset : int, #in~231 : int, #in~232 : int, #in~233.base : int, #in~233.offset : int) returns ();
modifies ;

procedure __kmalloc(#in~208 : int, #in~209 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure consume_skb(#in~336.base : int, #in~336.offset : int) returns ();
modifies ;

procedure pci_set_master(#in~179.base : int, #in~179.offset : int) returns ();
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure put_page(#in~206.base : int, #in~206.offset : int) returns ();
modifies ;

procedure mutex_lock_interruptible(#in~3130.base : int, #in~3130.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock(#in~108.base : int, #in~108.offset : int) returns ();
modifies ;

procedure local_bh_disable() returns ();
modifies ;

procedure dev_set_drvdata(#in~141.base : int, #in~141.offset : int, #in~142.base : int, #in~142.offset : int) returns (#res : int);
modifies ;

procedure printk(#in~65.base : int, #in~65.offset : int) returns (#res : int);
modifies ;

procedure kfree_skb(#in~335.base : int, #in~335.offset : int) returns ();
modifies ;

procedure dev_err(#in~143.base : int, #in~143.offset : int, #in~144.base : int, #in~144.offset : int) returns (#res : int);
modifies ;

procedure __mutex_init(#in~99.base : int, #in~99.offset : int, #in~100.base : int, #in~100.offset : int, #in~101.base : int, #in~101.offset : int) returns ();
modifies ;

procedure lockdep_init_map(#in~95.base : int, #in~95.offset : int, #in~96.base : int, #in~96.offset : int, #in~97.base : int, #in~97.offset : int, #in~98 : int) returns ();
modifies ;

procedure pci_enable_msix(#in~194.base : int, #in~194.offset : int, #in~195.base : int, #in~195.offset : int, #in~196 : int) returns (#res : int);
modifies ;

procedure release_firmware(#in~536.base : int, #in~536.offset : int) returns ();
modifies ;

procedure ldv_handler_precall() returns ();
modifies ;

procedure __bitmap_weight(#in~87.base : int, #in~87.offset : int, #in~88 : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure strcpy(#in~3128.base : int, #in~3128.offset : int, #in~3129.base : int, #in~3129.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure pci_restore_state(#in~181.base : int, #in~181.offset : int) returns ();
modifies ;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure free_netdev(#in~420.base : int, #in~420.offset : int) returns ();
modifies ;

procedure synchronize_irq(#in~405 : int) returns ();
modifies ;

procedure kfree(#in~207.base : int, #in~207.offset : int) returns ();
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];

procedure __VERIFIER_error() returns ();
modifies ;

procedure napi_complete(#in~411.base : int, #in~411.offset : int) returns ();
modifies ;

procedure eth_type_trans(#in~463.base : int, #in~463.offset : int, #in~464.base : int, #in~464.offset : int) returns (#res : ~__be16);
modifies ;

procedure __get_page_tail(#in~199.base : int, #in~199.offset : int) returns (#res : ~bool);
modifies ;

procedure __pci_enable_wake(#in~186.base : int, #in~186.offset : int, #in~187 : int, #in~188 : int, #in~189 : int) returns (#res : int);
modifies ;

procedure dev_kfree_skb_any(#in~443.base : int, #in~443.offset : int) returns ();
modifies ;

procedure pci_enable_device(#in~177.base : int, #in~177.offset : int) returns (#res : int);
modifies ;

procedure rtnl_lock() returns ();
modifies ;

procedure memmove(#in~81.base : int, #in~81.offset : int, #in~82.base : int, #in~82.offset : int, #in~83 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure pci_find_ext_capability(#in~151.base : int, #in~151.offset : int, #in~152 : int) returns (#res : int);
modifies ;

procedure init_timer_key(#in~115.base : int, #in~115.offset : int, #in~116 : int, #in~117.base : int, #in~117.offset : int, #in~118.base : int, #in~118.offset : int) returns ();
modifies ;

procedure netif_get_num_default_rss_queues() returns (#res : int);
modifies ;

procedure pci_iounmap(#in~132.base : int, #in~132.offset : int, #in~133.base : int, #in~133.offset : int) returns ();
modifies ;

procedure pci_set_power_state(#in~182.base : int, #in~182.offset : int, #in~183 : int) returns (#res : int);
modifies ;

procedure msecs_to_jiffies(#in~114 : int) returns (#res : int);
modifies ;

procedure snprintf(#in~4333.base : int, #in~4333.offset : int, #in~4334 : int, #in~4335.base : int, #in~4335.offset : int) returns (#res : int);
modifies ;

procedure delayed_work_timer_fn(#in~119 : int) returns ();
modifies ;

procedure local_bh_enable() returns ();
modifies ;

procedure request_threaded_irq(#in~508 : int, #in~509.base : int, #in~509.offset : int, #in~510.base : int, #in~510.offset : int, #in~511 : int, #in~512.base : int, #in~512.offset : int, #in~513.base : int, #in~513.offset : int) returns (#res : int);
modifies ;

procedure unregister_netdev(#in~461.base : int, #in~461.offset : int) returns ();
modifies ;

procedure netpoll_trap() returns (#res : int);
modifies ;


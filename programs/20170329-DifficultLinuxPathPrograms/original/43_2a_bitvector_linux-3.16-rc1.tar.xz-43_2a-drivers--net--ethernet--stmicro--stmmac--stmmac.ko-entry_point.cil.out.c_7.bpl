type STRUCT~perf_event;
type STRUCT~optimistic_spin_queue;
type STRUCT~tvec_base;
type STRUCT~workqueue_struct;
type STRUCT~uprobe;
type STRUCT~return_instance;
type STRUCT~xol_area;
type STRUCT~slab;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~kioctx_table;
type STRUCT~mmu_notifier_mm;
type STRUCT~kernfs_open_node;
type STRUCT~kernfs_iattrs;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~tracepoint;
type STRUCT~ftrace_event_call;
type STRUCT~kmem_cache_node;
type STRUCT~mem_cgroup;
type STRUCT~poll_table_struct;
type STRUCT~pipe_inode_info;
type STRUCT~user_namespace;
type STRUCT~pinctrl;
type STRUCT~pinctrl_state;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~acpi_device;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~cma;
type STRUCT~iommu_group;
type STRUCT~sem_undo_list;
type STRUCT~pid_namespace;
type STRUCT~seccomp_filter;
type STRUCT~assoc_array_ptr;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~tty_struct;
type STRUCT~autogroup;
type STRUCT~tty_audit_buf;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~sched_class;
type STRUCT~task_group;
type STRUCT~fs_struct;
type STRUCT~files_struct;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~bio_list;
type STRUCT~blk_plug;
type STRUCT~reclaim_state;
type STRUCT~backing_dev_info;
type STRUCT~io_context;
type STRUCT~robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~numa_group;
type STRUCT~ftrace_ret_stack;
type STRUCT~sec_path;
type STRUCT~vfsmount;
type STRUCT~writeback_control;
type STRUCT~swap_info_struct;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~posix_acl;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~nameidata;
type STRUCT~kstatfs;
type STRUCT~prot_inuse;
type STRUCT~proc_dir_entry;
type STRUCT~ipv4_devconf;
type STRUCT~fib_rules_ops;
type STRUCT~fib_table;
type STRUCT~inet_peer_base;
type STRUCT~tcpm_hash_bucket;
type STRUCT~xt_table;
type STRUCT~ipv6_devconf;
type STRUCT~rt6_info;
type STRUCT~rt6_statistics;
type STRUCT~fib6_table;
type STRUCT~sctp_mib;
type STRUCT~nf_logger;
type STRUCT~ebt_table;
type STRUCT~ip_conntrack_stat;
type STRUCT~nf_ct_event_notifier;
type STRUCT~nf_exp_event_notifier;
type STRUCT~nft_af_info;
type STRUCT~net_generic;
type STRUCT~netns_ipvs;
type STRUCT~cgroup_taskset;
type STRUCT~uts_namespace;
type STRUCT~ipc_namespace;
type STRUCT~mnt_namespace;
type STRUCT~Qdisc;
type STRUCT~netpoll_info;
type STRUCT~pcpu_lstats;
type STRUCT~pcpu_dstats;
type STRUCT~pcpu_vstats;
type STRUCT~iw_handler_def;
type STRUCT~iw_public_data;
type STRUCT~forwarding_accel_ops;
type STRUCT~vlan_info;
type STRUCT~tipc_bearer;
type STRUCT~in_device;
type STRUCT~dn_dev;
type STRUCT~inet6_dev;
type STRUCT~wireless_dev;
type STRUCT~cpu_rmap;
type STRUCT~garp_port;
type STRUCT~mrp_port;
type STRUCT~kioctx;
type STRUCT~eventfd_ctx;
type STRUCT~rtable;
type STRUCT~dn_route;
type STRUCT~xfrm_state;
type STRUCT~xfrm_policy;
type STRUCT~inet_hashinfo;
type STRUCT~udp_table;
type STRUCT~raw_hashinfo;
type STRUCT~request_sock;
type STRUCT~mfd_cell;
type STRUCT~hotplug_slot;
type STRUCT~pci_sriov;
type STRUCT~pcie_link_state;
type STRUCT~pci_vpd;
type STRUCT~pci_ats;
type STRUCT~msi_chip;
type STRUCT~clk;
type STRUCT~reset_control;
type STRUCT~ptp_clock;
type STRUCT~regmap;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__s64 = int;
type ~__u64 = int;
type ~s8 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~oom_flags_t = int;
type ~pteval_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~__kernel_sa_family_t = int;
type ~cputime_t = int;
type ~sk_buff_data_t = int;
type ~qsize_t = int;
type ~kernel_ulong_t = int;
type ~pci_power_t = int;
type ~pci_channel_state_t = int;
type ~pci_dev_flags_t = int;
type ~pci_bus_flags_t = int;
type ~pci_ers_result_t = int;
type ~ldv_func_ret_type___2 = int;
type ~ldv_func_ret_type___3 = int;
type ~ldv_func_ret_type___4 = int;
type ~ldv_func_ret_type___5 = int;
type ~ldv_func_ret_type___6 = int;
type ~ldv_func_ret_type___7 = int;
type ~ldv_func_ret_type___8 = int;
type ~ldv_func_ret_type___9 = int;
type ~ldv_func_ret_type___10 = int;
type ~ldv_func_ret_type___11 = int;
type ~ldv_func_ret_type___12 = int;
type ~ldv_func_ret_type___13 = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_clock_t = ~__kernel_long_t;
type ~__be16 = ~__u16;
type ~__be32 = ~__u32;
type ~__wsum = ~__u32;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint8_t = ~__u8;
type ~uint32_t = ~__u32;
type ~uint64_t = ~__u64;
type ~dma_addr_t = ~u64;
type ~phys_addr_t = ~u64;
type ~resource_size_t = ~phys_addr_t;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~irqreturn_t = int;
type ~sa_family_t = ~__kernel_sa_family_t;
type ~socket_state = int;
type ~dma_cookie_t = ~s32;
type ~netdev_features_t = ~u64;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~projid_t = ~__kernel_uid32_t;
type ~compat_long_t = ~s32;
type ~compat_uptr_t = ~u32;
type ~netdev_tx_t = int;
type ~gro_result_t = int;
type ~rx_handler_result_t = int;
type ~__portpair = ~__u32;
type ~__addrpair = ~__u64;
type ~phy_interface_t = int;
type ~phandle = ~u32;
const #funAddr~stmmac_eee_ctrl_timer.base : int;
const #funAddr~stmmac_eee_ctrl_timer.offset : int;
const #funAddr~stmmac_adjust_link.base : int;
const #funAddr~stmmac_adjust_link.offset : int;
const #funAddr~stmmac_tx_timer.base : int;
const #funAddr~stmmac_tx_timer.offset : int;
const #funAddr~stmmac_interrupt.base : int;
const #funAddr~stmmac_interrupt.offset : int;
const #funAddr~stmmac_sysfs_ring_read.base : int;
const #funAddr~stmmac_sysfs_ring_read.offset : int;
const #funAddr~seq_lseek.base : int;
const #funAddr~seq_lseek.offset : int;
const #funAddr~seq_read.base : int;
const #funAddr~seq_read.offset : int;
const #funAddr~stmmac_sysfs_ring_open.base : int;
const #funAddr~stmmac_sysfs_ring_open.offset : int;
const #funAddr~single_release.base : int;
const #funAddr~single_release.offset : int;
const #funAddr~stmmac_sysfs_dma_cap_read.base : int;
const #funAddr~stmmac_sysfs_dma_cap_read.offset : int;
const #funAddr~stmmac_sysfs_dma_cap_open.base : int;
const #funAddr~stmmac_sysfs_dma_cap_open.offset : int;
const #funAddr~stmmac_open.base : int;
const #funAddr~stmmac_open.offset : int;
const #funAddr~stmmac_release.base : int;
const #funAddr~stmmac_release.offset : int;
const #funAddr~stmmac_xmit.base : int;
const #funAddr~stmmac_xmit.offset : int;
const #funAddr~stmmac_set_rx_mode.base : int;
const #funAddr~stmmac_set_rx_mode.offset : int;
const #funAddr~eth_mac_addr.base : int;
const #funAddr~eth_mac_addr.offset : int;
const #funAddr~stmmac_ioctl.base : int;
const #funAddr~stmmac_ioctl.offset : int;
const #funAddr~stmmac_change_mtu.base : int;
const #funAddr~stmmac_change_mtu.offset : int;
const #funAddr~stmmac_tx_timeout.base : int;
const #funAddr~stmmac_tx_timeout.offset : int;
const #funAddr~stmmac_poll_controller.base : int;
const #funAddr~stmmac_poll_controller.offset : int;
const #funAddr~stmmac_fix_features.base : int;
const #funAddr~stmmac_fix_features.offset : int;
const #funAddr~stmmac_poll.base : int;
const #funAddr~stmmac_poll.offset : int;
const #funAddr~stmmac_ethtool_getsettings.base : int;
const #funAddr~stmmac_ethtool_getsettings.offset : int;
const #funAddr~stmmac_ethtool_setsettings.base : int;
const #funAddr~stmmac_ethtool_setsettings.offset : int;
const #funAddr~stmmac_ethtool_getdrvinfo.base : int;
const #funAddr~stmmac_ethtool_getdrvinfo.offset : int;
const #funAddr~stmmac_ethtool_get_regs_len.base : int;
const #funAddr~stmmac_ethtool_get_regs_len.offset : int;
const #funAddr~stmmac_ethtool_gregs.base : int;
const #funAddr~stmmac_ethtool_gregs.offset : int;
const #funAddr~stmmac_get_wol.base : int;
const #funAddr~stmmac_get_wol.offset : int;
const #funAddr~stmmac_set_wol.base : int;
const #funAddr~stmmac_set_wol.offset : int;
const #funAddr~stmmac_ethtool_getmsglevel.base : int;
const #funAddr~stmmac_ethtool_getmsglevel.offset : int;
const #funAddr~stmmac_ethtool_setmsglevel.base : int;
const #funAddr~stmmac_ethtool_setmsglevel.offset : int;
const #funAddr~ethtool_op_get_link.base : int;
const #funAddr~ethtool_op_get_link.offset : int;
const #funAddr~stmmac_get_coalesce.base : int;
const #funAddr~stmmac_get_coalesce.offset : int;
const #funAddr~stmmac_set_coalesce.base : int;
const #funAddr~stmmac_set_coalesce.offset : int;
const #funAddr~stmmac_get_pauseparam.base : int;
const #funAddr~stmmac_get_pauseparam.offset : int;
const #funAddr~stmmac_set_pauseparam.base : int;
const #funAddr~stmmac_set_pauseparam.offset : int;
const #funAddr~stmmac_get_strings.base : int;
const #funAddr~stmmac_get_strings.offset : int;
const #funAddr~stmmac_get_ethtool_stats.base : int;
const #funAddr~stmmac_get_ethtool_stats.offset : int;
const #funAddr~stmmac_check_if_running.base : int;
const #funAddr~stmmac_check_if_running.offset : int;
const #funAddr~stmmac_get_sset_count.base : int;
const #funAddr~stmmac_get_sset_count.offset : int;
const #funAddr~stmmac_get_ts_info.base : int;
const #funAddr~stmmac_get_ts_info.offset : int;
const #funAddr~stmmac_ethtool_op_get_eee.base : int;
const #funAddr~stmmac_ethtool_op_get_eee.offset : int;
const #funAddr~stmmac_ethtool_op_set_eee.base : int;
const #funAddr~stmmac_ethtool_op_set_eee.offset : int;
const #funAddr~stmmac_mdio_read.base : int;
const #funAddr~stmmac_mdio_read.offset : int;
const #funAddr~stmmac_mdio_write.base : int;
const #funAddr~stmmac_mdio_write.offset : int;
const #funAddr~stmmac_mdio_reset.base : int;
const #funAddr~stmmac_mdio_reset.offset : int;
const #funAddr~stmmac_is_jumbo_frm.base : int;
const #funAddr~stmmac_is_jumbo_frm.offset : int;
const #funAddr~stmmac_jumbo_frm.base : int;
const #funAddr~stmmac_jumbo_frm.offset : int;
const #funAddr~stmmac_set_16kib_bfsize.base : int;
const #funAddr~stmmac_set_16kib_bfsize.offset : int;
const #funAddr~stmmac_init_desc3.base : int;
const #funAddr~stmmac_init_desc3.offset : int;
const #funAddr~stmmac_refill_desc3.base : int;
const #funAddr~stmmac_refill_desc3.offset : int;
const #funAddr~stmmac_clean_desc3.base : int;
const #funAddr~stmmac_clean_desc3.offset : int;
const #funAddr~stmmac_init_dma_chain.base : int;
const #funAddr~stmmac_init_dma_chain.offset : int;
const #funAddr~stmmac_is_jumbo_frm___0.base : int;
const #funAddr~stmmac_is_jumbo_frm___0.offset : int;
const #funAddr~stmmac_jumbo_frm___0.base : int;
const #funAddr~stmmac_jumbo_frm___0.offset : int;
const #funAddr~stmmac_refill_desc3___0.base : int;
const #funAddr~stmmac_refill_desc3___0.offset : int;
const #funAddr~stmmac_clean_desc3___0.base : int;
const #funAddr~stmmac_clean_desc3___0.offset : int;
const #funAddr~dwmac1000_core_init.base : int;
const #funAddr~dwmac1000_core_init.offset : int;
const #funAddr~dwmac1000_rx_ipc_enable.base : int;
const #funAddr~dwmac1000_rx_ipc_enable.offset : int;
const #funAddr~dwmac1000_dump_regs.base : int;
const #funAddr~dwmac1000_dump_regs.offset : int;
const #funAddr~dwmac1000_irq_status.base : int;
const #funAddr~dwmac1000_irq_status.offset : int;
const #funAddr~dwmac1000_set_filter.base : int;
const #funAddr~dwmac1000_set_filter.offset : int;
const #funAddr~dwmac1000_flow_ctrl.base : int;
const #funAddr~dwmac1000_flow_ctrl.offset : int;
const #funAddr~dwmac1000_pmt.base : int;
const #funAddr~dwmac1000_pmt.offset : int;
const #funAddr~dwmac1000_set_umac_addr.base : int;
const #funAddr~dwmac1000_set_umac_addr.offset : int;
const #funAddr~dwmac1000_get_umac_addr.base : int;
const #funAddr~dwmac1000_get_umac_addr.offset : int;
const #funAddr~dwmac1000_set_eee_mode.base : int;
const #funAddr~dwmac1000_set_eee_mode.offset : int;
const #funAddr~dwmac1000_reset_eee_mode.base : int;
const #funAddr~dwmac1000_reset_eee_mode.offset : int;
const #funAddr~dwmac1000_set_eee_timer.base : int;
const #funAddr~dwmac1000_set_eee_timer.offset : int;
const #funAddr~dwmac1000_set_eee_pls.base : int;
const #funAddr~dwmac1000_set_eee_pls.offset : int;
const #funAddr~dwmac1000_ctrl_ane.base : int;
const #funAddr~dwmac1000_ctrl_ane.offset : int;
const #funAddr~dwmac1000_get_adv.base : int;
const #funAddr~dwmac1000_get_adv.offset : int;
const #funAddr~dwmac1000_dma_init.base : int;
const #funAddr~dwmac1000_dma_init.offset : int;
const #funAddr~dwmac1000_dump_dma_regs.base : int;
const #funAddr~dwmac1000_dump_dma_regs.offset : int;
const #funAddr~dwmac1000_dma_operation_mode.base : int;
const #funAddr~dwmac1000_dma_operation_mode.offset : int;
const #funAddr~dwmac_enable_dma_transmission.base : int;
const #funAddr~dwmac_enable_dma_transmission.offset : int;
const #funAddr~dwmac_enable_dma_irq.base : int;
const #funAddr~dwmac_enable_dma_irq.offset : int;
const #funAddr~dwmac_disable_dma_irq.base : int;
const #funAddr~dwmac_disable_dma_irq.offset : int;
const #funAddr~dwmac_dma_start_tx.base : int;
const #funAddr~dwmac_dma_start_tx.offset : int;
const #funAddr~dwmac_dma_stop_tx.base : int;
const #funAddr~dwmac_dma_stop_tx.offset : int;
const #funAddr~dwmac_dma_start_rx.base : int;
const #funAddr~dwmac_dma_start_rx.offset : int;
const #funAddr~dwmac_dma_stop_rx.base : int;
const #funAddr~dwmac_dma_stop_rx.offset : int;
const #funAddr~dwmac_dma_interrupt.base : int;
const #funAddr~dwmac_dma_interrupt.offset : int;
const #funAddr~dwmac1000_get_hw_feature.base : int;
const #funAddr~dwmac1000_get_hw_feature.offset : int;
const #funAddr~dwmac1000_rx_watchdog.base : int;
const #funAddr~dwmac1000_rx_watchdog.offset : int;
const #funAddr~dwmac100_core_init.base : int;
const #funAddr~dwmac100_core_init.offset : int;
const #funAddr~dwmac100_rx_ipc_enable.base : int;
const #funAddr~dwmac100_rx_ipc_enable.offset : int;
const #funAddr~dwmac100_dump_mac_regs.base : int;
const #funAddr~dwmac100_dump_mac_regs.offset : int;
const #funAddr~dwmac100_irq_status.base : int;
const #funAddr~dwmac100_irq_status.offset : int;
const #funAddr~dwmac100_set_filter.base : int;
const #funAddr~dwmac100_set_filter.offset : int;
const #funAddr~dwmac100_flow_ctrl.base : int;
const #funAddr~dwmac100_flow_ctrl.offset : int;
const #funAddr~dwmac100_pmt.base : int;
const #funAddr~dwmac100_pmt.offset : int;
const #funAddr~dwmac100_set_umac_addr.base : int;
const #funAddr~dwmac100_set_umac_addr.offset : int;
const #funAddr~dwmac100_get_umac_addr.base : int;
const #funAddr~dwmac100_get_umac_addr.offset : int;
const #funAddr~dwmac100_dma_init.base : int;
const #funAddr~dwmac100_dma_init.offset : int;
const #funAddr~dwmac100_dump_dma_regs.base : int;
const #funAddr~dwmac100_dump_dma_regs.offset : int;
const #funAddr~dwmac100_dma_operation_mode.base : int;
const #funAddr~dwmac100_dma_operation_mode.offset : int;
const #funAddr~dwmac100_dma_diagnostic_fr.base : int;
const #funAddr~dwmac100_dma_diagnostic_fr.offset : int;
const #funAddr~enh_desc_init_rx_desc.base : int;
const #funAddr~enh_desc_init_rx_desc.offset : int;
const #funAddr~enh_desc_init_tx_desc.base : int;
const #funAddr~enh_desc_init_tx_desc.offset : int;
const #funAddr~enh_desc_prepare_tx_desc.base : int;
const #funAddr~enh_desc_prepare_tx_desc.offset : int;
const #funAddr~enh_desc_set_tx_owner.base : int;
const #funAddr~enh_desc_set_tx_owner.offset : int;
const #funAddr~enh_desc_get_tx_owner.base : int;
const #funAddr~enh_desc_get_tx_owner.offset : int;
const #funAddr~enh_desc_close_tx_desc.base : int;
const #funAddr~enh_desc_close_tx_desc.offset : int;
const #funAddr~enh_desc_release_tx_desc.base : int;
const #funAddr~enh_desc_release_tx_desc.offset : int;
const #funAddr~enh_desc_clear_tx_ic.base : int;
const #funAddr~enh_desc_clear_tx_ic.offset : int;
const #funAddr~enh_desc_get_tx_ls.base : int;
const #funAddr~enh_desc_get_tx_ls.offset : int;
const #funAddr~enh_desc_get_tx_status.base : int;
const #funAddr~enh_desc_get_tx_status.offset : int;
const #funAddr~enh_desc_get_tx_len.base : int;
const #funAddr~enh_desc_get_tx_len.offset : int;
const #funAddr~enh_desc_get_rx_owner.base : int;
const #funAddr~enh_desc_get_rx_owner.offset : int;
const #funAddr~enh_desc_set_rx_owner.base : int;
const #funAddr~enh_desc_set_rx_owner.offset : int;
const #funAddr~enh_desc_get_rx_frame_len.base : int;
const #funAddr~enh_desc_get_rx_frame_len.offset : int;
const #funAddr~enh_desc_get_rx_status.base : int;
const #funAddr~enh_desc_get_rx_status.offset : int;
const #funAddr~enh_desc_get_ext_status.base : int;
const #funAddr~enh_desc_get_ext_status.offset : int;
const #funAddr~enh_desc_enable_tx_timestamp.base : int;
const #funAddr~enh_desc_enable_tx_timestamp.offset : int;
const #funAddr~enh_desc_get_tx_timestamp_status.base : int;
const #funAddr~enh_desc_get_tx_timestamp_status.offset : int;
const #funAddr~enh_desc_get_timestamp.base : int;
const #funAddr~enh_desc_get_timestamp.offset : int;
const #funAddr~enh_desc_get_rx_timestamp_status.base : int;
const #funAddr~enh_desc_get_rx_timestamp_status.offset : int;
const #funAddr~ndesc_init_rx_desc.base : int;
const #funAddr~ndesc_init_rx_desc.offset : int;
const #funAddr~ndesc_init_tx_desc.base : int;
const #funAddr~ndesc_init_tx_desc.offset : int;
const #funAddr~ndesc_prepare_tx_desc.base : int;
const #funAddr~ndesc_prepare_tx_desc.offset : int;
const #funAddr~ndesc_set_tx_owner.base : int;
const #funAddr~ndesc_set_tx_owner.offset : int;
const #funAddr~ndesc_get_tx_owner.base : int;
const #funAddr~ndesc_get_tx_owner.offset : int;
const #funAddr~ndesc_close_tx_desc.base : int;
const #funAddr~ndesc_close_tx_desc.offset : int;
const #funAddr~ndesc_release_tx_desc.base : int;
const #funAddr~ndesc_release_tx_desc.offset : int;
const #funAddr~ndesc_clear_tx_ic.base : int;
const #funAddr~ndesc_clear_tx_ic.offset : int;
const #funAddr~ndesc_get_tx_ls.base : int;
const #funAddr~ndesc_get_tx_ls.offset : int;
const #funAddr~ndesc_get_tx_status.base : int;
const #funAddr~ndesc_get_tx_status.offset : int;
const #funAddr~ndesc_get_tx_len.base : int;
const #funAddr~ndesc_get_tx_len.offset : int;
const #funAddr~ndesc_get_rx_owner.base : int;
const #funAddr~ndesc_get_rx_owner.offset : int;
const #funAddr~ndesc_set_rx_owner.base : int;
const #funAddr~ndesc_set_rx_owner.offset : int;
const #funAddr~ndesc_get_rx_frame_len.base : int;
const #funAddr~ndesc_get_rx_frame_len.offset : int;
const #funAddr~ndesc_get_rx_status.base : int;
const #funAddr~ndesc_get_rx_status.offset : int;
const #funAddr~ndesc_enable_tx_timestamp.base : int;
const #funAddr~ndesc_enable_tx_timestamp.offset : int;
const #funAddr~ndesc_get_tx_timestamp_status.base : int;
const #funAddr~ndesc_get_tx_timestamp_status.offset : int;
const #funAddr~ndesc_get_timestamp.base : int;
const #funAddr~ndesc_get_timestamp.offset : int;
const #funAddr~ndesc_get_rx_timestamp_status.base : int;
const #funAddr~ndesc_get_rx_timestamp_status.offset : int;
const #funAddr~stmmac_config_hw_tstamping.base : int;
const #funAddr~stmmac_config_hw_tstamping.offset : int;
const #funAddr~stmmac_config_sub_second_increment.base : int;
const #funAddr~stmmac_config_sub_second_increment.offset : int;
const #funAddr~stmmac_init_systime.base : int;
const #funAddr~stmmac_init_systime.offset : int;
const #funAddr~stmmac_config_addend.base : int;
const #funAddr~stmmac_config_addend.offset : int;
const #funAddr~stmmac_adjust_systime.base : int;
const #funAddr~stmmac_adjust_systime.offset : int;
const #funAddr~stmmac_get_systime.base : int;
const #funAddr~stmmac_get_systime.offset : int;
const #funAddr~stmmac_adjust_freq.base : int;
const #funAddr~stmmac_adjust_freq.offset : int;
const #funAddr~stmmac_adjust_time.base : int;
const #funAddr~stmmac_adjust_time.offset : int;
const #funAddr~stmmac_get_time.base : int;
const #funAddr~stmmac_get_time.offset : int;
const #funAddr~stmmac_set_time.base : int;
const #funAddr~stmmac_set_time.offset : int;
const #funAddr~stmmac_enable.base : int;
const #funAddr~stmmac_enable.offset : int;
const #funAddr~stmmac_pltfr_suspend.base : int;
const #funAddr~stmmac_pltfr_suspend.offset : int;
const #funAddr~stmmac_pltfr_resume.base : int;
const #funAddr~stmmac_pltfr_resume.offset : int;
const #funAddr~stmmac_pltfr_probe.base : int;
const #funAddr~stmmac_pltfr_probe.offset : int;
const #funAddr~stmmac_pltfr_remove.base : int;
const #funAddr~stmmac_pltfr_remove.offset : int;
const #funAddr~stmmac_pci_probe.base : int;
const #funAddr~stmmac_pci_probe.offset : int;
const #funAddr~stmmac_pci_remove.base : int;
const #funAddr~stmmac_pci_remove.offset : int;
const #funAddr~stmmac_pci_suspend.base : int;
const #funAddr~stmmac_pci_suspend.offset : int;
const #funAddr~stmmac_pci_resume.base : int;
const #funAddr~stmmac_pci_resume.offset : int;
const #funAddr~socfpga_dwmac_probe.base : int;
const #funAddr~socfpga_dwmac_probe.offset : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~uprobe_task_state~UTASK_RUNNING : int;
const ~uprobe_task_state~UTASK_SSTEP : int;
const ~uprobe_task_state~UTASK_SSTEP_ACK : int;
const ~uprobe_task_state~UTASK_SSTEP_TRAPPED : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~module_state~MODULE_STATE_UNFORMED : int;
const ~irqreturn~IRQ_NONE : int;
const ~irqreturn~IRQ_HANDLED : int;
const ~irqreturn~IRQ_WAKE_THREAD : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~ldv_16907~SS_FREE : int;
const ~ldv_16907~SS_UNCONNECTED : int;
const ~ldv_16907~SS_CONNECTING : int;
const ~ldv_16907~SS_CONNECTED : int;
const ~ldv_16907~SS_DISCONNECTING : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_RESUME_LATENCY : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY_TOLERANCE : int;
const ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS : int;
const ~pm_qos_type~PM_QOS_UNITIALIZED : int;
const ~pm_qos_type~PM_QOS_MAX : int;
const ~pm_qos_type~PM_QOS_MIN : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~quota_type~USRQUOTA : int;
const ~quota_type~GRPQUOTA : int;
const ~quota_type~PRJQUOTA : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ON : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_OFF : int;
const ~netdev_tx~__NETDEV_TX_MIN : int;
const ~netdev_tx~NETDEV_TX_OK : int;
const ~netdev_tx~NETDEV_TX_BUSY : int;
const ~netdev_tx~NETDEV_TX_LOCKED : int;
const ~gro_result~GRO_MERGED : int;
const ~gro_result~GRO_MERGED_FREE : int;
const ~gro_result~GRO_HELD : int;
const ~gro_result~GRO_NORMAL : int;
const ~gro_result~GRO_DROP : int;
const ~rx_handler_result~RX_HANDLER_CONSUMED : int;
const ~rx_handler_result~RX_HANDLER_ANOTHER : int;
const ~rx_handler_result~RX_HANDLER_EXACT : int;
const ~rx_handler_result~RX_HANDLER_PASS : int;
const ~skb_free_reason~SKB_REASON_CONSUMED : int;
const ~skb_free_reason~SKB_REASON_DROPPED : int;
const ~ldv_33083~PHY_INTERFACE_MODE_NA : int;
const ~ldv_33083~PHY_INTERFACE_MODE_MII : int;
const ~ldv_33083~PHY_INTERFACE_MODE_GMII : int;
const ~ldv_33083~PHY_INTERFACE_MODE_SGMII : int;
const ~ldv_33083~PHY_INTERFACE_MODE_TBI : int;
const ~ldv_33083~PHY_INTERFACE_MODE_REVMII : int;
const ~ldv_33083~PHY_INTERFACE_MODE_RMII : int;
const ~ldv_33083~PHY_INTERFACE_MODE_RGMII : int;
const ~ldv_33083~PHY_INTERFACE_MODE_RGMII_ID : int;
const ~ldv_33083~PHY_INTERFACE_MODE_RGMII_RXID : int;
const ~ldv_33083~PHY_INTERFACE_MODE_RGMII_TXID : int;
const ~ldv_33083~PHY_INTERFACE_MODE_RTBI : int;
const ~ldv_33083~PHY_INTERFACE_MODE_SMII : int;
const ~ldv_33083~PHY_INTERFACE_MODE_XGMII : int;
const ~ldv_33083~PHY_INTERFACE_MODE_MOCA : int;
const ~ldv_33083~PHY_INTERFACE_MODE_QSGMII : int;
const ~ldv_33083~PHY_INTERFACE_MODE_MAX : int;
const ~ldv_33133~MDIOBUS_ALLOCATED : int;
const ~ldv_33133~MDIOBUS_REGISTERED : int;
const ~ldv_33133~MDIOBUS_UNREGISTERED : int;
const ~ldv_33133~MDIOBUS_RELEASED : int;
const ~phy_state~PHY_DOWN : int;
const ~phy_state~PHY_STARTING : int;
const ~phy_state~PHY_READY : int;
const ~phy_state~PHY_PENDING : int;
const ~phy_state~PHY_UP : int;
const ~phy_state~PHY_AN : int;
const ~phy_state~PHY_RUNNING : int;
const ~phy_state~PHY_NOLINK : int;
const ~phy_state~PHY_FORCING : int;
const ~phy_state~PHY_CHANGELINK : int;
const ~phy_state~PHY_HALTED : int;
const ~phy_state~PHY_RESUMING : int;
const ~pci_channel_state~pci_channel_io_normal : int;
const ~pci_channel_state~pci_channel_io_frozen : int;
const ~pci_channel_state~pci_channel_io_perm_failure : int;
const ~ptp_pin_function~PTP_PF_NONE : int;
const ~ptp_pin_function~PTP_PF_EXTTS : int;
const ~ptp_pin_function~PTP_PF_PEROUT : int;
const ~ptp_pin_function~PTP_PF_PHYSYNC : int;
const ~ldv_34202~PTP_CLK_REQ_EXTTS : int;
const ~ldv_34202~PTP_CLK_REQ_PEROUT : int;
const ~ldv_34202~PTP_CLK_REQ_PPS : int;
axiom #funAddr~stmmac_eee_ctrl_timer.base == -1 && #funAddr~stmmac_eee_ctrl_timer.offset == 0;
axiom #funAddr~stmmac_adjust_link.base == -1 && #funAddr~stmmac_adjust_link.offset == 1;
axiom #funAddr~stmmac_tx_timer.base == -1 && #funAddr~stmmac_tx_timer.offset == 2;
axiom #funAddr~stmmac_interrupt.base == -1 && #funAddr~stmmac_interrupt.offset == 3;
axiom #funAddr~stmmac_sysfs_ring_read.base == -1 && #funAddr~stmmac_sysfs_ring_read.offset == 4;
axiom #funAddr~seq_lseek.base == -1 && #funAddr~seq_lseek.offset == 5;
axiom #funAddr~seq_read.base == -1 && #funAddr~seq_read.offset == 6;
axiom #funAddr~stmmac_sysfs_ring_open.base == -1 && #funAddr~stmmac_sysfs_ring_open.offset == 7;
axiom #funAddr~single_release.base == -1 && #funAddr~single_release.offset == 8;
axiom #funAddr~stmmac_sysfs_dma_cap_read.base == -1 && #funAddr~stmmac_sysfs_dma_cap_read.offset == 9;
axiom #funAddr~stmmac_sysfs_dma_cap_open.base == -1 && #funAddr~stmmac_sysfs_dma_cap_open.offset == 10;
axiom #funAddr~stmmac_open.base == -1 && #funAddr~stmmac_open.offset == 11;
axiom #funAddr~stmmac_release.base == -1 && #funAddr~stmmac_release.offset == 12;
axiom #funAddr~stmmac_xmit.base == -1 && #funAddr~stmmac_xmit.offset == 13;
axiom #funAddr~stmmac_set_rx_mode.base == -1 && #funAddr~stmmac_set_rx_mode.offset == 14;
axiom #funAddr~eth_mac_addr.base == -1 && #funAddr~eth_mac_addr.offset == 15;
axiom #funAddr~stmmac_ioctl.base == -1 && #funAddr~stmmac_ioctl.offset == 16;
axiom #funAddr~stmmac_change_mtu.base == -1 && #funAddr~stmmac_change_mtu.offset == 17;
axiom #funAddr~stmmac_tx_timeout.base == -1 && #funAddr~stmmac_tx_timeout.offset == 18;
axiom #funAddr~stmmac_poll_controller.base == -1 && #funAddr~stmmac_poll_controller.offset == 19;
axiom #funAddr~stmmac_fix_features.base == -1 && #funAddr~stmmac_fix_features.offset == 20;
axiom #funAddr~stmmac_poll.base == -1 && #funAddr~stmmac_poll.offset == 21;
axiom #funAddr~stmmac_ethtool_getsettings.base == -1 && #funAddr~stmmac_ethtool_getsettings.offset == 22;
axiom #funAddr~stmmac_ethtool_setsettings.base == -1 && #funAddr~stmmac_ethtool_setsettings.offset == 23;
axiom #funAddr~stmmac_ethtool_getdrvinfo.base == -1 && #funAddr~stmmac_ethtool_getdrvinfo.offset == 24;
axiom #funAddr~stmmac_ethtool_get_regs_len.base == -1 && #funAddr~stmmac_ethtool_get_regs_len.offset == 25;
axiom #funAddr~stmmac_ethtool_gregs.base == -1 && #funAddr~stmmac_ethtool_gregs.offset == 26;
axiom #funAddr~stmmac_get_wol.base == -1 && #funAddr~stmmac_get_wol.offset == 27;
axiom #funAddr~stmmac_set_wol.base == -1 && #funAddr~stmmac_set_wol.offset == 28;
axiom #funAddr~stmmac_ethtool_getmsglevel.base == -1 && #funAddr~stmmac_ethtool_getmsglevel.offset == 29;
axiom #funAddr~stmmac_ethtool_setmsglevel.base == -1 && #funAddr~stmmac_ethtool_setmsglevel.offset == 30;
axiom #funAddr~ethtool_op_get_link.base == -1 && #funAddr~ethtool_op_get_link.offset == 31;
axiom #funAddr~stmmac_get_coalesce.base == -1 && #funAddr~stmmac_get_coalesce.offset == 32;
axiom #funAddr~stmmac_set_coalesce.base == -1 && #funAddr~stmmac_set_coalesce.offset == 33;
axiom #funAddr~stmmac_get_pauseparam.base == -1 && #funAddr~stmmac_get_pauseparam.offset == 34;
axiom #funAddr~stmmac_set_pauseparam.base == -1 && #funAddr~stmmac_set_pauseparam.offset == 35;
axiom #funAddr~stmmac_get_strings.base == -1 && #funAddr~stmmac_get_strings.offset == 36;
axiom #funAddr~stmmac_get_ethtool_stats.base == -1 && #funAddr~stmmac_get_ethtool_stats.offset == 37;
axiom #funAddr~stmmac_check_if_running.base == -1 && #funAddr~stmmac_check_if_running.offset == 38;
axiom #funAddr~stmmac_get_sset_count.base == -1 && #funAddr~stmmac_get_sset_count.offset == 39;
axiom #funAddr~stmmac_get_ts_info.base == -1 && #funAddr~stmmac_get_ts_info.offset == 40;
axiom #funAddr~stmmac_ethtool_op_get_eee.base == -1 && #funAddr~stmmac_ethtool_op_get_eee.offset == 41;
axiom #funAddr~stmmac_ethtool_op_set_eee.base == -1 && #funAddr~stmmac_ethtool_op_set_eee.offset == 42;
axiom #funAddr~stmmac_mdio_read.base == -1 && #funAddr~stmmac_mdio_read.offset == 43;
axiom #funAddr~stmmac_mdio_write.base == -1 && #funAddr~stmmac_mdio_write.offset == 44;
axiom #funAddr~stmmac_mdio_reset.base == -1 && #funAddr~stmmac_mdio_reset.offset == 45;
axiom #funAddr~stmmac_is_jumbo_frm.base == -1 && #funAddr~stmmac_is_jumbo_frm.offset == 46;
axiom #funAddr~stmmac_jumbo_frm.base == -1 && #funAddr~stmmac_jumbo_frm.offset == 47;
axiom #funAddr~stmmac_set_16kib_bfsize.base == -1 && #funAddr~stmmac_set_16kib_bfsize.offset == 48;
axiom #funAddr~stmmac_init_desc3.base == -1 && #funAddr~stmmac_init_desc3.offset == 49;
axiom #funAddr~stmmac_refill_desc3.base == -1 && #funAddr~stmmac_refill_desc3.offset == 50;
axiom #funAddr~stmmac_clean_desc3.base == -1 && #funAddr~stmmac_clean_desc3.offset == 51;
axiom #funAddr~stmmac_init_dma_chain.base == -1 && #funAddr~stmmac_init_dma_chain.offset == 52;
axiom #funAddr~stmmac_is_jumbo_frm___0.base == -1 && #funAddr~stmmac_is_jumbo_frm___0.offset == 53;
axiom #funAddr~stmmac_jumbo_frm___0.base == -1 && #funAddr~stmmac_jumbo_frm___0.offset == 54;
axiom #funAddr~stmmac_refill_desc3___0.base == -1 && #funAddr~stmmac_refill_desc3___0.offset == 55;
axiom #funAddr~stmmac_clean_desc3___0.base == -1 && #funAddr~stmmac_clean_desc3___0.offset == 56;
axiom #funAddr~dwmac1000_core_init.base == -1 && #funAddr~dwmac1000_core_init.offset == 57;
axiom #funAddr~dwmac1000_rx_ipc_enable.base == -1 && #funAddr~dwmac1000_rx_ipc_enable.offset == 58;
axiom #funAddr~dwmac1000_dump_regs.base == -1 && #funAddr~dwmac1000_dump_regs.offset == 59;
axiom #funAddr~dwmac1000_irq_status.base == -1 && #funAddr~dwmac1000_irq_status.offset == 60;
axiom #funAddr~dwmac1000_set_filter.base == -1 && #funAddr~dwmac1000_set_filter.offset == 61;
axiom #funAddr~dwmac1000_flow_ctrl.base == -1 && #funAddr~dwmac1000_flow_ctrl.offset == 62;
axiom #funAddr~dwmac1000_pmt.base == -1 && #funAddr~dwmac1000_pmt.offset == 63;
axiom #funAddr~dwmac1000_set_umac_addr.base == -1 && #funAddr~dwmac1000_set_umac_addr.offset == 64;
axiom #funAddr~dwmac1000_get_umac_addr.base == -1 && #funAddr~dwmac1000_get_umac_addr.offset == 65;
axiom #funAddr~dwmac1000_set_eee_mode.base == -1 && #funAddr~dwmac1000_set_eee_mode.offset == 66;
axiom #funAddr~dwmac1000_reset_eee_mode.base == -1 && #funAddr~dwmac1000_reset_eee_mode.offset == 67;
axiom #funAddr~dwmac1000_set_eee_timer.base == -1 && #funAddr~dwmac1000_set_eee_timer.offset == 68;
axiom #funAddr~dwmac1000_set_eee_pls.base == -1 && #funAddr~dwmac1000_set_eee_pls.offset == 69;
axiom #funAddr~dwmac1000_ctrl_ane.base == -1 && #funAddr~dwmac1000_ctrl_ane.offset == 70;
axiom #funAddr~dwmac1000_get_adv.base == -1 && #funAddr~dwmac1000_get_adv.offset == 71;
axiom #funAddr~dwmac1000_dma_init.base == -1 && #funAddr~dwmac1000_dma_init.offset == 72;
axiom #funAddr~dwmac1000_dump_dma_regs.base == -1 && #funAddr~dwmac1000_dump_dma_regs.offset == 73;
axiom #funAddr~dwmac1000_dma_operation_mode.base == -1 && #funAddr~dwmac1000_dma_operation_mode.offset == 74;
axiom #funAddr~dwmac_enable_dma_transmission.base == -1 && #funAddr~dwmac_enable_dma_transmission.offset == 75;
axiom #funAddr~dwmac_enable_dma_irq.base == -1 && #funAddr~dwmac_enable_dma_irq.offset == 76;
axiom #funAddr~dwmac_disable_dma_irq.base == -1 && #funAddr~dwmac_disable_dma_irq.offset == 77;
axiom #funAddr~dwmac_dma_start_tx.base == -1 && #funAddr~dwmac_dma_start_tx.offset == 78;
axiom #funAddr~dwmac_dma_stop_tx.base == -1 && #funAddr~dwmac_dma_stop_tx.offset == 79;
axiom #funAddr~dwmac_dma_start_rx.base == -1 && #funAddr~dwmac_dma_start_rx.offset == 80;
axiom #funAddr~dwmac_dma_stop_rx.base == -1 && #funAddr~dwmac_dma_stop_rx.offset == 81;
axiom #funAddr~dwmac_dma_interrupt.base == -1 && #funAddr~dwmac_dma_interrupt.offset == 82;
axiom #funAddr~dwmac1000_get_hw_feature.base == -1 && #funAddr~dwmac1000_get_hw_feature.offset == 83;
axiom #funAddr~dwmac1000_rx_watchdog.base == -1 && #funAddr~dwmac1000_rx_watchdog.offset == 84;
axiom #funAddr~dwmac100_core_init.base == -1 && #funAddr~dwmac100_core_init.offset == 85;
axiom #funAddr~dwmac100_rx_ipc_enable.base == -1 && #funAddr~dwmac100_rx_ipc_enable.offset == 86;
axiom #funAddr~dwmac100_dump_mac_regs.base == -1 && #funAddr~dwmac100_dump_mac_regs.offset == 87;
axiom #funAddr~dwmac100_irq_status.base == -1 && #funAddr~dwmac100_irq_status.offset == 88;
axiom #funAddr~dwmac100_set_filter.base == -1 && #funAddr~dwmac100_set_filter.offset == 89;
axiom #funAddr~dwmac100_flow_ctrl.base == -1 && #funAddr~dwmac100_flow_ctrl.offset == 90;
axiom #funAddr~dwmac100_pmt.base == -1 && #funAddr~dwmac100_pmt.offset == 91;
axiom #funAddr~dwmac100_set_umac_addr.base == -1 && #funAddr~dwmac100_set_umac_addr.offset == 92;
axiom #funAddr~dwmac100_get_umac_addr.base == -1 && #funAddr~dwmac100_get_umac_addr.offset == 93;
axiom #funAddr~dwmac100_dma_init.base == -1 && #funAddr~dwmac100_dma_init.offset == 94;
axiom #funAddr~dwmac100_dump_dma_regs.base == -1 && #funAddr~dwmac100_dump_dma_regs.offset == 95;
axiom #funAddr~dwmac100_dma_operation_mode.base == -1 && #funAddr~dwmac100_dma_operation_mode.offset == 96;
axiom #funAddr~dwmac100_dma_diagnostic_fr.base == -1 && #funAddr~dwmac100_dma_diagnostic_fr.offset == 97;
axiom #funAddr~enh_desc_init_rx_desc.base == -1 && #funAddr~enh_desc_init_rx_desc.offset == 98;
axiom #funAddr~enh_desc_init_tx_desc.base == -1 && #funAddr~enh_desc_init_tx_desc.offset == 99;
axiom #funAddr~enh_desc_prepare_tx_desc.base == -1 && #funAddr~enh_desc_prepare_tx_desc.offset == 100;
axiom #funAddr~enh_desc_set_tx_owner.base == -1 && #funAddr~enh_desc_set_tx_owner.offset == 101;
axiom #funAddr~enh_desc_get_tx_owner.base == -1 && #funAddr~enh_desc_get_tx_owner.offset == 102;
axiom #funAddr~enh_desc_close_tx_desc.base == -1 && #funAddr~enh_desc_close_tx_desc.offset == 103;
axiom #funAddr~enh_desc_release_tx_desc.base == -1 && #funAddr~enh_desc_release_tx_desc.offset == 104;
axiom #funAddr~enh_desc_clear_tx_ic.base == -1 && #funAddr~enh_desc_clear_tx_ic.offset == 105;
axiom #funAddr~enh_desc_get_tx_ls.base == -1 && #funAddr~enh_desc_get_tx_ls.offset == 106;
axiom #funAddr~enh_desc_get_tx_status.base == -1 && #funAddr~enh_desc_get_tx_status.offset == 107;
axiom #funAddr~enh_desc_get_tx_len.base == -1 && #funAddr~enh_desc_get_tx_len.offset == 108;
axiom #funAddr~enh_desc_get_rx_owner.base == -1 && #funAddr~enh_desc_get_rx_owner.offset == 109;
axiom #funAddr~enh_desc_set_rx_owner.base == -1 && #funAddr~enh_desc_set_rx_owner.offset == 110;
axiom #funAddr~enh_desc_get_rx_frame_len.base == -1 && #funAddr~enh_desc_get_rx_frame_len.offset == 111;
axiom #funAddr~enh_desc_get_rx_status.base == -1 && #funAddr~enh_desc_get_rx_status.offset == 112;
axiom #funAddr~enh_desc_get_ext_status.base == -1 && #funAddr~enh_desc_get_ext_status.offset == 113;
axiom #funAddr~enh_desc_enable_tx_timestamp.base == -1 && #funAddr~enh_desc_enable_tx_timestamp.offset == 114;
axiom #funAddr~enh_desc_get_tx_timestamp_status.base == -1 && #funAddr~enh_desc_get_tx_timestamp_status.offset == 115;
axiom #funAddr~enh_desc_get_timestamp.base == -1 && #funAddr~enh_desc_get_timestamp.offset == 116;
axiom #funAddr~enh_desc_get_rx_timestamp_status.base == -1 && #funAddr~enh_desc_get_rx_timestamp_status.offset == 117;
axiom #funAddr~ndesc_init_rx_desc.base == -1 && #funAddr~ndesc_init_rx_desc.offset == 118;
axiom #funAddr~ndesc_init_tx_desc.base == -1 && #funAddr~ndesc_init_tx_desc.offset == 119;
axiom #funAddr~ndesc_prepare_tx_desc.base == -1 && #funAddr~ndesc_prepare_tx_desc.offset == 120;
axiom #funAddr~ndesc_set_tx_owner.base == -1 && #funAddr~ndesc_set_tx_owner.offset == 121;
axiom #funAddr~ndesc_get_tx_owner.base == -1 && #funAddr~ndesc_get_tx_owner.offset == 122;
axiom #funAddr~ndesc_close_tx_desc.base == -1 && #funAddr~ndesc_close_tx_desc.offset == 123;
axiom #funAddr~ndesc_release_tx_desc.base == -1 && #funAddr~ndesc_release_tx_desc.offset == 124;
axiom #funAddr~ndesc_clear_tx_ic.base == -1 && #funAddr~ndesc_clear_tx_ic.offset == 125;
axiom #funAddr~ndesc_get_tx_ls.base == -1 && #funAddr~ndesc_get_tx_ls.offset == 126;
axiom #funAddr~ndesc_get_tx_status.base == -1 && #funAddr~ndesc_get_tx_status.offset == 127;
axiom #funAddr~ndesc_get_tx_len.base == -1 && #funAddr~ndesc_get_tx_len.offset == 128;
axiom #funAddr~ndesc_get_rx_owner.base == -1 && #funAddr~ndesc_get_rx_owner.offset == 129;
axiom #funAddr~ndesc_set_rx_owner.base == -1 && #funAddr~ndesc_set_rx_owner.offset == 130;
axiom #funAddr~ndesc_get_rx_frame_len.base == -1 && #funAddr~ndesc_get_rx_frame_len.offset == 131;
axiom #funAddr~ndesc_get_rx_status.base == -1 && #funAddr~ndesc_get_rx_status.offset == 132;
axiom #funAddr~ndesc_enable_tx_timestamp.base == -1 && #funAddr~ndesc_enable_tx_timestamp.offset == 133;
axiom #funAddr~ndesc_get_tx_timestamp_status.base == -1 && #funAddr~ndesc_get_tx_timestamp_status.offset == 134;
axiom #funAddr~ndesc_get_timestamp.base == -1 && #funAddr~ndesc_get_timestamp.offset == 135;
axiom #funAddr~ndesc_get_rx_timestamp_status.base == -1 && #funAddr~ndesc_get_rx_timestamp_status.offset == 136;
axiom #funAddr~stmmac_config_hw_tstamping.base == -1 && #funAddr~stmmac_config_hw_tstamping.offset == 137;
axiom #funAddr~stmmac_config_sub_second_increment.base == -1 && #funAddr~stmmac_config_sub_second_increment.offset == 138;
axiom #funAddr~stmmac_init_systime.base == -1 && #funAddr~stmmac_init_systime.offset == 139;
axiom #funAddr~stmmac_config_addend.base == -1 && #funAddr~stmmac_config_addend.offset == 140;
axiom #funAddr~stmmac_adjust_systime.base == -1 && #funAddr~stmmac_adjust_systime.offset == 141;
axiom #funAddr~stmmac_get_systime.base == -1 && #funAddr~stmmac_get_systime.offset == 142;
axiom #funAddr~stmmac_adjust_freq.base == -1 && #funAddr~stmmac_adjust_freq.offset == 143;
axiom #funAddr~stmmac_adjust_time.base == -1 && #funAddr~stmmac_adjust_time.offset == 144;
axiom #funAddr~stmmac_get_time.base == -1 && #funAddr~stmmac_get_time.offset == 145;
axiom #funAddr~stmmac_set_time.base == -1 && #funAddr~stmmac_set_time.offset == 146;
axiom #funAddr~stmmac_enable.base == -1 && #funAddr~stmmac_enable.offset == 147;
axiom #funAddr~stmmac_pltfr_suspend.base == -1 && #funAddr~stmmac_pltfr_suspend.offset == 148;
axiom #funAddr~stmmac_pltfr_resume.base == -1 && #funAddr~stmmac_pltfr_resume.offset == 149;
axiom #funAddr~stmmac_pltfr_probe.base == -1 && #funAddr~stmmac_pltfr_probe.offset == 150;
axiom #funAddr~stmmac_pltfr_remove.base == -1 && #funAddr~stmmac_pltfr_remove.offset == 151;
axiom #funAddr~stmmac_pci_probe.base == -1 && #funAddr~stmmac_pci_probe.offset == 152;
axiom #funAddr~stmmac_pci_remove.base == -1 && #funAddr~stmmac_pci_remove.offset == 153;
axiom #funAddr~stmmac_pci_suspend.base == -1 && #funAddr~stmmac_pci_suspend.offset == 154;
axiom #funAddr~stmmac_pci_resume.base == -1 && #funAddr~stmmac_pci_resume.offset == 155;
axiom #funAddr~socfpga_dwmac_probe.base == -1 && #funAddr~socfpga_dwmac_probe.offset == 156;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~uprobe_task_state~UTASK_RUNNING == 0;
axiom ~uprobe_task_state~UTASK_SSTEP == 1;
axiom ~uprobe_task_state~UTASK_SSTEP_ACK == 2;
axiom ~uprobe_task_state~UTASK_SSTEP_TRAPPED == 3;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~module_state~MODULE_STATE_UNFORMED == 3;
axiom ~irqreturn~IRQ_NONE == 0;
axiom ~irqreturn~IRQ_HANDLED == 1;
axiom ~irqreturn~IRQ_WAKE_THREAD == 2;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~ldv_16907~SS_FREE == 0;
axiom ~ldv_16907~SS_UNCONNECTED == 1;
axiom ~ldv_16907~SS_CONNECTING == 2;
axiom ~ldv_16907~SS_CONNECTED == 3;
axiom ~ldv_16907~SS_DISCONNECTING == 4;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_RESUME_LATENCY == 1;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_LATENCY_TOLERANCE == 2;
axiom ~dev_pm_qos_req_type~DEV_PM_QOS_FLAGS == 3;
axiom ~pm_qos_type~PM_QOS_UNITIALIZED == 0;
axiom ~pm_qos_type~PM_QOS_MAX == 1;
axiom ~pm_qos_type~PM_QOS_MIN == 2;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~quota_type~USRQUOTA == 0;
axiom ~quota_type~GRPQUOTA == 1;
axiom ~quota_type~PRJQUOTA == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE == 0;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE == 1;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ON == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_OFF == 3;
axiom ~netdev_tx~__NETDEV_TX_MIN == -2147483648;
axiom ~netdev_tx~NETDEV_TX_OK == 0;
axiom ~netdev_tx~NETDEV_TX_BUSY == 16;
axiom ~netdev_tx~NETDEV_TX_LOCKED == 32;
axiom ~gro_result~GRO_MERGED == 0;
axiom ~gro_result~GRO_MERGED_FREE == 1;
axiom ~gro_result~GRO_HELD == 2;
axiom ~gro_result~GRO_NORMAL == 3;
axiom ~gro_result~GRO_DROP == 4;
axiom ~rx_handler_result~RX_HANDLER_CONSUMED == 0;
axiom ~rx_handler_result~RX_HANDLER_ANOTHER == 1;
axiom ~rx_handler_result~RX_HANDLER_EXACT == 2;
axiom ~rx_handler_result~RX_HANDLER_PASS == 3;
axiom ~skb_free_reason~SKB_REASON_CONSUMED == 0;
axiom ~skb_free_reason~SKB_REASON_DROPPED == 1;
axiom ~ldv_33083~PHY_INTERFACE_MODE_NA == 0;
axiom ~ldv_33083~PHY_INTERFACE_MODE_MII == 1;
axiom ~ldv_33083~PHY_INTERFACE_MODE_GMII == 2;
axiom ~ldv_33083~PHY_INTERFACE_MODE_SGMII == 3;
axiom ~ldv_33083~PHY_INTERFACE_MODE_TBI == 4;
axiom ~ldv_33083~PHY_INTERFACE_MODE_REVMII == 5;
axiom ~ldv_33083~PHY_INTERFACE_MODE_RMII == 6;
axiom ~ldv_33083~PHY_INTERFACE_MODE_RGMII == 7;
axiom ~ldv_33083~PHY_INTERFACE_MODE_RGMII_ID == 8;
axiom ~ldv_33083~PHY_INTERFACE_MODE_RGMII_RXID == 9;
axiom ~ldv_33083~PHY_INTERFACE_MODE_RGMII_TXID == 10;
axiom ~ldv_33083~PHY_INTERFACE_MODE_RTBI == 11;
axiom ~ldv_33083~PHY_INTERFACE_MODE_SMII == 12;
axiom ~ldv_33083~PHY_INTERFACE_MODE_XGMII == 13;
axiom ~ldv_33083~PHY_INTERFACE_MODE_MOCA == 14;
axiom ~ldv_33083~PHY_INTERFACE_MODE_QSGMII == 15;
axiom ~ldv_33083~PHY_INTERFACE_MODE_MAX == 16;
axiom ~ldv_33133~MDIOBUS_ALLOCATED == 1;
axiom ~ldv_33133~MDIOBUS_REGISTERED == 2;
axiom ~ldv_33133~MDIOBUS_UNREGISTERED == 3;
axiom ~ldv_33133~MDIOBUS_RELEASED == 4;
axiom ~phy_state~PHY_DOWN == 0;
axiom ~phy_state~PHY_STARTING == 1;
axiom ~phy_state~PHY_READY == 2;
axiom ~phy_state~PHY_PENDING == 3;
axiom ~phy_state~PHY_UP == 4;
axiom ~phy_state~PHY_AN == 5;
axiom ~phy_state~PHY_RUNNING == 6;
axiom ~phy_state~PHY_NOLINK == 7;
axiom ~phy_state~PHY_FORCING == 8;
axiom ~phy_state~PHY_CHANGELINK == 9;
axiom ~phy_state~PHY_HALTED == 10;
axiom ~phy_state~PHY_RESUMING == 11;
axiom ~pci_channel_state~pci_channel_io_normal == 1;
axiom ~pci_channel_state~pci_channel_io_frozen == 2;
axiom ~pci_channel_state~pci_channel_io_perm_failure == 3;
axiom ~ptp_pin_function~PTP_PF_NONE == 0;
axiom ~ptp_pin_function~PTP_PF_EXTTS == 1;
axiom ~ptp_pin_function~PTP_PF_PEROUT == 2;
axiom ~ptp_pin_function~PTP_PF_PHYSYNC == 3;
axiom ~ldv_34202~PTP_CLK_REQ_EXTTS == 0;
axiom ~ldv_34202~PTP_CLK_REQ_PEROUT == 1;
axiom ~ldv_34202~PTP_CLK_REQ_PPS == 2;
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseComplement" } ~bitwiseComplement(in0 : int) returns (out : int);
var ~jiffies : int;

var ~ldv_timer_state_5 : int;

var ~ldv_state_variable_8 : int;

var ~ldv_state_variable_15 : int;

var ~ldv_state_variable_20 : int;

var ~ldv_state_variable_0 : int;

var ~ldv_state_variable_21 : int;

var ~ldv_state_variable_5 : int;

var ~ldv_state_variable_13 : int;

var ~ldv_irq_3_1 : int;

var ~ldv_irq_2_0 : int;

var ~ldv_state_variable_12 : int;

var ~ldv_irq_3_2 : int;

var ~ldv_state_variable_22 : int;

var ~ldv_state_variable_14 : int;

var ~ldv_state_variable_17 : int;

var ~ldv_irq_data_2_3.base : int, ~ldv_irq_data_2_3.offset : int;

var ~ldv_state_variable_19 : int;

var ~ldv_irq_2_2 : int;

var ~ldv_state_variable_9 : int;

var ~ldv_irq_line_2_0 : int;

var ~ldv_timer_state_4 : int;

var ~ref_cnt : int;

var ~ldv_irq_line_1_1 : int;

var ~ldv_irq_data_2_2.base : int, ~ldv_irq_data_2_2.offset : int;

var ~ldv_irq_line_3_0 : int;

var ~ldv_state_variable_1 : int;

var ~ldv_state_variable_7 : int;

var ~ldv_irq_line_1_2 : int;

var ~ldv_state_variable_23 : int;

var ~ldv_irq_line_2_3 : int;

var ~ldv_irq_3_0 : int;

var ~ldv_irq_2_1 : int;

var ~ldv_irq_data_2_1.base : int, ~ldv_irq_data_2_1.offset : int;

var ~ldv_irq_1_3 : int;

var ~ldv_irq_data_3_3.base : int, ~ldv_irq_data_3_3.offset : int;

var ~ldv_irq_data_1_1.base : int, ~ldv_irq_data_1_1.offset : int;

var ~ldv_irq_line_2_2 : int;

var ~ldv_irq_line_3_2 : int;

var ~ldv_state_variable_10 : int;

var ~ldv_irq_1_0 : int;

var ~ldv_irq_data_3_1.base : int, ~ldv_irq_data_3_1.offset : int;

var ~ldv_state_variable_6 : int;

var ~ldv_irq_data_1_0.base : int, ~ldv_irq_data_1_0.offset : int;

var ~ldv_state_variable_16 : int;

var ~ldv_irq_data_3_0.base : int, ~ldv_irq_data_3_0.offset : int;

var ~ldv_irq_line_2_1 : int;

var ~ldv_irq_data_1_3.base : int, ~ldv_irq_data_1_3.offset : int;

var ~ldv_state_variable_2 : int;

var ~ldv_irq_data_1_2.base : int, ~ldv_irq_data_1_2.offset : int;

var ~ldv_irq_data_2_0.base : int, ~ldv_irq_data_2_0.offset : int;

var ~ldv_state_variable_11 : int;

var ~ldv_irq_1_2 : int;

var ~LDV_IN_INTERRUPT : int;

var ~ldv_irq_1_1 : int;

var ~ldv_state_variable_18 : int;

var ~ldv_irq_2_3 : int;

var ~ldv_irq_line_3_1 : int;

var ~ldv_irq_line_1_3 : int;

var ~ldv_state_variable_3 : int;

var ~ldv_irq_line_1_0 : int;

var ~ldv_irq_data_3_2.base : int, ~ldv_irq_data_3_2.offset : int;

var ~ldv_irq_3_3 : int;

var ~ldv_state_variable_4 : int;

var ~ldv_irq_line_3_3 : int;

var ~watchdog : int;

var ~debug : int;

var ~phyaddr : int;

var ~dma_txsize : int;

var ~dma_rxsize : int;

var ~flow_ctrl : int;

var ~pause : int;

var ~tc : int;

var ~buf_sz : int;

var ~default_msg_level : int;

var ~eee_timer : int;

var ~chain_mode : int;

var ~ldv_retval_0 : int;

var ~ldv_retval_5 : int;

var ~ldv_retval_1 : int;

var ~ldv_retval_6 : int;

var ~ldv_retval_7 : int;

var ~ldv_retval_8 : int;

var ~ldv_retval_28 : int;

var ~ldv_retval_20 : int;

var ~ldv_retval_18 : int;

var ~ldv_retval_26 : int;

var ~ldv_retval_23 : int;

var ~ldv_retval_11 : int;

var ~ldv_retval_25 : int;

var ~ldv_retval_22 : int;

var ~ldv_retval_27 : int;

var ~ldv_retval_15 : int;

var ~ldv_retval_16 : int;

var ~ldv_retval_29 : int;

var ~ldv_retval_24 : int;

var ~ldv_retval_19 : int;

var ~ldv_retval_14 : int;

var ~ldv_retval_17 : int;

var ~ldv_retval_12 : int;

var ~ldv_retval_21 : int;

var ~ldv_retval_13 : int;

var ~ldv_retval_10 : int;

var ~ldv_retval_9 : int;

var ~ldv_retval_4 : int;

var ~ldv_retval_3 : int;

var ~ldv_retval_2 : int;

var ~ldv_spin : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~pv_irq_ops.save_fl.func.base : int, ~pv_irq_ops.save_fl.func.offset : int, ~pv_irq_ops.restore_fl.func.base : int, ~pv_irq_ops.restore_fl.func.offset : int, ~pv_irq_ops.irq_disable.func.base : int, ~pv_irq_ops.irq_disable.func.offset : int, ~pv_irq_ops.irq_enable.func.base : int, ~pv_irq_ops.irq_enable.func.offset : int, ~pv_irq_ops.safe_halt.base : int, ~pv_irq_ops.safe_halt.offset : int, ~pv_irq_ops.halt.base : int, ~pv_irq_ops.halt.offset : int, ~pv_irq_ops.adjust_exception_frame.base : int, ~pv_irq_ops.adjust_exception_frame.offset : int;

var ~ldv_timer_list_5.base : int, ~ldv_timer_list_5.offset : int;

var ~ldv_timer_list_4.base : int, ~ldv_timer_list_4.offset : int;

var ~chain_mode_ops_group0.base : int, ~chain_mode_ops_group0.offset : int;

var ~stmmac_ptp_clock_ops_group0.base : int, ~stmmac_ptp_clock_ops_group0.offset : int;

var ~stmmac_ethtool_ops_group3.base : int, ~stmmac_ethtool_ops_group3.offset : int;

var ~dwmac100_dma_ops_group0.base : int, ~dwmac100_dma_ops_group0.offset : int;

var ~stmmac_rings_status_fops_group2.base : int, ~stmmac_rings_status_fops_group2.offset : int;

var ~stmmac_pltfr_driver_group0.base : int, ~stmmac_pltfr_driver_group0.offset : int;

var ~stmmac_netdev_ops_group1.base : int, ~stmmac_netdev_ops_group1.offset : int;

var ~stmmac_ethtool_ops_group1.base : int, ~stmmac_ethtool_ops_group1.offset : int;

var ~ndesc_ops_group1.base : int, ~ndesc_ops_group1.offset : int;

var ~stmmac_pltfr_pm_ops_group1.base : int, ~stmmac_pltfr_pm_ops_group1.offset : int;

var ~stmmac_ethtool_ops_group0.base : int, ~stmmac_ethtool_ops_group0.offset : int;

var ~stmmac_rings_status_fops_group1.base : int, ~stmmac_rings_status_fops_group1.offset : int;

var ~stmmac_ethtool_ops_group2.base : int, ~stmmac_ethtool_ops_group2.offset : int;

var ~stmmac_dma_cap_fops_group2.base : int, ~stmmac_dma_cap_fops_group2.offset : int;

var ~enh_desc_ops_group0.base : int, ~enh_desc_ops_group0.offset : int;

var ~enh_desc_ops_group1.base : int, ~enh_desc_ops_group1.offset : int;

var ~stmmac_dma_cap_fops_group1.base : int, ~stmmac_dma_cap_fops_group1.offset : int;

var ~ring_mode_ops_group0.base : int, ~ring_mode_ops_group0.offset : int;

var ~stmmac_ethtool_ops_group5.base : int, ~stmmac_ethtool_ops_group5.offset : int;

var ~ndesc_ops_group0.base : int, ~ndesc_ops_group0.offset : int;

var ~stmmac_ethtool_ops_group4.base : int, ~stmmac_ethtool_ops_group4.offset : int;

var ~stmmac_pci_driver_group0.base : int, ~stmmac_pci_driver_group0.offset : int;

var ~#x86_dma_fallback_dev.base : int, ~#x86_dma_fallback_dev.offset : int;

var ~dma_ops.base : int, ~dma_ops.offset : int;

var ~#ring_mode_ops.base : int, ~#ring_mode_ops.offset : int;

var ~#chain_mode_ops.base : int, ~#chain_mode_ops.offset : int;

var ~#enh_desc_ops.base : int, ~#enh_desc_ops.offset : int;

var ~#ndesc_ops.base : int, ~#ndesc_ops.offset : int;

var ~#stmmac_ptp.base : int, ~#stmmac_ptp.offset : int;

var ~#stmmac_pltfr_driver.base : int, ~#stmmac_pltfr_driver.offset : int;

var ~#stmmac_pci_driver.base : int, ~#stmmac_pci_driver.offset : int;

var ~stmmac_fs_dir.base : int, ~stmmac_fs_dir.offset : int;

var ~stmmac_rings_status.base : int, ~stmmac_rings_status.offset : int;

var ~stmmac_dma_cap.base : int, ~stmmac_dma_cap.offset : int;

var ~#stmmac_rings_status_fops.base : int, ~#stmmac_rings_status_fops.offset : int;

var ~#stmmac_dma_cap_fops.base : int, ~#stmmac_dma_cap_fops.offset : int;

var ~#stmmac_netdev_ops.base : int, ~#stmmac_netdev_ops.offset : int;

var ~#stmmac_gstrings_stats.base : int, ~#stmmac_gstrings_stats.offset : int;

var ~#stmmac_mmc.base : int, ~#stmmac_mmc.offset : int;

var ~#stmmac_ethtool_ops.base : int, ~#stmmac_ethtool_ops.offset : int;

var ~#dwmac1000_dma_ops.base : int, ~#dwmac1000_dma_ops.offset : int;

var ~#dwmac1000_ops.base : int, ~#dwmac1000_ops.offset : int;

var ~#dwmac100_dma_ops.base : int, ~#dwmac100_dma_ops.offset : int;

var ~#dwmac100_ops.base : int, ~#dwmac100_ops.offset : int;

var ~stmmac_ptp_clock_ops.owner.base : int, ~stmmac_ptp_clock_ops.owner.offset : int, ~stmmac_ptp_clock_ops.name : [int]int, ~stmmac_ptp_clock_ops.max_adj : int, ~stmmac_ptp_clock_ops.n_alarm : int, ~stmmac_ptp_clock_ops.n_ext_ts : int, ~stmmac_ptp_clock_ops.n_per_out : int, ~stmmac_ptp_clock_ops.n_pins : int, ~stmmac_ptp_clock_ops.pps : int, ~stmmac_ptp_clock_ops.pin_config.base : int, ~stmmac_ptp_clock_ops.pin_config.offset : int, ~stmmac_ptp_clock_ops.adjfreq.base : int, ~stmmac_ptp_clock_ops.adjfreq.offset : int, ~stmmac_ptp_clock_ops.adjtime.base : int, ~stmmac_ptp_clock_ops.adjtime.offset : int, ~stmmac_ptp_clock_ops.gettime.base : int, ~stmmac_ptp_clock_ops.gettime.offset : int, ~stmmac_ptp_clock_ops.settime.base : int, ~stmmac_ptp_clock_ops.settime.offset : int, ~stmmac_ptp_clock_ops.enable.base : int, ~stmmac_ptp_clock_ops.enable.offset : int, ~stmmac_ptp_clock_ops.verify.base : int, ~stmmac_ptp_clock_ops.verify.offset : int;

var ~#plat_dat.base : int, ~#plat_dat.offset : int;

var ~#mdio_data.base : int, ~#mdio_data.offset : int;

var ~#dma_cfg.base : int, ~#dma_cfg.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

var #memory_int : [int,int]int;

implementation ldv_spin_lock_1(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc0:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    call _raw_spin_lock(~lock.base, ~lock.offset + 0 + 0);
    assume true;
    return;
}

procedure ldv_spin_lock_1(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ;

implementation dev_get_drvdata(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~mem4915.base : int, #t~mem4915.offset : int;
    var ~dev.base : int, ~dev.offset : int;

  loc1:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    call #t~mem4915.base, #t~mem4915.offset := read~$Pointer$(~dev.base, ~dev.offset + 489, 8);
    #res.base, #res.offset := #t~mem4915.base, #t~mem4915.offset;
    havoc #t~mem4915.base, #t~mem4915.offset;
    assume true;
    return;
}

procedure dev_get_drvdata(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation stmmac_resume(#in~ndev.base : int, #in~ndev.offset : int) returns (#res : int){
    var #t~ret2603.base : int, #t~ret2603.offset : int;
    var #t~ret2604 : ~bool;
    var #t~mem2605.base : int, #t~mem2605.offset : int;
    var #t~ret2606 : ~bool;
    var #t~mem2610.base : int, #t~mem2610.offset : int;
    var #t~mem2611.base : int, #t~mem2611.offset : int;
    var #t~mem2612.base : int, #t~mem2612.offset : int;
    var #t~mem2613.base : int, #t~mem2613.offset : int;
    var #t~mem2615.base : int, #t~mem2615.offset : int;
    var #t~ret2616 : int;
    var #t~mem2617.base : int, #t~mem2617.offset : int;
    var #t~ret2618 : int;
    var #t~mem2619.base : int, #t~mem2619.offset : int;
    var #t~mem2620.base : int, #t~mem2620.offset : int;
    var #t~ret2621 : int;
    var #t~ret2622 : int;
    var #t~mem2623.base : int, #t~mem2623.offset : int;
    var #t~mem2624.base : int, #t~mem2624.offset : int;
    var ~ndev.base : int, ~ndev.offset : int;
    var ~priv~1198.base : int, ~priv~1198.offset : int;
    var ~tmp~1198.base : int, ~tmp~1198.offset : int;
    var ~flags~1198 : int;
    var ~tmp___0~1198 : ~bool;
    var ~tmp___1~1198 : int;
    var ~tmp___2~1198 : ~bool;

  loc2:
    ~ndev.base, ~ndev.offset := #in~ndev.base, #in~ndev.offset;
    havoc ~priv~1198.base, ~priv~1198.offset;
    havoc ~tmp~1198.base, ~tmp~1198.offset;
    havoc ~flags~1198;
    havoc ~tmp___0~1198;
    havoc ~tmp___1~1198;
    havoc ~tmp___2~1198;
    call #t~ret2603.base, #t~ret2603.offset := netdev_priv(~ndev.base, ~ndev.offset);
    ~tmp~1198.base, ~tmp~1198.offset := #t~ret2603.base, #t~ret2603.offset;
    havoc #t~ret2603.base, #t~ret2603.offset;
    ~priv~1198.base, ~priv~1198.offset := ~tmp~1198.base, ~tmp~1198.offset;
    call #t~ret2604 := netif_running(~ndev.base, ~ndev.offset);
    ~tmp___0~1198 := #t~ret2604;
    havoc #t~ret2604;
    assume ~tmp___0~1198 % 256 != 0;
    ~tmp___1~1198 := 0;
    assume !(~tmp___1~1198 != 0);
    call ldv_spin_lock();
    call #t~mem2605.base, #t~mem2605.offset := read~$Pointer$(~priv~1198.base, ~priv~1198.offset + 517, 8);
    call #t~ret2606 := device_may_wakeup(#t~mem2605.base, #t~mem2605.offset);
    ~tmp___2~1198 := #t~ret2606;
    havoc #t~mem2605.base, #t~mem2605.offset;
    havoc #t~ret2606;
    assume ~tmp___2~1198 % 256 != 0;
    call #t~mem2610.base, #t~mem2610.offset := read~$Pointer$(~priv~1198.base, ~priv~1198.offset + 501, 8);
    call #t~mem2611.base, #t~mem2611.offset := read~$Pointer$(~priv~1198.base, ~priv~1198.offset + 525, 8);
    call #t~mem2612.base, #t~mem2612.offset := read~$Pointer$(#t~mem2611.base, #t~mem2611.offset + 0, 8);
    call #t~mem2613.base, #t~mem2613.offset := read~$Pointer$(#t~mem2612.base, #t~mem2612.offset + 48, 8);
    call ##fun~$Pointer$~X~int~TO~VOID(#t~mem2610.base, #t~mem2610.offset, 0, #t~mem2613.base, #t~mem2613.offset);
    havoc #t~mem2610.base, #t~mem2610.offset;
    havoc #t~mem2611.base, #t~mem2611.offset;
    havoc #t~mem2612.base, #t~mem2612.offset;
    havoc #t~mem2613.base, #t~mem2613.offset;
    call write~int(0, ~priv~1198.base, ~priv~1198.offset + 2153, 4);
    call netif_device_attach(~ndev.base, ~ndev.offset);
    call #t~ret2622 := stmmac_hw_setup(~ndev.base, ~ndev.offset);
    return;
}

procedure stmmac_resume(#in~ndev.base : int, #in~ndev.offset : int) returns (#res : int);
modifies #memory_int, ~ldv_spin, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~watchdog, ~dma_rxsize, ~dma_txsize, ~buf_sz, ~flow_ctrl, ~pause, ~eee_timer, ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, ~ldv_timer_state_4, ~ldv_state_variable_21, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~tc;

implementation main() returns (#res : int){
    var #t~ret2671.base : int, #t~ret2671.offset : int;
    var #t~nondet2672 : int;
    var #t~ret2673.base : int, #t~ret2673.offset : int;
    var #t~nondet2674 : int;
    var #t~ret2675.base : int, #t~ret2675.offset : int;
    var #t~ret2676.base : int, #t~ret2676.offset : int;
    var #t~nondet2677 : int;
    var #t~nondet2678 : int;
    var #t~ret2679.base : int, #t~ret2679.offset : int;
    var #t~nondet2680 : int;
    var #t~ret2681.base : int, #t~ret2681.offset : int;
    var #t~nondet2682 : int;
    var #t~nondet2683 : int;
    var #t~ret2684.base : int, #t~ret2684.offset : int;
    var #t~nondet2685 : int;
    var #t~memset2686.base : int, #t~memset2686.offset : int;
    var #t~nondet2687 : int;
    var #t~switch2688 : bool;
    var #t~nondet2689 : int;
    var #t~switch2690 : bool;
    var #t~ret2691 : int;
    var #t~ret2692 : int;
    var #t~ret2693 : int;
    var #t~ret2694 : int;
    var #t~ret2695 : int;
    var #t~ret2696 : int;
    var #t~ret2697 : int;
    var #t~ret2698 : ~netdev_tx_t;
    var #t~mem2699 : int;
    var #t~ret2700 : ~netdev_features_t;
    var #t~mem2701 : int;
    var #t~ret2702 : ~netdev_features_t;
    var #t~mem2703 : int;
    var #t~ret2704 : ~netdev_features_t;
    var #t~ret2705 : int;
    var #t~ret2706 : int;
    var #t~ret2707 : int;
    var #t~ret2708 : int;
    var #t~ret2709 : int;
    var #t~nondet2710 : int;
    var #t~switch2711 : bool;
    var #t~ret2712 : int;
    var #t~ret2713 : int;
    var #t~ret2714 : ~loff_t;
    var #t~ret2715 : int;
    var #t~nondet2716 : int;
    var #t~switch2717 : bool;
    var #t~ret2718 : int;
    var #t~nondet2719 : int;
    var #t~switch2720 : bool;
    var #t~ret2721 : int;
    var #t~ret2722 : int;
    var #t~ret2723 : ~loff_t;
    var #t~ret2724 : int;
    var ~ldvarg18~1314.base : int, ~ldvarg18~1314.offset : int;
    var ~tmp~1314.base : int, ~tmp~1314.offset : int;
    var ~ldvarg17~1314 : int;
    var ~tmp___0~1314 : int;
    var ~#ldvarg14~1314.base : int, ~#ldvarg14~1314.offset : int;
    var ~ldvarg13~1314.base : int, ~ldvarg13~1314.offset : int;
    var ~tmp___1~1314.base : int, ~tmp___1~1314.offset : int;
    var ~ldvarg16~1314 : int;
    var ~tmp___2~1314 : int;
    var ~ldvarg15~1314.base : int, ~ldvarg15~1314.offset : int;
    var ~tmp___3~1314.base : int, ~tmp___3~1314.offset : int;
    var ~ldvarg54~1314.base : int, ~ldvarg54~1314.offset : int;
    var ~tmp___4~1314.base : int, ~tmp___4~1314.offset : int;
    var ~ldvarg53~1314 : ~loff_t;
    var ~tmp___5~1314 : ~loff_t;
    var ~ldvarg55~1314 : int;
    var ~tmp___6~1314 : int;
    var ~ldvarg56~1314.base : int, ~ldvarg56~1314.offset : int;
    var ~tmp___7~1314.base : int, ~tmp___7~1314.offset : int;
    var ~ldvarg52~1314 : int;
    var ~tmp___8~1314 : int;
    var ~ldvarg70~1314.base : int, ~ldvarg70~1314.offset : int;
    var ~tmp___9~1314.base : int, ~tmp___9~1314.offset : int;
    var ~ldvarg71~1314 : int;
    var ~tmp___10~1314 : int;
    var ~ldvarg68~1314 : int;
    var ~tmp___11~1314 : int;
    var ~ldvarg72~1314.base : int, ~ldvarg72~1314.offset : int;
    var ~tmp___12~1314.base : int, ~tmp___12~1314.offset : int;
    var ~ldvarg69~1314 : ~loff_t;
    var ~tmp___13~1314 : ~loff_t;
    var ~tmp___14~1314 : int;
    var ~tmp___15~1314 : int;
    var ~tmp___16~1314 : int;
    var ~tmp___17~1314 : int;
    var ~tmp___18~1314 : int;

  loc3:
    havoc ~ldvarg18~1314.base, ~ldvarg18~1314.offset;
    havoc ~tmp~1314.base, ~tmp~1314.offset;
    havoc ~ldvarg17~1314;
    havoc ~tmp___0~1314;
    call ~#ldvarg14~1314.base, ~#ldvarg14~1314.offset := #Ultimate.alloc(8);
    havoc ~ldvarg13~1314.base, ~ldvarg13~1314.offset;
    havoc ~tmp___1~1314.base, ~tmp___1~1314.offset;
    havoc ~ldvarg16~1314;
    havoc ~tmp___2~1314;
    havoc ~ldvarg15~1314.base, ~ldvarg15~1314.offset;
    havoc ~tmp___3~1314.base, ~tmp___3~1314.offset;
    havoc ~ldvarg54~1314.base, ~ldvarg54~1314.offset;
    havoc ~tmp___4~1314.base, ~tmp___4~1314.offset;
    havoc ~ldvarg53~1314;
    havoc ~tmp___5~1314;
    havoc ~ldvarg55~1314;
    havoc ~tmp___6~1314;
    havoc ~ldvarg56~1314.base, ~ldvarg56~1314.offset;
    havoc ~tmp___7~1314.base, ~tmp___7~1314.offset;
    havoc ~ldvarg52~1314;
    havoc ~tmp___8~1314;
    havoc ~ldvarg70~1314.base, ~ldvarg70~1314.offset;
    havoc ~tmp___9~1314.base, ~tmp___9~1314.offset;
    havoc ~ldvarg71~1314;
    havoc ~tmp___10~1314;
    havoc ~ldvarg68~1314;
    havoc ~tmp___11~1314;
    havoc ~ldvarg72~1314.base, ~ldvarg72~1314.offset;
    havoc ~tmp___12~1314.base, ~tmp___12~1314.offset;
    havoc ~ldvarg69~1314;
    havoc ~tmp___13~1314;
    havoc ~tmp___14~1314;
    havoc ~tmp___15~1314;
    havoc ~tmp___16~1314;
    havoc ~tmp___17~1314;
    havoc ~tmp___18~1314;
    call #t~ret2671.base, #t~ret2671.offset := ldv_zalloc(40);
    ~tmp~1314.base, ~tmp~1314.offset := #t~ret2671.base, #t~ret2671.offset;
    havoc #t~ret2671.base, #t~ret2671.offset;
    ~ldvarg18~1314.base, ~ldvarg18~1314.offset := ~tmp~1314.base, ~tmp~1314.offset;
    assume -2147483648 <= #t~nondet2672 && #t~nondet2672 <= 2147483647;
    ~tmp___0~1314 := #t~nondet2672;
    havoc #t~nondet2672;
    ~ldvarg17~1314 := ~tmp___0~1314;
    call #t~ret2673.base, #t~ret2673.offset := ldv_zalloc(1);
    ~tmp___1~1314.base, ~tmp___1~1314.offset := #t~ret2673.base, #t~ret2673.offset;
    havoc #t~ret2673.base, #t~ret2673.offset;
    ~ldvarg13~1314.base, ~ldvarg13~1314.offset := ~tmp___1~1314.base, ~tmp___1~1314.offset;
    assume -2147483648 <= #t~nondet2674 && #t~nondet2674 <= 2147483647;
    ~tmp___2~1314 := #t~nondet2674;
    havoc #t~nondet2674;
    ~ldvarg16~1314 := ~tmp___2~1314;
    call #t~ret2675.base, #t~ret2675.offset := ldv_zalloc(232);
    ~tmp___3~1314.base, ~tmp___3~1314.offset := #t~ret2675.base, #t~ret2675.offset;
    havoc #t~ret2675.base, #t~ret2675.offset;
    ~ldvarg15~1314.base, ~ldvarg15~1314.offset := ~tmp___3~1314.base, ~tmp___3~1314.offset;
    call #t~ret2676.base, #t~ret2676.offset := ldv_zalloc(8);
    ~tmp___4~1314.base, ~tmp___4~1314.offset := #t~ret2676.base, #t~ret2676.offset;
    havoc #t~ret2676.base, #t~ret2676.offset;
    ~ldvarg54~1314.base, ~ldvarg54~1314.offset := ~tmp___4~1314.base, ~tmp___4~1314.offset;
    assume -9223372036854775808 <= #t~nondet2677 && #t~nondet2677 <= 9223372036854775807;
    ~tmp___5~1314 := #t~nondet2677;
    havoc #t~nondet2677;
    ~ldvarg53~1314 := ~tmp___5~1314;
    assume -2147483648 <= #t~nondet2678 && #t~nondet2678 <= 2147483647;
    ~tmp___6~1314 := #t~nondet2678;
    havoc #t~nondet2678;
    ~ldvarg55~1314 := ~tmp___6~1314;
    call #t~ret2679.base, #t~ret2679.offset := ldv_zalloc(1);
    ~tmp___7~1314.base, ~tmp___7~1314.offset := #t~ret2679.base, #t~ret2679.offset;
    havoc #t~ret2679.base, #t~ret2679.offset;
    ~ldvarg56~1314.base, ~ldvarg56~1314.offset := ~tmp___7~1314.base, ~tmp___7~1314.offset;
    assume -2147483648 <= #t~nondet2680 && #t~nondet2680 <= 2147483647;
    ~tmp___8~1314 := #t~nondet2680;
    havoc #t~nondet2680;
    ~ldvarg52~1314 := ~tmp___8~1314;
    call #t~ret2681.base, #t~ret2681.offset := ldv_zalloc(8);
    ~tmp___9~1314.base, ~tmp___9~1314.offset := #t~ret2681.base, #t~ret2681.offset;
    havoc #t~ret2681.base, #t~ret2681.offset;
    ~ldvarg70~1314.base, ~ldvarg70~1314.offset := ~tmp___9~1314.base, ~tmp___9~1314.offset;
    assume -2147483648 <= #t~nondet2682 && #t~nondet2682 <= 2147483647;
    ~tmp___10~1314 := #t~nondet2682;
    havoc #t~nondet2682;
    ~ldvarg71~1314 := ~tmp___10~1314;
    assume -2147483648 <= #t~nondet2683 && #t~nondet2683 <= 2147483647;
    ~tmp___11~1314 := #t~nondet2683;
    havoc #t~nondet2683;
    ~ldvarg68~1314 := ~tmp___11~1314;
    call #t~ret2684.base, #t~ret2684.offset := ldv_zalloc(1);
    ~tmp___12~1314.base, ~tmp___12~1314.offset := #t~ret2684.base, #t~ret2684.offset;
    havoc #t~ret2684.base, #t~ret2684.offset;
    ~ldvarg72~1314.base, ~ldvarg72~1314.offset := ~tmp___12~1314.base, ~tmp___12~1314.offset;
    assume -9223372036854775808 <= #t~nondet2685 && #t~nondet2685 <= 9223372036854775807;
    ~tmp___13~1314 := #t~nondet2685;
    havoc #t~nondet2685;
    ~ldvarg69~1314 := ~tmp___13~1314;
    call ldv_initialize();
    call #t~memset2686.base, #t~memset2686.offset := #Ultimate.C_memset(~#ldvarg14~1314.base, ~#ldvarg14~1314.offset, 0, 8);
    havoc #t~memset2686.base, #t~memset2686.offset;
    ~ldv_state_variable_11 := 0;
    ~ldv_state_variable_21 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_state_variable_17 := 0;
    ~ldv_state_variable_2 := 1;
    ~ldv_state_variable_22 := 0;
    ~ldv_state_variable_1 := 1;
    ~ldv_state_variable_18 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_23 := 0;
    ~ldv_state_variable_16 := 0;
    ~ldv_state_variable_13 := 0;
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_3 := 1;
    ~ldv_state_variable_9 := 0;
    ~ldv_state_variable_12 := 0;
    ~ldv_state_variable_20 := 0;
    ~ldv_state_variable_14 := 0;
    ~ldv_state_variable_15 := 0;
    ~ldv_state_variable_8 := 0;
    ~ldv_state_variable_4 := 1;
    ~ldv_state_variable_19 := 0;
    ~ldv_state_variable_10 := 0;
    ~ldv_state_variable_5 := 1;
    assume -2147483648 <= #t~nondet2687 && #t~nondet2687 <= 2147483647;
    ~tmp___14~1314 := #t~nondet2687;
    havoc #t~nondet2687;
    #t~switch2688 := ~tmp___14~1314 == 0;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 1;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 2;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 3;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 4;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 5;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 6;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 7;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 8;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 9;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 10;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 11;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 12;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 13;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 14;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 15;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 16;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 17;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 18;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 19;
    assume !#t~switch2688;
    #t~switch2688 := #t~switch2688 || ~tmp___14~1314 == 20;
    assume #t~switch2688;
    assume ~ldv_state_variable_4 != 0;
    call choose_timer_4(~ldv_timer_list_4.base, ~ldv_timer_list_4.offset);
    return;
}

procedure main() returns (#res : int);
modifies ~ldv_state_variable_11, ~ldv_state_variable_21, ~ldv_state_variable_7, ~ldv_state_variable_17, ~ldv_state_variable_2, ~ldv_state_variable_22, ~ldv_state_variable_1, ~ldv_state_variable_18, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_23, ~ldv_state_variable_16, ~ldv_state_variable_13, ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_9, ~ldv_state_variable_12, ~ldv_state_variable_20, ~ldv_state_variable_14, ~ldv_state_variable_15, ~ldv_state_variable_8, ~ldv_state_variable_4, ~ldv_state_variable_19, ~ldv_state_variable_10, ~ldv_state_variable_5, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_5, ~ldv_retval_6, ~ldv_retval_7, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~dwmac100_dma_ops_group0.base, ~dwmac100_dma_ops_group0.offset, ~stmmac_ethtool_ops_group0.base, ~stmmac_ethtool_ops_group0.offset, ~stmmac_ethtool_ops_group2.base, ~stmmac_ethtool_ops_group2.offset, ~stmmac_ethtool_ops_group1.base, ~stmmac_ethtool_ops_group1.offset, ~stmmac_ethtool_ops_group3.base, ~stmmac_ethtool_ops_group3.offset, ~stmmac_ethtool_ops_group4.base, ~stmmac_ethtool_ops_group4.offset, ~stmmac_ethtool_ops_group5.base, ~stmmac_ethtool_ops_group5.offset, ~stmmac_ptp_clock_ops_group0.base, ~stmmac_ptp_clock_ops_group0.offset, ~stmmac_pci_driver_group0.base, ~stmmac_pci_driver_group0.offset, ~stmmac_dma_cap_fops_group1.base, ~stmmac_dma_cap_fops_group1.offset, ~stmmac_dma_cap_fops_group2.base, ~stmmac_dma_cap_fops_group2.offset, ~ndesc_ops_group0.base, ~ndesc_ops_group0.offset, ~ndesc_ops_group1.base, ~ndesc_ops_group1.offset, ~stmmac_pltfr_pm_ops_group1.base, ~stmmac_pltfr_pm_ops_group1.offset, ~enh_desc_ops_group0.base, ~enh_desc_ops_group0.offset, ~enh_desc_ops_group1.base, ~enh_desc_ops_group1.offset, ~chain_mode_ops_group0.base, ~chain_mode_ops_group0.offset, ~stmmac_rings_status_fops_group1.base, ~stmmac_rings_status_fops_group1.offset, ~stmmac_rings_status_fops_group2.base, ~stmmac_rings_status_fops_group2.offset, ~ring_mode_ops_group0.base, ~ring_mode_ops_group0.offset, ~ldv_retval_8, ~ldv_retval_28, ~ldv_spin, ~stmmac_pltfr_driver_group0.base, ~stmmac_pltfr_driver_group0.offset, ~watchdog, ~dma_rxsize, ~dma_txsize, ~buf_sz, ~flow_ctrl, ~pause, ~eee_timer, ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, ~ldv_timer_state_4, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~tc, ~ldv_retval_29, ~ldv_retval_27, ~ldv_retval_26, ~ldv_retval_25, ~ldv_retval_24, ~ldv_retval_23, ~ldv_retval_22, ~ldv_retval_21, ~ldv_retval_20, ~ldv_retval_19, ~ldv_retval_18, ~ldv_retval_17, ~ldv_retval_16, ~ldv_retval_15, ~ldv_retval_14, ~ldv_retval_13, ~ldv_retval_12, ~ldv_retval_11, ~ldv_retval_10, ~ldv_retval_9, ~LDV_IN_INTERRUPT, ~ldv_irq_3_0, ~ldv_irq_1_0, ~ldv_retval_4, ~ldv_retval_3, ~ldv_retval_2, ~ldv_timer_state_5;

implementation stmmac_tx_clean(#in~priv.base : int, #in~priv.offset : int) returns (){
    var #t~mem1264 : int;
    var #t~mem1265 : int;
    var #t~mem1267 : int;
    var #t~mem1268.base : int, #t~mem1268.offset : int;
    var #t~mem1269.base : int, #t~mem1269.offset : int;
    var #t~mem1270 : int;
    var #t~mem1271.base : int, #t~mem1271.offset : int;
    var #t~mem1272.base : int, #t~mem1272.offset : int;
    var #t~mem1276.base : int, #t~mem1276.offset : int;
    var #t~mem1277.base : int, #t~mem1277.offset : int;
    var #t~mem1278.base : int, #t~mem1278.offset : int;
    var #t~ret1279 : int;
    var #t~mem1283.base : int, #t~mem1283.offset : int;
    var #t~mem1284.base : int, #t~mem1284.offset : int;
    var #t~mem1285.base : int, #t~mem1285.offset : int;
    var #t~ret1286 : int;
    var #t~ret1287 : int;
    var #t~mem1295.base : int, #t~mem1295.offset : int;
    var #t~mem1296.base : int, #t~mem1296.offset : int;
    var #t~mem1297.base : int, #t~mem1297.offset : int;
    var #t~mem1298.base : int, #t~mem1298.offset : int;
    var #t~mem1299.base : int, #t~mem1299.offset : int;
    var #t~ret1300 : int;
    var #t~ret1301 : int;
    var #t~mem1302.base : int, #t~mem1302.offset : int;
    var #t~mem1303.base : int, #t~mem1303.offset : int;
    var #t~mem1304 : int;
    var #t~mem1306 : int;
    var #t~mem1308.base : int, #t~mem1308.offset : int;
    var #t~mem1309.base : int, #t~mem1309.offset : int;
    var #t~mem1310 : int;
    var #t~mem1312 : int;
    var #t~nondet1313.base : int, #t~nondet1313.offset : int;
    var #t~nondet1315.base : int, #t~nondet1315.offset : int;
    var #t~nondet1317.base : int, #t~nondet1317.offset : int;
    var #t~nondet1319.base : int, #t~nondet1319.offset : int;
    var #t~mem1323 : int;
    var #t~ret1324 : int;
    var #t~nondet1325.base : int, #t~nondet1325.offset : int;
    var #t~ret1326 : int;
    var #t~mem1327.base : int, #t~mem1327.offset : int;
    var #t~mem1328 : int;
    var #t~ret1329 : int;
    var #t~mem1333.base : int, #t~mem1333.offset : int;
    var #t~mem1334.base : int, #t~mem1334.offset : int;
    var #t~mem1335.base : int, #t~mem1335.offset : int;
    var #t~ret1336 : int;
    var #t~mem1337.base : int, #t~mem1337.offset : int;
    var #t~mem1338.base : int, #t~mem1338.offset : int;
    var #t~mem1339 : int;
    var #t~mem1340.base : int, #t~mem1340.offset : int;
    var #t~mem1347.base : int, #t~mem1347.offset : int;
    var #t~mem1348.base : int, #t~mem1348.offset : int;
    var #t~mem1349.base : int, #t~mem1349.offset : int;
    var #t~ret1350 : int;
    var #t~mem1351.base : int, #t~mem1351.offset : int;
    var #t~mem1356 : int;
    var #t~mem1357.base : int, #t~mem1357.offset : int;
    var #t~mem1358.base : int, #t~mem1358.offset : int;
    var #t~mem1359.base : int, #t~mem1359.offset : int;
    var #t~mem1360 : int;
    var #t~mem1362 : int;
    var #t~mem1363 : int;
    var #t~mem1364.base : int, #t~mem1364.offset : int;
    var #t~ret1365 : ~bool;
    var #t~ret1366 : int;
    var #t~ret1367 : ~u32;
    var #t~mem1368 : int;
    var #t~ret1369 : int;
    var #t~mem1370.base : int, #t~mem1370.offset : int;
    var #t~mem1371.base : int, #t~mem1371.offset : int;
    var #t~ret1372 : ~bool;
    var #t~ret1373 : ~u32;
    var #t~mem1374 : int;
    var #t~mem1375 : int;
    var #t~nondet1376.base : int, #t~nondet1376.offset : int;
    var #t~nondet1378.base : int, #t~nondet1378.offset : int;
    var #t~nondet1380.base : int, #t~nondet1380.offset : int;
    var #t~nondet1382.base : int, #t~nondet1382.offset : int;
    var #t~mem1386 : int;
    var #t~ret1387 : int;
    var #t~nondet1388.base : int, #t~nondet1388.offset : int;
    var #t~ret1389 : int;
    var #t~mem1390.base : int, #t~mem1390.offset : int;
    var #t~mem1391.base : int, #t~mem1391.offset : int;
    var #t~mem1392 : int;
    var #t~mem1393 : int;
    var #t~short1394 : bool;
    var #t~ret1395 : int;
    var #t~ret1396 : int;
    var ~priv.base : int, ~priv.offset : int;
    var ~txsize~779 : int;
    var ~last~779 : int;
    var ~entry~779 : int;
    var ~skb~779.base : int, ~skb~779.offset : int;
    var ~p~779.base : int, ~p~779.offset : int;
    var ~tmp~779 : int;
    var ~tx_error~779 : int;
    var ~tmp___0~779 : int;
    var ~tmp___1~779 : int;
    var ~tmp___2~779 : int;
    var ~#descriptor~779.base : int, ~#descriptor~779.offset : int;
    var ~tmp___3~779 : int;
    var ~tmp___4~779 : int;
    var ~tmp___5~779 : int;
    var ~tmp___6~779 : int;
    var ~#descriptor___0~779.base : int, ~#descriptor___0~779.offset : int;
    var ~tmp___7~779 : int;
    var ~tmp___8~779 : ~bool;
    var ~tmp___9~779 : ~u32;
    var ~tmp___10~779 : ~bool;
    var ~tmp___11~779 : int;
    var ~tmp___12~779 : ~u32;
    var ~tmp___13~779 : int;
    var ~tmp___14~779 : int;

  loc4:
    ~priv.base, ~priv.offset := #in~priv.base, #in~priv.offset;
    havoc ~txsize~779;
    havoc ~last~779;
    havoc ~entry~779;
    havoc ~skb~779.base, ~skb~779.offset;
    havoc ~p~779.base, ~p~779.offset;
    havoc ~tmp~779;
    havoc ~tx_error~779;
    havoc ~tmp___0~779;
    havoc ~tmp___1~779;
    havoc ~tmp___2~779;
    call ~#descriptor~779.base, ~#descriptor~779.offset := #Ultimate.alloc(37);
    havoc ~tmp___3~779;
    havoc ~tmp___4~779;
    havoc ~tmp___5~779;
    havoc ~tmp___6~779;
    call ~#descriptor___0~779.base, ~#descriptor___0~779.offset := #Ultimate.alloc(37);
    havoc ~tmp___7~779;
    havoc ~tmp___8~779;
    havoc ~tmp___9~779;
    havoc ~tmp___10~779;
    havoc ~tmp___11~779;
    havoc ~tmp___12~779;
    havoc ~tmp___13~779;
    havoc ~tmp___14~779;
    call #t~mem1264 := read~int(~priv.base, ~priv.offset + 32, 4);
    ~txsize~779 := #t~mem1264;
    havoc #t~mem1264;
    call spin_lock(~priv.base, ~priv.offset + 72);
    call #t~mem1265 := read~int(~priv.base, ~priv.offset + 765 + 352, 8);
    call write~int(#t~mem1265 + 1, ~priv.base, ~priv.offset + 765 + 352, 8);
    havoc #t~mem1265;
    call #t~mem1362 := read~int(~priv.base, ~priv.offset + 28, 4);
    call #t~mem1363 := read~int(~priv.base, ~priv.offset + 24, 4);
    assume #t~mem1362 % 4294967296 != #t~mem1363 % 4294967296;
    havoc #t~mem1362;
    havoc #t~mem1363;
    call #t~mem1267 := read~int(~priv.base, ~priv.offset + 28, 4);
    ~entry~779 := (if #t~mem1267 % 4294967296 < 0 && #t~mem1267 % 4294967296 % (~txsize~779 % 4294967296) != 0 then (if ~txsize~779 % 4294967296 < 0 then #t~mem1267 % 4294967296 % (~txsize~779 % 4294967296) + ~txsize~779 % 4294967296 else #t~mem1267 % 4294967296 % (~txsize~779 % 4294967296) - ~txsize~779 % 4294967296) else #t~mem1267 % 4294967296 % (~txsize~779 % 4294967296));
    havoc #t~mem1267;
    call #t~mem1268.base, #t~mem1268.offset := read~$Pointer$(~priv.base, ~priv.offset + 16, 8);
    call #t~mem1269.base, #t~mem1269.offset := read~$Pointer$(#t~mem1268.base, #t~mem1268.offset + (if ~entry~779 % 4294967296 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~entry~779 % 4294967296 % 18446744073709551616 % 18446744073709551616 else ~entry~779 % 4294967296 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616) * 8, 8);
    ~skb~779.base, ~skb~779.offset := #t~mem1269.base, #t~mem1269.offset;
    havoc #t~mem1268.base, #t~mem1268.offset;
    havoc #t~mem1269.base, #t~mem1269.offset;
    call #t~mem1270 := read~int(~priv.base, ~priv.offset + 2025, 4);
    assume #t~mem1270 != 0;
    havoc #t~mem1270;
    call #t~mem1271.base, #t~mem1271.offset := read~$Pointer$(~priv.base, ~priv.offset + 0, 8);
    ~p~779.base, ~p~779.offset := #t~mem1271.base, #t~mem1271.offset + (if ~entry~779 % 4294967296 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~entry~779 % 4294967296 % 18446744073709551616 % 18446744073709551616 else ~entry~779 % 4294967296 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616) * 41;
    havoc #t~mem1271.base, #t~mem1271.offset;
    call #t~mem1276.base, #t~mem1276.offset := read~$Pointer$(~priv.base, ~priv.offset + 525, 8);
    call #t~mem1277.base, #t~mem1277.offset := read~$Pointer$(#t~mem1276.base, #t~mem1276.offset + 8, 8);
    call #t~mem1278.base, #t~mem1278.offset := read~$Pointer$(#t~mem1277.base, #t~mem1277.offset + 32, 8);
    call #t~ret1279 := ##fun~$Pointer$~TO~int(~p~779.base, ~p~779.offset, #t~mem1278.base, #t~mem1278.offset);
    return;
}

procedure stmmac_tx_clean(#in~priv.base : int, #in~priv.offset : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length, ~ldv_spin, ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, ~ldv_timer_state_4, ~watchdog, ~dma_rxsize, ~dma_txsize, ~buf_sz, ~flow_ctrl, ~pause, ~eee_timer, ~ldv_state_variable_21, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~tc;

implementation ldv_error() returns (){
  loc5:
    assume !false;
    goto loc6;
  loc6:
    assert false;
}

procedure ldv_error() returns ();
modifies ;

implementation ldv___netdev_alloc_skb_39(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2 : int, #in~flags : int) returns (#res.base : int, #res.offset : int){
    var #t~ret2730.base : int, #t~ret2730.offset : int;
    var ~ldv_func_arg1.base : int, ~ldv_func_arg1.offset : int;
    var ~ldv_func_arg2 : int;
    var ~flags : int;
    var ~tmp~1469.base : int, ~tmp~1469.offset : int;

  loc7:
    ~ldv_func_arg1.base, ~ldv_func_arg1.offset := #in~ldv_func_arg1.base, #in~ldv_func_arg1.offset;
    ~ldv_func_arg2 := #in~ldv_func_arg2;
    ~flags := #in~flags;
    havoc ~tmp~1469.base, ~tmp~1469.offset;
    call ldv_check_alloc_flags(~flags);
    return;
}

procedure ldv___netdev_alloc_skb_39(#in~ldv_func_arg1.base : int, #in~ldv_func_arg1.offset : int, #in~ldv_func_arg2 : int, #in~flags : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation init_dma_desc_rings(#in~dev.base : int, #in~dev.offset : int) returns (#res : int){
    var #t~ret1014.base : int, #t~ret1014.offset : int;
    var #t~mem1015 : int;
    var #t~mem1016 : int;
    var #t~mem1017.base : int, #t~mem1017.offset : int;
    var #t~mem1018.base : int, #t~mem1018.offset : int;
    var #t~mem1019.base : int, #t~mem1019.offset : int;
    var #t~mem1024 : int;
    var #t~mem1025.base : int, #t~mem1025.offset : int;
    var #t~mem1026.base : int, #t~mem1026.offset : int;
    var #t~mem1027.base : int, #t~mem1027.offset : int;
    var #t~ret1028 : int;
    var #t~mem1029 : int;
    var #t~mem1030 : int;
    var #t~ret1031 : int;
    var #t~mem1033 : int;
    var #t~nondet1034.base : int, #t~nondet1034.offset : int;
    var #t~nondet1036.base : int, #t~nondet1036.offset : int;
    var #t~nondet1038.base : int, #t~nondet1038.offset : int;
    var #t~nondet1040.base : int, #t~nondet1040.offset : int;
    var #t~mem1044 : int;
    var #t~ret1045 : int;
    var #t~nondet1046.base : int, #t~nondet1046.offset : int;
    var #t~ret1047 : int;
    var #t~mem1048 : int;
    var #t~nondet1049.base : int, #t~nondet1049.offset : int;
    var #t~nondet1051.base : int, #t~nondet1051.offset : int;
    var #t~nondet1053.base : int, #t~nondet1053.offset : int;
    var #t~nondet1055.base : int, #t~nondet1055.offset : int;
    var #t~mem1059 : int;
    var #t~ret1060 : int;
    var #t~nondet1061.base : int, #t~nondet1061.offset : int;
    var #t~ret1062 : int;
    var #t~nondet1063.base : int, #t~nondet1063.offset : int;
    var #t~nondet1065.base : int, #t~nondet1065.offset : int;
    var #t~nondet1067.base : int, #t~nondet1067.offset : int;
    var #t~nondet1069.base : int, #t~nondet1069.offset : int;
    var #t~mem1073 : int;
    var #t~ret1074 : int;
    var #t~nondet1075.base : int, #t~nondet1075.offset : int;
    var #t~ret1076 : int;
    var #t~mem1077 : int;
    var #t~mem1078.base : int, #t~mem1078.offset : int;
    var #t~mem1079.base : int, #t~mem1079.offset : int;
    var #t~ret1080 : int;
    var #t~mem1081 : int;
    var #t~nondet1082.base : int, #t~nondet1082.offset : int;
    var #t~nondet1084.base : int, #t~nondet1084.offset : int;
    var #t~nondet1086.base : int, #t~nondet1086.offset : int;
    var #t~nondet1088.base : int, #t~nondet1088.offset : int;
    var #t~mem1092 : int;
    var #t~ret1093 : int;
    var #t~nondet1094.base : int, #t~nondet1094.offset : int;
    var #t~ret1095 : int;
    var #t~mem1098 : int;
    var #t~mem1099 : int;
    var #t~mem1107.base : int, #t~mem1107.offset : int;
    var #t~mem1108 : int;
    var #t~mem1109.base : int, #t~mem1109.offset : int;
    var #t~mem1110.base : int, #t~mem1110.offset : int;
    var #t~mem1111.base : int, #t~mem1111.offset : int;
    var #t~mem1115.base : int, #t~mem1115.offset : int;
    var #t~mem1116 : int;
    var #t~mem1117.base : int, #t~mem1117.offset : int;
    var #t~mem1118.base : int, #t~mem1118.offset : int;
    var #t~mem1119.base : int, #t~mem1119.offset : int;
    var #t~mem1123.base : int, #t~mem1123.offset : int;
    var #t~mem1124 : int;
    var #t~mem1125.base : int, #t~mem1125.offset : int;
    var #t~mem1126.base : int, #t~mem1126.offset : int;
    var #t~mem1127.base : int, #t~mem1127.offset : int;
    var #t~mem1131.base : int, #t~mem1131.offset : int;
    var #t~mem1132 : int;
    var #t~mem1133.base : int, #t~mem1133.offset : int;
    var #t~mem1134.base : int, #t~mem1134.offset : int;
    var #t~mem1135.base : int, #t~mem1135.offset : int;
    var #t~mem1136 : int;
    var #t~mem1137.base : int, #t~mem1137.offset : int;
    var #t~mem1138.base : int, #t~mem1138.offset : int;
    var #t~mem1140.base : int, #t~mem1140.offset : int;
    var #t~mem1142.base : int, #t~mem1142.offset : int;
    var #t~mem1146 : int;
    var ~dev.base : int, ~dev.offset : int;
    var ~i~696 : int;
    var ~priv~696.base : int, ~priv~696.offset : int;
    var ~tmp~696.base : int, ~tmp~696.offset : int;
    var ~txsize~696 : int;
    var ~rxsize~696 : int;
    var ~bfsize~696 : int;
    var ~ret~696 : int;
    var ~tmp___0~696 : int;
    var ~tmp___1~696 : int;
    var ~#descriptor~696.base : int, ~#descriptor~696.offset : int;
    var ~tmp___2~696 : int;
    var ~#descriptor___0~696.base : int, ~#descriptor___0~696.offset : int;
    var ~tmp___3~696 : int;
    var ~#descriptor___1~696.base : int, ~#descriptor___1~696.offset : int;
    var ~tmp___4~696 : int;
    var ~p~696.base : int, ~p~696.offset : int;
    var ~#descriptor___2~696.base : int, ~#descriptor___2~696.offset : int;
    var ~tmp___5~696 : int;
    var ~p___0~696.base : int, ~p___0~696.offset : int;

  loc8:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    havoc ~i~696;
    havoc ~priv~696.base, ~priv~696.offset;
    havoc ~tmp~696.base, ~tmp~696.offset;
    havoc ~txsize~696;
    havoc ~rxsize~696;
    havoc ~bfsize~696;
    havoc ~ret~696;
    havoc ~tmp___0~696;
    havoc ~tmp___1~696;
    call ~#descriptor~696.base, ~#descriptor~696.offset := #Ultimate.alloc(37);
    havoc ~tmp___2~696;
    call ~#descriptor___0~696.base, ~#descriptor___0~696.offset := #Ultimate.alloc(37);
    havoc ~tmp___3~696;
    call ~#descriptor___1~696.base, ~#descriptor___1~696.offset := #Ultimate.alloc(37);
    havoc ~tmp___4~696;
    havoc ~p~696.base, ~p~696.offset;
    call ~#descriptor___2~696.base, ~#descriptor___2~696.offset := #Ultimate.alloc(37);
    havoc ~tmp___5~696;
    havoc ~p___0~696.base, ~p___0~696.offset;
    call #t~ret1014.base, #t~ret1014.offset := netdev_priv(~dev.base, ~dev.offset);
    ~tmp~696.base, ~tmp~696.offset := #t~ret1014.base, #t~ret1014.offset;
    havoc #t~ret1014.base, #t~ret1014.offset;
    ~priv~696.base, ~priv~696.offset := ~tmp~696.base, ~tmp~696.offset;
    call #t~mem1015 := read~int(~priv~696.base, ~priv~696.offset + 32, 4);
    ~txsize~696 := #t~mem1015;
    havoc #t~mem1015;
    call #t~mem1016 := read~int(~priv~696.base, ~priv~696.offset + 297, 4);
    ~rxsize~696 := #t~mem1016;
    havoc #t~mem1016;
    ~bfsize~696 := 0;
    ~ret~696 := -12;
    call #t~mem1017.base, #t~mem1017.offset := read~$Pointer$(~priv~696.base, ~priv~696.offset + 525, 8);
    call #t~mem1018.base, #t~mem1018.offset := read~$Pointer$(#t~mem1017.base, #t~mem1017.offset + 24, 8);
    call #t~mem1019.base, #t~mem1019.offset := read~$Pointer$(#t~mem1018.base, #t~mem1018.offset + 24, 8);
    assume !((#t~mem1019.base + #t~mem1019.offset) % 18446744073709551616 != 0);
    havoc #t~mem1017.base, #t~mem1017.offset;
    havoc #t~mem1018.base, #t~mem1018.offset;
    havoc #t~mem1019.base, #t~mem1019.offset;
    assume !(~bfsize~696 % 4294967296 <= 16383);
    call write~int(~bfsize~696, ~priv~696.base, ~priv~696.offset + 301, 4);
    call #t~mem1033 := read~int(~priv~696.base, ~priv~696.offset + 1845, 4);
    assume !(~bitwiseAnd(#t~mem1033, 2) % 4294967296 != 0);
    havoc #t~mem1033;
    call #t~mem1048 := read~int(~priv~696.base, ~priv~696.offset + 1845, 4);
    assume !(~bitwiseAnd(#t~mem1048, 2) % 4294967296 != 0);
    havoc #t~mem1048;
    ~i~696 := 0;
    assume ~i~696 % 4294967296 < ~rxsize~696 % 4294967296;
    call #t~mem1077 := read~int(~priv~696.base, ~priv~696.offset + 2025, 4);
    assume #t~mem1077 != 0;
    havoc #t~mem1077;
    call #t~mem1078.base, #t~mem1078.offset := read~$Pointer$(~priv~696.base, ~priv~696.offset + 273, 8);
    ~p~696.base, ~p~696.offset := #t~mem1078.base, #t~mem1078.offset + (if ~i~696 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~i~696 % 18446744073709551616 % 18446744073709551616 else ~i~696 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616) * 72 + 0;
    havoc #t~mem1078.base, #t~mem1078.offset;
    call #t~ret1080 := stmmac_init_rx_buffers(~priv~696.base, ~priv~696.offset, ~p~696.base, ~p~696.offset, ~i~696);
    return;
}

procedure init_dma_desc_rings(#in~dev.base : int, #in~dev.offset : int) returns (#res : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~buf_sz, ~ldv_spin, #valid, #length, ~watchdog, ~dma_rxsize, ~dma_txsize, ~flow_ctrl, ~pause, ~eee_timer, ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, ~ldv_timer_state_4, ~ldv_state_variable_21, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~tc;

implementation spin_lock(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc9:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    call ldv_spin_lock();
    call ldv_spin_lock_1(~lock.base, ~lock.offset);
    assume true;
    return;
}

procedure spin_lock(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ~ldv_spin;

implementation netif_running(#in~dev.base : int, #in~dev.offset : int) returns (#res : ~bool){
    var #t~ret274 : int;
    var ~dev.base : int, ~dev.offset : int;
    var ~tmp~345 : int;

  loc10:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    havoc ~tmp~345;
    call #t~ret274 := constant_test_bit(0, ~dev.base, ~dev.offset + 68);
    assume -2147483648 <= #t~ret274 && #t~ret274 <= 2147483647;
    ~tmp~345 := #t~ret274;
    havoc #t~ret274;
    #res := (if (if ~tmp~345 != 0 then 1 else 0) == 0 then 0 else 1);
    assume true;
    return;
}

procedure netif_running(#in~dev.base : int, #in~dev.offset : int) returns (#res : ~bool);
modifies ;

implementation ##fun~$Pointer$~TO~int(#in~562.base : int, #in~562.offset : int, #in~#fp.base : int, #in~#fp.offset : int) returns (#res : int){
    var #~562.base : int, #~562.offset : int;
    var #t~funptrres5245 : int;
    var #t~ret5246 : int;
    var #t~ret5247 : int;
    var #t~ret5248 : int;
    var #t~ret5249 : int;
    var #t~ret5250 : int;
    var #t~ret5251 : int;
    var #t~ret5252 : int;
    var #t~ret5253 : int;
    var #t~ret5254 : int;
    var #t~ret5255 : int;
    var #t~ret5256 : int;
    var #t~ret5257 : int;
    var #t~ret5258 : int;
    var #t~ret5259 : int;
    var #t~ret5260 : int;
    var #t~ret5261 : int;
    var #t~ret5262 : int;
    var #t~ret5263 : int;
    var #t~ret5264 : int;
    var #t~ret5265 : int;
    var #t~ret5266 : int;
    var #t~ret5267 : int;
    var #t~ret5268 : int;

  loc11:
    #~562.base, #~562.offset := #in~562.base, #in~562.offset;
    assume #in~#fp.base == #funAddr~stmmac_pci_resume.base && #in~#fp.offset == #funAddr~stmmac_pci_resume.offset;
    call #t~ret5268 := stmmac_pci_resume(#~562.base, #~562.offset);
    return;
}

procedure ##fun~$Pointer$~TO~int(#in~562.base : int, #in~562.offset : int, #in~#fp.base : int, #in~#fp.offset : int) returns (#res : int);
modifies ~ldv_spin, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~watchdog, ~dma_rxsize, ~dma_txsize, ~buf_sz, ~flow_ctrl, ~pause, ~eee_timer, ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, ~ldv_timer_state_4, ~ldv_state_variable_21, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~tc;

implementation ##fun~int~TO~VOID(#in~2639 : int, #in~#fp.base : int, #in~#fp.offset : int) returns (){
    var #~2639 : int;

  loc12:
    #~2639 := #in~2639;
    assume #in~#fp.base == #funAddr~stmmac_tx_timer.base && #in~#fp.offset == #funAddr~stmmac_tx_timer.offset;
    call stmmac_tx_timer(#~2639);
    return;
}

procedure ##fun~int~TO~VOID(#in~2639 : int, #in~#fp.base : int, #in~#fp.offset : int) returns ();
modifies ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, ~ldv_timer_state_4, #memory_int, ~ldv_spin, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~watchdog, ~dma_rxsize, ~dma_txsize, ~buf_sz, ~flow_ctrl, ~pause, ~eee_timer, ~ldv_state_variable_21, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~tc;

implementation netdev_priv(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int){
    var ~dev.base : int, ~dev.offset : int;

  loc13:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    #res.base, #res.offset := ~dev.base, ~dev.offset + 3264;
    assume true;
    return;
}

procedure netdev_priv(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation pci_get_drvdata(#in~pdev.base : int, #in~pdev.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~ret5097.base : int, #t~ret5097.offset : int;
    var ~pdev.base : int, ~pdev.offset : int;
    var ~tmp~3175.base : int, ~tmp~3175.offset : int;

  loc14:
    ~pdev.base, ~pdev.offset := #in~pdev.base, #in~pdev.offset;
    havoc ~tmp~3175.base, ~tmp~3175.offset;
    call #t~ret5097.base, #t~ret5097.offset := dev_get_drvdata(~pdev.base, ~pdev.offset + 147);
    ~tmp~3175.base, ~tmp~3175.offset := #t~ret5097.base, #t~ret5097.offset;
    havoc #t~ret5097.base, #t~ret5097.offset;
    #res.base, #res.offset := ~tmp~3175.base, ~tmp~3175.offset;
    assume true;
    return;
}

procedure pci_get_drvdata(#in~pdev.base : int, #in~pdev.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr5326 : int;

  loc15:
    #t~loopctr5326 := 0;
    goto loc16;
  loc16:
    goto loc16_0, loc16_1;
  loc16_0:
    assume #t~loopctr5326 < #amount;
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset + #t~loopctr5326 * 1 := 0], #memory_$Pointer$.offset[#ptr.base,#ptr.offset + #t~loopctr5326 * 1 := #value % 256];
    #memory_int := #memory_int[#ptr.base,#ptr.offset + #t~loopctr5326 * 1 := #value];
    #t~loopctr5326 := #t~loopctr5326 + 1;
    goto loc16;
  loc16_1:
    assume !(#t~loopctr5326 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation stmmac_init_rx_buffers(#in~priv.base : int, #in~priv.offset : int, #in~p.base : int, #in~p.offset : int, #in~i : int) returns (#res : int){
    var #t~mem971.base : int, #t~mem971.offset : int;
    var #t~mem972 : int;
    var #t~ret973.base : int, #t~ret973.offset : int;
    var #t~nondet974.base : int, #t~nondet974.offset : int;
    var #t~ret975 : int;
    var #t~mem976.base : int, #t~mem976.offset : int;
    var #t~mem978.base : int, #t~mem978.offset : int;
    var #t~mem979.base : int, #t~mem979.offset : int;
    var #t~mem980.base : int, #t~mem980.offset : int;
    var #t~mem981 : int;
    var #t~ret982 : ~dma_addr_t;
    var #t~mem984.base : int, #t~mem984.offset : int;
    var #t~mem985.base : int, #t~mem985.offset : int;
    var #t~mem986 : int;
    var #t~ret987 : int;
    var #t~nondet988.base : int, #t~nondet988.offset : int;
    var #t~ret989 : int;
    var #t~mem990.base : int, #t~mem990.offset : int;
    var #t~mem991 : int;
    var #t~mem993.base : int, #t~mem993.offset : int;
    var #t~mem994.base : int, #t~mem994.offset : int;
    var #t~mem995.base : int, #t~mem995.offset : int;
    var #t~mem996 : int;
    var #t~short997 : bool;
    var #t~mem1001.base : int, #t~mem1001.offset : int;
    var #t~mem1002.base : int, #t~mem1002.offset : int;
    var #t~mem1003.base : int, #t~mem1003.offset : int;
    var ~priv.base : int, ~priv.offset : int;
    var ~p.base : int, ~p.offset : int;
    var ~i : int;
    var ~skb~684.base : int, ~skb~684.offset : int;
    var ~tmp~684 : int;

  loc17:
    ~priv.base, ~priv.offset := #in~priv.base, #in~priv.offset;
    ~p.base, ~p.offset := #in~p.base, #in~p.offset;
    ~i := #in~i;
    havoc ~skb~684.base, ~skb~684.offset;
    havoc ~tmp~684;
    call #t~mem971.base, #t~mem971.offset := read~$Pointer$(~priv.base, ~priv.offset + 509, 8);
    call #t~mem972 := read~int(~priv.base, ~priv.offset + 301, 4);
    call #t~ret973.base, #t~ret973.offset := ldv___netdev_alloc_skb_39(#t~mem971.base, #t~mem971.offset, #t~mem972, 208);
    return;
}

procedure stmmac_init_rx_buffers(#in~priv.base : int, #in~priv.offset : int, #in~p.base : int, #in~p.offset : int, #in~i : int) returns (#res : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~ldv_spin, #valid, #length, ~watchdog, ~dma_rxsize, ~dma_txsize, ~buf_sz, ~flow_ctrl, ~pause, ~eee_timer, ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, ~ldv_timer_state_4, ~ldv_state_variable_21, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~tc;

implementation ldv_spin_lock() returns (){
  loc18:
    ~ldv_spin := 1;
    assume true;
    return;
}

procedure ldv_spin_lock() returns ();
modifies ~ldv_spin;

implementation device_may_wakeup(#in~dev.base : int, #in~dev.offset : int) returns (#res : ~bool){
    var #t~mem101 : int;
    var #t~mem102.base : int, #t~mem102.offset : int;
    var #t~short103 : bool;
    var ~dev.base : int, ~dev.offset : int;

  loc19:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    call #t~mem101 := read~int(~dev.base, ~dev.offset + 532, 1);
    #t~short103 := #t~mem101 % 256 % 4294967296 != 0;
    assume !#t~short103;
    #res := (if (if #t~short103 then 1 else 0) == 0 then 0 else 1);
    havoc #t~mem101;
    havoc #t~mem102.base, #t~mem102.offset;
    havoc #t~short103;
    assume true;
    return;
}

procedure device_may_wakeup(#in~dev.base : int, #in~dev.offset : int) returns (#res : ~bool);
modifies ;

implementation ULTIMATE.init() returns (){
    var #t~union5241.raw_lock.ldv_1458.head_tail : int, #t~union5241.raw_lock.ldv_1458.tickets.head : int, #t~union5241.raw_lock.ldv_1458.tickets.tail : int, #t~union5241.magic : int, #t~union5241.owner_cpu : int, #t~union5241.owner.base : int, #t~union5241.owner.offset : int, #t~union5241.dep_map.key.base : int, #t~union5241.dep_map.key.offset : int, #t~union5241.dep_map.class_cache.base : [int]int, #t~union5241.dep_map.class_cache.offset : [int]int, #t~union5241.dep_map.name.base : int, #t~union5241.dep_map.name.offset : int, #t~union5241.dep_map.cpu : int, #t~union5241.dep_map.ip : int;
    var #t~union5242.__padding : [int]int, #t~union5242.dep_map.key.base : int, #t~union5242.dep_map.key.offset : int, #t~union5242.dep_map.class_cache.base : [int]int, #t~union5242.dep_map.class_cache.offset : [int]int, #t~union5242.dep_map.name.base : int, #t~union5242.dep_map.name.offset : int, #t~union5242.dep_map.cpu : int, #t~union5242.dep_map.ip : int;
    var #t~init5243 : [int]int;

  loc20:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_timer_state_5 := 0;
    ~ldv_state_variable_8 := 0;
    ~ldv_state_variable_15 := 0;
    ~ldv_state_variable_20 := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_state_variable_21 := 0;
    ~ldv_state_variable_5 := 0;
    ~ldv_state_variable_13 := 0;
    ~ldv_irq_3_1 := 0;
    ~ldv_irq_2_0 := 0;
    ~ldv_state_variable_12 := 0;
    ~ldv_irq_3_2 := 0;
    ~ldv_state_variable_22 := 0;
    ~ldv_state_variable_14 := 0;
    ~ldv_state_variable_17 := 0;
    ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset := 0, 0;
    ~ldv_state_variable_19 := 0;
    ~ldv_irq_2_2 := 0;
    ~ldv_state_variable_9 := 0;
    ~ldv_irq_line_2_0 := 0;
    ~ldv_timer_state_4 := 0;
    ~ref_cnt := 0;
    ~ldv_irq_line_1_1 := 0;
    ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset := 0, 0;
    ~ldv_irq_line_3_0 := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_irq_line_1_2 := 0;
    ~ldv_state_variable_23 := 0;
    ~ldv_irq_line_2_3 := 0;
    ~ldv_irq_3_0 := 0;
    ~ldv_irq_2_1 := 0;
    ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset := 0, 0;
    ~ldv_irq_1_3 := 0;
    ~ldv_irq_data_3_3.base, ~ldv_irq_data_3_3.offset := 0, 0;
    ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset := 0, 0;
    ~ldv_irq_line_2_2 := 0;
    ~ldv_irq_line_3_2 := 0;
    ~ldv_state_variable_10 := 0;
    ~ldv_irq_1_0 := 0;
    ~ldv_irq_data_3_1.base, ~ldv_irq_data_3_1.offset := 0, 0;
    ~ldv_state_variable_6 := 0;
    ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset := 0, 0;
    ~ldv_state_variable_16 := 0;
    ~ldv_irq_data_3_0.base, ~ldv_irq_data_3_0.offset := 0, 0;
    ~ldv_irq_line_2_1 := 0;
    ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset := 0, 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset := 0, 0;
    ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset := 0, 0;
    ~ldv_state_variable_11 := 0;
    ~ldv_irq_1_2 := 0;
    ~LDV_IN_INTERRUPT := 1;
    ~ldv_irq_1_1 := 0;
    ~ldv_state_variable_18 := 0;
    ~ldv_irq_2_3 := 0;
    ~ldv_irq_line_3_1 := 0;
    ~ldv_irq_line_1_3 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_irq_line_1_0 := 0;
    ~ldv_irq_data_3_2.base, ~ldv_irq_data_3_2.offset := 0, 0;
    ~ldv_irq_3_3 := 0;
    ~ldv_state_variable_4 := 0;
    ~ldv_irq_line_3_3 := 0;
    ~watchdog := 5000;
    ~debug := -1;
    ~phyaddr := -1;
    ~dma_txsize := 256;
    ~dma_rxsize := 256;
    ~flow_ctrl := 0;
    ~pause := 512;
    ~tc := 64;
    ~buf_sz := 1536;
    ~default_msg_level := 63;
    ~eee_timer := 1000;
    ~chain_mode := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_5 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_retval_6 := 0;
    ~ldv_retval_7 := 0;
    ~ldv_retval_8 := 0;
    ~ldv_retval_28 := 0;
    ~ldv_retval_20 := 0;
    ~ldv_retval_18 := 0;
    ~ldv_retval_26 := 0;
    ~ldv_retval_23 := 0;
    ~ldv_retval_11 := 0;
    ~ldv_retval_25 := 0;
    ~ldv_retval_22 := 0;
    ~ldv_retval_27 := 0;
    ~ldv_retval_15 := 0;
    ~ldv_retval_16 := 0;
    ~ldv_retval_29 := 0;
    ~ldv_retval_24 := 0;
    ~ldv_retval_19 := 0;
    ~ldv_retval_14 := 0;
    ~ldv_retval_17 := 0;
    ~ldv_retval_12 := 0;
    ~ldv_retval_21 := 0;
    ~ldv_retval_13 := 0;
    ~ldv_retval_10 := 0;
    ~ldv_retval_9 := 0;
    ~ldv_retval_4 := 0;
    ~ldv_retval_3 := 0;
    ~ldv_retval_2 := 0;
    ~ldv_spin := 0;
    ~ldv_timer_list_5.base, ~ldv_timer_list_5.offset := 0, 0;
    ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset := 0, 0;
    ~chain_mode_ops_group0.base, ~chain_mode_ops_group0.offset := 0, 0;
    ~stmmac_ptp_clock_ops_group0.base, ~stmmac_ptp_clock_ops_group0.offset := 0, 0;
    ~stmmac_ethtool_ops_group3.base, ~stmmac_ethtool_ops_group3.offset := 0, 0;
    ~dwmac100_dma_ops_group0.base, ~dwmac100_dma_ops_group0.offset := 0, 0;
    ~stmmac_rings_status_fops_group2.base, ~stmmac_rings_status_fops_group2.offset := 0, 0;
    ~stmmac_pltfr_driver_group0.base, ~stmmac_pltfr_driver_group0.offset := 0, 0;
    ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset := 0, 0;
    ~stmmac_ethtool_ops_group1.base, ~stmmac_ethtool_ops_group1.offset := 0, 0;
    ~ndesc_ops_group1.base, ~ndesc_ops_group1.offset := 0, 0;
    ~stmmac_pltfr_pm_ops_group1.base, ~stmmac_pltfr_pm_ops_group1.offset := 0, 0;
    ~stmmac_ethtool_ops_group0.base, ~stmmac_ethtool_ops_group0.offset := 0, 0;
    ~stmmac_rings_status_fops_group1.base, ~stmmac_rings_status_fops_group1.offset := 0, 0;
    ~stmmac_ethtool_ops_group2.base, ~stmmac_ethtool_ops_group2.offset := 0, 0;
    ~stmmac_dma_cap_fops_group2.base, ~stmmac_dma_cap_fops_group2.offset := 0, 0;
    ~enh_desc_ops_group0.base, ~enh_desc_ops_group0.offset := 0, 0;
    ~enh_desc_ops_group1.base, ~enh_desc_ops_group1.offset := 0, 0;
    ~stmmac_dma_cap_fops_group1.base, ~stmmac_dma_cap_fops_group1.offset := 0, 0;
    ~ring_mode_ops_group0.base, ~ring_mode_ops_group0.offset := 0, 0;
    ~stmmac_ethtool_ops_group5.base, ~stmmac_ethtool_ops_group5.offset := 0, 0;
    ~ndesc_ops_group0.base, ~ndesc_ops_group0.offset := 0, 0;
    ~stmmac_ethtool_ops_group4.base, ~stmmac_ethtool_ops_group4.offset := 0, 0;
    ~stmmac_pci_driver_group0.base, ~stmmac_pci_driver_group0.offset := 0, 0;
    call ~#ring_mode_ops.base, ~#ring_mode_ops.offset := #Ultimate.alloc(56);
    call write~$Pointer$(0, 0, ~#ring_mode_ops.base, ~#ring_mode_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#ring_mode_ops.base, ~#ring_mode_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#ring_mode_ops.base, ~#ring_mode_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#ring_mode_ops.base, ~#ring_mode_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#ring_mode_ops.base, ~#ring_mode_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#ring_mode_ops.base, ~#ring_mode_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#ring_mode_ops.base, ~#ring_mode_ops.offset + 48, 8);
    call ~#chain_mode_ops.base, ~#chain_mode_ops.offset := #Ultimate.alloc(56);
    call write~$Pointer$(0, 0, ~#chain_mode_ops.base, ~#chain_mode_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#chain_mode_ops.base, ~#chain_mode_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#chain_mode_ops.base, ~#chain_mode_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#chain_mode_ops.base, ~#chain_mode_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#chain_mode_ops.base, ~#chain_mode_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#chain_mode_ops.base, ~#chain_mode_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#chain_mode_ops.base, ~#chain_mode_ops.offset + 48, 8);
    call ~#enh_desc_ops.base, ~#enh_desc_ops.offset := #Ultimate.alloc(160);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#enh_desc_ops.base, ~#enh_desc_ops.offset + 152, 8);
    call ~#ndesc_ops.base, ~#ndesc_ops.offset := #Ultimate.alloc(160);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#ndesc_ops.base, ~#ndesc_ops.offset + 152, 8);
    call ~#stmmac_ptp.base, ~#stmmac_ptp.offset := #Ultimate.alloc(48);
    call write~$Pointer$(0, 0, ~#stmmac_ptp.base, ~#stmmac_ptp.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ptp.base, ~#stmmac_ptp.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ptp.base, ~#stmmac_ptp.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ptp.base, ~#stmmac_ptp.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ptp.base, ~#stmmac_ptp.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ptp.base, ~#stmmac_ptp.offset + 40, 8);
    call ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset := #Ultimate.alloc(162);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 0, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 8, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 16, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 24, 8);
    call write~int(0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 32, 1);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 33, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 41, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 49, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 57, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 65, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 73, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 81, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 89, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 97, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 40 + 105, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 153, 8);
    call write~int(0, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset + 161, 1);
    call ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset := #Ultimate.alloc(301);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 0 + 0, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 0 + 8, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 0, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 8, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 16, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 24, 8);
    call write~int(0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 32, 1);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 33, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 41, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 49, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 57, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 65, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 73, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 81, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 89, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 97, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 104 + 105, 8);
    call write~int(#t~union5241.raw_lock.ldv_1458.head_tail, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union5241.raw_lock.ldv_1458.tickets.head, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union5241.raw_lock.ldv_1458.tickets.tail, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(#t~union5241.magic, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 4, 4);
    call write~int(#t~union5241.owner_cpu, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 8, 4);
    call write~$Pointer$(#t~union5241.owner.base, #t~union5241.owner.offset, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 12, 8);
    call write~$Pointer$(#t~union5241.dep_map.key.base, #t~union5241.dep_map.key.offset, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 20 + 0, 8);
    call write~$Pointer$(#t~union5241.dep_map.class_cache.base[0], #t~union5241.dep_map.class_cache.offset[0], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 20 + 8, 8);
    call write~$Pointer$(#t~union5241.dep_map.class_cache.base[1], #t~union5241.dep_map.class_cache.offset[1], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 20 + 8 + 8, 8);
    call write~$Pointer$(#t~union5241.dep_map.name.base, #t~union5241.dep_map.name.offset, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 20 + 24, 8);
    call write~int(#t~union5241.dep_map.cpu, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 20 + 32, 4);
    call write~int(#t~union5241.dep_map.ip, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union5242.__padding[0], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0, 1);
    call write~int(#t~union5242.__padding[1], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union5242.__padding[2], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[3], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[4], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[5], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[6], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[7], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[8], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[9], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[10], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[11], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[12], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[13], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[14], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[15], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[16], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[17], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[18], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[19], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[20], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[21], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[22], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union5242.__padding[23], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union5242.dep_map.key.base, #t~union5242.dep_map.key.offset, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union5242.dep_map.class_cache.base[0], #t~union5242.dep_map.class_cache.offset[0], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union5242.dep_map.class_cache.base[1], #t~union5242.dep_map.class_cache.offset[1], ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union5242.dep_map.name.base, #t~union5242.dep_map.name.offset, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union5242.dep_map.cpu, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union5242.dep_map.ip, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 0 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 68 + 0, 8);
    call write~$Pointer$(0, 0, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset + 217 + 68 + 8, 8);
    havoc #t~union5241.raw_lock.ldv_1458.head_tail, #t~union5241.raw_lock.ldv_1458.tickets.head, #t~union5241.raw_lock.ldv_1458.tickets.tail, #t~union5241.magic, #t~union5241.owner_cpu, #t~union5241.owner.base, #t~union5241.owner.offset, #t~union5241.dep_map.key.base, #t~union5241.dep_map.key.offset, #t~union5241.dep_map.class_cache.base, #t~union5241.dep_map.class_cache.offset, #t~union5241.dep_map.name.base, #t~union5241.dep_map.name.offset, #t~union5241.dep_map.cpu, #t~union5241.dep_map.ip;
    havoc #t~union5242.__padding, #t~union5242.dep_map.key.base, #t~union5242.dep_map.key.offset, #t~union5242.dep_map.class_cache.base, #t~union5242.dep_map.class_cache.offset, #t~union5242.dep_map.name.base, #t~union5242.dep_map.name.offset, #t~union5242.dep_map.cpu, #t~union5242.dep_map.ip;
    ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset := 0, 0;
    ~stmmac_rings_status.base, ~stmmac_rings_status.offset := 0, 0;
    ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset := 0, 0;
    call ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset := #Ultimate.alloc(232);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 0, 8);
    call write~$Pointer$(#funAddr~seq_lseek.base, #funAddr~seq_lseek.offset, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 8, 8);
    call write~$Pointer$(#funAddr~seq_read.base, #funAddr~seq_read.offset, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 96, 8);
    call write~$Pointer$(#funAddr~stmmac_sysfs_ring_open.base, #funAddr~stmmac_sysfs_ring_open.offset, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 112, 8);
    call write~$Pointer$(#funAddr~single_release.base, #funAddr~single_release.offset, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset + 224, 8);
    call ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset := #Ultimate.alloc(232);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 0, 8);
    call write~$Pointer$(#funAddr~seq_lseek.base, #funAddr~seq_lseek.offset, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 8, 8);
    call write~$Pointer$(#funAddr~seq_read.base, #funAddr~seq_read.offset, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 96, 8);
    call write~$Pointer$(#funAddr~stmmac_sysfs_dma_cap_open.base, #funAddr~stmmac_sysfs_dma_cap_open.offset, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 112, 8);
    call write~$Pointer$(#funAddr~single_release.base, #funAddr~single_release.offset, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset + 224, 8);
    call ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset := #Ultimate.alloc(480);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~stmmac_open.base, #funAddr~stmmac_open.offset, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~stmmac_release.base, #funAddr~stmmac_release.offset, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~stmmac_xmit.base, #funAddr~stmmac_xmit.offset, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~stmmac_set_rx_mode.base, #funAddr~stmmac_set_rx_mode.offset, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~eth_mac_addr.base, #funAddr~eth_mac_addr.offset, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 72, 8);
    call write~$Pointer$(#funAddr~stmmac_ioctl.base, #funAddr~stmmac_ioctl.offset, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 88, 8);
    call write~$Pointer$(#funAddr~stmmac_change_mtu.base, #funAddr~stmmac_change_mtu.offset, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 104, 8);
    call write~$Pointer$(#funAddr~stmmac_tx_timeout.base, #funAddr~stmmac_tx_timeout.offset, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 144, 8);
    call write~$Pointer$(#funAddr~stmmac_poll_controller.base, #funAddr~stmmac_poll_controller.offset, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 216, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 328, 8);
    call write~$Pointer$(#funAddr~stmmac_fix_features.base, #funAddr~stmmac_fix_features.offset, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 352, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 360, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 368, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 376, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 384, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 392, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 400, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 408, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 416, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 424, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 432, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 440, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 448, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 456, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 464, 8);
    call write~$Pointer$(0, 0, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset + 472, 8);
    call ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset := #Ultimate.alloc(3200);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 2, 1);
    call write~int(117, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 3, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 4, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 5, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 6, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 7, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 8, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 9, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 10, 1);
    call write~int(119, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 32, 4);
    call write~int(896, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 0 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 2, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 3, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 4, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 5, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 6, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 7, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 8, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 32, 4);
    call write~int(904, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 40 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 2, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 3, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 4, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 5, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 6, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 7, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 8, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 9, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 10, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 11, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 12, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 32, 4);
    call write~int(912, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 80 + 36, 4);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 0, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 1, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 2, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 3, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 4, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 5, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 6, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 7, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 32, 4);
    call write~int(920, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 120 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 2, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 3, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 4, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 5, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 6, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 7, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 8, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 9, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 32, 4);
    call write~int(928, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 160 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 2, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 3, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 4, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 5, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 6, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 7, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 32, 4);
    call write~int(936, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 200 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 2, 1);
    call write~int(106, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 3, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 4, 1);
    call write~int(98, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 5, 1);
    call write~int(98, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 6, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 7, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 32, 4);
    call write~int(944, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 240 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 2, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 3, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 4, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 5, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 6, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 7, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 8, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 9, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 10, 1);
    call write~int(117, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 11, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 12, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 13, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 14, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 32, 4);
    call write~int(952, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 280 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 2, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 3, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 4, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 5, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 6, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 7, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 8, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 9, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 10, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 11, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 12, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 13, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 14, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 32, 4);
    call write~int(960, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 320 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 2, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 3, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 4, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 5, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 6, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 7, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 8, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 10, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 11, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 12, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 13, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 14, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 15, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 16, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 32, 4);
    call write~int(968, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 360 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 2, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 3, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 4, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 5, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 6, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 7, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 32, 4);
    call write~int(976, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 400 + 36, 4);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 0, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 2, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 3, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 4, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 5, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 6, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 7, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 8, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 9, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 10, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 11, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 12, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 32, 4);
    call write~int(984, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 440 + 36, 4);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 0, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 1, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 2, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 3, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 4, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 5, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 6, 1);
    call write~int(119, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 7, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 8, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 9, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 10, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 11, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 12, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 32, 4);
    call write~int(992, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 480 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 0, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 1, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 3, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 4, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 5, 1);
    call write~int(117, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 6, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 7, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 8, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 9, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 10, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 11, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 12, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 32, 4);
    call write~int(1000, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 520 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 2, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 3, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 4, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 5, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 6, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 7, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 8, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 9, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 10, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 32, 4);
    call write~int(1008, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 560 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 2, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 3, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 4, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 5, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 6, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 7, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 32, 4);
    call write~int(1016, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 600 + 36, 4);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 0, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 1, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 2, 1);
    call write~int(98, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 3, 1);
    call write~int(98, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 4, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 5, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 6, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 7, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 8, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 9, 1);
    call write~int(98, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 10, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 11, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 32, 4);
    call write~int(1024, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 640 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 2, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 3, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 4, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 5, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 6, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 7, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 32, 4);
    call write~int(1032, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 680 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 2, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 3, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 4, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 5, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 6, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 7, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 32, 4);
    call write~int(1040, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 720 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 2, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 3, 1);
    call write~int(117, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 4, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 5, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 6, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 7, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 8, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 9, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 10, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 32, 4);
    call write~int(1048, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 760 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 2, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 3, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 4, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 5, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 6, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 7, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 8, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 10, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 11, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 12, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 13, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 14, 1);
    call write~int(119, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 32, 4);
    call write~int(1056, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 800 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 2, 1);
    call write~int(119, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 3, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 4, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 5, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 6, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 7, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 8, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 9, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 32, 4);
    call write~int(1064, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 840 + 36, 4);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 0, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 2, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 3, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 4, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 5, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 6, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 7, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 8, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 10, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 11, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 12, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 13, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 14, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 15, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 32, 4);
    call write~int(1072, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 880 + 36, 4);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 0, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 2, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 3, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 4, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 5, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 6, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 7, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 8, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 10, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 11, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 12, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 13, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 14, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 15, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 32, 4);
    call write~int(1080, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 920 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 2, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 3, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 4, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 5, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 6, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 7, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 8, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 9, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 10, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 11, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 12, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 32, 4);
    call write~int(1088, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 960 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 2, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 3, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 4, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 5, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 6, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 7, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 8, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 9, 1);
    call write~int(119, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 11, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 12, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 13, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 14, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 32, 4);
    call write~int(1096, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1000 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 2, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 3, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 4, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 5, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 6, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 7, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 32, 4);
    call write~int(1104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1040 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 2, 1);
    call write~int(117, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 3, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 4, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 5, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 6, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 7, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 8, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 9, 1);
    call write~int(119, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 11, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 12, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 13, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 32, 4);
    call write~int(1112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1080 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 2, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 3, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 4, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 5, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 6, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 7, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 8, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 9, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 10, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 11, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 12, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 13, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 14, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 15, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 16, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 17, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 18, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 19, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 20, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 32, 4);
    call write~int(1120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1120 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 2, 1);
    call write~int(106, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 3, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 4, 1);
    call write~int(98, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 5, 1);
    call write~int(98, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 6, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 7, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 8, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 9, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 10, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 11, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 32, 4);
    call write~int(1128, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1160 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 2, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 3, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 4, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 5, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 6, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 7, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 8, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 9, 1);
    call write~int(119, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 11, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 12, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 13, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 32, 4);
    call write~int(1136, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1200 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 2, 1);
    call write~int(98, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 3, 1);
    call write~int(117, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 4, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 6, 1);
    call write~int(117, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 7, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 8, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 9, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 11, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 12, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 13, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 32, 4);
    call write~int(1144, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1240 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 2, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 3, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 4, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 5, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 6, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 7, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 8, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 9, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 10, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 11, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 12, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 13, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 14, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 15, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 16, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 17, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 18, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 19, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 20, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 32, 4);
    call write~int(1152, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1280 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 2, 1);
    call write~int(119, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 3, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 4, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 5, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 6, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 7, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 8, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 9, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 11, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 12, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 13, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 32, 4);
    call write~int(1160, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1320 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 2, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 3, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 4, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 5, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 6, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 7, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 8, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 9, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 10, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 32, 4);
    call write~int(1168, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1360 + 36, 4);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 0, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 1, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 2, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 3, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 4, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 5, 1);
    call write~int(98, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 6, 1);
    call write~int(117, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 7, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 8, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 10, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 11, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 12, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 13, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 14, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 15, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 16, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 17, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 32, 4);
    call write~int(1176, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1400 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 2, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 3, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 4, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 5, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 6, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 7, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 8, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 9, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 10, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 32, 4);
    call write~int(1184, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1440 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 0, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 1, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 2, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 3, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 4, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 5, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 6, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 7, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 32, 4);
    call write~int(1192, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1480 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 2, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 3, 1);
    call write~int(107, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 4, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 6, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 7, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 32, 4);
    call write~int(1200, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1520 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 2, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 3, 1);
    call write~int(107, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 4, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 6, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 7, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 32, 4);
    call write~int(1208, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1560 + 36, 4);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 0, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 1, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 2, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 3, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 4, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 6, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 7, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 8, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 9, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 10, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 32, 4);
    call write~int(1216, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1600 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 2, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 3, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 4, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 5, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 6, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 7, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 8, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 9, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 10, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 11, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 12, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 13, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 32, 4);
    call write~int(1224, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1640 + 36, 4);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 0, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 1, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 2, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 3, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 4, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 5, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 6, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 7, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 32, 4);
    call write~int(1232, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1680 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 2, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 3, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 4, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 5, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 6, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 7, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 8, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 9, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 10, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 11, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 12, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 13, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 32, 4);
    call write~int(1240, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1720 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 2, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 3, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 4, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 5, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 6, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 7, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 32, 4);
    call write~int(1248, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1760 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 2, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 3, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 4, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 5, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 6, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 7, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 8, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 9, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 11, 1);
    call write~int(98, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 12, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 13, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 32, 4);
    call write~int(1256, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1800 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 0, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 1, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 3, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 4, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 5, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 6, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 7, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 8, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 11, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 12, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 13, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 14, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 15, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 16, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 17, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 18, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 19, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 32, 4);
    call write~int(1264, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1840 + 36, 4);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 0, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 1, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 3, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 4, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 6, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 7, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 8, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 9, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 10, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 32, 4);
    call write~int(1272, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1880 + 36, 4);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 0, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 1, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 3, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 4, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 6, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 7, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 8, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 9, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 10, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 32, 4);
    call write~int(1280, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1920 + 36, 4);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 0, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 1, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 3, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 4, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 6, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 7, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 8, 1);
    call write~int(117, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 9, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 11, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 12, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 13, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 14, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 15, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 16, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 17, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 18, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 19, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 20, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 21, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 22, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 23, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 32, 4);
    call write~int(1288, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 1960 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 0, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 1, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 3, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 4, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 6, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 7, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 8, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 9, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 11, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 12, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 13, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 14, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 15, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 16, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 17, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 18, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 19, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 20, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 21, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 22, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 23, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 32, 4);
    call write~int(1296, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2000 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 0, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 1, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 3, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 4, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 6, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 7, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 8, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 9, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 11, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 12, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 13, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 14, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 15, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 16, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 17, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 18, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 19, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 20, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 21, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 22, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 23, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 24, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 25, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 32, 4);
    call write~int(1304, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2040 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 0, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 1, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 3, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 4, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 6, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 7, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 8, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 9, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 11, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 12, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 13, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 14, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 15, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 16, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 17, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 18, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 19, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 20, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 21, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 22, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 23, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 32, 4);
    call write~int(1312, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2080 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 0, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 1, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 3, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 4, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 6, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 7, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 8, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 9, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 11, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 12, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 13, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 14, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 15, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 16, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 17, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 18, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 19, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 20, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 21, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 22, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 23, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 24, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 25, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 32, 4);
    call write~int(1320, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2120 + 36, 4);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 0, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 1, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 3, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 4, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 5, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 6, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 7, 1);
    call write~int(119, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 8, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 9, 1);
    call write~int(107, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 10, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 11, 1);
    call write~int(117, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 12, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 13, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 14, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 15, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 16, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 17, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 18, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 19, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 20, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 32, 4);
    call write~int(1328, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2160 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 0, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 2, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 3, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 4, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 6, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 7, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 8, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 32, 4);
    call write~int(1336, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2200 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 0, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 2, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 3, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 4, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 5, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 6, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 7, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 8, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 9, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 10, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 11, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 12, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 32, 4);
    call write~int(1344, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2240 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 0, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 2, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 3, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 4, 1);
    call write~int(117, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 5, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 6, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 7, 1);
    call write~int(98, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 8, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 9, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 10, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 11, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 12, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 13, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 14, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 32, 4);
    call write~int(1352, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2280 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 0, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 1, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 2, 1);
    call write~int(52, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 3, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 4, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 5, 1);
    call write~int(107, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 6, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 7, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 8, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 9, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 10, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 11, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 32, 4);
    call write~int(1360, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2320 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 0, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 1, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 2, 1);
    call write~int(54, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 3, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 4, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 5, 1);
    call write~int(107, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 6, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 7, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 8, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 9, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 10, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 11, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 32, 4);
    call write~int(1368, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2360 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 2, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 3, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 4, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 6, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 7, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 8, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 11, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 12, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 13, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 14, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 15, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 16, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 17, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 18, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 19, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 20, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 32, 4);
    call write~int(1376, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2400 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 2, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 3, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 4, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 6, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 7, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 8, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 11, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 12, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 13, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 14, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 32, 4);
    call write~int(1384, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2440 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 2, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 3, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 4, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 6, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 7, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 8, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 11, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 12, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 13, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 14, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 15, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 16, 1);
    call write~int(119, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 17, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 18, 1);
    call write~int(117, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 19, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 32, 4);
    call write~int(1392, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2480 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 2, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 3, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 4, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 6, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 7, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 8, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 11, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 12, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 13, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 14, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 15, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 16, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 17, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 18, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 19, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 32, 4);
    call write~int(1400, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2520 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 2, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 3, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 4, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 6, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 7, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 8, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 11, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 12, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 13, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 14, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 15, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 16, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 17, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 18, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 19, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 20, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 32, 4);
    call write~int(1408, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2560 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 2, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 3, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 4, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 6, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 7, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 8, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 11, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 12, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 13, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 14, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 15, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 16, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 17, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 18, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 19, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 20, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 32, 4);
    call write~int(1416, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2600 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 2, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 3, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 4, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 6, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 7, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 8, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 11, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 12, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 13, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 14, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 15, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 16, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 17, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 18, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 19, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 20, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 21, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 32, 4);
    call write~int(1424, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2640 + 36, 4);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 0, 1);
    call write~int(120, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 2, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 3, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 4, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 6, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 7, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 8, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 11, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 12, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 13, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 14, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 15, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 16, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 17, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 18, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 19, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 20, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 21, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 22, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 23, 1);
    call write~int(119, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 24, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 25, 1);
    call write~int(117, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 26, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 32, 4);
    call write~int(1432, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2680 + 36, 4);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 0, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 1, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 3, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 4, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 5, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 6, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 7, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 8, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 9, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 10, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 11, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 12, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 32, 4);
    call write~int(1440, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2720 + 36, 4);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 0, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 1, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 3, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 4, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 5, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 6, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 7, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 8, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 9, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 32, 4);
    call write~int(1448, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2760 + 36, 4);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 0, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 1, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 2, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 3, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 4, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 5, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 6, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 7, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 8, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 9, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 10, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 11, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 12, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 13, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 14, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 15, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 32, 4);
    call write~int(1456, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2800 + 36, 4);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 0, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 2, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 3, 1);
    call write~int(107, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 4, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 5, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 6, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 7, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 8, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 9, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 32, 4);
    call write~int(1464, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2840 + 36, 4);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 0, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 2, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 3, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 4, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 5, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 6, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 7, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 8, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 9, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 10, 1);
    call write~int(107, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 11, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 12, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 13, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 14, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 15, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 16, 1);
    call write~int(100, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 32, 4);
    call write~int(1472, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2880 + 36, 4);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 0, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 1, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 2, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 3, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 4, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 5, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 6, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 7, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 8, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 9, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 10, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 11, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 12, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 13, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 14, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 15, 1);
    call write~int(121, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 16, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 17, 1);
    call write~int(118, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 18, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 19, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 32, 4);
    call write~int(1480, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2920 + 36, 4);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 0, 1);
    call write~int(51, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 2, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 3, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 4, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 5, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 6, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 7, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 8, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 9, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 10, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 11, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 12, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 13, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 32, 4);
    call write~int(1488, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 2960 + 36, 4);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 0, 1);
    call write~int(52, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 2, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 3, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 4, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 5, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 6, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 7, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 8, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 9, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 10, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 11, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 12, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 13, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 32, 4);
    call write~int(1496, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3000 + 36, 4);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 0, 1);
    call write~int(51, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 1, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 2, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 3, 1);
    call write~int(52, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 4, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 5, 1);
    call write~int(102, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 6, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 7, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 8, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 10, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 11, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 12, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 13, 1);
    call write~int(111, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 14, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 15, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 16, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 17, 1);
    call write~int(116, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 18, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 19, 1);
    call write~int(104, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 32, 4);
    call write~int(1504, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3040 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 0, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 1, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 3, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 4, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 5, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 6, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 7, 1);
    call write~int(97, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 8, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 9, 1);
    call write~int(101, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 10, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 11, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 32, 4);
    call write~int(1512, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3080 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 0, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 1, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 3, 1);
    call write~int(112, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 4, 1);
    call write~int(99, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 5, 1);
    call write~int(115, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 6, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 7, 1);
    call write~int(108, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 8, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 9, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 10, 1);
    call write~int(107, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 11, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 12, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 32, 4);
    call write~int(1520, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3120 + 36, 4);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 0, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 1, 1);
    call write~int(113, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 2, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 3, 1);
    call write~int(114, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 4, 1);
    call write~int(103, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 5, 1);
    call write~int(109, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 6, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 7, 1);
    call write~int(105, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 8, 1);
    call write~int(95, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 9, 1);
    call write~int(110, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 10, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 11, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 12, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 13, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 14, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 15, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 16, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 17, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 18, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 19, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 20, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 21, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 22, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 23, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 24, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 25, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 26, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 27, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 28, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 29, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 30, 1);
    call write~int(0, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 0 + 31, 1);
    call write~int(8, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 32, 4);
    call write~int(1528, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset + 3160 + 36, 4);
    call ~#stmmac_mmc.base, ~#stmmac_mmc.offset := #Ultimate.alloc(3160);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 6, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 7, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 8, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 9, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 10, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 13, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 14, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 15, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 17, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 18, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 32, 4);
    call write~int(1692, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 0 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 6, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 7, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 8, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 9, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 10, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 13, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 14, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 15, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 17, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 18, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 32, 4);
    call write~int(1696, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 40 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 6, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 7, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 8, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 9, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 10, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 12, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 13, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 14, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 15, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 16, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 17, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 18, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 19, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 20, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 21, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 32, 4);
    call write~int(1700, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 80 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 6, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 7, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 8, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 9, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 10, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 12, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 13, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 14, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 15, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 16, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 17, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 18, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 19, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 20, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 21, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 32, 4);
    call write~int(1704, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 120 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 6, 1);
    call write~int(54, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 7, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 8, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 9, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 10, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 11, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 12, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 13, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 14, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 15, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 16, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 17, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 32, 4);
    call write~int(1708, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 160 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 6, 1);
    call write~int(54, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 7, 1);
    call write~int(53, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 8, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 9, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 10, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 11, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 12, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 13, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 14, 1);
    call write~int(55, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 15, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 16, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 17, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 18, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 19, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 20, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 21, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 22, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 23, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 24, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 32, 4);
    call write~int(1712, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 200 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 6, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 7, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 8, 1);
    call write~int(56, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 10, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 11, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 12, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 13, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 14, 1);
    call write~int(53, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 15, 1);
    call write~int(53, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 17, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 18, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 19, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 20, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 21, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 22, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 23, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 24, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 25, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 32, 4);
    call write~int(1716, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 240 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 6, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 7, 1);
    call write~int(53, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 8, 1);
    call write~int(54, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 10, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 11, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 12, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 13, 1);
    call write~int(53, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 14, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 15, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 17, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 18, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 19, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 20, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 21, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 22, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 23, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 24, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 25, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 32, 4);
    call write~int(1720, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 280 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 6, 1);
    call write~int(53, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 7, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 8, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 10, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 11, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 12, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 13, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 14, 1);
    call write~int(48, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 15, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 16, 1);
    call write~int(51, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 17, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 18, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 19, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 20, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 21, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 22, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 23, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 24, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 25, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 26, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 32, 4);
    call write~int(1724, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 320 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 6, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 7, 1);
    call write~int(48, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 8, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 9, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 11, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 13, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 14, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 15, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 16, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 17, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 18, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 19, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 20, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 21, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 22, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 23, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 24, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 25, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 26, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 32, 4);
    call write~int(1728, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 360 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 6, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 7, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 8, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 9, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 10, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 11, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 12, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 13, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 14, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 15, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 32, 4);
    call write~int(1732, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 400 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 6, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 7, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 8, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 9, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 10, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 12, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 13, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 14, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 15, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 16, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 17, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 32, 4);
    call write~int(1736, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 440 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 6, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 7, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 8, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 9, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 10, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 12, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 13, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 14, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 15, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 16, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 17, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 32, 4);
    call write~int(1740, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 480 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 6, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 7, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 8, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 9, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 10, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 11, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 12, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 13, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 14, 1);
    call write~int(119, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 15, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 16, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 17, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 18, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 19, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 20, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 32, 4);
    call write~int(1744, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 520 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 6, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 7, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 8, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 9, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 10, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 11, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 12, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 13, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 14, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 15, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 16, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 32, 4);
    call write~int(1748, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 560 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 6, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 7, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 8, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 9, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 10, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 13, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 14, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 15, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 32, 4);
    call write~int(1752, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 600 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 6, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 7, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 8, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 9, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 10, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 11, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 12, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 13, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 14, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 32, 4);
    call write~int(1756, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 640 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 6, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 7, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 8, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 9, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 10, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 11, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 12, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 13, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 14, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 32, 4);
    call write~int(1760, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 680 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 6, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 7, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 8, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 9, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 10, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 13, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 14, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 32, 4);
    call write~int(1764, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 720 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 6, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 7, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 8, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 9, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 10, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 11, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 12, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 13, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 14, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 15, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 16, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 17, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 18, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 32, 4);
    call write~int(1768, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 760 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 6, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 7, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 8, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 9, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 10, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 13, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 14, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 15, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 17, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 32, 4);
    call write~int(1772, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 800 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 6, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 7, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 8, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 9, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 10, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 13, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 14, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 15, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 17, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 32, 4);
    call write~int(1776, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 840 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 6, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 7, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 8, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 9, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 10, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 11, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 12, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 13, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 14, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 32, 4);
    call write~int(1780, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 880 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 6, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 7, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 8, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 9, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 10, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 11, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 12, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 13, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 14, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 15, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 16, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 32, 4);
    call write~int(1784, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 920 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 3, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 6, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 7, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 8, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 9, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 11, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 12, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 13, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 14, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 15, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 17, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 32, 4);
    call write~int(1788, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 960 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 6, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 7, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 8, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 9, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 10, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 13, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 14, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 15, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 17, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 18, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 32, 4);
    call write~int(1792, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1000 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 6, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 7, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 8, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 9, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 10, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 13, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 14, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 15, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 17, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 18, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 32, 4);
    call write~int(1796, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1040 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 6, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 7, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 8, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 9, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 10, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 13, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 14, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 15, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 17, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 32, 4);
    call write~int(1800, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1080 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 6, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 7, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 8, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 9, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 10, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 12, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 13, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 14, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 15, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 16, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 17, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 18, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 19, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 20, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 21, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 32, 4);
    call write~int(1804, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1120 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 6, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 7, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 8, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 9, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 10, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 11, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 12, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 13, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 14, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 15, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 16, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 17, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 18, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 19, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 20, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 21, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 32, 4);
    call write~int(1808, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1160 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 6, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 7, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 8, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 10, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 11, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 12, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 13, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 14, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 15, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 32, 4);
    call write~int(1812, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1200 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 6, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 7, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 8, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 9, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 10, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 11, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 12, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 13, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 14, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 15, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 16, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 32, 4);
    call write~int(1816, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1240 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 6, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 7, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 8, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 10, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 11, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 12, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 13, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 14, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 32, 4);
    call write~int(1820, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1280 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 6, 1);
    call write~int(106, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 7, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 8, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 9, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 10, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 11, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 12, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 13, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 14, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 15, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 16, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 17, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 32, 4);
    call write~int(1824, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1320 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 6, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 7, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 8, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 9, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 10, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 11, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 12, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 13, 1);
    call write~int(122, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 14, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 15, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 16, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 32, 4);
    call write~int(1828, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1360 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 6, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 7, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 8, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 9, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 10, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 11, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 12, 1);
    call write~int(122, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 13, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 14, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 15, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 32, 4);
    call write~int(1832, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1400 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 6, 1);
    call write~int(54, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 7, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 8, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 9, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 10, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 11, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 12, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 13, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 14, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 15, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 16, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 17, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 32, 4);
    call write~int(1836, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1440 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 6, 1);
    call write~int(54, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 7, 1);
    call write~int(53, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 8, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 9, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 10, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 11, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 12, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 13, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 14, 1);
    call write~int(55, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 15, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 16, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 17, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 18, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 19, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 20, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 21, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 22, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 23, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 24, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 32, 4);
    call write~int(1840, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1480 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 6, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 7, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 8, 1);
    call write~int(56, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 10, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 11, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 12, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 13, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 14, 1);
    call write~int(53, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 15, 1);
    call write~int(53, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 17, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 18, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 19, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 20, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 21, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 22, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 23, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 24, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 25, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 32, 4);
    call write~int(1844, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1520 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 6, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 7, 1);
    call write~int(53, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 8, 1);
    call write~int(54, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 10, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 11, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 12, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 13, 1);
    call write~int(53, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 14, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 15, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 17, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 18, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 19, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 20, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 21, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 22, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 23, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 24, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 25, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 32, 4);
    call write~int(1848, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1560 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 6, 1);
    call write~int(53, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 7, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 8, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 10, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 11, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 12, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 13, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 14, 1);
    call write~int(48, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 15, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 16, 1);
    call write~int(51, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 17, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 18, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 19, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 20, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 21, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 22, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 23, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 24, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 25, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 26, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 32, 4);
    call write~int(1852, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1600 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 6, 1);
    call write~int(49, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 7, 1);
    call write~int(48, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 8, 1);
    call write~int(50, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 9, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 11, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 13, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 14, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 15, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 16, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 17, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 18, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 19, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 20, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 21, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 22, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 23, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 24, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 25, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 26, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 32, 4);
    call write~int(1856, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1640 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 6, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 7, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 8, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 9, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 10, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 11, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 12, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 13, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 14, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 32, 4);
    call write~int(1860, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1680 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 6, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 7, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 8, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 9, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 10, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 11, 1);
    call write~int(104, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 12, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 13, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 14, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 15, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 16, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 17, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 32, 4);
    call write~int(1864, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1720 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 6, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 7, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 8, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 9, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 10, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 11, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 12, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 13, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 14, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 15, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 16, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 17, 1);
    call write~int(121, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 18, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 19, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 32, 4);
    call write~int(1868, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1760 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 6, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 7, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 8, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 9, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 10, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 11, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 12, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 13, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 14, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 15, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 16, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 17, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 32, 4);
    call write~int(1872, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1800 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 6, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 7, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 8, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 9, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 11, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 12, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 13, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 14, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 15, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 16, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 17, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 18, 1);
    call write~int(119, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 32, 4);
    call write~int(1876, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1840 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 6, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 7, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 8, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 9, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 11, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 12, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 13, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 14, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 15, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 16, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 17, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 18, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 19, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 32, 4);
    call write~int(1880, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1880 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 6, 1);
    call write~int(119, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 7, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 8, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 9, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 10, 1);
    call write~int(104, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 11, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 13, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 14, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 15, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 16, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 17, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 18, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 19, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 32, 4);
    call write~int(1884, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1920 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 8, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 10, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 11, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 12, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 13, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 14, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 15, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 16, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 17, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 18, 1);
    call write~int(107, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 32, 4);
    call write~int(1888, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 1960 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 8, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 10, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 11, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 12, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 13, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 14, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 32, 4);
    call write~int(1892, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2000 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 9, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 11, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 12, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 13, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 14, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 32, 4);
    call write~int(1896, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2040 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 9, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 11, 1);
    call write~int(104, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 12, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 13, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 14, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 15, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 32, 4);
    call write~int(1900, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2080 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 9, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 11, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 13, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 14, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 15, 1);
    call write~int(121, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 32, 4);
    call write~int(1904, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2120 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 9, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 11, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 12, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 13, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 14, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 32, 4);
    call write~int(1908, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2160 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 9, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 11, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 12, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 13, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 14, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 15, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 32, 4);
    call write~int(1912, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2200 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 9, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 11, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 12, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 13, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 14, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 15, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 16, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 17, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 18, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 19, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 32, 4);
    call write~int(1916, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2240 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 9, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 11, 1);
    call write~int(104, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 12, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 13, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 14, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 15, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 17, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 18, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 19, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 20, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 21, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 22, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 32, 4);
    call write~int(1920, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2280 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 9, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 11, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 13, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 14, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 15, 1);
    call write~int(121, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 17, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 18, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 19, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 20, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 21, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 22, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 32, 4);
    call write~int(1924, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2320 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 9, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 11, 1);
    call write~int(102, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 12, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 13, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 14, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 15, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 16, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 17, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 18, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 19, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 20, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 21, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 32, 4);
    call write~int(1928, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2360 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 9, 1);
    call write~int(52, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 11, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 12, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 13, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 14, 1);
    call write~int(98, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 15, 1);
    call write~int(108, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 17, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 18, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 19, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 20, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 21, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 22, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 32, 4);
    call write~int(1932, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2400 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 9, 1);
    call write~int(54, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 11, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 12, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 13, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 14, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 15, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 16, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 17, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 18, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 19, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 32, 4);
    call write~int(1936, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2440 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 9, 1);
    call write~int(54, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 11, 1);
    call write~int(104, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 12, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 13, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 14, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 15, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 17, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 18, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 19, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 20, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 21, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 22, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 32, 4);
    call write~int(1940, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2480 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 9, 1);
    call write~int(54, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 11, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 13, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 14, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 15, 1);
    call write~int(121, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 16, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 17, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 18, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 19, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 20, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 21, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 22, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 32, 4);
    call write~int(1944, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2520 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 9, 1);
    call write~int(54, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 11, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 12, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 13, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 14, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 32, 4);
    call write~int(1948, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2560 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 9, 1);
    call write~int(54, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 11, 1);
    call write~int(104, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 12, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 13, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 14, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 15, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 32, 4);
    call write~int(1952, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2600 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 7, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 8, 1);
    call write~int(118, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 9, 1);
    call write~int(54, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 11, 1);
    call write~int(110, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 12, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 13, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 14, 1);
    call write~int(97, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 15, 1);
    call write~int(121, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 32, 4);
    call write~int(1956, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2640 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 6, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 7, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 8, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 10, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 11, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 12, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 13, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 14, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 32, 4);
    call write~int(1960, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2680 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 6, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 7, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 8, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 10, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 11, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 12, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 13, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 14, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 32, 4);
    call write~int(1964, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2720 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 6, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 7, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 8, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 10, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 11, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 12, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 13, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 14, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 32, 4);
    call write~int(1968, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2760 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 6, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 7, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 8, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 10, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 11, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 12, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 13, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 14, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 32, 4);
    call write~int(1972, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2800 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 7, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 8, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 9, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 11, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 12, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 13, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 14, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 32, 4);
    call write~int(1976, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2840 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 7, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 8, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 9, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 11, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 12, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 13, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 14, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 15, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 16, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 17, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 18, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 32, 4);
    call write~int(1980, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2880 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 6, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 7, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 8, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 10, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 11, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 12, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 13, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 14, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 15, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 16, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 17, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 18, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 32, 4);
    call write~int(1984, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2920 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 6, 1);
    call write~int(117, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 7, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 8, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 10, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 11, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 12, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 13, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 14, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 15, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 16, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 17, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 18, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 19, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 32, 4);
    call write~int(1988, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 2960 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 6, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 7, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 8, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 10, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 11, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 12, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 13, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 14, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 15, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 16, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 17, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 18, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 19, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 32, 4);
    call write~int(1992, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3000 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 6, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 7, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 8, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 9, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 10, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 11, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 12, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 13, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 14, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 15, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 16, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 17, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 18, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 19, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 32, 4);
    call write~int(1996, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3040 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 7, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 8, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 9, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 11, 1);
    call write~int(103, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 12, 1);
    call write~int(100, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 13, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 14, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 15, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 16, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 17, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 18, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 19, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 20, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 32, 4);
    call write~int(2000, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3080 + 36, 4);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 0, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 1, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 2, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 3, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 4, 1);
    call write~int(120, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 5, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 6, 1);
    call write~int(105, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 7, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 8, 1);
    call write~int(109, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 9, 1);
    call write~int(112, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 10, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 11, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 12, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 13, 1);
    call write~int(114, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 14, 1);
    call write~int(95, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 15, 1);
    call write~int(111, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 16, 1);
    call write~int(99, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 17, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 18, 1);
    call write~int(101, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 19, 1);
    call write~int(116, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 20, 1);
    call write~int(115, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 21, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 22, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 23, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 24, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 25, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 26, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 27, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 28, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 29, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 30, 1);
    call write~int(0, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 0 + 31, 1);
    call write~int(4, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 32, 4);
    call write~int(2004, ~#stmmac_mmc.base, ~#stmmac_mmc.offset + 3120 + 36, 4);
    call ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset := #Ultimate.alloc(376);
    call write~$Pointer$(#funAddr~stmmac_ethtool_getsettings.base, #funAddr~stmmac_ethtool_getsettings.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~stmmac_ethtool_setsettings.base, #funAddr~stmmac_ethtool_setsettings.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~stmmac_ethtool_getdrvinfo.base, #funAddr~stmmac_ethtool_getdrvinfo.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~stmmac_ethtool_get_regs_len.base, #funAddr~stmmac_ethtool_get_regs_len.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~stmmac_ethtool_gregs.base, #funAddr~stmmac_ethtool_gregs.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 32, 8);
    call write~$Pointer$(#funAddr~stmmac_get_wol.base, #funAddr~stmmac_get_wol.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 40, 8);
    call write~$Pointer$(#funAddr~stmmac_set_wol.base, #funAddr~stmmac_set_wol.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~stmmac_ethtool_getmsglevel.base, #funAddr~stmmac_ethtool_getmsglevel.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~stmmac_ethtool_setmsglevel.base, #funAddr~stmmac_ethtool_setmsglevel.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 72, 8);
    call write~$Pointer$(#funAddr~ethtool_op_get_link.base, #funAddr~ethtool_op_get_link.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 104, 8);
    call write~$Pointer$(#funAddr~stmmac_get_coalesce.base, #funAddr~stmmac_get_coalesce.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 112, 8);
    call write~$Pointer$(#funAddr~stmmac_set_coalesce.base, #funAddr~stmmac_set_coalesce.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 136, 8);
    call write~$Pointer$(#funAddr~stmmac_get_pauseparam.base, #funAddr~stmmac_get_pauseparam.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 144, 8);
    call write~$Pointer$(#funAddr~stmmac_set_pauseparam.base, #funAddr~stmmac_set_pauseparam.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 160, 8);
    call write~$Pointer$(#funAddr~stmmac_get_strings.base, #funAddr~stmmac_get_strings.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 176, 8);
    call write~$Pointer$(#funAddr~stmmac_get_ethtool_stats.base, #funAddr~stmmac_get_ethtool_stats.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 184, 8);
    call write~$Pointer$(#funAddr~stmmac_check_if_running.base, #funAddr~stmmac_check_if_running.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 216, 8);
    call write~$Pointer$(#funAddr~stmmac_get_sset_count.base, #funAddr~stmmac_get_sset_count.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 232, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 240, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 248, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 256, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 264, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 272, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 280, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 288, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 296, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 304, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 312, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 320, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 328, 8);
    call write~$Pointer$(#funAddr~stmmac_get_ts_info.base, #funAddr~stmmac_get_ts_info.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 336, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 344, 8);
    call write~$Pointer$(0, 0, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 352, 8);
    call write~$Pointer$(#funAddr~stmmac_ethtool_op_get_eee.base, #funAddr~stmmac_ethtool_op_get_eee.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 360, 8);
    call write~$Pointer$(#funAddr~stmmac_ethtool_op_set_eee.base, #funAddr~stmmac_ethtool_op_set_eee.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset + 368, 8);
    call ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset := #Ultimate.alloc(112);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset + 104, 8);
    call ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset := #Ultimate.alloc(120);
    call write~$Pointer$(#funAddr~dwmac1000_core_init.base, #funAddr~dwmac1000_core_init.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~dwmac1000_rx_ipc_enable.base, #funAddr~dwmac1000_rx_ipc_enable.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~dwmac1000_dump_regs.base, #funAddr~dwmac1000_dump_regs.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~dwmac1000_irq_status.base, #funAddr~dwmac1000_irq_status.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~dwmac1000_set_filter.base, #funAddr~dwmac1000_set_filter.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 32, 8);
    call write~$Pointer$(#funAddr~dwmac1000_flow_ctrl.base, #funAddr~dwmac1000_flow_ctrl.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 40, 8);
    call write~$Pointer$(#funAddr~dwmac1000_pmt.base, #funAddr~dwmac1000_pmt.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~dwmac1000_set_umac_addr.base, #funAddr~dwmac1000_set_umac_addr.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~dwmac1000_get_umac_addr.base, #funAddr~dwmac1000_get_umac_addr.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 64, 8);
    call write~$Pointer$(#funAddr~dwmac1000_set_eee_mode.base, #funAddr~dwmac1000_set_eee_mode.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 72, 8);
    call write~$Pointer$(#funAddr~dwmac1000_reset_eee_mode.base, #funAddr~dwmac1000_reset_eee_mode.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 80, 8);
    call write~$Pointer$(#funAddr~dwmac1000_set_eee_timer.base, #funAddr~dwmac1000_set_eee_timer.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 88, 8);
    call write~$Pointer$(#funAddr~dwmac1000_set_eee_pls.base, #funAddr~dwmac1000_set_eee_pls.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 96, 8);
    call write~$Pointer$(#funAddr~dwmac1000_ctrl_ane.base, #funAddr~dwmac1000_ctrl_ane.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 104, 8);
    call write~$Pointer$(#funAddr~dwmac1000_get_adv.base, #funAddr~dwmac1000_get_adv.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset + 112, 8);
    call ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset := #Ultimate.alloc(112);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 0, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset + 104, 8);
    call ~#dwmac100_ops.base, ~#dwmac100_ops.offset := #Ultimate.alloc(120);
    call write~$Pointer$(#funAddr~dwmac100_core_init.base, #funAddr~dwmac100_core_init.offset, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 0, 8);
    call write~$Pointer$(#funAddr~dwmac100_rx_ipc_enable.base, #funAddr~dwmac100_rx_ipc_enable.offset, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 8, 8);
    call write~$Pointer$(#funAddr~dwmac100_dump_mac_regs.base, #funAddr~dwmac100_dump_mac_regs.offset, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 16, 8);
    call write~$Pointer$(#funAddr~dwmac100_irq_status.base, #funAddr~dwmac100_irq_status.offset, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 24, 8);
    call write~$Pointer$(#funAddr~dwmac100_set_filter.base, #funAddr~dwmac100_set_filter.offset, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 32, 8);
    call write~$Pointer$(#funAddr~dwmac100_flow_ctrl.base, #funAddr~dwmac100_flow_ctrl.offset, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 40, 8);
    call write~$Pointer$(#funAddr~dwmac100_pmt.base, #funAddr~dwmac100_pmt.offset, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 48, 8);
    call write~$Pointer$(#funAddr~dwmac100_set_umac_addr.base, #funAddr~dwmac100_set_umac_addr.offset, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 56, 8);
    call write~$Pointer$(#funAddr~dwmac100_get_umac_addr.base, #funAddr~dwmac100_get_umac_addr.offset, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 64, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 96, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#dwmac100_ops.base, ~#dwmac100_ops.offset + 112, 8);
    #t~init5243 := #t~init5243[0 := 115];
    #t~init5243 := #t~init5243[1 := 116];
    #t~init5243 := #t~init5243[2 := 109];
    #t~init5243 := #t~init5243[3 := 109];
    #t~init5243 := #t~init5243[4 := 97];
    #t~init5243 := #t~init5243[5 := 99];
    #t~init5243 := #t~init5243[6 := 95];
    #t~init5243 := #t~init5243[7 := 112];
    #t~init5243 := #t~init5243[8 := 116];
    #t~init5243 := #t~init5243[9 := 112];
    #t~init5243 := #t~init5243[10 := 95];
    #t~init5243 := #t~init5243[11 := 99];
    #t~init5243 := #t~init5243[12 := 108];
    #t~init5243 := #t~init5243[13 := 111];
    #t~init5243 := #t~init5243[14 := 99];
    #t~init5243 := #t~init5243[15 := 107];
    ~stmmac_ptp_clock_ops.owner.base, ~stmmac_ptp_clock_ops.owner.offset, ~stmmac_ptp_clock_ops.name, ~stmmac_ptp_clock_ops.max_adj, ~stmmac_ptp_clock_ops.n_alarm, ~stmmac_ptp_clock_ops.n_ext_ts, ~stmmac_ptp_clock_ops.n_per_out, ~stmmac_ptp_clock_ops.n_pins, ~stmmac_ptp_clock_ops.pps, ~stmmac_ptp_clock_ops.pin_config.base, ~stmmac_ptp_clock_ops.pin_config.offset, ~stmmac_ptp_clock_ops.adjfreq.base, ~stmmac_ptp_clock_ops.adjfreq.offset, ~stmmac_ptp_clock_ops.adjtime.base, ~stmmac_ptp_clock_ops.adjtime.offset, ~stmmac_ptp_clock_ops.gettime.base, ~stmmac_ptp_clock_ops.gettime.offset, ~stmmac_ptp_clock_ops.settime.base, ~stmmac_ptp_clock_ops.settime.offset, ~stmmac_ptp_clock_ops.enable.base, ~stmmac_ptp_clock_ops.enable.offset, ~stmmac_ptp_clock_ops.verify.base, ~stmmac_ptp_clock_ops.verify.offset := ~#__this_module.base, ~#__this_module.offset, #t~init5243, 62500000, 0, 0, 0, 0, 0, 0, 0, #funAddr~stmmac_adjust_freq.base, #funAddr~stmmac_adjust_freq.offset, #funAddr~stmmac_adjust_time.base, #funAddr~stmmac_adjust_time.offset, #funAddr~stmmac_get_time.base, #funAddr~stmmac_get_time.offset, #funAddr~stmmac_set_time.base, #funAddr~stmmac_set_time.offset, #funAddr~stmmac_enable.base, #funAddr~stmmac_enable.offset, 0, 0;
    havoc #t~init5243;
    call ~#plat_dat.base, ~#plat_dat.offset := #Ultimate.alloc(156);
    call write~$Pointer$(0, 0, ~#plat_dat.base, ~#plat_dat.offset + 0, 8);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 8, 4);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 12, 4);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 16, 4);
    call write~$Pointer$(0, 0, ~#plat_dat.base, ~#plat_dat.offset + 20, 8);
    call write~$Pointer$(0, 0, ~#plat_dat.base, ~#plat_dat.offset + 28, 8);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 36, 4);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 40, 4);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 44, 4);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 48, 4);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 52, 4);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 56, 4);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 60, 4);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 64, 4);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 68, 4);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 72, 4);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 76, 4);
    call write~int(0, ~#plat_dat.base, ~#plat_dat.offset + 80, 4);
    call write~$Pointer$(0, 0, ~#plat_dat.base, ~#plat_dat.offset + 84, 8);
    call write~$Pointer$(0, 0, ~#plat_dat.base, ~#plat_dat.offset + 92, 8);
    call write~$Pointer$(0, 0, ~#plat_dat.base, ~#plat_dat.offset + 100, 8);
    call write~$Pointer$(0, 0, ~#plat_dat.base, ~#plat_dat.offset + 108, 8);
    call write~$Pointer$(0, 0, ~#plat_dat.base, ~#plat_dat.offset + 116, 8);
    call write~$Pointer$(0, 0, ~#plat_dat.base, ~#plat_dat.offset + 124, 8);
    call write~$Pointer$(0, 0, ~#plat_dat.base, ~#plat_dat.offset + 132, 8);
    call write~$Pointer$(0, 0, ~#plat_dat.base, ~#plat_dat.offset + 140, 8);
    call write~$Pointer$(0, 0, ~#plat_dat.base, ~#plat_dat.offset + 148, 8);
    call ~#mdio_data.base, ~#mdio_data.offset := #Ultimate.alloc(24);
    call write~$Pointer$(0, 0, ~#mdio_data.base, ~#mdio_data.offset + 0, 8);
    call write~int(0, ~#mdio_data.base, ~#mdio_data.offset + 8, 4);
    call write~$Pointer$(0, 0, ~#mdio_data.base, ~#mdio_data.offset + 12, 8);
    call write~int(0, ~#mdio_data.base, ~#mdio_data.offset + 20, 4);
    call ~#dma_cfg.base, ~#dma_cfg.offset := #Ultimate.alloc(16);
    call write~int(0, ~#dma_cfg.base, ~#dma_cfg.offset + 0, 4);
    call write~int(0, ~#dma_cfg.base, ~#dma_cfg.offset + 4, 4);
    call write~int(0, ~#dma_cfg.base, ~#dma_cfg.offset + 8, 4);
    call write~int(0, ~#dma_cfg.base, ~#dma_cfg.offset + 12, 4);
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_timer_state_5, ~ldv_state_variable_8, ~ldv_state_variable_15, ~ldv_state_variable_20, ~ldv_state_variable_0, ~ldv_state_variable_21, ~ldv_state_variable_5, ~ldv_state_variable_13, ~ldv_irq_3_1, ~ldv_irq_2_0, ~ldv_state_variable_12, ~ldv_irq_3_2, ~ldv_state_variable_22, ~ldv_state_variable_14, ~ldv_state_variable_17, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~ldv_state_variable_19, ~ldv_irq_2_2, ~ldv_state_variable_9, ~ldv_irq_line_2_0, ~ldv_timer_state_4, ~ref_cnt, ~ldv_irq_line_1_1, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_3_0, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_irq_line_1_2, ~ldv_state_variable_23, ~ldv_irq_line_2_3, ~ldv_irq_3_0, ~ldv_irq_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_1_3, ~ldv_irq_data_3_3.base, ~ldv_irq_data_3_3.offset, ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_line_3_2, ~ldv_state_variable_10, ~ldv_irq_1_0, ~ldv_irq_data_3_1.base, ~ldv_irq_data_3_1.offset, ~ldv_state_variable_6, ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset, ~ldv_state_variable_16, ~ldv_irq_data_3_0.base, ~ldv_irq_data_3_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset, ~ldv_state_variable_2, ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_state_variable_11, ~ldv_irq_1_2, ~LDV_IN_INTERRUPT, ~ldv_irq_1_1, ~ldv_state_variable_18, ~ldv_irq_2_3, ~ldv_irq_line_3_1, ~ldv_irq_line_1_3, ~ldv_state_variable_3, ~ldv_irq_line_1_0, ~ldv_irq_data_3_2.base, ~ldv_irq_data_3_2.offset, ~ldv_irq_3_3, ~ldv_state_variable_4, ~ldv_irq_line_3_3, ~watchdog, ~debug, ~phyaddr, ~dma_txsize, ~dma_rxsize, ~flow_ctrl, ~pause, ~tc, ~buf_sz, ~default_msg_level, ~eee_timer, ~chain_mode, ~ldv_retval_0, ~ldv_retval_5, ~ldv_retval_1, ~ldv_retval_6, ~ldv_retval_7, ~ldv_retval_8, ~ldv_retval_28, ~ldv_retval_20, ~ldv_retval_18, ~ldv_retval_26, ~ldv_retval_23, ~ldv_retval_11, ~ldv_retval_25, ~ldv_retval_22, ~ldv_retval_27, ~ldv_retval_15, ~ldv_retval_16, ~ldv_retval_29, ~ldv_retval_24, ~ldv_retval_19, ~ldv_retval_14, ~ldv_retval_17, ~ldv_retval_12, ~ldv_retval_21, ~ldv_retval_13, ~ldv_retval_10, ~ldv_retval_9, ~ldv_retval_4, ~ldv_retval_3, ~ldv_retval_2, ~ldv_spin, ~ldv_timer_list_5.base, ~ldv_timer_list_5.offset, ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, ~chain_mode_ops_group0.base, ~chain_mode_ops_group0.offset, ~stmmac_ptp_clock_ops_group0.base, ~stmmac_ptp_clock_ops_group0.offset, ~stmmac_ethtool_ops_group3.base, ~stmmac_ethtool_ops_group3.offset, ~dwmac100_dma_ops_group0.base, ~dwmac100_dma_ops_group0.offset, ~stmmac_rings_status_fops_group2.base, ~stmmac_rings_status_fops_group2.offset, ~stmmac_pltfr_driver_group0.base, ~stmmac_pltfr_driver_group0.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~stmmac_ethtool_ops_group1.base, ~stmmac_ethtool_ops_group1.offset, ~ndesc_ops_group1.base, ~ndesc_ops_group1.offset, ~stmmac_pltfr_pm_ops_group1.base, ~stmmac_pltfr_pm_ops_group1.offset, ~stmmac_ethtool_ops_group0.base, ~stmmac_ethtool_ops_group0.offset, ~stmmac_rings_status_fops_group1.base, ~stmmac_rings_status_fops_group1.offset, ~stmmac_ethtool_ops_group2.base, ~stmmac_ethtool_ops_group2.offset, ~stmmac_dma_cap_fops_group2.base, ~stmmac_dma_cap_fops_group2.offset, ~enh_desc_ops_group0.base, ~enh_desc_ops_group0.offset, ~enh_desc_ops_group1.base, ~enh_desc_ops_group1.offset, ~stmmac_dma_cap_fops_group1.base, ~stmmac_dma_cap_fops_group1.offset, ~ring_mode_ops_group0.base, ~ring_mode_ops_group0.offset, ~stmmac_ethtool_ops_group5.base, ~stmmac_ethtool_ops_group5.offset, ~ndesc_ops_group0.base, ~ndesc_ops_group0.offset, ~stmmac_ethtool_ops_group4.base, ~stmmac_ethtool_ops_group4.offset, ~stmmac_pci_driver_group0.base, ~stmmac_pci_driver_group0.offset, ~#ring_mode_ops.base, ~#ring_mode_ops.offset, ~#chain_mode_ops.base, ~#chain_mode_ops.offset, ~#enh_desc_ops.base, ~#enh_desc_ops.offset, ~#ndesc_ops.base, ~#ndesc_ops.offset, ~#stmmac_ptp.base, ~#stmmac_ptp.offset, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset, ~#stmmac_mmc.base, ~#stmmac_mmc.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset, ~#dwmac100_ops.base, ~#dwmac100_ops.offset, ~stmmac_ptp_clock_ops.owner.base, ~stmmac_ptp_clock_ops.owner.offset, ~stmmac_ptp_clock_ops.name, ~stmmac_ptp_clock_ops.max_adj, ~stmmac_ptp_clock_ops.n_alarm, ~stmmac_ptp_clock_ops.n_ext_ts, ~stmmac_ptp_clock_ops.n_per_out, ~stmmac_ptp_clock_ops.n_pins, ~stmmac_ptp_clock_ops.pps, ~stmmac_ptp_clock_ops.pin_config.base, ~stmmac_ptp_clock_ops.pin_config.offset, ~stmmac_ptp_clock_ops.adjfreq.base, ~stmmac_ptp_clock_ops.adjfreq.offset, ~stmmac_ptp_clock_ops.adjtime.base, ~stmmac_ptp_clock_ops.adjtime.offset, ~stmmac_ptp_clock_ops.gettime.base, ~stmmac_ptp_clock_ops.gettime.offset, ~stmmac_ptp_clock_ops.settime.base, ~stmmac_ptp_clock_ops.settime.offset, ~stmmac_ptp_clock_ops.enable.base, ~stmmac_ptp_clock_ops.enable.offset, ~stmmac_ptp_clock_ops.verify.base, ~stmmac_ptp_clock_ops.verify.offset, ~#plat_dat.base, ~#plat_dat.offset, ~#mdio_data.base, ~#mdio_data.offset, ~#dma_cfg.base, ~#dma_cfg.offset, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, #valid, #length;

implementation ndesc_tx_set_on_chain(#in~p.base : int, #in~p.offset : int, #in~ring_size : int) returns (){
    var ~p.base : int, ~p.offset : int;
    var ~ring_size : int;

  loc21:
    ~p.base, ~p.offset := #in~p.base, #in~p.offset;
    ~ring_size := #in~ring_size;
    call write~int(1, ~p.base, ~p.offset + 0 + 0 + 24, 1);
    assume true;
    return;
}

procedure ndesc_tx_set_on_chain(#in~p.base : int, #in~p.offset : int, #in~ring_size : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation stmmac_tx_timer(#in~data : int) returns (){
    var ~data : int;
    var ~priv~874.base : int, ~priv~874.offset : int;

  loc22:
    ~data := #in~data;
    havoc ~priv~874.base, ~priv~874.offset;
    ~priv~874.base, ~priv~874.offset := 0, (if ~data % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~data % 18446744073709551616 % 18446744073709551616 else ~data % 18446744073709551616 % 18446744073709551616 - 18446744073709551616);
    call stmmac_tx_clean(~priv~874.base, ~priv~874.offset);
    return;
}

procedure stmmac_tx_timer(#in~data : int) returns ();
modifies #valid, #length, ~ldv_spin, ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, ~ldv_timer_state_4, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~watchdog, ~dma_rxsize, ~dma_txsize, ~buf_sz, ~flow_ctrl, ~pause, ~eee_timer, ~ldv_state_variable_21, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~tc;

implementation ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int){
    var #t~nondet47 : int;
    var #t~malloc48.base : int, #t~malloc48.offset : int;
    var ~size : int;
    var ~p~94.base : int, ~p~94.offset : int;
    var ~tmp~94.base : int, ~tmp~94.offset : int;
    var ~tmp___0~94 : int;

  loc23:
    ~size := #in~size;
    havoc ~p~94.base, ~p~94.offset;
    havoc ~tmp~94.base, ~tmp~94.offset;
    havoc ~tmp___0~94;
    assume -2147483648 <= #t~nondet47 && #t~nondet47 <= 2147483647;
    ~tmp___0~94 := #t~nondet47;
    havoc #t~nondet47;
    assume ~tmp___0~94 != 0;
    #res.base, #res.offset := 0, 0;
    assume true;
    return;
}

procedure ldv_zalloc(#in~size : int) returns (#res.base : int, #res.offset : int);
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ##fun~$Pointer$~X~int~TO~VOID(#in~448.base : int, #in~448.offset : int, #in~449 : int, #in~#fp.base : int, #in~#fp.offset : int) returns (){
    var #~448.base : int, #~448.offset : int;
    var #~449 : int;

  loc24:
    #~448.base, #~448.offset := #in~448.base, #in~448.offset;
    #~449 := #in~449;
    assume #in~#fp.base == #funAddr~ndesc_release_tx_desc.base && #in~#fp.offset == #funAddr~ndesc_release_tx_desc.offset;
    call ndesc_release_tx_desc(#~448.base, #~448.offset, #~449);
    assume true;
    return;
}

procedure ##fun~$Pointer$~X~int~TO~VOID(#in~448.base : int, #in~448.offset : int, #in~449 : int, #in~#fp.base : int, #in~#fp.offset : int) returns ();
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation stmmac_hw_setup(#in~dev.base : int, #in~dev.offset : int) returns (#res : int){
    var #t~ret1599.base : int, #t~ret1599.offset : int;
    var #t~ret1600 : int;
    var #t~nondet1601.base : int, #t~nondet1601.offset : int;
    var #t~ret1602 : int;
    var #t~ret1603 : int;
    var #t~nondet1604.base : int, #t~nondet1604.offset : int;
    var #t~ret1605 : int;
    var #t~mem1609.base : int, #t~mem1609.offset : int;
    var #t~mem1610.base : int, #t~mem1610.offset : int;
    var #t~mem1611.base : int, #t~mem1611.offset : int;
    var #t~mem1612.base : int, #t~mem1612.offset : int;
    var #t~mem1613.base : int, #t~mem1613.offset : int;
    var #t~mem1614.base : int, #t~mem1614.offset : int;
    var #t~mem1615.base : int, #t~mem1615.offset : int;
    var #t~mem1618.base : int, #t~mem1618.offset : int;
    var #t~mem1619.base : int, #t~mem1619.offset : int;
    var #t~mem1620.base : int, #t~mem1620.offset : int;
    var #t~mem1624.base : int, #t~mem1624.offset : int;
    var #t~mem1625 : int;
    var #t~mem1626.base : int, #t~mem1626.offset : int;
    var #t~mem1627.base : int, #t~mem1627.offset : int;
    var #t~mem1628.base : int, #t~mem1628.offset : int;
    var #t~mem1629.base : int, #t~mem1629.offset : int;
    var #t~ret1630 : int;
    var #t~nondet1631.base : int, #t~nondet1631.offset : int;
    var #t~ret1632 : int;
    var #t~ret1633 : int;
    var #t~nondet1634.base : int, #t~nondet1634.offset : int;
    var #t~ret1635 : int;
    var #t~nondet1636.base : int, #t~nondet1636.offset : int;
    var #t~nondet1638.base : int, #t~nondet1638.offset : int;
    var #t~nondet1640.base : int, #t~nondet1640.offset : int;
    var #t~nondet1642.base : int, #t~nondet1642.offset : int;
    var #t~mem1646 : int;
    var #t~ret1647 : int;
    var #t~nondet1648.base : int, #t~nondet1648.offset : int;
    var #t~ret1649 : int;
    var #t~mem1653.base : int, #t~mem1653.offset : int;
    var #t~mem1654.base : int, #t~mem1654.offset : int;
    var #t~mem1655.base : int, #t~mem1655.offset : int;
    var #t~mem1656.base : int, #t~mem1656.offset : int;
    var #t~mem1660.base : int, #t~mem1660.offset : int;
    var #t~mem1661.base : int, #t~mem1661.offset : int;
    var #t~mem1662.base : int, #t~mem1662.offset : int;
    var #t~mem1663.base : int, #t~mem1663.offset : int;
    var #t~mem1664 : int;
    var #t~mem1668.base : int, #t~mem1668.offset : int;
    var #t~mem1669.base : int, #t~mem1669.offset : int;
    var #t~mem1670.base : int, #t~mem1670.offset : int;
    var #t~mem1671.base : int, #t~mem1671.offset : int;
    var #t~mem1675.base : int, #t~mem1675.offset : int;
    var #t~mem1676.base : int, #t~mem1676.offset : int;
    var #t~mem1677.base : int, #t~mem1677.offset : int;
    var #t~mem1678.base : int, #t~mem1678.offset : int;
    var #t~ret1680 : ~bool;
    var #t~mem1682 : int;
    var #t~mem1683.base : int, #t~mem1683.offset : int;
    var #t~mem1684.base : int, #t~mem1684.offset : int;
    var #t~mem1685.base : int, #t~mem1685.offset : int;
    var #t~short1686 : bool;
    var #t~mem1691.base : int, #t~mem1691.offset : int;
    var #t~mem1692.base : int, #t~mem1692.offset : int;
    var #t~mem1693.base : int, #t~mem1693.offset : int;
    var #t~mem1694.base : int, #t~mem1694.offset : int;
    var #t~mem1695 : int;
    var #t~mem1696.base : int, #t~mem1696.offset : int;
    var #t~mem1697.base : int, #t~mem1697.offset : int;
    var #t~mem1698.base : int, #t~mem1698.offset : int;
    var #t~short1699 : bool;
    var #t~mem1705.base : int, #t~mem1705.offset : int;
    var #t~mem1706.base : int, #t~mem1706.offset : int;
    var #t~mem1707.base : int, #t~mem1707.offset : int;
    var #t~mem1708.base : int, #t~mem1708.offset : int;
    var ~dev.base : int, ~dev.offset : int;
    var ~priv~878.base : int, ~priv~878.offset : int;
    var ~tmp~878.base : int, ~tmp~878.offset : int;
    var ~ret~878 : int;
    var ~#descriptor~878.base : int, ~#descriptor~878.offset : int;
    var ~tmp___0~878 : int;
    var ~tmp___1~878 : ~bool;

  loc25:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    havoc ~priv~878.base, ~priv~878.offset;
    havoc ~tmp~878.base, ~tmp~878.offset;
    havoc ~ret~878;
    call ~#descriptor~878.base, ~#descriptor~878.offset := #Ultimate.alloc(37);
    havoc ~tmp___0~878;
    havoc ~tmp___1~878;
    call #t~ret1599.base, #t~ret1599.offset := netdev_priv(~dev.base, ~dev.offset);
    ~tmp~878.base, ~tmp~878.offset := #t~ret1599.base, #t~ret1599.offset;
    havoc #t~ret1599.base, #t~ret1599.offset;
    ~priv~878.base, ~priv~878.offset := ~tmp~878.base, ~tmp~878.offset;
    call #t~ret1600 := init_dma_desc_rings(~dev.base, ~dev.offset);
    return;
}

procedure stmmac_hw_setup(#in~dev.base : int, #in~dev.offset : int) returns (#res : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_spin, #valid, #length, ~watchdog, ~dma_rxsize, ~dma_txsize, ~buf_sz, ~flow_ctrl, ~pause, ~eee_timer, ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, ~ldv_timer_state_4, ~ldv_state_variable_21, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~tc;

implementation stmmac_pci_resume(#in~pdev.base : int, #in~pdev.offset : int) returns (#res : int){
    var #t~ret5164.base : int, #t~ret5164.offset : int;
    var #t~ret5165 : int;
    var #t~ret5166 : int;
    var ~pdev.base : int, ~pdev.offset : int;
    var ~ndev~3203.base : int, ~ndev~3203.offset : int;
    var ~tmp~3203.base : int, ~tmp~3203.offset : int;
    var ~tmp___0~3203 : int;

  loc26:
    ~pdev.base, ~pdev.offset := #in~pdev.base, #in~pdev.offset;
    havoc ~ndev~3203.base, ~ndev~3203.offset;
    havoc ~tmp~3203.base, ~tmp~3203.offset;
    havoc ~tmp___0~3203;
    call #t~ret5164.base, #t~ret5164.offset := pci_get_drvdata(~pdev.base, ~pdev.offset);
    ~tmp~3203.base, ~tmp~3203.offset := #t~ret5164.base, #t~ret5164.offset;
    havoc #t~ret5164.base, #t~ret5164.offset;
    ~ndev~3203.base, ~ndev~3203.offset := ~tmp~3203.base, ~tmp~3203.offset;
    call #t~ret5165 := pci_set_power_state(~pdev.base, ~pdev.offset, 0);
    assume -2147483648 <= #t~ret5165 && #t~ret5165 <= 2147483647;
    havoc #t~ret5165;
    call pci_restore_state(~pdev.base, ~pdev.offset);
    call #t~ret5166 := stmmac_resume(~ndev~3203.base, ~ndev~3203.offset);
    return;
}

procedure stmmac_pci_resume(#in~pdev.base : int, #in~pdev.offset : int) returns (#res : int);
modifies ~ldv_spin, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~watchdog, ~dma_rxsize, ~dma_txsize, ~buf_sz, ~flow_ctrl, ~pause, ~eee_timer, ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, ~ldv_timer_state_4, ~ldv_state_variable_21, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~tc;

implementation constant_test_bit(#in~nr : int, #in~addr.base : int, #in~addr.offset : int) returns (#res : int){
    var #t~mem1 : int;
    var ~nr : int;
    var ~addr.base : int, ~addr.offset : int;

  loc27:
    ~nr := #in~nr;
    ~addr.base, ~addr.offset := #in~addr.base, #in~addr.offset;
    call #t~mem1 := read~int(~addr.base, ~addr.offset + (if ~shiftRight(~nr, 6) % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~shiftRight(~nr, 6) % 18446744073709551616 % 18446744073709551616 else ~shiftRight(~nr, 6) % 18446744073709551616 % 18446744073709551616 - 18446744073709551616) * 8, 8);
    #res := ~bitwiseAnd((if ~shiftRight(#t~mem1, ~bitwiseAnd((if ~nr % 4294967296 <= 2147483647 then ~nr % 4294967296 else ~nr % 4294967296 - 4294967296), 63)) % 18446744073709551616 % 4294967296 <= 2147483647 then ~shiftRight(#t~mem1, ~bitwiseAnd((if ~nr % 4294967296 <= 2147483647 then ~nr % 4294967296 else ~nr % 4294967296 - 4294967296), 63)) % 18446744073709551616 % 4294967296 else ~shiftRight(#t~mem1, ~bitwiseAnd((if ~nr % 4294967296 <= 2147483647 then ~nr % 4294967296 else ~nr % 4294967296 - 4294967296), 63)) % 18446744073709551616 % 4294967296 - 4294967296), 1);
    havoc #t~mem1;
    assume true;
    return;
}

procedure constant_test_bit(#in~nr : int, #in~addr.base : int, #in~addr.offset : int) returns (#res : int);
modifies ;

implementation ULTIMATE.start() returns (){
    var #t~ret5244 : int;

  loc28:
    call ULTIMATE.init();
    call #t~ret5244 := main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~ldv_timer_state_5, ~ldv_state_variable_8, ~ldv_state_variable_15, ~ldv_state_variable_20, ~ldv_state_variable_0, ~ldv_state_variable_21, ~ldv_state_variable_5, ~ldv_state_variable_13, ~ldv_irq_3_1, ~ldv_irq_2_0, ~ldv_state_variable_12, ~ldv_irq_3_2, ~ldv_state_variable_22, ~ldv_state_variable_14, ~ldv_state_variable_17, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~ldv_state_variable_19, ~ldv_irq_2_2, ~ldv_state_variable_9, ~ldv_irq_line_2_0, ~ldv_timer_state_4, ~ref_cnt, ~ldv_irq_line_1_1, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_3_0, ~ldv_state_variable_1, ~ldv_state_variable_7, ~ldv_irq_line_1_2, ~ldv_state_variable_23, ~ldv_irq_line_2_3, ~ldv_irq_3_0, ~ldv_irq_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_1_3, ~ldv_irq_data_3_3.base, ~ldv_irq_data_3_3.offset, ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_line_3_2, ~ldv_state_variable_10, ~ldv_irq_1_0, ~ldv_irq_data_3_1.base, ~ldv_irq_data_3_1.offset, ~ldv_state_variable_6, ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset, ~ldv_state_variable_16, ~ldv_irq_data_3_0.base, ~ldv_irq_data_3_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset, ~ldv_state_variable_2, ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_state_variable_11, ~ldv_irq_1_2, ~LDV_IN_INTERRUPT, ~ldv_irq_1_1, ~ldv_state_variable_18, ~ldv_irq_2_3, ~ldv_irq_line_3_1, ~ldv_irq_line_1_3, ~ldv_state_variable_3, ~ldv_irq_line_1_0, ~ldv_irq_data_3_2.base, ~ldv_irq_data_3_2.offset, ~ldv_irq_3_3, ~ldv_state_variable_4, ~ldv_irq_line_3_3, ~watchdog, ~debug, ~phyaddr, ~dma_txsize, ~dma_rxsize, ~flow_ctrl, ~pause, ~tc, ~buf_sz, ~default_msg_level, ~eee_timer, ~chain_mode, ~ldv_retval_0, ~ldv_retval_5, ~ldv_retval_1, ~ldv_retval_6, ~ldv_retval_7, ~ldv_retval_8, ~ldv_retval_28, ~ldv_retval_20, ~ldv_retval_18, ~ldv_retval_26, ~ldv_retval_23, ~ldv_retval_11, ~ldv_retval_25, ~ldv_retval_22, ~ldv_retval_27, ~ldv_retval_15, ~ldv_retval_16, ~ldv_retval_29, ~ldv_retval_24, ~ldv_retval_19, ~ldv_retval_14, ~ldv_retval_17, ~ldv_retval_12, ~ldv_retval_21, ~ldv_retval_13, ~ldv_retval_10, ~ldv_retval_9, ~ldv_retval_4, ~ldv_retval_3, ~ldv_retval_2, ~ldv_spin, ~ldv_timer_list_5.base, ~ldv_timer_list_5.offset, ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, ~chain_mode_ops_group0.base, ~chain_mode_ops_group0.offset, ~stmmac_ptp_clock_ops_group0.base, ~stmmac_ptp_clock_ops_group0.offset, ~stmmac_ethtool_ops_group3.base, ~stmmac_ethtool_ops_group3.offset, ~dwmac100_dma_ops_group0.base, ~dwmac100_dma_ops_group0.offset, ~stmmac_rings_status_fops_group2.base, ~stmmac_rings_status_fops_group2.offset, ~stmmac_pltfr_driver_group0.base, ~stmmac_pltfr_driver_group0.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~stmmac_ethtool_ops_group1.base, ~stmmac_ethtool_ops_group1.offset, ~ndesc_ops_group1.base, ~ndesc_ops_group1.offset, ~stmmac_pltfr_pm_ops_group1.base, ~stmmac_pltfr_pm_ops_group1.offset, ~stmmac_ethtool_ops_group0.base, ~stmmac_ethtool_ops_group0.offset, ~stmmac_rings_status_fops_group1.base, ~stmmac_rings_status_fops_group1.offset, ~stmmac_ethtool_ops_group2.base, ~stmmac_ethtool_ops_group2.offset, ~stmmac_dma_cap_fops_group2.base, ~stmmac_dma_cap_fops_group2.offset, ~enh_desc_ops_group0.base, ~enh_desc_ops_group0.offset, ~enh_desc_ops_group1.base, ~enh_desc_ops_group1.offset, ~stmmac_dma_cap_fops_group1.base, ~stmmac_dma_cap_fops_group1.offset, ~ring_mode_ops_group0.base, ~ring_mode_ops_group0.offset, ~stmmac_ethtool_ops_group5.base, ~stmmac_ethtool_ops_group5.offset, ~ndesc_ops_group0.base, ~ndesc_ops_group0.offset, ~stmmac_ethtool_ops_group4.base, ~stmmac_ethtool_ops_group4.offset, ~stmmac_pci_driver_group0.base, ~stmmac_pci_driver_group0.offset, ~#ring_mode_ops.base, ~#ring_mode_ops.offset, ~#chain_mode_ops.base, ~#chain_mode_ops.offset, ~#enh_desc_ops.base, ~#enh_desc_ops.offset, ~#ndesc_ops.base, ~#ndesc_ops.offset, ~#stmmac_ptp.base, ~#stmmac_ptp.offset, ~#stmmac_pltfr_driver.base, ~#stmmac_pltfr_driver.offset, ~#stmmac_pci_driver.base, ~#stmmac_pci_driver.offset, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~#stmmac_rings_status_fops.base, ~#stmmac_rings_status_fops.offset, ~#stmmac_dma_cap_fops.base, ~#stmmac_dma_cap_fops.offset, ~#stmmac_netdev_ops.base, ~#stmmac_netdev_ops.offset, ~#stmmac_gstrings_stats.base, ~#stmmac_gstrings_stats.offset, ~#stmmac_mmc.base, ~#stmmac_mmc.offset, ~#stmmac_ethtool_ops.base, ~#stmmac_ethtool_ops.offset, ~#dwmac1000_dma_ops.base, ~#dwmac1000_dma_ops.offset, ~#dwmac1000_ops.base, ~#dwmac1000_ops.offset, ~#dwmac100_dma_ops.base, ~#dwmac100_dma_ops.offset, ~#dwmac100_ops.base, ~#dwmac100_ops.offset, ~stmmac_ptp_clock_ops.owner.base, ~stmmac_ptp_clock_ops.owner.offset, ~stmmac_ptp_clock_ops.name, ~stmmac_ptp_clock_ops.max_adj, ~stmmac_ptp_clock_ops.n_alarm, ~stmmac_ptp_clock_ops.n_ext_ts, ~stmmac_ptp_clock_ops.n_per_out, ~stmmac_ptp_clock_ops.n_pins, ~stmmac_ptp_clock_ops.pps, ~stmmac_ptp_clock_ops.pin_config.base, ~stmmac_ptp_clock_ops.pin_config.offset, ~stmmac_ptp_clock_ops.adjfreq.base, ~stmmac_ptp_clock_ops.adjfreq.offset, ~stmmac_ptp_clock_ops.adjtime.base, ~stmmac_ptp_clock_ops.adjtime.offset, ~stmmac_ptp_clock_ops.gettime.base, ~stmmac_ptp_clock_ops.gettime.offset, ~stmmac_ptp_clock_ops.settime.base, ~stmmac_ptp_clock_ops.settime.offset, ~stmmac_ptp_clock_ops.enable.base, ~stmmac_ptp_clock_ops.enable.offset, ~stmmac_ptp_clock_ops.verify.base, ~stmmac_ptp_clock_ops.verify.offset, ~#plat_dat.base, ~#plat_dat.offset, ~#mdio_data.base, ~#mdio_data.offset, ~#dma_cfg.base, ~#dma_cfg.offset, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~ldv_state_variable_11, ~ldv_state_variable_21, ~ldv_state_variable_7, ~ldv_state_variable_17, ~ldv_state_variable_2, ~ldv_state_variable_22, ~ldv_state_variable_1, ~ldv_state_variable_18, ~ref_cnt, ~ldv_state_variable_0, ~ldv_state_variable_23, ~ldv_state_variable_16, ~ldv_state_variable_13, ~ldv_state_variable_6, ~ldv_state_variable_3, ~ldv_state_variable_9, ~ldv_state_variable_12, ~ldv_state_variable_20, ~ldv_state_variable_14, ~ldv_state_variable_15, ~ldv_state_variable_8, ~ldv_state_variable_4, ~ldv_state_variable_19, ~ldv_state_variable_10, ~ldv_state_variable_5, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_5, ~ldv_retval_6, ~ldv_retval_7;
modifies #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~dwmac100_dma_ops_group0.base, ~dwmac100_dma_ops_group0.offset, ~stmmac_ethtool_ops_group0.base, ~stmmac_ethtool_ops_group0.offset, ~stmmac_ethtool_ops_group2.base, ~stmmac_ethtool_ops_group2.offset, ~stmmac_ethtool_ops_group1.base, ~stmmac_ethtool_ops_group1.offset, ~stmmac_ethtool_ops_group3.base, ~stmmac_ethtool_ops_group3.offset, ~stmmac_ethtool_ops_group4.base, ~stmmac_ethtool_ops_group4.offset, ~stmmac_ethtool_ops_group5.base, ~stmmac_ethtool_ops_group5.offset, ~stmmac_ptp_clock_ops_group0.base, ~stmmac_ptp_clock_ops_group0.offset, ~stmmac_pci_driver_group0.base, ~stmmac_pci_driver_group0.offset, ~stmmac_dma_cap_fops_group1.base, ~stmmac_dma_cap_fops_group1.offset, ~stmmac_dma_cap_fops_group2.base, ~stmmac_dma_cap_fops_group2.offset, ~ndesc_ops_group0.base, ~ndesc_ops_group0.offset, ~ndesc_ops_group1.base, ~ndesc_ops_group1.offset, ~stmmac_pltfr_pm_ops_group1.base, ~stmmac_pltfr_pm_ops_group1.offset, ~enh_desc_ops_group0.base, ~enh_desc_ops_group0.offset, ~enh_desc_ops_group1.base, ~enh_desc_ops_group1.offset, ~chain_mode_ops_group0.base, ~chain_mode_ops_group0.offset, ~stmmac_rings_status_fops_group1.base, ~stmmac_rings_status_fops_group1.offset, ~stmmac_rings_status_fops_group2.base, ~stmmac_rings_status_fops_group2.offset, ~ring_mode_ops_group0.base, ~ring_mode_ops_group0.offset, ~ldv_state_variable_16, ~ldv_retval_8, ~ref_cnt, ~ldv_state_variable_14, ~ldv_retval_28, ~ldv_state_variable_11, ~ldv_state_variable_12, ~ldv_state_variable_15, ~ldv_state_variable_13, ~ldv_state_variable_8, ~ldv_state_variable_6, ~ldv_state_variable_17, ~ldv_spin, ~ldv_state_variable_10, ~stmmac_pltfr_driver_group0.base, ~stmmac_pltfr_driver_group0.offset, ~watchdog, ~dma_rxsize, ~dma_txsize, ~buf_sz, ~flow_ctrl, ~pause, ~eee_timer, ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, ~ldv_timer_state_4, ~ldv_state_variable_21, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~tc, ~ldv_state_variable_20, ~ldv_retval_29, ~ldv_retval_27, ~ldv_state_variable_9, ~ldv_retval_26, ~ldv_retval_25, ~ldv_retval_24, ~ldv_retval_23, ~ldv_retval_22, ~ldv_retval_21, ~ldv_retval_20, ~ldv_retval_19, ~ldv_retval_18, ~ldv_retval_17, ~ldv_retval_16, ~ldv_retval_15, ~ldv_retval_14, ~ldv_retval_13, ~ldv_retval_12, ~ldv_retval_11, ~ldv_retval_10, ~ldv_retval_9, ~LDV_IN_INTERRUPT, ~ldv_irq_3_0, ~ldv_irq_1_0, ~ldv_state_variable_19, ~ldv_state_variable_18, ~ldv_retval_4, ~ldv_state_variable_7, ~ldv_retval_3, ~ldv_retval_2, ~ldv_timer_state_5, ~ldv_state_variable_2, ~ldv_state_variable_22, ~ldv_state_variable_1, ~ldv_state_variable_0, ~ldv_state_variable_23, ~ldv_state_variable_3, ~ldv_state_variable_4, ~ldv_state_variable_5, ~ldv_retval_1, ~ldv_retval_0, ~ldv_retval_5, ~ldv_retval_6, ~ldv_retval_7;

implementation ndesc_release_tx_desc(#in~p.base : int, #in~p.offset : int, #in~mode : int) returns (){
    var #t~mem4441 : int;
    var #t~memset4442.base : int, #t~memset4442.offset : int;
    var ~p.base : int, ~p.offset : int;
    var ~mode : int;
    var ~ter~2805 : int;

  loc29:
    ~p.base, ~p.offset := #in~p.base, #in~p.offset;
    ~mode := #in~mode;
    havoc ~ter~2805;
    call #t~mem4441 := read~int(~p.base, ~p.offset + 0 + 0 + 25, 1);
    ~ter~2805 := #t~mem4441 % 256;
    havoc #t~mem4441;
    call #t~memset4442.base, #t~memset4442.offset := #Ultimate.C_memset(~p.base, ~p.offset, 0, 8);
    havoc #t~memset4442.base, #t~memset4442.offset;
    assume ~mode == 1;
    call ndesc_tx_set_on_chain(~p.base, ~p.offset, ~ter~2805);
    assume true;
    return;
}

procedure ndesc_release_tx_desc(#in~p.base : int, #in~p.offset : int, #in~mode : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation ldv_check_alloc_flags(#in~flags : int) returns (){
    var ~flags : int;

  loc30:
    ~flags := #in~flags;
    assume !(~ldv_spin == 0 || ~bitwiseAnd(~flags, 16) % 4294967296 == 0);
    call ldv_error();
    return;
}

procedure ldv_check_alloc_flags(#in~flags : int) returns ();
modifies ;

implementation choose_timer_4(#in~timer.base : int, #in~timer.offset : int) returns (){
    var #t~mem2652 : int;
    var #t~mem2653.base : int, #t~mem2653.offset : int;
    var ~timer.base : int, ~timer.offset : int;

  loc31:
    ~timer.base, ~timer.offset := #in~timer.base, #in~timer.offset;
    ~LDV_IN_INTERRUPT := 2;
    call #t~mem2652 := read~int(~timer.base, ~timer.offset + 40, 8);
    call #t~mem2653.base, #t~mem2653.offset := read~$Pointer$(~timer.base, ~timer.offset + 32, 8);
    call ##fun~int~TO~VOID(#t~mem2652, #t~mem2653.base, #t~mem2653.offset);
    return;
}

procedure choose_timer_4(#in~timer.base : int, #in~timer.offset : int) returns ();
modifies ~LDV_IN_INTERRUPT, ~ldv_timer_state_4, ~ldv_timer_list_4.base, ~ldv_timer_list_4.offset, #memory_int, ~ldv_spin, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~watchdog, ~dma_rxsize, ~dma_txsize, ~buf_sz, ~flow_ctrl, ~pause, ~eee_timer, ~ldv_state_variable_21, ~ldv_irq_2_0, ~ldv_irq_2_1, ~ldv_irq_2_2, ~ldv_irq_2_3, ~stmmac_fs_dir.base, ~stmmac_fs_dir.offset, ~stmmac_rings_status.base, ~stmmac_rings_status.offset, ~stmmac_dma_cap.base, ~stmmac_dma_cap.offset, ~ldv_irq_line_2_0, ~ldv_irq_data_2_0.base, ~ldv_irq_data_2_0.offset, ~ldv_irq_line_2_1, ~ldv_irq_data_2_1.base, ~ldv_irq_data_2_1.offset, ~ldv_irq_line_2_2, ~ldv_irq_data_2_2.base, ~ldv_irq_data_2_2.offset, ~ldv_irq_line_2_3, ~ldv_irq_data_2_3.base, ~ldv_irq_data_2_3.offset, ~stmmac_netdev_ops_group1.base, ~stmmac_netdev_ops_group1.offset, ~tc;

procedure __VERIFIER_nondet_loff_t() returns (#res : ~loff_t);
modifies ;

procedure device_set_wakeup_enable(#in~2751.base : int, #in~2751.offset : int, #in~2752 : int) returns (#res : int);
modifies ;

procedure ldv_ndo_uninit_21() returns (#res : int);
modifies ;

procedure pci_release_regions(#in~5096.base : int, #in~5096.offset : int) returns ();
modifies ;

procedure pm_wakeup_event(#in~106.base : int, #in~106.offset : int, #in~107 : int) returns ();
modifies ;

procedure reset_control_deassert(#in~355.base : int, #in~355.offset : int) returns (#res : int);
modifies ;

procedure ethtool_op_get_link(#in~2755.base : int, #in~2755.offset : int) returns (#res : ~u32);
modifies ;

procedure free_irq(#in~79 : int, #in~80.base : int, #in~80.offset : int) returns ();
modifies ;

procedure __might_sleep(#in~5.base : int, #in~5.offset : int, #in~6 : int, #in~7 : int) returns ();
modifies ;

procedure netif_napi_del(#in~256.base : int, #in~256.offset : int) returns ();
modifies ;

procedure crc32_le(#in~3528 : int, #in~3529.base : int, #in~3529.offset : int, #in~3530 : int) returns (#res : ~u32);
modifies ;

procedure netdev_err(#in~4924.base : int, #in~4924.offset : int, #in~4925.base : int, #in~4925.offset : int) returns (#res : int);
modifies ;

procedure ldv_init_6() returns (#res : int);
modifies ;

procedure phy_start_aneg(#in~2762.base : int, #in~2762.offset : int) returns (#res : int);
modifies ;

procedure register_netdev(#in~294.base : int, #in~294.offset : int) returns (#res : int);
modifies ;

procedure sprintf(#in~3129.base : int, #in~3129.offset : int, #in~3130.base : int, #in~3130.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_irq(#in~2749.base : int, #in~2749.offset : int) returns ();
modifies ;

procedure usecs_to_jiffies(#in~33 : int) returns (#res : int);
modifies ;

procedure reset_control_assert(#in~354.base : int, #in~354.offset : int) returns (#res : int);
modifies ;

procedure eth_mac_addr(#in~301.base : int, #in~301.offset : int, #in~302.base : int, #in~302.offset : int) returns (#res : int);
modifies ;

procedure strlcpy(#in~2745.base : int, #in~2745.offset : int, #in~2746.base : int, #in~2746.offset : int, #in~2747 : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_u32() returns (#res : ~u32);
modifies ;

procedure debug_dma_mapping_error(#in~123.base : int, #in~123.offset : int, #in~124 : int) returns ();
modifies ;

procedure platform_get_resource(#in~4918.base : int, #in~4918.offset : int, #in~4919 : int, #in~4920 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure netif_device_attach(#in~281.base : int, #in~281.offset : int) returns ();
modifies ;

procedure debugfs_remove(#in~333.base : int, #in~333.offset : int) returns ();
modifies ;

procedure debugfs_create_dir(#in~331.base : int, #in~331.offset : int, #in~332.base : int, #in~332.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure netif_device_detach(#in~280.base : int, #in~280.offset : int) returns ();
modifies ;

procedure __platform_driver_register(#in~334.base : int, #in~334.offset : int, #in~335.base : int, #in~335.offset : int) returns (#res : int);
modifies ;

procedure alloc_etherdev_mqs(#in~303 : int, #in~304 : int, #in~305 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __VERIFIER_nondet_size_t() returns (#res : int);
modifies ;

procedure debug_dma_free_coherent(#in~134.base : int, #in~134.offset : int, #in~135 : int, #in~136.base : int, #in~136.offset : int, #in~137 : int) returns ();
modifies ;

procedure netif_napi_add(#in~252.base : int, #in~252.offset : int, #in~253.base : int, #in~253.offset : int, #in~254.base : int, #in~254.offset : int, #in~255 : int) returns ();
modifies ;

procedure clk_unprepare(#in~50.base : int, #in~50.offset : int) returns ();
modifies ;

procedure _copy_from_user(#in~58.base : int, #in~58.offset : int, #in~59.base : int, #in~59.offset : int, #in~60 : int) returns (#res : int);
modifies ;

procedure pci_save_state(#in~5088.base : int, #in~5088.offset : int) returns (#res : int);
modifies ;

procedure __napi_schedule(#in~242.base : int, #in~242.offset : int) returns ();
modifies ;

procedure clk_disable(#in~54.base : int, #in~54.offset : int) returns ();
modifies ;

procedure __raw_spin_lock_init(#in~24.base : int, #in~24.offset : int, #in~25.base : int, #in~25.offset : int, #in~26.base : int, #in~26.offset : int) returns ();
modifies ;

procedure phy_print_status(#in~347.base : int, #in~347.offset : int) returns ();
modifies ;

procedure pinctrl_pm_select_sleep_state(#in~100.base : int, #in~100.offset : int) returns (#res : int);
modifies ;

procedure _dev_info(#in~110.base : int, #in~110.offset : int, #in~111.base : int, #in~111.offset : int) returns (#res : int);
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure ldv_initialize() returns ();
modifies ;

procedure __phys_addr(#in~13 : int) returns (#res : int);
modifies ;

procedure netdev_update_features(#in~296.base : int, #in~296.offset : int) returns ();
modifies ;

procedure ldv_release_16() returns (#res : int);
modifies ;

procedure ldv_release_14() returns (#res : int);
modifies ;

procedure pci_choose_state(#in~5092.base : int, #in~5092.offset : int, #in~5093.event : int) returns (#res : ~pci_power_t);
modifies ;

procedure syscon_regmap_lookup_by_phandle(#in~5176.base : int, #in~5176.offset : int, #in~5177.base : int, #in~5177.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure pci_iomap(#in~5081.base : int, #in~5081.offset : int, #in~5082 : int, #in~5083 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __netdev_alloc_skb(#in~225.base : int, #in~225.offset : int, #in~226 : int, #in~227 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ldv_setup_18() returns (#res : int);
modifies ;

procedure pci_disable_device(#in~5085.base : int, #in~5085.offset : int) returns ();
modifies ;

procedure ldv_release_18() returns (#res : int);
modifies ;

procedure ldv_setup_16() returns (#res : int);
modifies ;

procedure ldv_setup_14() returns (#res : int);
modifies ;

procedure pci_request_regions(#in~5094.base : int, #in~5094.offset : int, #in~5095.base : int, #in~5095.offset : int) returns (#res : int);
modifies ;

procedure ldv_restore_early_9() returns (#res : int);
modifies ;

procedure seq_lseek(#in~89.base : int, #in~89.offset : int, #in~90 : int, #in~91 : int) returns (#res : ~loff_t);
modifies ;

procedure __VERIFIER_assume(#in~expression : int) returns ();
modifies ;

procedure ldv_suspend_noirq_9() returns (#res : int);
modifies ;

procedure __const_udelay(#in~3797 : int) returns ();
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];

procedure __bad_percpu_size() returns ();
modifies ;

procedure ldv_ndo_init_21() returns (#res : int);
modifies ;

procedure _copy_to_user(#in~61.base : int, #in~61.offset : int, #in~62.base : int, #in~62.offset : int, #in~63 : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_irqrestore(#in~29.base : int, #in~29.offset : int, #in~30 : int) returns ();
modifies ;

procedure netdev_alert(#in~297.base : int, #in~297.offset : int, #in~298.base : int, #in~298.offset : int) returns (#res : int);
modifies ;

procedure mdiobus_register(#in~3137.base : int, #in~3137.offset : int) returns (#res : int);
modifies ;

procedure mod_timer(#in~38.base : int, #in~38.offset : int, #in~39 : int) returns (#res : int);
modifies ;

procedure memset(#in~14.base : int, #in~14.offset : int, #in~15 : int, #in~16 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ldv_freeze_noirq_9() returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_ulong() returns (#res : int);
modifies ;

procedure debug_dma_map_page(#in~116.base : int, #in~116.offset : int, #in~117.base : int, #in~117.offset : int, #in~118 : int, #in~119 : int, #in~120 : int, #in~121 : int, #in~122 : int) returns ();
modifies ;

procedure warn_slowpath_null(#in~11.base : int, #in~11.offset : int, #in~12 : int) returns ();
modifies ;

procedure devm_reset_control_get(#in~356.base : int, #in~356.offset : int, #in~357.base : int, #in~357.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure skb_put(#in~217.base : int, #in~217.offset : int, #in~218 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __pci_register_driver(#in~350.base : int, #in~350.offset : int, #in~351.base : int, #in~351.offset : int, #in~352.base : int, #in~352.offset : int) returns (#res : int);
modifies ;

procedure ldv_resume_noirq_9() returns (#res : int);
modifies ;

procedure __copy_from_user_overflow() returns ();
modifies ;

procedure dev_warn(#in~108.base : int, #in~108.offset : int, #in~109.base : int, #in~109.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock(#in~27.base : int, #in~27.offset : int) returns ();
modifies ;

procedure phy_ethtool_get_eee(#in~2770.base : int, #in~2770.offset : int, #in~2771.base : int, #in~2771.offset : int) returns (#res : int);
modifies ;

procedure ldv_thaw_noirq_9() returns (#res : int);
modifies ;

procedure msleep(#in~241 : int) returns ();
modifies ;

procedure platform_driver_unregister(#in~336.base : int, #in~336.offset : int) returns ();
modifies ;

procedure mdiobus_free(#in~3139.base : int, #in~3139.offset : int) returns ();
modifies ;

procedure pci_unregister_driver(#in~353.base : int, #in~353.offset : int) returns ();
modifies ;

procedure mdiobus_unregister(#in~3138.base : int, #in~3138.offset : int) returns ();
modifies ;

procedure regmap_read(#in~5183.base : int, #in~5183.offset : int, #in~5184 : int, #in~5185.base : int, #in~5185.offset : int) returns (#res : int);
modifies ;

procedure phy_get_eee_err(#in~2767.base : int, #in~2767.offset : int) returns (#res : int);
modifies ;

procedure ldv_suspend_late_9() returns (#res : int);
modifies ;

procedure netif_carrier_off(#in~279.base : int, #in~279.offset : int) returns ();
modifies ;

procedure skb_clone_tx_timestamp(#in~234.base : int, #in~234.offset : int) returns ();
modifies ;

procedure seq_read(#in~85.base : int, #in~85.offset : int, #in~86.base : int, #in~86.offset : int, #in~87 : int, #in~88.base : int, #in~88.offset : int) returns (#res : int);
modifies ;

procedure __bad_size_call_parameter() returns ();
modifies ;

procedure devm_kmalloc(#in~4909.base : int, #in~4909.offset : int, #in~4910 : int, #in~4911 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure disable_irq(#in~81 : int) returns ();
modifies ;

procedure phy_ethtool_gset(#in~2765.base : int, #in~2765.offset : int, #in~2766.base : int, #in~2766.offset : int) returns (#res : int);
modifies ;

procedure napi_gro_receive(#in~277.base : int, #in~277.offset : int, #in~278.base : int, #in~278.offset : int) returns (#res : ~gro_result_t);
modifies ;

procedure seq_printf(#in~92.base : int, #in~92.offset : int, #in~93.base : int, #in~93.offset : int) returns (#res : int);
modifies ;

procedure ldv_freeze_late_9() returns (#res : int);
modifies ;

procedure ldv_release_6() returns (#res : int);
modifies ;

procedure __memcpy(#in~2742.base : int, #in~2742.offset : int, #in~2743.base : int, #in~2743.offset : int, #in~2744 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure phy_mii_ioctl(#in~344.base : int, #in~344.offset : int, #in~345.base : int, #in~345.offset : int, #in~346 : int) returns (#res : int);
modifies ;

procedure bitrev32(#in~3527 : int) returns (#res : ~u32);
modifies ;

procedure __VERIFIER_nondet_uint() returns (#res : int);
modifies ;

procedure devm_ioremap_resource(#in~4913.base : int, #in~4913.offset : int, #in~4914.base : int, #in~4914.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure debug_dma_unmap_page(#in~125.base : int, #in~125.offset : int, #in~126 : int, #in~127 : int, #in~128 : int, #in~129 : int) returns ();
modifies ;

procedure __netif_schedule(#in~258.base : int, #in~258.offset : int) returns ();
modifies ;

procedure debug_dma_alloc_coherent(#in~130.base : int, #in~130.offset : int, #in~131 : int, #in~132 : int, #in~133.base : int, #in~133.offset : int) returns ();
modifies ;

procedure __kmalloc(#in~44 : int, #in~45 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure pinctrl_pm_select_default_state(#in~99.base : int, #in~99.offset : int) returns (#res : int);
modifies ;

procedure pci_set_master(#in~5086.base : int, #in~5086.offset : int) returns ();
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure ptp_clock_unregister(#in~4772.base : int, #in~4772.offset : int) returns (#res : int);
modifies ;

procedure add_timer(#in~40.base : int, #in~40.offset : int) returns ();
modifies ;

procedure ldv_poweroff_noirq_9() returns (#res : int);
modifies ;

procedure ldv_complete_9() returns (#res : int);
modifies ;

procedure clk_get_rate(#in~55.base : int, #in~55.offset : int) returns (#res : int);
modifies ;

procedure ptp_clock_index(#in~2772.base : int, #in~2772.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock(#in~28.base : int, #in~28.offset : int) returns ();
modifies ;

procedure getnstimeofday(#in~31.base : int, #in~31.offset : int) returns ();
modifies ;

procedure might_fault() returns ();
modifies ;

procedure phy_start(#in~342.base : int, #in~342.offset : int) returns ();
modifies ;

procedure printk(#in~2.base : int, #in~2.offset : int) returns (#res : int);
modifies ;

procedure calloc(#in~nmemb : int, #in~size : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure dev_err(#in~5178.base : int, #in~5178.offset : int, #in~5179.base : int, #in~5179.offset : int) returns (#res : int);
modifies ;

procedure regmap_write(#in~5180.base : int, #in~5180.offset : int, #in~5181 : int, #in~5182 : int) returns (#res : int);
modifies ;

procedure devm_clk_get(#in~51.base : int, #in~51.offset : int, #in~52.base : int, #in~52.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure get_random_bytes(#in~83.base : int, #in~83.offset : int, #in~84 : int) returns ();
modifies ;

procedure phy_ethtool_sset(#in~2763.base : int, #in~2763.offset : int, #in~2764.base : int, #in~2764.offset : int) returns (#res : int);
modifies ;

procedure __dev_kfree_skb_any(#in~275.base : int, #in~275.offset : int, #in~276 : int) returns ();
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure ldv_prepare_9() returns (#res : int);
modifies ;

procedure pci_restore_state(#in~5089.base : int, #in~5089.offset : int) returns ();
modifies ;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure free_netdev(#in~257.base : int, #in~257.offset : int) returns ();
modifies ;

procedure del_timer_sync(#in~41.base : int, #in~41.offset : int) returns (#res : int);
modifies ;

procedure single_open(#in~94.base : int, #in~94.offset : int, #in~95.base : int, #in~95.offset : int, #in~96.base : int, #in~96.offset : int) returns (#res : int);
modifies ;

procedure irq_set_irq_wake(#in~2758 : int, #in~2759 : int) returns (#res : int);
modifies ;

procedure clk_enable(#in~53.base : int, #in~53.offset : int) returns (#res : int);
modifies ;

procedure kfree(#in~43.base : int, #in~43.offset : int) returns ();
modifies ;

procedure ether_setup(#in~293.base : int, #in~293.offset : int) returns ();
modifies ;

procedure debugfs_create_file(#in~326.base : int, #in~326.offset : int, #in~327 : int, #in~328.base : int, #in~328.offset : int, #in~329.base : int, #in~329.offset : int, #in~330.base : int, #in~330.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];

procedure ldv_poweroff_late_9() returns (#res : int);
modifies ;

procedure single_release(#in~97.base : int, #in~97.offset : int, #in~98.base : int, #in~98.offset : int) returns (#res : int);
modifies ;

procedure skb_pull(#in~219.base : int, #in~219.offset : int, #in~220 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __VERIFIER_error() returns ();
modifies ;

procedure __dynamic_pr_debug(#in~3.base : int, #in~3.offset : int, #in~4.base : int, #in~4.offset : int) returns (#res : int);
modifies ;

procedure napi_complete(#in~246.base : int, #in~246.offset : int) returns ();
modifies ;

procedure eth_type_trans(#in~299.base : int, #in~299.offset : int, #in~300.base : int, #in~300.offset : int) returns (#res : ~__be16);
modifies ;

procedure platform_get_irq_byname(#in~4921.base : int, #in~4921.offset : int, #in~4922.base : int, #in~4922.offset : int) returns (#res : int);
modifies ;

procedure enable_irq(#in~82 : int) returns ();
modifies ;

procedure clk_prepare(#in~49.base : int, #in~49.offset : int) returns (#res : int);
modifies ;

procedure __builtin_prefetch(#in~0.base : int, #in~0.offset : int) returns ();
modifies ;

procedure pci_enable_device(#in~5084.base : int, #in~5084.offset : int) returns (#res : int);
modifies ;

procedure ldv_restore_noirq_9() returns (#res : int);
modifies ;

procedure device_set_wakeup_capable(#in~104.base : int, #in~104.offset : int, #in~105 : int) returns ();
modifies ;

procedure phy_connect(#in~337.base : int, #in~337.offset : int, #in~338.base : int, #in~338.offset : int, #in~339.base : int, #in~339.offset : int, #in~340 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ethtool_op_get_ts_info(#in~2756.base : int, #in~2756.offset : int, #in~2757.base : int, #in~2757.offset : int) returns (#res : int);
modifies ;

procedure ldv_resume_early_9() returns (#res : int);
modifies ;

procedure phy_disconnect(#in~341.base : int, #in~341.offset : int) returns ();
modifies ;

procedure memmove(#in~17.base : int, #in~17.offset : int, #in~18.base : int, #in~18.offset : int, #in~19 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure pci_iounmap(#in~5079.base : int, #in~5079.offset : int, #in~5080.base : int, #in~5080.offset : int) returns ();
modifies ;

procedure pci_clear_master(#in~5087.base : int, #in~5087.offset : int) returns ();
modifies ;

procedure pci_set_power_state(#in~5090.base : int, #in~5090.offset : int, #in~5091 : int) returns (#res : int);
modifies ;

procedure msecs_to_jiffies(#in~32 : int) returns (#res : int);
modifies ;

procedure phy_init_eee(#in~348.base : int, #in~348.offset : int, #in~349 : int) returns (#res : int);
modifies ;

procedure phy_ethtool_set_eee(#in~2768.base : int, #in~2768.offset : int, #in~2769.base : int, #in~2769.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock_irq(#in~2748.base : int, #in~2748.offset : int) returns ();
modifies ;

procedure __copy_to_user_overflow() returns ();
modifies ;

procedure snprintf(#in~8.base : int, #in~8.offset : int, #in~9 : int, #in~10.base : int, #in~10.offset : int) returns (#res : int);
modifies ;

procedure skb_tstamp_tx(#in~235.base : int, #in~235.offset : int, #in~236.base : int, #in~236.offset : int) returns ();
modifies ;

procedure ldv_thaw_early_9() returns (#res : int);
modifies ;

procedure ptp_clock_register(#in~4770.base : int, #in~4770.offset : int, #in~4771.base : int, #in~4771.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure mdiobus_alloc_size(#in~3135 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure request_threaded_irq(#in~72 : int, #in~73.base : int, #in~73.offset : int, #in~74.base : int, #in~74.offset : int, #in~75 : int, #in~76.base : int, #in~76.offset : int, #in~77.base : int, #in~77.offset : int) returns (#res : int);
modifies ;

procedure ldv_check_final_state() returns ();
modifies ;

procedure unregister_netdev(#in~295.base : int, #in~295.offset : int) returns ();
modifies ;

procedure phy_stop(#in~343.base : int, #in~343.offset : int) returns ();
modifies ;


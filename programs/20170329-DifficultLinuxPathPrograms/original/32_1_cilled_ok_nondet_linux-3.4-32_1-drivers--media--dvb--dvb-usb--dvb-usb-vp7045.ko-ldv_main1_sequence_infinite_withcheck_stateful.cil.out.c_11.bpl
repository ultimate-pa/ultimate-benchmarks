type STRUCT~perf_event;
type STRUCT~sock;
type STRUCT~sysfs_dirent;
type STRUCT~tvec_base;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~nameidata;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~pid_namespace;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~iovec;
type STRUCT~backing_dev_info;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~pipe_inode_info;
type STRUCT~cdev;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~poll_table_struct;
type STRUCT~kstatfs;
type STRUCT~seq_file;
type STRUCT~input_mt_slot;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~mmu_notifier_mm;
type STRUCT~sem_undo_list;
type STRUCT~nsproxy;
type STRUCT~keyring_list;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~tty_struct;
type STRUCT~autogroup;
type STRUCT~tty_audit_buf;
type STRUCT~rq;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~mem_cgroup;
type STRUCT~fs_struct;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~bio_list;
type STRUCT~blk_plug;
type STRUCT~reclaim_state;
type STRUCT~io_context;
type STRUCT~robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~ep_device;
type STRUCT~mon_bus;
type STRUCT~usb_tt;
type STRUCT~wusb_dev;
type STRUCT~ir_raw_event_ctrl;
type STRUCT~i2c_msg;
type UNION~i2c_smbus_data;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type STRUCT~sec_path;
type STRUCT~prot_inuse;
type STRUCT~fib_rules_ops;
type STRUCT~xt_table;
type STRUCT~dst_entry;
type STRUCT~neighbour;
type STRUCT~ipv6_devconf;
type STRUCT~rt6_info;
type STRUCT~rt6_statistics;
type STRUCT~fib6_table;
type STRUCT~ebt_table;
type STRUCT~ip_conntrack_stat;
type STRUCT~nf_ct_event_notifier;
type STRUCT~nf_exp_event_notifier;
type STRUCT~net_generic;
type STRUCT~netns_ipvs;
type STRUCT~mii_bus;
type STRUCT~css_id;
type STRUCT~cgroupfs_root;
type STRUCT~Qdisc;
type STRUCT~neigh_parms;
type STRUCT~netpoll_info;
type STRUCT~pcpu_lstats;
type STRUCT~pcpu_tstats;
type STRUCT~pcpu_dstats;
type STRUCT~iw_handler_def;
type STRUCT~iw_public_data;
type STRUCT~vlan_info;
type STRUCT~dn_dev;
type STRUCT~inet6_dev;
type STRUCT~wireless_dev;
type STRUCT~cpu_rmap;
type STRUCT~garp_port;
type STRUCT~rtnl_link_ops;
type STRUCT~phy_device;
type STRUCT~ip_mc_list;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__u64 = int;
type ~s8 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~qsize_t = int;
type ~kernel_ulong_t = int;
type ~cputime_t = int;
type ~__kernel_sa_family_t = int;
type ~sk_buff_data_t = int;
type ~__kernel_nlink_t = ~__kernel_ulong_t;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_off_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_clock_t = ~__kernel_long_t;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~nlink_t = ~__kernel_nlink_t;
type ~off_t = ~__kernel_off_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint8_t = ~__u8;
type ~uint32_t = ~__u32;
type ~uint64_t = ~__u64;
type ~dma_addr_t = ~u64;
type ~__le16 = ~__u16;
type ~__be16 = ~__u16;
type ~__le32 = ~__u32;
type ~__be32 = ~__u32;
type ~__wsum = ~__u32;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~qid_t = ~__kernel_uid32_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
type ~phandle = ~u32;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~fe_type_t = int;
type ~fe_caps_t = int;
type ~fe_sec_voltage_t = int;
type ~fe_sec_tone_mode_t = int;
type ~fe_sec_mini_cmd_t = int;
type ~fe_status_t = int;
type ~fe_spectral_inversion_t = int;
type ~fe_code_rate_t = int;
type ~fe_modulation_t = int;
type ~fe_transmit_mode_t = int;
type ~fe_guard_interval_t = int;
type ~fe_hierarchy_t = int;
type ~fe_pilot_t = int;
type ~fe_rolloff_t = int;
type ~fe_delivery_system_t = int;
type ~dmx_output_t = int;
type ~dmx_input_t = int;
type ~dmx_pes_type_t = int;
type ~dmx_source_t = int;
type ~sa_family_t = ~__kernel_sa_family_t;
type ~dma_cookie_t = ~s32;
type ~netdev_features_t = ~u64;
type ~compat_long_t = ~s32;
type ~compat_uptr_t = ~u32;
type ~netdev_tx_t = int;
type ~rx_handler_result_t = int;
const #funAddr~vp7045_frontend_attach.base : int;
const #funAddr~vp7045_frontend_attach.offset : int;
const #funAddr~vp7045_power_ctrl.base : int;
const #funAddr~vp7045_power_ctrl.offset : int;
const #funAddr~vp7045_read_mac_addr.base : int;
const #funAddr~vp7045_read_mac_addr.offset : int;
const #funAddr~vp7045_rc_query.base : int;
const #funAddr~vp7045_rc_query.offset : int;
const #funAddr~vp7045_usb_probe.base : int;
const #funAddr~vp7045_usb_probe.offset : int;
const #funAddr~dvb_usb_device_exit.base : int;
const #funAddr~dvb_usb_device_exit.offset : int;
const #funAddr~vp7045_fe_release.base : int;
const #funAddr~vp7045_fe_release.offset : int;
const #funAddr~vp7045_fe_init.base : int;
const #funAddr~vp7045_fe_init.offset : int;
const #funAddr~vp7045_fe_sleep.base : int;
const #funAddr~vp7045_fe_sleep.offset : int;
const #funAddr~vp7045_fe_set_frontend.base : int;
const #funAddr~vp7045_fe_set_frontend.offset : int;
const #funAddr~vp7045_fe_get_tune_settings.base : int;
const #funAddr~vp7045_fe_get_tune_settings.offset : int;
const #funAddr~vp7045_fe_read_status.base : int;
const #funAddr~vp7045_fe_read_status.offset : int;
const #funAddr~vp7045_fe_read_ber.base : int;
const #funAddr~vp7045_fe_read_ber.offset : int;
const #funAddr~vp7045_fe_read_signal_strength.base : int;
const #funAddr~vp7045_fe_read_signal_strength.offset : int;
const #funAddr~vp7045_fe_read_snr.base : int;
const #funAddr~vp7045_fe_read_snr.offset : int;
const #funAddr~vp7045_fe_read_unc_blocks.base : int;
const #funAddr~vp7045_fe_read_unc_blocks.offset : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~usb_device_speed~USB_SPEED_UNKNOWN : int;
const ~usb_device_speed~USB_SPEED_LOW : int;
const ~usb_device_speed~USB_SPEED_FULL : int;
const ~usb_device_speed~USB_SPEED_HIGH : int;
const ~usb_device_speed~USB_SPEED_WIRELESS : int;
const ~usb_device_speed~USB_SPEED_SUPER : int;
const ~usb_device_state~USB_STATE_NOTATTACHED : int;
const ~usb_device_state~USB_STATE_ATTACHED : int;
const ~usb_device_state~USB_STATE_POWERED : int;
const ~usb_device_state~USB_STATE_RECONNECTING : int;
const ~usb_device_state~USB_STATE_UNAUTHENTICATED : int;
const ~usb_device_state~USB_STATE_DEFAULT : int;
const ~usb_device_state~USB_STATE_ADDRESS : int;
const ~usb_device_state~USB_STATE_CONFIGURED : int;
const ~usb_device_state~USB_STATE_SUSPENDED : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~usb_interface_condition~USB_INTERFACE_UNBOUND : int;
const ~usb_interface_condition~USB_INTERFACE_BINDING : int;
const ~usb_interface_condition~USB_INTERFACE_BOUND : int;
const ~usb_interface_condition~USB_INTERFACE_UNBINDING : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE : int;
const ~usb_device_removable~USB_DEVICE_FIXED : int;
const ~rc_driver_type~RC_DRIVER_SCANCODE : int;
const ~rc_driver_type~RC_DRIVER_IR_RAW : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~fe_type~FE_QPSK : int;
const ~fe_type~FE_QAM : int;
const ~fe_type~FE_OFDM : int;
const ~fe_type~FE_ATSC : int;
const ~fe_caps~FE_IS_STUPID : int;
const ~fe_caps~FE_CAN_INVERSION_AUTO : int;
const ~fe_caps~FE_CAN_FEC_1_2 : int;
const ~fe_caps~FE_CAN_FEC_2_3 : int;
const ~fe_caps~FE_CAN_FEC_3_4 : int;
const ~fe_caps~FE_CAN_FEC_4_5 : int;
const ~fe_caps~FE_CAN_FEC_5_6 : int;
const ~fe_caps~FE_CAN_FEC_6_7 : int;
const ~fe_caps~FE_CAN_FEC_7_8 : int;
const ~fe_caps~FE_CAN_FEC_8_9 : int;
const ~fe_caps~FE_CAN_FEC_AUTO : int;
const ~fe_caps~FE_CAN_QPSK : int;
const ~fe_caps~FE_CAN_QAM_16 : int;
const ~fe_caps~FE_CAN_QAM_32 : int;
const ~fe_caps~FE_CAN_QAM_64 : int;
const ~fe_caps~FE_CAN_QAM_128 : int;
const ~fe_caps~FE_CAN_QAM_256 : int;
const ~fe_caps~FE_CAN_QAM_AUTO : int;
const ~fe_caps~FE_CAN_TRANSMISSION_MODE_AUTO : int;
const ~fe_caps~FE_CAN_BANDWIDTH_AUTO : int;
const ~fe_caps~FE_CAN_GUARD_INTERVAL_AUTO : int;
const ~fe_caps~FE_CAN_HIERARCHY_AUTO : int;
const ~fe_caps~FE_CAN_8VSB : int;
const ~fe_caps~FE_CAN_16VSB : int;
const ~fe_caps~FE_HAS_EXTENDED_CAPS : int;
const ~fe_caps~FE_CAN_TURBO_FEC : int;
const ~fe_caps~FE_CAN_2G_MODULATION : int;
const ~fe_caps~FE_NEEDS_BENDING : int;
const ~fe_caps~FE_CAN_RECOVER : int;
const ~fe_caps~FE_CAN_MUTE_TS : int;
const ~fe_sec_voltage~SEC_VOLTAGE_13 : int;
const ~fe_sec_voltage~SEC_VOLTAGE_18 : int;
const ~fe_sec_voltage~SEC_VOLTAGE_OFF : int;
const ~fe_sec_tone_mode~SEC_TONE_ON : int;
const ~fe_sec_tone_mode~SEC_TONE_OFF : int;
const ~fe_sec_mini_cmd~SEC_MINI_A : int;
const ~fe_sec_mini_cmd~SEC_MINI_B : int;
const ~fe_status~FE_HAS_SIGNAL : int;
const ~fe_status~FE_HAS_CARRIER : int;
const ~fe_status~FE_HAS_VITERBI : int;
const ~fe_status~FE_HAS_SYNC : int;
const ~fe_status~FE_HAS_LOCK : int;
const ~fe_status~FE_TIMEDOUT : int;
const ~fe_status~FE_REINIT : int;
const ~fe_spectral_inversion~INVERSION_OFF : int;
const ~fe_spectral_inversion~INVERSION_ON : int;
const ~fe_spectral_inversion~INVERSION_AUTO : int;
const ~fe_code_rate~FEC_NONE : int;
const ~fe_code_rate~FEC_1_2 : int;
const ~fe_code_rate~FEC_2_3 : int;
const ~fe_code_rate~FEC_3_4 : int;
const ~fe_code_rate~FEC_4_5 : int;
const ~fe_code_rate~FEC_5_6 : int;
const ~fe_code_rate~FEC_6_7 : int;
const ~fe_code_rate~FEC_7_8 : int;
const ~fe_code_rate~FEC_8_9 : int;
const ~fe_code_rate~FEC_AUTO : int;
const ~fe_code_rate~FEC_3_5 : int;
const ~fe_code_rate~FEC_9_10 : int;
const ~fe_modulation~QPSK : int;
const ~fe_modulation~QAM_16 : int;
const ~fe_modulation~QAM_32 : int;
const ~fe_modulation~QAM_64 : int;
const ~fe_modulation~QAM_128 : int;
const ~fe_modulation~QAM_256 : int;
const ~fe_modulation~QAM_AUTO : int;
const ~fe_modulation~VSB_8 : int;
const ~fe_modulation~VSB_16 : int;
const ~fe_modulation~PSK_8 : int;
const ~fe_modulation~APSK_16 : int;
const ~fe_modulation~APSK_32 : int;
const ~fe_modulation~DQPSK : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_2K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_8K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_AUTO : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_4K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_1K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_16K : int;
const ~fe_transmit_mode~TRANSMISSION_MODE_32K : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_32 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_16 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_8 : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_4 : int;
const ~fe_guard_interval~GUARD_INTERVAL_AUTO : int;
const ~fe_guard_interval~GUARD_INTERVAL_1_128 : int;
const ~fe_guard_interval~GUARD_INTERVAL_19_128 : int;
const ~fe_guard_interval~GUARD_INTERVAL_19_256 : int;
const ~fe_hierarchy~HIERARCHY_NONE : int;
const ~fe_hierarchy~HIERARCHY_1 : int;
const ~fe_hierarchy~HIERARCHY_2 : int;
const ~fe_hierarchy~HIERARCHY_4 : int;
const ~fe_hierarchy~HIERARCHY_AUTO : int;
const ~fe_pilot~PILOT_ON : int;
const ~fe_pilot~PILOT_OFF : int;
const ~fe_pilot~PILOT_AUTO : int;
const ~fe_rolloff~ROLLOFF_35 : int;
const ~fe_rolloff~ROLLOFF_20 : int;
const ~fe_rolloff~ROLLOFF_25 : int;
const ~fe_rolloff~ROLLOFF_AUTO : int;
const ~fe_delivery_system~SYS_UNDEFINED : int;
const ~fe_delivery_system~SYS_DVBC_ANNEX_A : int;
const ~fe_delivery_system~SYS_DVBC_ANNEX_B : int;
const ~fe_delivery_system~SYS_DVBT : int;
const ~fe_delivery_system~SYS_DSS : int;
const ~fe_delivery_system~SYS_DVBS : int;
const ~fe_delivery_system~SYS_DVBS2 : int;
const ~fe_delivery_system~SYS_DVBH : int;
const ~fe_delivery_system~SYS_ISDBT : int;
const ~fe_delivery_system~SYS_ISDBS : int;
const ~fe_delivery_system~SYS_ISDBC : int;
const ~fe_delivery_system~SYS_ATSC : int;
const ~fe_delivery_system~SYS_ATSCMH : int;
const ~fe_delivery_system~SYS_DMBTH : int;
const ~fe_delivery_system~SYS_CMMB : int;
const ~fe_delivery_system~SYS_DAB : int;
const ~fe_delivery_system~SYS_DVBT2 : int;
const ~fe_delivery_system~SYS_TURBO : int;
const ~fe_delivery_system~SYS_DVBC_ANNEX_C : int;
const ~tuner_param~DVBFE_TUNER_FREQUENCY : int;
const ~tuner_param~DVBFE_TUNER_TUNERSTEP : int;
const ~tuner_param~DVBFE_TUNER_IFFREQ : int;
const ~tuner_param~DVBFE_TUNER_BANDWIDTH : int;
const ~tuner_param~DVBFE_TUNER_REFCLOCK : int;
const ~tuner_param~DVBFE_TUNER_IQSENSE : int;
const ~tuner_param~DVBFE_TUNER_DUMMY : int;
const ~dvbfe_algo~DVBFE_ALGO_HW : int;
const ~dvbfe_algo~DVBFE_ALGO_SW : int;
const ~dvbfe_algo~DVBFE_ALGO_CUSTOM : int;
const ~dvbfe_algo~DVBFE_ALGO_RECOVERY : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_SUCCESS : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_ASLEEP : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_FAILED : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_INVALID : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_AGAIN : int;
const ~dvbfe_search~DVBFE_ALGO_SEARCH_ERROR : int;
const ~__anonenum_dmx_output_t_266~DMX_OUT_DECODER : int;
const ~__anonenum_dmx_output_t_266~DMX_OUT_TAP : int;
const ~__anonenum_dmx_output_t_266~DMX_OUT_TS_TAP : int;
const ~__anonenum_dmx_output_t_266~DMX_OUT_TSDEMUX_TAP : int;
const ~__anonenum_dmx_input_t_267~DMX_IN_FRONTEND : int;
const ~__anonenum_dmx_input_t_267~DMX_IN_DVR : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_AUDIO0 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_VIDEO0 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_TELETEXT0 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_SUBTITLE0 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_PCR0 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_AUDIO1 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_VIDEO1 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_TELETEXT1 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_SUBTITLE1 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_PCR1 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_AUDIO2 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_VIDEO2 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_TELETEXT2 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_SUBTITLE2 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_PCR2 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_AUDIO3 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_VIDEO3 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_TELETEXT3 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_SUBTITLE3 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_PCR3 : int;
const ~__anonenum_dmx_pes_type_t_268~DMX_PES_OTHER : int;
const ~__anonenum_dmx_source_t_269~DMX_SOURCE_FRONT0 : int;
const ~__anonenum_dmx_source_t_269~DMX_SOURCE_FRONT1 : int;
const ~__anonenum_dmx_source_t_269~DMX_SOURCE_FRONT2 : int;
const ~__anonenum_dmx_source_t_269~DMX_SOURCE_FRONT3 : int;
const ~__anonenum_dmx_source_t_269~DMX_SOURCE_DVR0 : int;
const ~__anonenum_dmx_source_t_269~DMX_SOURCE_DVR1 : int;
const ~__anonenum_dmx_source_t_269~DMX_SOURCE_DVR2 : int;
const ~__anonenum_dmx_source_t_269~DMX_SOURCE_DVR3 : int;
const ~dmx_success~DMX_OK : int;
const ~dmx_success~DMX_LENGTH_ERROR : int;
const ~dmx_success~DMX_OVERRUN_ERROR : int;
const ~dmx_success~DMX_CRC_ERROR : int;
const ~dmx_success~DMX_FRAME_ERROR : int;
const ~dmx_success~DMX_FIFO_ERROR : int;
const ~dmx_success~DMX_MISSED_ERROR : int;
const ~dmx_ts_pes~DMX_TS_PES_AUDIO0 : int;
const ~dmx_ts_pes~DMX_TS_PES_VIDEO0 : int;
const ~dmx_ts_pes~DMX_TS_PES_TELETEXT0 : int;
const ~dmx_ts_pes~DMX_TS_PES_SUBTITLE0 : int;
const ~dmx_ts_pes~DMX_TS_PES_PCR0 : int;
const ~dmx_ts_pes~DMX_TS_PES_AUDIO1 : int;
const ~dmx_ts_pes~DMX_TS_PES_VIDEO1 : int;
const ~dmx_ts_pes~DMX_TS_PES_TELETEXT1 : int;
const ~dmx_ts_pes~DMX_TS_PES_SUBTITLE1 : int;
const ~dmx_ts_pes~DMX_TS_PES_PCR1 : int;
const ~dmx_ts_pes~DMX_TS_PES_AUDIO2 : int;
const ~dmx_ts_pes~DMX_TS_PES_VIDEO2 : int;
const ~dmx_ts_pes~DMX_TS_PES_TELETEXT2 : int;
const ~dmx_ts_pes~DMX_TS_PES_SUBTITLE2 : int;
const ~dmx_ts_pes~DMX_TS_PES_PCR2 : int;
const ~dmx_ts_pes~DMX_TS_PES_AUDIO3 : int;
const ~dmx_ts_pes~DMX_TS_PES_VIDEO3 : int;
const ~dmx_ts_pes~DMX_TS_PES_TELETEXT3 : int;
const ~dmx_ts_pes~DMX_TS_PES_SUBTITLE3 : int;
const ~dmx_ts_pes~DMX_TS_PES_PCR3 : int;
const ~dmx_ts_pes~DMX_TS_PES_OTHER : int;
const ~dmx_frontend_source~DMX_MEMORY_FE : int;
const ~dmx_frontend_source~DMX_FRONTEND_0 : int;
const ~dmx_frontend_source~DMX_FRONTEND_1 : int;
const ~dmx_frontend_source~DMX_FRONTEND_2 : int;
const ~dmx_frontend_source~DMX_FRONTEND_3 : int;
const ~dmx_frontend_source~DMX_STREAM_0 : int;
const ~dmx_frontend_source~DMX_STREAM_1 : int;
const ~dmx_frontend_source~DMX_STREAM_2 : int;
const ~dmx_frontend_source~DMX_STREAM_3 : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~pm_qos_type~PM_QOS_UNITIALIZED : int;
const ~pm_qos_type~PM_QOS_MAX : int;
const ~pm_qos_type~PM_QOS_MIN : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_ON : int;
const ~ethtool_phys_id_state~ETHTOOL_ID_OFF : int;
const ~netdev_tx~__NETDEV_TX_MIN : int;
const ~netdev_tx~NETDEV_TX_OK : int;
const ~netdev_tx~NETDEV_TX_BUSY : int;
const ~netdev_tx~NETDEV_TX_LOCKED : int;
const ~rx_handler_result~RX_HANDLER_CONSUMED : int;
const ~rx_handler_result~RX_HANDLER_ANOTHER : int;
const ~rx_handler_result~RX_HANDLER_EXACT : int;
const ~rx_handler_result~RX_HANDLER_PASS : int;
const ~__anonenum_reg_state_350~NETREG_UNINITIALIZED : int;
const ~__anonenum_reg_state_350~NETREG_REGISTERED : int;
const ~__anonenum_reg_state_350~NETREG_UNREGISTERING : int;
const ~__anonenum_reg_state_350~NETREG_UNREGISTERED : int;
const ~__anonenum_reg_state_350~NETREG_RELEASED : int;
const ~__anonenum_reg_state_350~NETREG_DUMMY : int;
const ~__anonenum_rtnl_link_state_351~RTNL_LINK_INITIALIZED : int;
const ~__anonenum_rtnl_link_state_351~RTNL_LINK_INITIALIZING : int;
const ~dmxdev_type~DMXDEV_TYPE_NONE : int;
const ~dmxdev_type~DMXDEV_TYPE_SEC : int;
const ~dmxdev_type~DMXDEV_TYPE_PES : int;
const ~dmxdev_state~DMXDEV_STATE_FREE : int;
const ~dmxdev_state~DMXDEV_STATE_ALLOCATED : int;
const ~dmxdev_state~DMXDEV_STATE_SET : int;
const ~dmxdev_state~DMXDEV_STATE_GO : int;
const ~dmxdev_state~DMXDEV_STATE_DONE : int;
const ~dmxdev_state~DMXDEV_STATE_TIMEDOUT : int;
const ~dvb_usb_mode~DVB_RC_LEGACY : int;
const ~dvb_usb_mode~DVB_RC_CORE : int;
axiom #funAddr~vp7045_frontend_attach.base == -1 && #funAddr~vp7045_frontend_attach.offset == 0;
axiom #funAddr~vp7045_power_ctrl.base == -1 && #funAddr~vp7045_power_ctrl.offset == 1;
axiom #funAddr~vp7045_read_mac_addr.base == -1 && #funAddr~vp7045_read_mac_addr.offset == 2;
axiom #funAddr~vp7045_rc_query.base == -1 && #funAddr~vp7045_rc_query.offset == 3;
axiom #funAddr~vp7045_usb_probe.base == -1 && #funAddr~vp7045_usb_probe.offset == 4;
axiom #funAddr~dvb_usb_device_exit.base == -1 && #funAddr~dvb_usb_device_exit.offset == 5;
axiom #funAddr~vp7045_fe_release.base == -1 && #funAddr~vp7045_fe_release.offset == 6;
axiom #funAddr~vp7045_fe_init.base == -1 && #funAddr~vp7045_fe_init.offset == 7;
axiom #funAddr~vp7045_fe_sleep.base == -1 && #funAddr~vp7045_fe_sleep.offset == 8;
axiom #funAddr~vp7045_fe_set_frontend.base == -1 && #funAddr~vp7045_fe_set_frontend.offset == 9;
axiom #funAddr~vp7045_fe_get_tune_settings.base == -1 && #funAddr~vp7045_fe_get_tune_settings.offset == 10;
axiom #funAddr~vp7045_fe_read_status.base == -1 && #funAddr~vp7045_fe_read_status.offset == 11;
axiom #funAddr~vp7045_fe_read_ber.base == -1 && #funAddr~vp7045_fe_read_ber.offset == 12;
axiom #funAddr~vp7045_fe_read_signal_strength.base == -1 && #funAddr~vp7045_fe_read_signal_strength.offset == 13;
axiom #funAddr~vp7045_fe_read_snr.base == -1 && #funAddr~vp7045_fe_read_snr.offset == 14;
axiom #funAddr~vp7045_fe_read_unc_blocks.base == -1 && #funAddr~vp7045_fe_read_unc_blocks.offset == 15;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~usb_device_speed~USB_SPEED_UNKNOWN == 0;
axiom ~usb_device_speed~USB_SPEED_LOW == 1;
axiom ~usb_device_speed~USB_SPEED_FULL == 2;
axiom ~usb_device_speed~USB_SPEED_HIGH == 3;
axiom ~usb_device_speed~USB_SPEED_WIRELESS == 4;
axiom ~usb_device_speed~USB_SPEED_SUPER == 5;
axiom ~usb_device_state~USB_STATE_NOTATTACHED == 0;
axiom ~usb_device_state~USB_STATE_ATTACHED == 1;
axiom ~usb_device_state~USB_STATE_POWERED == 2;
axiom ~usb_device_state~USB_STATE_RECONNECTING == 3;
axiom ~usb_device_state~USB_STATE_UNAUTHENTICATED == 4;
axiom ~usb_device_state~USB_STATE_DEFAULT == 5;
axiom ~usb_device_state~USB_STATE_ADDRESS == 6;
axiom ~usb_device_state~USB_STATE_CONFIGURED == 7;
axiom ~usb_device_state~USB_STATE_SUSPENDED == 8;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~usb_interface_condition~USB_INTERFACE_UNBOUND == 0;
axiom ~usb_interface_condition~USB_INTERFACE_BINDING == 1;
axiom ~usb_interface_condition~USB_INTERFACE_BOUND == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBINDING == 3;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN == 0;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE == 1;
axiom ~usb_device_removable~USB_DEVICE_FIXED == 2;
axiom ~rc_driver_type~RC_DRIVER_SCANCODE == 0;
axiom ~rc_driver_type~RC_DRIVER_IR_RAW == 1;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~fe_type~FE_QPSK == 0;
axiom ~fe_type~FE_QAM == 1;
axiom ~fe_type~FE_OFDM == 2;
axiom ~fe_type~FE_ATSC == 3;
axiom ~fe_caps~FE_IS_STUPID == 0;
axiom ~fe_caps~FE_CAN_INVERSION_AUTO == 1;
axiom ~fe_caps~FE_CAN_FEC_1_2 == 2;
axiom ~fe_caps~FE_CAN_FEC_2_3 == 4;
axiom ~fe_caps~FE_CAN_FEC_3_4 == 8;
axiom ~fe_caps~FE_CAN_FEC_4_5 == 16;
axiom ~fe_caps~FE_CAN_FEC_5_6 == 32;
axiom ~fe_caps~FE_CAN_FEC_6_7 == 64;
axiom ~fe_caps~FE_CAN_FEC_7_8 == 128;
axiom ~fe_caps~FE_CAN_FEC_8_9 == 256;
axiom ~fe_caps~FE_CAN_FEC_AUTO == 512;
axiom ~fe_caps~FE_CAN_QPSK == 1024;
axiom ~fe_caps~FE_CAN_QAM_16 == 2048;
axiom ~fe_caps~FE_CAN_QAM_32 == 4096;
axiom ~fe_caps~FE_CAN_QAM_64 == 8192;
axiom ~fe_caps~FE_CAN_QAM_128 == 16384;
axiom ~fe_caps~FE_CAN_QAM_256 == 32768;
axiom ~fe_caps~FE_CAN_QAM_AUTO == 65536;
axiom ~fe_caps~FE_CAN_TRANSMISSION_MODE_AUTO == 131072;
axiom ~fe_caps~FE_CAN_BANDWIDTH_AUTO == 262144;
axiom ~fe_caps~FE_CAN_GUARD_INTERVAL_AUTO == 524288;
axiom ~fe_caps~FE_CAN_HIERARCHY_AUTO == 1048576;
axiom ~fe_caps~FE_CAN_8VSB == 2097152;
axiom ~fe_caps~FE_CAN_16VSB == 4194304;
axiom ~fe_caps~FE_HAS_EXTENDED_CAPS == 8388608;
axiom ~fe_caps~FE_CAN_TURBO_FEC == 134217728;
axiom ~fe_caps~FE_CAN_2G_MODULATION == 268435456;
axiom ~fe_caps~FE_NEEDS_BENDING == 536870912;
axiom ~fe_caps~FE_CAN_RECOVER == 1073741824;
axiom ~fe_caps~FE_CAN_MUTE_TS == -2147483648;
axiom ~fe_sec_voltage~SEC_VOLTAGE_13 == 0;
axiom ~fe_sec_voltage~SEC_VOLTAGE_18 == 1;
axiom ~fe_sec_voltage~SEC_VOLTAGE_OFF == 2;
axiom ~fe_sec_tone_mode~SEC_TONE_ON == 0;
axiom ~fe_sec_tone_mode~SEC_TONE_OFF == 1;
axiom ~fe_sec_mini_cmd~SEC_MINI_A == 0;
axiom ~fe_sec_mini_cmd~SEC_MINI_B == 1;
axiom ~fe_status~FE_HAS_SIGNAL == 1;
axiom ~fe_status~FE_HAS_CARRIER == 2;
axiom ~fe_status~FE_HAS_VITERBI == 4;
axiom ~fe_status~FE_HAS_SYNC == 8;
axiom ~fe_status~FE_HAS_LOCK == 16;
axiom ~fe_status~FE_TIMEDOUT == 32;
axiom ~fe_status~FE_REINIT == 64;
axiom ~fe_spectral_inversion~INVERSION_OFF == 0;
axiom ~fe_spectral_inversion~INVERSION_ON == 1;
axiom ~fe_spectral_inversion~INVERSION_AUTO == 2;
axiom ~fe_code_rate~FEC_NONE == 0;
axiom ~fe_code_rate~FEC_1_2 == 1;
axiom ~fe_code_rate~FEC_2_3 == 2;
axiom ~fe_code_rate~FEC_3_4 == 3;
axiom ~fe_code_rate~FEC_4_5 == 4;
axiom ~fe_code_rate~FEC_5_6 == 5;
axiom ~fe_code_rate~FEC_6_7 == 6;
axiom ~fe_code_rate~FEC_7_8 == 7;
axiom ~fe_code_rate~FEC_8_9 == 8;
axiom ~fe_code_rate~FEC_AUTO == 9;
axiom ~fe_code_rate~FEC_3_5 == 10;
axiom ~fe_code_rate~FEC_9_10 == 11;
axiom ~fe_modulation~QPSK == 0;
axiom ~fe_modulation~QAM_16 == 1;
axiom ~fe_modulation~QAM_32 == 2;
axiom ~fe_modulation~QAM_64 == 3;
axiom ~fe_modulation~QAM_128 == 4;
axiom ~fe_modulation~QAM_256 == 5;
axiom ~fe_modulation~QAM_AUTO == 6;
axiom ~fe_modulation~VSB_8 == 7;
axiom ~fe_modulation~VSB_16 == 8;
axiom ~fe_modulation~PSK_8 == 9;
axiom ~fe_modulation~APSK_16 == 10;
axiom ~fe_modulation~APSK_32 == 11;
axiom ~fe_modulation~DQPSK == 12;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_2K == 0;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_8K == 1;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_AUTO == 2;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_4K == 3;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_1K == 4;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_16K == 5;
axiom ~fe_transmit_mode~TRANSMISSION_MODE_32K == 6;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_32 == 0;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_16 == 1;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_8 == 2;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_4 == 3;
axiom ~fe_guard_interval~GUARD_INTERVAL_AUTO == 4;
axiom ~fe_guard_interval~GUARD_INTERVAL_1_128 == 5;
axiom ~fe_guard_interval~GUARD_INTERVAL_19_128 == 6;
axiom ~fe_guard_interval~GUARD_INTERVAL_19_256 == 7;
axiom ~fe_hierarchy~HIERARCHY_NONE == 0;
axiom ~fe_hierarchy~HIERARCHY_1 == 1;
axiom ~fe_hierarchy~HIERARCHY_2 == 2;
axiom ~fe_hierarchy~HIERARCHY_4 == 3;
axiom ~fe_hierarchy~HIERARCHY_AUTO == 4;
axiom ~fe_pilot~PILOT_ON == 0;
axiom ~fe_pilot~PILOT_OFF == 1;
axiom ~fe_pilot~PILOT_AUTO == 2;
axiom ~fe_rolloff~ROLLOFF_35 == 0;
axiom ~fe_rolloff~ROLLOFF_20 == 1;
axiom ~fe_rolloff~ROLLOFF_25 == 2;
axiom ~fe_rolloff~ROLLOFF_AUTO == 3;
axiom ~fe_delivery_system~SYS_UNDEFINED == 0;
axiom ~fe_delivery_system~SYS_DVBC_ANNEX_A == 1;
axiom ~fe_delivery_system~SYS_DVBC_ANNEX_B == 2;
axiom ~fe_delivery_system~SYS_DVBT == 3;
axiom ~fe_delivery_system~SYS_DSS == 4;
axiom ~fe_delivery_system~SYS_DVBS == 5;
axiom ~fe_delivery_system~SYS_DVBS2 == 6;
axiom ~fe_delivery_system~SYS_DVBH == 7;
axiom ~fe_delivery_system~SYS_ISDBT == 8;
axiom ~fe_delivery_system~SYS_ISDBS == 9;
axiom ~fe_delivery_system~SYS_ISDBC == 10;
axiom ~fe_delivery_system~SYS_ATSC == 11;
axiom ~fe_delivery_system~SYS_ATSCMH == 12;
axiom ~fe_delivery_system~SYS_DMBTH == 13;
axiom ~fe_delivery_system~SYS_CMMB == 14;
axiom ~fe_delivery_system~SYS_DAB == 15;
axiom ~fe_delivery_system~SYS_DVBT2 == 16;
axiom ~fe_delivery_system~SYS_TURBO == 17;
axiom ~fe_delivery_system~SYS_DVBC_ANNEX_C == 18;
axiom ~tuner_param~DVBFE_TUNER_FREQUENCY == 1;
axiom ~tuner_param~DVBFE_TUNER_TUNERSTEP == 2;
axiom ~tuner_param~DVBFE_TUNER_IFFREQ == 4;
axiom ~tuner_param~DVBFE_TUNER_BANDWIDTH == 8;
axiom ~tuner_param~DVBFE_TUNER_REFCLOCK == 16;
axiom ~tuner_param~DVBFE_TUNER_IQSENSE == 32;
axiom ~tuner_param~DVBFE_TUNER_DUMMY == -2147483648;
axiom ~dvbfe_algo~DVBFE_ALGO_HW == 1;
axiom ~dvbfe_algo~DVBFE_ALGO_SW == 2;
axiom ~dvbfe_algo~DVBFE_ALGO_CUSTOM == 4;
axiom ~dvbfe_algo~DVBFE_ALGO_RECOVERY == -2147483648;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_SUCCESS == 1;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_ASLEEP == 2;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_FAILED == 4;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_INVALID == 8;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_AGAIN == 16;
axiom ~dvbfe_search~DVBFE_ALGO_SEARCH_ERROR == -2147483648;
axiom ~__anonenum_dmx_output_t_266~DMX_OUT_DECODER == 0;
axiom ~__anonenum_dmx_output_t_266~DMX_OUT_TAP == 1;
axiom ~__anonenum_dmx_output_t_266~DMX_OUT_TS_TAP == 2;
axiom ~__anonenum_dmx_output_t_266~DMX_OUT_TSDEMUX_TAP == 3;
axiom ~__anonenum_dmx_input_t_267~DMX_IN_FRONTEND == 0;
axiom ~__anonenum_dmx_input_t_267~DMX_IN_DVR == 1;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_AUDIO0 == 0;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_VIDEO0 == 1;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_TELETEXT0 == 2;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_SUBTITLE0 == 3;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_PCR0 == 4;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_AUDIO1 == 5;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_VIDEO1 == 6;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_TELETEXT1 == 7;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_SUBTITLE1 == 8;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_PCR1 == 9;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_AUDIO2 == 10;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_VIDEO2 == 11;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_TELETEXT2 == 12;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_SUBTITLE2 == 13;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_PCR2 == 14;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_AUDIO3 == 15;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_VIDEO3 == 16;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_TELETEXT3 == 17;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_SUBTITLE3 == 18;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_PCR3 == 19;
axiom ~__anonenum_dmx_pes_type_t_268~DMX_PES_OTHER == 20;
axiom ~__anonenum_dmx_source_t_269~DMX_SOURCE_FRONT0 == 0;
axiom ~__anonenum_dmx_source_t_269~DMX_SOURCE_FRONT1 == 1;
axiom ~__anonenum_dmx_source_t_269~DMX_SOURCE_FRONT2 == 2;
axiom ~__anonenum_dmx_source_t_269~DMX_SOURCE_FRONT3 == 3;
axiom ~__anonenum_dmx_source_t_269~DMX_SOURCE_DVR0 == 16;
axiom ~__anonenum_dmx_source_t_269~DMX_SOURCE_DVR1 == 17;
axiom ~__anonenum_dmx_source_t_269~DMX_SOURCE_DVR2 == 18;
axiom ~__anonenum_dmx_source_t_269~DMX_SOURCE_DVR3 == 19;
axiom ~dmx_success~DMX_OK == 0;
axiom ~dmx_success~DMX_LENGTH_ERROR == 1;
axiom ~dmx_success~DMX_OVERRUN_ERROR == 2;
axiom ~dmx_success~DMX_CRC_ERROR == 3;
axiom ~dmx_success~DMX_FRAME_ERROR == 4;
axiom ~dmx_success~DMX_FIFO_ERROR == 5;
axiom ~dmx_success~DMX_MISSED_ERROR == 6;
axiom ~dmx_ts_pes~DMX_TS_PES_AUDIO0 == 0;
axiom ~dmx_ts_pes~DMX_TS_PES_VIDEO0 == 1;
axiom ~dmx_ts_pes~DMX_TS_PES_TELETEXT0 == 2;
axiom ~dmx_ts_pes~DMX_TS_PES_SUBTITLE0 == 3;
axiom ~dmx_ts_pes~DMX_TS_PES_PCR0 == 4;
axiom ~dmx_ts_pes~DMX_TS_PES_AUDIO1 == 5;
axiom ~dmx_ts_pes~DMX_TS_PES_VIDEO1 == 6;
axiom ~dmx_ts_pes~DMX_TS_PES_TELETEXT1 == 7;
axiom ~dmx_ts_pes~DMX_TS_PES_SUBTITLE1 == 8;
axiom ~dmx_ts_pes~DMX_TS_PES_PCR1 == 9;
axiom ~dmx_ts_pes~DMX_TS_PES_AUDIO2 == 10;
axiom ~dmx_ts_pes~DMX_TS_PES_VIDEO2 == 11;
axiom ~dmx_ts_pes~DMX_TS_PES_TELETEXT2 == 12;
axiom ~dmx_ts_pes~DMX_TS_PES_SUBTITLE2 == 13;
axiom ~dmx_ts_pes~DMX_TS_PES_PCR2 == 14;
axiom ~dmx_ts_pes~DMX_TS_PES_AUDIO3 == 15;
axiom ~dmx_ts_pes~DMX_TS_PES_VIDEO3 == 16;
axiom ~dmx_ts_pes~DMX_TS_PES_TELETEXT3 == 17;
axiom ~dmx_ts_pes~DMX_TS_PES_SUBTITLE3 == 18;
axiom ~dmx_ts_pes~DMX_TS_PES_PCR3 == 19;
axiom ~dmx_ts_pes~DMX_TS_PES_OTHER == 20;
axiom ~dmx_frontend_source~DMX_MEMORY_FE == 0;
axiom ~dmx_frontend_source~DMX_FRONTEND_0 == 1;
axiom ~dmx_frontend_source~DMX_FRONTEND_1 == 2;
axiom ~dmx_frontend_source~DMX_FRONTEND_2 == 3;
axiom ~dmx_frontend_source~DMX_FRONTEND_3 == 4;
axiom ~dmx_frontend_source~DMX_STREAM_0 == 5;
axiom ~dmx_frontend_source~DMX_STREAM_1 == 6;
axiom ~dmx_frontend_source~DMX_STREAM_2 == 7;
axiom ~dmx_frontend_source~DMX_STREAM_3 == 8;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~pm_qos_type~PM_QOS_UNITIALIZED == 0;
axiom ~pm_qos_type~PM_QOS_MAX == 1;
axiom ~pm_qos_type~PM_QOS_MIN == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_INACTIVE == 0;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ACTIVE == 1;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_ON == 2;
axiom ~ethtool_phys_id_state~ETHTOOL_ID_OFF == 3;
axiom ~netdev_tx~__NETDEV_TX_MIN == -2147483648;
axiom ~netdev_tx~NETDEV_TX_OK == 0;
axiom ~netdev_tx~NETDEV_TX_BUSY == 16;
axiom ~netdev_tx~NETDEV_TX_LOCKED == 32;
axiom ~rx_handler_result~RX_HANDLER_CONSUMED == 0;
axiom ~rx_handler_result~RX_HANDLER_ANOTHER == 1;
axiom ~rx_handler_result~RX_HANDLER_EXACT == 2;
axiom ~rx_handler_result~RX_HANDLER_PASS == 3;
axiom ~__anonenum_reg_state_350~NETREG_UNINITIALIZED == 0;
axiom ~__anonenum_reg_state_350~NETREG_REGISTERED == 1;
axiom ~__anonenum_reg_state_350~NETREG_UNREGISTERING == 2;
axiom ~__anonenum_reg_state_350~NETREG_UNREGISTERED == 3;
axiom ~__anonenum_reg_state_350~NETREG_RELEASED == 4;
axiom ~__anonenum_reg_state_350~NETREG_DUMMY == 5;
axiom ~__anonenum_rtnl_link_state_351~RTNL_LINK_INITIALIZED == 0;
axiom ~__anonenum_rtnl_link_state_351~RTNL_LINK_INITIALIZING == 1;
axiom ~dmxdev_type~DMXDEV_TYPE_NONE == 0;
axiom ~dmxdev_type~DMXDEV_TYPE_SEC == 1;
axiom ~dmxdev_type~DMXDEV_TYPE_PES == 2;
axiom ~dmxdev_state~DMXDEV_STATE_FREE == 0;
axiom ~dmxdev_state~DMXDEV_STATE_ALLOCATED == 1;
axiom ~dmxdev_state~DMXDEV_STATE_SET == 2;
axiom ~dmxdev_state~DMXDEV_STATE_GO == 3;
axiom ~dmxdev_state~DMXDEV_STATE_DONE == 4;
axiom ~dmxdev_state~DMXDEV_STATE_TIMEDOUT == 5;
axiom ~dvb_usb_mode~DVB_RC_LEGACY == 0;
axiom ~dvb_usb_mode~DVB_RC_CORE == 1;
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseComplement" } ~bitwiseComplement(in0 : int) returns (out : int);
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
var ~#dvb_usb_vp7045_debug.base : int, ~#dvb_usb_vp7045_debug.offset : int;

var ~LDV_IN_INTERRUPT : int;

var ~ldv_mutex : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_int : [int,int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

implementation mutex_unlock(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc0:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    assume !(~ldv_mutex == 2);
    call ldv_blast_assert();
    return;
}

procedure mutex_unlock(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ~ldv_mutex;

implementation ULTIMATE.init() returns (){
  loc1:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    call ~#dvb_usb_vp7045_debug.base, ~#dvb_usb_vp7045_debug.offset := #Ultimate.alloc(4);
    call write~int(0, ~#dvb_usb_vp7045_debug.base, ~#dvb_usb_vp7045_debug.offset, 4);
    ~LDV_IN_INTERRUPT := 0;
    ~ldv_mutex := 1;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~#dvb_usb_vp7045_debug.base, ~#dvb_usb_vp7045_debug.offset, ~LDV_IN_INTERRUPT, ~ldv_mutex, #memory_int;
modifies #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset;

implementation vp7045_usb_op(#in~d.base : int, #in~d.offset : int, #in~cmd : int, #in~out.base : int, #in~out.offset : int, #in~outlen : int, #in~in.base : int, #in~in.offset : int, #in~inlen : int, #in~msec : int) returns (#res : int){
    var #t~mem1.base : int, #t~mem1.offset : int;
    var #t~ret3 : int;
    var #t~memcpy4.base : int, #t~memcpy4.offset : int;
    var #t~mem5 : int;
    var #t~nondet6.base : int, #t~nondet6.offset : int;
    var #t~ret7 : int;
    var #t~mem8 : int;
    var #t~mem9 : int;
    var #t~nondet10.base : int, #t~nondet10.offset : int;
    var #t~ret11 : int;
    var #t~mem12 : int;
    var #t~nondet13.base : int, #t~nondet13.offset : int;
    var #t~ret14 : int;
    var #t~mem15.base : int, #t~mem15.offset : int;
    var #t~ret16 : int;
    var #t~mem17.base : int, #t~mem17.offset : int;
    var #t~ret18 : int;
    var #t~nondet19.base : int, #t~nondet19.offset : int;
    var #t~ret20 : int;
    var #t~mem21.base : int, #t~mem21.offset : int;
    var #t~ret22 : int;
    var #t~mem23.base : int, #t~mem23.offset : int;
    var #t~ret24 : int;
    var #t~nondet25.base : int, #t~nondet25.offset : int;
    var #t~ret26 : int;
    var #t~mem27 : int;
    var #t~nondet28.base : int, #t~nondet28.offset : int;
    var #t~ret29 : int;
    var #t~mem30 : int;
    var #t~mem31 : int;
    var #t~nondet32.base : int, #t~nondet32.offset : int;
    var #t~ret33 : int;
    var #t~mem34 : int;
    var #t~nondet35.base : int, #t~nondet35.offset : int;
    var #t~ret36 : int;
    var #t~memcpy37.base : int, #t~memcpy37.offset : int;
    var ~d.base : int, ~d.offset : int;
    var ~cmd : int;
    var ~out.base : int, ~out.offset : int;
    var ~outlen : int;
    var ~in.base : int, ~in.offset : int;
    var ~inlen : int;
    var ~msec : int;
    var ~ret~13 : int;
    var ~buf~13.base : int, ~buf~13.offset : int;
    var ~__len~13 : int;
    var ~__ret~13.base : int, ~__ret~13.offset : int;
    var ~loop_~13 : int;
    var ~tmp___7~13 : int;
    var ~tmp___8~13 : int;
    var ~tmp___9~13 : int;
    var ~tmp___10~13 : int;
    var ~loop____0~13 : int;
    var ~__len___0~13 : int;
    var ~__ret___0~13.base : int, ~__ret___0~13.offset : int;
    var ~__cil_tmp20~13 : int;
    var ~__cil_tmp21~13 : int;
    var ~__cil_tmp22~13.base : int, ~__cil_tmp22~13.offset : int;
    var ~__cil_tmp23~13.base : int, ~__cil_tmp23~13.offset : int;
    var ~__cil_tmp24~13 : int;
    var ~__cil_tmp25~13 : int;
    var ~__cil_tmp26~13.base : int, ~__cil_tmp26~13.offset : int;
    var ~__cil_tmp27~13.base : int, ~__cil_tmp27~13.offset : int;
    var ~__cil_tmp28~13 : int;
    var ~__cil_tmp29~13 : int;
    var ~__cil_tmp30~13.base : int, ~__cil_tmp30~13.offset : int;
    var ~__cil_tmp31~13.base : int, ~__cil_tmp31~13.offset : int;
    var ~__cil_tmp32~13.base : int, ~__cil_tmp32~13.offset : int;
    var ~__cil_tmp33~13.base : int, ~__cil_tmp33~13.offset : int;
    var ~__cil_tmp34~13 : int;
    var ~__cil_tmp35~13 : int;
    var ~__cil_tmp36~13.base : int, ~__cil_tmp36~13.offset : int;
    var ~__cil_tmp37~13 : int;
    var ~__cil_tmp38~13.base : int, ~__cil_tmp38~13.offset : int;
    var ~__cil_tmp39~13 : ~u8;
    var ~__cil_tmp40~13 : int;
    var ~__cil_tmp41~13.base : int, ~__cil_tmp41~13.offset : int;
    var ~__cil_tmp42~13 : int;
    var ~__cil_tmp43~13 : int;
    var ~__cil_tmp44~13 : int;
    var ~__cil_tmp45~13.base : int, ~__cil_tmp45~13.offset : int;
    var ~__cil_tmp46~13 : int;
    var ~__cil_tmp47~13 : int;
    var ~__cil_tmp48~13.base : int, ~__cil_tmp48~13.offset : int;
    var ~__cil_tmp49~13 : int;
    var ~__cil_tmp50~13 : int;
    var ~__cil_tmp51~13 : int;
    var ~__cil_tmp52~13 : ~__u8;
    var ~__cil_tmp53~13 : int;
    var ~__cil_tmp54~13 : ~__u8;
    var ~__cil_tmp55~13 : ~__u16;
    var ~__cil_tmp56~13 : ~__u16;
    var ~__cil_tmp57~13.base : int, ~__cil_tmp57~13.offset : int;
    var ~__cil_tmp58~13 : ~__u16;
    var ~__cil_tmp59~13 : int;
    var ~__cil_tmp60~13 : int;
    var ~__cil_tmp61~13 : int;
    var ~__cil_tmp62~13.base : int, ~__cil_tmp62~13.offset : int;
    var ~__cil_tmp63~13 : int;
    var ~__cil_tmp64~13 : int;
    var ~__cil_tmp65~13.base : int, ~__cil_tmp65~13.offset : int;
    var ~__cil_tmp66~13 : int;
    var ~__cil_tmp67~13 : int;
    var ~__cil_tmp68~13 : int;
    var ~__cil_tmp69~13 : int;
    var ~__cil_tmp70~13 : ~__u8;
    var ~__cil_tmp71~13 : int;
    var ~__cil_tmp72~13 : int;
    var ~__cil_tmp73~13 : ~__u8;
    var ~__cil_tmp74~13 : ~__u16;
    var ~__cil_tmp75~13 : ~__u16;
    var ~__cil_tmp76~13.base : int, ~__cil_tmp76~13.offset : int;
    var ~__cil_tmp77~13 : ~__u16;
    var ~__cil_tmp78~13.base : int, ~__cil_tmp78~13.offset : int;
    var ~__cil_tmp79~13 : int;
    var ~__cil_tmp80~13.base : int, ~__cil_tmp80~13.offset : int;
    var ~__cil_tmp81~13 : int;
    var ~__cil_tmp82~13.base : int, ~__cil_tmp82~13.offset : int;
    var ~__cil_tmp83~13 : ~u8;
    var ~__cil_tmp84~13 : int;
    var ~__cil_tmp85~13.base : int, ~__cil_tmp85~13.offset : int;
    var ~__cil_tmp86~13 : int;
    var ~__cil_tmp87~13.base : int, ~__cil_tmp87~13.offset : int;
    var ~__cil_tmp88~13 : int;
    var ~__cil_tmp89~13 : int;
    var ~__cil_tmp90~13.base : int, ~__cil_tmp90~13.offset : int;
    var ~__cil_tmp91~13.base : int, ~__cil_tmp91~13.offset : int;
    var ~__cil_tmp92~13.base : int, ~__cil_tmp92~13.offset : int;
    var ~__cil_tmp93~13 : int;
    var ~__cil_tmp94~13 : int;
    var ~__cil_tmp95~13.base : int, ~__cil_tmp95~13.offset : int;

  loc2:
    ~d.base, ~d.offset := #in~d.base, #in~d.offset;
    ~cmd := #in~cmd;
    ~out.base, ~out.offset := #in~out.base, #in~out.offset;
    ~outlen := #in~outlen;
    ~in.base, ~in.offset := #in~in.base, #in~in.offset;
    ~inlen := #in~inlen;
    ~msec := #in~msec;
    havoc ~ret~13;
    havoc ~buf~13.base, ~buf~13.offset;
    havoc ~__len~13;
    havoc ~__ret~13.base, ~__ret~13.offset;
    havoc ~loop_~13;
    havoc ~tmp___7~13;
    havoc ~tmp___8~13;
    havoc ~tmp___9~13;
    havoc ~tmp___10~13;
    havoc ~loop____0~13;
    havoc ~__len___0~13;
    havoc ~__ret___0~13.base, ~__ret___0~13.offset;
    havoc ~__cil_tmp20~13;
    havoc ~__cil_tmp21~13;
    havoc ~__cil_tmp22~13.base, ~__cil_tmp22~13.offset;
    havoc ~__cil_tmp23~13.base, ~__cil_tmp23~13.offset;
    havoc ~__cil_tmp24~13;
    havoc ~__cil_tmp25~13;
    havoc ~__cil_tmp26~13.base, ~__cil_tmp26~13.offset;
    havoc ~__cil_tmp27~13.base, ~__cil_tmp27~13.offset;
    havoc ~__cil_tmp28~13;
    havoc ~__cil_tmp29~13;
    havoc ~__cil_tmp30~13.base, ~__cil_tmp30~13.offset;
    havoc ~__cil_tmp31~13.base, ~__cil_tmp31~13.offset;
    havoc ~__cil_tmp32~13.base, ~__cil_tmp32~13.offset;
    havoc ~__cil_tmp33~13.base, ~__cil_tmp33~13.offset;
    havoc ~__cil_tmp34~13;
    havoc ~__cil_tmp35~13;
    havoc ~__cil_tmp36~13.base, ~__cil_tmp36~13.offset;
    havoc ~__cil_tmp37~13;
    havoc ~__cil_tmp38~13.base, ~__cil_tmp38~13.offset;
    havoc ~__cil_tmp39~13;
    havoc ~__cil_tmp40~13;
    havoc ~__cil_tmp41~13.base, ~__cil_tmp41~13.offset;
    havoc ~__cil_tmp42~13;
    havoc ~__cil_tmp43~13;
    havoc ~__cil_tmp44~13;
    havoc ~__cil_tmp45~13.base, ~__cil_tmp45~13.offset;
    havoc ~__cil_tmp46~13;
    havoc ~__cil_tmp47~13;
    havoc ~__cil_tmp48~13.base, ~__cil_tmp48~13.offset;
    havoc ~__cil_tmp49~13;
    havoc ~__cil_tmp50~13;
    havoc ~__cil_tmp51~13;
    havoc ~__cil_tmp52~13;
    havoc ~__cil_tmp53~13;
    havoc ~__cil_tmp54~13;
    havoc ~__cil_tmp55~13;
    havoc ~__cil_tmp56~13;
    havoc ~__cil_tmp57~13.base, ~__cil_tmp57~13.offset;
    havoc ~__cil_tmp58~13;
    havoc ~__cil_tmp59~13;
    havoc ~__cil_tmp60~13;
    havoc ~__cil_tmp61~13;
    havoc ~__cil_tmp62~13.base, ~__cil_tmp62~13.offset;
    havoc ~__cil_tmp63~13;
    havoc ~__cil_tmp64~13;
    havoc ~__cil_tmp65~13.base, ~__cil_tmp65~13.offset;
    havoc ~__cil_tmp66~13;
    havoc ~__cil_tmp67~13;
    havoc ~__cil_tmp68~13;
    havoc ~__cil_tmp69~13;
    havoc ~__cil_tmp70~13;
    havoc ~__cil_tmp71~13;
    havoc ~__cil_tmp72~13;
    havoc ~__cil_tmp73~13;
    havoc ~__cil_tmp74~13;
    havoc ~__cil_tmp75~13;
    havoc ~__cil_tmp76~13.base, ~__cil_tmp76~13.offset;
    havoc ~__cil_tmp77~13;
    havoc ~__cil_tmp78~13.base, ~__cil_tmp78~13.offset;
    havoc ~__cil_tmp79~13;
    havoc ~__cil_tmp80~13.base, ~__cil_tmp80~13.offset;
    havoc ~__cil_tmp81~13;
    havoc ~__cil_tmp82~13.base, ~__cil_tmp82~13.offset;
    havoc ~__cil_tmp83~13;
    havoc ~__cil_tmp84~13;
    havoc ~__cil_tmp85~13.base, ~__cil_tmp85~13.offset;
    havoc ~__cil_tmp86~13;
    havoc ~__cil_tmp87~13.base, ~__cil_tmp87~13.offset;
    havoc ~__cil_tmp88~13;
    havoc ~__cil_tmp89~13;
    havoc ~__cil_tmp90~13.base, ~__cil_tmp90~13.offset;
    havoc ~__cil_tmp91~13.base, ~__cil_tmp91~13.offset;
    havoc ~__cil_tmp92~13.base, ~__cil_tmp92~13.offset;
    havoc ~__cil_tmp93~13;
    havoc ~__cil_tmp94~13;
    havoc ~__cil_tmp95~13.base, ~__cil_tmp95~13.offset;
    ~ret~13 := 0;
    ~__cil_tmp20~13 := ~d.base + ~d.offset;
    ~__cil_tmp21~13 := ~__cil_tmp20~13 + 9696;
    call #t~mem1.base, #t~mem1.offset := read~$Pointer$(0, (if ~__cil_tmp21~13 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp21~13 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp21~13 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~__cil_tmp22~13.base, ~__cil_tmp22~13.offset := #t~mem1.base, #t~mem1.offset;
    havoc #t~mem1.base, #t~mem1.offset;
    ~buf~13.base, ~buf~13.offset := ~__cil_tmp22~13.base, ~__cil_tmp22~13.offset;
    ~__cil_tmp23~13.base, ~__cil_tmp23~13.offset := ~buf~13.base, ~buf~13.offset + 0;
    call write~int(~cmd, ~__cil_tmp23~13.base, ~__cil_tmp23~13.offset, 1);
    assume !(~outlen > 19);
    assume !(~inlen > 11);
    ~__cil_tmp24~13 := ~d.base + ~d.offset;
    ~__cil_tmp25~13 := ~__cil_tmp24~13 + 3576;
    ~__cil_tmp26~13.base, ~__cil_tmp26~13.offset := 0, (if ~__cil_tmp25~13 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp25~13 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp25~13 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616);
    call #t~ret3 := mutex_lock_interruptible(~__cil_tmp26~13.base, ~__cil_tmp26~13.offset);
    assume -2147483648 <= #t~ret3 && #t~ret3 <= 2147483647;
    ~ret~13 := #t~ret3;
    havoc #t~ret3;
    assume !(~ret~13 != 0);
    ~__cil_tmp27~13.base, ~__cil_tmp27~13.offset := 0, 0;
    ~__cil_tmp28~13 := ~__cil_tmp27~13.base + ~__cil_tmp27~13.offset;
    ~__cil_tmp29~13 := ~out.base + ~out.offset;
    assume !(~__cil_tmp29~13 % 18446744073709551616 != ~__cil_tmp28~13 % 18446744073709551616);
    assume true;
    assume !false;
    ~__cil_tmp33~13.base, ~__cil_tmp33~13.offset := ~#dvb_usb_vp7045_debug.base, ~#dvb_usb_vp7045_debug.offset;
    call #t~mem5 := read~int(~__cil_tmp33~13.base, ~__cil_tmp33~13.offset, 4);
    ~__cil_tmp34~13 := #t~mem5;
    havoc #t~mem5;
    assume !(~bitwiseAnd(~__cil_tmp34~13, 2) != 0);
    ~loop_~13 := 0;
    goto loc3;
  loc3:
    assume true;
    assume !false;
    ~__cil_tmp35~13 := ~outlen + 1;
    goto loc4;
  loc4:
    goto loc4_0, loc4_1;
  loc4_0:
    assume ~loop_~13 < ~__cil_tmp35~13;
    assume true;
    assume !false;
    ~__cil_tmp36~13.base, ~__cil_tmp36~13.offset := ~#dvb_usb_vp7045_debug.base, ~#dvb_usb_vp7045_debug.offset;
    call #t~mem8 := read~int(~__cil_tmp36~13.base, ~__cil_tmp36~13.offset, 4);
    ~__cil_tmp37~13 := #t~mem8;
    havoc #t~mem8;
    assume !(~bitwiseAnd(~__cil_tmp37~13, 2) != 0);
    ~loop_~13 := ~loop_~13 + 1;
    goto loc3;
  loc4_1:
    assume !(~loop_~13 < ~__cil_tmp35~13);
    assume true;
    assume !false;
    ~__cil_tmp41~13.base, ~__cil_tmp41~13.offset := ~#dvb_usb_vp7045_debug.base, ~#dvb_usb_vp7045_debug.offset;
    call #t~mem12 := read~int(~__cil_tmp41~13.base, ~__cil_tmp41~13.offset, 4);
    ~__cil_tmp42~13 := #t~mem12;
    havoc #t~mem12;
    assume !(~bitwiseAnd(~__cil_tmp42~13, 2) != 0);
    ~__cil_tmp43~13 := ~d.base + ~d.offset;
    ~__cil_tmp44~13 := ~__cil_tmp43~13 + 3560;
    call #t~mem15.base, #t~mem15.offset := read~$Pointer$(0, (if ~__cil_tmp44~13 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp44~13 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp44~13 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~__cil_tmp45~13.base, ~__cil_tmp45~13.offset := #t~mem15.base, #t~mem15.offset;
    havoc #t~mem15.base, #t~mem15.offset;
    call #t~ret16 := __create_pipe(~__cil_tmp45~13.base, ~__cil_tmp45~13.offset, 0);
    ~tmp___7~13 := #t~ret16;
    havoc #t~ret16;
    ~__cil_tmp46~13 := ~d.base + ~d.offset;
    ~__cil_tmp47~13 := ~__cil_tmp46~13 + 3560;
    call #t~mem17.base, #t~mem17.offset := read~$Pointer$(0, (if ~__cil_tmp47~13 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp47~13 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp47~13 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~__cil_tmp48~13.base, ~__cil_tmp48~13.offset := #t~mem17.base, #t~mem17.offset;
    havoc #t~mem17.base, #t~mem17.offset;
    ~__cil_tmp49~13 := ~shiftLeft(2, 30);
    ~__cil_tmp50~13 := ~__cil_tmp49~13;
    ~__cil_tmp51~13 := ~bitwiseOr(~__cil_tmp50~13, ~tmp___7~13);
    ~__cil_tmp52~13 := 193;
    ~__cil_tmp53~13 := ~shiftLeft(2, 5);
    ~__cil_tmp54~13 := ~__cil_tmp53~13;
    ~__cil_tmp55~13 := 0;
    ~__cil_tmp56~13 := 0;
    ~__cil_tmp57~13.base, ~__cil_tmp57~13.offset := ~buf~13.base, ~buf~13.offset;
    ~__cil_tmp58~13 := 20;
    call #t~ret18 := usb_control_msg(~__cil_tmp48~13.base, ~__cil_tmp48~13.offset, ~__cil_tmp51~13, ~__cil_tmp52~13, ~__cil_tmp54~13, ~__cil_tmp55~13, ~__cil_tmp56~13, ~__cil_tmp57~13.base, ~__cil_tmp57~13.offset, ~__cil_tmp58~13, 2000);
    assume -2147483648 <= #t~ret18 && #t~ret18 <= 2147483647;
    ~tmp___8~13 := #t~ret18;
    havoc #t~ret18;
    assume ~tmp___8~13 != 20;
    call #t~nondet19.base, #t~nondet19.offset := #Ultimate.alloc(53);
    call #t~ret20 := printk(#t~nondet19.base, #t~nondet19.offset);
    assume -2147483648 <= #t~ret20 && #t~ret20 <= 2147483647;
    havoc #t~nondet19.base, #t~nondet19.offset;
    havoc #t~ret20;
    ~ret~13 := -5;
    ~__cil_tmp93~13 := ~d.base + ~d.offset;
    ~__cil_tmp94~13 := ~__cil_tmp93~13 + 3576;
    ~__cil_tmp95~13.base, ~__cil_tmp95~13.offset := 0, (if ~__cil_tmp94~13 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp94~13 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp94~13 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616);
    call mutex_unlock(~__cil_tmp95~13.base, ~__cil_tmp95~13.offset);
    return;
}

procedure vp7045_usb_op(#in~d.base : int, #in~d.offset : int, #in~cmd : int, #in~out.base : int, #in~out.offset : int, #in~outlen : int, #in~in.base : int, #in~in.offset : int, #in~inlen : int, #in~msec : int) returns (#res : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length, ~ldv_mutex;

implementation mutex_lock_interruptible(#in~lock.base : int, #in~lock.offset : int) returns (#res : int){
    var #t~nondet43 : int;
    var ~lock.base : int, ~lock.offset : int;
    var ~nondetermined~98 : int;

  loc5:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    havoc ~nondetermined~98;
    assume ~ldv_mutex == 1;
    assume -2147483648 <= #t~nondet43 && #t~nondet43 <= 2147483647;
    ~nondetermined~98 := #t~nondet43;
    havoc #t~nondet43;
    assume ~nondetermined~98 != 0;
    ~ldv_mutex := 2;
    #res := 0;
    assume true;
    return;
}

procedure mutex_lock_interruptible(#in~lock.base : int, #in~lock.offset : int) returns (#res : int);
modifies ~ldv_mutex;

implementation vp7045_fe_read_status(#in~fe.base : int, #in~fe.offset : int, #in~status.base : int, #in~status.offset : int) returns (#res : int){
    var #t~mem45.base : int, #t~mem45.offset : int;
    var #t~mem46.base : int, #t~mem46.offset : int;
    var #t~ret47 : ~u8;
    var #t~mem48.base : int, #t~mem48.offset : int;
    var #t~ret49 : ~u8;
    var #t~mem50.base : int, #t~mem50.offset : int;
    var #t~ret51 : ~u8;
    var #t~mem53 : int;
    var #t~mem55 : int;
    var #t~mem57 : int;
    var #t~mem59 : int;
    var #t~mem61 : int;
    var #t~mem63 : int;
    var #t~mem64 : int;
    var ~fe.base : int, ~fe.offset : int;
    var ~status.base : int, ~status.offset : int;
    var ~state~117.base : int, ~state~117.offset : int;
    var ~s0~117 : ~u8;
    var ~tmp___7~117 : ~u8;
    var ~s1~117 : ~u8;
    var ~tmp___8~117 : ~u8;
    var ~s3~117 : ~u8;
    var ~tmp___9~117 : ~u8;
    var ~__cil_tmp10~117 : int;
    var ~__cil_tmp11~117 : int;
    var ~__cil_tmp12~117.base : int, ~__cil_tmp12~117.offset : int;
    var ~__cil_tmp13~117 : int;
    var ~__cil_tmp14~117 : int;
    var ~__cil_tmp15~117.base : int, ~__cil_tmp15~117.offset : int;
    var ~__cil_tmp16~117 : ~u8;
    var ~__cil_tmp17~117 : int;
    var ~__cil_tmp18~117 : int;
    var ~__cil_tmp19~117.base : int, ~__cil_tmp19~117.offset : int;
    var ~__cil_tmp20~117 : ~u8;
    var ~__cil_tmp21~117 : int;
    var ~__cil_tmp22~117 : int;
    var ~__cil_tmp23~117.base : int, ~__cil_tmp23~117.offset : int;
    var ~__cil_tmp24~117 : ~u8;
    var ~__cil_tmp25~117 : int;
    var ~__cil_tmp26~117 : int;
    var ~__cil_tmp27~117 : ~fe_status_t;
    var ~__cil_tmp28~117 : int;
    var ~__cil_tmp29~117 : int;
    var ~__cil_tmp30~117 : int;
    var ~__cil_tmp31~117 : int;
    var ~__cil_tmp32~117 : ~fe_status_t;
    var ~__cil_tmp33~117 : int;
    var ~__cil_tmp34~117 : int;
    var ~__cil_tmp35~117 : int;
    var ~__cil_tmp36~117 : int;
    var ~__cil_tmp37~117 : ~fe_status_t;
    var ~__cil_tmp38~117 : int;
    var ~__cil_tmp39~117 : int;
    var ~__cil_tmp40~117 : int;
    var ~__cil_tmp41~117 : int;
    var ~__cil_tmp42~117 : ~fe_status_t;
    var ~__cil_tmp43~117 : int;
    var ~__cil_tmp44~117 : int;
    var ~__cil_tmp45~117 : int;
    var ~__cil_tmp46~117 : int;
    var ~__cil_tmp47~117 : ~fe_status_t;
    var ~__cil_tmp48~117 : int;
    var ~__cil_tmp49~117 : int;
    var ~__cil_tmp50~117 : ~fe_status_t;
    var ~__cil_tmp51~117 : int;
    var ~__cil_tmp52~117 : int;
    var ~__cil_tmp53~117 : ~fe_status_t;
    var ~__cil_tmp54~117 : int;
    var ~__cil_tmp55~117 : int;

  loc6:
    ~fe.base, ~fe.offset := #in~fe.base, #in~fe.offset;
    ~status.base, ~status.offset := #in~status.base, #in~status.offset;
    havoc ~state~117.base, ~state~117.offset;
    havoc ~s0~117;
    havoc ~tmp___7~117;
    havoc ~s1~117;
    havoc ~tmp___8~117;
    havoc ~s3~117;
    havoc ~tmp___9~117;
    havoc ~__cil_tmp10~117;
    havoc ~__cil_tmp11~117;
    havoc ~__cil_tmp12~117.base, ~__cil_tmp12~117.offset;
    havoc ~__cil_tmp13~117;
    havoc ~__cil_tmp14~117;
    havoc ~__cil_tmp15~117.base, ~__cil_tmp15~117.offset;
    havoc ~__cil_tmp16~117;
    havoc ~__cil_tmp17~117;
    havoc ~__cil_tmp18~117;
    havoc ~__cil_tmp19~117.base, ~__cil_tmp19~117.offset;
    havoc ~__cil_tmp20~117;
    havoc ~__cil_tmp21~117;
    havoc ~__cil_tmp22~117;
    havoc ~__cil_tmp23~117.base, ~__cil_tmp23~117.offset;
    havoc ~__cil_tmp24~117;
    havoc ~__cil_tmp25~117;
    havoc ~__cil_tmp26~117;
    havoc ~__cil_tmp27~117;
    havoc ~__cil_tmp28~117;
    havoc ~__cil_tmp29~117;
    havoc ~__cil_tmp30~117;
    havoc ~__cil_tmp31~117;
    havoc ~__cil_tmp32~117;
    havoc ~__cil_tmp33~117;
    havoc ~__cil_tmp34~117;
    havoc ~__cil_tmp35~117;
    havoc ~__cil_tmp36~117;
    havoc ~__cil_tmp37~117;
    havoc ~__cil_tmp38~117;
    havoc ~__cil_tmp39~117;
    havoc ~__cil_tmp40~117;
    havoc ~__cil_tmp41~117;
    havoc ~__cil_tmp42~117;
    havoc ~__cil_tmp43~117;
    havoc ~__cil_tmp44~117;
    havoc ~__cil_tmp45~117;
    havoc ~__cil_tmp46~117;
    havoc ~__cil_tmp47~117;
    havoc ~__cil_tmp48~117;
    havoc ~__cil_tmp49~117;
    havoc ~__cil_tmp50~117;
    havoc ~__cil_tmp51~117;
    havoc ~__cil_tmp52~117;
    havoc ~__cil_tmp53~117;
    havoc ~__cil_tmp54~117;
    havoc ~__cil_tmp55~117;
    ~__cil_tmp10~117 := ~fe.base + ~fe.offset;
    ~__cil_tmp11~117 := ~__cil_tmp10~117 + 760;
    call #t~mem45.base, #t~mem45.offset := read~$Pointer$(0, (if ~__cil_tmp11~117 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp11~117 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp11~117 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~__cil_tmp12~117.base, ~__cil_tmp12~117.offset := #t~mem45.base, #t~mem45.offset;
    havoc #t~mem45.base, #t~mem45.offset;
    ~state~117.base, ~state~117.offset := ~__cil_tmp12~117.base, ~__cil_tmp12~117.offset;
    ~__cil_tmp13~117 := ~state~117.base + ~state~117.offset;
    ~__cil_tmp14~117 := ~__cil_tmp13~117 + 960;
    call #t~mem46.base, #t~mem46.offset := read~$Pointer$(0, (if ~__cil_tmp14~117 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp14~117 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp14~117 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~__cil_tmp15~117.base, ~__cil_tmp15~117.offset := #t~mem46.base, #t~mem46.offset;
    havoc #t~mem46.base, #t~mem46.offset;
    ~__cil_tmp16~117 := 0;
    call #t~ret47 := vp7045_read_reg(~__cil_tmp15~117.base, ~__cil_tmp15~117.offset, ~__cil_tmp16~117);
    return;
}

procedure vp7045_fe_read_status(#in~fe.base : int, #in~fe.offset : int, #in~status.base : int, #in~status.offset : int) returns (#res : int);
modifies #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex;

implementation vp7045_read_reg(#in~d.base : int, #in~d.offset : int, #in~reg : int) returns (#res : ~u8){
    var #t~ret41 : int;
    var #t~mem42 : int;
    var ~d.base : int, ~d.offset : int;
    var ~reg : int;
    var ~#obuf~88.base : int, ~#obuf~88.offset : int;
    var ~#v~88.base : int, ~#v~88.offset : int;
    var ~__cil_tmp5~88 : int;
    var ~__cil_tmp6~88 : int;
    var ~__cil_tmp7~88 : int;
    var ~__cil_tmp8~88 : int;
    var ~__cil_tmp9~88 : int;
    var ~__cil_tmp10~88 : int;
    var ~__cil_tmp11~88 : ~u8;
    var ~__cil_tmp12~88 : int;
    var ~__cil_tmp13~88 : int;
    var ~__cil_tmp14~88.base : int, ~__cil_tmp14~88.offset : int;
    var ~__cil_tmp15~88.base : int, ~__cil_tmp15~88.offset : int;

  loc7:
    ~d.base, ~d.offset := #in~d.base, #in~d.offset;
    ~reg := #in~reg;
    call ~#obuf~88.base, ~#obuf~88.offset := #Ultimate.alloc(2);
    call ~#v~88.base, ~#v~88.offset := #Ultimate.alloc(1);
    havoc ~__cil_tmp5~88;
    havoc ~__cil_tmp6~88;
    havoc ~__cil_tmp7~88;
    havoc ~__cil_tmp8~88;
    havoc ~__cil_tmp9~88;
    havoc ~__cil_tmp10~88;
    havoc ~__cil_tmp11~88;
    havoc ~__cil_tmp12~88;
    havoc ~__cil_tmp13~88;
    havoc ~__cil_tmp14~88.base, ~__cil_tmp14~88.offset;
    havoc ~__cil_tmp15~88.base, ~__cil_tmp15~88.offset;
    ~__cil_tmp5~88 := 0;
    ~__cil_tmp6~88 := ~#obuf~88.base + ~#obuf~88.offset + ~__cil_tmp5~88;
    call write~int(0, 0, (if ~__cil_tmp6~88 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp6~88 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp6~88 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 1);
    ~__cil_tmp7~88 := 1;
    ~__cil_tmp8~88 := ~#obuf~88.base + ~#obuf~88.offset + ~__cil_tmp7~88;
    call write~int(0, 0, (if ~__cil_tmp8~88 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp8~88 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp8~88 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 1);
    ~__cil_tmp9~88 := 1;
    ~__cil_tmp10~88 := ~#obuf~88.base + ~#obuf~88.offset + ~__cil_tmp9~88;
    call write~int(~reg, 0, (if ~__cil_tmp10~88 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp10~88 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp10~88 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 1);
    ~__cil_tmp11~88 := 3;
    ~__cil_tmp12~88 := 0;
    ~__cil_tmp13~88 := ~#obuf~88.base + ~#obuf~88.offset + ~__cil_tmp12~88;
    ~__cil_tmp14~88.base, ~__cil_tmp14~88.offset := 0, (if ~__cil_tmp13~88 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp13~88 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp13~88 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616);
    call #t~ret41 := vp7045_usb_op(~d.base, ~d.offset, ~__cil_tmp11~88, ~__cil_tmp14~88.base, ~__cil_tmp14~88.offset, 2, ~#v~88.base, ~#v~88.offset, 1, 30);
    return;
}

procedure vp7045_read_reg(#in~d.base : int, #in~d.offset : int, #in~reg : int) returns (#res : ~u8);
modifies #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex;

implementation ULTIMATE.start() returns (){
  loc8:
    call ULTIMATE.init();
    call main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~#dvb_usb_vp7045_debug.base, ~#dvb_usb_vp7045_debug.offset, ~LDV_IN_INTERRUPT, ~ldv_mutex, #memory_int, ~LDV_IN_INTERRUPT;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex, ~LDV_IN_INTERRUPT;

implementation main() returns (){
    var #t~nondet104 : int;
    var #t~nondet105 : int;
    var #t~ret106 : int;
    var #t~ret107 : int;
    var #t~ret108 : int;
    var #t~ret109 : int;
    var #t~ret110 : int;
    var #t~ret111 : int;
    var #t~ret112 : int;
    var #t~ret113 : int;
    var #t~ret114 : int;
    var ~var_group1~170.base : int, ~var_group1~170.offset : int;
    var ~var_group2~170.base : int, ~var_group2~170.offset : int;
    var ~var_group3~170.base : int, ~var_group3~170.offset : int;
    var ~var_vp7045_fe_read_status_0_p1~170.base : int, ~var_vp7045_fe_read_status_0_p1~170.offset : int;
    var ~var_vp7045_fe_read_ber_1_p1~170.base : int, ~var_vp7045_fe_read_ber_1_p1~170.offset : int;
    var ~var_vp7045_fe_read_signal_strength_3_p1~170.base : int, ~var_vp7045_fe_read_signal_strength_3_p1~170.offset : int;
    var ~var_vp7045_fe_read_snr_4_p1~170.base : int, ~var_vp7045_fe_read_snr_4_p1~170.offset : int;
    var ~var_vp7045_fe_read_unc_blocks_2_p1~170.base : int, ~var_vp7045_fe_read_unc_blocks_2_p1~170.offset : int;
    var ~ldv_s_vp7045_fe_ops_dvb_frontend_ops~170 : int;
    var ~tmp___7~170 : int;
    var ~tmp___8~170 : int;
    var ~__cil_tmp12~170 : int;

  loc9:
    havoc ~var_group1~170.base, ~var_group1~170.offset;
    havoc ~var_group2~170.base, ~var_group2~170.offset;
    havoc ~var_group3~170.base, ~var_group3~170.offset;
    havoc ~var_vp7045_fe_read_status_0_p1~170.base, ~var_vp7045_fe_read_status_0_p1~170.offset;
    havoc ~var_vp7045_fe_read_ber_1_p1~170.base, ~var_vp7045_fe_read_ber_1_p1~170.offset;
    havoc ~var_vp7045_fe_read_signal_strength_3_p1~170.base, ~var_vp7045_fe_read_signal_strength_3_p1~170.offset;
    havoc ~var_vp7045_fe_read_snr_4_p1~170.base, ~var_vp7045_fe_read_snr_4_p1~170.offset;
    havoc ~var_vp7045_fe_read_unc_blocks_2_p1~170.base, ~var_vp7045_fe_read_unc_blocks_2_p1~170.offset;
    havoc ~ldv_s_vp7045_fe_ops_dvb_frontend_ops~170;
    havoc ~tmp___7~170;
    havoc ~tmp___8~170;
    havoc ~__cil_tmp12~170;
    ~LDV_IN_INTERRUPT := 1;
    call ldv_initialize();
    ~ldv_s_vp7045_fe_ops_dvb_frontend_ops~170 := 0;
    assume true;
    assume !false;
    assume -2147483648 <= #t~nondet104 && #t~nondet104 <= 2147483647;
    ~tmp___8~170 := #t~nondet104;
    havoc #t~nondet104;
    assume ~tmp___8~170 != 0;
    assume -2147483648 <= #t~nondet105 && #t~nondet105 <= 2147483647;
    ~tmp___7~170 := #t~nondet105;
    havoc #t~nondet105;
    assume !(~tmp___7~170 == 0);
    assume !(~tmp___7~170 == 1);
    assume !(~tmp___7~170 == 2);
    assume !(~tmp___7~170 == 3);
    assume !(~tmp___7~170 == 4);
    assume ~tmp___7~170 == 5;
    call #t~ret110 := vp7045_fe_read_status(~var_group1~170.base, ~var_group1~170.offset, ~var_vp7045_fe_read_status_0_p1~170.base, ~var_vp7045_fe_read_status_0_p1~170.offset);
    return;
}

procedure main() returns ();
modifies ~LDV_IN_INTERRUPT, #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_mutex;

implementation ldv_blast_assert() returns (){
  loc10:
    assume !false;
    goto loc11;
  loc11:
    assert false;
}

procedure ldv_blast_assert() returns ();
modifies ;

implementation __create_pipe(#in~dev.base : int, #in~dev.offset : int, #in~endpoint : int) returns (#res : int){
    var #t~mem0 : int;
    var ~dev.base : int, ~dev.offset : int;
    var ~endpoint : int;
    var ~__cil_tmp3~8 : int;
    var ~__cil_tmp4~8 : int;
    var ~__cil_tmp5~8 : int;
    var ~__cil_tmp6~8 : int;

  loc12:
    ~dev.base, ~dev.offset := #in~dev.base, #in~dev.offset;
    ~endpoint := #in~endpoint;
    havoc ~__cil_tmp3~8;
    havoc ~__cil_tmp4~8;
    havoc ~__cil_tmp5~8;
    havoc ~__cil_tmp6~8;
    ~__cil_tmp3~8 := ~shiftLeft(~endpoint, 15);
    call #t~mem0 := read~int(~dev.base, ~dev.offset, 4);
    ~__cil_tmp4~8 := #t~mem0;
    havoc #t~mem0;
    ~__cil_tmp5~8 := ~shiftLeft(~__cil_tmp4~8, 8);
    ~__cil_tmp6~8 := ~__cil_tmp5~8;
    #res := ~bitwiseOr(~__cil_tmp6~8, ~__cil_tmp3~8);
    assume true;
    return;
}

procedure __create_pipe(#in~dev.base : int, #in~dev.offset : int, #in~endpoint : int) returns (#res : int);
modifies ;

procedure kfree(#in~44.base : int, #in~44.offset : int) returns ();
modifies ;

procedure printk(#in~fmt.base : int, #in~fmt.offset : int) returns (#res : int);
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];

procedure msleep(#in~msecs : int) returns ();
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure __VERIFIER_error() returns ();
modifies ;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure ldv_initialize() returns ();
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure usb_control_msg(#in~dev.base : int, #in~dev.offset : int, #in~pipe : int, #in~request : int, #in~requesttype : int, #in~value : int, #in~index : int, #in~data.base : int, #in~data.offset : int, #in~size : int, #in~timeout : int) returns (#res : int);
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;


type STRUCT~perf_event;
type STRUCT~tvec_base;
type STRUCT~dev_pm_qos_request;
type STRUCT~pm_qos_raints;
type STRUCT~sock;
type STRUCT~sysfs_dirent;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~device_node;
type STRUCT~hotplug_slot;
type STRUCT~pci_sriov;
type STRUCT~pcie_link_state;
type STRUCT~pci_vpd;
type STRUCT~pci_ats;
type STRUCT~anon_vma;
type STRUCT~mempolicy;
type STRUCT~linux_binfmt;
type STRUCT~mmu_notifier_mm;
type STRUCT~nameidata;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~pid_namespace;
type STRUCT~writeback_control;
type STRUCT~pipe_inode_info;
type STRUCT~cdev;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~poll_table_struct;
type STRUCT~kstatfs;
type STRUCT~seq_file;
type STRUCT~sem_undo_list;
type STRUCT~keyring_list;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~eventfd_ctx;
type STRUCT~tty_struct;
type STRUCT~autogroup;
type STRUCT~taskstats;
type STRUCT~tty_audit_buf;
type STRUCT~rq;
type STRUCT~cfs_rq;
type STRUCT~rt_rq;
type STRUCT~mem_cgroup;
type STRUCT~fs_struct;
type STRUCT~nsproxy;
type STRUCT~audit_context;
type STRUCT~rt_mutex_waiter;
type STRUCT~reclaim_state;
type STRUCT~css_set;
type STRUCT~robust_list_head;
type STRUCT~compat_robust_list_head;
type STRUCT~futex_pi_state;
type STRUCT~perf_event_context;
type STRUCT~timer_rand_state;
type STRUCT~disk_events;
type STRUCT~bsg_job;
type STRUCT~hd_geometry;
type STRUCT~scsi_sense_hdr;
type STRUCT~scsi_host_cmd_pool;
type STRUCT~scsi_transport_template;
type STRUCT~workqueue_struct;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__s64 = int;
type ~__u64 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~__kernel_timer_t = int;
type ~__kernel_clockid_t = int;
type ~umode_t = int;
type ~bool = int;
type ~uint = int;
type ~ulong = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~pgdval_t = int;
type ~pgprotval_t = int;
type ~kernel_ulong_t = int;
type ~pci_power_t = int;
type ~pci_channel_state_t = int;
type ~pci_dev_flags_t = int;
type ~pci_bus_flags_t = int;
type ~pci_ers_result_t = int;
type ~qsize_t = int;
type ~cputime_t = int;
type ~sigBYTE = int;
type ~sigWORD = int;
type ~sigINT = int;
type ~uCHAR = int;
type ~uSHORT = int;
type ~uINT = int;
type ~__kernel_nlink_t = ~__kernel_ulong_t;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_off_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_clock_t = ~__kernel_long_t;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~nlink_t = ~__kernel_nlink_t;
type ~off_t = ~__kernel_off_t;
type ~pid_t = ~__kernel_pid_t;
type ~clockid_t = ~__kernel_clockid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint32_t = ~__u32;
type ~dma_addr_t = ~u64;
type ~phys_addr_t = ~u64;
type ~resource_size_t = ~phys_addr_t;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~irqreturn_t = int;
type ~qid_t = ~__kernel_uid32_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
const #funAddr~noop_llseek.base : int;
const #funAddr~noop_llseek.offset : int;
const #funAddr~adpt_unlocked_ioctl.base : int;
const #funAddr~adpt_unlocked_ioctl.offset : int;
const #funAddr~compat_adpt_ioctl.base : int;
const #funAddr~compat_adpt_ioctl.offset : int;
const #funAddr~adpt_open.base : int;
const #funAddr~adpt_open.offset : int;
const #funAddr~adpt_close.base : int;
const #funAddr~adpt_close.offset : int;
const #funAddr~adpt_isr.base : int;
const #funAddr~adpt_isr.offset : int;
const #funAddr~default_wake_function.base : int;
const #funAddr~default_wake_function.offset : int;
const #funAddr~adpt_info.base : int;
const #funAddr~adpt_info.offset : int;
const #funAddr~adpt_queue.base : int;
const #funAddr~adpt_queue.offset : int;
const #funAddr~adpt_abort.base : int;
const #funAddr~adpt_abort.offset : int;
const #funAddr~adpt_device_reset.base : int;
const #funAddr~adpt_device_reset.offset : int;
const #funAddr~adpt_bus_reset.base : int;
const #funAddr~adpt_bus_reset.offset : int;
const #funAddr~adpt_reset.base : int;
const #funAddr~adpt_reset.offset : int;
const #funAddr~adpt_slave_configure.base : int;
const #funAddr~adpt_slave_configure.offset : int;
const #funAddr~adpt_bios_param.base : int;
const #funAddr~adpt_bios_param.offset : int;
const #funAddr~adpt_proc_info.base : int;
const #funAddr~adpt_proc_info.offset : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~irqreturn~IRQ_NONE : int;
const ~irqreturn~IRQ_HANDLED : int;
const ~irqreturn~IRQ_WAKE_THREAD : int;
const ~pci_channel_state~pci_channel_io_normal : int;
const ~pci_channel_state~pci_channel_io_frozen : int;
const ~pci_channel_state~pci_channel_io_perm_failure : int;
const ~dma_data_direction~DMA_BIDIRECTIONAL : int;
const ~dma_data_direction~DMA_TO_DEVICE : int;
const ~dma_data_direction~DMA_FROM_DEVICE : int;
const ~dma_data_direction~DMA_NONE : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~hrtimer_restart~HRTIMER_NORESTART : int;
const ~hrtimer_restart~HRTIMER_RESTART : int;
const ~rq_cmd_type_bits~REQ_TYPE_FS : int;
const ~rq_cmd_type_bits~REQ_TYPE_BLOCK_PC : int;
const ~rq_cmd_type_bits~REQ_TYPE_SENSE : int;
const ~rq_cmd_type_bits~REQ_TYPE_PM_SUSPEND : int;
const ~rq_cmd_type_bits~REQ_TYPE_PM_RESUME : int;
const ~rq_cmd_type_bits~REQ_TYPE_PM_SHUTDOWN : int;
const ~rq_cmd_type_bits~REQ_TYPE_SPECIAL : int;
const ~rq_cmd_type_bits~REQ_TYPE_ATA_TASKFILE : int;
const ~rq_cmd_type_bits~REQ_TYPE_ATA_PC : int;
const ~blk_eh_timer_return~BLK_EH_NOT_HANDLED : int;
const ~blk_eh_timer_return~BLK_EH_HANDLED : int;
const ~blk_eh_timer_return~BLK_EH_RESET_TIMER : int;
const ~scsi_device_state~SDEV_CREATED : int;
const ~scsi_device_state~SDEV_RUNNING : int;
const ~scsi_device_state~SDEV_CANCEL : int;
const ~scsi_device_state~SDEV_DEL : int;
const ~scsi_device_state~SDEV_QUIESCE : int;
const ~scsi_device_state~SDEV_OFFLINE : int;
const ~scsi_device_state~SDEV_BLOCK : int;
const ~scsi_device_state~SDEV_CREATED_BLOCK : int;
const ~scsi_target_state~STARGET_CREATED : int;
const ~scsi_target_state~STARGET_RUNNING : int;
const ~scsi_target_state~STARGET_DEL : int;
const ~scsi_host_state~SHOST_CREATED : int;
const ~scsi_host_state~SHOST_RUNNING : int;
const ~scsi_host_state~SHOST_CANCEL : int;
const ~scsi_host_state~SHOST_DEL : int;
const ~scsi_host_state~SHOST_RECOVERY : int;
const ~scsi_host_state~SHOST_CANCEL_RECOVERY : int;
const ~scsi_host_state~SHOST_DEL_RECOVERY : int;
axiom #funAddr~noop_llseek.base == -1 && #funAddr~noop_llseek.offset == 0;
axiom #funAddr~adpt_unlocked_ioctl.base == -1 && #funAddr~adpt_unlocked_ioctl.offset == 1;
axiom #funAddr~compat_adpt_ioctl.base == -1 && #funAddr~compat_adpt_ioctl.offset == 2;
axiom #funAddr~adpt_open.base == -1 && #funAddr~adpt_open.offset == 3;
axiom #funAddr~adpt_close.base == -1 && #funAddr~adpt_close.offset == 4;
axiom #funAddr~adpt_isr.base == -1 && #funAddr~adpt_isr.offset == 5;
axiom #funAddr~default_wake_function.base == -1 && #funAddr~default_wake_function.offset == 6;
axiom #funAddr~adpt_info.base == -1 && #funAddr~adpt_info.offset == 7;
axiom #funAddr~adpt_queue.base == -1 && #funAddr~adpt_queue.offset == 8;
axiom #funAddr~adpt_abort.base == -1 && #funAddr~adpt_abort.offset == 9;
axiom #funAddr~adpt_device_reset.base == -1 && #funAddr~adpt_device_reset.offset == 10;
axiom #funAddr~adpt_bus_reset.base == -1 && #funAddr~adpt_bus_reset.offset == 11;
axiom #funAddr~adpt_reset.base == -1 && #funAddr~adpt_reset.offset == 12;
axiom #funAddr~adpt_slave_configure.base == -1 && #funAddr~adpt_slave_configure.offset == 13;
axiom #funAddr~adpt_bios_param.base == -1 && #funAddr~adpt_bios_param.offset == 14;
axiom #funAddr~adpt_proc_info.base == -1 && #funAddr~adpt_proc_info.offset == 15;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~irqreturn~IRQ_NONE == 0;
axiom ~irqreturn~IRQ_HANDLED == 1;
axiom ~irqreturn~IRQ_WAKE_THREAD == 2;
axiom ~pci_channel_state~pci_channel_io_normal == 1;
axiom ~pci_channel_state~pci_channel_io_frozen == 2;
axiom ~pci_channel_state~pci_channel_io_perm_failure == 3;
axiom ~dma_data_direction~DMA_BIDIRECTIONAL == 0;
axiom ~dma_data_direction~DMA_TO_DEVICE == 1;
axiom ~dma_data_direction~DMA_FROM_DEVICE == 2;
axiom ~dma_data_direction~DMA_NONE == 3;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~hrtimer_restart~HRTIMER_NORESTART == 0;
axiom ~hrtimer_restart~HRTIMER_RESTART == 1;
axiom ~rq_cmd_type_bits~REQ_TYPE_FS == 1;
axiom ~rq_cmd_type_bits~REQ_TYPE_BLOCK_PC == 2;
axiom ~rq_cmd_type_bits~REQ_TYPE_SENSE == 3;
axiom ~rq_cmd_type_bits~REQ_TYPE_PM_SUSPEND == 4;
axiom ~rq_cmd_type_bits~REQ_TYPE_PM_RESUME == 5;
axiom ~rq_cmd_type_bits~REQ_TYPE_PM_SHUTDOWN == 6;
axiom ~rq_cmd_type_bits~REQ_TYPE_SPECIAL == 7;
axiom ~rq_cmd_type_bits~REQ_TYPE_ATA_TASKFILE == 8;
axiom ~rq_cmd_type_bits~REQ_TYPE_ATA_PC == 9;
axiom ~blk_eh_timer_return~BLK_EH_NOT_HANDLED == 0;
axiom ~blk_eh_timer_return~BLK_EH_HANDLED == 1;
axiom ~blk_eh_timer_return~BLK_EH_RESET_TIMER == 2;
axiom ~scsi_device_state~SDEV_CREATED == 1;
axiom ~scsi_device_state~SDEV_RUNNING == 2;
axiom ~scsi_device_state~SDEV_CANCEL == 3;
axiom ~scsi_device_state~SDEV_DEL == 4;
axiom ~scsi_device_state~SDEV_QUIESCE == 5;
axiom ~scsi_device_state~SDEV_OFFLINE == 6;
axiom ~scsi_device_state~SDEV_BLOCK == 7;
axiom ~scsi_device_state~SDEV_CREATED_BLOCK == 8;
axiom ~scsi_target_state~STARGET_CREATED == 1;
axiom ~scsi_target_state~STARGET_RUNNING == 2;
axiom ~scsi_target_state~STARGET_DEL == 3;
axiom ~scsi_host_state~SHOST_CREATED == 1;
axiom ~scsi_host_state~SHOST_RUNNING == 2;
axiom ~scsi_host_state~SHOST_CANCEL == 3;
axiom ~scsi_host_state~SHOST_DEL == 4;
axiom ~scsi_host_state~SHOST_RECOVERY == 5;
axiom ~scsi_host_state~SHOST_CANCEL_RECOVERY == 6;
axiom ~scsi_host_state~SHOST_DEL_RECOVERY == 7;
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
var ~jiffies : int;

var ~sys_tbl_ind : int;

var ~sys_tbl_len : int;

var ~hba_count : int;

var ~LDV_IN_INTERRUPT : int;

var ~ldv_spin : int;

var ~#pv_irq_ops.base : int, ~#pv_irq_ops.offset : int;

var ~#__this_module.base : int, ~#__this_module.offset : int;

var ~#x86_dma_fallback_dev.base : int, ~#x86_dma_fallback_dev.offset : int;

var ~dma_ops.base : int, ~dma_ops.offset : int;

var ~#adpt_mutex.base : int, ~#adpt_mutex.offset : int;

var ~#DPTI_sig.base : int, ~#DPTI_sig.offset : int;

var ~#adpt_configuration_lock.base : int, ~#adpt_configuration_lock.offset : int;

var ~sys_tbl.base : int, ~sys_tbl.offset : int;

var ~#sys_tbl_pa.base : int, ~#sys_tbl_pa.offset : int;

var ~hba_chain.base : int, ~hba_chain.offset : int;

var ~adpt_sysfs_class.base : int, ~adpt_sysfs_class.offset : int;

var ~#adpt_fops.base : int, ~#adpt_fops.offset : int;

var ~adpt_post_wait_queue.base : int, ~adpt_post_wait_queue.offset : int;

var ~adpt_post_wait_id : ~u32;

var ~#adpt_post_wait_lock.base : int, ~#adpt_post_wait_lock.offset : int;

var ~#driver_template.base : int, ~#driver_template.offset : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_int : [int,int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

implementation copy_from_user(#in~to.base : int, #in~to.offset : int, #in~from.base : int, #in~from.offset : int, #in~n : int) returns (#res : int){
    var #t~ret58 : int;
    var #t~ret59 : int;
    var #t~nondet60.base : int, #t~nondet60.offset : int;
    var #t~nondet61.base : int, #t~nondet61.offset : int;
    var ~to.base : int, ~to.offset : int;
    var ~from.base : int, ~from.offset : int;
    var ~n : int;
    var ~sz~101 : int;
    var ~tmp~101 : int;
    var ~__ret_warn_on~101 : int;
    var ~tmp___0~101 : int;
    var ~tmp___1~101 : int;
    var ~tmp___2~101 : int;
    var ~__cil_tmp10~101.base : int, ~__cil_tmp10~101.offset : int;
    var ~__cil_tmp11~101.base : int, ~__cil_tmp11~101.offset : int;
    var ~__cil_tmp12~101 : int;
    var ~__cil_tmp13~101 : int;
    var ~__cil_tmp14~101 : int;
    var ~__cil_tmp15~101 : int;
    var ~__cil_tmp16~101 : int;
    var ~__cil_tmp17~101 : int;
    var ~__cil_tmp18~101 : int;
    var ~__cil_tmp19~101 : int;
    var ~__cil_tmp20~101 : int;
    var ~__cil_tmp21~101 : int;
    var ~__cil_tmp22~101 : int;
    var ~__cil_tmp23~101 : int;

  loc0:
    ~to.base, ~to.offset := #in~to.base, #in~to.offset;
    ~from.base, ~from.offset := #in~from.base, #in~from.offset;
    ~n := #in~n;
    havoc ~sz~101;
    havoc ~tmp~101;
    havoc ~__ret_warn_on~101;
    havoc ~tmp___0~101;
    havoc ~tmp___1~101;
    havoc ~tmp___2~101;
    havoc ~__cil_tmp10~101.base, ~__cil_tmp10~101.offset;
    havoc ~__cil_tmp11~101.base, ~__cil_tmp11~101.offset;
    havoc ~__cil_tmp12~101;
    havoc ~__cil_tmp13~101;
    havoc ~__cil_tmp14~101;
    havoc ~__cil_tmp15~101;
    havoc ~__cil_tmp16~101;
    havoc ~__cil_tmp17~101;
    havoc ~__cil_tmp18~101;
    havoc ~__cil_tmp19~101;
    havoc ~__cil_tmp20~101;
    havoc ~__cil_tmp21~101;
    havoc ~__cil_tmp22~101;
    havoc ~__cil_tmp23~101;
    ~__cil_tmp10~101.base, ~__cil_tmp10~101.offset := ~to.base, ~to.offset;
    ~__cil_tmp11~101.base, ~__cil_tmp11~101.offset := ~__cil_tmp10~101.base, ~__cil_tmp10~101.offset;
    ~tmp~101 := 0;
    ~sz~101 := (if ~tmp~101 % 18446744073709551616 % 4294967296 <= 2147483647 then ~tmp~101 % 18446744073709551616 % 4294967296 else ~tmp~101 % 18446744073709551616 % 4294967296 - 4294967296);
    call might_fault();
    ~__cil_tmp12~101 := (if ~sz~101 == -1 then 1 else 0);
    ~__cil_tmp13~101 := ~__cil_tmp12~101;
    ~tmp___1~101 := ~__cil_tmp13~101;
    assume ~tmp___1~101 != 0;
    ~__cil_tmp14~101 := ~n;
    call #t~ret58 := _copy_from_user(~to.base, ~to.offset, ~from.base, ~from.offset, ~__cil_tmp14~101);
    ~n := #t~ret58;
    havoc #t~ret58;
    #res := ~n;
    assume true;
    return;
}

procedure copy_from_user(#in~to.base : int, #in~to.offset : int, #in~from.base : int, #in~from.offset : int, #in~n : int) returns (#res : int);
modifies #valid, #length;

implementation adpt_ioctl(#in~inode.base : int, #in~inode.offset : int, #in~file.base : int, #in~file.offset : int, #in~cmd : int, #in~arg : int) returns (#res : int){
    var #t~ret1069 : int;
    var #t~mem1070 : int;
    var #t~mem1071.base : int, #t~mem1071.offset : int;
    var #t~ret1072 : int;
    var #t~mem1073 : int;
    var #t~ret1074 : int;
    var #t~ret1075 : int;
    var #t~memset1076.base : int, #t~memset1076.offset : int;
    var #t~mem1077 : int;
    var #t~mem1079 : int;
    var #t~ret1081 : ~u8;
    var #t~mem1083.base : int, #t~mem1083.offset : int;
    var #t~mem1084.base : int, #t~mem1084.offset : int;
    var #t~mem1086 : int;
    var #t~mem1087.base : int, #t~mem1087.offset : int;
    var #t~mem1088 : int;
    var #t~mem1090.base : int, #t~mem1090.offset : int;
    var #t~mem1091 : int;
    var #t~ret1094 : int;
    var #t~nondet1095.base : int, #t~nondet1095.offset : int;
    var #t~ret1096 : int;
    var #t~ret1097 : int;
    var #t~ret1098 : ~u8;
    var #t~ret1100 : int;
    var #t~mem1101.base : int, #t~mem1101.offset : int;
    var #t~ret1102 : int;
    var #t~mem1103.base : int, #t~mem1103.offset : int;
    var #t~mem1104.base : int, #t~mem1104.offset : int;
    var #t~mem1105.base : int, #t~mem1105.offset : int;
    var #t~ret1106 : ~s32;
    var ~inode.base : int, ~inode.offset : int;
    var ~file.base : int, ~file.offset : int;
    var ~cmd : int;
    var ~arg : int;
    var ~minor~1320 : int;
    var ~error~1320 : int;
    var ~pHba~1320.base : int, ~pHba~1320.offset : int;
    var ~flags~1320 : ~ulong;
    var ~argp~1320.base : int, ~argp~1320.offset : int;
    var ~tmp~1320 : int;
    var ~tmp___0~1320 : int;
    var ~tmp___1~1320 : int;
    var ~#HbaInfo~1320.base : int, ~#HbaInfo~1320.offset : int;
    var ~tmp___2~1320 : ~u8;
    var ~tmp___3~1320 : int;
    var ~tmp___4~1320 : int;
    var ~#value~1320.base : int, ~#value~1320.offset : int;
    var ~tmp___5~1320 : ~u8;
    var ~tmp___6~1320 : int;
    var ~__cil_tmp20~1320.base : int, ~__cil_tmp20~1320.offset : int;
    var ~__cil_tmp21~1320 : int;
    var ~__cil_tmp22~1320 : int;
    var ~__cil_tmp23~1320 : int;
    var ~__cil_tmp24~1320.base : int, ~__cil_tmp24~1320.offset : int;
    var ~__cil_tmp25~1320 : int;
    var ~__cil_tmp26~1320 : int;
    var ~__cil_tmp27~1320.base : int, ~__cil_tmp27~1320.offset : int;
    var ~__cil_tmp28~1320 : int;
    var ~__cil_tmp29~1320 : int;
    var ~__cil_tmp30~1320 : int;
    var ~__cil_tmp31~1320 : int;
    var ~__cil_tmp32~1320 : ~u32;
    var ~__cil_tmp33~1320 : int;
    var ~__cil_tmp34~1320.base : int, ~__cil_tmp34~1320.offset : int;
    var ~__cil_tmp35~1320.base : int, ~__cil_tmp35~1320.offset : int;
    var ~__cil_tmp36~1320.base : int, ~__cil_tmp36~1320.offset : int;
    var ~__cil_tmp37~1320 : int;
    var ~__cil_tmp38~1320 : int;
    var ~__cil_tmp39~1320 : int;
    var ~__cil_tmp40~1320 : int;
    var ~__cil_tmp41~1320 : int;
    var ~__cil_tmp42~1320 : int;
    var ~__cil_tmp43~1320 : int;
    var ~__cil_tmp44~1320 : ~ulong;
    var ~__cil_tmp45~1320 : int;
    var ~__cil_tmp46~1320 : int;
    var ~__cil_tmp47~1320 : int;
    var ~__cil_tmp48~1320 : int;
    var ~__cil_tmp49~1320.base : int, ~__cil_tmp49~1320.offset : int;
    var ~__cil_tmp50~1320 : int;
    var ~__cil_tmp51~1320 : int;
    var ~__cil_tmp52~1320.base : int, ~__cil_tmp52~1320.offset : int;
    var ~__cil_tmp53~1320 : int;
    var ~__cil_tmp54~1320 : int;
    var ~__cil_tmp55~1320 : int;
    var ~__cil_tmp56~1320 : int;
    var ~__cil_tmp57~1320 : int;
    var ~__cil_tmp58~1320.base : int, ~__cil_tmp58~1320.offset : int;
    var ~__cil_tmp59~1320 : int;
    var ~__cil_tmp60~1320 : int;
    var ~__cil_tmp61~1320 : int;
    var ~__cil_tmp62~1320 : int;
    var ~__cil_tmp63~1320 : ~uCHAR;
    var ~__cil_tmp64~1320 : int;
    var ~__cil_tmp65~1320 : int;
    var ~__cil_tmp66~1320 : int;
    var ~__cil_tmp67~1320 : int;
    var ~__cil_tmp68~1320 : int;
    var ~__cil_tmp69~1320.base : int, ~__cil_tmp69~1320.offset : int;
    var ~__cil_tmp70~1320 : int;
    var ~__cil_tmp71~1320 : int;
    var ~__cil_tmp72~1320 : int;
    var ~__cil_tmp73~1320 : int;
    var ~__cil_tmp74~1320.base : int, ~__cil_tmp74~1320.offset : int;
    var ~__cil_tmp75~1320 : int;
    var ~__cil_tmp76~1320 : int;
    var ~__cil_tmp77~1320.base : int, ~__cil_tmp77~1320.offset : int;
    var ~__cil_tmp78~1320.base : int, ~__cil_tmp78~1320.offset : int;
    var ~__cil_tmp79~1320.base : int, ~__cil_tmp79~1320.offset : int;
    var ~__cil_tmp80~1320.base : int, ~__cil_tmp80~1320.offset : int;
    var ~__cil_tmp81~1320.base : int, ~__cil_tmp81~1320.offset : int;
    var ~__cil_tmp82~1320 : int;
    var ~__cil_tmp83~1320 : int;
    var ~__cil_tmp84~1320 : int;
    var ~__cil_tmp85~1320.base : int, ~__cil_tmp85~1320.offset : int;
    var ~__cil_tmp86~1320 : int;
    var ~__cil_tmp87~1320.base : int, ~__cil_tmp87~1320.offset : int;
    var ~__cil_tmp88~1320 : int;
    var ~__cil_tmp89~1320 : int;
    var ~__cil_tmp90~1320 : int;
    var ~__cil_tmp91~1320.base : int, ~__cil_tmp91~1320.offset : int;
    var ~__cil_tmp92~1320 : int;
    var ~__cil_tmp93~1320 : int;
    var ~__cil_tmp94~1320 : int;
    var ~__cil_tmp95~1320.base : int, ~__cil_tmp95~1320.offset : int;
    var ~__cil_tmp96~1320 : int;
    var ~__cil_tmp97~1320 : int;
    var ~__cil_tmp98~1320.base : int, ~__cil_tmp98~1320.offset : int;

  loc1:
    ~inode.base, ~inode.offset := #in~inode.base, #in~inode.offset;
    ~file.base, ~file.offset := #in~file.base, #in~file.offset;
    ~cmd := #in~cmd;
    ~arg := #in~arg;
    havoc ~minor~1320;
    havoc ~error~1320;
    havoc ~pHba~1320.base, ~pHba~1320.offset;
    havoc ~flags~1320;
    havoc ~argp~1320.base, ~argp~1320.offset;
    havoc ~tmp~1320;
    havoc ~tmp___0~1320;
    havoc ~tmp___1~1320;
    call ~#HbaInfo~1320.base, ~#HbaInfo~1320.offset := #Ultimate.alloc(28);
    havoc ~tmp___2~1320;
    havoc ~tmp___3~1320;
    havoc ~tmp___4~1320;
    call ~#value~1320.base, ~#value~1320.offset := #Ultimate.alloc(4);
    havoc ~tmp___5~1320;
    havoc ~tmp___6~1320;
    havoc ~__cil_tmp20~1320.base, ~__cil_tmp20~1320.offset;
    havoc ~__cil_tmp21~1320;
    havoc ~__cil_tmp22~1320;
    havoc ~__cil_tmp23~1320;
    havoc ~__cil_tmp24~1320.base, ~__cil_tmp24~1320.offset;
    havoc ~__cil_tmp25~1320;
    havoc ~__cil_tmp26~1320;
    havoc ~__cil_tmp27~1320.base, ~__cil_tmp27~1320.offset;
    havoc ~__cil_tmp28~1320;
    havoc ~__cil_tmp29~1320;
    havoc ~__cil_tmp30~1320;
    havoc ~__cil_tmp31~1320;
    havoc ~__cil_tmp32~1320;
    havoc ~__cil_tmp33~1320;
    havoc ~__cil_tmp34~1320.base, ~__cil_tmp34~1320.offset;
    havoc ~__cil_tmp35~1320.base, ~__cil_tmp35~1320.offset;
    havoc ~__cil_tmp36~1320.base, ~__cil_tmp36~1320.offset;
    havoc ~__cil_tmp37~1320;
    havoc ~__cil_tmp38~1320;
    havoc ~__cil_tmp39~1320;
    havoc ~__cil_tmp40~1320;
    havoc ~__cil_tmp41~1320;
    havoc ~__cil_tmp42~1320;
    havoc ~__cil_tmp43~1320;
    havoc ~__cil_tmp44~1320;
    havoc ~__cil_tmp45~1320;
    havoc ~__cil_tmp46~1320;
    havoc ~__cil_tmp47~1320;
    havoc ~__cil_tmp48~1320;
    havoc ~__cil_tmp49~1320.base, ~__cil_tmp49~1320.offset;
    havoc ~__cil_tmp50~1320;
    havoc ~__cil_tmp51~1320;
    havoc ~__cil_tmp52~1320.base, ~__cil_tmp52~1320.offset;
    havoc ~__cil_tmp53~1320;
    havoc ~__cil_tmp54~1320;
    havoc ~__cil_tmp55~1320;
    havoc ~__cil_tmp56~1320;
    havoc ~__cil_tmp57~1320;
    havoc ~__cil_tmp58~1320.base, ~__cil_tmp58~1320.offset;
    havoc ~__cil_tmp59~1320;
    havoc ~__cil_tmp60~1320;
    havoc ~__cil_tmp61~1320;
    havoc ~__cil_tmp62~1320;
    havoc ~__cil_tmp63~1320;
    havoc ~__cil_tmp64~1320;
    havoc ~__cil_tmp65~1320;
    havoc ~__cil_tmp66~1320;
    havoc ~__cil_tmp67~1320;
    havoc ~__cil_tmp68~1320;
    havoc ~__cil_tmp69~1320.base, ~__cil_tmp69~1320.offset;
    havoc ~__cil_tmp70~1320;
    havoc ~__cil_tmp71~1320;
    havoc ~__cil_tmp72~1320;
    havoc ~__cil_tmp73~1320;
    havoc ~__cil_tmp74~1320.base, ~__cil_tmp74~1320.offset;
    havoc ~__cil_tmp75~1320;
    havoc ~__cil_tmp76~1320;
    havoc ~__cil_tmp77~1320.base, ~__cil_tmp77~1320.offset;
    havoc ~__cil_tmp78~1320.base, ~__cil_tmp78~1320.offset;
    havoc ~__cil_tmp79~1320.base, ~__cil_tmp79~1320.offset;
    havoc ~__cil_tmp80~1320.base, ~__cil_tmp80~1320.offset;
    havoc ~__cil_tmp81~1320.base, ~__cil_tmp81~1320.offset;
    havoc ~__cil_tmp82~1320;
    havoc ~__cil_tmp83~1320;
    havoc ~__cil_tmp84~1320;
    havoc ~__cil_tmp85~1320.base, ~__cil_tmp85~1320.offset;
    havoc ~__cil_tmp86~1320;
    havoc ~__cil_tmp87~1320.base, ~__cil_tmp87~1320.offset;
    havoc ~__cil_tmp88~1320;
    havoc ~__cil_tmp89~1320;
    havoc ~__cil_tmp90~1320;
    havoc ~__cil_tmp91~1320.base, ~__cil_tmp91~1320.offset;
    havoc ~__cil_tmp92~1320;
    havoc ~__cil_tmp93~1320;
    havoc ~__cil_tmp94~1320;
    havoc ~__cil_tmp95~1320.base, ~__cil_tmp95~1320.offset;
    havoc ~__cil_tmp96~1320;
    havoc ~__cil_tmp97~1320;
    havoc ~__cil_tmp98~1320.base, ~__cil_tmp98~1320.offset;
    ~error~1320 := 0;
    ~flags~1320 := 0;
    ~argp~1320.base, ~argp~1320.offset := 0, (if ~arg % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~arg % 18446744073709551616 % 18446744073709551616 else ~arg % 18446744073709551616 % 18446744073709551616 - 18446744073709551616);
    ~__cil_tmp20~1320.base, ~__cil_tmp20~1320.offset := ~inode.base, ~inode.offset;
    call #t~ret1069 := iminor(~__cil_tmp20~1320.base, ~__cil_tmp20~1320.offset);
    ~tmp~1320 := #t~ret1069;
    havoc #t~ret1069;
    ~minor~1320 := (if ~tmp~1320 % 4294967296 % 4294967296 <= 2147483647 then ~tmp~1320 % 4294967296 % 4294967296 else ~tmp~1320 % 4294967296 % 4294967296 - 4294967296);
    assume !(~minor~1320 > 15);
    call mutex_lock_nested(~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset, 0);
    ~pHba~1320.base, ~pHba~1320.offset := ~hba_chain.base, ~hba_chain.offset;
    ~__cil_tmp24~1320.base, ~__cil_tmp24~1320.offset := 0, 0;
    ~__cil_tmp25~1320 := ~__cil_tmp24~1320.base + ~__cil_tmp24~1320.offset;
    ~__cil_tmp26~1320 := ~pHba~1320.base + ~pHba~1320.offset;
    assume !(~__cil_tmp26~1320 % 18446744073709551616 != ~__cil_tmp25~1320 % 18446744073709551616);
    call mutex_unlock(~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset);
    ~__cil_tmp27~1320.base, ~__cil_tmp27~1320.offset := 0, 0;
    ~__cil_tmp28~1320 := ~__cil_tmp27~1320.base + ~__cil_tmp27~1320.offset;
    ~__cil_tmp29~1320 := ~pHba~1320.base + ~pHba~1320.offset;
    assume !(~__cil_tmp29~1320 % 18446744073709551616 == ~__cil_tmp28~1320 % 18446744073709551616);
    ~__cil_tmp30~1320 := ~pHba~1320.base + ~pHba~1320.offset;
    ~__cil_tmp31~1320 := ~__cil_tmp30~1320 + 24;
    call #t~mem1073 := read~int(0, (if ~__cil_tmp31~1320 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp31~1320 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp31~1320 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 4);
    ~__cil_tmp32~1320 := #t~mem1073;
    havoc #t~mem1073;
    ~__cil_tmp33~1320 := (if ~__cil_tmp32~1320 % 4294967296 % 4294967296 <= 2147483647 then ~__cil_tmp32~1320 % 4294967296 % 4294967296 else ~__cil_tmp32~1320 % 4294967296 % 4294967296 - 4294967296);
    assume !(~bitwiseAnd(~__cil_tmp33~1320, 1) != 0);
    assume !((if ~cmd % 4294967296 % 4294967296 <= 2147483647 then ~cmd % 4294967296 % 4294967296 else ~cmd % 4294967296 % 4294967296 - 4294967296) == -2142157757);
    assume (if ~cmd % 4294967296 % 4294967296 <= 2147483647 then ~cmd % 4294967296 % 4294967296 else ~cmd % 4294967296 % 4294967296 - 4294967296) == 17484;
    ~__cil_tmp35~1320.base, ~__cil_tmp35~1320.offset := ~argp~1320.base, ~argp~1320.offset;
    call #t~ret1075 := adpt_i2o_passthru(~pHba~1320.base, ~pHba~1320.offset, ~__cil_tmp35~1320.base, ~__cil_tmp35~1320.offset);
    return;
}

procedure adpt_ioctl(#in~inode.base : int, #in~inode.offset : int, #in~file.base : int, #in~file.offset : int, #in~cmd : int, #in~arg : int) returns (#res : int);
modifies #memory_int, ~ldv_spin, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~adpt_post_wait_queue.base, ~adpt_post_wait_queue.offset, ~adpt_post_wait_id, ~hba_chain.base, ~hba_chain.offset, ~hba_count, ~adpt_sysfs_class.base, ~adpt_sysfs_class.offset, ~sys_tbl_len, ~sys_tbl.base, ~sys_tbl.offset, ~sys_tbl_ind;

implementation readl(#in~addr.base : int, #in~addr.offset : int) returns (#res : int){
    var ~addr.base : int, ~addr.offset : int;
    var ~ret~72 : int;
    var ~__cil_tmp3~72.base : int, ~__cil_tmp3~72.offset : int;

  loc2:
    ~addr.base, ~addr.offset := #in~addr.base, #in~addr.offset;
    havoc ~ret~72;
    havoc ~__cil_tmp3~72.base, ~__cil_tmp3~72.offset;
    ~__cil_tmp3~72.base, ~__cil_tmp3~72.offset := ~addr.base, ~addr.offset;
    #res := ~ret~72;
    assume true;
    return;
}

procedure readl(#in~addr.base : int, #in~addr.offset : int) returns (#res : int);
modifies ;

implementation #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int){
    var #t~loopctr1844 : int;

  loc3:
    #t~loopctr1844 := 0;
    goto loc4;
  loc4:
    goto loc4_0, loc4_1;
  loc4_0:
    assume #t~loopctr1844 < #amount;
    #memory_int := #memory_int[#ptr.base,#ptr.offset + #t~loopctr1844 * 1 := #value];
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset + #t~loopctr1844 * 1 := 0], #memory_$Pointer$.offset[#ptr.base,#ptr.offset + #t~loopctr1844 * 1 := #value % 256];
    #t~loopctr1844 := #t~loopctr1844 + 1;
    goto loc4;
  loc4_1:
    assume !(#t~loopctr1844 < #amount);
    assume #res.base == #ptr.base && #res.offset == #ptr.offset;
    return;
}

procedure #Ultimate.C_memset(#ptr.base : int, #ptr.offset : int, #value : int, #amount : int) returns (#res.base : int, #res.offset : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
free ensures #res.base == #ptr.base && #res.offset == #ptr.offset;

implementation main() returns (){
    var #t~ret1821 : int;
    var #t~nondet1822 : int;
    var #t~ret1823 : int;
    var #t~ret1824 : int;
    var #t~ret1825 : int;
    var #t~ret1826 : int;
    var #t~ret1827 : int;
    var #t~ret1828.base : int, #t~ret1828.offset : int;
    var #t~ret1829 : int;
    var #t~ret1830 : int;
    var #t~ret1831 : int;
    var #t~ret1832 : int;
    var #t~ret1833 : int;
    var #t~ret1834 : ~irqreturn_t;
    var #t~nondet1835 : int;
    var ~var_group1~2105.base : int, ~var_group1~2105.offset : int;
    var ~var_adpt_unlocked_ioctl_39_p1~2105 : ~uint;
    var ~var_adpt_unlocked_ioctl_39_p2~2105 : ~ulong;
    var ~var_group2~2105.base : int, ~var_group2~2105.offset : int;
    var ~res_adpt_open_30~2105 : int;
    var ~var_compat_adpt_ioctl_40_p1~2105 : int;
    var ~var_compat_adpt_ioctl_40_p2~2105 : int;
    var ~var_group3~2105.base : int, ~var_group3~2105.offset : int;
    var ~var_adpt_proc_info_9_p1~2105.base : int, ~var_adpt_proc_info_9_p1~2105.offset : int;
    var ~var_adpt_proc_info_9_p2~2105.base : int, ~var_adpt_proc_info_9_p2~2105.offset : int;
    var ~var_adpt_proc_info_9_p3~2105 : ~off_t;
    var ~var_adpt_proc_info_9_p4~2105 : int;
    var ~var_adpt_proc_info_9_p5~2105 : int;
    var ~var_group4~2105.base : int, ~var_group4~2105.offset : int;
    var ~var_group5~2105.base : int, ~var_group5~2105.offset : int;
    var ~var_group6~2105.base : int, ~var_group6~2105.offset : int;
    var ~var_adpt_isr_41_p0~2105 : int;
    var ~var_adpt_isr_41_p1~2105.base : int, ~var_adpt_isr_41_p1~2105.offset : int;
    var ~ldv_s_adpt_fops_file_operations~2105 : int;
    var ~tmp~2105 : int;
    var ~tmp___0~2105 : int;
    var ~tmp___1~2105 : int;

  loc5:
    havoc ~var_group1~2105.base, ~var_group1~2105.offset;
    havoc ~var_adpt_unlocked_ioctl_39_p1~2105;
    havoc ~var_adpt_unlocked_ioctl_39_p2~2105;
    havoc ~var_group2~2105.base, ~var_group2~2105.offset;
    havoc ~res_adpt_open_30~2105;
    havoc ~var_compat_adpt_ioctl_40_p1~2105;
    havoc ~var_compat_adpt_ioctl_40_p2~2105;
    havoc ~var_group3~2105.base, ~var_group3~2105.offset;
    havoc ~var_adpt_proc_info_9_p1~2105.base, ~var_adpt_proc_info_9_p1~2105.offset;
    havoc ~var_adpt_proc_info_9_p2~2105.base, ~var_adpt_proc_info_9_p2~2105.offset;
    havoc ~var_adpt_proc_info_9_p3~2105;
    havoc ~var_adpt_proc_info_9_p4~2105;
    havoc ~var_adpt_proc_info_9_p5~2105;
    havoc ~var_group4~2105.base, ~var_group4~2105.offset;
    havoc ~var_group5~2105.base, ~var_group5~2105.offset;
    havoc ~var_group6~2105.base, ~var_group6~2105.offset;
    havoc ~var_adpt_isr_41_p0~2105;
    havoc ~var_adpt_isr_41_p1~2105.base, ~var_adpt_isr_41_p1~2105.offset;
    havoc ~ldv_s_adpt_fops_file_operations~2105;
    havoc ~tmp~2105;
    havoc ~tmp___0~2105;
    havoc ~tmp___1~2105;
    ~ldv_s_adpt_fops_file_operations~2105 := 0;
    ~LDV_IN_INTERRUPT := 1;
    call ldv_initialize();
    call #t~ret1821 := adpt_init();
    assume -2147483648 <= #t~ret1821 && #t~ret1821 <= 2147483647;
    ~tmp~2105 := #t~ret1821;
    havoc #t~ret1821;
    assume !(~tmp~2105 != 0);
    goto loc6;
  loc6:
    assume -2147483648 <= #t~nondet1835 && #t~nondet1835 <= 2147483647;
    ~tmp___1~2105 := #t~nondet1835;
    havoc #t~nondet1835;
    assume ~tmp___1~2105 != 0;
    assume -2147483648 <= #t~nondet1822 && #t~nondet1822 <= 2147483647;
    ~tmp___0~2105 := #t~nondet1822;
    havoc #t~nondet1822;
    assume !(~tmp___0~2105 == 0);
    assume !(~tmp___0~2105 == 1);
    assume !(~tmp___0~2105 == 2);
    goto loc7;
  loc7:
    goto loc7_0, loc7_1;
  loc7_0:
    assume ~tmp___0~2105 == 3;
    call #t~ret1826 := compat_adpt_ioctl(~var_group1~2105.base, ~var_group1~2105.offset, ~var_compat_adpt_ioctl_40_p1~2105, ~var_compat_adpt_ioctl_40_p2~2105);
    return;
  loc7_1:
    assume !(~tmp___0~2105 == 3);
    assume !(~tmp___0~2105 == 4);
    assume !(~tmp___0~2105 == 5);
    assume !(~tmp___0~2105 == 6);
    assume !(~tmp___0~2105 == 7);
    assume !(~tmp___0~2105 == 8);
    assume !(~tmp___0~2105 == 9);
    assume !(~tmp___0~2105 == 10);
    assume ~tmp___0~2105 == 11;
    ~LDV_IN_INTERRUPT := 2;
    call #t~ret1834 := adpt_isr(~var_adpt_isr_41_p0~2105, ~var_adpt_isr_41_p1~2105.base, ~var_adpt_isr_41_p1~2105.offset);
    assume -2147483648 <= #t~ret1834 && #t~ret1834 <= 2147483647;
    havoc #t~ret1834;
    ~LDV_IN_INTERRUPT := 1;
    goto loc6;
}

procedure main() returns ();
modifies ~LDV_IN_INTERRUPT, #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_spin, ~adpt_post_wait_queue.base, ~adpt_post_wait_queue.offset, ~adpt_post_wait_id, ~hba_chain.base, ~hba_chain.offset, ~hba_count, ~adpt_sysfs_class.base, ~adpt_sysfs_class.offset, ~sys_tbl_len, ~sys_tbl.base, ~sys_tbl.offset, ~sys_tbl_ind;

implementation ldv_spin_lock() returns (){
  loc8:
    ~ldv_spin := 1;
    assume true;
    return;
}

procedure ldv_spin_lock() returns ();
modifies ~ldv_spin;

implementation adpt_detect(#in~sht.base : int, #in~sht.offset : int) returns (#res : int){
    var #t~nondet194.base : int, #t~nondet194.offset : int;
    var #t~ret195 : int;
    var #t~mem196 : int;
    var #t~mem197 : int;
    var #t~ret198 : int;
    var #t~nondet199.base : int, #t~nondet199.offset : int;
    var #t~ret200 : int;
    var #t~nondet201.base : int, #t~nondet201.offset : int;
    var #t~ret202 : int;
    var #t~ret203.base : int, #t~ret203.offset : int;
    var #t~ret204.base : int, #t~ret204.offset : int;
    var #t~mem205.base : int, #t~mem205.offset : int;
    var #t~ret206 : int;
    var #t~ret207 : int;
    var #t~ret208 : int;
    var #t~mem209.base : int, #t~mem209.offset : int;
    var #t~nondet210.base : int, #t~nondet210.offset : int;
    var #t~ret211 : int;
    var #t~mem212.base : int, #t~mem212.offset : int;
    var #t~nondet213.base : int, #t~nondet213.offset : int;
    var #t~ret214 : int;
    var #t~ret215 : int;
    var #t~ret216 : int;
    var #t~nondet217.base : int, #t~nondet217.offset : int;
    var #t~ret218.base : int, #t~ret218.offset : int;
    var #t~ret219 : int;
    var #t~nondet220.base : int, #t~nondet220.offset : int;
    var #t~ret221 : int;
    var #t~mem222.base : int, #t~mem222.offset : int;
    var #t~ret223 : ~s32;
    var #t~mem225 : int;
    var #t~mem227 : int;
    var #t~mem228 : int;
    var #t~nondet229.base : int, #t~nondet229.offset : int;
    var #t~ret230.base : int, #t~ret230.offset : int;
    var #t~ret231 : int;
    var #t~mem232 : int;
    var #t~nondet233.base : int, #t~nondet233.offset : int;
    var #t~ret234 : int;
    var #t~nondet235.base : int, #t~nondet235.offset : int;
    var #t~ret236 : int;
    var ~sht.base : int, ~sht.offset : int;
    var ~pDev~327.base : int, ~pDev~327.offset : int;
    var ~pHba~327.base : int, ~pHba~327.offset : int;
    var ~next~327.base : int, ~next~327.offset : int;
    var ~tmp~327 : int;
    var ~tmp___0~327 : int;
    var ~tmp___1~327 : int;
    var ~tmp___2~327 : int;
    var ~tmp___3~327 : int;
    var ~tmp___4~327 : int;
    var ~#__key~327.base : int, ~#__key~327.offset : int;
    var ~tmp___5~327.base : int, ~tmp___5~327.offset : int;
    var ~tmp___6~327 : int;
    var ~tmp___7~327 : ~s32;
    var ~dev~327.base : int, ~dev~327.offset : int;
    var ~tmp___8~327.base : int, ~tmp___8~327.offset : int;
    var ~tmp___9~327 : int;
    var ~tmp___10~327 : int;
    var ~__cil_tmp19~327 : int;
    var ~__cil_tmp20~327 : int;
    var ~__cil_tmp21~327 : int;
    var ~__cil_tmp22~327 : int;
    var ~__cil_tmp23~327 : int;
    var ~__cil_tmp24~327 : int;
    var ~__cil_tmp25~327 : int;
    var ~__cil_tmp26~327 : int;
    var ~__cil_tmp27~327.base : int, ~__cil_tmp27~327.offset : int;
    var ~__cil_tmp28~327 : int;
    var ~__cil_tmp29~327 : int;
    var ~__cil_tmp30~327.base : int, ~__cil_tmp30~327.offset : int;
    var ~__cil_tmp31~327 : int;
    var ~__cil_tmp32~327 : int;
    var ~__cil_tmp33~327.base : int, ~__cil_tmp33~327.offset : int;
    var ~__cil_tmp34~327 : int;
    var ~__cil_tmp35~327 : int;
    var ~__cil_tmp36~327.base : int, ~__cil_tmp36~327.offset : int;
    var ~__cil_tmp37~327 : int;
    var ~__cil_tmp38~327 : int;
    var ~__cil_tmp39~327 : int;
    var ~__cil_tmp40~327 : int;
    var ~__cil_tmp41~327.base : int, ~__cil_tmp41~327.offset : int;
    var ~__cil_tmp42~327.base : int, ~__cil_tmp42~327.offset : int;
    var ~__cil_tmp43~327.base : int, ~__cil_tmp43~327.offset : int;
    var ~__cil_tmp44~327 : int;
    var ~__cil_tmp45~327 : int;
    var ~__cil_tmp46~327.base : int, ~__cil_tmp46~327.offset : int;
    var ~__cil_tmp47~327 : int;
    var ~__cil_tmp48~327 : int;
    var ~__cil_tmp49~327 : int;
    var ~__cil_tmp50~327 : int;
    var ~__cil_tmp51~327 : int;
    var ~__cil_tmp52~327 : int;
    var ~__cil_tmp53~327 : ~u32;
    var ~__cil_tmp54~327.base : int, ~__cil_tmp54~327.offset : int;
    var ~__cil_tmp55~327 : int;
    var ~__cil_tmp56~327 : int;
    var ~__cil_tmp57~327.base : int, ~__cil_tmp57~327.offset : int;
    var ~__cil_tmp58~327 : int;
    var ~__cil_tmp59~327 : int;
    var ~__cil_tmp60~327 : int;
    var ~__cil_tmp61~327 : int;
    var ~__cil_tmp62~327 : ~dev_t;
    var ~__cil_tmp63~327.base : int, ~__cil_tmp63~327.offset : int;
    var ~__cil_tmp64~327 : int;
    var ~__cil_tmp65~327 : int;
    var ~__cil_tmp66~327 : int;
    var ~__cil_tmp67~327.base : int, ~__cil_tmp67~327.offset : int;
    var ~__cil_tmp68~327 : int;
    var ~__cil_tmp69~327 : int;
    var ~__cil_tmp70~327 : int;
    var ~__cil_tmp71~327.base : int, ~__cil_tmp71~327.offset : int;
    var ~__cil_tmp72~327 : int;
    var ~__cil_tmp73~327 : int;

  loc9:
    ~sht.base, ~sht.offset := #in~sht.base, #in~sht.offset;
    havoc ~pDev~327.base, ~pDev~327.offset;
    havoc ~pHba~327.base, ~pHba~327.offset;
    havoc ~next~327.base, ~next~327.offset;
    havoc ~tmp~327;
    havoc ~tmp___0~327;
    havoc ~tmp___1~327;
    havoc ~tmp___2~327;
    havoc ~tmp___3~327;
    havoc ~tmp___4~327;
    call ~#__key~327.base, ~#__key~327.offset := #Ultimate.alloc(8);
    havoc ~tmp___5~327.base, ~tmp___5~327.offset;
    havoc ~tmp___6~327;
    havoc ~tmp___7~327;
    havoc ~dev~327.base, ~dev~327.offset;
    havoc ~tmp___8~327.base, ~tmp___8~327.offset;
    havoc ~tmp___9~327;
    havoc ~tmp___10~327;
    havoc ~__cil_tmp19~327;
    havoc ~__cil_tmp20~327;
    havoc ~__cil_tmp21~327;
    havoc ~__cil_tmp22~327;
    havoc ~__cil_tmp23~327;
    havoc ~__cil_tmp24~327;
    havoc ~__cil_tmp25~327;
    havoc ~__cil_tmp26~327;
    havoc ~__cil_tmp27~327.base, ~__cil_tmp27~327.offset;
    havoc ~__cil_tmp28~327;
    havoc ~__cil_tmp29~327;
    havoc ~__cil_tmp30~327.base, ~__cil_tmp30~327.offset;
    havoc ~__cil_tmp31~327;
    havoc ~__cil_tmp32~327;
    havoc ~__cil_tmp33~327.base, ~__cil_tmp33~327.offset;
    havoc ~__cil_tmp34~327;
    havoc ~__cil_tmp35~327;
    havoc ~__cil_tmp36~327.base, ~__cil_tmp36~327.offset;
    havoc ~__cil_tmp37~327;
    havoc ~__cil_tmp38~327;
    havoc ~__cil_tmp39~327;
    havoc ~__cil_tmp40~327;
    havoc ~__cil_tmp41~327.base, ~__cil_tmp41~327.offset;
    havoc ~__cil_tmp42~327.base, ~__cil_tmp42~327.offset;
    havoc ~__cil_tmp43~327.base, ~__cil_tmp43~327.offset;
    havoc ~__cil_tmp44~327;
    havoc ~__cil_tmp45~327;
    havoc ~__cil_tmp46~327.base, ~__cil_tmp46~327.offset;
    havoc ~__cil_tmp47~327;
    havoc ~__cil_tmp48~327;
    havoc ~__cil_tmp49~327;
    havoc ~__cil_tmp50~327;
    havoc ~__cil_tmp51~327;
    havoc ~__cil_tmp52~327;
    havoc ~__cil_tmp53~327;
    havoc ~__cil_tmp54~327.base, ~__cil_tmp54~327.offset;
    havoc ~__cil_tmp55~327;
    havoc ~__cil_tmp56~327;
    havoc ~__cil_tmp57~327.base, ~__cil_tmp57~327.offset;
    havoc ~__cil_tmp58~327;
    havoc ~__cil_tmp59~327;
    havoc ~__cil_tmp60~327;
    havoc ~__cil_tmp61~327;
    havoc ~__cil_tmp62~327;
    havoc ~__cil_tmp63~327.base, ~__cil_tmp63~327.offset;
    havoc ~__cil_tmp64~327;
    havoc ~__cil_tmp65~327;
    havoc ~__cil_tmp66~327;
    havoc ~__cil_tmp67~327.base, ~__cil_tmp67~327.offset;
    havoc ~__cil_tmp68~327;
    havoc ~__cil_tmp69~327;
    havoc ~__cil_tmp70~327;
    havoc ~__cil_tmp71~327.base, ~__cil_tmp71~327.offset;
    havoc ~__cil_tmp72~327;
    havoc ~__cil_tmp73~327;
    ~pDev~327.base, ~pDev~327.offset := 0, 0;
    call #t~nondet194.base, #t~nondet194.offset := #Ultimate.alloc(47);
    call #t~ret195 := printk(#t~nondet194.base, #t~nondet194.offset);
    assume -2147483648 <= #t~ret195 && #t~ret195 <= 2147483647;
    havoc #t~nondet194.base, #t~nondet194.offset;
    havoc #t~ret195;
    call #t~ret204.base, #t~ret204.offset := pci_get_device(4164, 4294967295, ~pDev~327.base, ~pDev~327.offset);
    ~pDev~327.base, ~pDev~327.offset := #t~ret204.base, #t~ret204.offset;
    havoc #t~ret204.base, #t~ret204.offset;
    ~__cil_tmp27~327.base, ~__cil_tmp27~327.offset := 0, 0;
    ~__cil_tmp28~327 := ~__cil_tmp27~327.base + ~__cil_tmp27~327.offset;
    ~__cil_tmp29~327 := ~pDev~327.base + ~pDev~327.offset;
    assume !(~__cil_tmp29~327 % 18446744073709551616 != ~__cil_tmp28~327 % 18446744073709551616);
    ~pHba~327.base, ~pHba~327.offset := ~hba_chain.base, ~hba_chain.offset;
    ~__cil_tmp30~327.base, ~__cil_tmp30~327.offset := 0, 0;
    ~__cil_tmp31~327 := ~__cil_tmp30~327.base + ~__cil_tmp30~327.offset;
    ~__cil_tmp32~327 := ~pHba~327.base + ~pHba~327.offset;
    assume !(~__cil_tmp32~327 % 18446744073709551616 != ~__cil_tmp31~327 % 18446744073709551616);
    ~__cil_tmp33~327.base, ~__cil_tmp33~327.offset := 0, 0;
    ~__cil_tmp34~327 := ~__cil_tmp33~327.base + ~__cil_tmp33~327.offset;
    ~__cil_tmp35~327 := ~hba_chain.base + ~hba_chain.offset;
    assume ~__cil_tmp35~327 % 18446744073709551616 == ~__cil_tmp34~327 % 18446744073709551616;
    #res := 0;
    call ULTIMATE.dealloc(~#__key~327.base, ~#__key~327.offset);
    havoc ~#__key~327.base, ~#__key~327.offset;
    assume true;
    return;
}

procedure adpt_detect(#in~sht.base : int, #in~sht.offset : int) returns (#res : int);
modifies ~adpt_sysfs_class.base, ~adpt_sysfs_class.offset, #memory_int, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~hba_chain.base, ~hba_chain.offset, ~hba_count, ~adpt_post_wait_queue.base, ~adpt_post_wait_queue.offset, ~sys_tbl_len, ~sys_tbl.base, ~sys_tbl.offset, ~sys_tbl_ind, ~ldv_spin, ~adpt_post_wait_id;

implementation iminor(#in~inode.base : int, #in~inode.offset : int) returns (#res : int){
    var #t~mem132 : int;
    var ~inode.base : int, ~inode.offset : int;
    var ~__cil_tmp2~209 : int;
    var ~__cil_tmp3~209 : int;
    var ~__cil_tmp4~209 : ~dev_t;
    var ~__cil_tmp5~209 : int;

  loc10:
    ~inode.base, ~inode.offset := #in~inode.base, #in~inode.offset;
    havoc ~__cil_tmp2~209;
    havoc ~__cil_tmp3~209;
    havoc ~__cil_tmp4~209;
    havoc ~__cil_tmp5~209;
    ~__cil_tmp2~209 := ~inode.base + ~inode.offset;
    ~__cil_tmp3~209 := ~__cil_tmp2~209 + 76;
    call #t~mem132 := read~int(0, (if ~__cil_tmp3~209 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp3~209 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp3~209 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 4);
    ~__cil_tmp4~209 := #t~mem132;
    havoc #t~mem132;
    ~__cil_tmp5~209 := ~__cil_tmp4~209;
    #res := ~bitwiseAnd(~__cil_tmp5~209, 1048575);
    assume true;
    return;
}

procedure iminor(#in~inode.base : int, #in~inode.offset : int) returns (#res : int);
modifies ;

implementation ULTIMATE.init() returns (){
    var #t~union1838.head : int, #t~union1838.tail : int;
    var #t~nondet183.base : int, #t~nondet183.offset : int;
    var #t~union1839.__padding : [int]int, #t~union1839.dep_map.key.base : int, #t~union1839.dep_map.key.offset : int, #t~union1839.dep_map.class_cache.base : [int]int, #t~union1839.dep_map.class_cache.offset : [int]int, #t~union1839.dep_map.name.base : int, #t~union1839.dep_map.name.offset : int, #t~union1839.dep_map.cpu : int, #t~union1839.dep_map.ip : int;
    var #t~nondet184.base : int, #t~nondet184.offset : int;
    var #t~union1840.head : int, #t~union1840.tail : int;
    var #t~nondet185.base : int, #t~nondet185.offset : int;
    var #t~union1841.__padding : [int]int, #t~union1841.dep_map.key.base : int, #t~union1841.dep_map.key.offset : int, #t~union1841.dep_map.class_cache.base : [int]int, #t~union1841.dep_map.class_cache.offset : [int]int, #t~union1841.dep_map.name.base : int, #t~union1841.dep_map.name.offset : int, #t~union1841.dep_map.cpu : int, #t~union1841.dep_map.ip : int;
    var #t~nondet186.base : int, #t~nondet186.offset : int;
    var #t~union1842.head : int, #t~union1842.tail : int;
    var #t~nondet187.base : int, #t~nondet187.offset : int;
    var #t~union1843.__padding : [int]int, #t~union1843.dep_map.key.base : int, #t~union1843.dep_map.key.offset : int, #t~union1843.dep_map.class_cache.base : [int]int, #t~union1843.dep_map.class_cache.offset : [int]int, #t~union1843.dep_map.name.base : int, #t~union1843.dep_map.name.offset : int, #t~union1843.dep_map.cpu : int, #t~union1843.dep_map.ip : int;
    var #t~nondet1803.base : int, #t~nondet1803.offset : int;
    var #t~nondet1804.base : int, #t~nondet1804.offset : int;

  loc11:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~sys_tbl_ind := 0;
    ~sys_tbl_len := 0;
    ~hba_count := 0;
    ~LDV_IN_INTERRUPT := 0;
    ~ldv_spin := 0;
    call ~#adpt_mutex.base, ~#adpt_mutex.offset := #Ultimate.alloc(156);
    call write~int(1, ~#adpt_mutex.base, ~#adpt_mutex.offset + 0 + 0, 4);
    call write~int(0, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union1838.head, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union1838.tail, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(3735899821, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 4, 4);
    call write~int(4294967295, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, -1, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 20 + 0, 8);
    call write~$Pointer$(0, 0, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 20 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 20 + 8 + 8, 8);
    call #t~nondet183.base, #t~nondet183.offset := #Ultimate.alloc(21);
    call write~$Pointer$(#t~nondet183.base, #t~nondet183.offset, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union1839.__padding[0], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0, 1);
    call write~int(#t~union1839.__padding[1], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union1839.__padding[2], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[3], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[4], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[5], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[6], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[7], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[8], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[9], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[10], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[11], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[12], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[13], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[14], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[15], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[16], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[17], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[18], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[19], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[20], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[21], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[22], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1839.__padding[23], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union1839.dep_map.key.base, #t~union1839.dep_map.key.offset, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union1839.dep_map.class_cache.base[0], #t~union1839.dep_map.class_cache.offset[0], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union1839.dep_map.class_cache.base[1], #t~union1839.dep_map.class_cache.offset[1], ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union1839.dep_map.name.base, #t~union1839.dep_map.name.offset, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union1839.dep_map.cpu, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union1839.dep_map.ip, ~#adpt_mutex.base, ~#adpt_mutex.offset + 4 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(~#adpt_mutex.base, ~#adpt_mutex.offset + 72, ~#adpt_mutex.base, ~#adpt_mutex.offset + 72 + 0, 8);
    call write~$Pointer$(~#adpt_mutex.base, ~#adpt_mutex.offset + 72, ~#adpt_mutex.base, ~#adpt_mutex.offset + 72 + 8, 8);
    call write~$Pointer$(0, 0, ~#adpt_mutex.base, ~#adpt_mutex.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#adpt_mutex.base, ~#adpt_mutex.offset + 96, 8);
    call write~$Pointer$(~#adpt_mutex.base, ~#adpt_mutex.offset, ~#adpt_mutex.base, ~#adpt_mutex.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#adpt_mutex.base, ~#adpt_mutex.offset + 112 + 0, 8);
    call write~$Pointer$(0, 0, ~#adpt_mutex.base, ~#adpt_mutex.offset + 112 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#adpt_mutex.base, ~#adpt_mutex.offset + 112 + 8 + 8, 8);
    call #t~nondet184.base, #t~nondet184.offset := #Ultimate.alloc(11);
    call write~$Pointer$(#t~nondet184.base, #t~nondet184.offset, ~#adpt_mutex.base, ~#adpt_mutex.offset + 112 + 24, 8);
    call write~int(0, ~#adpt_mutex.base, ~#adpt_mutex.offset + 112 + 32, 4);
    call write~int(0, ~#adpt_mutex.base, ~#adpt_mutex.offset + 112 + 36, 8);
    havoc #t~union1838.head, #t~union1838.tail;
    havoc #t~nondet183.base, #t~nondet183.offset;
    havoc #t~union1839.__padding, #t~union1839.dep_map.key.base, #t~union1839.dep_map.key.offset, #t~union1839.dep_map.class_cache.base, #t~union1839.dep_map.class_cache.offset, #t~union1839.dep_map.name.base, #t~union1839.dep_map.name.offset, #t~union1839.dep_map.cpu, #t~union1839.dep_map.ip;
    havoc #t~nondet184.base, #t~nondet184.offset;
    call ~#DPTI_sig.base, ~#DPTI_sig.offset := #Ultimate.alloc(81);
    call write~int(100, ~#DPTI_sig.base, ~#DPTI_sig.offset + 0 + 0, 1);
    call write~int(80, ~#DPTI_sig.base, ~#DPTI_sig.offset + 0 + 1, 1);
    call write~int(116, ~#DPTI_sig.base, ~#DPTI_sig.offset + 0 + 2, 1);
    call write~int(83, ~#DPTI_sig.base, ~#DPTI_sig.offset + 0 + 3, 1);
    call write~int(105, ~#DPTI_sig.base, ~#DPTI_sig.offset + 0 + 4, 1);
    call write~int(71, ~#DPTI_sig.base, ~#DPTI_sig.offset + 0 + 5, 1);
    call write~int(1, ~#DPTI_sig.base, ~#DPTI_sig.offset + 6, 1);
    call write~int(255, ~#DPTI_sig.base, ~#DPTI_sig.offset + 7, 1);
    call write~int(255, ~#DPTI_sig.base, ~#DPTI_sig.offset + 8, 1);
    call write~int(2, ~#DPTI_sig.base, ~#DPTI_sig.offset + 9, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 10, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 11, 1);
    call write~int(16777216, ~#DPTI_sig.base, ~#DPTI_sig.offset + 12, 4);
    call write~int(64, ~#DPTI_sig.base, ~#DPTI_sig.offset + 16, 2);
    call write~int(65535, ~#DPTI_sig.base, ~#DPTI_sig.offset + 18, 2);
    call write~int(1024, ~#DPTI_sig.base, ~#DPTI_sig.offset + 20, 2);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 22, 2);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 24, 1);
    call write~int(2, ~#DPTI_sig.base, ~#DPTI_sig.offset + 25, 1);
    call write~int(52, ~#DPTI_sig.base, ~#DPTI_sig.offset + 26, 1);
    call write~int(53, ~#DPTI_sig.base, ~#DPTI_sig.offset + 27, 1);
    call write~int(8, ~#DPTI_sig.base, ~#DPTI_sig.offset + 28, 1);
    call write~int(7, ~#DPTI_sig.base, ~#DPTI_sig.offset + 29, 1);
    call write~int(21, ~#DPTI_sig.base, ~#DPTI_sig.offset + 30, 1);
    call write~int(65, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 0, 1);
    call write~int(100, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 1, 1);
    call write~int(97, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 2, 1);
    call write~int(112, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 3, 1);
    call write~int(116, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 4, 1);
    call write~int(101, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 5, 1);
    call write~int(99, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 6, 1);
    call write~int(32, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 7, 1);
    call write~int(76, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 8, 1);
    call write~int(105, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 9, 1);
    call write~int(110, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 10, 1);
    call write~int(117, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 11, 1);
    call write~int(120, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 12, 1);
    call write~int(32, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 13, 1);
    call write~int(73, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 14, 1);
    call write~int(50, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 15, 1);
    call write~int(79, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 16, 1);
    call write~int(32, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 17, 1);
    call write~int(82, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 18, 1);
    call write~int(65, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 19, 1);
    call write~int(73, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 20, 1);
    call write~int(68, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 21, 1);
    call write~int(32, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 22, 1);
    call write~int(68, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 23, 1);
    call write~int(114, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 24, 1);
    call write~int(105, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 25, 1);
    call write~int(118, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 26, 1);
    call write~int(101, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 27, 1);
    call write~int(114, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 28, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 29, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 30, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 31, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 32, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 33, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 34, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 35, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 36, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 37, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 38, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 39, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 40, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 41, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 42, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 43, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 44, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 45, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 46, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 47, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 48, 1);
    call write~int(0, ~#DPTI_sig.base, ~#DPTI_sig.offset + 31 + 49, 1);
    call ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset := #Ultimate.alloc(156);
    call write~int(1, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 0 + 0, 4);
    call write~int(0, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union1840.head, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union1840.tail, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(3735899821, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 4, 4);
    call write~int(4294967295, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 8, 4);
    call write~$Pointer$(0, -1, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 20 + 0, 8);
    call write~$Pointer$(0, 0, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 20 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 20 + 8 + 8, 8);
    call #t~nondet185.base, #t~nondet185.offset := #Ultimate.alloc(34);
    call write~$Pointer$(#t~nondet185.base, #t~nondet185.offset, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union1841.__padding[0], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0, 1);
    call write~int(#t~union1841.__padding[1], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union1841.__padding[2], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[3], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[4], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[5], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[6], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[7], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[8], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[9], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[10], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[11], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[12], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[13], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[14], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[15], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[16], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[17], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[18], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[19], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[20], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[21], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[22], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1841.__padding[23], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union1841.dep_map.key.base, #t~union1841.dep_map.key.offset, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union1841.dep_map.class_cache.base[0], #t~union1841.dep_map.class_cache.offset[0], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union1841.dep_map.class_cache.base[1], #t~union1841.dep_map.class_cache.offset[1], ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union1841.dep_map.name.base, #t~union1841.dep_map.name.offset, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union1841.dep_map.cpu, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union1841.dep_map.ip, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 4 + 0 + 0 + 24 + 36, 8);
    call write~$Pointer$(~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 72, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 72 + 0, 8);
    call write~$Pointer$(~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 72, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 72 + 8, 8);
    call write~$Pointer$(0, 0, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 96, 8);
    call write~$Pointer$(~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 112 + 0, 8);
    call write~$Pointer$(0, 0, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 112 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 112 + 8 + 8, 8);
    call #t~nondet186.base, #t~nondet186.offset := #Ultimate.alloc(24);
    call write~$Pointer$(#t~nondet186.base, #t~nondet186.offset, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 112 + 24, 8);
    call write~int(0, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 112 + 32, 4);
    call write~int(0, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset + 112 + 36, 8);
    havoc #t~union1840.head, #t~union1840.tail;
    havoc #t~nondet185.base, #t~nondet185.offset;
    havoc #t~union1841.__padding, #t~union1841.dep_map.key.base, #t~union1841.dep_map.key.offset, #t~union1841.dep_map.class_cache.base, #t~union1841.dep_map.class_cache.offset, #t~union1841.dep_map.name.base, #t~union1841.dep_map.name.offset, #t~union1841.dep_map.cpu, #t~union1841.dep_map.ip;
    havoc #t~nondet186.base, #t~nondet186.offset;
    ~sys_tbl.base, ~sys_tbl.offset := 0, 0;
    call ~#sys_tbl_pa.base, ~#sys_tbl_pa.offset := #Ultimate.alloc(8);
    call write~int(0, ~#sys_tbl_pa.base, ~#sys_tbl_pa.offset, 8);
    ~hba_chain.base, ~hba_chain.offset := 0, 0;
    ~adpt_sysfs_class.base, ~adpt_sysfs_class.offset := 0, 0;
    call ~#adpt_fops.base, ~#adpt_fops.offset := #Ultimate.alloc(208);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 0, 8);
    call write~$Pointer$(#funAddr~noop_llseek.base, #funAddr~noop_llseek.offset, ~#adpt_fops.base, ~#adpt_fops.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 24, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 48, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 56, 8);
    call write~$Pointer$(#funAddr~adpt_unlocked_ioctl.base, #funAddr~adpt_unlocked_ioctl.offset, ~#adpt_fops.base, ~#adpt_fops.offset + 64, 8);
    call write~$Pointer$(#funAddr~compat_adpt_ioctl.base, #funAddr~compat_adpt_ioctl.offset, ~#adpt_fops.base, ~#adpt_fops.offset + 72, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 80, 8);
    call write~$Pointer$(#funAddr~adpt_open.base, #funAddr~adpt_open.offset, ~#adpt_fops.base, ~#adpt_fops.offset + 88, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 96, 8);
    call write~$Pointer$(#funAddr~adpt_close.base, #funAddr~adpt_close.offset, ~#adpt_fops.base, ~#adpt_fops.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 112, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 176, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 192, 8);
    call write~$Pointer$(0, 0, ~#adpt_fops.base, ~#adpt_fops.offset + 200, 8);
    ~adpt_post_wait_queue.base, ~adpt_post_wait_queue.offset := 0, 0;
    ~adpt_post_wait_id := 0;
    call ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset := #Ultimate.alloc(68);
    call write~int(0, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 0 + 0, 4);
    call write~int(#t~union1842.head, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 0 + 0 + 0, 2);
    call write~int(#t~union1842.tail, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 0 + 0 + 2, 2);
    call write~int(3735899821, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 4, 4);
    call write~int(4294967295, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 8, 4);
    call write~$Pointer$(0, -1, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 12, 8);
    call write~$Pointer$(0, 0, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 20 + 0, 8);
    call write~$Pointer$(0, 0, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 20 + 8 + 0, 8);
    call write~$Pointer$(0, 0, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 20 + 8 + 8, 8);
    call #t~nondet187.base, #t~nondet187.offset := #Ultimate.alloc(20);
    call write~$Pointer$(#t~nondet187.base, #t~nondet187.offset, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 20 + 24, 8);
    call write~int(0, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 20 + 32, 4);
    call write~int(0, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 20 + 36, 8);
    call write~int(#t~union1843.__padding[0], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0, 1);
    call write~int(#t~union1843.__padding[1], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1, 1);
    call write~int(#t~union1843.__padding[2], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[3], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[4], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[5], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[6], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[7], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[8], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[9], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[10], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[11], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[12], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[13], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[14], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[15], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[16], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[17], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[18], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[19], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[20], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[21], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[22], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~int(#t~union1843.__padding[23], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, 1);
    call write~$Pointer$(#t~union1843.dep_map.key.base, #t~union1843.dep_map.key.offset, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 24 + 0, 8);
    call write~$Pointer$(#t~union1843.dep_map.class_cache.base[0], #t~union1843.dep_map.class_cache.offset[0], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 24 + 8, 8);
    call write~$Pointer$(#t~union1843.dep_map.class_cache.base[1], #t~union1843.dep_map.class_cache.offset[1], ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 24 + 8 + 8, 8);
    call write~$Pointer$(#t~union1843.dep_map.name.base, #t~union1843.dep_map.name.offset, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 24 + 24, 8);
    call write~int(#t~union1843.dep_map.cpu, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 24 + 32, 4);
    call write~int(#t~union1843.dep_map.ip, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset + 0 + 0 + 24 + 36, 8);
    havoc #t~union1842.head, #t~union1842.tail;
    havoc #t~nondet187.base, #t~nondet187.offset;
    havoc #t~union1843.__padding, #t~union1843.dep_map.key.base, #t~union1843.dep_map.key.offset, #t~union1843.dep_map.class_cache.base, #t~union1843.dep_map.class_cache.offset, #t~union1843.dep_map.name.base, #t~union1843.dep_map.name.offset, #t~union1843.dep_map.cpu, #t~union1843.dep_map.ip;
    call ~#driver_template.base, ~#driver_template.offset := #Ultimate.alloc(315);
    call write~$Pointer$(~#__this_module.base, ~#__this_module.offset, ~#driver_template.base, ~#driver_template.offset + 0, 8);
    call #t~nondet1803.base, #t~nondet1803.offset := #Ultimate.alloc(8);
    call write~$Pointer$(#t~nondet1803.base, #t~nondet1803.offset, ~#driver_template.base, ~#driver_template.offset + 8, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 16, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 24, 8);
    call write~$Pointer$(#funAddr~adpt_info.base, #funAddr~adpt_info.offset, ~#driver_template.base, ~#driver_template.offset + 32, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 40, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 48, 8);
    call write~$Pointer$(#funAddr~adpt_queue.base, #funAddr~adpt_queue.offset, ~#driver_template.base, ~#driver_template.offset + 56, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 64, 8);
    call write~$Pointer$(#funAddr~adpt_abort.base, #funAddr~adpt_abort.offset, ~#driver_template.base, ~#driver_template.offset + 72, 8);
    call write~$Pointer$(#funAddr~adpt_device_reset.base, #funAddr~adpt_device_reset.offset, ~#driver_template.base, ~#driver_template.offset + 80, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 88, 8);
    call write~$Pointer$(#funAddr~adpt_bus_reset.base, #funAddr~adpt_bus_reset.offset, ~#driver_template.base, ~#driver_template.offset + 96, 8);
    call write~$Pointer$(#funAddr~adpt_reset.base, #funAddr~adpt_reset.offset, ~#driver_template.base, ~#driver_template.offset + 104, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 112, 8);
    call write~$Pointer$(#funAddr~adpt_slave_configure.base, #funAddr~adpt_slave_configure.offset, ~#driver_template.base, ~#driver_template.offset + 120, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 128, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 136, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 144, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 152, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 160, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 168, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 176, 8);
    call write~$Pointer$(#funAddr~adpt_bios_param.base, #funAddr~adpt_bios_param.offset, ~#driver_template.base, ~#driver_template.offset + 184, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 192, 8);
    call write~$Pointer$(#funAddr~adpt_proc_info.base, #funAddr~adpt_proc_info.offset, ~#driver_template.base, ~#driver_template.offset + 200, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 208, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 216, 8);
    call #t~nondet1804.base, #t~nondet1804.offset := #Ultimate.alloc(8);
    call write~$Pointer$(#t~nondet1804.base, #t~nondet1804.offset, ~#driver_template.base, ~#driver_template.offset + 224, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 232, 8);
    call write~int(255, ~#driver_template.base, ~#driver_template.offset + 240, 4);
    call write~int(7, ~#driver_template.base, ~#driver_template.offset + 244, 4);
    call write~int(0, ~#driver_template.base, ~#driver_template.offset + 248, 2);
    call write~int(0, ~#driver_template.base, ~#driver_template.offset + 250, 2);
    call write~int(0, ~#driver_template.base, ~#driver_template.offset + 252, 2);
    call write~int(0, ~#driver_template.base, ~#driver_template.offset + 254, 8);
    call write~int(1, ~#driver_template.base, ~#driver_template.offset + 262, 2);
    call write~int(0, ~#driver_template.base, ~#driver_template.offset + 264, 1);
    call write~int(0, ~#driver_template.base, ~#driver_template.offset + 265, 1);
    call write~int(0, ~#driver_template.base, ~#driver_template.offset + 266, 1);
    call write~int(1, ~#driver_template.base, ~#driver_template.offset + 267, 1);
    call write~int(0, ~#driver_template.base, ~#driver_template.offset + 268, 1);
    call write~int(0, ~#driver_template.base, ~#driver_template.offset + 269, 1);
    call write~int(0, ~#driver_template.base, ~#driver_template.offset + 270, 1);
    call write~int(0, ~#driver_template.base, ~#driver_template.offset + 271, 4);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 275, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 283, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 291 + 0, 8);
    call write~$Pointer$(0, 0, ~#driver_template.base, ~#driver_template.offset + 291 + 8, 8);
    call write~int(0, ~#driver_template.base, ~#driver_template.offset + 307, 8);
    havoc #t~nondet1803.base, #t~nondet1803.offset;
    havoc #t~nondet1804.base, #t~nondet1804.offset;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~sys_tbl_ind, ~sys_tbl_len, ~hba_count, ~LDV_IN_INTERRUPT, ~ldv_spin, ~#adpt_mutex.base, ~#adpt_mutex.offset, ~#DPTI_sig.base, ~#DPTI_sig.offset, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset, ~sys_tbl.base, ~sys_tbl.offset, ~#sys_tbl_pa.base, ~#sys_tbl_pa.offset, ~hba_chain.base, ~hba_chain.offset, ~adpt_sysfs_class.base, ~adpt_sysfs_class.offset, ~#adpt_fops.base, ~#adpt_fops.offset, ~adpt_post_wait_queue.base, ~adpt_post_wait_queue.offset, ~adpt_post_wait_id, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset, ~#driver_template.base, ~#driver_template.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation adpt_init() returns (#res : int){
    var #t~nondet1805.base : int, #t~nondet1805.offset : int;
    var #t~ret1806 : int;
    var #t~ret1807 : int;
    var #t~mem1808.base : int, #t~mem1808.offset : int;
    var #t~mem1809.base : int, #t~mem1809.offset : int;
    var #t~ret1810 : int;
    var #t~mem1811.base : int, #t~mem1811.offset : int;
    var #t~mem1812.base : int, #t~mem1812.offset : int;
    var #t~mem1813.base : int, #t~mem1813.offset : int;
    var #t~mem1814.base : int, #t~mem1814.offset : int;
    var ~error~2072 : int;
    var ~pHba~2072.base : int, ~pHba~2072.offset : int;
    var ~next~2072.base : int, ~next~2072.offset : int;
    var ~__cil_tmp4~2072.base : int, ~__cil_tmp4~2072.offset : int;
    var ~__cil_tmp5~2072 : int;
    var ~__cil_tmp6~2072 : int;
    var ~__cil_tmp7~2072 : int;
    var ~__cil_tmp8~2072 : int;
    var ~__cil_tmp9~2072.base : int, ~__cil_tmp9~2072.offset : int;
    var ~__cil_tmp10~2072 : int;
    var ~__cil_tmp11~2072 : int;
    var ~__cil_tmp12~2072.base : int, ~__cil_tmp12~2072.offset : int;
    var ~__cil_tmp13~2072 : int;
    var ~__cil_tmp14~2072 : int;
    var ~__cil_tmp15~2072.base : int, ~__cil_tmp15~2072.offset : int;
    var ~__cil_tmp16~2072 : int;
    var ~__cil_tmp17~2072 : int;
    var ~__cil_tmp18~2072.base : int, ~__cil_tmp18~2072.offset : int;
    var ~__cil_tmp19~2072.base : int, ~__cil_tmp19~2072.offset : int;
    var ~__cil_tmp20~2072 : int;
    var ~__cil_tmp21~2072 : int;
    var ~__cil_tmp22~2072 : int;
    var ~__cil_tmp23~2072 : int;
    var ~__cil_tmp24~2072.base : int, ~__cil_tmp24~2072.offset : int;
    var ~__cil_tmp25~2072.base : int, ~__cil_tmp25~2072.offset : int;
    var ~__cil_tmp26~2072 : int;
    var ~__cil_tmp27~2072 : int;

  loc12:
    havoc ~error~2072;
    havoc ~pHba~2072.base, ~pHba~2072.offset;
    havoc ~next~2072.base, ~next~2072.offset;
    havoc ~__cil_tmp4~2072.base, ~__cil_tmp4~2072.offset;
    havoc ~__cil_tmp5~2072;
    havoc ~__cil_tmp6~2072;
    havoc ~__cil_tmp7~2072;
    havoc ~__cil_tmp8~2072;
    havoc ~__cil_tmp9~2072.base, ~__cil_tmp9~2072.offset;
    havoc ~__cil_tmp10~2072;
    havoc ~__cil_tmp11~2072;
    havoc ~__cil_tmp12~2072.base, ~__cil_tmp12~2072.offset;
    havoc ~__cil_tmp13~2072;
    havoc ~__cil_tmp14~2072;
    havoc ~__cil_tmp15~2072.base, ~__cil_tmp15~2072.offset;
    havoc ~__cil_tmp16~2072;
    havoc ~__cil_tmp17~2072;
    havoc ~__cil_tmp18~2072.base, ~__cil_tmp18~2072.offset;
    havoc ~__cil_tmp19~2072.base, ~__cil_tmp19~2072.offset;
    havoc ~__cil_tmp20~2072;
    havoc ~__cil_tmp21~2072;
    havoc ~__cil_tmp22~2072;
    havoc ~__cil_tmp23~2072;
    havoc ~__cil_tmp24~2072.base, ~__cil_tmp24~2072.offset;
    havoc ~__cil_tmp25~2072.base, ~__cil_tmp25~2072.offset;
    havoc ~__cil_tmp26~2072;
    havoc ~__cil_tmp27~2072;
    call #t~nondet1805.base, #t~nondet1805.offset := #Ultimate.alloc(50);
    call #t~ret1806 := printk(#t~nondet1805.base, #t~nondet1805.offset);
    assume -2147483648 <= #t~ret1806 && #t~ret1806 <= 2147483647;
    havoc #t~nondet1805.base, #t~nondet1805.offset;
    havoc #t~ret1806;
    call #t~ret1807 := adpt_detect(~#driver_template.base, ~#driver_template.offset);
    assume -2147483648 <= #t~ret1807 && #t~ret1807 <= 2147483647;
    ~error~2072 := #t~ret1807;
    havoc #t~ret1807;
    assume !(~error~2072 < 0);
    ~__cil_tmp4~2072.base, ~__cil_tmp4~2072.offset := 0, 0;
    ~__cil_tmp5~2072 := ~__cil_tmp4~2072.base + ~__cil_tmp4~2072.offset;
    ~__cil_tmp6~2072 := ~hba_chain.base + ~hba_chain.offset;
    assume !(~__cil_tmp6~2072 % 18446744073709551616 == ~__cil_tmp5~2072 % 18446744073709551616);
    ~pHba~2072.base, ~pHba~2072.offset := ~hba_chain.base, ~hba_chain.offset;
    ~__cil_tmp19~2072.base, ~__cil_tmp19~2072.offset := 0, 0;
    ~__cil_tmp20~2072 := ~__cil_tmp19~2072.base + ~__cil_tmp19~2072.offset;
    ~__cil_tmp21~2072 := ~pHba~2072.base + ~pHba~2072.offset;
    assume !(~__cil_tmp21~2072 % 18446744073709551616 != ~__cil_tmp20~2072 % 18446744073709551616);
    #res := 0;
    assume true;
    return;
}

procedure adpt_init() returns (#res : int);
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~hba_chain.base, ~hba_chain.offset, ~hba_count, ~adpt_sysfs_class.base, ~adpt_sysfs_class.offset, ~adpt_post_wait_queue.base, ~adpt_post_wait_queue.offset, ~sys_tbl_len, ~sys_tbl.base, ~sys_tbl.offset, ~sys_tbl_ind, ~ldv_spin, ~adpt_post_wait_id;

implementation kzalloc(#in~size : int, #in~flags : int) returns (#res.base : int, #res.offset : int){
    var #t~nondet1837.base : int, #t~nondet1837.offset : int;
    var ~size : int;
    var ~flags : int;
    var ~tmp~2182.base : int, ~tmp~2182.offset : int;

  loc13:
    ~size := #in~size;
    ~flags := #in~flags;
    havoc ~tmp~2182.base, ~tmp~2182.offset;
    call ldv_check_alloc_flags(~flags);
    return;
}

procedure kzalloc(#in~size : int, #in~flags : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation ULTIMATE.start() returns (){
  loc14:
    call ULTIMATE.init();
    call main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~sys_tbl_ind, ~sys_tbl_len, ~hba_count, ~LDV_IN_INTERRUPT, ~ldv_spin, ~#adpt_mutex.base, ~#adpt_mutex.offset, ~#DPTI_sig.base, ~#DPTI_sig.offset, ~#adpt_configuration_lock.base, ~#adpt_configuration_lock.offset, ~sys_tbl.base, ~sys_tbl.offset, ~#sys_tbl_pa.base, ~#sys_tbl_pa.offset, ~hba_chain.base, ~hba_chain.offset, ~adpt_sysfs_class.base, ~adpt_sysfs_class.offset, ~#adpt_fops.base, ~#adpt_fops.offset, ~adpt_post_wait_queue.base, ~adpt_post_wait_queue.offset, ~adpt_post_wait_id, ~#adpt_post_wait_lock.base, ~#adpt_post_wait_lock.offset, ~#driver_template.base, ~#driver_template.offset, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~LDV_IN_INTERRUPT;
modifies #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~ldv_spin, ~adpt_post_wait_queue.base, ~adpt_post_wait_queue.offset, ~adpt_post_wait_id, ~hba_chain.base, ~hba_chain.offset, ~hba_count, ~adpt_sysfs_class.base, ~adpt_sysfs_class.offset, ~sys_tbl_len, ~sys_tbl.base, ~sys_tbl.offset, ~sys_tbl_ind, ~LDV_IN_INTERRUPT;

implementation adpt_i2o_passthru(#in~pHba.base : int, #in~pHba.offset : int, #in~arg.base : int, #in~arg.offset : int) returns (#res : int){
    var #t~mem988 : int;
    var #t~malloc989.base : int, #t~malloc989.offset : int;
    var #t~memset991.base : int, #t~memset991.offset : int;
    var #t~ret992 : int;
    var #t~ret993.base : int, #t~ret993.offset : int;
    var #t~nondet994.base : int, #t~nondet994.offset : int;
    var #t~ret995 : int;
    var #t~mem996 : int;
    var #t~ret998 : ~u32;
    var #t~mem1000 : int;
    var #t~mem1001 : int;
    var #t~memset1002.base : int, #t~memset1002.offset : int;
    var #t~mem1003 : int;
    var #t~nondet1004.base : int, #t~nondet1004.offset : int;
    var #t~ret1005 : int;
    var #t~mem1006 : int;
    var #t~mem1007 : int;
    var #t~nondet1008.base : int, #t~nondet1008.offset : int;
    var #t~ret1009 : int;
    var #t~mem1010 : int;
    var #t~mem1011.base : int, #t~mem1011.offset : int;
    var #t~ret1012.base : int, #t~ret1012.offset : int;
    var #t~nondet1013.base : int, #t~nondet1013.offset : int;
    var #t~ret1014 : int;
    var #t~mem1015.base : int, #t~mem1015.offset : int;
    var #t~mem1017 : int;
    var #t~mem1018 : int;
    var #t~ret1019 : int;
    var #t~nondet1020.base : int, #t~nondet1020.offset : int;
    var #t~ret1021 : int;
    var #t~mem1022 : int;
    var #t~mem1024.base : int, #t~mem1024.offset : int;
    var #t~ret1025 : int;
    var #t~nondet1026.base : int, #t~nondet1026.offset : int;
    var #t~ret1027 : int;
    var #t~mem1028.base : int, #t~mem1028.offset : int;
    var #t~mem1029.base : int, #t~mem1029.offset : int;
    var #t~mem1030.base : int, #t~mem1030.offset : int;
    var #t~memset1031.base : int, #t~memset1031.offset : int;
    var #t~ret1032 : int;
    var #t~mem1033 : int;
    var #t~mem1034 : int;
    var #t~mem1035 : int;
    var #t~mem1036.base : int, #t~mem1036.offset : int;
    var #t~mem1037.base : int, #t~mem1037.offset : int;
    var #t~ret1038 : int;
    var #t~mem1039.base : int, #t~mem1039.offset : int;
    var #t~mem1040.base : int, #t~mem1040.offset : int;
    var #t~mem1041 : int;
    var #t~nondet1042.base : int, #t~nondet1042.offset : int;
    var #t~ret1043 : int;
    var #t~ret1044 : int;
    var #t~nondet1045.base : int, #t~nondet1045.offset : int;
    var #t~ret1046 : int;
    var #t~ret1047 : int;
    var #t~nondet1048.base : int, #t~nondet1048.offset : int;
    var #t~ret1049 : int;
    var #t~mem1050.base : int, #t~mem1050.offset : int;
    var #t~mem1051.base : int, #t~mem1051.offset : int;
    var #t~mem1052.base : int, #t~mem1052.offset : int;
    var #t~mem1053 : int;
    var #t~mem1054.base : int, #t~mem1054.offset : int;
    var #t~mem1055.base : int, #t~mem1055.offset : int;
    var #t~mem1056 : int;
    var ~pHba.base : int, ~pHba.offset : int;
    var ~arg.base : int, ~arg.offset : int;
    var ~#msg~1187.base : int, ~#msg~1187.offset : int;
    var ~reply~1187.base : int, ~reply~1187.offset : int;
    var ~size~1187 : ~u32;
    var ~reply_size~1187 : ~u32;
    var ~user_msg~1187.base : int, ~user_msg~1187.offset : int;
    var ~user_reply~1187.base : int, ~user_reply~1187.offset : int;
    var ~#sg_list~1187.base : int, ~#sg_list~1187.offset : int;
    var ~__lengthofsg_list~1187 : int;
    var ~tmp~1187.base : int, ~tmp~1187.offset : int;
    var ~sg_offset~1187 : ~u32;
    var ~sg_count~1187 : ~u32;
    var ~sg_index~1187 : int;
    var ~i~1187 : ~u32;
    var ~rcode~1187 : ~u32;
    var ~p~1187.base : int, ~p~1187.offset : int;
    var ~#addr~1187.base : int, ~#addr~1187.offset : int;
    var ~flags~1187 : ~ulong;
    var ~__ret_gu~1187 : int;
    var ~__val_gu~1187 : int;
    var ~tmp___0~1187 : int;
    var ~__ret_gu___0~1187 : int;
    var ~__val_gu___0~1187 : int;
    var ~tmp___1~1187.base : int, ~tmp___1~1187.offset : int;
    var ~sg~1187.base : int, ~sg~1187.offset : int;
    var ~sg_size~1187 : int;
    var ~tmp___2~1187 : int;
    var ~tmp___3~1187 : int;
    var ~tmp___4~1187 : int;
    var ~j~1187 : ~u32;
    var ~sg___0~1187.base : int, ~sg___0~1187.offset : int;
    var ~sg_size___0~1187 : int;
    var ~__ret_gu___1~1187 : int;
    var ~__val_gu___1~1187 : int;
    var ~tmp___5~1187 : int;
    var ~tmp___6~1187 : int;
    var ~tmp___7~1187 : int;
    var ~tmp___8~1187 : int;
    var ~sg___1~1187.base : int, ~sg___1~1187.offset : int;
    var ~__cil_tmp41~1187 : int;
    var ~__cil_tmp42~1187 : int;
    var ~__cil_tmp43~1187 : ~u32;
    var ~__cil_tmp44~1187 : int;
    var ~__cil_tmp45~1187 : int;
    var ~__cil_tmp46~1187.base : int, ~__cil_tmp46~1187.offset : int;
    var ~__cil_tmp47~1187.base : int, ~__cil_tmp47~1187.offset : int;
    var ~__cil_tmp48~1187 : int;
    var ~__cil_tmp49~1187.base : int, ~__cil_tmp49~1187.offset : int;
    var ~__cil_tmp50~1187.base : int, ~__cil_tmp50~1187.offset : int;
    var ~__cil_tmp51~1187 : int;
    var ~__cil_tmp52~1187.base : int, ~__cil_tmp52~1187.offset : int;
    var ~__cil_tmp53~1187 : int;
    var ~__cil_tmp54~1187 : int;
    var ~__cil_tmp55~1187 : int;
    var ~__cil_tmp56~1187 : int;
    var ~__cil_tmp57~1187.base : int, ~__cil_tmp57~1187.offset : int;
    var ~__cil_tmp58~1187.base : int, ~__cil_tmp58~1187.offset : int;
    var ~__cil_tmp59~1187 : int;
    var ~__cil_tmp60~1187 : int;
    var ~__cil_tmp61~1187 : ~u32;
    var ~__cil_tmp62~1187 : ~u32;
    var ~__cil_tmp63~1187 : int;
    var ~__cil_tmp64~1187 : int;
    var ~__cil_tmp65~1187 : int;
    var ~__cil_tmp66~1187 : int;
    var ~__cil_tmp67~1187.base : int, ~__cil_tmp67~1187.offset : int;
    var ~__cil_tmp68~1187 : int;
    var ~__cil_tmp69~1187 : int;
    var ~__cil_tmp70~1187 : ~u32;
    var ~__cil_tmp71~1187.base : int, ~__cil_tmp71~1187.offset : int;
    var ~__cil_tmp72~1187 : int;
    var ~__cil_tmp73~1187 : int;
    var ~__cil_tmp74~1187 : ~u32;
    var ~__cil_tmp75~1187 : int;
    var ~__cil_tmp76~1187 : int;
    var ~__cil_tmp77~1187 : int;
    var ~__cil_tmp78~1187.base : int, ~__cil_tmp78~1187.offset : int;
    var ~__cil_tmp79~1187 : ~u32;
    var ~__cil_tmp80~1187 : ~u32;
    var ~__cil_tmp81~1187 : int;
    var ~__cil_tmp82~1187 : int;
    var ~__cil_tmp83~1187 : ~u32;
    var ~__cil_tmp84~1187 : int;
    var ~__cil_tmp85~1187 : int;
    var ~__cil_tmp86~1187.base : int, ~__cil_tmp86~1187.offset : int;
    var ~__cil_tmp87~1187.base : int, ~__cil_tmp87~1187.offset : int;
    var ~__cil_tmp88~1187.base : int, ~__cil_tmp88~1187.offset : int;
    var ~__cil_tmp89~1187 : int;
    var ~__cil_tmp90~1187.base : int, ~__cil_tmp90~1187.offset : int;
    var ~__cil_tmp91~1187 : ~u32;
    var ~__cil_tmp92~1187 : int;
    var ~__cil_tmp93~1187 : int;
    var ~__cil_tmp94~1187 : int;
    var ~__cil_tmp95~1187.base : int, ~__cil_tmp95~1187.offset : int;
    var ~__cil_tmp96~1187.base : int, ~__cil_tmp96~1187.offset : int;
    var ~__cil_tmp97~1187 : int;
    var ~__cil_tmp98~1187.base : int, ~__cil_tmp98~1187.offset : int;
    var ~__cil_tmp99~1187 : ~u32;
    var ~__cil_tmp100~1187 : int;
    var ~__cil_tmp101~1187.base : int, ~__cil_tmp101~1187.offset : int;
    var ~__cil_tmp102~1187 : ~u32;
    var ~__cil_tmp103~1187 : int;
    var ~__cil_tmp104~1187 : int;
    var ~__cil_tmp105~1187 : int;
    var ~__cil_tmp106~1187.base : int, ~__cil_tmp106~1187.offset : int;
    var ~__cil_tmp107~1187 : int;
    var ~__cil_tmp108~1187 : int;
    var ~__cil_tmp109~1187.base : int, ~__cil_tmp109~1187.offset : int;
    var ~__cil_tmp110~1187 : int;
    var ~__cil_tmp111~1187.base : int, ~__cil_tmp111~1187.offset : int;
    var ~__cil_tmp112~1187.base : int, ~__cil_tmp112~1187.offset : int;
    var ~__cil_tmp113~1187 : int;
    var ~__cil_tmp114~1187 : int;
    var ~__cil_tmp115~1187 : int;
    var ~__cil_tmp116~1187 : int;
    var ~__cil_tmp117~1187.base : int, ~__cil_tmp117~1187.offset : int;
    var ~__cil_tmp118~1187.base : int, ~__cil_tmp118~1187.offset : int;
    var ~__cil_tmp119~1187.base : int, ~__cil_tmp119~1187.offset : int;
    var ~__cil_tmp120~1187.base : int, ~__cil_tmp120~1187.offset : int;
    var ~__cil_tmp121~1187.base : int, ~__cil_tmp121~1187.offset : int;
    var ~__cil_tmp122~1187 : int;
    var ~__cil_tmp123~1187.base : int, ~__cil_tmp123~1187.offset : int;
    var ~__cil_tmp124~1187 : ~u32;
    var ~__cil_tmp125~1187 : int;
    var ~__cil_tmp126~1187 : int;
    var ~__cil_tmp127~1187.base : int, ~__cil_tmp127~1187.offset : int;
    var ~__cil_tmp128~1187 : int;
    var ~__cil_tmp129~1187 : int;
    var ~__cil_tmp130~1187 : ~u32;
    var ~__cil_tmp131~1187 : int;
    var ~__cil_tmp132~1187.base : int, ~__cil_tmp132~1187.offset : int;
    var ~__cil_tmp133~1187 : int;
    var ~__cil_tmp134~1187 : int;
    var ~__cil_tmp135~1187 : int;
    var ~__cil_tmp136~1187.base : int, ~__cil_tmp136~1187.offset : int;
    var ~__cil_tmp137~1187.base : int, ~__cil_tmp137~1187.offset : int;
    var ~__cil_tmp138~1187 : int;
    var ~__cil_tmp139~1187.base : int, ~__cil_tmp139~1187.offset : int;
    var ~__cil_tmp140~1187 : int;
    var ~__cil_tmp141~1187 : int;
    var ~__cil_tmp142~1187.base : int, ~__cil_tmp142~1187.offset : int;
    var ~__cil_tmp143~1187 : ~dma_addr_t;
    var ~__cil_tmp144~1187.base : int, ~__cil_tmp144~1187.offset : int;
    var ~__cil_tmp145~1187 : int;
    var ~__cil_tmp146~1187 : int;
    var ~__cil_tmp147~1187 : int;
    var ~__cil_tmp148~1187.base : int, ~__cil_tmp148~1187.offset : int;
    var ~__cil_tmp149~1187 : int;
    var ~__cil_tmp150~1187.base : int, ~__cil_tmp150~1187.offset : int;
    var ~__cil_tmp151~1187 : int;
    var ~__cil_tmp152~1187.base : int, ~__cil_tmp152~1187.offset : int;
    var ~__cil_tmp153~1187 : int;
    var ~__cil_tmp154~1187 : int;
    var ~__cil_tmp155~1187 : int;
    var ~__cil_tmp156~1187.base : int, ~__cil_tmp156~1187.offset : int;
    var ~__cil_tmp157~1187 : int;
    var ~__cil_tmp158~1187 : int;
    var ~__cil_tmp159~1187 : int;
    var ~__cil_tmp160~1187.base : int, ~__cil_tmp160~1187.offset : int;
    var ~__cil_tmp161~1187 : int;
    var ~__cil_tmp162~1187 : int;
    var ~__cil_tmp163~1187.base : int, ~__cil_tmp163~1187.offset : int;
    var ~__cil_tmp164~1187.base : int, ~__cil_tmp164~1187.offset : int;
    var ~__cil_tmp165~1187.base : int, ~__cil_tmp165~1187.offset : int;
    var ~__cil_tmp166~1187.base : int, ~__cil_tmp166~1187.offset : int;
    var ~__cil_tmp167~1187 : int;
    var ~__cil_tmp168~1187 : ~u32;
    var ~__cil_tmp169~1187 : ~u32;
    var ~__cil_tmp170~1187 : int;
    var ~__cil_tmp171~1187.base : int, ~__cil_tmp171~1187.offset : int;
    var ~__cil_tmp172~1187 : int;
    var ~__cil_tmp173~1187.base : int, ~__cil_tmp173~1187.offset : int;
    var ~__cil_tmp174~1187 : ~u32;
    var ~__cil_tmp175~1187 : int;
    var ~__cil_tmp176~1187 : int;
    var ~__cil_tmp177~1187.base : int, ~__cil_tmp177~1187.offset : int;
    var ~__cil_tmp178~1187 : ~u32;
    var ~__cil_tmp179~1187 : int;
    var ~__cil_tmp180~1187 : int;
    var ~__cil_tmp181~1187.base : int, ~__cil_tmp181~1187.offset : int;
    var ~__cil_tmp182~1187 : int;
    var ~__cil_tmp183~1187 : int;
    var ~__cil_tmp184~1187 : ~u32;
    var ~__cil_tmp185~1187 : int;
    var ~__cil_tmp186~1187.base : int, ~__cil_tmp186~1187.offset : int;
    var ~__cil_tmp187~1187.base : int, ~__cil_tmp187~1187.offset : int;
    var ~__cil_tmp188~1187.base : int, ~__cil_tmp188~1187.offset : int;
    var ~__cil_tmp189~1187.base : int, ~__cil_tmp189~1187.offset : int;
    var ~__cil_tmp190~1187.base : int, ~__cil_tmp190~1187.offset : int;
    var ~__cil_tmp191~1187.base : int, ~__cil_tmp191~1187.offset : int;
    var ~__cil_tmp192~1187 : int;
    var ~__cil_tmp193~1187 : int;
    var ~__cil_tmp194~1187 : int;
    var ~__cil_tmp195~1187.base : int, ~__cil_tmp195~1187.offset : int;
    var ~__cil_tmp196~1187.base : int, ~__cil_tmp196~1187.offset : int;
    var ~__cil_tmp197~1187.base : int, ~__cil_tmp197~1187.offset : int;
    var ~__cil_tmp198~1187.base : int, ~__cil_tmp198~1187.offset : int;
    var ~__cil_tmp199~1187.base : int, ~__cil_tmp199~1187.offset : int;
    var ~__cil_tmp200~1187.base : int, ~__cil_tmp200~1187.offset : int;
    var ~__cil_tmp201~1187 : int;
    var ~__cil_tmp202~1187.base : int, ~__cil_tmp202~1187.offset : int;
    var ~__cil_tmp203~1187 : int;
    var ~__cil_tmp204~1187 : int;
    var ~__cil_tmp205~1187 : ~u32;
    var ~__cil_tmp206~1187.base : int, ~__cil_tmp206~1187.offset : int;
    var ~__cil_tmp207~1187.base : int, ~__cil_tmp207~1187.offset : int;
    var ~__cil_tmp208~1187.base : int, ~__cil_tmp208~1187.offset : int;
    var ~__cil_tmp209~1187.base : int, ~__cil_tmp209~1187.offset : int;
    var ~__cil_tmp210~1187 : int;
    var ~__cil_tmp211~1187 : int;
    var ~__cil_tmp212~1187.base : int, ~__cil_tmp212~1187.offset : int;
    var ~__cil_tmp213~1187.base : int, ~__cil_tmp213~1187.offset : int;
    var ~__cil_tmp214~1187.base : int, ~__cil_tmp214~1187.offset : int;
    var ~__cil_tmp215~1187.base : int, ~__cil_tmp215~1187.offset : int;
    var ~__cil_tmp216~1187 : int;
    var ~__cil_tmp217~1187 : int;
    var ~__cil_tmp218~1187.base : int, ~__cil_tmp218~1187.offset : int;
    var ~__cil_tmp219~1187.base : int, ~__cil_tmp219~1187.offset : int;
    var ~__cil_tmp220~1187 : int;
    var ~__cil_tmp221~1187.base : int, ~__cil_tmp221~1187.offset : int;
    var ~__cil_tmp222~1187.base : int, ~__cil_tmp222~1187.offset : int;
    var ~__cil_tmp223~1187.base : int, ~__cil_tmp223~1187.offset : int;
    var ~__cil_tmp224~1187 : int;
    var ~__cil_tmp225~1187.base : int, ~__cil_tmp225~1187.offset : int;
    var ~__cil_tmp226~1187.base : int, ~__cil_tmp226~1187.offset : int;
    var ~__cil_tmp227~1187.base : int, ~__cil_tmp227~1187.offset : int;
    var ~__cil_tmp228~1187.base : int, ~__cil_tmp228~1187.offset : int;
    var ~__cil_tmp229~1187 : int;
    var ~__cil_tmp230~1187 : int;
    var ~__cil_tmp231~1187 : int;
    var ~__cil_tmp232~1187.base : int, ~__cil_tmp232~1187.offset : int;
    var ~__cil_tmp233~1187 : int;
    var ~__cil_tmp234~1187 : int;
    var ~__cil_tmp235~1187.base : int, ~__cil_tmp235~1187.offset : int;
    var ~__cil_tmp236~1187 : int;
    var ~__cil_tmp237~1187.base : int, ~__cil_tmp237~1187.offset : int;
    var ~__cil_tmp238~1187 : ~u32;
    var ~__cil_tmp239~1187 : int;
    var ~__cil_tmp240~1187 : int;
    var ~__cil_tmp241~1187.base : int, ~__cil_tmp241~1187.offset : int;
    var ~__cil_tmp242~1187.base : int, ~__cil_tmp242~1187.offset : int;
    var ~__cil_tmp243~1187.base : int, ~__cil_tmp243~1187.offset : int;
    var ~__cil_tmp244~1187.base : int, ~__cil_tmp244~1187.offset : int;
    var ~__cil_tmp245~1187 : int;
    var ~__cil_tmp246~1187.base : int, ~__cil_tmp246~1187.offset : int;
    var ~__cil_tmp247~1187 : int;
    var ~__cil_tmp248~1187 : int;
    var ~__cil_tmp249~1187 : ~u32;
    var ~__cil_tmp250~1187 : ~dma_addr_t;
    var ~__cil_tmp251~1187.base : int, ~__cil_tmp251~1187.offset : int;

  loc15:
    ~pHba.base, ~pHba.offset := #in~pHba.base, #in~pHba.offset;
    ~arg.base, ~arg.offset := #in~arg.base, #in~arg.offset;
    call ~#msg~1187.base, ~#msg~1187.offset := #Ultimate.alloc(512);
    havoc ~reply~1187.base, ~reply~1187.offset;
    havoc ~size~1187;
    havoc ~reply_size~1187;
    havoc ~user_msg~1187.base, ~user_msg~1187.offset;
    havoc ~user_reply~1187.base, ~user_reply~1187.offset;
    call ~#sg_list~1187.base, ~#sg_list~1187.offset := #Ultimate.alloc(8);
    havoc ~__lengthofsg_list~1187;
    havoc ~tmp~1187.base, ~tmp~1187.offset;
    havoc ~sg_offset~1187;
    havoc ~sg_count~1187;
    havoc ~sg_index~1187;
    havoc ~i~1187;
    havoc ~rcode~1187;
    havoc ~p~1187.base, ~p~1187.offset;
    call ~#addr~1187.base, ~#addr~1187.offset := #Ultimate.alloc(8);
    havoc ~flags~1187;
    havoc ~__ret_gu~1187;
    havoc ~__val_gu~1187;
    havoc ~tmp___0~1187;
    havoc ~__ret_gu___0~1187;
    havoc ~__val_gu___0~1187;
    havoc ~tmp___1~1187.base, ~tmp___1~1187.offset;
    havoc ~sg~1187.base, ~sg~1187.offset;
    havoc ~sg_size~1187;
    havoc ~tmp___2~1187;
    havoc ~tmp___3~1187;
    havoc ~tmp___4~1187;
    havoc ~j~1187;
    havoc ~sg___0~1187.base, ~sg___0~1187.offset;
    havoc ~sg_size___0~1187;
    havoc ~__ret_gu___1~1187;
    havoc ~__val_gu___1~1187;
    havoc ~tmp___5~1187;
    havoc ~tmp___6~1187;
    havoc ~tmp___7~1187;
    havoc ~tmp___8~1187;
    havoc ~sg___1~1187.base, ~sg___1~1187.offset;
    havoc ~__cil_tmp41~1187;
    havoc ~__cil_tmp42~1187;
    havoc ~__cil_tmp43~1187;
    havoc ~__cil_tmp44~1187;
    havoc ~__cil_tmp45~1187;
    havoc ~__cil_tmp46~1187.base, ~__cil_tmp46~1187.offset;
    havoc ~__cil_tmp47~1187.base, ~__cil_tmp47~1187.offset;
    havoc ~__cil_tmp48~1187;
    havoc ~__cil_tmp49~1187.base, ~__cil_tmp49~1187.offset;
    havoc ~__cil_tmp50~1187.base, ~__cil_tmp50~1187.offset;
    havoc ~__cil_tmp51~1187;
    havoc ~__cil_tmp52~1187.base, ~__cil_tmp52~1187.offset;
    havoc ~__cil_tmp53~1187;
    havoc ~__cil_tmp54~1187;
    havoc ~__cil_tmp55~1187;
    havoc ~__cil_tmp56~1187;
    havoc ~__cil_tmp57~1187.base, ~__cil_tmp57~1187.offset;
    havoc ~__cil_tmp58~1187.base, ~__cil_tmp58~1187.offset;
    havoc ~__cil_tmp59~1187;
    havoc ~__cil_tmp60~1187;
    havoc ~__cil_tmp61~1187;
    havoc ~__cil_tmp62~1187;
    havoc ~__cil_tmp63~1187;
    havoc ~__cil_tmp64~1187;
    havoc ~__cil_tmp65~1187;
    havoc ~__cil_tmp66~1187;
    havoc ~__cil_tmp67~1187.base, ~__cil_tmp67~1187.offset;
    havoc ~__cil_tmp68~1187;
    havoc ~__cil_tmp69~1187;
    havoc ~__cil_tmp70~1187;
    havoc ~__cil_tmp71~1187.base, ~__cil_tmp71~1187.offset;
    havoc ~__cil_tmp72~1187;
    havoc ~__cil_tmp73~1187;
    havoc ~__cil_tmp74~1187;
    havoc ~__cil_tmp75~1187;
    havoc ~__cil_tmp76~1187;
    havoc ~__cil_tmp77~1187;
    havoc ~__cil_tmp78~1187.base, ~__cil_tmp78~1187.offset;
    havoc ~__cil_tmp79~1187;
    havoc ~__cil_tmp80~1187;
    havoc ~__cil_tmp81~1187;
    havoc ~__cil_tmp82~1187;
    havoc ~__cil_tmp83~1187;
    havoc ~__cil_tmp84~1187;
    havoc ~__cil_tmp85~1187;
    havoc ~__cil_tmp86~1187.base, ~__cil_tmp86~1187.offset;
    havoc ~__cil_tmp87~1187.base, ~__cil_tmp87~1187.offset;
    havoc ~__cil_tmp88~1187.base, ~__cil_tmp88~1187.offset;
    havoc ~__cil_tmp89~1187;
    havoc ~__cil_tmp90~1187.base, ~__cil_tmp90~1187.offset;
    havoc ~__cil_tmp91~1187;
    havoc ~__cil_tmp92~1187;
    havoc ~__cil_tmp93~1187;
    havoc ~__cil_tmp94~1187;
    havoc ~__cil_tmp95~1187.base, ~__cil_tmp95~1187.offset;
    havoc ~__cil_tmp96~1187.base, ~__cil_tmp96~1187.offset;
    havoc ~__cil_tmp97~1187;
    havoc ~__cil_tmp98~1187.base, ~__cil_tmp98~1187.offset;
    havoc ~__cil_tmp99~1187;
    havoc ~__cil_tmp100~1187;
    havoc ~__cil_tmp101~1187.base, ~__cil_tmp101~1187.offset;
    havoc ~__cil_tmp102~1187;
    havoc ~__cil_tmp103~1187;
    havoc ~__cil_tmp104~1187;
    havoc ~__cil_tmp105~1187;
    havoc ~__cil_tmp106~1187.base, ~__cil_tmp106~1187.offset;
    havoc ~__cil_tmp107~1187;
    havoc ~__cil_tmp108~1187;
    havoc ~__cil_tmp109~1187.base, ~__cil_tmp109~1187.offset;
    havoc ~__cil_tmp110~1187;
    havoc ~__cil_tmp111~1187.base, ~__cil_tmp111~1187.offset;
    havoc ~__cil_tmp112~1187.base, ~__cil_tmp112~1187.offset;
    havoc ~__cil_tmp113~1187;
    havoc ~__cil_tmp114~1187;
    havoc ~__cil_tmp115~1187;
    havoc ~__cil_tmp116~1187;
    havoc ~__cil_tmp117~1187.base, ~__cil_tmp117~1187.offset;
    havoc ~__cil_tmp118~1187.base, ~__cil_tmp118~1187.offset;
    havoc ~__cil_tmp119~1187.base, ~__cil_tmp119~1187.offset;
    havoc ~__cil_tmp120~1187.base, ~__cil_tmp120~1187.offset;
    havoc ~__cil_tmp121~1187.base, ~__cil_tmp121~1187.offset;
    havoc ~__cil_tmp122~1187;
    havoc ~__cil_tmp123~1187.base, ~__cil_tmp123~1187.offset;
    havoc ~__cil_tmp124~1187;
    havoc ~__cil_tmp125~1187;
    havoc ~__cil_tmp126~1187;
    havoc ~__cil_tmp127~1187.base, ~__cil_tmp127~1187.offset;
    havoc ~__cil_tmp128~1187;
    havoc ~__cil_tmp129~1187;
    havoc ~__cil_tmp130~1187;
    havoc ~__cil_tmp131~1187;
    havoc ~__cil_tmp132~1187.base, ~__cil_tmp132~1187.offset;
    havoc ~__cil_tmp133~1187;
    havoc ~__cil_tmp134~1187;
    havoc ~__cil_tmp135~1187;
    havoc ~__cil_tmp136~1187.base, ~__cil_tmp136~1187.offset;
    havoc ~__cil_tmp137~1187.base, ~__cil_tmp137~1187.offset;
    havoc ~__cil_tmp138~1187;
    havoc ~__cil_tmp139~1187.base, ~__cil_tmp139~1187.offset;
    havoc ~__cil_tmp140~1187;
    havoc ~__cil_tmp141~1187;
    havoc ~__cil_tmp142~1187.base, ~__cil_tmp142~1187.offset;
    havoc ~__cil_tmp143~1187;
    havoc ~__cil_tmp144~1187.base, ~__cil_tmp144~1187.offset;
    havoc ~__cil_tmp145~1187;
    havoc ~__cil_tmp146~1187;
    havoc ~__cil_tmp147~1187;
    havoc ~__cil_tmp148~1187.base, ~__cil_tmp148~1187.offset;
    havoc ~__cil_tmp149~1187;
    havoc ~__cil_tmp150~1187.base, ~__cil_tmp150~1187.offset;
    havoc ~__cil_tmp151~1187;
    havoc ~__cil_tmp152~1187.base, ~__cil_tmp152~1187.offset;
    havoc ~__cil_tmp153~1187;
    havoc ~__cil_tmp154~1187;
    havoc ~__cil_tmp155~1187;
    havoc ~__cil_tmp156~1187.base, ~__cil_tmp156~1187.offset;
    havoc ~__cil_tmp157~1187;
    havoc ~__cil_tmp158~1187;
    havoc ~__cil_tmp159~1187;
    havoc ~__cil_tmp160~1187.base, ~__cil_tmp160~1187.offset;
    havoc ~__cil_tmp161~1187;
    havoc ~__cil_tmp162~1187;
    havoc ~__cil_tmp163~1187.base, ~__cil_tmp163~1187.offset;
    havoc ~__cil_tmp164~1187.base, ~__cil_tmp164~1187.offset;
    havoc ~__cil_tmp165~1187.base, ~__cil_tmp165~1187.offset;
    havoc ~__cil_tmp166~1187.base, ~__cil_tmp166~1187.offset;
    havoc ~__cil_tmp167~1187;
    havoc ~__cil_tmp168~1187;
    havoc ~__cil_tmp169~1187;
    havoc ~__cil_tmp170~1187;
    havoc ~__cil_tmp171~1187.base, ~__cil_tmp171~1187.offset;
    havoc ~__cil_tmp172~1187;
    havoc ~__cil_tmp173~1187.base, ~__cil_tmp173~1187.offset;
    havoc ~__cil_tmp174~1187;
    havoc ~__cil_tmp175~1187;
    havoc ~__cil_tmp176~1187;
    havoc ~__cil_tmp177~1187.base, ~__cil_tmp177~1187.offset;
    havoc ~__cil_tmp178~1187;
    havoc ~__cil_tmp179~1187;
    havoc ~__cil_tmp180~1187;
    havoc ~__cil_tmp181~1187.base, ~__cil_tmp181~1187.offset;
    havoc ~__cil_tmp182~1187;
    havoc ~__cil_tmp183~1187;
    havoc ~__cil_tmp184~1187;
    havoc ~__cil_tmp185~1187;
    havoc ~__cil_tmp186~1187.base, ~__cil_tmp186~1187.offset;
    havoc ~__cil_tmp187~1187.base, ~__cil_tmp187~1187.offset;
    havoc ~__cil_tmp188~1187.base, ~__cil_tmp188~1187.offset;
    havoc ~__cil_tmp189~1187.base, ~__cil_tmp189~1187.offset;
    havoc ~__cil_tmp190~1187.base, ~__cil_tmp190~1187.offset;
    havoc ~__cil_tmp191~1187.base, ~__cil_tmp191~1187.offset;
    havoc ~__cil_tmp192~1187;
    havoc ~__cil_tmp193~1187;
    havoc ~__cil_tmp194~1187;
    havoc ~__cil_tmp195~1187.base, ~__cil_tmp195~1187.offset;
    havoc ~__cil_tmp196~1187.base, ~__cil_tmp196~1187.offset;
    havoc ~__cil_tmp197~1187.base, ~__cil_tmp197~1187.offset;
    havoc ~__cil_tmp198~1187.base, ~__cil_tmp198~1187.offset;
    havoc ~__cil_tmp199~1187.base, ~__cil_tmp199~1187.offset;
    havoc ~__cil_tmp200~1187.base, ~__cil_tmp200~1187.offset;
    havoc ~__cil_tmp201~1187;
    havoc ~__cil_tmp202~1187.base, ~__cil_tmp202~1187.offset;
    havoc ~__cil_tmp203~1187;
    havoc ~__cil_tmp204~1187;
    havoc ~__cil_tmp205~1187;
    havoc ~__cil_tmp206~1187.base, ~__cil_tmp206~1187.offset;
    havoc ~__cil_tmp207~1187.base, ~__cil_tmp207~1187.offset;
    havoc ~__cil_tmp208~1187.base, ~__cil_tmp208~1187.offset;
    havoc ~__cil_tmp209~1187.base, ~__cil_tmp209~1187.offset;
    havoc ~__cil_tmp210~1187;
    havoc ~__cil_tmp211~1187;
    havoc ~__cil_tmp212~1187.base, ~__cil_tmp212~1187.offset;
    havoc ~__cil_tmp213~1187.base, ~__cil_tmp213~1187.offset;
    havoc ~__cil_tmp214~1187.base, ~__cil_tmp214~1187.offset;
    havoc ~__cil_tmp215~1187.base, ~__cil_tmp215~1187.offset;
    havoc ~__cil_tmp216~1187;
    havoc ~__cil_tmp217~1187;
    havoc ~__cil_tmp218~1187.base, ~__cil_tmp218~1187.offset;
    havoc ~__cil_tmp219~1187.base, ~__cil_tmp219~1187.offset;
    havoc ~__cil_tmp220~1187;
    havoc ~__cil_tmp221~1187.base, ~__cil_tmp221~1187.offset;
    havoc ~__cil_tmp222~1187.base, ~__cil_tmp222~1187.offset;
    havoc ~__cil_tmp223~1187.base, ~__cil_tmp223~1187.offset;
    havoc ~__cil_tmp224~1187;
    havoc ~__cil_tmp225~1187.base, ~__cil_tmp225~1187.offset;
    havoc ~__cil_tmp226~1187.base, ~__cil_tmp226~1187.offset;
    havoc ~__cil_tmp227~1187.base, ~__cil_tmp227~1187.offset;
    havoc ~__cil_tmp228~1187.base, ~__cil_tmp228~1187.offset;
    havoc ~__cil_tmp229~1187;
    havoc ~__cil_tmp230~1187;
    havoc ~__cil_tmp231~1187;
    havoc ~__cil_tmp232~1187.base, ~__cil_tmp232~1187.offset;
    havoc ~__cil_tmp233~1187;
    havoc ~__cil_tmp234~1187;
    havoc ~__cil_tmp235~1187.base, ~__cil_tmp235~1187.offset;
    havoc ~__cil_tmp236~1187;
    havoc ~__cil_tmp237~1187.base, ~__cil_tmp237~1187.offset;
    havoc ~__cil_tmp238~1187;
    havoc ~__cil_tmp239~1187;
    havoc ~__cil_tmp240~1187;
    havoc ~__cil_tmp241~1187.base, ~__cil_tmp241~1187.offset;
    havoc ~__cil_tmp242~1187.base, ~__cil_tmp242~1187.offset;
    havoc ~__cil_tmp243~1187.base, ~__cil_tmp243~1187.offset;
    havoc ~__cil_tmp244~1187.base, ~__cil_tmp244~1187.offset;
    havoc ~__cil_tmp245~1187;
    havoc ~__cil_tmp246~1187.base, ~__cil_tmp246~1187.offset;
    havoc ~__cil_tmp247~1187;
    havoc ~__cil_tmp248~1187;
    havoc ~__cil_tmp249~1187;
    havoc ~__cil_tmp250~1187;
    havoc ~__cil_tmp251~1187.base, ~__cil_tmp251~1187.offset;
    ~reply~1187.base, ~reply~1187.offset := 0, 0;
    ~size~1187 := 0;
    ~reply_size~1187 := 0;
    ~user_msg~1187.base, ~user_msg~1187.offset := ~arg.base, ~arg.offset;
    ~user_reply~1187.base, ~user_reply~1187.offset := 0, 0;
    ~__cil_tmp41~1187 := ~pHba.base + ~pHba.offset;
    ~__cil_tmp42~1187 := ~__cil_tmp41~1187 + 288;
    call #t~mem988 := read~int(0, (if ~__cil_tmp42~1187 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp42~1187 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp42~1187 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 4);
    ~__cil_tmp43~1187 := #t~mem988;
    havoc #t~mem988;
    ~__cil_tmp44~1187 := ~__cil_tmp43~1187 % 4294967296;
    ~__lengthofsg_list~1187 := ~__cil_tmp44~1187;
    ~__cil_tmp45~1187 := 8 * ~__lengthofsg_list~1187;
    call #t~malloc989.base, #t~malloc989.offset := #Ultimate.alloc((if ~__cil_tmp45~1187 % 18446744073709551616 % 4294967296 <= 2147483647 then ~__cil_tmp45~1187 % 18446744073709551616 % 4294967296 else ~__cil_tmp45~1187 % 18446744073709551616 % 4294967296 - 4294967296));
    ~tmp~1187.base, ~tmp~1187.offset := #t~malloc989.base, #t~malloc989.offset;
    ~__cil_tmp46~1187.base, ~__cil_tmp46~1187.offset := ~#sg_list~1187.base, ~#sg_list~1187.offset;
    call write~$Pointer$(~tmp~1187.base, ~tmp~1187.offset, ~__cil_tmp46~1187.base, ~__cil_tmp46~1187.offset, 8);
    ~sg_offset~1187 := 0;
    ~sg_count~1187 := 0;
    ~sg_index~1187 := 0;
    ~i~1187 := 0;
    ~rcode~1187 := 0;
    ~p~1187.base, ~p~1187.offset := 0, 0;
    ~flags~1187 := 0;
    ~__cil_tmp47~1187.base, ~__cil_tmp47~1187.offset := ~#msg~1187.base, ~#msg~1187.offset;
    call #t~memset991.base, #t~memset991.offset := #Ultimate.C_memset(~__cil_tmp47~1187.base, ~__cil_tmp47~1187.offset, 0, 512);
    havoc #t~memset991.base, #t~memset991.offset;
    call might_fault();
    call ULTIMATE.dealloc(#t~malloc989.base, #t~malloc989.offset);
    havoc #t~malloc989.base, #t~malloc989.offset;
    assume !false;
    assume !false;
    assume true;
    ~size~1187 := ~__val_gu~1187;
    assume !(~__ret_gu~1187 != 0);
    ~size~1187 := ~shiftRight(~size~1187, 16);
    ~__cil_tmp48~1187 := ~size~1187 % 4294967296;
    ~user_reply~1187.base, ~user_reply~1187.offset := ~user_msg~1187.base, ~user_msg~1187.offset + (if ~__cil_tmp48~1187 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp48~1187 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp48~1187 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616) * 4;
    assume !(~size~1187 % 4294967296 > 128);
    ~size~1187 := ~size~1187 * 4;
    ~__cil_tmp49~1187.base, ~__cil_tmp49~1187.offset := ~#msg~1187.base, ~#msg~1187.offset;
    ~__cil_tmp50~1187.base, ~__cil_tmp50~1187.offset := ~user_msg~1187.base, ~user_msg~1187.offset;
    ~__cil_tmp51~1187 := ~size~1187 % 4294967296;
    call #t~ret992 := copy_from_user(~__cil_tmp49~1187.base, ~__cil_tmp49~1187.offset, ~__cil_tmp50~1187.base, ~__cil_tmp50~1187.offset, ~__cil_tmp51~1187);
    ~tmp___0~1187 := #t~ret992;
    havoc #t~ret992;
    assume !(~tmp___0~1187 % 18446744073709551616 != 0);
    call might_fault();
    assume !false;
    assume !false;
    assume true;
    ~reply_size~1187 := ~__val_gu___0~1187;
    ~reply_size~1187 := ~shiftRight(~reply_size~1187, 16);
    assume ~reply_size~1187 % 4294967296 > 17;
    ~reply_size~1187 := 17;
    ~reply_size~1187 := ~reply_size~1187 * 4;
    call #t~ret993.base, #t~ret993.offset := kzalloc(68, 208);
    return;
}

procedure adpt_i2o_passthru(#in~pHba.base : int, #in~pHba.offset : int, #in~arg.base : int, #in~arg.offset : int) returns (#res : int);
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~ldv_spin, #valid, #length, ~adpt_post_wait_queue.base, ~adpt_post_wait_queue.offset, ~adpt_post_wait_id;

implementation ldv_check_alloc_flags(#in~flags : int) returns (){
    var ~flags : int;

  loc16:
    ~flags := #in~flags;
    assume ~ldv_spin != 0;
    assume ~flags % 4294967296 != 32;
    call ldv_blast_assert();
    return;
}

procedure ldv_check_alloc_flags(#in~flags : int) returns ();
modifies ;

implementation ldv_blast_assert() returns (){
  loc17:
    assume !false;
    goto loc18;
  loc18:
    assert false;
}

procedure ldv_blast_assert() returns ();
modifies ;

implementation compat_adpt_ioctl(#in~file.base : int, #in~file.offset : int, #in~cmd : int, #in~arg : int) returns (#res : int){
    var #t~mem1110.base : int, #t~mem1110.offset : int;
    var #t~mem1111.base : int, #t~mem1111.offset : int;
    var #t~ret1112 : int;
    var ~file.base : int, ~file.offset : int;
    var ~cmd : int;
    var ~arg : int;
    var ~inode~1376.base : int, ~inode~1376.offset : int;
    var ~ret~1376 : int;
    var ~tmp~1376 : int;
    var ~__cil_tmp7~1376 : int;
    var ~__cil_tmp8~1376 : int;
    var ~__cil_tmp9~1376 : int;
    var ~__cil_tmp10~1376.base : int, ~__cil_tmp10~1376.offset : int;
    var ~__cil_tmp11~1376 : int;
    var ~__cil_tmp12~1376 : int;

  loc19:
    ~file.base, ~file.offset := #in~file.base, #in~file.offset;
    ~cmd := #in~cmd;
    ~arg := #in~arg;
    havoc ~inode~1376.base, ~inode~1376.offset;
    havoc ~ret~1376;
    havoc ~tmp~1376;
    havoc ~__cil_tmp7~1376;
    havoc ~__cil_tmp8~1376;
    havoc ~__cil_tmp9~1376;
    havoc ~__cil_tmp10~1376.base, ~__cil_tmp10~1376.offset;
    havoc ~__cil_tmp11~1376;
    havoc ~__cil_tmp12~1376;
    ~__cil_tmp7~1376 := 24;
    ~__cil_tmp8~1376 := ~file.base + ~file.offset;
    ~__cil_tmp9~1376 := ~__cil_tmp8~1376 + ~__cil_tmp7~1376;
    call #t~mem1110.base, #t~mem1110.offset := read~$Pointer$(0, (if ~__cil_tmp9~1376 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp9~1376 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp9~1376 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~__cil_tmp10~1376.base, ~__cil_tmp10~1376.offset := #t~mem1110.base, #t~mem1110.offset;
    havoc #t~mem1110.base, #t~mem1110.offset;
    ~__cil_tmp11~1376 := ~__cil_tmp10~1376.base + ~__cil_tmp10~1376.offset;
    ~__cil_tmp12~1376 := ~__cil_tmp11~1376 + 48;
    call #t~mem1111.base, #t~mem1111.offset := read~$Pointer$(0, (if ~__cil_tmp12~1376 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp12~1376 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp12~1376 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~inode~1376.base, ~inode~1376.offset := #t~mem1111.base, #t~mem1111.offset;
    havoc #t~mem1111.base, #t~mem1111.offset;
    call mutex_lock_nested(~#adpt_mutex.base, ~#adpt_mutex.offset, 0);
    assume (if ~cmd % 4294967296 % 4294967296 <= 2147483647 then ~cmd % 4294967296 % 4294967296 else ~cmd % 4294967296 % 4294967296 - 4294967296) == -2142157757;
    call #t~ret1112 := adpt_ioctl(~inode~1376.base, ~inode~1376.offset, ~file.base, ~file.offset, ~cmd, ~arg);
    return;
}

procedure compat_adpt_ioctl(#in~file.base : int, #in~file.offset : int, #in~cmd : int, #in~arg : int) returns (#res : int);
modifies ~ldv_spin, #valid, #length, #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, ~adpt_post_wait_queue.base, ~adpt_post_wait_queue.offset, ~adpt_post_wait_id, ~hba_chain.base, ~hba_chain.offset, ~hba_count, ~adpt_sysfs_class.base, ~adpt_sysfs_class.offset, ~sys_tbl_len, ~sys_tbl.base, ~sys_tbl.offset, ~sys_tbl_ind;

implementation adpt_isr(#in~irq : int, #in~dev_id.base : int, #in~dev_id.offset : int) returns (#res : ~irqreturn_t){
    var #t~nondet1113.base : int, #t~nondet1113.offset : int;
    var #t~ret1114 : int;
    var #t~mem1115.base : int, #t~mem1115.offset : int;
    var #t~mem1116.base : int, #t~mem1116.offset : int;
    var #t~ret1117 : int;
    var #t~mem1118.base : int, #t~mem1118.offset : int;
    var #t~ret1119 : int;
    var #t~nondet1120.base : int, #t~nondet1120.offset : int;
    var #t~ret1121 : int;
    var #t~mem1122 : int;
    var #t~mem1123 : int;
    var #t~mem1124 : int;
    var #t~mem1125 : int;
    var #t~mem1126.base : int, #t~mem1126.offset : int;
    var #t~nondet1127.base : int, #t~nondet1127.offset : int;
    var #t~ret1128 : int;
    var #t~ret1129.base : int, #t~ret1129.offset : int;
    var #t~nondet1130.base : int, #t~nondet1130.offset : int;
    var #t~ret1131 : int;
    var #t~ret1132.base : int, #t~ret1132.offset : int;
    var #t~ret1133 : int;
    var #t~ret1134 : int;
    var #t~nondet1135.base : int, #t~nondet1135.offset : int;
    var #t~ret1136 : int;
    var #t~mem1137.base : int, #t~mem1137.offset : int;
    var #t~mem1138.base : int, #t~mem1138.offset : int;
    var #t~ret1139 : int;
    var #t~ret1140 : ~s32;
    var #t~ret1141 : int;
    var #t~ret1142 : int;
    var #t~ret1143.base : int, #t~ret1143.offset : int;
    var #t~ret1144 : int;
    var #t~ret1145 : int;
    var #t~ret1146.base : int, #t~ret1146.offset : int;
    var #t~nondet1147.base : int, #t~nondet1147.offset : int;
    var #t~ret1148 : int;
    var #t~ret1149 : int;
    var #t~ret1150.base : int, #t~ret1150.offset : int;
    var #t~mem1151 : int;
    var #t~ret1152 : ~s32;
    var #t~mem1153.base : int, #t~mem1153.offset : int;
    var #t~mem1154.base : int, #t~mem1154.offset : int;
    var #t~ret1155 : int;
    var #t~mem1156.base : int, #t~mem1156.offset : int;
    var #t~mem1157.base : int, #t~mem1157.offset : int;
    var #t~mem1158.base : int, #t~mem1158.offset : int;
    var ~irq : int;
    var ~dev_id.base : int, ~dev_id.offset : int;
    var ~cmd~1394.base : int, ~cmd~1394.offset : int;
    var ~pHba~1394.base : int, ~pHba~1394.offset : int;
    var ~m~1394 : ~u32;
    var ~reply~1394.base : int, ~reply~1394.offset : int;
    var ~status~1394 : ~u32;
    var ~context~1394 : ~u32;
    var ~flags~1394 : ~ulong;
    var ~handled~1394 : int;
    var ~old_m~1394 : ~u32;
    var ~tmp~1394 : int;
    var ~msg~1394.base : int, ~msg~1394.offset : int;
    var ~old_context~1394 : ~u32;
    var ~tmp___0~1394 : int;
    var ~p~1394.base : int, ~p~1394.offset : int;
    var ~tmp___1~1394 : int;
    var ~tmp___2~1394.base : int, ~tmp___2~1394.offset : int;
    var ~tmp___3~1394 : int;
    var ~tmp___4~1394 : int;
    var ~tmp___5~1394 : int;
    var ~__cil_tmp22~1394.base : int, ~__cil_tmp22~1394.offset : int;
    var ~__cil_tmp23~1394 : int;
    var ~__cil_tmp24~1394 : int;
    var ~__cil_tmp25~1394.base : int, ~__cil_tmp25~1394.offset : int;
    var ~__cil_tmp26~1394 : int;
    var ~__cil_tmp27~1394 : int;
    var ~__cil_tmp28~1394 : int;
    var ~__cil_tmp29~1394.base : int, ~__cil_tmp29~1394.offset : int;
    var ~__cil_tmp30~1394 : int;
    var ~__cil_tmp31~1394 : int;
    var ~__cil_tmp32~1394 : int;
    var ~__cil_tmp33~1394.base : int, ~__cil_tmp33~1394.offset : int;
    var ~__cil_tmp34~1394.base : int, ~__cil_tmp34~1394.offset : int;
    var ~__cil_tmp35~1394 : int;
    var ~__cil_tmp36~1394 : int;
    var ~__cil_tmp37~1394.base : int, ~__cil_tmp37~1394.offset : int;
    var ~__cil_tmp38~1394.base : int, ~__cil_tmp38~1394.offset : int;
    var ~__cil_tmp39~1394 : ~dma_addr_t;
    var ~__cil_tmp40~1394 : int;
    var ~__cil_tmp41~1394 : int;
    var ~__cil_tmp42~1394 : ~dma_addr_t;
    var ~__cil_tmp43~1394 : int;
    var ~__cil_tmp44~1394 : int;
    var ~__cil_tmp45~1394 : ~u32;
    var ~__cil_tmp46~1394 : ~u32;
    var ~__cil_tmp47~1394 : ~dma_addr_t;
    var ~__cil_tmp48~1394 : int;
    var ~__cil_tmp49~1394 : int;
    var ~__cil_tmp50~1394 : ~dma_addr_t;
    var ~__cil_tmp51~1394 : ~dma_addr_t;
    var ~__cil_tmp52~1394 : ~dma_addr_t;
    var ~__cil_tmp53~1394 : int;
    var ~__cil_tmp54~1394 : int;
    var ~__cil_tmp55~1394 : ~dma_addr_t;
    var ~__cil_tmp56~1394 : ~dma_addr_t;
    var ~__cil_tmp57~1394 : ~dma_addr_t;
    var ~__cil_tmp58~1394 : int;
    var ~__cil_tmp59~1394 : int;
    var ~__cil_tmp60~1394 : int;
    var ~__cil_tmp61~1394.base : int, ~__cil_tmp61~1394.offset : int;
    var ~__cil_tmp62~1394.base : int, ~__cil_tmp62~1394.offset : int;
    var ~__cil_tmp63~1394 : ~phys_addr_t;
    var ~__cil_tmp64~1394 : ~phys_addr_t;
    var ~__cil_tmp65~1394.base : int, ~__cil_tmp65~1394.offset : int;
    var ~__cil_tmp66~1394 : int;
    var ~__cil_tmp67~1394.base : int, ~__cil_tmp67~1394.offset : int;
    var ~__cil_tmp68~1394.base : int, ~__cil_tmp68~1394.offset : int;
    var ~__cil_tmp69~1394 : int;
    var ~__cil_tmp70~1394 : int;
    var ~__cil_tmp71~1394.base : int, ~__cil_tmp71~1394.offset : int;
    var ~__cil_tmp72~1394.base : int, ~__cil_tmp72~1394.offset : int;
    var ~__cil_tmp73~1394 : int;
    var ~__cil_tmp74~1394 : int;
    var ~__cil_tmp75~1394.base : int, ~__cil_tmp75~1394.offset : int;
    var ~__cil_tmp76~1394.base : int, ~__cil_tmp76~1394.offset : int;
    var ~__cil_tmp77~1394 : int;
    var ~__cil_tmp78~1394 : int;
    var ~__cil_tmp79~1394 : int;
    var ~__cil_tmp80~1394.base : int, ~__cil_tmp80~1394.offset : int;
    var ~__cil_tmp81~1394.base : int, ~__cil_tmp81~1394.offset : int;
    var ~__cil_tmp82~1394.base : int, ~__cil_tmp82~1394.offset : int;
    var ~__cil_tmp83~1394.base : int, ~__cil_tmp83~1394.offset : int;
    var ~__cil_tmp84~1394.base : int, ~__cil_tmp84~1394.offset : int;
    var ~__cil_tmp85~1394.base : int, ~__cil_tmp85~1394.offset : int;
    var ~__cil_tmp86~1394.base : int, ~__cil_tmp86~1394.offset : int;
    var ~__cil_tmp87~1394 : int;
    var ~__cil_tmp88~1394.base : int, ~__cil_tmp88~1394.offset : int;
    var ~__cil_tmp89~1394.base : int, ~__cil_tmp89~1394.offset : int;
    var ~__cil_tmp90~1394.base : int, ~__cil_tmp90~1394.offset : int;
    var ~__cil_tmp91~1394 : int;
    var ~__cil_tmp92~1394 : int;
    var ~__cil_tmp93~1394.base : int, ~__cil_tmp93~1394.offset : int;
    var ~__cil_tmp94~1394 : int;
    var ~__cil_tmp95~1394.base : int, ~__cil_tmp95~1394.offset : int;
    var ~__cil_tmp96~1394.base : int, ~__cil_tmp96~1394.offset : int;
    var ~__cil_tmp97~1394 : ~u32;
    var ~__cil_tmp98~1394 : int;
    var ~__cil_tmp99~1394.base : int, ~__cil_tmp99~1394.offset : int;
    var ~__cil_tmp100~1394.base : int, ~__cil_tmp100~1394.offset : int;
    var ~__cil_tmp101~1394.base : int, ~__cil_tmp101~1394.offset : int;
    var ~__cil_tmp102~1394 : int;
    var ~__cil_tmp103~1394 : int;
    var ~__cil_tmp104~1394 : int;
    var ~__cil_tmp105~1394 : int;
    var ~__cil_tmp106~1394.base : int, ~__cil_tmp106~1394.offset : int;
    var ~__cil_tmp107~1394.base : int, ~__cil_tmp107~1394.offset : int;
    var ~__cil_tmp108~1394 : int;
    var ~__cil_tmp109~1394.base : int, ~__cil_tmp109~1394.offset : int;
    var ~__cil_tmp110~1394.base : int, ~__cil_tmp110~1394.offset : int;
    var ~__cil_tmp111~1394.base : int, ~__cil_tmp111~1394.offset : int;
    var ~__cil_tmp112~1394 : int;
    var ~__cil_tmp113~1394 : int;
    var ~__cil_tmp114~1394 : int;
    var ~__cil_tmp115~1394 : int;
    var ~__cil_tmp116~1394 : int;
    var ~__cil_tmp117~1394 : int;
    var ~__cil_tmp118~1394 : int;
    var ~__cil_tmp119~1394.base : int, ~__cil_tmp119~1394.offset : int;
    var ~__cil_tmp120~1394.base : int, ~__cil_tmp120~1394.offset : int;
    var ~__cil_tmp121~1394 : int;
    var ~__cil_tmp122~1394 : int;
    var ~__cil_tmp123~1394.base : int, ~__cil_tmp123~1394.offset : int;
    var ~__cil_tmp124~1394.base : int, ~__cil_tmp124~1394.offset : int;
    var ~__cil_tmp125~1394 : int;
    var ~__cil_tmp126~1394.base : int, ~__cil_tmp126~1394.offset : int;
    var ~__cil_tmp127~1394 : int;
    var ~__cil_tmp128~1394 : int;
    var ~__cil_tmp129~1394 : int;
    var ~__cil_tmp130~1394.base : int, ~__cil_tmp130~1394.offset : int;
    var ~__cil_tmp131~1394 : int;
    var ~__cil_tmp132~1394 : int;
    var ~__cil_tmp133~1394 : int;
    var ~__cil_tmp134~1394.base : int, ~__cil_tmp134~1394.offset : int;
    var ~__cil_tmp135~1394 : int;
    var ~__cil_tmp136~1394 : int;
    var ~__cil_tmp137~1394.base : int, ~__cil_tmp137~1394.offset : int;
    var ~__cil_tmp138~1394 : int;

  loc20:
    ~irq := #in~irq;
    ~dev_id.base, ~dev_id.offset := #in~dev_id.base, #in~dev_id.offset;
    havoc ~cmd~1394.base, ~cmd~1394.offset;
    havoc ~pHba~1394.base, ~pHba~1394.offset;
    havoc ~m~1394;
    havoc ~reply~1394.base, ~reply~1394.offset;
    havoc ~status~1394;
    havoc ~context~1394;
    havoc ~flags~1394;
    havoc ~handled~1394;
    havoc ~old_m~1394;
    havoc ~tmp~1394;
    havoc ~msg~1394.base, ~msg~1394.offset;
    havoc ~old_context~1394;
    havoc ~tmp___0~1394;
    havoc ~p~1394.base, ~p~1394.offset;
    havoc ~tmp___1~1394;
    havoc ~tmp___2~1394.base, ~tmp___2~1394.offset;
    havoc ~tmp___3~1394;
    havoc ~tmp___4~1394;
    havoc ~tmp___5~1394;
    havoc ~__cil_tmp22~1394.base, ~__cil_tmp22~1394.offset;
    havoc ~__cil_tmp23~1394;
    havoc ~__cil_tmp24~1394;
    havoc ~__cil_tmp25~1394.base, ~__cil_tmp25~1394.offset;
    havoc ~__cil_tmp26~1394;
    havoc ~__cil_tmp27~1394;
    havoc ~__cil_tmp28~1394;
    havoc ~__cil_tmp29~1394.base, ~__cil_tmp29~1394.offset;
    havoc ~__cil_tmp30~1394;
    havoc ~__cil_tmp31~1394;
    havoc ~__cil_tmp32~1394;
    havoc ~__cil_tmp33~1394.base, ~__cil_tmp33~1394.offset;
    havoc ~__cil_tmp34~1394.base, ~__cil_tmp34~1394.offset;
    havoc ~__cil_tmp35~1394;
    havoc ~__cil_tmp36~1394;
    havoc ~__cil_tmp37~1394.base, ~__cil_tmp37~1394.offset;
    havoc ~__cil_tmp38~1394.base, ~__cil_tmp38~1394.offset;
    havoc ~__cil_tmp39~1394;
    havoc ~__cil_tmp40~1394;
    havoc ~__cil_tmp41~1394;
    havoc ~__cil_tmp42~1394;
    havoc ~__cil_tmp43~1394;
    havoc ~__cil_tmp44~1394;
    havoc ~__cil_tmp45~1394;
    havoc ~__cil_tmp46~1394;
    havoc ~__cil_tmp47~1394;
    havoc ~__cil_tmp48~1394;
    havoc ~__cil_tmp49~1394;
    havoc ~__cil_tmp50~1394;
    havoc ~__cil_tmp51~1394;
    havoc ~__cil_tmp52~1394;
    havoc ~__cil_tmp53~1394;
    havoc ~__cil_tmp54~1394;
    havoc ~__cil_tmp55~1394;
    havoc ~__cil_tmp56~1394;
    havoc ~__cil_tmp57~1394;
    havoc ~__cil_tmp58~1394;
    havoc ~__cil_tmp59~1394;
    havoc ~__cil_tmp60~1394;
    havoc ~__cil_tmp61~1394.base, ~__cil_tmp61~1394.offset;
    havoc ~__cil_tmp62~1394.base, ~__cil_tmp62~1394.offset;
    havoc ~__cil_tmp63~1394;
    havoc ~__cil_tmp64~1394;
    havoc ~__cil_tmp65~1394.base, ~__cil_tmp65~1394.offset;
    havoc ~__cil_tmp66~1394;
    havoc ~__cil_tmp67~1394.base, ~__cil_tmp67~1394.offset;
    havoc ~__cil_tmp68~1394.base, ~__cil_tmp68~1394.offset;
    havoc ~__cil_tmp69~1394;
    havoc ~__cil_tmp70~1394;
    havoc ~__cil_tmp71~1394.base, ~__cil_tmp71~1394.offset;
    havoc ~__cil_tmp72~1394.base, ~__cil_tmp72~1394.offset;
    havoc ~__cil_tmp73~1394;
    havoc ~__cil_tmp74~1394;
    havoc ~__cil_tmp75~1394.base, ~__cil_tmp75~1394.offset;
    havoc ~__cil_tmp76~1394.base, ~__cil_tmp76~1394.offset;
    havoc ~__cil_tmp77~1394;
    havoc ~__cil_tmp78~1394;
    havoc ~__cil_tmp79~1394;
    havoc ~__cil_tmp80~1394.base, ~__cil_tmp80~1394.offset;
    havoc ~__cil_tmp81~1394.base, ~__cil_tmp81~1394.offset;
    havoc ~__cil_tmp82~1394.base, ~__cil_tmp82~1394.offset;
    havoc ~__cil_tmp83~1394.base, ~__cil_tmp83~1394.offset;
    havoc ~__cil_tmp84~1394.base, ~__cil_tmp84~1394.offset;
    havoc ~__cil_tmp85~1394.base, ~__cil_tmp85~1394.offset;
    havoc ~__cil_tmp86~1394.base, ~__cil_tmp86~1394.offset;
    havoc ~__cil_tmp87~1394;
    havoc ~__cil_tmp88~1394.base, ~__cil_tmp88~1394.offset;
    havoc ~__cil_tmp89~1394.base, ~__cil_tmp89~1394.offset;
    havoc ~__cil_tmp90~1394.base, ~__cil_tmp90~1394.offset;
    havoc ~__cil_tmp91~1394;
    havoc ~__cil_tmp92~1394;
    havoc ~__cil_tmp93~1394.base, ~__cil_tmp93~1394.offset;
    havoc ~__cil_tmp94~1394;
    havoc ~__cil_tmp95~1394.base, ~__cil_tmp95~1394.offset;
    havoc ~__cil_tmp96~1394.base, ~__cil_tmp96~1394.offset;
    havoc ~__cil_tmp97~1394;
    havoc ~__cil_tmp98~1394;
    havoc ~__cil_tmp99~1394.base, ~__cil_tmp99~1394.offset;
    havoc ~__cil_tmp100~1394.base, ~__cil_tmp100~1394.offset;
    havoc ~__cil_tmp101~1394.base, ~__cil_tmp101~1394.offset;
    havoc ~__cil_tmp102~1394;
    havoc ~__cil_tmp103~1394;
    havoc ~__cil_tmp104~1394;
    havoc ~__cil_tmp105~1394;
    havoc ~__cil_tmp106~1394.base, ~__cil_tmp106~1394.offset;
    havoc ~__cil_tmp107~1394.base, ~__cil_tmp107~1394.offset;
    havoc ~__cil_tmp108~1394;
    havoc ~__cil_tmp109~1394.base, ~__cil_tmp109~1394.offset;
    havoc ~__cil_tmp110~1394.base, ~__cil_tmp110~1394.offset;
    havoc ~__cil_tmp111~1394.base, ~__cil_tmp111~1394.offset;
    havoc ~__cil_tmp112~1394;
    havoc ~__cil_tmp113~1394;
    havoc ~__cil_tmp114~1394;
    havoc ~__cil_tmp115~1394;
    havoc ~__cil_tmp116~1394;
    havoc ~__cil_tmp117~1394;
    havoc ~__cil_tmp118~1394;
    havoc ~__cil_tmp119~1394.base, ~__cil_tmp119~1394.offset;
    havoc ~__cil_tmp120~1394.base, ~__cil_tmp120~1394.offset;
    havoc ~__cil_tmp121~1394;
    havoc ~__cil_tmp122~1394;
    havoc ~__cil_tmp123~1394.base, ~__cil_tmp123~1394.offset;
    havoc ~__cil_tmp124~1394.base, ~__cil_tmp124~1394.offset;
    havoc ~__cil_tmp125~1394;
    havoc ~__cil_tmp126~1394.base, ~__cil_tmp126~1394.offset;
    havoc ~__cil_tmp127~1394;
    havoc ~__cil_tmp128~1394;
    havoc ~__cil_tmp129~1394;
    havoc ~__cil_tmp130~1394.base, ~__cil_tmp130~1394.offset;
    havoc ~__cil_tmp131~1394;
    havoc ~__cil_tmp132~1394;
    havoc ~__cil_tmp133~1394;
    havoc ~__cil_tmp134~1394.base, ~__cil_tmp134~1394.offset;
    havoc ~__cil_tmp135~1394;
    havoc ~__cil_tmp136~1394;
    havoc ~__cil_tmp137~1394.base, ~__cil_tmp137~1394.offset;
    havoc ~__cil_tmp138~1394;
    ~pHba~1394.base, ~pHba~1394.offset := ~dev_id.base, ~dev_id.offset;
    ~status~1394 := 0;
    ~flags~1394 := 0;
    ~handled~1394 := 0;
    ~__cil_tmp22~1394.base, ~__cil_tmp22~1394.offset := 0, 0;
    ~__cil_tmp23~1394 := ~__cil_tmp22~1394.base + ~__cil_tmp22~1394.offset;
    ~__cil_tmp24~1394 := ~pHba~1394.base + ~pHba~1394.offset;
    assume !(~__cil_tmp24~1394 % 18446744073709551616 == ~__cil_tmp23~1394 % 18446744073709551616);
    ~__cil_tmp25~1394.base, ~__cil_tmp25~1394.offset := 0, 0;
    ~__cil_tmp26~1394 := ~__cil_tmp25~1394.base + ~__cil_tmp25~1394.offset;
    ~__cil_tmp27~1394 := ~pHba~1394.base + ~pHba~1394.offset;
    ~__cil_tmp28~1394 := ~__cil_tmp27~1394 + 16;
    call #t~mem1115.base, #t~mem1115.offset := read~$Pointer$(0, (if ~__cil_tmp28~1394 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp28~1394 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp28~1394 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~__cil_tmp29~1394.base, ~__cil_tmp29~1394.offset := #t~mem1115.base, #t~mem1115.offset;
    havoc #t~mem1115.base, #t~mem1115.offset;
    ~__cil_tmp30~1394 := ~__cil_tmp29~1394.base + ~__cil_tmp29~1394.offset;
    assume ~__cil_tmp30~1394 % 18446744073709551616 != ~__cil_tmp26~1394 % 18446744073709551616;
    call ldv_spin_lock();
    ~__cil_tmp121~1394 := ~pHba~1394.base + ~pHba~1394.offset;
    ~__cil_tmp122~1394 := ~__cil_tmp121~1394 + 248;
    call #t~mem1154.base, #t~mem1154.offset := read~$Pointer$(0, (if ~__cil_tmp122~1394 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp122~1394 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp122~1394 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~__cil_tmp123~1394.base, ~__cil_tmp123~1394.offset := #t~mem1154.base, #t~mem1154.offset;
    havoc #t~mem1154.base, #t~mem1154.offset;
    ~__cil_tmp124~1394.base, ~__cil_tmp124~1394.offset := ~__cil_tmp123~1394.base, ~__cil_tmp123~1394.offset;
    call #t~ret1155 := readl(~__cil_tmp124~1394.base, ~__cil_tmp124~1394.offset);
    ~tmp___5~1394 := #t~ret1155;
    havoc #t~ret1155;
    ~__cil_tmp125~1394 := ~bitwiseAnd(~tmp___5~1394, 8);
    assume !(~__cil_tmp125~1394 % 4294967296 != 0);
    ~handled~1394 := 1;
    ~__cil_tmp126~1394.base, ~__cil_tmp126~1394.offset := 0, 0;
    ~__cil_tmp127~1394 := ~__cil_tmp126~1394.base + ~__cil_tmp126~1394.offset;
    ~__cil_tmp128~1394 := ~pHba~1394.base + ~pHba~1394.offset;
    ~__cil_tmp129~1394 := ~__cil_tmp128~1394 + 16;
    call #t~mem1156.base, #t~mem1156.offset := read~$Pointer$(0, (if ~__cil_tmp129~1394 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp129~1394 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp129~1394 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~__cil_tmp130~1394.base, ~__cil_tmp130~1394.offset := #t~mem1156.base, #t~mem1156.offset;
    havoc #t~mem1156.base, #t~mem1156.offset;
    ~__cil_tmp131~1394 := ~__cil_tmp130~1394.base + ~__cil_tmp130~1394.offset;
    assume !(~__cil_tmp131~1394 % 18446744073709551616 != ~__cil_tmp127~1394 % 18446744073709551616);
    ~__cil_tmp138~1394 := (if ~handled~1394 != 0 then 1 else 0);
    #res := ~__cil_tmp138~1394;
    assume true;
    return;
}

procedure adpt_isr(#in~irq : int, #in~dev_id.base : int, #in~dev_id.offset : int) returns (#res : ~irqreturn_t);
modifies ~ldv_spin, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

procedure remove_wait_queue(#in~33.base : int, #in~33.offset : int, #in~34.base : int, #in~34.offset : int) returns ();
modifies ;

procedure __xchg_wrong_size() returns ();
modifies ;

procedure pci_release_regions(#in~83.base : int, #in~83.offset : int) returns ();
modifies ;

procedure __class_create(#in~63.base : int, #in~63.offset : int, #in~64.base : int, #in~64.offset : int, #in~65.base : int, #in~65.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure ioremap_nocache(#in~42 : int, #in~43 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure free_irq(#in~155 : int, #in~156.base : int, #in~156.offset : int) returns ();
modifies ;

procedure dma_set_mask(#in~100.base : int, #in~100.offset : int, #in~101 : int) returns (#res : int);
modifies ;

procedure __scsi_iterate_devices(#in~163.base : int, #in~163.offset : int, #in~164.base : int, #in~164.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure scsi_remove_host(#in~178.base : int, #in~178.offset : int) returns ();
modifies ;

procedure mutex_unlock(#in~41.base : int, #in~41.offset : int) returns ();
modifies ;

procedure __memcpy(#in~3.base : int, #in~3.offset : int, #in~4.base : int, #in~4.offset : int, #in~5 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure scsi_device_put(#in~162.base : int, #in~162.offset : int) returns ();
modifies ;

procedure ldv_check_return_value(#in~1820 : int) returns ();
modifies ;

procedure debug_dma_alloc_coherent(#in~88.base : int, #in~88.offset : int, #in~89 : int, #in~90 : int, #in~91.base : int, #in~91.offset : int) returns ();
modifies ;

procedure __kmalloc(#in~49 : int, #in~50 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure sprintf(#in~1.base : int, #in~1.offset : int, #in~2.base : int, #in~2.offset : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_irq(#in~21.base : int, #in~21.offset : int) returns ();
modifies ;

procedure pci_set_master(#in~80.base : int, #in~80.offset : int) returns ();
modifies ;

procedure scsi_host_alloc(#in~172.base : int, #in~172.offset : int, #in~173 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure dma_supported(#in~98.base : int, #in~98.offset : int, #in~99 : int) returns (#res : int);
modifies ;

procedure scsi_dma_map(#in~157.base : int, #in~157.offset : int) returns (#res : int);
modifies ;

procedure scsi_unregister(#in~182.base : int, #in~182.offset : int) returns ();
modifies ;

procedure pci_get_device(#in~76 : int, #in~77 : int, #in~78.base : int, #in~78.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure _raw_spin_unlock(#in~20.base : int, #in~20.offset : int) returns ();
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure iounmap(#in~45.base : int, #in~45.offset : int) returns ();
modifies ;

procedure __unregister_chrdev(#in~138 : int, #in~139 : int, #in~140 : int, #in~141.base : int, #in~141.offset : int) returns ();
modifies ;

procedure might_fault() returns ();
modifies ;

procedure printk(#in~0.base : int, #in~0.offset : int) returns (#res : int);
modifies ;

procedure scsi_add_host_with_dma(#in~174.base : int, #in~174.offset : int, #in~175.base : int, #in~175.offset : int, #in~176.base : int, #in~176.offset : int) returns (#res : int);
modifies ;

procedure mutex_lock_nested(#in~39.base : int, #in~39.offset : int, #in~40 : int) returns ();
modifies ;

procedure add_wait_queue(#in~31.base : int, #in~31.offset : int, #in~32.base : int, #in~32.offset : int) returns ();
modifies ;

procedure warn_slowpath_fmt(#in~9.base : int, #in~9.offset : int, #in~10 : int, #in~11.base : int, #in~11.offset : int) returns ();
modifies ;

procedure debug_dma_free_coherent(#in~92.base : int, #in~92.offset : int, #in~93 : int, #in~94.base : int, #in~94.offset : int, #in~95 : int) returns ();
modifies ;

procedure schedule() returns ();
modifies ;

procedure dma_get_required_mask(#in~129.base : int, #in~129.offset : int) returns (#res : ~u64);
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure _copy_from_user(#in~55.base : int, #in~55.offset : int, #in~56.base : int, #in~56.offset : int, #in~57 : int) returns (#res : int);
modifies ;

procedure scsi_dma_unmap(#in~158.base : int, #in~158.offset : int) returns ();
modifies ;

procedure __raw_spin_lock_init(#in~15.base : int, #in~15.offset : int, #in~16.base : int, #in~16.offset : int, #in~17.base : int, #in~17.offset : int) returns ();
modifies ;

procedure scsi_adjust_queue_depth(#in~165.base : int, #in~165.offset : int, #in~166 : int, #in~167 : int) returns ();
modifies ;

procedure __register_chrdev(#in~133 : int, #in~134 : int, #in~135 : int, #in~136.base : int, #in~136.offset : int, #in~137.base : int, #in~137.offset : int) returns (#res : int);
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure ldv_initialize() returns ();
modifies ;

procedure __VERIFIER_nondet_pointer() returns (#res.base : int, #res.offset : int);
modifies ;

procedure kfree(#in~48.base : int, #in~48.offset : int) returns ();
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];

procedure class_destroy(#in~66.base : int, #in~66.offset : int) returns ();
modifies ;

procedure __VERIFIER_error() returns ();
modifies ;

procedure noop_llseek(#in~143.base : int, #in~143.offset : int, #in~144 : int, #in~145 : int) returns (#res : ~loff_t);
modifies ;

procedure sg_next(#in~84.base : int, #in~84.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure pci_request_regions(#in~81.base : int, #in~81.offset : int, #in~82.base : int, #in~82.offset : int) returns (#res : int);
modifies ;

procedure pci_dev_put(#in~75.base : int, #in~75.offset : int) returns ();
modifies ;

procedure scsi_cmd_get_serial(#in~179.base : int, #in~179.offset : int, #in~180.base : int, #in~180.offset : int) returns ();
modifies ;

procedure scsi_scan_host(#in~177.base : int, #in~177.offset : int) returns ();
modifies ;

procedure pci_enable_device(#in~79.base : int, #in~79.offset : int) returns (#res : int);
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset;
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];

procedure __bad_percpu_size() returns ();
modifies ;

procedure _copy_to_user(#in~52.base : int, #in~52.offset : int, #in~53.base : int, #in~53.offset : int, #in~54 : int) returns (#res : int);
modifies ;

procedure _raw_spin_unlock_irqrestore(#in~22.base : int, #in~22.offset : int, #in~23 : int) returns ();
modifies ;

procedure __wake_up(#in~35.base : int, #in~35.offset : int, #in~36 : int, #in~37 : int, #in~38.base : int, #in~38.offset : int) returns ();
modifies ;

procedure memset(#in~6.base : int, #in~6.offset : int, #in~7 : int, #in~8 : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure default_wake_function(#in~24.base : int, #in~24.offset : int, #in~25 : int, #in~26 : int, #in~27.base : int, #in~27.offset : int) returns (#res : int);
modifies ;

procedure scsi_device_set_state(#in~168.base : int, #in~168.offset : int, #in~169 : int) returns (#res : int);
modifies ;

procedure warn_slowpath_null(#in~12.base : int, #in~12.offset : int, #in~13 : int) returns ();
modifies ;

procedure pci_dev_get(#in~74.base : int, #in~74.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure _raw_spin_lock_irq(#in~19.base : int, #in~19.offset : int) returns ();
modifies ;

procedure device_destroy(#in~72.base : int, #in~72.offset : int, #in~73 : int) returns ();
modifies ;

procedure __init_waitqueue_head(#in~28.base : int, #in~28.offset : int, #in~29.base : int, #in~29.offset : int, #in~30.base : int, #in~30.offset : int) returns ();
modifies ;

procedure schedule_timeout(#in~146 : int) returns (#res : int);
modifies ;

procedure _raw_spin_lock(#in~18.base : int, #in~18.offset : int) returns ();
modifies ;

procedure request_threaded_irq(#in~148 : int, #in~149.base : int, #in~149.offset : int, #in~150.base : int, #in~150.offset : int, #in~151 : int, #in~152.base : int, #in~152.offset : int, #in~153.base : int, #in~153.offset : int) returns (#res : int);
modifies ;

procedure device_create(#in~67.base : int, #in~67.offset : int, #in~68.base : int, #in~68.offset : int, #in~69 : int, #in~70.base : int, #in~70.offset : int, #in~71.base : int, #in~71.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure schedule_timeout_uninterruptible(#in~147 : int) returns (#res : int);
modifies ;

procedure ldv_check_final_state() returns ();
modifies ;


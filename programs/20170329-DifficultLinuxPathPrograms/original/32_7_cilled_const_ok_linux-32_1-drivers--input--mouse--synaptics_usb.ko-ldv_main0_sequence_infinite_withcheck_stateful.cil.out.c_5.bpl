type STRUCT~task_struct;
type STRUCT~tvec_base;
type STRUCT~dev_pm_qos_request;
type STRUCT~pm_qos_raints;
type STRUCT~sock;
type STRUCT~vm_area_struct;
type STRUCT~sysfs_dirent;
type STRUCT~module_param_attrs;
type STRUCT~module_sect_attrs;
type STRUCT~module_notes_attrs;
type STRUCT~ftrace_event_call;
type STRUCT~dma_map_ops;
type STRUCT~iommu_ops;
type STRUCT~subsys_private;
type STRUCT~driver_private;
type STRUCT~device_private;
type STRUCT~dma_coherent_mem;
type STRUCT~device_node;
type STRUCT~nameidata;
type STRUCT~vfsmount;
type STRUCT~radix_tree_node;
type STRUCT~pid_namespace;
type STRUCT~page;
type STRUCT~writeback_control;
type STRUCT~kiocb;
type STRUCT~iovec;
type STRUCT~backing_dev_info;
type STRUCT~hd_struct;
type STRUCT~gendisk;
type STRUCT~request_queue;
type STRUCT~pipe_inode_info;
type STRUCT~cdev;
type STRUCT~posix_acl;
type STRUCT~files_struct;
type STRUCT~nlm_lockowner;
type STRUCT~nfs4_lock_state;
type STRUCT~export_operations;
type STRUCT~xattr_handler;
type STRUCT~mtd_info;
type STRUCT~poll_table_struct;
type STRUCT~kstatfs;
type STRUCT~seq_file;
type STRUCT~keyring_list;
type STRUCT~key_type;
type STRUCT~key_user;
type STRUCT~user_namespace;
type STRUCT~ep_device;
type STRUCT~mon_bus;
type STRUCT~usb_tt;
type STRUCT~wusb_dev;
type STRUCT~scatterlist;
type STRUCT~input_mt_slot;
type ~__s8 = int;
type ~__u8 = int;
type ~__s16 = int;
type ~__u16 = int;
type ~__s32 = int;
type ~__u32 = int;
type ~__u64 = int;
type ~u8 = int;
type ~s16 = int;
type ~u16 = int;
type ~s32 = int;
type ~u32 = int;
type ~s64 = int;
type ~u64 = int;
type ~__kernel_long_t = int;
type ~__kernel_ulong_t = int;
type ~__kernel_pid_t = int;
type ~__kernel_uid32_t = int;
type ~__kernel_gid32_t = int;
type ~__kernel_loff_t = int;
type ~umode_t = int;
type ~bool = int;
type ~sector_t = int;
type ~blkcnt_t = int;
type ~gfp_t = int;
type ~fmode_t = int;
type ~kernel_ulong_t = int;
type ~qsize_t = int;
type ~__kernel_size_t = ~__kernel_ulong_t;
type ~__kernel_ssize_t = ~__kernel_long_t;
type ~__kernel_time_t = ~__kernel_long_t;
type ~__kernel_dev_t = ~__u32;
type ~dev_t = ~__kernel_dev_t;
type ~pid_t = ~__kernel_pid_t;
type ~uid_t = ~__kernel_uid32_t;
type ~gid_t = ~__kernel_gid32_t;
type ~loff_t = ~__kernel_loff_t;
type ~size_t = ~__kernel_size_t;
type ~ssize_t = ~__kernel_ssize_t;
type ~time_t = ~__kernel_time_t;
type ~int32_t = ~__s32;
type ~uint32_t = ~__u32;
type ~dma_addr_t = ~u64;
type ~__le16 = ~__u16;
type ~__be16 = ~__u16;
type ~__le32 = ~__u32;
type ~__ticket_t = ~u16;
type ~__ticketpair_t = ~u32;
type ~Elf64_Addr = ~__u64;
type ~Elf64_Half = ~__u16;
type ~Elf64_Word = ~__u32;
type ~Elf64_Xword = ~__u64;
type ~qid_t = ~__kernel_uid32_t;
type ~key_serial_t = ~int32_t;
type ~key_perm_t = ~uint32_t;
const #funAddr~synusb_irq.base : int;
const #funAddr~synusb_irq.offset : int;
const #funAddr~synusb_open.base : int;
const #funAddr~synusb_open.offset : int;
const #funAddr~synusb_close.base : int;
const #funAddr~synusb_close.offset : int;
const #funAddr~synusb_probe.base : int;
const #funAddr~synusb_probe.offset : int;
const #funAddr~synusb_disconnect.base : int;
const #funAddr~synusb_disconnect.offset : int;
const #funAddr~synusb_suspend.base : int;
const #funAddr~synusb_suspend.offset : int;
const #funAddr~synusb_resume.base : int;
const #funAddr~synusb_resume.offset : int;
const #funAddr~synusb_reset_resume.base : int;
const #funAddr~synusb_reset_resume.offset : int;
const #funAddr~synusb_pre_reset.base : int;
const #funAddr~synusb_pre_reset.offset : int;
const #funAddr~synusb_post_reset.base : int;
const #funAddr~synusb_post_reset.offset : int;
const ~rpm_status~RPM_ACTIVE : int;
const ~rpm_status~RPM_RESUMING : int;
const ~rpm_status~RPM_SUSPENDED : int;
const ~rpm_status~RPM_SUSPENDING : int;
const ~rpm_request~RPM_REQ_NONE : int;
const ~rpm_request~RPM_REQ_IDLE : int;
const ~rpm_request~RPM_REQ_SUSPEND : int;
const ~rpm_request~RPM_REQ_AUTOSUSPEND : int;
const ~rpm_request~RPM_REQ_RESUME : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NONE : int;
const ~kobj_ns_type~KOBJ_NS_TYPE_NET : int;
const ~kobj_ns_type~KOBJ_NS_TYPES : int;
const ~module_state~MODULE_STATE_LIVE : int;
const ~module_state~MODULE_STATE_COMING : int;
const ~module_state~MODULE_STATE_GOING : int;
const ~usb_device_speed~USB_SPEED_UNKNOWN : int;
const ~usb_device_speed~USB_SPEED_LOW : int;
const ~usb_device_speed~USB_SPEED_FULL : int;
const ~usb_device_speed~USB_SPEED_HIGH : int;
const ~usb_device_speed~USB_SPEED_WIRELESS : int;
const ~usb_device_speed~USB_SPEED_SUPER : int;
const ~usb_device_state~USB_STATE_NOTATTACHED : int;
const ~usb_device_state~USB_STATE_ATTACHED : int;
const ~usb_device_state~USB_STATE_POWERED : int;
const ~usb_device_state~USB_STATE_RECONNECTING : int;
const ~usb_device_state~USB_STATE_UNAUTHENTICATED : int;
const ~usb_device_state~USB_STATE_DEFAULT : int;
const ~usb_device_state~USB_STATE_ADDRESS : int;
const ~usb_device_state~USB_STATE_CONFIGURED : int;
const ~usb_device_state~USB_STATE_SUSPENDED : int;
const ~pid_type~PIDTYPE_PID : int;
const ~pid_type~PIDTYPE_PGID : int;
const ~pid_type~PIDTYPE_SID : int;
const ~pid_type~PIDTYPE_MAX : int;
const ~migrate_mode~MIGRATE_ASYNC : int;
const ~migrate_mode~MIGRATE_SYNC_LIGHT : int;
const ~migrate_mode~MIGRATE_SYNC : int;
const ~usb_interface_condition~USB_INTERFACE_UNBOUND : int;
const ~usb_interface_condition~USB_INTERFACE_BINDING : int;
const ~usb_interface_condition~USB_INTERFACE_BOUND : int;
const ~usb_interface_condition~USB_INTERFACE_UNBINDING : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN : int;
const ~usb_device_removable~USB_DEVICE_REMOVABLE : int;
const ~usb_device_removable~USB_DEVICE_FIXED : int;
axiom #funAddr~synusb_irq.base == -1 && #funAddr~synusb_irq.offset == 0;
axiom #funAddr~synusb_open.base == -1 && #funAddr~synusb_open.offset == 1;
axiom #funAddr~synusb_close.base == -1 && #funAddr~synusb_close.offset == 2;
axiom #funAddr~synusb_probe.base == -1 && #funAddr~synusb_probe.offset == 3;
axiom #funAddr~synusb_disconnect.base == -1 && #funAddr~synusb_disconnect.offset == 4;
axiom #funAddr~synusb_suspend.base == -1 && #funAddr~synusb_suspend.offset == 5;
axiom #funAddr~synusb_resume.base == -1 && #funAddr~synusb_resume.offset == 6;
axiom #funAddr~synusb_reset_resume.base == -1 && #funAddr~synusb_reset_resume.offset == 7;
axiom #funAddr~synusb_pre_reset.base == -1 && #funAddr~synusb_pre_reset.offset == 8;
axiom #funAddr~synusb_post_reset.base == -1 && #funAddr~synusb_post_reset.offset == 9;
axiom ~rpm_status~RPM_ACTIVE == 0;
axiom ~rpm_status~RPM_RESUMING == 1;
axiom ~rpm_status~RPM_SUSPENDED == 2;
axiom ~rpm_status~RPM_SUSPENDING == 3;
axiom ~rpm_request~RPM_REQ_NONE == 0;
axiom ~rpm_request~RPM_REQ_IDLE == 1;
axiom ~rpm_request~RPM_REQ_SUSPEND == 2;
axiom ~rpm_request~RPM_REQ_AUTOSUSPEND == 3;
axiom ~rpm_request~RPM_REQ_RESUME == 4;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NONE == 0;
axiom ~kobj_ns_type~KOBJ_NS_TYPE_NET == 1;
axiom ~kobj_ns_type~KOBJ_NS_TYPES == 2;
axiom ~module_state~MODULE_STATE_LIVE == 0;
axiom ~module_state~MODULE_STATE_COMING == 1;
axiom ~module_state~MODULE_STATE_GOING == 2;
axiom ~usb_device_speed~USB_SPEED_UNKNOWN == 0;
axiom ~usb_device_speed~USB_SPEED_LOW == 1;
axiom ~usb_device_speed~USB_SPEED_FULL == 2;
axiom ~usb_device_speed~USB_SPEED_HIGH == 3;
axiom ~usb_device_speed~USB_SPEED_WIRELESS == 4;
axiom ~usb_device_speed~USB_SPEED_SUPER == 5;
axiom ~usb_device_state~USB_STATE_NOTATTACHED == 0;
axiom ~usb_device_state~USB_STATE_ATTACHED == 1;
axiom ~usb_device_state~USB_STATE_POWERED == 2;
axiom ~usb_device_state~USB_STATE_RECONNECTING == 3;
axiom ~usb_device_state~USB_STATE_UNAUTHENTICATED == 4;
axiom ~usb_device_state~USB_STATE_DEFAULT == 5;
axiom ~usb_device_state~USB_STATE_ADDRESS == 6;
axiom ~usb_device_state~USB_STATE_CONFIGURED == 7;
axiom ~usb_device_state~USB_STATE_SUSPENDED == 8;
axiom ~pid_type~PIDTYPE_PID == 0;
axiom ~pid_type~PIDTYPE_PGID == 1;
axiom ~pid_type~PIDTYPE_SID == 2;
axiom ~pid_type~PIDTYPE_MAX == 3;
axiom ~migrate_mode~MIGRATE_ASYNC == 0;
axiom ~migrate_mode~MIGRATE_SYNC_LIGHT == 1;
axiom ~migrate_mode~MIGRATE_SYNC == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBOUND == 0;
axiom ~usb_interface_condition~USB_INTERFACE_BINDING == 1;
axiom ~usb_interface_condition~USB_INTERFACE_BOUND == 2;
axiom ~usb_interface_condition~USB_INTERFACE_UNBINDING == 3;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE_UNKNOWN == 0;
axiom ~usb_device_removable~USB_DEVICE_REMOVABLE == 1;
axiom ~usb_device_removable~USB_DEVICE_FIXED == 2;
function { :overapproximation "bitwiseAnd" } ~bitwiseAnd(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftRight" } ~shiftRight(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "shiftLeft" } ~shiftLeft(in0 : int, in1 : int) returns (out : int);
function { :overapproximation "bitwiseOr" } ~bitwiseOr(in0 : int, in1 : int) returns (out : int);
var ~jiffies : int;

var ~LDV_IN_INTERRUPT : int;

var ~res_synusb_probe_7 : int;

var ~ldv_mutex : int;

var #NULL.base : int, #NULL.offset : int;

var #valid : [int]int;

var #length : [int]int;

var #memory_$Pointer$.base : [int,int]int, #memory_$Pointer$.offset : [int,int]int;

var #memory_int : [int,int]int;

implementation mutex_unlock(#in~lock.base : int, #in~lock.offset : int) returns (){
    var ~lock.base : int, ~lock.offset : int;

  loc0:
    ~lock.base, ~lock.offset := #in~lock.base, #in~lock.offset;
    assume !(~ldv_mutex == 2);
    call ldv_blast_assert();
    return;
}

procedure mutex_unlock(#in~lock.base : int, #in~lock.offset : int) returns ();
modifies ~ldv_mutex;

implementation ULTIMATE.init() returns (){
  loc1:
    #NULL.base, #NULL.offset := 0, 0;
    #valid := #valid[0 := 0];
    ~LDV_IN_INTERRUPT := 0;
    ~res_synusb_probe_7 := 0;
    ~ldv_mutex := 1;
    assume true;
    return;
}

procedure ULTIMATE.init() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~LDV_IN_INTERRUPT, ~res_synusb_probe_7, ~ldv_mutex;
modifies ;

implementation interface_to_usbdev(#in~intf.base : int, #in~intf.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~mem19.base : int, #t~mem19.offset : int;
    var ~intf.base : int, ~intf.offset : int;
    var ~__mptr~66.base : int, ~__mptr~66.offset : int;
    var ~__cil_tmp3~66 : int;
    var ~__cil_tmp4~66 : int;
    var ~__cil_tmp5~66.base : int, ~__cil_tmp5~66.offset : int;
    var ~__cil_tmp6~66.base : int, ~__cil_tmp6~66.offset : int;
    var ~__cil_tmp7~66 : int;
    var ~__cil_tmp8~66 : int;
    var ~__cil_tmp9~66.base : int, ~__cil_tmp9~66.offset : int;
    var ~__cil_tmp10~66 : int;
    var ~__cil_tmp11~66.base : int, ~__cil_tmp11~66.offset : int;
    var ~__cil_tmp12~66.base : int, ~__cil_tmp12~66.offset : int;

  loc2:
    ~intf.base, ~intf.offset := #in~intf.base, #in~intf.offset;
    havoc ~__mptr~66.base, ~__mptr~66.offset;
    havoc ~__cil_tmp3~66;
    havoc ~__cil_tmp4~66;
    havoc ~__cil_tmp5~66.base, ~__cil_tmp5~66.offset;
    havoc ~__cil_tmp6~66.base, ~__cil_tmp6~66.offset;
    havoc ~__cil_tmp7~66;
    havoc ~__cil_tmp8~66;
    havoc ~__cil_tmp9~66.base, ~__cil_tmp9~66.offset;
    havoc ~__cil_tmp10~66;
    havoc ~__cil_tmp11~66.base, ~__cil_tmp11~66.offset;
    havoc ~__cil_tmp12~66.base, ~__cil_tmp12~66.offset;
    ~__cil_tmp3~66 := ~intf.base + ~intf.offset;
    ~__cil_tmp4~66 := ~__cil_tmp3~66 + 48;
    call #t~mem19.base, #t~mem19.offset := read~$Pointer$(0, (if ~__cil_tmp4~66 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp4~66 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp4~66 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~__cil_tmp5~66.base, ~__cil_tmp5~66.offset := #t~mem19.base, #t~mem19.offset;
    havoc #t~mem19.base, #t~mem19.offset;
    ~__mptr~66.base, ~__mptr~66.offset := ~__cil_tmp5~66.base, ~__cil_tmp5~66.offset;
    ~__cil_tmp6~66.base, ~__cil_tmp6~66.offset := 0, 0;
    ~__cil_tmp7~66 := ~__cil_tmp6~66.base + ~__cil_tmp6~66.offset;
    ~__cil_tmp8~66 := ~__cil_tmp7~66 + 136;
    ~__cil_tmp9~66.base, ~__cil_tmp9~66.offset := 0, (if ~__cil_tmp8~66 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp8~66 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp8~66 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616);
    ~__cil_tmp10~66 := ~__cil_tmp9~66.base + ~__cil_tmp9~66.offset;
    ~__cil_tmp11~66.base, ~__cil_tmp11~66.offset := ~__mptr~66.base, ~__mptr~66.offset;
    ~__cil_tmp12~66.base, ~__cil_tmp12~66.offset := ~__cil_tmp11~66.base, ~__cil_tmp11~66.offset - ~__cil_tmp10~66 % 4294967296 * 1;
    #res.base, #res.offset := ~__cil_tmp12~66.base, ~__cil_tmp12~66.offset;
    assume true;
    return;
}

procedure interface_to_usbdev(#in~intf.base : int, #in~intf.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation synusb_post_reset(#in~intf.base : int, #in~intf.offset : int) returns (#res : int){
    var #t~ret210.base : int, #t~ret210.offset : int;
    var #t~mem211.base : int, #t~mem211.offset : int;
    var #t~mem212 : int;
    var #t~mem213 : int;
    var #t~mem214.base : int, #t~mem214.offset : int;
    var #t~ret215 : int;
    var ~intf.base : int, ~intf.offset : int;
    var ~synusb~339.base : int, ~synusb~339.offset : int;
    var ~tmp___7~339.base : int, ~tmp___7~339.offset : int;
    var ~input_dev~339.base : int, ~input_dev~339.offset : int;
    var ~retval~339 : int;
    var ~tmp___8~339 : int;
    var ~__cil_tmp7~339 : int;
    var ~__cil_tmp8~339 : int;
    var ~__cil_tmp9~339 : int;
    var ~__cil_tmp10~339 : int;
    var ~__cil_tmp11~339 : int;
    var ~__cil_tmp12~339 : int;
    var ~__cil_tmp13~339 : int;
    var ~__cil_tmp14~339 : int;
    var ~__cil_tmp15~339 : int;
    var ~__cil_tmp16~339 : int;
    var ~__cil_tmp17~339 : int;
    var ~__cil_tmp18~339.base : int, ~__cil_tmp18~339.offset : int;
    var ~__cil_tmp19~339 : int;
    var ~__cil_tmp20~339 : int;
    var ~__cil_tmp21~339.base : int, ~__cil_tmp21~339.offset : int;

  loc3:
    ~intf.base, ~intf.offset := #in~intf.base, #in~intf.offset;
    havoc ~synusb~339.base, ~synusb~339.offset;
    havoc ~tmp___7~339.base, ~tmp___7~339.offset;
    havoc ~input_dev~339.base, ~input_dev~339.offset;
    havoc ~retval~339;
    havoc ~tmp___8~339;
    havoc ~__cil_tmp7~339;
    havoc ~__cil_tmp8~339;
    havoc ~__cil_tmp9~339;
    havoc ~__cil_tmp10~339;
    havoc ~__cil_tmp11~339;
    havoc ~__cil_tmp12~339;
    havoc ~__cil_tmp13~339;
    havoc ~__cil_tmp14~339;
    havoc ~__cil_tmp15~339;
    havoc ~__cil_tmp16~339;
    havoc ~__cil_tmp17~339;
    havoc ~__cil_tmp18~339.base, ~__cil_tmp18~339.offset;
    havoc ~__cil_tmp19~339;
    havoc ~__cil_tmp20~339;
    havoc ~__cil_tmp21~339.base, ~__cil_tmp21~339.offset;
    call #t~ret210.base, #t~ret210.offset := usb_get_intfdata(~intf.base, ~intf.offset);
    ~tmp___7~339.base, ~tmp___7~339.offset := #t~ret210.base, #t~ret210.offset;
    havoc #t~ret210.base, #t~ret210.offset;
    ~synusb~339.base, ~synusb~339.offset := ~tmp___7~339.base, ~tmp___7~339.offset;
    ~__cil_tmp7~339 := ~synusb~339.base + ~synusb~339.offset;
    ~__cil_tmp8~339 := ~__cil_tmp7~339 + 32;
    call #t~mem211.base, #t~mem211.offset := read~$Pointer$(0, (if ~__cil_tmp8~339 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp8~339 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp8~339 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~input_dev~339.base, ~input_dev~339.offset := #t~mem211.base, #t~mem211.offset;
    havoc #t~mem211.base, #t~mem211.offset;
    ~retval~339 := 0;
    ~__cil_tmp9~339 := ~input_dev~339.base + ~input_dev~339.offset;
    ~__cil_tmp10~339 := ~__cil_tmp9~339 + 640;
    call #t~mem212 := read~int(0, (if ~__cil_tmp10~339 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp10~339 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp10~339 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 4);
    assume !(#t~mem212 % 4294967296 != 0);
    havoc #t~mem212;
    ~__cil_tmp11~339 := ~shiftLeft(1, 5);
    ~__cil_tmp12~339 := ~__cil_tmp11~339;
    ~__cil_tmp13~339 := ~synusb~339.base + ~synusb~339.offset;
    ~__cil_tmp14~339 := ~__cil_tmp13~339 + 232;
    call #t~mem213 := read~int(0, (if ~__cil_tmp14~339 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp14~339 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp14~339 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~__cil_tmp15~339 := #t~mem213;
    havoc #t~mem213;
    assume !(~bitwiseAnd(~__cil_tmp15~339, ~__cil_tmp12~339) % 18446744073709551616 != 0);
    ~__cil_tmp19~339 := ~input_dev~339.base + ~input_dev~339.offset;
    ~__cil_tmp20~339 := ~__cil_tmp19~339 + 568;
    ~__cil_tmp21~339.base, ~__cil_tmp21~339.offset := 0, (if ~__cil_tmp20~339 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp20~339 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp20~339 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616);
    call mutex_unlock(~__cil_tmp21~339.base, ~__cil_tmp21~339.offset);
    return;
}

procedure synusb_post_reset(#in~intf.base : int, #in~intf.offset : int) returns (#res : int);
modifies ~ldv_mutex;

implementation ULTIMATE.start() returns (){
  loc4:
    call ULTIMATE.init();
    call main();
    return;
}

procedure ULTIMATE.start() returns ();
modifies #valid, #NULL.base, #NULL.offset, ~LDV_IN_INTERRUPT, ~res_synusb_probe_7, ~ldv_mutex, ~LDV_IN_INTERRUPT, ~res_synusb_probe_7;
modifies ~ldv_mutex, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int, ~LDV_IN_INTERRUPT, ~res_synusb_probe_7;

implementation main() returns (){
    var #t~nondet217 : int;
    var #t~nondet218 : int;
    var #t~ret219 : int;
    var #t~ret220 : int;
    var #t~ret221 : int;
    var #t~ret222 : int;
    var #t~ret223 : int;
    var #t~ret224 : int;
    var ~var_group1~359.base : int, ~var_group1~359.offset : int;
    var ~var_synusb_probe_7_p1~359.base : int, ~var_synusb_probe_7_p1~359.offset : int;
    var ~var_synusb_suspend_9_p1~359.event : int;
    var ~ldv_s_synusb_driver_usb_driver~359 : int;
    var ~tmp___7~359 : int;
    var ~tmp___8~359 : int;
    var ~__cil_tmp7~359 : int;
    var ~var_synusb_suspend_9_p1_event8~359 : int;

  loc5:
    havoc ~var_group1~359.base, ~var_group1~359.offset;
    havoc ~var_synusb_probe_7_p1~359.base, ~var_synusb_probe_7_p1~359.offset;
    havoc ~var_synusb_suspend_9_p1~359.event;
    havoc ~ldv_s_synusb_driver_usb_driver~359;
    havoc ~tmp___7~359;
    havoc ~tmp___8~359;
    havoc ~__cil_tmp7~359;
    havoc ~var_synusb_suspend_9_p1_event8~359;
    ~LDV_IN_INTERRUPT := 1;
    call ldv_initialize();
    ~ldv_s_synusb_driver_usb_driver~359 := 0;
    goto loc6;
  loc6:
    assume true;
    assume !false;
    assume -2147483648 <= #t~nondet217 && #t~nondet217 <= 2147483647;
    ~tmp___8~359 := #t~nondet217;
    havoc #t~nondet217;
    assume ~tmp___8~359 != 0;
    assume -2147483648 <= #t~nondet218 && #t~nondet218 <= 2147483647;
    ~tmp___7~359 := #t~nondet218;
    havoc #t~nondet218;
    goto loc7;
  loc7:
    goto loc7_0, loc7_1;
  loc7_0:
    assume ~tmp___7~359 == 0;
    assume ~ldv_s_synusb_driver_usb_driver~359 == 0;
    call #t~ret219 := synusb_probe(~var_group1~359.base, ~var_group1~359.offset, ~var_synusb_probe_7_p1~359.base, ~var_synusb_probe_7_p1~359.offset);
    assume -2147483648 <= #t~ret219 && #t~ret219 <= 2147483647;
    ~res_synusb_probe_7 := #t~ret219;
    havoc #t~ret219;
    call ldv_check_return_value(~res_synusb_probe_7);
    assume !(~res_synusb_probe_7 != 0);
    ~ldv_s_synusb_driver_usb_driver~359 := ~ldv_s_synusb_driver_usb_driver~359 + 1;
    goto loc6;
  loc7_1:
    assume !(~tmp___7~359 == 0);
    assume !(~tmp___7~359 == 1);
    assume !(~tmp___7~359 == 2);
    assume !(~tmp___7~359 == 3);
    assume !(~tmp___7~359 == 4);
    assume ~tmp___7~359 == 5;
    assume ~ldv_s_synusb_driver_usb_driver~359 == 5;
    call #t~ret224 := synusb_post_reset(~var_group1~359.base, ~var_group1~359.offset);
    return;
}

procedure main() returns ();
modifies ~LDV_IN_INTERRUPT, ~res_synusb_probe_7, ~ldv_mutex, #valid, #length, #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;

implementation usb_get_intfdata(#in~intf.base : int, #in~intf.offset : int) returns (#res.base : int, #res.offset : int){
    var #t~ret17.base : int, #t~ret17.offset : int;
    var ~intf.base : int, ~intf.offset : int;
    var ~tmp___7~58.base : int, ~tmp___7~58.offset : int;
    var ~__cil_tmp3~58 : int;
    var ~__cil_tmp4~58 : int;
    var ~__cil_tmp5~58.base : int, ~__cil_tmp5~58.offset : int;
    var ~__cil_tmp6~58.base : int, ~__cil_tmp6~58.offset : int;

  loc8:
    ~intf.base, ~intf.offset := #in~intf.base, #in~intf.offset;
    havoc ~tmp___7~58.base, ~tmp___7~58.offset;
    havoc ~__cil_tmp3~58;
    havoc ~__cil_tmp4~58;
    havoc ~__cil_tmp5~58.base, ~__cil_tmp5~58.offset;
    havoc ~__cil_tmp6~58.base, ~__cil_tmp6~58.offset;
    ~__cil_tmp3~58 := ~intf.base + ~intf.offset;
    ~__cil_tmp4~58 := ~__cil_tmp3~58 + 48;
    ~__cil_tmp5~58.base, ~__cil_tmp5~58.offset := 0, (if ~__cil_tmp4~58 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp4~58 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp4~58 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616);
    ~__cil_tmp6~58.base, ~__cil_tmp6~58.offset := ~__cil_tmp5~58.base, ~__cil_tmp5~58.offset;
    call #t~ret17.base, #t~ret17.offset := dev_get_drvdata(~__cil_tmp6~58.base, ~__cil_tmp6~58.offset);
    ~tmp___7~58.base, ~tmp___7~58.offset := #t~ret17.base, #t~ret17.offset;
    havoc #t~ret17.base, #t~ret17.offset;
    #res.base, #res.offset := ~tmp___7~58.base, ~tmp___7~58.offset;
    assume true;
    return;
}

procedure usb_get_intfdata(#in~intf.base : int, #in~intf.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

implementation synusb_probe(#in~intf.base : int, #in~intf.offset : int, #in~id.base : int, #in~id.offset : int) returns (#res : int){
    var #t~ret109.base : int, #t~ret109.offset : int;
    var #t~mem110.base : int, #t~mem110.offset : int;
    var #t~mem111 : int;
    var #t~mem113 : int;
    var #t~mem115 : int;
    var #t~mem116 : int;
    var #t~mem117 : int;
    var #t~mem118 : int;
    var #t~ret119 : int;
    var #t~nondet120.base : int, #t~nondet120.offset : int;
    var #t~ret121 : int;
    var #t~mem122.base : int, #t~mem122.offset : int;
    var #t~ret123.base : int, #t~ret123.offset : int;
    var #t~ret124.base : int, #t~ret124.offset : int;
    var #t~ret125.base : int, #t~ret125.offset : int;
    var #t~mem129 : int;
    var #t~mem131 : int;
    var #t~mem132 : int;
    var #t~ret134.base : int, #t~ret134.offset : int;
    var #t~mem136.base : int, #t~mem136.offset : int;
    var #t~mem137.base : int, #t~mem137.offset : int;
    var #t~ret138.base : int, #t~ret138.offset : int;
    var #t~mem140.base : int, #t~mem140.offset : int;
    var #t~mem141 : int;
    var #t~ret142 : int;
    var #t~mem143.base : int, #t~mem143.offset : int;
    var #t~mem144.base : int, #t~mem144.offset : int;
    var #t~mem145 : int;
    var #t~mem146.base : int, #t~mem146.offset : int;
    var #t~mem147.base : int, #t~mem147.offset : int;
    var #t~mem148 : int;
    var #t~mem150.base : int, #t~mem150.offset : int;
    var #t~mem151.base : int, #t~mem151.offset : int;
    var #t~ret152 : int;
    var #t~mem153.base : int, #t~mem153.offset : int;
    var #t~mem154.base : int, #t~mem154.offset : int;
    var #t~nondet155.base : int, #t~nondet155.offset : int;
    var #t~ret156 : int;
    var #t~mem157.base : int, #t~mem157.offset : int;
    var #t~ret158 : int;
    var #t~nondet159 : int;
    var #t~mem160 : int;
    var #t~mem161 : int;
    var #t~nondet162.base : int, #t~nondet162.offset : int;
    var #t~ret163 : int;
    var #t~mem164 : int;
    var #t~nondet165.base : int, #t~nondet165.offset : int;
    var #t~ret166 : int;
    var #t~ret167 : int;
    var #t~nondet168.base : int, #t~nondet168.offset : int;
    var #t~ret169 : int;
    var #t~mem172.base : int, #t~mem172.offset : int;
    var #t~mem174 : int;
    var #t~mem177 : int;
    var #t~mem178 : int;
    var #t~ret179 : int;
    var #t~ret180 : int;
    var #t~nondet181.base : int, #t~nondet181.offset : int;
    var #t~ret182 : int;
    var #t~mem183 : int;
    var #t~mem184.base : int, #t~mem184.offset : int;
    var #t~mem185.base : int, #t~mem185.offset : int;
    var #t~mem186.base : int, #t~mem186.offset : int;
    var #t~mem187 : int;
    var #t~mem188.base : int, #t~mem188.offset : int;
    var ~intf.base : int, ~intf.offset : int;
    var ~id.base : int, ~id.offset : int;
    var ~udev~233.base : int, ~udev~233.offset : int;
    var ~tmp___7~233.base : int, ~tmp___7~233.offset : int;
    var ~ep~233.base : int, ~ep~233.offset : int;
    var ~synusb~233.base : int, ~synusb~233.offset : int;
    var ~input_dev~233.base : int, ~input_dev~233.offset : int;
    var ~intf_num~233 : int;
    var ~altsetting~233 : int;
    var ~#_min1~233.base : int, ~#_min1~233.offset : int;
    var ~#_min2~233.base : int, ~#_min2~233.offset : int;
    var ~tmp___8~233 : int;
    var ~error~233 : int;
    var ~tmp___9~233.base : int, ~tmp___9~233.offset : int;
    var ~tmp___10~233 : int;
    var ~tmp___11~233.base : int, ~tmp___11~233.offset : int;
    var ~tmp___12~233 : int;
    var ~tmp___13~233 : int;
    var ~__cil_tmp19~233 : int;
    var ~__cil_tmp20~233 : int;
    var ~__cil_tmp21~233 : int;
    var ~__cil_tmp22~233.base : int, ~__cil_tmp22~233.offset : int;
    var ~__cil_tmp23~233 : int;
    var ~__cil_tmp24~233 : int;
    var ~__cil_tmp25~233 : ~__u8;
    var ~__cil_tmp26~233.base : int, ~__cil_tmp26~233.offset : int;
    var ~__cil_tmp27~233 : int;
    var ~__cil_tmp28~233 : int;
    var ~__cil_tmp29~233.base : int, ~__cil_tmp29~233.offset : int;
    var ~__cil_tmp30~233.base : int, ~__cil_tmp30~233.offset : int;
    var ~__cil_tmp31~233 : int;
    var ~__cil_tmp32~233.base : int, ~__cil_tmp32~233.offset : int;
    var ~__cil_tmp33~233 : int;
    var ~__cil_tmp34~233.base : int, ~__cil_tmp34~233.offset : int;
    var ~__cil_tmp35~233.base : int, ~__cil_tmp35~233.offset : int;
    var ~__cil_tmp36~233 : int;
    var ~__cil_tmp37~233 : int;
    var ~__cil_tmp38~233 : int;
    var ~__cil_tmp39~233 : int;
    var ~__cil_tmp40~233.base : int, ~__cil_tmp40~233.offset : int;
    var ~__cil_tmp41~233.base : int, ~__cil_tmp41~233.offset : int;
    var ~__cil_tmp42~233 : int;
    var ~__cil_tmp43~233 : int;
    var ~__cil_tmp44~233.base : int, ~__cil_tmp44~233.offset : int;
    var ~__cil_tmp45~233 : int;
    var ~__cil_tmp46~233 : int;
    var ~__cil_tmp47~233 : int;
    var ~__cil_tmp48~233 : int;
    var ~__cil_tmp49~233 : int;
    var ~__cil_tmp50~233 : int;
    var ~__cil_tmp51~233 : int;
    var ~__cil_tmp52~233 : int;
    var ~__cil_tmp53~233 : ~kernel_ulong_t;
    var ~__cil_tmp54~233 : int;
    var ~__cil_tmp55~233 : int;
    var ~__cil_tmp56~233 : int;
    var ~__cil_tmp57~233 : int;
    var ~__cil_tmp58~233 : int;
    var ~__cil_tmp59~233 : int;
    var ~__cil_tmp60~233 : int;
    var ~__cil_tmp61~233 : int;
    var ~__cil_tmp62~233 : int;
    var ~__cil_tmp63~233 : int;
    var ~__cil_tmp64~233 : int;
    var ~__cil_tmp65~233 : int;
    var ~__cil_tmp66~233 : int;
    var ~__cil_tmp67~233 : int;
    var ~__cil_tmp68~233 : int;
    var ~__cil_tmp69~233.base : int, ~__cil_tmp69~233.offset : int;
    var ~__cil_tmp70~233 : int;
    var ~__cil_tmp71~233 : int;
    var ~__cil_tmp72~233 : int;
    var ~__cil_tmp73~233.base : int, ~__cil_tmp73~233.offset : int;
    var ~__cil_tmp74~233 : int;
    var ~__cil_tmp75~233 : int;
    var ~__cil_tmp76~233.base : int, ~__cil_tmp76~233.offset : int;
    var ~__cil_tmp77~233 : int;
    var ~__cil_tmp78~233 : int;
    var ~__cil_tmp79~233 : int;
    var ~__cil_tmp80~233 : int;
    var ~__cil_tmp81~233.base : int, ~__cil_tmp81~233.offset : int;
    var ~__cil_tmp82~233 : int;
    var ~__cil_tmp83~233 : int;
    var ~__cil_tmp84~233 : ~__u8;
    var ~__cil_tmp85~233 : int;
    var ~__cil_tmp86~233 : int;
    var ~__cil_tmp87~233 : int;
    var ~__cil_tmp88~233.base : int, ~__cil_tmp88~233.offset : int;
    var ~__cil_tmp89~233 : int;
    var ~__cil_tmp90~233 : int;
    var ~__cil_tmp91~233 : int;
    var ~__cil_tmp92~233 : int;
    var ~__cil_tmp93~233 : int;
    var ~__cil_tmp94~233 : int;
    var ~__cil_tmp95~233.base : int, ~__cil_tmp95~233.offset : int;
    var ~__cil_tmp96~233.base : int, ~__cil_tmp96~233.offset : int;
    var ~__cil_tmp97~233.base : int, ~__cil_tmp97~233.offset : int;
    var ~__cil_tmp98~233 : int;
    var ~__cil_tmp99~233 : int;
    var ~__cil_tmp100~233 : ~__u8;
    var ~__cil_tmp101~233 : int;
    var ~__cil_tmp102~233 : int;
    var ~__cil_tmp103~233 : int;
    var ~__cil_tmp104~233.base : int, ~__cil_tmp104~233.offset : int;
    var ~__cil_tmp105~233 : int;
    var ~__cil_tmp106~233 : int;
    var ~__cil_tmp107~233 : int;
    var ~__cil_tmp108~233 : int;
    var ~__cil_tmp109~233.base : int, ~__cil_tmp109~233.offset : int;
    var ~__cil_tmp110~233 : int;
    var ~__cil_tmp111~233 : int;
    var ~__cil_tmp112~233 : int;
    var ~__cil_tmp113~233 : int;
    var ~__cil_tmp114~233 : int;
    var ~__cil_tmp115~233 : int;
    var ~__cil_tmp116~233 : int;
    var ~__cil_tmp117~233 : int;
    var ~__cil_tmp118~233 : int;
    var ~__cil_tmp119~233.base : int, ~__cil_tmp119~233.offset : int;
    var ~__cil_tmp120~233 : int;
    var ~__cil_tmp121~233 : int;
    var ~__cil_tmp122~233.base : int, ~__cil_tmp122~233.offset : int;
    var ~__cil_tmp123~233.base : int, ~__cil_tmp123~233.offset : int;
    var ~__cil_tmp124~233 : int;
    var ~__cil_tmp125~233 : int;
    var ~__cil_tmp126~233 : int;
    var ~__cil_tmp127~233 : int;
    var ~__cil_tmp128~233 : int;
    var ~__cil_tmp129~233 : int;
    var ~__cil_tmp130~233 : int;
    var ~__cil_tmp131~233 : int;
    var ~__cil_tmp132~233.base : int, ~__cil_tmp132~233.offset : int;
    var ~__cil_tmp133~233 : int;
    var ~__cil_tmp134~233 : int;
    var ~__cil_tmp135~233 : int;
    var ~__cil_tmp136~233 : int;
    var ~__cil_tmp137~233.base : int, ~__cil_tmp137~233.offset : int;
    var ~__cil_tmp138~233 : int;
    var ~__cil_tmp139~233 : int;
    var ~__cil_tmp140~233.base : int, ~__cil_tmp140~233.offset : int;
    var ~__cil_tmp141~233.base : int, ~__cil_tmp141~233.offset : int;
    var ~__cil_tmp142~233 : int;
    var ~__cil_tmp143~233 : int;
    var ~__cil_tmp144~233 : int;
    var ~__cil_tmp145~233 : int;
    var ~__cil_tmp146~233.base : int, ~__cil_tmp146~233.offset : int;
    var ~__cil_tmp147~233.base : int, ~__cil_tmp147~233.offset : int;
    var ~__cil_tmp148~233 : int;
    var ~__cil_tmp149~233 : int;
    var ~__cil_tmp150~233 : int;
    var ~__cil_tmp151~233 : int;
    var ~__cil_tmp152~233.base : int, ~__cil_tmp152~233.offset : int;
    var ~__cil_tmp153~233 : int;
    var ~__cil_tmp154~233 : int;
    var ~__cil_tmp155~233 : int;
    var ~__cil_tmp156~233 : ~__le16;
    var ~__cil_tmp157~233 : int;
    var ~__cil_tmp158~233 : int;
    var ~__cil_tmp159~233 : int;
    var ~__cil_tmp160~233 : int;
    var ~__cil_tmp161~233 : ~__le16;
    var ~__cil_tmp162~233 : int;
    var ~__cil_tmp163~233 : int;
    var ~__cil_tmp164~233 : int;
    var ~__cil_tmp165~233 : int;
    var ~__cil_tmp166~233 : int;
    var ~__cil_tmp167~233 : int;
    var ~__cil_tmp168~233 : int;
    var ~__cil_tmp169~233 : int;
    var ~__cil_tmp170~233 : int;
    var ~__cil_tmp171~233 : int;
    var ~__cil_tmp172~233.base : int, ~__cil_tmp172~233.offset : int;
    var ~__cil_tmp173~233 : int;
    var ~__cil_tmp174~233 : int;
    var ~__cil_tmp175~233 : int;
    var ~__cil_tmp176~233 : int;
    var ~__cil_tmp177~233.base : int, ~__cil_tmp177~233.offset : int;
    var ~__cil_tmp178~233 : int;
    var ~__cil_tmp179~233 : int;
    var ~__cil_tmp180~233 : int;
    var ~__cil_tmp181~233 : int;
    var ~__cil_tmp182~233.base : int, ~__cil_tmp182~233.offset : int;
    var ~__cil_tmp183~233 : int;
    var ~__cil_tmp184~233 : int;
    var ~__cil_tmp185~233 : int;
    var ~__cil_tmp186~233 : int;
    var ~__cil_tmp187~233.base : int, ~__cil_tmp187~233.offset : int;
    var ~__cil_tmp188~233 : int;
    var ~__cil_tmp189~233 : int;
    var ~__cil_tmp190~233 : int;
    var ~__cil_tmp191~233 : int;
    var ~__cil_tmp192~233 : int;
    var ~__cil_tmp193~233 : int;
    var ~__cil_tmp194~233.base : int, ~__cil_tmp194~233.offset : int;
    var ~__cil_tmp195~233.base : int, ~__cil_tmp195~233.offset : int;
    var ~__cil_tmp196~233 : int;
    var ~__cil_tmp197~233 : int;
    var ~__cil_tmp198~233.base : int, ~__cil_tmp198~233.offset : int;
    var ~__cil_tmp199~233 : int;
    var ~__cil_tmp200~233 : int;
    var ~__cil_tmp201~233 : int;
    var ~__cil_tmp202~233 : int;
    var ~__cil_tmp203~233.base : int, ~__cil_tmp203~233.offset : int;
    var ~__cil_tmp204~233 : int;
    var ~__cil_tmp205~233 : int;
    var ~__cil_tmp206~233 : int;
    var ~__cil_tmp207~233 : int;
    var ~__cil_tmp208~233 : int;
    var ~__cil_tmp209~233 : int;
    var ~__cil_tmp210~233 : int;
    var ~__cil_tmp211~233 : int;
    var ~__cil_tmp212~233 : int;
    var ~__cil_tmp213~233 : int;
    var ~__cil_tmp214~233 : int;
    var ~__cil_tmp215~233 : int;
    var ~__cil_tmp216~233.base : int, ~__cil_tmp216~233.offset : int;
    var ~__cil_tmp217~233 : int;
    var ~__cil_tmp218~233 : int;
    var ~__cil_tmp219~233 : int;
    var ~__cil_tmp220~233 : int;
    var ~__cil_tmp221~233.base : int, ~__cil_tmp221~233.offset : int;
    var ~__cil_tmp222~233.base : int, ~__cil_tmp222~233.offset : int;
    var ~__cil_tmp223~233 : int;
    var ~__cil_tmp224~233 : int;
    var ~__cil_tmp225~233 : int;
    var ~__cil_tmp226~233 : int;
    var ~__cil_tmp227~233.base : int, ~__cil_tmp227~233.offset : int;
    var ~__cil_tmp228~233.base : int, ~__cil_tmp228~233.offset : int;
    var ~__cil_tmp229~233 : int;
    var ~__cil_tmp230~233 : int;
    var ~__cil_tmp231~233 : int;
    var ~__cil_tmp232~233 : int;
    var ~__cil_tmp233~233 : int;
    var ~__cil_tmp234~233 : int;
    var ~__cil_tmp235~233 : int;
    var ~__cil_tmp236~233 : int;
    var ~__cil_tmp237~233 : int;
    var ~__cil_tmp238~233.base : int, ~__cil_tmp238~233.offset : int;
    var ~__cil_tmp239~233.base : int, ~__cil_tmp239~233.offset : int;
    var ~__cil_tmp240~233 : int;
    var ~__cil_tmp241~233 : int;
    var ~__cil_tmp242~233 : int;
    var ~__cil_tmp243~233 : int;
    var ~__cil_tmp244~233.base : int, ~__cil_tmp244~233.offset : int;
    var ~__cil_tmp245~233.base : int, ~__cil_tmp245~233.offset : int;
    var ~__cil_tmp246~233 : int;
    var ~__cil_tmp247~233 : int;
    var ~__cil_tmp248~233 : int;
    var ~__cil_tmp249~233 : int;
    var ~__cil_tmp250~233.base : int, ~__cil_tmp250~233.offset : int;
    var ~__cil_tmp251~233.base : int, ~__cil_tmp251~233.offset : int;
    var ~__cil_tmp252~233 : int;
    var ~__cil_tmp253~233 : int;
    var ~__cil_tmp254~233 : int;
    var ~__cil_tmp255~233 : int;
    var ~__cil_tmp256~233.base : int, ~__cil_tmp256~233.offset : int;
    var ~__cil_tmp257~233.base : int, ~__cil_tmp257~233.offset : int;
    var ~__cil_tmp258~233 : int;
    var ~__cil_tmp259~233 : int;
    var ~__cil_tmp260~233 : int;
    var ~__cil_tmp261~233 : int;
    var ~__cil_tmp262~233.base : int, ~__cil_tmp262~233.offset : int;
    var ~__cil_tmp263~233.base : int, ~__cil_tmp263~233.offset : int;
    var ~__cil_tmp264~233 : int;
    var ~__cil_tmp265~233 : int;
    var ~__cil_tmp266~233 : int;
    var ~__cil_tmp267~233 : int;
    var ~__cil_tmp268~233.base : int, ~__cil_tmp268~233.offset : int;
    var ~__cil_tmp269~233.base : int, ~__cil_tmp269~233.offset : int;
    var ~__cil_tmp270~233 : int;
    var ~__cil_tmp271~233 : int;
    var ~__cil_tmp272~233 : int;
    var ~__cil_tmp273~233 : int;
    var ~__cil_tmp274~233.base : int, ~__cil_tmp274~233.offset : int;
    var ~__cil_tmp275~233.base : int, ~__cil_tmp275~233.offset : int;
    var ~__cil_tmp276~233 : int;
    var ~__cil_tmp277~233 : int;
    var ~__cil_tmp278~233 : int;
    var ~__cil_tmp279~233 : int;
    var ~__cil_tmp280~233.base : int, ~__cil_tmp280~233.offset : int;
    var ~__cil_tmp281~233.base : int, ~__cil_tmp281~233.offset : int;
    var ~__cil_tmp282~233 : int;
    var ~__cil_tmp283~233 : int;
    var ~__cil_tmp284~233 : int;
    var ~__cil_tmp285~233 : int;
    var ~__cil_tmp286~233.base : int, ~__cil_tmp286~233.offset : int;
    var ~__cil_tmp287~233.base : int, ~__cil_tmp287~233.offset : int;
    var ~__cil_tmp288~233 : int;
    var ~__cil_tmp289~233 : int;
    var ~__cil_tmp290~233 : int;
    var ~__cil_tmp291~233 : int;
    var ~__cil_tmp292~233.base : int, ~__cil_tmp292~233.offset : int;
    var ~__cil_tmp293~233.base : int, ~__cil_tmp293~233.offset : int;
    var ~__cil_tmp294~233.base : int, ~__cil_tmp294~233.offset : int;
    var ~__cil_tmp295~233 : int;
    var ~__cil_tmp296~233 : int;
    var ~__cil_tmp297~233 : int;
    var ~__cil_tmp298~233 : int;
    var ~__cil_tmp299~233 : int;
    var ~__cil_tmp300~233 : int;
    var ~__cil_tmp301~233 : int;
    var ~__cil_tmp302~233.base : int, ~__cil_tmp302~233.offset : int;
    var ~__cil_tmp303~233.base : int, ~__cil_tmp303~233.offset : int;
    var ~__cil_tmp304~233 : int;
    var ~__cil_tmp305~233 : int;
    var ~__cil_tmp306~233 : int;
    var ~__cil_tmp307~233 : int;
    var ~__cil_tmp308~233 : int;
    var ~__cil_tmp309~233 : int;
    var ~__cil_tmp310~233 : int;
    var ~__cil_tmp311~233.base : int, ~__cil_tmp311~233.offset : int;
    var ~__cil_tmp312~233 : int;
    var ~__cil_tmp313~233 : int;
    var ~__cil_tmp314~233 : int;
    var ~__cil_tmp315~233.base : int, ~__cil_tmp315~233.offset : int;
    var ~__cil_tmp316~233.base : int, ~__cil_tmp316~233.offset : int;
    var ~__cil_tmp317~233 : int;
    var ~__cil_tmp318~233 : int;
    var ~__cil_tmp319~233.base : int, ~__cil_tmp319~233.offset : int;
    var ~__cil_tmp320~233 : int;
    var ~__cil_tmp321~233 : int;
    var ~__cil_tmp322~233 : ~dma_addr_t;
    var ~__cil_tmp323~233 : int;
    var ~__cil_tmp324~233 : int;
    var ~__cil_tmp325~233.base : int, ~__cil_tmp325~233.offset : int;
    var ~__cil_tmp326~233.base : int, ~__cil_tmp326~233.offset : int;
    var ~__cil_tmp327~233.base : int, ~__cil_tmp327~233.offset : int;

  loc9:
    ~intf.base, ~intf.offset := #in~intf.base, #in~intf.offset;
    ~id.base, ~id.offset := #in~id.base, #in~id.offset;
    havoc ~udev~233.base, ~udev~233.offset;
    havoc ~tmp___7~233.base, ~tmp___7~233.offset;
    havoc ~ep~233.base, ~ep~233.offset;
    havoc ~synusb~233.base, ~synusb~233.offset;
    havoc ~input_dev~233.base, ~input_dev~233.offset;
    havoc ~intf_num~233;
    havoc ~altsetting~233;
    call ~#_min1~233.base, ~#_min1~233.offset := #Ultimate.alloc(4);
    call ~#_min2~233.base, ~#_min2~233.offset := #Ultimate.alloc(4);
    havoc ~tmp___8~233;
    havoc ~error~233;
    havoc ~tmp___9~233.base, ~tmp___9~233.offset;
    havoc ~tmp___10~233;
    havoc ~tmp___11~233.base, ~tmp___11~233.offset;
    havoc ~tmp___12~233;
    havoc ~tmp___13~233;
    havoc ~__cil_tmp19~233;
    havoc ~__cil_tmp20~233;
    havoc ~__cil_tmp21~233;
    havoc ~__cil_tmp22~233.base, ~__cil_tmp22~233.offset;
    havoc ~__cil_tmp23~233;
    havoc ~__cil_tmp24~233;
    havoc ~__cil_tmp25~233;
    havoc ~__cil_tmp26~233.base, ~__cil_tmp26~233.offset;
    havoc ~__cil_tmp27~233;
    havoc ~__cil_tmp28~233;
    havoc ~__cil_tmp29~233.base, ~__cil_tmp29~233.offset;
    havoc ~__cil_tmp30~233.base, ~__cil_tmp30~233.offset;
    havoc ~__cil_tmp31~233;
    havoc ~__cil_tmp32~233.base, ~__cil_tmp32~233.offset;
    havoc ~__cil_tmp33~233;
    havoc ~__cil_tmp34~233.base, ~__cil_tmp34~233.offset;
    havoc ~__cil_tmp35~233.base, ~__cil_tmp35~233.offset;
    havoc ~__cil_tmp36~233;
    havoc ~__cil_tmp37~233;
    havoc ~__cil_tmp38~233;
    havoc ~__cil_tmp39~233;
    havoc ~__cil_tmp40~233.base, ~__cil_tmp40~233.offset;
    havoc ~__cil_tmp41~233.base, ~__cil_tmp41~233.offset;
    havoc ~__cil_tmp42~233;
    havoc ~__cil_tmp43~233;
    havoc ~__cil_tmp44~233.base, ~__cil_tmp44~233.offset;
    havoc ~__cil_tmp45~233;
    havoc ~__cil_tmp46~233;
    havoc ~__cil_tmp47~233;
    havoc ~__cil_tmp48~233;
    havoc ~__cil_tmp49~233;
    havoc ~__cil_tmp50~233;
    havoc ~__cil_tmp51~233;
    havoc ~__cil_tmp52~233;
    havoc ~__cil_tmp53~233;
    havoc ~__cil_tmp54~233;
    havoc ~__cil_tmp55~233;
    havoc ~__cil_tmp56~233;
    havoc ~__cil_tmp57~233;
    havoc ~__cil_tmp58~233;
    havoc ~__cil_tmp59~233;
    havoc ~__cil_tmp60~233;
    havoc ~__cil_tmp61~233;
    havoc ~__cil_tmp62~233;
    havoc ~__cil_tmp63~233;
    havoc ~__cil_tmp64~233;
    havoc ~__cil_tmp65~233;
    havoc ~__cil_tmp66~233;
    havoc ~__cil_tmp67~233;
    havoc ~__cil_tmp68~233;
    havoc ~__cil_tmp69~233.base, ~__cil_tmp69~233.offset;
    havoc ~__cil_tmp70~233;
    havoc ~__cil_tmp71~233;
    havoc ~__cil_tmp72~233;
    havoc ~__cil_tmp73~233.base, ~__cil_tmp73~233.offset;
    havoc ~__cil_tmp74~233;
    havoc ~__cil_tmp75~233;
    havoc ~__cil_tmp76~233.base, ~__cil_tmp76~233.offset;
    havoc ~__cil_tmp77~233;
    havoc ~__cil_tmp78~233;
    havoc ~__cil_tmp79~233;
    havoc ~__cil_tmp80~233;
    havoc ~__cil_tmp81~233.base, ~__cil_tmp81~233.offset;
    havoc ~__cil_tmp82~233;
    havoc ~__cil_tmp83~233;
    havoc ~__cil_tmp84~233;
    havoc ~__cil_tmp85~233;
    havoc ~__cil_tmp86~233;
    havoc ~__cil_tmp87~233;
    havoc ~__cil_tmp88~233.base, ~__cil_tmp88~233.offset;
    havoc ~__cil_tmp89~233;
    havoc ~__cil_tmp90~233;
    havoc ~__cil_tmp91~233;
    havoc ~__cil_tmp92~233;
    havoc ~__cil_tmp93~233;
    havoc ~__cil_tmp94~233;
    havoc ~__cil_tmp95~233.base, ~__cil_tmp95~233.offset;
    havoc ~__cil_tmp96~233.base, ~__cil_tmp96~233.offset;
    havoc ~__cil_tmp97~233.base, ~__cil_tmp97~233.offset;
    havoc ~__cil_tmp98~233;
    havoc ~__cil_tmp99~233;
    havoc ~__cil_tmp100~233;
    havoc ~__cil_tmp101~233;
    havoc ~__cil_tmp102~233;
    havoc ~__cil_tmp103~233;
    havoc ~__cil_tmp104~233.base, ~__cil_tmp104~233.offset;
    havoc ~__cil_tmp105~233;
    havoc ~__cil_tmp106~233;
    havoc ~__cil_tmp107~233;
    havoc ~__cil_tmp108~233;
    havoc ~__cil_tmp109~233.base, ~__cil_tmp109~233.offset;
    havoc ~__cil_tmp110~233;
    havoc ~__cil_tmp111~233;
    havoc ~__cil_tmp112~233;
    havoc ~__cil_tmp113~233;
    havoc ~__cil_tmp114~233;
    havoc ~__cil_tmp115~233;
    havoc ~__cil_tmp116~233;
    havoc ~__cil_tmp117~233;
    havoc ~__cil_tmp118~233;
    havoc ~__cil_tmp119~233.base, ~__cil_tmp119~233.offset;
    havoc ~__cil_tmp120~233;
    havoc ~__cil_tmp121~233;
    havoc ~__cil_tmp122~233.base, ~__cil_tmp122~233.offset;
    havoc ~__cil_tmp123~233.base, ~__cil_tmp123~233.offset;
    havoc ~__cil_tmp124~233;
    havoc ~__cil_tmp125~233;
    havoc ~__cil_tmp126~233;
    havoc ~__cil_tmp127~233;
    havoc ~__cil_tmp128~233;
    havoc ~__cil_tmp129~233;
    havoc ~__cil_tmp130~233;
    havoc ~__cil_tmp131~233;
    havoc ~__cil_tmp132~233.base, ~__cil_tmp132~233.offset;
    havoc ~__cil_tmp133~233;
    havoc ~__cil_tmp134~233;
    havoc ~__cil_tmp135~233;
    havoc ~__cil_tmp136~233;
    havoc ~__cil_tmp137~233.base, ~__cil_tmp137~233.offset;
    havoc ~__cil_tmp138~233;
    havoc ~__cil_tmp139~233;
    havoc ~__cil_tmp140~233.base, ~__cil_tmp140~233.offset;
    havoc ~__cil_tmp141~233.base, ~__cil_tmp141~233.offset;
    havoc ~__cil_tmp142~233;
    havoc ~__cil_tmp143~233;
    havoc ~__cil_tmp144~233;
    havoc ~__cil_tmp145~233;
    havoc ~__cil_tmp146~233.base, ~__cil_tmp146~233.offset;
    havoc ~__cil_tmp147~233.base, ~__cil_tmp147~233.offset;
    havoc ~__cil_tmp148~233;
    havoc ~__cil_tmp149~233;
    havoc ~__cil_tmp150~233;
    havoc ~__cil_tmp151~233;
    havoc ~__cil_tmp152~233.base, ~__cil_tmp152~233.offset;
    havoc ~__cil_tmp153~233;
    havoc ~__cil_tmp154~233;
    havoc ~__cil_tmp155~233;
    havoc ~__cil_tmp156~233;
    havoc ~__cil_tmp157~233;
    havoc ~__cil_tmp158~233;
    havoc ~__cil_tmp159~233;
    havoc ~__cil_tmp160~233;
    havoc ~__cil_tmp161~233;
    havoc ~__cil_tmp162~233;
    havoc ~__cil_tmp163~233;
    havoc ~__cil_tmp164~233;
    havoc ~__cil_tmp165~233;
    havoc ~__cil_tmp166~233;
    havoc ~__cil_tmp167~233;
    havoc ~__cil_tmp168~233;
    havoc ~__cil_tmp169~233;
    havoc ~__cil_tmp170~233;
    havoc ~__cil_tmp171~233;
    havoc ~__cil_tmp172~233.base, ~__cil_tmp172~233.offset;
    havoc ~__cil_tmp173~233;
    havoc ~__cil_tmp174~233;
    havoc ~__cil_tmp175~233;
    havoc ~__cil_tmp176~233;
    havoc ~__cil_tmp177~233.base, ~__cil_tmp177~233.offset;
    havoc ~__cil_tmp178~233;
    havoc ~__cil_tmp179~233;
    havoc ~__cil_tmp180~233;
    havoc ~__cil_tmp181~233;
    havoc ~__cil_tmp182~233.base, ~__cil_tmp182~233.offset;
    havoc ~__cil_tmp183~233;
    havoc ~__cil_tmp184~233;
    havoc ~__cil_tmp185~233;
    havoc ~__cil_tmp186~233;
    havoc ~__cil_tmp187~233.base, ~__cil_tmp187~233.offset;
    havoc ~__cil_tmp188~233;
    havoc ~__cil_tmp189~233;
    havoc ~__cil_tmp190~233;
    havoc ~__cil_tmp191~233;
    havoc ~__cil_tmp192~233;
    havoc ~__cil_tmp193~233;
    havoc ~__cil_tmp194~233.base, ~__cil_tmp194~233.offset;
    havoc ~__cil_tmp195~233.base, ~__cil_tmp195~233.offset;
    havoc ~__cil_tmp196~233;
    havoc ~__cil_tmp197~233;
    havoc ~__cil_tmp198~233.base, ~__cil_tmp198~233.offset;
    havoc ~__cil_tmp199~233;
    havoc ~__cil_tmp200~233;
    havoc ~__cil_tmp201~233;
    havoc ~__cil_tmp202~233;
    havoc ~__cil_tmp203~233.base, ~__cil_tmp203~233.offset;
    havoc ~__cil_tmp204~233;
    havoc ~__cil_tmp205~233;
    havoc ~__cil_tmp206~233;
    havoc ~__cil_tmp207~233;
    havoc ~__cil_tmp208~233;
    havoc ~__cil_tmp209~233;
    havoc ~__cil_tmp210~233;
    havoc ~__cil_tmp211~233;
    havoc ~__cil_tmp212~233;
    havoc ~__cil_tmp213~233;
    havoc ~__cil_tmp214~233;
    havoc ~__cil_tmp215~233;
    havoc ~__cil_tmp216~233.base, ~__cil_tmp216~233.offset;
    havoc ~__cil_tmp217~233;
    havoc ~__cil_tmp218~233;
    havoc ~__cil_tmp219~233;
    havoc ~__cil_tmp220~233;
    havoc ~__cil_tmp221~233.base, ~__cil_tmp221~233.offset;
    havoc ~__cil_tmp222~233.base, ~__cil_tmp222~233.offset;
    havoc ~__cil_tmp223~233;
    havoc ~__cil_tmp224~233;
    havoc ~__cil_tmp225~233;
    havoc ~__cil_tmp226~233;
    havoc ~__cil_tmp227~233.base, ~__cil_tmp227~233.offset;
    havoc ~__cil_tmp228~233.base, ~__cil_tmp228~233.offset;
    havoc ~__cil_tmp229~233;
    havoc ~__cil_tmp230~233;
    havoc ~__cil_tmp231~233;
    havoc ~__cil_tmp232~233;
    havoc ~__cil_tmp233~233;
    havoc ~__cil_tmp234~233;
    havoc ~__cil_tmp235~233;
    havoc ~__cil_tmp236~233;
    havoc ~__cil_tmp237~233;
    havoc ~__cil_tmp238~233.base, ~__cil_tmp238~233.offset;
    havoc ~__cil_tmp239~233.base, ~__cil_tmp239~233.offset;
    havoc ~__cil_tmp240~233;
    havoc ~__cil_tmp241~233;
    havoc ~__cil_tmp242~233;
    havoc ~__cil_tmp243~233;
    havoc ~__cil_tmp244~233.base, ~__cil_tmp244~233.offset;
    havoc ~__cil_tmp245~233.base, ~__cil_tmp245~233.offset;
    havoc ~__cil_tmp246~233;
    havoc ~__cil_tmp247~233;
    havoc ~__cil_tmp248~233;
    havoc ~__cil_tmp249~233;
    havoc ~__cil_tmp250~233.base, ~__cil_tmp250~233.offset;
    havoc ~__cil_tmp251~233.base, ~__cil_tmp251~233.offset;
    havoc ~__cil_tmp252~233;
    havoc ~__cil_tmp253~233;
    havoc ~__cil_tmp254~233;
    havoc ~__cil_tmp255~233;
    havoc ~__cil_tmp256~233.base, ~__cil_tmp256~233.offset;
    havoc ~__cil_tmp257~233.base, ~__cil_tmp257~233.offset;
    havoc ~__cil_tmp258~233;
    havoc ~__cil_tmp259~233;
    havoc ~__cil_tmp260~233;
    havoc ~__cil_tmp261~233;
    havoc ~__cil_tmp262~233.base, ~__cil_tmp262~233.offset;
    havoc ~__cil_tmp263~233.base, ~__cil_tmp263~233.offset;
    havoc ~__cil_tmp264~233;
    havoc ~__cil_tmp265~233;
    havoc ~__cil_tmp266~233;
    havoc ~__cil_tmp267~233;
    havoc ~__cil_tmp268~233.base, ~__cil_tmp268~233.offset;
    havoc ~__cil_tmp269~233.base, ~__cil_tmp269~233.offset;
    havoc ~__cil_tmp270~233;
    havoc ~__cil_tmp271~233;
    havoc ~__cil_tmp272~233;
    havoc ~__cil_tmp273~233;
    havoc ~__cil_tmp274~233.base, ~__cil_tmp274~233.offset;
    havoc ~__cil_tmp275~233.base, ~__cil_tmp275~233.offset;
    havoc ~__cil_tmp276~233;
    havoc ~__cil_tmp277~233;
    havoc ~__cil_tmp278~233;
    havoc ~__cil_tmp279~233;
    havoc ~__cil_tmp280~233.base, ~__cil_tmp280~233.offset;
    havoc ~__cil_tmp281~233.base, ~__cil_tmp281~233.offset;
    havoc ~__cil_tmp282~233;
    havoc ~__cil_tmp283~233;
    havoc ~__cil_tmp284~233;
    havoc ~__cil_tmp285~233;
    havoc ~__cil_tmp286~233.base, ~__cil_tmp286~233.offset;
    havoc ~__cil_tmp287~233.base, ~__cil_tmp287~233.offset;
    havoc ~__cil_tmp288~233;
    havoc ~__cil_tmp289~233;
    havoc ~__cil_tmp290~233;
    havoc ~__cil_tmp291~233;
    havoc ~__cil_tmp292~233.base, ~__cil_tmp292~233.offset;
    havoc ~__cil_tmp293~233.base, ~__cil_tmp293~233.offset;
    havoc ~__cil_tmp294~233.base, ~__cil_tmp294~233.offset;
    havoc ~__cil_tmp295~233;
    havoc ~__cil_tmp296~233;
    havoc ~__cil_tmp297~233;
    havoc ~__cil_tmp298~233;
    havoc ~__cil_tmp299~233;
    havoc ~__cil_tmp300~233;
    havoc ~__cil_tmp301~233;
    havoc ~__cil_tmp302~233.base, ~__cil_tmp302~233.offset;
    havoc ~__cil_tmp303~233.base, ~__cil_tmp303~233.offset;
    havoc ~__cil_tmp304~233;
    havoc ~__cil_tmp305~233;
    havoc ~__cil_tmp306~233;
    havoc ~__cil_tmp307~233;
    havoc ~__cil_tmp308~233;
    havoc ~__cil_tmp309~233;
    havoc ~__cil_tmp310~233;
    havoc ~__cil_tmp311~233.base, ~__cil_tmp311~233.offset;
    havoc ~__cil_tmp312~233;
    havoc ~__cil_tmp313~233;
    havoc ~__cil_tmp314~233;
    havoc ~__cil_tmp315~233.base, ~__cil_tmp315~233.offset;
    havoc ~__cil_tmp316~233.base, ~__cil_tmp316~233.offset;
    havoc ~__cil_tmp317~233;
    havoc ~__cil_tmp318~233;
    havoc ~__cil_tmp319~233.base, ~__cil_tmp319~233.offset;
    havoc ~__cil_tmp320~233;
    havoc ~__cil_tmp321~233;
    havoc ~__cil_tmp322~233;
    havoc ~__cil_tmp323~233;
    havoc ~__cil_tmp324~233;
    havoc ~__cil_tmp325~233.base, ~__cil_tmp325~233.offset;
    havoc ~__cil_tmp326~233.base, ~__cil_tmp326~233.offset;
    havoc ~__cil_tmp327~233.base, ~__cil_tmp327~233.offset;
    call #t~ret109.base, #t~ret109.offset := interface_to_usbdev(~intf.base, ~intf.offset);
    ~tmp___7~233.base, ~tmp___7~233.offset := #t~ret109.base, #t~ret109.offset;
    havoc #t~ret109.base, #t~ret109.offset;
    ~udev~233.base, ~udev~233.offset := ~tmp___7~233.base, ~tmp___7~233.offset;
    ~__cil_tmp19~233 := 2;
    ~__cil_tmp20~233 := ~intf.base + ~intf.offset;
    ~__cil_tmp21~233 := ~__cil_tmp20~233 + 8;
    call #t~mem110.base, #t~mem110.offset := read~$Pointer$(0, (if ~__cil_tmp21~233 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp21~233 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp21~233 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 8);
    ~__cil_tmp22~233.base, ~__cil_tmp22~233.offset := #t~mem110.base, #t~mem110.offset;
    havoc #t~mem110.base, #t~mem110.offset;
    ~__cil_tmp23~233 := ~__cil_tmp22~233.base + ~__cil_tmp22~233.offset;
    ~__cil_tmp24~233 := ~__cil_tmp23~233 + ~__cil_tmp19~233;
    call #t~mem111 := read~int(0, (if ~__cil_tmp24~233 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp24~233 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp24~233 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 1);
    ~__cil_tmp25~233 := #t~mem111;
    havoc #t~mem111;
    ~intf_num~233 := ~__cil_tmp25~233 % 256;
    ~__cil_tmp26~233.base, ~__cil_tmp26~233.offset := ~#_min1~233.base, ~#_min1~233.offset;
    ~__cil_tmp27~233 := ~intf.base + ~intf.offset;
    ~__cil_tmp28~233 := ~__cil_tmp27~233 + 16;
    call #t~mem113 := read~int(0, (if ~__cil_tmp28~233 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp28~233 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp28~233 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616), 4);
    call write~int(#t~mem113, ~__cil_tmp26~233.base, ~__cil_tmp26~233.offset, 4);
    havoc #t~mem113;
    ~__cil_tmp29~233.base, ~__cil_tmp29~233.offset := ~#_min2~233.base, ~#_min2~233.offset;
    call write~int(1, ~__cil_tmp29~233.base, ~__cil_tmp29~233.offset, 4);
    ~__cil_tmp30~233.base, ~__cil_tmp30~233.offset := ~#_min2~233.base, ~#_min2~233.offset;
    call #t~mem115 := read~int(~__cil_tmp30~233.base, ~__cil_tmp30~233.offset, 4);
    ~__cil_tmp31~233 := #t~mem115;
    havoc #t~mem115;
    ~__cil_tmp32~233.base, ~__cil_tmp32~233.offset := ~#_min1~233.base, ~#_min1~233.offset;
    call #t~mem116 := read~int(~__cil_tmp32~233.base, ~__cil_tmp32~233.offset, 4);
    ~__cil_tmp33~233 := #t~mem116;
    havoc #t~mem116;
    assume ~__cil_tmp33~233 % 4294967296 < ~__cil_tmp31~233 % 4294967296;
    ~__cil_tmp34~233.base, ~__cil_tmp34~233.offset := ~#_min1~233.base, ~#_min1~233.offset;
    call #t~mem117 := read~int(~__cil_tmp34~233.base, ~__cil_tmp34~233.offset, 4);
    ~tmp___8~233 := #t~mem117;
    havoc #t~mem117;
    ~altsetting~233 := ~tmp___8~233;
    ~__cil_tmp36~233 := (if ~intf_num~233 % 4294967296 % 4294967296 <= 2147483647 then ~intf_num~233 % 4294967296 % 4294967296 else ~intf_num~233 % 4294967296 % 4294967296 - 4294967296);
    ~__cil_tmp37~233 := (if ~altsetting~233 % 4294967296 % 4294967296 <= 2147483647 then ~altsetting~233 % 4294967296 % 4294967296 else ~altsetting~233 % 4294967296 % 4294967296 - 4294967296);
    call #t~ret119 := usb_set_interface(~udev~233.base, ~udev~233.offset, ~__cil_tmp36~233, ~__cil_tmp37~233);
    assume -2147483648 <= #t~ret119 && #t~ret119 <= 2147483647;
    ~error~233 := #t~ret119;
    havoc #t~ret119;
    assume ~error~233 != 0;
    ~__cil_tmp38~233 := ~udev~233.base + ~udev~233.offset;
    ~__cil_tmp39~233 := ~__cil_tmp38~233 + 136;
    ~__cil_tmp40~233.base, ~__cil_tmp40~233.offset := 0, (if ~__cil_tmp39~233 % 18446744073709551616 % 18446744073709551616 <= 9223372036854775807 then ~__cil_tmp39~233 % 18446744073709551616 % 18446744073709551616 else ~__cil_tmp39~233 % 18446744073709551616 % 18446744073709551616 - 18446744073709551616);
    ~__cil_tmp41~233.base, ~__cil_tmp41~233.offset := ~__cil_tmp40~233.base, ~__cil_tmp40~233.offset;
    call #t~nondet120.base, #t~nondet120.offset := #Ultimate.alloc(47);
    call #t~ret121 := dev_err(~__cil_tmp41~233.base, ~__cil_tmp41~233.offset, #t~nondet120.base, #t~nondet120.offset);
    assume -2147483648 <= #t~ret121 && #t~ret121 <= 2147483647;
    havoc #t~nondet120.base, #t~nondet120.offset;
    havoc #t~ret121;
    #res := ~error~233;
    call ULTIMATE.dealloc(~#_min1~233.base, ~#_min1~233.offset);
    havoc ~#_min1~233.base, ~#_min1~233.offset;
    call ULTIMATE.dealloc(~#_min2~233.base, ~#_min2~233.offset);
    havoc ~#_min2~233.base, ~#_min2~233.offset;
    assume true;
    return;
}

procedure synusb_probe(#in~intf.base : int, #in~intf.offset : int, #in~id.base : int, #in~id.offset : int) returns (#res : int);
modifies #memory_int, #memory_$Pointer$.base, #memory_$Pointer$.offset, #valid, #length;

implementation ldv_blast_assert() returns (){
  loc10:
    assume !false;
    goto loc11;
  loc11:
    assert false;
}

procedure ldv_blast_assert() returns ();
modifies ;

procedure dev_get_drvdata(#in~dev.base : int, #in~dev.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __kmalloc(#in~size : int, #in~flags : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure write~$Pointer$(#value.base : int, #value.offset : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #value.base] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #value.offset];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #memory_int[#ptr.base,#ptr.offset]];

procedure usb_submit_urb(#in~urb.base : int, #in~urb.offset : int, #in~mem_flags : int) returns (#res : int);
modifies ;

procedure input_event(#in~dev.base : int, #in~dev.offset : int, #in~type : int, #in~code : int, #in~value : int) returns ();
modifies ;

procedure input_set_abs_params(#in~dev.base : int, #in~dev.offset : int, #in~axis : int, #in~min : int, #in~max : int, #in~fuzz : int, #in~flat : int) returns ();
modifies ;

procedure strlen(#in~s.base : int, #in~s.offset : int) returns (#res : int);
modifies ;

procedure input_free_device(#in~dev.base : int, #in~dev.offset : int) returns ();
modifies ;

procedure #Ultimate.alloc(~size : int) returns (#res.base : int, #res.offset : int);
ensures old(#valid)[#res.base] == 0;
ensures #valid == old(#valid)[#res.base := 1];
ensures #res.offset == 0;
ensures #res.base != 0;
ensures #length == old(#length)[#res.base := ~size];
modifies #valid, #length;

procedure ULTIMATE.free(~addr.base : int, ~addr.offset : int) returns ();
free requires ~addr.offset == 0;
free requires ~addr.base == 0 || #valid[~addr.base] == 1;
free ensures (if ~addr.base == 0 then #valid == old(#valid) else #valid == old(#valid)[~addr.base := 0]);
modifies #valid;

procedure usb_free_coherent(#in~dev.base : int, #in~dev.offset : int, #in~size : int, #in~addr.base : int, #in~addr.offset : int, #in~dma : int) returns ();
modifies ;

procedure read~int(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value : int);
ensures #value == #memory_int[#ptr.base,#ptr.offset];

procedure usb_autopm_put_interface(#in~intf.base : int, #in~intf.offset : int) returns ();
modifies ;

procedure ldv_initialize() returns ();
modifies ;

procedure usb_alloc_coherent(#in~dev.base : int, #in~dev.offset : int, #in~size : int, #in~mem_flags : int, #in~dma.base : int, #in~dma.offset : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_set_interface(#in~dev.base : int, #in~dev.offset : int, #in~ifnum : int, #in~alternate : int) returns (#res : int);
modifies ;

procedure read~$Pointer$(#ptr.base : int, #ptr.offset : int, #sizeOfReadType : int) returns (#value.base : int, #value.offset : int);
ensures #value.base == #memory_$Pointer$.base[#ptr.base,#ptr.offset] && #value.offset == #memory_$Pointer$.offset[#ptr.base,#ptr.offset];

procedure strlcpy(#in~3.base : int, #in~3.offset : int, #in~4.base : int, #in~4.offset : int, #in~5 : int) returns (#res : int);
modifies ;

procedure usb_free_urb(#in~urb.base : int, #in~urb.offset : int) returns ();
modifies ;

procedure input_allocate_device() returns (#res.base : int, #res.offset : int);
modifies ;

procedure usb_kill_urb(#in~urb.base : int, #in~urb.offset : int) returns ();
modifies ;

procedure ULTIMATE.dealloc(~addr.base : int, ~addr.offset : int) returns ();
free ensures #valid == old(#valid)[~addr.base := 0];
modifies #valid;

procedure dev_set_drvdata(#in~dev.base : int, #in~dev.offset : int, #in~data.base : int, #in~data.offset : int) returns (#res : int);
modifies ;

procedure input_unregister_device(#in~40.base : int, #in~40.offset : int) returns ();
modifies ;

procedure kfree(#in~9.base : int, #in~9.offset : int) returns ();
modifies ;

procedure strlcat(#in~6.base : int, #in~6.offset : int, #in~7.base : int, #in~7.offset : int, #in~8 : int) returns (#res : int);
modifies ;

procedure usb_autopm_get_interface(#in~intf.base : int, #in~intf.offset : int) returns (#res : int);
modifies ;

procedure dev_err(#in~dev.base : int, #in~dev.offset : int, #in~fmt.base : int, #in~fmt.offset : int) returns (#res : int);
modifies ;

procedure write~int(#value : int, #ptr.base : int, #ptr.offset : int, #sizeOfWrittenType : int) returns ();
modifies #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
ensures #memory_$Pointer$.base == old(#memory_$Pointer$.base)[#ptr.base,#ptr.offset := #memory_$Pointer$.base[#ptr.base,#ptr.offset]] && #memory_$Pointer$.offset == old(#memory_$Pointer$.offset)[#ptr.base,#ptr.offset := #memory_$Pointer$.offset[#ptr.base,#ptr.offset]];
ensures #memory_int == old(#memory_int)[#ptr.base,#ptr.offset := #value];

procedure __VERIFIER_error() returns ();
modifies ;

procedure ldv_check_return_value(#in~res : int) returns ();
modifies ;

procedure snprintf(#in~buf.base : int, #in~buf.offset : int, #in~size : int, #in~fmt.base : int, #in~fmt.offset : int) returns (#res : int);
modifies ;

procedure usb_alloc_urb(#in~iso_packets : int, #in~mem_flags : int) returns (#res.base : int, #res.offset : int);
modifies ;

procedure __VERIFIER_nondet_int() returns (#res : int);
modifies ;

procedure input_register_device(#in~39.base : int, #in~39.offset : int) returns (#res : int);
modifies ;


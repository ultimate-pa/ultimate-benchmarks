var ~#sja1000_netdev_ops.base : int;

var ~#sja1000_bittiming_const.base : int;

var #memory_$Pointer$.base : [int][int]int;

var #NULL.offset : int;

var v_rep#funAddr~sja1000_open.base_1 : int;

var ~#set_impl.base : int;

var ~ldv_irq_line_1_3 : int;

var ~ldv_irq_data_1_2.base : int;

var ~ldv_state_variable_2 : int;

var v_rep#funAddr~sja1000_close.base_1 : int;

var ~ldv_retval_0 : int;

var ~ldv_irq_data_1_1.offset : int;

var #length : [int]int;

var ~ldv_irq_1_1 : int;

var ~#sja1000_bittiming_const.offset : int;

var ~ldv_irq_data_1_3.offset : int;

var v_rep#funAddr~sja1000_close.offset_1 : int;

var ~sja1000_netdev_ops_group1.base : int;

var ~ldv_irq_data_1_3.base : int;

var ~ldv_irq_line_1_0 : int;

var ~ldv_irq_1_2 : int;

var ~ldv_retval_1 : int;

var v_rep#funAddr~sja1000_open.offset_1 : int;

var ~LDV_SKBS.offset : int;

var #memory_$Pointer$.offset : [int][int]int;

var ~#sja1000_netdev_ops.offset : int;

var ~ldv_irq_data_1_0.base : int;

var ~ldv_retval_2 : int;

var ~#set_impl.offset : int;

var v_rep#funAddr~sja1000_start_xmit.offset_1 : int;

var ~ldv_irq_line_1_1 : int;

var ~ldv_state_variable_0 : int;

var ~ldv_irq_1_3 : int;

var ~ldv_irq_data_1_0.offset : int;

var v_rep#funAddr~can_change_mtu.offset_1 : int;

var ~LDV_SKBS.base : int;

var ~ref_cnt : int;

var ~last_index : int;

var ~ldv_irq_data_1_2.offset : int;

var ~ldv_irq_data_1_1.base : int;

var ~sja1000_netdev_ops_group1.offset : int;

var #NULL.base : int;

var ~ldv_irq_line_1_2 : int;

var ~LDV_IN_INTERRUPT : int;

var ~ldv_state_variable_1 : int;

var v_rep#funAddr~can_change_mtu.base_1 : int;

var #valid : [int]int;

var #memory_int : [int][int]int;

var v_rep#funAddr~sja1000_start_xmit.base_1 : int;

var ~ldv_irq_1_0 : int;

procedure ULTIMATE.start() returns ()
modifies ~#sja1000_netdev_ops.base, ~#sja1000_bittiming_const.base, #memory_$Pointer$.base, #NULL.offset, v_rep#funAddr~sja1000_open.base_1, ~#set_impl.base, ~ldv_irq_line_1_3, ~ldv_irq_data_1_2.base, ~ldv_state_variable_2, v_rep#funAddr~sja1000_close.base_1, ~ldv_retval_0, ~ldv_irq_data_1_1.offset, #length, ~ldv_irq_1_1, ~#sja1000_bittiming_const.offset, ~ldv_irq_data_1_3.offset, v_rep#funAddr~sja1000_close.offset_1, ~sja1000_netdev_ops_group1.base, ~ldv_irq_data_1_3.base, ~ldv_irq_line_1_0, ~ldv_irq_1_2, ~ldv_retval_1, v_rep#funAddr~sja1000_open.offset_1, ~LDV_SKBS.offset, #memory_$Pointer$.offset, ~#sja1000_netdev_ops.offset, ~ldv_irq_data_1_0.base, ~ldv_retval_2, ~#set_impl.offset, v_rep#funAddr~sja1000_start_xmit.offset_1, ~ldv_irq_line_1_1, ~ldv_state_variable_0, ~ldv_irq_1_3, ~ldv_irq_data_1_0.offset, v_rep#funAddr~can_change_mtu.offset_1, ~LDV_SKBS.base, ~ref_cnt, ~last_index, ~ldv_irq_data_1_2.offset, ~ldv_irq_data_1_1.base, ~sja1000_netdev_ops_group1.offset, #NULL.base, ~ldv_irq_line_1_2, ~LDV_IN_INTERRUPT, ~ldv_state_variable_1, v_rep#funAddr~can_change_mtu.base_1, #valid, #memory_int, v_rep#funAddr~sja1000_start_xmit.base_1, ~ldv_irq_1_0;
{
    var ldv_set_remove_#t~mem526.offset : int;
    var main_#t~ret518 : int;
    var sja1000_interrupt_~isrc~212 : int;
    var write~int_#ptr.base : int;
    var sja1000_err_#t~ret262.base : int;
    var netdev_priv_#in~dev.base : int;
    var sja1000_err_~skb~178.offset : int;
    var sja1000_err_~#descriptor___0~178.offset : int;
    var sja1000_init_#res : int;
    var ldv_irq_1_#t~switch495 : bool;
    var ldv_set_remove_#in~e.offset : int;
    var write~int_old_#memory_$Pointer$.offset : [int][int]int;
    var sja1000_err_#t~mem334 : int;
    var sja1000_err_#t~mem314.base : int;
    var sja1000_err_#t~nondet293.offset : int;
    var write~$Pointer$_#ptr.base : int;
    var write~int_#sizeOfWrittenType : int;
    var ldv_set_is_empty_~set.base : int;
    var choose_interrupt_1_#t~ret500 : int;
    var sja1000_err_#t~mem403.offset : int;
    var sja1000_err_#t~nondet345.base : int;
    var sja1000_interrupt_#t~ret426 : int;
    var sja1000_interrupt_#t~mem448.offset : int;
    var sja1000_interrupt_#t~ret447 : int;
    var sja1000_interrupt_~priv~212.offset : int;
    var sja1000_interrupt_#t~mem430 : int;
    var main_#t~nondet504 : int;
    var sja1000_err_#t~nondet341.base : int;
    var sja1000_err_#t~mem338.offset : int;
    var main_#t~ret517 : int;
    var #Ultimate.alloc_old_#valid : [int]int;
    var sja1000_interrupt_~tmp___1~212 : int;
    var sja1000_interrupt_~#descriptor~212.base : int;
    var ldv_skb_free_int_#in~skb.offset : int;
    var ldv_set_remove_~i~375 : int;
    var ldv_set_is_empty_~set.offset : int;
    var write~int_#ptr.offset : int;
    var sja1000_err_#t~nondet265.offset : int;
    var sja1000_init_#t~nondet490.base : int;
    var sja1000_interrupt_#t~mem450.base : int;
    var write~$Pointer$_old_#memory_$Pointer$.base : [int][int]int;
    var ldv_netif_rx_14_#in~ldv_func_arg1.base : int;
    var sja1000_interrupt_~dev_id.base : int;
    var sja1000_interrupt_#t~mem424.base : int;
    var sja1000_err_#t~mem411.offset : int;
    var read~int_#ptr.offset : int;
    var ldv_set_remove_#in~e.base : int;
    var sja1000_err_#t~mem312.offset : int;
    var sja1000_err_#t~mem325 : int;
    var ldv_set_init_#in~set.base : int;
    var sja1000_err_#t~mem337.base : int;
    var sja1000_err_~#cf~178.base : int;
    var sja1000_err_~#descriptor~178.offset : int;
    var choose_interrupt_1_#t~nondet497 : int;
    var sja1000_err_#res : int;
    var alloc_can_err_skb_#in~83.base : int;
    var sja1000_err_~#descriptor___2~178.offset : int;
    var sja1000_err_#t~mem370.base : int;
    var main_#t~ret516 : int;
    var sja1000_interrupt_#t~ret439 : int;
    var netdev_priv_#res.offset : int;
    var #Ultimate.alloc_#res.offset : int;
    var sja1000_interrupt_~tmp~212.offset : int;
    var sja1000_err_~state~178 : int;
    var sja1000_err_#t~mem332.base : int;
    var sja1000_interrupt_#t~mem421.base : int;
    var read~$Pointer$_#ptr.offset : int;
    var sja1000_err_~ecc~178 : int;
    var sja1000_err_~tmp___2~178 : int;
    var sja1000_err_#t~mem283.offset : int;
    var main_~ldvarg1~321 : int;
    var sja1000_interrupt_#in~dev_id.offset : int;
    var sja1000_err_~#descriptor___1~178.base : int;
    var sja1000_init_#t~nondet490.offset : int;
    var sja1000_err_#t~mem337.offset : int;
    var sja1000_exit_#t~ret493 : int;
    var sja1000_err_#t~mem390.offset : int;
    var sja1000_interrupt_#t~ret428 : int;
    var sja1000_interrupt_~tmp___4~212 : int;
    var sja1000_err_#t~mem384.base : int;
    var read~$Pointer$_#value.base : int;
    var sja1000_err_#t~mem281 : int;
    var sja1000_err_~priv~178.base : int;
    var sja1000_err_#t~nondet277.offset : int;
    var sja1000_err_#in~dev.base : int;
    var sja1000_err_#t~mem389.base : int;
    var sja1000_err_#t~nondet347.offset : int;
    var sja1000_err_~#descriptor___1~178.offset : int;
    var sja1000_err_#t~mem405.base : int;
    var main_#t~ret515 : int;
    var sja1000_err_~#cf~178.offset : int;
    var ldv_zalloc_#t~nondet15 : int;
    var sja1000_err_#t~nondet357.base : int;
    var write~$Pointer$_#value.base : int;
    var sja1000_err_#t~mem412 : int;
    var ldv_set_remove_#in~set.offset : int;
    var sja1000_err_~tmp___0~178 : int;
    var sja1000_interrupt_#t~mem416.offset : int;
    var sja1000_interrupt_#t~nondet451.base : int;
    var sja1000_interrupt_#t~ret444 : int;
    var ##fun~$Pointer$~X~int~TO~~u8_#in~#fp.offset : int;
    var sja1000_interrupt_#t~nondet427.offset : int;
    var sja1000_err_#t~ret276 : int;
    var sja1000_err_#t~mem395.base : int;
    var main_~tmp~321 : int;
    var sja1000_interrupt_~tmp___3~212 : int;
    var sja1000_interrupt_#t~mem448.base : int;
    var main_#t~ret514 : int;
    var ldv_irq_1_~line : int;
    var sja1000_interrupt_#t~mem450.offset : int;
    var sja1000_err_#t~ret385 : int;
    var sja1000_err_#t~nondet291.base : int;
    var sja1000_err_#t~mem377.offset : int;
    var sja1000_err_#t~mem391 : int;
    var main_#t~nondet511 : int;
    var sja1000_err_#t~mem395.offset : int;
    var ldv_set_remove_~set.offset : int;
    var main_~tmp___2~321 : int;
    var sja1000_err_#t~ret262.offset : int;
    var sja1000_err_#t~nondet295.base : int;
    var sja1000_interrupt_#t~nondet455.offset : int;
    var ULTIMATE.dealloc_old_#valid : [int]int;
    var sja1000_err_#t~mem413 : int;
    var read~int_#ptr.base : int;
    var sja1000_interrupt_#t~mem416.base : int;
    var sja1000_err_#t~nondet341.offset : int;
    var ldv_check_final_state_~tmp___7~396 : int;
    var sja1000_err_#t~ret408 : int;
    var netdev_priv_~dev.base : int;
    var sja1000_interrupt_~dev~212.offset : int;
    var ldv_irq_1_~data.base : int;
    var ldv_set_is_empty_#in~set.offset : int;
    var sja1000_err_#t~mem305 : int;
    var ldv_irq_1_~irq_retval~285 : int;
    var ldv_set_remove_~deleted_index~375 : int;
    var ##fun~$Pointer$~X~int~TO~~u8_#~93.offset : int;
    var ldv_skb_free_int_~skb.base : int;
    var ULTIMATE.dealloc_~addr.offset : int;
    var write~$Pointer$_#value.offset : int;
    var ##fun~$Pointer$~X~int~TO~~u8_#~93.base : int;
    var sja1000_err_#t~nondet269.base : int;
    var sja1000_err_#t~nondet359.offset : int;
    var main_#t~ret513 : int;
    var sja1000_interrupt_#t~nondet463.offset : int;
    var sja1000_err_~alc~178 : int;
    var sja1000_interrupt_~n~212 : int;
    var sja1000_err_#t~mem320.base : int;
    var sja1000_err_#t~mem316 : int;
    var sja1000_err_#t~mem331.base : int;
    var main_~tmp___1~321 : int;
    var read~int_#sizeOfReadType : int;
    var sja1000_interrupt_#t~mem461 : int;
    var sja1000_interrupt_~tmp___2~212 : int;
    var sja1000_err_#t~mem324.base : int;
    var sja1000_err_~txerr~178 : int;
    var sja1000_err_#t~mem280.offset : int;
    var ldv_zalloc_~p~27.offset : int;
    var sja1000_err_#t~mem387.offset : int;
    var ldv_set_remove_#t~mem526.base : int;
    var sja1000_err_#t~nondet355.base : int;
    var write~$Pointer$_old_#memory_$Pointer$.offset : [int][int]int;
    var sja1000_err_~tmp___3~178 : int;
    var main_#t~switch512 : bool;
    var ##fun~$Pointer$~X~int~TO~~u8_#in~#fp.base : int;
    var sja1000_err_#t~mem339 : int;
    var sja1000_interrupt_~dev~212.base : int;
    var ldv_set_remove_~e.base : int;
    var write~$Pointer$_#sizeOfWrittenType : int;
    var sja1000_err_#t~nondet343.offset : int;
    var sja1000_err_#t~nondet367.offset : int;
    var sja1000_err_#t~mem382 : int;
    var ldv_zalloc_#t~malloc16.offset : int;
    var sja1000_err_#t~mem335.base : int;
    var main_~ldvarg0~321.base : int;
    var alloc_can_err_skb_#in~84.base : int;
    var write~$Pointer$_old_#memory_int : [int][int]int;
    var ULTIMATE.dealloc_~addr.base : int;
    var sja1000_err_#t~mem329 : int;
    var sja1000_err_~tmp___4~178 : int;
    var ##fun~$Pointer$~X~int~TO~~u8_#~94 : int;
    var sja1000_err_~priv~178.offset : int;
    var ldv_zalloc_#res.offset : int;
    var sja1000_err_#t~mem303.base : int;
    var ldv_net_device_ops_2_~tmp~309.base : int;
    var sja1000_err_#t~mem393 : int;
    var sja1000_interrupt_~stats~212.offset : int;
    var sja1000_err_#t~nondet367.base : int;
    var sja1000_err_#t~mem320.offset : int;
    var sja1000_interrupt_#t~nondet463.base : int;
    var ldv_irq_1_#in~data.offset : int;
    var sja1000_interrupt_#t~ret464 : int;
    var sja1000_err_~rxerr~178 : int;
    var sja1000_err_#t~mem285 : int;
    var sja1000_err_~tmp___5~178 : int;
    var choose_interrupt_1_#t~ret502 : int;
    var sja1000_err_#t~nondet361.base : int;
    var sja1000_err_#t~mem380.base : int;
    var read~$Pointer$_#sizeOfReadType : int;
    var sja1000_err_#t~nondet301.base : int;
    var sja1000_interrupt_#t~mem446.offset : int;
    var ldv_zalloc_#res.base : int;
    var sja1000_err_~stats~178.offset : int;
    var main_~tmp___3~321 : int;
    var sja1000_err_#t~mem307 : int;
    var sja1000_err_~tmp~178.base : int;
    var ldv_netif_rx_14_#in~ldv_func_arg1.offset : int;
    var choose_interrupt_1_~tmp~306 : int;
    var ldv_netif_rx_14_#t~ret521 : int;
    var sja1000_interrupt_#t~mem433.base : int;
    var ldv_zalloc_~tmp___0~27 : int;
    var sja1000_interrupt_#t~mem433.offset : int;
    var alloc_can_err_skb_#res.base : int;
    var ldv_skb_free_int_#res : int;
    var ldv_set_remove_~e.offset : int;
    var sja1000_err_#t~mem323.offset : int;
    var sja1000_err_#t~mem319.base : int;
    var alloc_can_err_skb_#in~84.offset : int;
    var choose_interrupt_1_#t~ret501 : int;
    var sja1000_err_#t~nondet361.offset : int;
    var sja1000_err_#t~ret371 : int;
    var sja1000_err_#t~mem376.offset : int;
    var ldv_skb_free_int_~skb.offset : int;
    var read~$Pointer$_#value.offset : int;
    var ##fun~$Pointer$~X~int~TO~~u8_#res : int;
    var sja1000_err_#t~mem390.base : int;
    var printk_#res : int;
    var sja1000_err_#t~mem411.base : int;
    var sja1000_err_~skb~178.base : int;
    var sja1000_interrupt_#t~mem441.offset : int;
    var sja1000_interrupt_#t~mem441.base : int;
    var sja1000_err_#t~ret264.base : int;
    var sja1000_err_#t~mem275 : int;
    var sja1000_err_#t~ret366 : int;
    var main_#t~ret510 : int;
    var sja1000_err_#t~mem315.offset : int;
    var choose_interrupt_1_#t~ret499 : int;
    var sja1000_interrupt_~tmp___0~212 : int;
    var sja1000_err_#in~dev.offset : int;
    var sja1000_err_#t~ite396 : int;
    var sja1000_err_~#descriptor___0~178.base : int;
    var sja1000_err_#t~nondet345.offset : int;
    var sja1000_interrupt_~priv~212.base : int;
    var sja1000_err_#t~mem312.base : int;
    var sja1000_err_#t~mem323.base : int;
    var sja1000_err_#t~mem372 : int;
    var #Ultimate.alloc_old_#length : [int]int;
    var sja1000_interrupt_~stats~212.base : int;
    var sja1000_err_#t~mem327.base : int;
    var write~$Pointer$_#ptr.offset : int;
    var sja1000_err_#t~nondet347.base : int;
    var write~int_#value : int;
    var sja1000_interrupt_#t~ret462 : int;
    var sja1000_err_#t~nondet343.base : int;
    var sja1000_interrupt_#in~dev_id.base : int;
    var sja1000_err_#t~mem384.offset : int;
    var ldv_netif_rx_14_#res : int;
    var sja1000_interrupt_#in~irq : int;
    var sja1000_err_#t~nondet295.offset : int;
    var sja1000_err_#t~mem287 : int;
    var sja1000_err_#t~mem400.base : int;
    var sja1000_err_~status : int;
    var sja1000_err_#t~mem335.offset : int;
    var ldv_set_is_empty_#in~set.base : int;
    var sja1000_err_#t~mem387.base : int;
    var sja1000_interrupt_#t~mem421.offset : int;
    var sja1000_err_#t~ret388 : int;
    var sja1000_err_#t~mem309 : int;
    var #Ultimate.alloc_~size : int;
    var sja1000_err_#t~nondet267.offset : int;
    var main_~tmp___0~321.base : int;
    var sja1000_err_~dev.offset : int;
    var sja1000_interrupt_#t~nondet457.base : int;
    var sja1000_err_#t~mem405.offset : int;
    var sja1000_err_#t~mem400.offset : int;
    var sja1000_err_#t~mem263 : int;
    var sja1000_err_#t~ret354 : int;
    var sja1000_interrupt_#t~nondet453.base : int;
    var ldv_zalloc_~tmp~27.base : int;
    var ldv_irq_1_#t~nondet494 : int;
    var sja1000_interrupt_~irq : int;
    var printk_#in~1.base : int;
    var sja1000_err_#t~mem376.base : int;
    var main_#t~switch507 : bool;
    var sja1000_interrupt_#t~ret442 : int;
    var sja1000_err_#t~mem303.offset : int;
    var sja1000_err_#t~ret278 : int;
    var sja1000_interrupt_~tmp~212.base : int;
    var ldv_check_final_state_#t~ret527 : int;
    var ldv_net_device_ops_2_~tmp~309.offset : int;
    var ldv_irq_1_#in~state : int;
    var sja1000_exit_#t~nondet492.base : int;
    var sja1000_err_#t~mem331.offset : int;
    var sja1000_err_#t~mem299 : int;
    var sja1000_err_#t~mem374 : int;
    var sja1000_err_#t~mem351 : int;
    var sja1000_err_#t~nondet357.offset : int;
    var sja1000_err_#t~nondet353.offset : int;
    var ldv_irq_1_#in~data.base : int;
    var sja1000_err_~#descriptor~178.base : int;
    var sja1000_err_#t~mem280.base : int;
    var sja1000_err_#t~mem319.offset : int;
    var sja1000_interrupt_#t~ret415.offset : int;
    var printk_#in~1.offset : int;
    var sja1000_interrupt_#t~ret443 : int;
    var sja1000_interrupt_#t~nondet453.offset : int;
    var sja1000_err_#t~nondet289.base : int;
    var sja1000_err_#t~mem409 : int;
    var ldv_set_remove_#in~set.base : int;
    var sja1000_interrupt_~#descriptor~212.offset : int;
    var main_~ldvarg0~321.offset : int;
    var sja1000_err_~tmp___1~178 : int;
    var ldv_set_remove_#t~mem524.offset : int;
    var sja1000_err_#t~nondet267.base : int;
    var ldv_netif_rx_14_~ldv_func_arg1.base : int;
    var netdev_priv_~dev.offset : int;
    var main_#t~ret505.base : int;
    var ##fun~$Pointer$~X~int~TO~~u8_#in~93.offset : int;
    var sja1000_err_#t~mem398 : int;
    var sja1000_err_~stats~178.base : int;
    var sja1000_interrupt_~tmp___5~212 : int;
    var ldv_set_init_~set.offset : int;
    var sja1000_err_#t~mem283.base : int;
    var sja1000_err_#t~mem315.base : int;
    var ldv_irq_1_#t~ret496 : int;
    var sja1000_interrupt_#t~mem429 : int;
    var read~$Pointer$_#ptr.base : int;
    var sja1000_err_#t~mem304.base : int;
    var sja1000_err_#t~mem328.offset : int;
    var sja1000_err_#t~ret352 : int;
    var main_#t~switch509 : bool;
    var sja1000_err_#t~mem370.offset : int;
    var read~int_#value : int;
    var sja1000_err_#t~ret313 : int;
    var sja1000_err_#t~mem365 : int;
    var sja1000_err_#t~nondet353.base : int;
    var sja1000_err_#in~status : int;
    var sja1000_interrupt_#t~mem435 : int;
    var sja1000_interrupt_#t~mem446.base : int;
    var sja1000_err_~isrc : int;
    var sja1000_err_#t~mem324.offset : int;
    var sja1000_err_#t~ret302 : int;
    var sja1000_interrupt_#t~mem419.offset : int;
    var sja1000_interrupt_#t~mem424.offset : int;
    var sja1000_err_#t~nondet293.base : int;
    var sja1000_err_#t~mem314.offset : int;
    var sja1000_err_#t~nondet289.offset : int;
    var sja1000_err_~dev.base : int;
    var sja1000_interrupt_#t~ret422 : int;
    var sja1000_err_#t~switch318 : bool;
    var main_#t~nondet508 : int;
    var netdev_priv_#in~dev.offset : int;
    var ##fun~$Pointer$~X~int~TO~~u8_#in~94 : int;
    var ldv_netif_rx_14_~tmp~362 : int;
    var sja1000_err_#t~mem328.base : int;
    var sja1000_err_#t~ret264.offset : int;
    var sja1000_err_#t~ite401 : int;
    var ldv_net_device_ops_2_#t~ret503.base : int;
    var sja1000_interrupt_#t~ret415.base : int;
    var sja1000_err_#t~mem403.base : int;
    var sja1000_err_#t~nondet271.offset : int;
    var sja1000_interrupt_#res : int;
    var sja1000_err_#t~ret300 : int;
    var ldv_zalloc_~tmp~27.offset : int;
    var sja1000_err_#t~mem380.offset : int;
    var sja1000_interrupt_#t~ret434 : int;
    var alloc_can_err_skb_#in~83.offset : int;
    var sja1000_interrupt_#t~nondet457.offset : int;
    var sja1000_err_#t~nondet265.base : int;
    var ldv_netif_rx_14_~ldv_func_arg1.offset : int;
    var sja1000_err_#t~nondet359.base : int;
    var sja1000_err_#t~mem279.offset : int;
    var ldv_set_init_#in~set.offset : int;
    var ldv_set_init_~set.base : int;
    var ldv_irq_1_~state : int;
    var ldv_zalloc_~p~27.base : int;
    var main_#res : int;
    var ldv_irq_1_~tmp~285 : int;
    var sja1000_interrupt_~status~212 : int;
    var sja1000_err_#t~mem321 : int;
    var ldv_net_device_ops_2_#t~ret503.offset : int;
    var ldv_irq_1_#in~line : int;
    var netdev_priv_#res.base : int;
    var sja1000_err_#t~mem377.base : int;
    var sja1000_err_#t~nondet269.offset : int;
    var sja1000_interrupt_#t~mem437 : int;
    var sja1000_interrupt_~dev_id.offset : int;
    var sja1000_interrupt_#t~nondet427.base : int;
    var sja1000_err_#t~mem338.base : int;
    var sja1000_err_#t~nondet277.base : int;
    var sja1000_err_#t~nondet291.offset : int;
    var sja1000_err_~tmp~178.offset : int;
    var sja1000_err_#t~mem327.offset : int;
    var sja1000_err_#in~isrc : int;
    var sja1000_init_#t~ret491 : int;
    var ldv_set_remove_~set.base : int;
    var #Ultimate.alloc_#res.base : int;
    var sja1000_err_#t~mem389.offset : int;
    var ldv_irq_1_~data.offset : int;
    var sja1000_err_#t~nondet271.base : int;
    var alloc_can_err_skb_#res.offset : int;
    var sja1000_err_#t~mem378 : int;
    var ldv_irq_1_#res : int;
    var sja1000_interrupt_#t~nondet451.offset : int;
    var write~int_old_#memory_int : [int][int]int;
    var ##fun~$Pointer$~X~int~TO~~u8_#in~93.base : int;
    var ldv_zalloc_~size : int;
    var ldv_zalloc_#in~size : int;
    var sja1000_err_#t~mem279.base : int;
    var main_#t~nondet506 : int;
    var main_#t~ret519 : int;
    var ldv_set_is_empty_#res : int;
    var sja1000_err_~#descriptor___2~178.base : int;
    var sja1000_err_#t~mem332.offset : int;
    var sja1000_err_#t~mem304.offset : int;
    var ldv_zalloc_#t~malloc16.base : int;
    var sja1000_exit_#t~nondet492.offset : int;
    var sja1000_err_#t~nondet301.offset : int;
    var sja1000_err_#t~ret368 : int;
    var write~int_old_#memory_$Pointer$.base : [int][int]int;
    var main_~tmp___0~321.offset : int;
    var ldv_skb_free_int_#in~skb.base : int;
    var sja1000_interrupt_#t~mem419.base : int;
    var sja1000_interrupt_#t~nondet455.base : int;
    var ldv_set_remove_#t~mem524.base : int;
    var choose_interrupt_1_#t~switch498 : bool;
    var main_#t~ret505.offset : int;
    var sja1000_interrupt_#t~ret425 : int;
    var sja1000_err_#t~nondet355.offset : int;

  loc0:
    #NULL.offset, #NULL.base := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_irq_1_2 := 0;
    ~LDV_IN_INTERRUPT := 1;
    ~ldv_irq_1_3 := 0;
    ~ldv_irq_data_1_1.base, ~ldv_irq_data_1_1.offset := 0, 0;
    ~ldv_irq_1_1 := 0;
    ~ldv_irq_1_0 := 0;
    ~ldv_irq_line_1_3 := 0;
    ~ldv_irq_data_1_0.base, ~ldv_irq_data_1_0.offset := 0, 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_irq_line_1_0 := 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_irq_data_1_3.base, ~ldv_irq_data_1_3.offset := 0, 0;
    ~ref_cnt := 0;
    ~ldv_irq_line_1_1 := 0;
    ~ldv_irq_data_1_2.base, ~ldv_irq_data_1_2.offset := 0, 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_irq_line_1_2 := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_retval_2 := 0;
    ~last_index := 0;
    ~sja1000_netdev_ops_group1.base, ~sja1000_netdev_ops_group1.offset := 0, 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 48;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#sja1000_bittiming_const.offset, ~#sja1000_bittiming_const.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 115, ~#sja1000_bittiming_const.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 106, ~#sja1000_bittiming_const.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 97, ~#sja1000_bittiming_const.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 49, ~#sja1000_bittiming_const.offset + 3;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 48, ~#sja1000_bittiming_const.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 48, ~#sja1000_bittiming_const.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 48, ~#sja1000_bittiming_const.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 0, ~#sja1000_bittiming_const.offset + 7;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 0, ~#sja1000_bittiming_const.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 0, ~#sja1000_bittiming_const.offset + 9;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 0, ~#sja1000_bittiming_const.offset + 10;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 0, ~#sja1000_bittiming_const.offset + 11;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 0, ~#sja1000_bittiming_const.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 0, ~#sja1000_bittiming_const.offset + 13;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 0, ~#sja1000_bittiming_const.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#sja1000_bittiming_const.base, 0, ~#sja1000_bittiming_const.offset + 15;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#sja1000_bittiming_const.base, 1, ~#sja1000_bittiming_const.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#sja1000_bittiming_const.base, 16, ~#sja1000_bittiming_const.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#sja1000_bittiming_const.base, 1, ~#sja1000_bittiming_const.offset + 24;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#sja1000_bittiming_const.base, 8, ~#sja1000_bittiming_const.offset + 28;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#sja1000_bittiming_const.base, 4, ~#sja1000_bittiming_const.offset + 32;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#sja1000_bittiming_const.base, 1, ~#sja1000_bittiming_const.offset + 36;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#sja1000_bittiming_const.base, 64, ~#sja1000_bittiming_const.offset + 40;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#sja1000_bittiming_const.base, 1, ~#sja1000_bittiming_const.offset + 44;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 480;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#sja1000_netdev_ops.offset, ~#sja1000_netdev_ops.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 8, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~sja1000_open.base_1, ~#sja1000_netdev_ops.offset + 16, 8, v_rep#funAddr~sja1000_open.offset_1, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~sja1000_close.base_1, ~#sja1000_netdev_ops.offset + 24, 8, v_rep#funAddr~sja1000_close.offset_1, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~sja1000_start_xmit.base_1, ~#sja1000_netdev_ops.offset + 32, 8, v_rep#funAddr~sja1000_start_xmit.offset_1, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 40, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 48, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 56, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 64, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 72, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 80, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 88, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~can_change_mtu.base_1, ~#sja1000_netdev_ops.offset + 96, 8, v_rep#funAddr~can_change_mtu.offset_1, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 104, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 112, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 120, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 128, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 136, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 144, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 152, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 160, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 168, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 176, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 184, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 192, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 200, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 208, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 216, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 224, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 232, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 240, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 248, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 256, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 264, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 272, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 280, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 288, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 296, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 304, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 312, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 320, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 328, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 336, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 344, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 352, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 360, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 368, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 376, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 384, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 392, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 400, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 408, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 416, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 424, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 432, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 440, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 448, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 456, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 464, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#sja1000_netdev_ops.offset + 472, 8, 0, ~#sja1000_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 120;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#set_impl.base, ~#set_impl.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 8, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 16, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 24, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 32, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 40, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 48, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 56, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 64, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 72, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 80, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 88, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 96, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 104, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 112, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    ~LDV_SKBS.base, ~LDV_SKBS.offset := 0, 0;
    havoc main_#res;
    havoc main_#t~switch509, main_#t~nondet504, main_#t~switch507, main_#t~nondet506, main_#t~ret519, main_#t~nondet508, main_#t~ret518, main_#t~ret517, main_~tmp~321, main_~ldvarg0~321.base, main_~ldvarg0~321.offset, main_#t~ret516, main_#t~ret515, main_#t~ret514, main_~tmp___3~321, main_#t~ret513, main_#t~ret510, main_#t~ret505.base, main_~tmp___0~321.offset, main_~tmp___1~321, main_#t~nondet511, main_~tmp___0~321.base, main_~tmp___2~321, main_~ldvarg1~321, main_#t~switch512, main_#t~ret505.offset;
    havoc main_~ldvarg1~321;
    havoc main_~tmp~321;
    havoc main_~ldvarg0~321.base, main_~ldvarg0~321.offset;
    havoc main_~tmp___0~321.offset, main_~tmp___0~321.base;
    havoc main_~tmp___1~321;
    havoc main_~tmp___2~321;
    havoc main_~tmp___3~321;
    assume main_#t~nondet504 <= 2147483647 && 0 <= main_#t~nondet504 + 2147483648;
    main_~tmp~321 := main_#t~nondet504;
    havoc main_#t~nondet504;
    main_~ldvarg1~321 := main_~tmp~321;
    ldv_zalloc_#in~size := 232;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_#t~malloc16.offset, ldv_zalloc_#t~malloc16.base, ldv_zalloc_~p~27.base, ldv_zalloc_~p~27.offset, ldv_zalloc_~size, ldv_zalloc_#t~nondet15, ldv_zalloc_~tmp~27.base, ldv_zalloc_~tmp~27.offset, ldv_zalloc_~tmp___0~27;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~27.base, ldv_zalloc_~p~27.offset;
    havoc ldv_zalloc_~tmp~27.base, ldv_zalloc_~tmp~27.offset;
    havoc ldv_zalloc_~tmp___0~27;
    assume ldv_zalloc_#t~nondet15 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet15 + 2147483648;
    ldv_zalloc_~tmp___0~27 := ldv_zalloc_#t~nondet15;
    havoc ldv_zalloc_#t~nondet15;
    assume !(ldv_zalloc_~tmp___0~27 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret505.base, main_#t~ret505.offset := ldv_zalloc_#res.base, ldv_zalloc_#res.offset;
    main_~tmp___0~321.offset, main_~tmp___0~321.base := main_#t~ret505.offset, main_#t~ret505.base;
    havoc main_#t~ret505.base, main_#t~ret505.offset;
    main_~ldvarg0~321.base, main_~ldvarg0~321.offset := main_~tmp___0~321.base, main_~tmp___0~321.offset;
    ldv_set_init_#in~set.base, ldv_set_init_#in~set.offset := ~LDV_SKBS.base, ~LDV_SKBS.offset;
    havoc ldv_set_init_~set.offset, ldv_set_init_~set.base;
    ldv_set_init_~set.offset, ldv_set_init_~set.base := ldv_set_init_#in~set.offset, ldv_set_init_#in~set.base;
    ldv_set_init_~set.offset, ldv_set_init_~set.base := ~#set_impl.offset, ~#set_impl.base;
    ~last_index := 0;
    ~ldv_state_variable_1 := 1;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_2 := 0;
    goto loc1;
  loc1:
    assume 0 <= main_#t~nondet506 + 2147483648 && main_#t~nondet506 <= 2147483647;
    main_~tmp___1~321 := main_#t~nondet506;
    havoc main_#t~nondet506;
    goto loc2;
  loc2:
    goto loc2_0, loc2_1;
  loc2_0:
    assume main_~tmp___1~321 == 0;
    main_#t~switch507 := true;
    goto loc3;
  loc2_1:
    assume !(main_~tmp___1~321 == 0);
    main_#t~switch507 := false;
    goto loc3;
  loc3:
    goto loc3_0, loc3_1;
  loc3_0:
    assume main_#t~switch507;
    assume !(~ldv_state_variable_1 == 0);
    havoc choose_interrupt_1_~tmp~306, choose_interrupt_1_#t~ret499, choose_interrupt_1_#t~ret500, choose_interrupt_1_#t~ret501, choose_interrupt_1_#t~ret502, choose_interrupt_1_#t~switch498, choose_interrupt_1_#t~nondet497;
    havoc choose_interrupt_1_~tmp~306;
    assume 0 <= choose_interrupt_1_#t~nondet497 + 2147483648 && choose_interrupt_1_#t~nondet497 <= 2147483647;
    choose_interrupt_1_~tmp~306 := choose_interrupt_1_#t~nondet497;
    havoc choose_interrupt_1_#t~nondet497;
    assume choose_interrupt_1_~tmp~306 == 0;
    choose_interrupt_1_#t~switch498 := true;
    assume choose_interrupt_1_#t~switch498;
    ldv_irq_1_#in~data.base, ldv_irq_1_#in~line, ldv_irq_1_#in~data.offset, ldv_irq_1_#in~state := ~ldv_irq_data_1_0.base, ~ldv_irq_line_1_0, ~ldv_irq_data_1_0.offset, ~ldv_irq_1_0;
    havoc ldv_irq_1_#res;
    havoc ldv_irq_1_~data.base, ldv_irq_1_~state, ldv_irq_1_#t~switch495, ldv_irq_1_~data.offset, ldv_irq_1_#t~ret496, ldv_irq_1_~irq_retval~285, ldv_irq_1_~tmp~285, ldv_irq_1_~line, ldv_irq_1_#t~nondet494;
    ldv_irq_1_~state := ldv_irq_1_#in~state;
    ldv_irq_1_~line := ldv_irq_1_#in~line;
    ldv_irq_1_~data.base, ldv_irq_1_~data.offset := ldv_irq_1_#in~data.base, ldv_irq_1_#in~data.offset;
    havoc ldv_irq_1_~irq_retval~285;
    havoc ldv_irq_1_~tmp~285;
    assume !(ldv_irq_1_~state == 0);
    assume 0 <= ldv_irq_1_#t~nondet494 + 2147483648 && ldv_irq_1_#t~nondet494 <= 2147483647;
    ldv_irq_1_~tmp~285 := ldv_irq_1_#t~nondet494;
    havoc ldv_irq_1_#t~nondet494;
    assume ldv_irq_1_~tmp~285 == 0;
    ldv_irq_1_#t~switch495 := true;
    assume ldv_irq_1_#t~switch495;
    assume ldv_irq_1_~state == 1;
    ~LDV_IN_INTERRUPT := 2;
    sja1000_interrupt_#in~irq, sja1000_interrupt_#in~dev_id.offset, sja1000_interrupt_#in~dev_id.base := ldv_irq_1_~line, ldv_irq_1_~data.offset, ldv_irq_1_~data.base;
    havoc sja1000_interrupt_#res;
    havoc sja1000_interrupt_~dev~212.base, sja1000_interrupt_#t~ret442, sja1000_interrupt_#t~nondet427.offset, sja1000_interrupt_#t~mem437, sja1000_interrupt_~dev_id.offset, sja1000_interrupt_#t~nondet427.base, sja1000_interrupt_#t~mem435, sja1000_interrupt_~isrc~212, sja1000_interrupt_#t~mem441.offset, sja1000_interrupt_#t~mem446.base, sja1000_interrupt_~tmp~212.base, sja1000_interrupt_#t~mem441.base, sja1000_interrupt_~tmp___3~212, sja1000_interrupt_#t~mem448.base, sja1000_interrupt_#t~ret439, sja1000_interrupt_#t~mem450.offset, sja1000_interrupt_~tmp___0~212, sja1000_interrupt_~tmp~212.offset, sja1000_interrupt_#t~mem419.offset, sja1000_interrupt_~priv~212.base, sja1000_interrupt_#t~nondet451.offset, sja1000_interrupt_#t~mem424.offset, sja1000_interrupt_~stats~212.offset, sja1000_interrupt_#t~mem421.base, sja1000_interrupt_~stats~212.base, sja1000_interrupt_#t~nondet455.offset, sja1000_interrupt_#t~nondet463.base, sja1000_interrupt_#t~mem416.base, sja1000_interrupt_#t~ret462, sja1000_interrupt_#t~ret464, sja1000_interrupt_#t~ret428, sja1000_interrupt_~dev~212.offset, sja1000_interrupt_#t~ret415.offset, sja1000_interrupt_#t~ret426, sja1000_interrupt_#t~mem448.offset, sja1000_interrupt_~tmp___4~212, sja1000_interrupt_#t~ret447, sja1000_interrupt_~priv~212.offset, sja1000_interrupt_#t~mem430, sja1000_interrupt_#t~ret422, sja1000_interrupt_#t~ret443, sja1000_interrupt_#t~nondet453.offset, sja1000_interrupt_~tmp___1~212, sja1000_interrupt_~#descriptor~212.base, sja1000_interrupt_#t~mem446.offset, sja1000_interrupt_~#descriptor~212.offset, sja1000_interrupt_#t~ret415.base, sja1000_interrupt_#t~mem421.offset, sja1000_interrupt_#t~mem450.base, sja1000_interrupt_#t~nondet463.offset, sja1000_interrupt_#t~ret434, sja1000_interrupt_~n~212, sja1000_interrupt_#t~nondet457.offset, sja1000_interrupt_~tmp___5~212, sja1000_interrupt_~dev_id.base, sja1000_interrupt_#t~mem433.base, sja1000_interrupt_#t~mem461, sja1000_interrupt_~tmp___2~212, sja1000_interrupt_#t~mem424.base, sja1000_interrupt_#t~mem433.offset, sja1000_interrupt_#t~mem419.base, sja1000_interrupt_#t~nondet457.base, sja1000_interrupt_#t~nondet455.base, sja1000_interrupt_#t~mem429, sja1000_interrupt_#t~mem416.offset, sja1000_interrupt_~status~212, sja1000_interrupt_#t~nondet451.base, sja1000_interrupt_#t~nondet453.base, sja1000_interrupt_#t~ret444, sja1000_interrupt_#t~ret425, sja1000_interrupt_~irq;
    sja1000_interrupt_~irq := sja1000_interrupt_#in~irq;
    sja1000_interrupt_~dev_id.base, sja1000_interrupt_~dev_id.offset := sja1000_interrupt_#in~dev_id.base, sja1000_interrupt_#in~dev_id.offset;
    havoc sja1000_interrupt_~dev~212.base, sja1000_interrupt_~dev~212.offset;
    havoc sja1000_interrupt_~priv~212.offset, sja1000_interrupt_~priv~212.base;
    havoc sja1000_interrupt_~tmp~212.offset, sja1000_interrupt_~tmp~212.base;
    havoc sja1000_interrupt_~stats~212.offset, sja1000_interrupt_~stats~212.base;
    havoc sja1000_interrupt_~isrc~212;
    havoc sja1000_interrupt_~status~212;
    havoc sja1000_interrupt_~n~212;
    havoc sja1000_interrupt_~tmp___0~212;
    havoc sja1000_interrupt_~tmp___1~212;
    havoc sja1000_interrupt_~tmp___2~212;
    havoc sja1000_interrupt_~tmp___3~212;
    havoc sja1000_interrupt_~tmp___4~212;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 37;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    sja1000_interrupt_~#descriptor~212.offset, sja1000_interrupt_~#descriptor~212.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc sja1000_interrupt_~tmp___5~212;
    sja1000_interrupt_~dev~212.base, sja1000_interrupt_~dev~212.offset := sja1000_interrupt_~dev_id.base, sja1000_interrupt_~dev_id.offset;
    netdev_priv_#in~dev.offset, netdev_priv_#in~dev.base := sja1000_interrupt_~dev~212.offset, sja1000_interrupt_~dev~212.base;
    havoc netdev_priv_#res.base, netdev_priv_#res.offset;
    havoc netdev_priv_~dev.base, netdev_priv_~dev.offset;
    netdev_priv_~dev.base, netdev_priv_~dev.offset := netdev_priv_#in~dev.base, netdev_priv_#in~dev.offset;
    netdev_priv_#res.base, netdev_priv_#res.offset := netdev_priv_~dev.base, netdev_priv_~dev.offset + 3264;
    sja1000_interrupt_#t~ret415.base, sja1000_interrupt_#t~ret415.offset := netdev_priv_#res.base, netdev_priv_#res.offset;
    sja1000_interrupt_~tmp~212.offset, sja1000_interrupt_~tmp~212.base := sja1000_interrupt_#t~ret415.offset, sja1000_interrupt_#t~ret415.base;
    havoc sja1000_interrupt_#t~ret415.base, sja1000_interrupt_#t~ret415.offset;
    sja1000_interrupt_~priv~212.offset, sja1000_interrupt_~priv~212.base := sja1000_interrupt_~tmp~212.offset, sja1000_interrupt_~tmp~212.base;
    sja1000_interrupt_~stats~212.offset, sja1000_interrupt_~stats~212.base := sja1000_interrupt_~dev~212.offset + 260, sja1000_interrupt_~dev~212.base;
    sja1000_interrupt_~n~212 := 0;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := sja1000_interrupt_~priv~212.base, 8, sja1000_interrupt_~priv~212.offset + 380;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    sja1000_interrupt_#t~mem416.base, sja1000_interrupt_#t~mem416.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume sja1000_interrupt_#t~mem416.base + sja1000_interrupt_#t~mem416.offset - 18446744073709551616 == 0;
    havoc sja1000_interrupt_#t~mem416.base, sja1000_interrupt_#t~mem416.offset;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := sja1000_interrupt_~priv~212.base, 8, sja1000_interrupt_~priv~212.offset + 364;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    sja1000_interrupt_#t~mem421.offset, sja1000_interrupt_#t~mem421.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    ##fun~$Pointer$~X~int~TO~~u8_#in~93.offset, ##fun~$Pointer$~X~int~TO~~u8_#in~93.base, ##fun~$Pointer$~X~int~TO~~u8_#in~#fp.offset, ##fun~$Pointer$~X~int~TO~~u8_#in~94, ##fun~$Pointer$~X~int~TO~~u8_#in~#fp.base := sja1000_interrupt_~priv~212.offset, sja1000_interrupt_~priv~212.base, sja1000_interrupt_#t~mem421.offset, 4, sja1000_interrupt_#t~mem421.base;
    havoc ##fun~$Pointer$~X~int~TO~~u8_#res;
    havoc ##fun~$Pointer$~X~int~TO~~u8_#~93.base, ##fun~$Pointer$~X~int~TO~~u8_#~93.offset, ##fun~$Pointer$~X~int~TO~~u8_#~94;
    ##fun~$Pointer$~X~int~TO~~u8_#~93.base, ##fun~$Pointer$~X~int~TO~~u8_#~93.offset := ##fun~$Pointer$~X~int~TO~~u8_#in~93.base, ##fun~$Pointer$~X~int~TO~~u8_#in~93.offset;
    ##fun~$Pointer$~X~int~TO~~u8_#~94 := ##fun~$Pointer$~X~int~TO~~u8_#in~94;
    sja1000_interrupt_#t~ret422 := ##fun~$Pointer$~X~int~TO~~u8_#res;
    sja1000_interrupt_~tmp___0~212 := sja1000_interrupt_#t~ret422;
    havoc sja1000_interrupt_#t~mem421.offset, sja1000_interrupt_#t~mem421.base;
    havoc sja1000_interrupt_#t~ret422;
    assume (!(sja1000_interrupt_~tmp___0~212 + 256 == 0) && -256 <= sja1000_interrupt_~tmp___0~212) && sja1000_interrupt_~tmp___0~212 < 0;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := sja1000_interrupt_~priv~212.base, 8, sja1000_interrupt_~priv~212.offset + 364;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    sja1000_interrupt_#t~mem446.base, sja1000_interrupt_#t~mem446.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    ##fun~$Pointer$~X~int~TO~~u8_#in~93.offset, ##fun~$Pointer$~X~int~TO~~u8_#in~93.base, ##fun~$Pointer$~X~int~TO~~u8_#in~#fp.offset, ##fun~$Pointer$~X~int~TO~~u8_#in~94, ##fun~$Pointer$~X~int~TO~~u8_#in~#fp.base := sja1000_interrupt_~priv~212.offset, sja1000_interrupt_~priv~212.base, sja1000_interrupt_#t~mem446.offset, 3, sja1000_interrupt_#t~mem446.base;
    havoc ##fun~$Pointer$~X~int~TO~~u8_#res;
    havoc ##fun~$Pointer$~X~int~TO~~u8_#~93.base, ##fun~$Pointer$~X~int~TO~~u8_#~93.offset, ##fun~$Pointer$~X~int~TO~~u8_#~94;
    ##fun~$Pointer$~X~int~TO~~u8_#~93.base, ##fun~$Pointer$~X~int~TO~~u8_#~93.offset := ##fun~$Pointer$~X~int~TO~~u8_#in~93.base, ##fun~$Pointer$~X~int~TO~~u8_#in~93.offset;
    ##fun~$Pointer$~X~int~TO~~u8_#~94 := ##fun~$Pointer$~X~int~TO~~u8_#in~94;
    sja1000_interrupt_#t~ret447 := ##fun~$Pointer$~X~int~TO~~u8_#res;
    sja1000_interrupt_~isrc~212 := sja1000_interrupt_#t~ret447;
    havoc sja1000_interrupt_#t~mem446.base, sja1000_interrupt_#t~mem446.offset;
    havoc sja1000_interrupt_#t~ret447;
    assume (sja1000_interrupt_~n~212 <= 19 && 256 + 256 <= sja1000_interrupt_~isrc~212) && !(sja1000_interrupt_~isrc~212 % 256 == 0);
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := sja1000_interrupt_~priv~212.base, 8, sja1000_interrupt_~priv~212.offset + 364;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    sja1000_interrupt_#t~mem424.offset, sja1000_interrupt_#t~mem424.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    ##fun~$Pointer$~X~int~TO~~u8_#in~93.offset, ##fun~$Pointer$~X~int~TO~~u8_#in~93.base, ##fun~$Pointer$~X~int~TO~~u8_#in~#fp.offset, ##fun~$Pointer$~X~int~TO~~u8_#in~94, ##fun~$Pointer$~X~int~TO~~u8_#in~#fp.base := sja1000_interrupt_~priv~212.offset, sja1000_interrupt_~priv~212.base, sja1000_interrupt_#t~mem424.offset, 2, sja1000_interrupt_#t~mem424.base;
    havoc ##fun~$Pointer$~X~int~TO~~u8_#res;
    havoc ##fun~$Pointer$~X~int~TO~~u8_#~93.base, ##fun~$Pointer$~X~int~TO~~u8_#~93.offset, ##fun~$Pointer$~X~int~TO~~u8_#~94;
    ##fun~$Pointer$~X~int~TO~~u8_#~93.base, ##fun~$Pointer$~X~int~TO~~u8_#~93.offset := ##fun~$Pointer$~X~int~TO~~u8_#in~93.base, ##fun~$Pointer$~X~int~TO~~u8_#in~93.offset;
    ##fun~$Pointer$~X~int~TO~~u8_#~94 := ##fun~$Pointer$~X~int~TO~~u8_#in~94;
    sja1000_interrupt_#t~ret425 := ##fun~$Pointer$~X~int~TO~~u8_#res;
    sja1000_interrupt_~status~212 := sja1000_interrupt_#t~ret425;
    havoc sja1000_interrupt_#t~mem424.offset, sja1000_interrupt_#t~mem424.base;
    havoc sja1000_interrupt_#t~ret425;
    assume (!(sja1000_interrupt_~status~212 + 256 == 255) && sja1000_interrupt_~status~212 < 0) && -256 <= sja1000_interrupt_~status~212;
    assume (sja1000_interrupt_~status~212 < 256 && 0 <= sja1000_interrupt_~status~212) && 256 + 256 <= sja1000_interrupt_~isrc~212;
    sja1000_err_#in~dev.offset, sja1000_err_#in~isrc, sja1000_err_#in~status, sja1000_err_#in~dev.base := sja1000_interrupt_~dev~212.offset, sja1000_interrupt_~isrc~212 % 256, sja1000_interrupt_~status~212, sja1000_interrupt_~dev~212.base;
    havoc sja1000_err_#res;
    havoc sja1000_err_#t~mem370.offset, sja1000_err_#t~mem376.offset, sja1000_err_#t~ret313, sja1000_err_#t~mem365, sja1000_err_#t~nondet353.base, sja1000_err_#t~mem390.base, sja1000_err_#t~ret276, sja1000_err_#t~mem395.base, sja1000_err_#t~mem411.base, sja1000_err_~skb~178.base, sja1000_err_#t~ret262.base, sja1000_err_#t~ret264.base, sja1000_err_~isrc, sja1000_err_#t~mem275, sja1000_err_#t~mem324.offset, sja1000_err_#t~ret366, sja1000_err_#t~ret385, sja1000_err_~skb~178.offset, sja1000_err_#t~mem315.offset, sja1000_err_~#descriptor___0~178.offset, sja1000_err_#t~ret302, sja1000_err_#t~ite396, sja1000_err_~#descriptor___0~178.base, sja1000_err_#t~nondet345.offset, sja1000_err_#t~mem312.base, sja1000_err_#t~mem334, sja1000_err_#t~mem314.base, sja1000_err_#t~nondet291.base, sja1000_err_#t~mem323.base, sja1000_err_#t~nondet293.offset, sja1000_err_#t~mem372, sja1000_err_#t~mem377.offset, sja1000_err_#t~mem391, sja1000_err_#t~mem395.offset, sja1000_err_#t~ret262.offset, sja1000_err_#t~nondet295.base, sja1000_err_#t~mem327.base, sja1000_err_#t~nondet347.base, sja1000_err_#t~nondet293.base, sja1000_err_#t~mem413, sja1000_err_#t~nondet341.offset, sja1000_err_#t~mem314.offset, sja1000_err_#t~ret408, sja1000_err_#t~mem403.offset, sja1000_err_#t~nondet343.base, sja1000_err_#t~nondet345.base, sja1000_err_#t~mem384.offset, sja1000_err_#t~nondet289.offset, sja1000_err_~dev.base, sja1000_err_#t~nondet341.base, sja1000_err_#t~switch318, sja1000_err_#t~mem338.offset, sja1000_err_#t~nondet295.offset, sja1000_err_#t~mem305, sja1000_err_#t~mem287, sja1000_err_#t~mem400.base, sja1000_err_~status, sja1000_err_#t~mem335.offset, sja1000_err_#t~mem328.base, sja1000_err_#t~ret264.offset, sja1000_err_#t~ite401, sja1000_err_#t~mem387.base, sja1000_err_#t~nondet265.offset, sja1000_err_#t~mem403.base, sja1000_err_#t~nondet271.offset, sja1000_err_#t~nondet269.base, sja1000_err_#t~ret388, sja1000_err_#t~mem309, sja1000_err_#t~nondet359.offset, sja1000_err_#t~ret300, sja1000_err_#t~mem380.offset, sja1000_err_~alc~178, sja1000_err_#t~mem320.base, sja1000_err_#t~mem316, sja1000_err_#t~nondet267.offset, sja1000_err_#t~nondet265.base, sja1000_err_#t~mem331.base, sja1000_err_#t~nondet359.base, sja1000_err_#t~mem279.offset, sja1000_err_#t~mem324.base, sja1000_err_~dev.offset, sja1000_err_~txerr~178, sja1000_err_#t~mem411.offset, sja1000_err_#t~mem280.offset, sja1000_err_#t~mem405.offset, sja1000_err_#t~mem387.offset, sja1000_err_#t~nondet355.base, sja1000_err_~tmp___3~178, sja1000_err_#t~mem400.offset, sja1000_err_#t~mem263, sja1000_err_#t~ret354, sja1000_err_#t~mem339, sja1000_err_#t~mem376.base, sja1000_err_#t~mem321, sja1000_err_#t~mem303.offset, sja1000_err_#t~mem377.base, sja1000_err_#t~nondet269.offset, sja1000_err_#t~mem312.offset, sja1000_err_#t~mem325, sja1000_err_#t~nondet343.offset, sja1000_err_#t~nondet367.offset, sja1000_err_#t~ret278, sja1000_err_#t~mem382, sja1000_err_#t~mem337.base, sja1000_err_#t~mem338.base, sja1000_err_~#cf~178.base, sja1000_err_~#descriptor~178.offset, sja1000_err_#t~nondet277.base, sja1000_err_#t~nondet291.offset, sja1000_err_#t~mem335.base, sja1000_err_~tmp~178.offset, sja1000_err_#t~mem327.offset, sja1000_err_~#descriptor___2~178.offset, sja1000_err_#t~mem370.base, sja1000_err_#t~mem329, sja1000_err_~tmp___4~178, sja1000_err_~priv~178.offset, sja1000_err_#t~mem389.offset, sja1000_err_#t~mem303.base, sja1000_err_#t~nondet271.base, sja1000_err_#t~mem331.offset, sja1000_err_#t~mem378, sja1000_err_~state~178, sja1000_err_#t~mem299, sja1000_err_#t~mem374, sja1000_err_#t~mem332.base, sja1000_err_#t~mem393, sja1000_err_#t~mem351, sja1000_err_#t~nondet357.offset, sja1000_err_#t~nondet353.offset, sja1000_err_~ecc~178, sja1000_err_~tmp___2~178, sja1000_err_#t~nondet367.base, sja1000_err_#t~mem283.offset, sja1000_err_#t~mem320.offset, sja1000_err_~#descriptor~178.base, sja1000_err_#t~mem280.base, sja1000_err_~#descriptor___1~178.base, sja1000_err_#t~mem319.offset, sja1000_err_#t~mem337.offset, sja1000_err_#t~mem390.offset, sja1000_err_~rxerr~178, sja1000_err_#t~mem279.base, sja1000_err_#t~mem384.base, sja1000_err_#t~mem281, sja1000_err_#t~mem285, sja1000_err_~tmp___5~178, sja1000_err_~priv~178.base, sja1000_err_~#descriptor___2~178.base, sja1000_err_#t~nondet361.base, sja1000_err_#t~mem380.base, sja1000_err_#t~mem332.offset, sja1000_err_#t~nondet277.offset, sja1000_err_#t~nondet289.base, sja1000_err_#t~nondet301.base, sja1000_err_#t~mem409, sja1000_err_#t~mem389.base, sja1000_err_#t~mem304.offset, sja1000_err_#t~nondet347.offset, sja1000_err_~#descriptor___1~178.offset, sja1000_err_#t~mem405.base, sja1000_err_~tmp___1~178, sja1000_err_#t~nondet267.base, sja1000_err_~stats~178.offset, sja1000_err_#t~mem307, sja1000_err_~tmp~178.base, sja1000_err_#t~nondet301.offset, sja1000_err_~#cf~178.offset, sja1000_err_#t~ret368, sja1000_err_#t~mem398, sja1000_err_~stats~178.base, sja1000_err_#t~nondet357.base, sja1000_err_#t~mem323.offset, sja1000_err_#t~mem283.base, sja1000_err_#t~mem412, sja1000_err_#t~mem315.base, sja1000_err_#t~mem319.base, sja1000_err_~tmp___0~178, sja1000_err_#t~nondet361.offset, sja1000_err_#t~mem304.base, sja1000_err_#t~ret371, sja1000_err_#t~mem328.offset, sja1000_err_#t~ret352, sja1000_err_#t~nondet355.offset;
    sja1000_err_~dev.base, sja1000_err_~dev.offset := sja1000_err_#in~dev.base, sja1000_err_#in~dev.offset;
    sja1000_err_~isrc := sja1000_err_#in~isrc;
    sja1000_err_~status := sja1000_err_#in~status;
    havoc sja1000_err_~priv~178.base, sja1000_err_~priv~178.offset;
    havoc sja1000_err_~tmp~178.offset, sja1000_err_~tmp~178.base;
    havoc sja1000_err_~stats~178.base, sja1000_err_~stats~178.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    sja1000_err_~#cf~178.offset, sja1000_err_~#cf~178.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc sja1000_err_~skb~178.base, sja1000_err_~skb~178.offset;
    havoc sja1000_err_~state~178;
    havoc sja1000_err_~ecc~178;
    havoc sja1000_err_~alc~178;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 37;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    sja1000_err_~#descriptor~178.base, sja1000_err_~#descriptor~178.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc sja1000_err_~tmp___0~178;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 37;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    sja1000_err_~#descriptor___0~178.base, sja1000_err_~#descriptor___0~178.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc sja1000_err_~tmp___1~178;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 37;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    sja1000_err_~#descriptor___1~178.offset, sja1000_err_~#descriptor___1~178.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc sja1000_err_~tmp___2~178;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 37;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    sja1000_err_~#descriptor___2~178.offset, sja1000_err_~#descriptor___2~178.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc sja1000_err_~tmp___3~178;
    havoc sja1000_err_~rxerr~178;
    havoc sja1000_err_~tmp___4~178;
    havoc sja1000_err_~txerr~178;
    havoc sja1000_err_~tmp___5~178;
    netdev_priv_#in~dev.offset, netdev_priv_#in~dev.base := sja1000_err_~dev.offset, sja1000_err_~dev.base;
    havoc netdev_priv_#res.base, netdev_priv_#res.offset;
    havoc netdev_priv_~dev.base, netdev_priv_~dev.offset;
    netdev_priv_~dev.base, netdev_priv_~dev.offset := netdev_priv_#in~dev.base, netdev_priv_#in~dev.offset;
    netdev_priv_#res.base, netdev_priv_#res.offset := netdev_priv_~dev.base, netdev_priv_~dev.offset + 3264;
    sja1000_err_#t~ret262.offset, sja1000_err_#t~ret262.base := netdev_priv_#res.offset, netdev_priv_#res.base;
    sja1000_err_~tmp~178.offset, sja1000_err_~tmp~178.base := sja1000_err_#t~ret262.offset, sja1000_err_#t~ret262.base;
    havoc sja1000_err_#t~ret262.offset, sja1000_err_#t~ret262.base;
    sja1000_err_~priv~178.base, sja1000_err_~priv~178.offset := sja1000_err_~tmp~178.base, sja1000_err_~tmp~178.offset;
    sja1000_err_~stats~178.base, sja1000_err_~stats~178.offset := sja1000_err_~dev.base, sja1000_err_~dev.offset + 260;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sja1000_err_~priv~178.base, sja1000_err_~priv~178.offset + 108, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    sja1000_err_#t~mem263 := read~int_#value;
    sja1000_err_~state~178 := sja1000_err_#t~mem263;
    havoc sja1000_err_#t~mem263;
    alloc_can_err_skb_#in~83.offset, alloc_can_err_skb_#in~83.base, alloc_can_err_skb_#in~84.base, alloc_can_err_skb_#in~84.offset := sja1000_err_~dev.offset, sja1000_err_~dev.base, sja1000_err_~#cf~178.base, sja1000_err_~#cf~178.offset;
    havoc alloc_can_err_skb_#res.base, alloc_can_err_skb_#res.offset;
    sja1000_err_#t~ret264.base, sja1000_err_#t~ret264.offset := alloc_can_err_skb_#res.base, alloc_can_err_skb_#res.offset;
    sja1000_err_~skb~178.base, sja1000_err_~skb~178.offset := sja1000_err_#t~ret264.base, sja1000_err_#t~ret264.offset;
    havoc sja1000_err_#t~ret264.base, sja1000_err_#t~ret264.offset;
    assume (!(sja1000_err_~skb~178.base + sja1000_err_~skb~178.offset - 18446744073709551616 == 0) && sja1000_err_~skb~178.base + sja1000_err_~skb~178.offset < 18446744073709551616 + 18446744073709551616) && 18446744073709551616 <= sja1000_err_~skb~178.base + sja1000_err_~skb~178.offset;
    assume (!(sja1000_err_~isrc % 256 < 0) && 256 + 256 <= sja1000_err_~isrc) && sja1000_err_~isrc % 256 <= 127;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sja1000_err_~priv~178.base, sja1000_err_~priv~178.offset + 108, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    sja1000_err_#t~mem382 := read~int_#value;
    assume (sja1000_err_#t~mem382 + 4294967296 == sja1000_err_~state~178 - 4294967296 && 4294967296 <= sja1000_err_~state~178) && sja1000_err_~state~178 < 4294967296 + 4294967296;
    havoc sja1000_err_#t~mem382;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, sja1000_err_~priv~178.base, sja1000_err_~state~178, sja1000_err_~priv~178.offset + 108;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    ldv_netif_rx_14_#in~ldv_func_arg1.base, ldv_netif_rx_14_#in~ldv_func_arg1.offset := sja1000_err_~skb~178.base, sja1000_err_~skb~178.offset;
    havoc ldv_netif_rx_14_#res;
    havoc ldv_netif_rx_14_~ldv_func_arg1.offset, ldv_netif_rx_14_#t~ret521, ldv_netif_rx_14_~ldv_func_arg1.base, ldv_netif_rx_14_~tmp~362;
    ldv_netif_rx_14_~ldv_func_arg1.offset, ldv_netif_rx_14_~ldv_func_arg1.base := ldv_netif_rx_14_#in~ldv_func_arg1.offset, ldv_netif_rx_14_#in~ldv_func_arg1.base;
    havoc ldv_netif_rx_14_~tmp~362;
    ldv_skb_free_int_#in~skb.base, ldv_skb_free_int_#in~skb.offset := ldv_netif_rx_14_~ldv_func_arg1.base, ldv_netif_rx_14_~ldv_func_arg1.offset;
    havoc ldv_skb_free_int_#res;
    havoc ldv_skb_free_int_~skb.offset, ldv_skb_free_int_~skb.base;
    ldv_skb_free_int_~skb.offset, ldv_skb_free_int_~skb.base := ldv_skb_free_int_#in~skb.offset, ldv_skb_free_int_#in~skb.base;
    ldv_set_remove_#in~e.offset, ldv_set_remove_#in~set.offset, ldv_set_remove_#in~e.base, ldv_set_remove_#in~set.base := ldv_skb_free_int_~skb.offset, ~LDV_SKBS.offset, ldv_skb_free_int_~skb.base, ~LDV_SKBS.base;
    havoc ldv_set_remove_~e.base, ldv_set_remove_#t~mem526.offset, ldv_set_remove_~e.offset, ldv_set_remove_#t~mem526.base, ldv_set_remove_#t~mem524.offset, ldv_set_remove_#t~mem524.base, ldv_set_remove_~set.base, ldv_set_remove_~deleted_index~375, ldv_set_remove_~i~375, ldv_set_remove_~set.offset;
    ldv_set_remove_~set.base, ldv_set_remove_~set.offset := ldv_set_remove_#in~set.base, ldv_set_remove_#in~set.offset;
    ldv_set_remove_~e.base, ldv_set_remove_~e.offset := ldv_set_remove_#in~e.base, ldv_set_remove_#in~e.offset;
    havoc ldv_set_remove_~i~375;
    havoc ldv_set_remove_~deleted_index~375;
    ldv_set_remove_~deleted_index~375 := -1;
    ldv_set_remove_~i~375 := 0;
    assume ldv_set_remove_~i~375 < ~last_index;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := ~#set_impl.base, 8, ~#set_impl.offset + 8 * ldv_set_remove_~i~375;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    ldv_set_remove_#t~mem524.offset, ldv_set_remove_#t~mem524.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    assume (0 <= ldv_set_remove_#t~mem524.offset + ldv_set_remove_#t~mem524.base && ldv_set_remove_#t~mem524.offset + ldv_set_remove_#t~mem524.base < 18446744073709551616) && ldv_set_remove_#t~mem524.offset + ldv_set_remove_#t~mem524.base == ldv_set_remove_~e.offset + ldv_set_remove_~e.base;
    havoc ldv_set_remove_#t~mem524.offset, ldv_set_remove_#t~mem524.base;
    ldv_set_remove_~deleted_index~375 := ldv_set_remove_~i~375;
    assume !(ldv_set_remove_~deleted_index~375 == -1);
    ldv_set_remove_~i~375 := ldv_set_remove_~deleted_index~375 + 1;
    assume !(ldv_set_remove_~i~375 < ~last_index);
    ~last_index := ~last_index - 1;
    ldv_skb_free_int_#res := 0;
    ldv_netif_rx_14_#t~ret521 := ldv_skb_free_int_#res;
    assume 0 <= ldv_netif_rx_14_#t~ret521 + 2147483648 && ldv_netif_rx_14_#t~ret521 <= 2147483647;
    ldv_netif_rx_14_~tmp~362 := ldv_netif_rx_14_#t~ret521;
    havoc ldv_netif_rx_14_#t~ret521;
    ldv_netif_rx_14_#res := ldv_netif_rx_14_~tmp~362;
    sja1000_err_#t~ret408 := ldv_netif_rx_14_#res;
    assume 0 <= sja1000_err_#t~ret408 + 2147483648 && sja1000_err_#t~ret408 <= 2147483647;
    havoc sja1000_err_#t~ret408;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sja1000_err_~stats~178.base, sja1000_err_~stats~178.offset, 8;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    sja1000_err_#t~mem409 := read~int_#value;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, sja1000_err_~stats~178.base, sja1000_err_#t~mem409 + 1, sja1000_err_~stats~178.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc sja1000_err_#t~mem409;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sja1000_err_~stats~178.base, sja1000_err_~stats~178.offset + 16, 8;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    sja1000_err_#t~mem413 := read~int_#value;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := sja1000_err_~#cf~178.base, 8, sja1000_err_~#cf~178.offset;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    sja1000_err_#t~mem411.base, sja1000_err_#t~mem411.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := sja1000_err_#t~mem411.base, sja1000_err_#t~mem411.offset + 4, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    sja1000_err_#t~mem412 := read~int_#value;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    assume 256 + 256 <= sja1000_err_#t~mem412;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, sja1000_err_~stats~178.base, sja1000_err_#t~mem412 % 256 + sja1000_err_#t~mem413, sja1000_err_~stats~178.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc sja1000_err_#t~mem413;
    havoc sja1000_err_#t~mem411.base, sja1000_err_#t~mem411.offset;
    havoc sja1000_err_#t~mem412;
    sja1000_err_#res := 0;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := sja1000_err_~#cf~178.base, sja1000_err_~#cf~178.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc sja1000_err_~#cf~178.offset, sja1000_err_~#cf~178.base;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := sja1000_err_~#descriptor~178.base, sja1000_err_~#descriptor~178.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc sja1000_err_~#descriptor~178.base, sja1000_err_~#descriptor~178.offset;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := sja1000_err_~#descriptor___0~178.base, sja1000_err_~#descriptor___0~178.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc sja1000_err_~#descriptor___0~178.base, sja1000_err_~#descriptor___0~178.offset;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := sja1000_err_~#descriptor___1~178.base, sja1000_err_~#descriptor___1~178.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc sja1000_err_~#descriptor___1~178.offset, sja1000_err_~#descriptor___1~178.base;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := sja1000_err_~#descriptor___2~178.base, sja1000_err_~#descriptor___2~178.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc sja1000_err_~#descriptor___2~178.offset, sja1000_err_~#descriptor___2~178.base;
    sja1000_interrupt_#t~ret444 := sja1000_err_#res;
    assume sja1000_interrupt_#t~ret444 <= 2147483647 && 0 <= sja1000_interrupt_#t~ret444 + 2147483648;
    sja1000_interrupt_~tmp___4~212 := sja1000_interrupt_#t~ret444;
    havoc sja1000_interrupt_#t~ret444;
    assume !(sja1000_interrupt_~tmp___4~212 == 0);
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := sja1000_interrupt_~priv~212.base, 8, sja1000_interrupt_~priv~212.offset + 388;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    sja1000_interrupt_#t~mem448.base, sja1000_interrupt_#t~mem448.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume sja1000_interrupt_#t~mem448.offset + sja1000_interrupt_#t~mem448.base - 18446744073709551616 == 0;
    havoc sja1000_interrupt_#t~mem448.base, sja1000_interrupt_#t~mem448.offset;
    assume !(19 < sja1000_interrupt_~n~212);
    assume !(sja1000_interrupt_~n~212 == 0);
    sja1000_interrupt_#res := 1;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := sja1000_interrupt_~#descriptor~212.base, sja1000_interrupt_~#descriptor~212.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc sja1000_interrupt_~#descriptor~212.offset, sja1000_interrupt_~#descriptor~212.base;
    ldv_irq_1_#t~ret496 := sja1000_interrupt_#res;
    assume 0 <= ldv_irq_1_#t~ret496 + 2147483648 && ldv_irq_1_#t~ret496 <= 2147483647;
    ldv_irq_1_~irq_retval~285 := ldv_irq_1_#t~ret496;
    havoc ldv_irq_1_#t~ret496;
    ~LDV_IN_INTERRUPT := 1;
    ldv_irq_1_#res := ldv_irq_1_~state;
    choose_interrupt_1_#t~ret499 := ldv_irq_1_#res;
    assume choose_interrupt_1_#t~ret499 <= 2147483647 && 0 <= choose_interrupt_1_#t~ret499 + 2147483648;
    ~ldv_irq_1_0 := choose_interrupt_1_#t~ret499;
    havoc choose_interrupt_1_#t~ret499;
    goto loc1;
  loc3_1:
    assume !main_#t~switch507;
    assume main_~tmp___1~321 == 1;
    main_#t~switch507 := true;
    assume main_#t~switch507;
    assume !(~ldv_state_variable_0 == 0);
    assume 0 <= main_#t~nondet508 + 2147483648 && main_#t~nondet508 <= 2147483647;
    main_~tmp___2~321 := main_#t~nondet508;
    havoc main_#t~nondet508;
    goto loc4;
  loc4:
    goto loc4_0, loc4_1;
  loc4_0:
    assume main_~tmp___2~321 == 0;
    main_#t~switch509 := true;
    goto loc5;
  loc4_1:
    assume !(main_~tmp___2~321 == 0);
    main_#t~switch509 := false;
    goto loc5;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume main_#t~switch509;
    assume ~ref_cnt == 0 && ~ldv_state_variable_0 == 3;
    havoc sja1000_exit_#t~ret493, sja1000_exit_#t~nondet492.offset, sja1000_exit_#t~nondet492.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 25;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    sja1000_exit_#t~nondet492.offset, sja1000_exit_#t~nondet492.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    printk_#in~1.base, printk_#in~1.offset := sja1000_exit_#t~nondet492.base, sja1000_exit_#t~nondet492.offset;
    havoc printk_#res;
    sja1000_exit_#t~ret493 := printk_#res;
    assume 0 <= sja1000_exit_#t~ret493 + 2147483648 && sja1000_exit_#t~ret493 <= 2147483647;
    havoc sja1000_exit_#t~nondet492.offset, sja1000_exit_#t~nondet492.base;
    havoc sja1000_exit_#t~ret493;
    ~ldv_state_variable_0 := 2;
    havoc ldv_check_final_state_#t~ret527, ldv_check_final_state_~tmp___7~396;
    havoc ldv_check_final_state_~tmp___7~396;
    ldv_set_is_empty_#in~set.offset, ldv_set_is_empty_#in~set.base := ~LDV_SKBS.offset, ~LDV_SKBS.base;
    havoc ldv_set_is_empty_#res;
    havoc ldv_set_is_empty_~set.base, ldv_set_is_empty_~set.offset;
    ldv_set_is_empty_~set.base, ldv_set_is_empty_~set.offset := ldv_set_is_empty_#in~set.base, ldv_set_is_empty_#in~set.offset;
    assume !(~last_index == 0);
    ldv_set_is_empty_#res := 0;
    ldv_check_final_state_#t~ret527 := ldv_set_is_empty_#res;
    assume ldv_check_final_state_#t~ret527 <= 2147483647 && 0 <= ldv_check_final_state_#t~ret527 + 2147483648;
    ldv_check_final_state_~tmp___7~396 := ldv_check_final_state_#t~ret527;
    havoc ldv_check_final_state_#t~ret527;
    assume ldv_check_final_state_~tmp___7~396 == 0;
    goto loc6;
  loc5_1:
    assume !main_#t~switch509;
    assume main_~tmp___2~321 == 1;
    main_#t~switch509 := true;
    assume main_#t~switch509;
    assume ~ldv_state_variable_0 == 1;
    havoc sja1000_init_#res;
    havoc sja1000_init_#t~nondet490.base, sja1000_init_#t~ret491, sja1000_init_#t~nondet490.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 30;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    sja1000_init_#t~nondet490.base, sja1000_init_#t~nondet490.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    printk_#in~1.base, printk_#in~1.offset := sja1000_init_#t~nondet490.base, sja1000_init_#t~nondet490.offset;
    havoc printk_#res;
    sja1000_init_#t~ret491 := printk_#res;
    assume 0 <= sja1000_init_#t~ret491 + 2147483648 && sja1000_init_#t~ret491 <= 2147483647;
    havoc sja1000_init_#t~nondet490.base, sja1000_init_#t~nondet490.offset;
    havoc sja1000_init_#t~ret491;
    sja1000_init_#res := 0;
    main_#t~ret510 := sja1000_init_#res;
    assume main_#t~ret510 <= 2147483647 && 0 <= main_#t~ret510 + 2147483648;
    ~ldv_retval_0 := main_#t~ret510;
    havoc main_#t~ret510;
    assume ~ldv_retval_0 == 0;
    ~ldv_state_variable_0 := 3;
    ~ldv_state_variable_2 := 1;
    havoc ldv_net_device_ops_2_#t~ret503.offset, ldv_net_device_ops_2_#t~ret503.base, ldv_net_device_ops_2_~tmp~309.base, ldv_net_device_ops_2_~tmp~309.offset;
    havoc ldv_net_device_ops_2_~tmp~309.base, ldv_net_device_ops_2_~tmp~309.offset;
    ldv_zalloc_#in~size := 3264;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_#t~malloc16.offset, ldv_zalloc_#t~malloc16.base, ldv_zalloc_~p~27.base, ldv_zalloc_~p~27.offset, ldv_zalloc_~size, ldv_zalloc_#t~nondet15, ldv_zalloc_~tmp~27.base, ldv_zalloc_~tmp~27.offset, ldv_zalloc_~tmp___0~27;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~27.base, ldv_zalloc_~p~27.offset;
    havoc ldv_zalloc_~tmp~27.base, ldv_zalloc_~tmp~27.offset;
    havoc ldv_zalloc_~tmp___0~27;
    assume 0 <= ldv_zalloc_#t~nondet15 + 2147483648 && ldv_zalloc_#t~nondet15 <= 2147483647;
    ldv_zalloc_~tmp___0~27 := ldv_zalloc_#t~nondet15;
    havoc ldv_zalloc_#t~nondet15;
    assume !(ldv_zalloc_~tmp___0~27 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_net_device_ops_2_#t~ret503.offset, ldv_net_device_ops_2_#t~ret503.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    ldv_net_device_ops_2_~tmp~309.base, ldv_net_device_ops_2_~tmp~309.offset := ldv_net_device_ops_2_#t~ret503.base, ldv_net_device_ops_2_#t~ret503.offset;
    havoc ldv_net_device_ops_2_#t~ret503.offset, ldv_net_device_ops_2_#t~ret503.base;
    ~sja1000_netdev_ops_group1.base, ~sja1000_netdev_ops_group1.offset := ldv_net_device_ops_2_~tmp~309.base, ldv_net_device_ops_2_~tmp~309.offset;
    assume ~ldv_retval_0 == 0;
    goto loc1;
  loc6:
    assert false;
}


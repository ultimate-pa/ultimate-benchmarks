var ~ldv_retval_14 : int;

var v_rep#funAddr~h4_close.base_1 : int;

var v_rep#funAddr~hci_uart_tty_open.base_1 : int;

var v_rep#funAddr~ath_recv.offset_1 : int;

var v_rep#funAddr~h5_open.base_1 : int;

var v_rep#funAddr~bcm_close.offset_1 : int;

var ~#ath_recv_pkts.offset : int;

var v_rep#funAddr~hci_uart_tty_wakeup.base_1 : int;

var v_rep#funAddr~hci_uart_tty_close.offset_1 : int;

var v_rep#funAddr~hci_uart_tty_read.base_1 : int;

var ~ldv_retval_13 : int;

var v_rep#funAddr~ll_open.base_1 : int;

var ~#h5p.base : int;

var v_rep#funAddr~ath_setup.base_1 : int;

var ~ldv_timer_list_4.offset : int;

var v_rep#funAddr~bcm_recv.base_1 : int;

var ~ldv_work_struct_3_2.offset : int;

var v_rep#funAddr~bcm_setup.offset_1 : int;

var ~#h4_recv_pkts.base : int;

var v_rep#funAddr~bcsp_enqueue.base_1 : int;

var ~ldv_retval_12 : int;

var ~ldv_spin : int;

var v_rep#funAddr~hci_uart_tty_poll.base_1 : int;

var ~ldv_work_struct_3_0.base : int;

var ~hciextn : int;

var ~#__this_module.offset : int;

var ~ldv_work_3_3 : int;

var ~h5p_group0.base : int;

var ~ldv_work_struct_3_1.base : int;

var ~ldv_state_variable_0 : int;

var v_rep#funAddr~h4_open.base_1 : int;

var v_rep#funAddr~h4_open.offset_1 : int;

var ~ldv_retval_11 : int;

var v_rep#funAddr~hci_uart_tty_receive.base_1 : int;

var ~hup.offset : [int]int;

var ~ref_cnt : int;

var ~ldv_work_3_2 : int;

var ~h4p_group0.base : int;

var v_rep#funAddr~ath_flush.offset_1 : int;

var ~#bcm_proto.base : int;

var v_rep#funAddr~bcsp_open.offset_1 : int;

var v_rep#funAddr~ll_close.offset_1 : int;

var v_rep#funAddr~hci_uart_tty_write.offset_1 : int;

var ~ldv_state_variable_1 : int;

var ~ldv_retval_10 : int;

var v_rep#funAddr~hci_uart_tty_wakeup.offset_1 : int;

var v_rep#funAddr~bcm_set_baudrate.offset_1 : int;

var #memory_$Pointer$.base : [int][int]int;

var v_rep#funAddr~ath_setup.offset_1 : int;

var ~ldv_state_variable_10 : int;

var v_rep#funAddr~h5_open.offset_1 : int;

var ~ldv_work_struct_3_2.base : int;

var ~ldv_work_struct_3_3.offset : int;

var v_rep#funAddr~h5_recv.offset_1 : int;

var v_rep#funAddr~hci_uart_tty_ioctl.offset_1 : int;

var ~ldv_retval_0 : int;

var v_rep#funAddr~ll_close.base_1 : int;

var ~#bcsp.base : int;

var v_rep#funAddr~bcm_open.offset_1 : int;

var ~#h5p.offset : int;

var v_rep#funAddr~h4_enqueue.base_1 : int;

var ~ldv_timer_state_4 : int;

var v_rep#funAddr~ll_enqueue.base_1 : int;

var v_rep#funAddr~ll_recv.offset_1 : int;

var v_rep#funAddr~ath_enqueue.offset_1 : int;

var ~ldv_state_variable_11 : int;

var v_rep#funAddr~hci_uart_tty_open.offset_1 : int;

var v_rep#funAddr~ll_dequeue.base_1 : int;

var v_rep#funAddr~hci_uart_tty_receive.offset_1 : int;

var ~ldv_retval_1 : int;

var v_rep#funAddr~bcsp_dequeue.base_1 : int;

var ~ldv_work_struct_3_0.offset : int;

var ~#ath_recv_pkts.base : int;

var ~#bcm_proto.offset : int;

var v_rep#funAddr~hci_uart_tty_read.offset_1 : int;

var v_rep#funAddr~bcm_setup.base_1 : int;

var v_rep#funAddr~bcm_recv.offset_1 : int;

var ~ldv_retval_2 : int;

var ~athp_group0.base : int;

var v_rep#funAddr~bcm_open.base_1 : int;

var ~#athp.base : int;

var v_rep#funAddr~h4_dequeue.base_1 : int;

var v_rep#funAddr~ath_dequeue.base_1 : int;

var v_rep#funAddr~ath_flush.base_1 : int;

var ~#h4_recv_pkts.offset : int;

var v_rep#funAddr~ath_dequeue.offset_1 : int;

var v_rep#funAddr~h5_close.offset_1 : int;

var ~txcrc : int;

var ~ldv_retval_3 : int;

var v_rep#funAddr~h5_dequeue.offset_1 : int;

var ~bcm_proto_group0.offset : int;

var ~bcsp_group0.offset : int;

var v_rep#funAddr~hci_recv_frame.base_1 : int;

var ~#h4p.base : int;

var v_rep#funAddr~h4_recv.base_1 : int;

var v_rep#funAddr~ll_dequeue.offset_1 : int;

var v_rep#funAddr~ll_open.offset_1 : int;

var ~ldv_work_struct_2_0.base : int;

var v_rep#funAddr~h5_close.base_1 : int;

var ~hup.base : [int]int;

var ~ldv_retval_4 : int;

var ~ldv_work_1_3 : int;

var ~ldv_work_2_0 : int;

var v_rep#funAddr~h5_enqueue.offset_1 : int;

var v_rep#funAddr~ath_open.base_1 : int;

var v_rep#funAddr~bcsp_recv.offset_1 : int;

var v_rep#funAddr~bcm_close.base_1 : int;

var ~ldv_state_variable_6 : int;

var v_rep#funAddr~bcm_enqueue.base_1 : int;

var ~crc_table : [int]int;

var v_rep#funAddr~ath_open.offset_1 : int;

var v_rep#funAddr~h4_enqueue.offset_1 : int;

var ~ldv_retval_5 : int;

var v_rep#funAddr~hci_recv_frame.offset_1 : int;

var v_rep#funAddr~hci_uart_tty_poll.offset_1 : int;

var ~ldv_work_struct_3_3.base : int;

var ~ldv_work_1_2 : int;

var ~ldv_state_variable_8 : int;

var ~ldv_state_variable_7 : int;

var v_rep#funAddr~ll_recv.base_1 : int;

var ~bcm_proto_group0.base : int;

var ~#bcm_recv_pkts.base : int;

var #memory_$Pointer$.offset : [int][int]int;

var ~#__this_module.base : int;

var ~ldv_retval_6 : int;

var v_rep#funAddr~h4_flush.offset_1 : int;

var v_rep#funAddr~h5_enqueue.base_1 : int;

var ~ldv_work_1_1 : int;

var ~ldv_state_variable_9 : int;

var ~#llp.offset : int;

var ~bcsp_group0.base : int;

var v_rep#funAddr~h4_flush.base_1 : int;

var v_rep#funAddr~bcsp_dequeue.offset_1 : int;

var v_rep#funAddr~ll_enqueue.offset_1 : int;

var v_rep#funAddr~ll_flush.base_1 : int;

var ~h5p_group0.offset : int;

var ~ldv_retval_7 : int;

var v_rep#funAddr~ath_close.base_1 : int;

var v_rep#funAddr~bcsp_open.base_1 : int;

var v_rep#funAddr~bcsp_close.base_1 : int;

var ~llp_group0.base : int;

var ~ldv_work_1_0 : int;

var v_rep#funAddr~bcm_flush.offset_1 : int;

var v_rep#funAddr~h5_recv.base_1 : int;

var ~#bcm_recv_pkts.offset : int;

var ~ldv_work_struct_3_1.offset : int;

var v_rep#funAddr~bcsp_close.offset_1 : int;

var #valid : [int]int;

var ~#bcsp.offset : int;

var v_rep#funAddr~h4_dequeue.offset_1 : int;

var ~ldv_retval_8 : int;

var #NULL.offset : int;

var ~ldv_work_3_1 : int;

var ~#h4p.offset : int;

var v_rep#funAddr~bcm_enqueue.offset_1 : int;

var ~h4p_group0.offset : int;

var ~#llp.base : int;

var v_rep#funAddr~bcsp_flush.base_1 : int;

var v_rep#funAddr~h5_dequeue.base_1 : int;

var ~ldv_state_variable_2 : int;

var v_rep#funAddr~h4_close.offset_1 : int;

var ~ldv_work_struct_2_0.offset : int;

var #length : [int]int;

var v_rep#funAddr~ll_flush.offset_1 : int;

var v_rep#funAddr~hci_uart_tty_write.base_1 : int;

var v_rep#funAddr~ath_enqueue.base_1 : int;

var v_rep#funAddr~h5_flush.offset_1 : int;

var v_rep#funAddr~bcm_flush.base_1 : int;

var ~ldv_retval_9 : int;

var ~ldv_work_struct_1_0.base : int;

var v_rep#funAddr~bcm_dequeue.offset_1 : int;

var ~ldv_work_2_3 : int;

var ~ldv_work_3_0 : int;

var ~ldv_timer_list_4.base : int;

var ~ldv_state_variable_3 : int;

var v_rep#funAddr~ath_recv.base_1 : int;

var v_rep#funAddr~bcsp_enqueue.offset_1 : int;

var v_rep#funAddr~h5_flush.base_1 : int;

var v_rep#funAddr~bcm_dequeue.base_1 : int;

var v_rep#funAddr~bcsp_flush.offset_1 : int;

var ~ldv_work_2_2 : int;

var ~llp_group0.offset : int;

var ~ldv_state_variable_4 : int;

var v_rep#funAddr~hci_uart_tty_close.base_1 : int;

var ~athp_group0.offset : int;

var v_rep#funAddr~h4_recv.offset_1 : int;

var v_rep#funAddr~ath_close.offset_1 : int;

var ~ldv_work_struct_1_0.offset : int;

var ~ldv_work_2_1 : int;

var #NULL.base : int;

var ~ldv_state_variable_5 : int;

var v_rep#funAddr~bcsp_recv.base_1 : int;

var ~#athp.offset : int;

var v_rep#funAddr~bcm_set_baudrate.base_1 : int;

var #memory_int : [int][int]int;

var v_rep#funAddr~hci_uart_tty_ioctl.base_1 : int;

procedure ULTIMATE.start() returns ()
modifies ~ldv_retval_14, v_rep#funAddr~h4_close.base_1, v_rep#funAddr~hci_uart_tty_open.base_1, v_rep#funAddr~ath_recv.offset_1, v_rep#funAddr~h5_open.base_1, v_rep#funAddr~bcm_close.offset_1, ~#ath_recv_pkts.offset, v_rep#funAddr~hci_uart_tty_wakeup.base_1, v_rep#funAddr~hci_uart_tty_close.offset_1, v_rep#funAddr~hci_uart_tty_read.base_1, ~ldv_retval_13, v_rep#funAddr~ll_open.base_1, ~#h5p.base, v_rep#funAddr~ath_setup.base_1, ~ldv_timer_list_4.offset, v_rep#funAddr~bcm_recv.base_1, ~ldv_work_struct_3_2.offset, v_rep#funAddr~bcm_setup.offset_1, ~#h4_recv_pkts.base, v_rep#funAddr~bcsp_enqueue.base_1, ~ldv_retval_12, ~ldv_spin, v_rep#funAddr~hci_uart_tty_poll.base_1, ~ldv_work_struct_3_0.base, ~hciextn, ~#__this_module.offset, ~ldv_work_3_3, ~h5p_group0.base, ~ldv_work_struct_3_1.base, ~ldv_state_variable_0, v_rep#funAddr~h4_open.base_1, v_rep#funAddr~h4_open.offset_1, ~ldv_retval_11, v_rep#funAddr~hci_uart_tty_receive.base_1, ~hup.offset, ~ref_cnt, ~ldv_work_3_2, ~h4p_group0.base, v_rep#funAddr~ath_flush.offset_1, ~#bcm_proto.base, v_rep#funAddr~bcsp_open.offset_1, v_rep#funAddr~ll_close.offset_1, v_rep#funAddr~hci_uart_tty_write.offset_1, ~ldv_state_variable_1, ~ldv_retval_10, v_rep#funAddr~hci_uart_tty_wakeup.offset_1, v_rep#funAddr~bcm_set_baudrate.offset_1, #memory_$Pointer$.base, v_rep#funAddr~ath_setup.offset_1, ~ldv_state_variable_10, v_rep#funAddr~h5_open.offset_1, ~ldv_work_struct_3_2.base, ~ldv_work_struct_3_3.offset, v_rep#funAddr~h5_recv.offset_1, v_rep#funAddr~hci_uart_tty_ioctl.offset_1, ~ldv_retval_0, v_rep#funAddr~ll_close.base_1, ~#bcsp.base, v_rep#funAddr~bcm_open.offset_1, ~#h5p.offset, v_rep#funAddr~h4_enqueue.base_1, ~ldv_timer_state_4, v_rep#funAddr~ll_enqueue.base_1, v_rep#funAddr~ll_recv.offset_1, v_rep#funAddr~ath_enqueue.offset_1, ~ldv_state_variable_11, v_rep#funAddr~hci_uart_tty_open.offset_1, v_rep#funAddr~ll_dequeue.base_1, v_rep#funAddr~hci_uart_tty_receive.offset_1, ~ldv_retval_1, v_rep#funAddr~bcsp_dequeue.base_1, ~ldv_work_struct_3_0.offset, ~#ath_recv_pkts.base, ~#bcm_proto.offset, v_rep#funAddr~hci_uart_tty_read.offset_1, v_rep#funAddr~bcm_setup.base_1, v_rep#funAddr~bcm_recv.offset_1, ~ldv_retval_2, ~athp_group0.base, v_rep#funAddr~bcm_open.base_1, ~#athp.base, v_rep#funAddr~h4_dequeue.base_1, v_rep#funAddr~ath_dequeue.base_1, v_rep#funAddr~ath_flush.base_1, ~#h4_recv_pkts.offset, v_rep#funAddr~ath_dequeue.offset_1, v_rep#funAddr~h5_close.offset_1, ~txcrc, ~ldv_retval_3, v_rep#funAddr~h5_dequeue.offset_1, ~bcm_proto_group0.offset, ~bcsp_group0.offset, v_rep#funAddr~hci_recv_frame.base_1, ~#h4p.base, v_rep#funAddr~h4_recv.base_1, v_rep#funAddr~ll_dequeue.offset_1, v_rep#funAddr~ll_open.offset_1, ~ldv_work_struct_2_0.base, v_rep#funAddr~h5_close.base_1, ~hup.base, ~ldv_retval_4, ~ldv_work_1_3, ~ldv_work_2_0, v_rep#funAddr~h5_enqueue.offset_1, v_rep#funAddr~ath_open.base_1, v_rep#funAddr~bcsp_recv.offset_1, v_rep#funAddr~bcm_close.base_1, ~ldv_state_variable_6, v_rep#funAddr~bcm_enqueue.base_1, ~crc_table, v_rep#funAddr~ath_open.offset_1, v_rep#funAddr~h4_enqueue.offset_1, ~ldv_retval_5, v_rep#funAddr~hci_recv_frame.offset_1, v_rep#funAddr~hci_uart_tty_poll.offset_1, ~ldv_work_struct_3_3.base, ~ldv_work_1_2, ~ldv_state_variable_8, ~ldv_state_variable_7, v_rep#funAddr~ll_recv.base_1, ~bcm_proto_group0.base, ~#bcm_recv_pkts.base, #memory_$Pointer$.offset, ~#__this_module.base, ~ldv_retval_6, v_rep#funAddr~h4_flush.offset_1, v_rep#funAddr~h5_enqueue.base_1, ~ldv_work_1_1, ~ldv_state_variable_9, ~#llp.offset, ~bcsp_group0.base, v_rep#funAddr~h4_flush.base_1, v_rep#funAddr~bcsp_dequeue.offset_1, v_rep#funAddr~ll_enqueue.offset_1, v_rep#funAddr~ll_flush.base_1, ~h5p_group0.offset, ~ldv_retval_7, v_rep#funAddr~ath_close.base_1, v_rep#funAddr~bcsp_open.base_1, v_rep#funAddr~bcsp_close.base_1, ~llp_group0.base, ~ldv_work_1_0, v_rep#funAddr~bcm_flush.offset_1, v_rep#funAddr~h5_recv.base_1, ~#bcm_recv_pkts.offset, ~ldv_work_struct_3_1.offset, v_rep#funAddr~bcsp_close.offset_1, #valid, ~#bcsp.offset, v_rep#funAddr~h4_dequeue.offset_1, ~ldv_retval_8, #NULL.offset, ~ldv_work_3_1, ~#h4p.offset, v_rep#funAddr~bcm_enqueue.offset_1, ~h4p_group0.offset, ~#llp.base, v_rep#funAddr~bcsp_flush.base_1, v_rep#funAddr~h5_dequeue.base_1, ~ldv_state_variable_2, v_rep#funAddr~h4_close.offset_1, ~ldv_work_struct_2_0.offset, #length, v_rep#funAddr~ll_flush.offset_1, v_rep#funAddr~hci_uart_tty_write.base_1, v_rep#funAddr~ath_enqueue.base_1, v_rep#funAddr~h5_flush.offset_1, v_rep#funAddr~bcm_flush.base_1, ~ldv_retval_9, ~ldv_work_struct_1_0.base, v_rep#funAddr~bcm_dequeue.offset_1, ~ldv_work_2_3, ~ldv_work_3_0, ~ldv_timer_list_4.base, ~ldv_state_variable_3, v_rep#funAddr~ath_recv.base_1, v_rep#funAddr~bcsp_enqueue.offset_1, v_rep#funAddr~h5_flush.base_1, v_rep#funAddr~bcm_dequeue.base_1, v_rep#funAddr~bcsp_flush.offset_1, ~ldv_work_2_2, ~llp_group0.offset, ~ldv_state_variable_4, v_rep#funAddr~hci_uart_tty_close.base_1, ~athp_group0.offset, v_rep#funAddr~h4_recv.offset_1, v_rep#funAddr~ath_close.offset_1, ~ldv_work_struct_1_0.offset, ~ldv_work_2_1, #NULL.base, ~ldv_state_variable_5, v_rep#funAddr~bcsp_recv.base_1, ~#athp.offset, v_rep#funAddr~bcm_set_baudrate.base_1, #memory_int, v_rep#funAddr~hci_uart_tty_ioctl.base_1;
{
    var bcsp_prepare_pkt_#t~mem820 : int;
    var bcsp_prepare_pkt_~len : int;
    var bcsp_prepare_pkt_#in~pkt_type : int;
    var #Ultimate.meminit_#ptr.base : int;
    var ULTIMATE.init_#t~nondet2376.offset : int;
    var read~$Pointer$_#value.offset : int;
    var ULTIMATE.init_#t~nondet2569.offset : int;
    var ULTIMATE.init_#t~nondet653.offset : int;
    var bcsp_dequeue_#t~mem844 : int;
    var write~int_#ptr.base : int;
    var bcsp_prepare_pkt_~bcsp___0.offset : int;
    var ldv_check_alloc_flags_#in~flags : int;
    var hci_uart_init_#t~ret522 : int;
    var ldv_memset_#in~s.offset : int;
    var bcsp_prepare_pkt_#t~mem817 : int;
    var bcsp_prepare_pkt_#t~mem831 : int;
    var ldv_main_exported_10_#t~ret1265.base : int;
    var ldv_initialize_hci_uart_proto_6_#t~ret2572.offset : int;
    var ldv_main_exported_10_#t~ret1266.offset : int;
    var write~int_old_#memory_$Pointer$.offset : [int][int]int;
    var bcsp_dequeue_#res.offset : int;
    var bcsp_prepare_pkt_~data.offset : int;
    var bcsp_prepare_pkt_~tmp___0~603 : int;
    var main_#t~nondet538 : int;
    var bcsp_prepare_pkt_#t~nondet786.offset : int;
    var ldv_initialize_hci_uart_proto_9_#t~ret1701.offset : int;
    var bcsp_dequeue_#t~mem835.offset : int;
    var bcsp_prepare_pkt_~data.base : int;
    var bt_err_#in~58.offset : int;
    var #Ultimate.alloc_old_#length : [int]int;
    var ldv_main_exported_10_#t~switch1255 : bool;
    var bcsp_prepare_pkt_#t~nondet805.offset : int;
    var write~$Pointer$_#ptr.base : int;
    var ULTIMATE.init_#t~nondet1884.base : int;
    var bcsp_prepare_pkt_~#descriptor___0~603.base : int;
    var write~int_#sizeOfWrittenType : int;
    var write~$Pointer$_#ptr.offset : int;
    var bcsp_dequeue_~tmp___0~632.base : int;
    var bcsp_dequeue_#t~mem833.base : int;
    var bcsp_dequeue_#t~mem835.base : int;
    var alloc_skb_#in~flags : int;
    var ldv_init_zalloc_#res.base : int;
    var ldv_memset_#res.offset : int;
    var bcsp_prepare_pkt_#t~mem828 : int;
    var write~int_#value : int;
    var tty_register_ldisc_#in~45 : int;
    var ldv_main_exported_10_#t~ret1263 : int;
    var ldv_initialize_hci_uart_proto_8_#t~ret1887.base : int;
    var ULTIMATE.init_#t~nondet1244.base : int;
    var bcsp_prepare_pkt_~nskb~603.base : int;
    var hci_uart_init_#t~ret518 : int;
    var #Ultimate.C_memset_#t~loopctr2683 : int;
    var ldv_main_exported_10_~tmp___0~772.base : int;
    var bcsp_dequeue_#t~ret838.base : int;
    var ldv_main_exported_10_#t~nondet1254 : int;
    var #Ultimate.alloc_old_#valid : [int]int;
    var ldv_main_exported_10_#t~mem1258 : int;
    var bcsp_dequeue_#t~nondet847.offset : int;
    var alloc_skb_#t~ret720.base : int;
    var write~int_#ptr.offset : int;
    var main_~tmp___0~367 : int;
    var bcsp_dequeue_#t~mem843 : int;
    var ldv_main_exported_10_~#ldvarg16~772.base : int;
    var hci_uart_init_#t~ret521 : int;
    var bcsp_dequeue_#t~ret834.base : int;
    var alloc_skb_~size : int;
    var bcsp_prepare_pkt_#in~data.offset : int;
    var bcsp_dequeue_#t~mem833.offset : int;
    var alloc_skb_~flags : int;
    var bcsp_prepare_pkt_#t~mem832 : int;
    var write~$Pointer$_old_#memory_$Pointer$.base : [int][int]int;
    var #Ultimate.alloc_~size : int;
    var bcsp_dequeue_~tmp~632.base : int;
    var bcsp_prepare_pkt_#t~nondet813.base : int;
    var hci_uart_init_#t~nondet517.base : int;
    var hci_uart_init_#t~ret520 : int;
    var bcsp_dequeue_#t~nondet847.base : int;
    var ldv_main_exported_10_~tmp___1~772 : int;
    var bcsp_dequeue_~nskb~632.offset : int;
    var ldv_main_exported_10_~ldvarg17~772.offset : int;
    var ldv_init_zalloc_~tmp~23.offset : int;
    var #Ultimate.meminit_#product : int;
    var #Ultimate.C_memset_#value : int;
    var ldv_main_exported_10_#t~ret1251.offset : int;
    var hci_uart_init_#t~memset503.base : int;
    var ldv_memset_~s.offset : int;
    var read~int_#ptr.offset : int;
    var #Ultimate.C_memset_#res.base : int;
    var bcsp_prepare_pkt_~desc~603 : int;
    var main_#t~switch539 : bool;
    var ldv_main_exported_10_#t~ret1264 : int;
    var bcsp_prepare_pkt_#t~mem806 : int;
    var alloc_skb_~tmp~534.offset : int;
    var ldv_memset_#in~n : int;
    var bcsp_dequeue_#t~ret845.offset : int;
    var bcsp_prepare_pkt_~#descriptor~603.base : int;
    var ldv_main_exported_10_#t~ret1253.offset : int;
    var bcsp_dequeue_~hu.base : int;
    var ldv_init_zalloc_~p~23.offset : int;
    var skb_dequeue_#in~557.base : int;
    var bcsp_dequeue_#t~ret849.base : int;
    var bcsp_prepare_pkt_~tmp___1~603 : int;
    var bcsp_dequeue_#t~mem842.base : int;
    var #Ultimate.meminit_#t~loopctr2684 : int;
    var bcsp_dequeue_#t~ret841.base : int;
    var ldv_main_exported_10_#t~ret1252.base : int;
    var alloc_skb_~tmp~534.base : int;
    var bcsp_dequeue_~tmp___1~632.base : int;
    var bcsp_prepare_pkt_#t~nondet793.offset : int;
    var ULTIMATE.init_#t~nondet1698.offset : int;
    var ldv_initialize_hci_uart_proto_11_#t~ret701.base : int;
    var #Ultimate.alloc_#res.offset : int;
    var main_#t~nondet536 : int;
    var ldv_initialize_hci_uart_proto_7_#t~ret2379.base : int;
    var bcsp_prepare_pkt_#t~nondet795.base : int;
    var bcsp_dequeue_#t~nondet839.base : int;
    var hci_uart_init_#t~nondet505.offset : int;
    var read~$Pointer$_#ptr.offset : int;
    var bcsp_prepare_pkt_#t~nondet805.base : int;
    var bcsp_dequeue_~tmp___0~632.offset : int;
    var ldv_initialize_hci_uart_proto_11_~tmp~503.offset : int;
    var bcsp_prepare_pkt_#res.offset : int;
    var hci_uart_init_#t~nondet505.base : int;
    var bcsp_prepare_pkt_#t~nondet793.base : int;
    var skb_dequeue_#res.base : int;
    var bcsp_prepare_pkt_#t~mem826 : int;
    var bcsp_prepare_pkt_~opcode~603 : int;
    var bcsp_prepare_pkt_~#descriptor___0~603.offset : int;
    var bcsp_prepare_pkt_#t~mem803 : int;
    var alloc_skb_#res.base : int;
    var ldv_initialize_hci_uart_proto_6_~tmp~1463.offset : int;
    var ldv_initialize_hci_uart_proto_8_#t~ret1887.offset : int;
    var read~$Pointer$_#value.base : int;
    var ldv_main_exported_10_~ldvarg18~772.base : int;
    var ldv_initialize_hci_uart_proto_6_#t~ret2572.base : int;
    var bcsp_prepare_pkt_#t~ret789.base : int;
    var alloc_skb_#res.offset : int;
    var hci_uart_init_#t~ret523 : int;
    var tty_register_ldisc_#res : int;
    var bcsp_prepare_pkt_~pkt_type : int;
    var ldv_initialize_hci_uart_proto_7_~tmp~1343.base : int;
    var ldv_initialize_hci_uart_proto_9_~tmp~928.offset : int;
    var bcsp_prepare_pkt_#t~nondet811.base : int;
    var ldv_initialize_hci_uart_proto_8_~tmp~1051.base : int;
    var ldv_init_zalloc_~p~23.base : int;
    var hci_uart_init_#t~nondet502.offset : int;
    var bcsp_prepare_pkt_#in~bcsp___0.base : int;
    var bcsp_dequeue_~skb~632.base : int;
    var ldv_main_exported_10_~ldvarg18~772.offset : int;
    var ldv_init_zalloc_#res.offset : int;
    var bcsp_prepare_pkt_#t~ret804 : int;
    var bcsp_prepare_pkt_~i~603 : int;
    var alloc_skb_#in~size : int;
    var bcsp_prepare_pkt_~rel~603 : int;
    var bcsp_dequeue_#t~ret846 : int;
    var bcsp_prepare_pkt_#t~nondet813.offset : int;
    var write~$Pointer$_#value.base : int;
    var bcsp_prepare_pkt_~#descriptor~603.offset : int;
    var bt_info_#in~57.base : int;
    var ldv_main_exported_10_#t~mem1260 : int;
    var bcsp_prepare_pkt_#t~nondet819.base : int;
    var #Ultimate.C_memset_#res.offset : int;
    var #Ultimate.meminit_#amountOfFields : int;
    var read~$Pointer$_#ptr.base : int;
    var bcsp_prepare_pkt_#t~nondet807.offset : int;
    var bcsp_dequeue_~nskb___0~632.base : int;
    var bcsp_prepare_pkt_#t~mem827 : int;
    var hci_uart_init_#t~ret519 : int;
    var ldv_main_exported_10_~tmp~772.base : int;
    var ldv_init_zalloc_#in~size : int;
    var ULTIMATE.init_#t~nondet2376.base : int;
    var read~int_#value : int;
    var bcsp_prepare_pkt_#t~ret789.offset : int;
    var ldv_initialize_hci_uart_proto_8_~tmp~1051.offset : int;
    var ldv_memset_~c : int;
    var bcsp_dequeue_#t~ret834.offset : int;
    var bcsp_prepare_pkt_#t~mem787 : int;
    var bcsp_prepare_pkt_#t~ret818 : int;
    var bcsp_dequeue_#t~mem848 : int;
    var main_~tmp~367 : int;
    var alloc_skb_#t~ret720.offset : int;
    var bcsp_dequeue_#t~mem840 : int;
    var bcsp_dequeue_#t~ret849.offset : int;
    var skb_dequeue_#in~557.offset : int;
    var ldv_initialize_hci_uart_proto_7_~tmp~1343.offset : int;
    var bcsp_prepare_pkt_~__x~603 : int;
    var ldv_memset_#in~c : int;
    var ULTIMATE.init_#t~nondet653.base : int;
    var bcsp_dequeue_#res.base : int;
    var bt_err_#in~58.base : int;
    var bcsp_dequeue_#t~mem837 : int;
    var ULTIMATE.dealloc_old_#valid : [int]int;
    var bcsp_dequeue_~tmp___1~632.offset : int;
    var read~int_#ptr.base : int;
    var hci_uart_init_#t~nondet517.offset : int;
    var ULTIMATE.init_#t~nondet1698.base : int;
    var ldv_main_exported_10_~tmp~772.offset : int;
    var bcsp_prepare_pkt_~#bcsp_txmsg_crc~603.offset : int;
    var ldv_init_zalloc_#t~malloc9.base : int;
    var bcsp_prepare_pkt_#t~nondet797.offset : int;
    var ldv_memset_~tmp~25.offset : int;
    var ULTIMATE.init_#t~nondet1244.offset : int;
    var bcsp_prepare_pkt_#t~mem824 : int;
    var ldv_initialize_hci_uart_proto_10_~tmp~764.offset : int;
    var ldv_initialize_hci_uart_proto_11_#t~ret701.offset : int;
    var ldv_main_exported_10_#t~ret1267 : int;
    var ldv_main_exported_10_#t~ret1265.offset : int;
    var hci_uart_init_~err~325 : int;
    var bcsp_dequeue_~nskb___0~632.offset : int;
    var #Ultimate.C_memset_#amount : int;
    var bcsp_prepare_pkt_#in~bcsp___0.offset : int;
    var bcsp_dequeue_~hu.offset : int;
    var bcsp_prepare_pkt_#t~mem788 : int;
    var bcsp_prepare_pkt_~bcsp___0.base : int;
    var ldv_initialize_hci_uart_proto_7_#t~ret2379.offset : int;
    var bcsp_dequeue_~bcsp___0~632.base : int;
    var ULTIMATE.dealloc_~addr.offset : int;
    var ldv_initialize_hci_uart_proto_9_#t~ret1701.base : int;
    var ldv_init_zalloc_~size : int;
    var write~$Pointer$_#value.offset : int;
    var bcsp_dequeue_#t~mem842.offset : int;
    var tty_register_ldisc_#in~46.base : int;
    var hci_uart_init_~#hci_uart_ldisc~325.offset : int;
    var hci_uart_init_#t~memset503.offset : int;
    var #Ultimate.meminit_#sizeOfFields : int;
    var ldv_main_exported_10_#t~ret1256 : int;
    var bcsp_dequeue_#in~hu.base : int;
    var bcsp_prepare_pkt_~nskb~603.offset : int;
    var ldv_main_exported_10_#t~ret1266.base : int;
    var bcsp_prepare_pkt_#t~mem791 : int;
    var ldv_init_zalloc_~tmp~23.base : int;
    var ULTIMATE.init_#t~nondet2569.base : int;
    var ldv_main_exported_10_~#ldvarg16~772.offset : int;
    var ldv_initialize_hci_uart_proto_10_#t~ret1250.base : int;
    var ldv_initialize_hci_uart_proto_10_#t~ret1250.offset : int;
    var read~int_#sizeOfReadType : int;
    var ldv_memset_#t~memset10.offset : int;
    var bcsp_prepare_pkt_#t~ret829 : int;
    var bcsp_prepare_pkt_~hdr~603 : [int]int;
    var bcsp_dequeue_#t~mem836 : int;
    var bcsp_prepare_pkt_#t~nondet819.offset : int;
    var bcsp_prepare_pkt_~#bcsp_txmsg_crc~603.base : int;
    var ldv_initialize_hci_uart_proto_11_~tmp~503.base : int;
    var hci_uart_init_#t~nondet502.base : int;
    var write~$Pointer$_old_#memory_$Pointer$.offset : [int][int]int;
    var main_#res : int;
    var bcsp_dequeue_~tmp~632.offset : int;
    var bcsp_prepare_pkt_#t~mem825 : int;
    var main_#t~ret540 : int;
    var #Ultimate.meminit_#ptr.offset : int;
    var write~$Pointer$_#sizeOfWrittenType : int;
    var bcsp_prepare_pkt_#t~nondet799.offset : int;
    var bcsp_dequeue_~nskb~632.base : int;
    var bcsp_dequeue_~nskb___1~632.offset : int;
    var bcsp_dequeue_#t~ret845.base : int;
    var hci_uart_init_#res : int;
    var bcsp_prepare_pkt_#in~data.base : int;
    var bcsp_prepare_pkt_#t~nondet809.offset : int;
    var bcsp_dequeue_#t~nondet839.offset : int;
    var write~$Pointer$_old_#memory_int : [int][int]int;
    var skb_dequeue_#res.offset : int;
    var ULTIMATE.dealloc_~addr.base : int;
    var ldv_memset_#res.base : int;
    var ldv_main_exported_10_#t~ret1251.base : int;
    var ldv_main_exported_10_#t~ret1253.base : int;
    var ldv_memset_#in~s.base : int;
    var ldv_initialize_hci_uart_proto_6_~tmp~1463.base : int;
    var #Ultimate.alloc_#res.base : int;
    var ldv_main_exported_10_#t~ret1257 : int;
    var bcsp_dequeue_#t~ret841.offset : int;
    var bcsp_dequeue_~flags~632 : int;
    var bcsp_prepare_pkt_#t~nondet797.base : int;
    var ULTIMATE.init_#t~nondet1884.offset : int;
    var bcsp_prepare_pkt_#t~nondet811.offset : int;
    var bcsp_prepare_pkt_#t~nondet799.base : int;
    var ldv_memset_~tmp~25.base : int;
    var tty_register_ldisc_#in~46.offset : int;
    var write~int_old_#memory_int : [int][int]int;
    var bcsp_prepare_pkt_#t~nondet786.base : int;
    var bcsp_prepare_pkt_#t~nondet807.base : int;
    var bcsp_prepare_pkt_#t~nondet809.base : int;
    var bt_info_#in~57.offset : int;
    var hci_uart_init_#t~ret516 : int;
    var bcsp_prepare_pkt_#res.base : int;
    var ldv_main_exported_10_#t~ret1261 : int;
    var bcsp_dequeue_~bcsp___0~632.offset : int;
    var ldv_initialize_hci_uart_proto_9_~tmp~928.base : int;
    var bcsp_prepare_pkt_#t~mem822 : int;
    var ldv_main_exported_10_~tmp___0~772.offset : int;
    var read~$Pointer$_#sizeOfReadType : int;
    var ldv_init_zalloc_#t~malloc9.offset : int;
    var #Ultimate.C_memset_#ptr.offset : int;
    var ldv_memset_~n : int;
    var bcsp_prepare_pkt_#in~len : int;
    var bcsp_prepare_pkt_~tmp~603 : int;
    var ldv_main_exported_10_#t~ret1252.offset : int;
    var bcsp_dequeue_#in~hu.offset : int;
    var ldv_main_exported_10_#t~ret1259 : int;
    var bcsp_dequeue_~nskb___1~632.base : int;
    var ldv_check_alloc_flags_~flags : int;
    var bcsp_prepare_pkt_#t~switch785 : bool;
    var write~int_old_#memory_$Pointer$.base : [int][int]int;
    var ldv_main_exported_10_~ldvarg17~772.base : int;
    var bcsp_dequeue_#t~ret838.offset : int;
    var bcsp_prepare_pkt_~chan~603 : int;
    var ldv_memset_~s.base : int;
    var ldv_memset_#t~memset10.base : int;
    var bcsp_prepare_pkt_#t~nondet795.offset : int;
    var #Ultimate.C_memset_#ptr.base : int;
    var main_#t~switch537 : bool;
    var ldv_main_exported_10_#t~ret1262 : int;
    var ldv_initialize_hci_uart_proto_10_~tmp~764.base : int;
    var hci_uart_init_~#hci_uart_ldisc~325.base : int;
    var bcsp_dequeue_~skb~632.offset : int;
    var bcsp_prepare_pkt_#t~mem823 : int;

  loc0:
    havoc ULTIMATE.init_#t~nondet1884.base, ULTIMATE.init_#t~nondet2376.base, ULTIMATE.init_#t~nondet653.offset, ULTIMATE.init_#t~nondet1884.offset, ULTIMATE.init_#t~nondet653.base, ULTIMATE.init_#t~nondet2569.base, ULTIMATE.init_#t~nondet2376.offset, ULTIMATE.init_#t~nondet1698.base, ULTIMATE.init_#t~nondet2569.offset, ULTIMATE.init_#t~nondet1244.offset, ULTIMATE.init_#t~nondet1244.base, ULTIMATE.init_#t~nondet1698.offset;
    #NULL.offset, #NULL.base := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_state_variable_8 := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_state_variable_5 := 0;
    ~ldv_work_1_1 := 0;
    ~ldv_work_3_2 := 0;
    ~ldv_work_3_0 := 0;
    ~ldv_state_variable_9 := 0;
    ~ldv_timer_state_4 := 0;
    ~ref_cnt := 0;
    ~ldv_work_3_3 := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_7 := 0;
    ~ldv_state_variable_10 := 0;
    ~ldv_work_1_3 := 0;
    ~ldv_state_variable_6 := 0;
    ~ldv_work_3_1 := 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_work_2_0 := 0;
    ~ldv_state_variable_11 := 0;
    ~ldv_work_1_2 := 0;
    ~ldv_work_2_2 := 0;
    ~ldv_state_variable_3 := 0;
    ~ldv_work_1_0 := 0;
    ~ldv_work_2_3 := 0;
    ~ldv_state_variable_4 := 0;
    ~ldv_work_2_1 := 0;
    ~ldv_retval_12 := 0;
    ~ldv_retval_4 := 0;
    ~ldv_retval_3 := 0;
    ~ldv_retval_14 := 0;
    ~ldv_retval_13 := 0;
    ~ldv_retval_8 := 0;
    ~ldv_retval_7 := 0;
    ~ldv_retval_11 := 0;
    ~ldv_retval_10 := 0;
    ~ldv_retval_9 := 0;
    ~ldv_retval_5 := 0;
    ~ldv_retval_6 := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_retval_2 := 0;
    ~ldv_spin := 0;
    ~ldv_timer_list_4.offset, ~ldv_timer_list_4.base := 0, 0;
    ~ldv_work_struct_3_1.offset, ~ldv_work_struct_3_1.base := 0, 0;
    ~llp_group0.base, ~llp_group0.offset := 0, 0;
    ~h5p_group0.offset, ~h5p_group0.base := 0, 0;
    ~ldv_work_struct_2_0.offset, ~ldv_work_struct_2_0.base := 0, 0;
    ~ldv_work_struct_3_3.base, ~ldv_work_struct_3_3.offset := 0, 0;
    ~ldv_work_struct_1_0.base, ~ldv_work_struct_1_0.offset := 0, 0;
    ~bcsp_group0.base, ~bcsp_group0.offset := 0, 0;
    ~ldv_work_struct_3_2.offset, ~ldv_work_struct_3_2.base := 0, 0;
    ~h4p_group0.base, ~h4p_group0.offset := 0, 0;
    ~ldv_work_struct_3_0.offset, ~ldv_work_struct_3_0.base := 0, 0;
    ~bcm_proto_group0.base, ~bcm_proto_group0.offset := 0, 0;
    ~athp_group0.offset, ~athp_group0.base := 0, 0;
    ~hup.base, ~hup.offset := ~hup.base[0 := 0], ~hup.offset[0 := 0];
    ~hup.base, ~hup.offset := ~hup.base[1 := 0], ~hup.offset[1 := 0];
    ~hup.base, ~hup.offset := ~hup.base[2 := 0], ~hup.offset[2 := 0];
    ~hup.base, ~hup.offset := ~hup.base[3 := 0], ~hup.offset[3 := 0];
    ~hup.base, ~hup.offset := ~hup.base[4 := 0], ~hup.offset[4 := 0];
    ~hup.base, ~hup.offset := ~hup.base[5 := 0], ~hup.offset[5 := 0];
    ~hup.base, ~hup.offset := ~hup.base[6 := 0], ~hup.offset[6 := 0];
    ~hup.base, ~hup.offset := ~hup.base[7 := 0], ~hup.offset[7 := 0];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 42;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#h4_recv_pkts.base, ~#h4_recv_pkts.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#h4_recv_pkts.base, 2, ~#h4_recv_pkts.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#h4_recv_pkts.base, 4, ~#h4_recv_pkts.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#h4_recv_pkts.base, 2, ~#h4_recv_pkts.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#h4_recv_pkts.base, 2, ~#h4_recv_pkts.offset + 3;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#h4_recv_pkts.base, 1028, ~#h4_recv_pkts.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_recv_frame.base_1, ~#h4_recv_pkts.offset + 6, 8, v_rep#funAddr~hci_recv_frame.offset_1, ~#h4_recv_pkts.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#h4_recv_pkts.base, 3, ~#h4_recv_pkts.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#h4_recv_pkts.base, 3, ~#h4_recv_pkts.offset + 15;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#h4_recv_pkts.base, 2, ~#h4_recv_pkts.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#h4_recv_pkts.base, 1, ~#h4_recv_pkts.offset + 17;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#h4_recv_pkts.base, 255, ~#h4_recv_pkts.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_recv_frame.base_1, ~#h4_recv_pkts.offset + 20, 8, v_rep#funAddr~hci_recv_frame.offset_1, ~#h4_recv_pkts.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#h4_recv_pkts.base, 4, ~#h4_recv_pkts.offset + 28;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#h4_recv_pkts.base, 2, ~#h4_recv_pkts.offset + 29;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#h4_recv_pkts.base, 1, ~#h4_recv_pkts.offset + 30;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#h4_recv_pkts.base, 1, ~#h4_recv_pkts.offset + 31;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#h4_recv_pkts.base, 260, ~#h4_recv_pkts.offset + 32;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_recv_frame.base_1, ~#h4_recv_pkts.offset + 34, 8, v_rep#funAddr~hci_recv_frame.offset_1, ~#h4_recv_pkts.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 84;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#h4p.base, ~#h4p.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#h4p.base, 0, ~#h4p.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 3;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet653.offset, ULTIMATE.init_#t~nondet653.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet653.base := #memory_int[ULTIMATE.init_#t~nondet653.base][ULTIMATE.init_#t~nondet653.offset := 72]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet653.base := #memory_int[ULTIMATE.init_#t~nondet653.base][ULTIMATE.init_#t~nondet653.offset + 1 := 52]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet653.base := #memory_int[ULTIMATE.init_#t~nondet653.base][ULTIMATE.init_#t~nondet653.offset + 2 := 0]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet653.base, ~#h4p.offset + 4, 8, ULTIMATE.init_#t~nondet653.offset, ~#h4p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#h4p.base, 0, ~#h4p.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#h4p.base, 0, ~#h4p.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~h4_open.base_1, ~#h4p.offset + 20, 8, v_rep#funAddr~h4_open.offset_1, ~#h4p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~h4_close.base_1, ~#h4p.offset + 28, 8, v_rep#funAddr~h4_close.offset_1, ~#h4p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~h4_flush.base_1, ~#h4p.offset + 36, 8, v_rep#funAddr~h4_flush.offset_1, ~#h4p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#h4p.offset + 44, 8, 0, ~#h4p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#h4p.offset + 52, 8, 0, ~#h4p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~h4_recv.base_1, ~#h4p.offset + 60, 8, v_rep#funAddr~h4_recv.offset_1, ~#h4p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~h4_enqueue.base_1, ~#h4p.offset + 68, 8, v_rep#funAddr~h4_enqueue.offset_1, ~#h4p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~h4_dequeue.base_1, ~#h4p.offset + 76, 8, v_rep#funAddr~h4_dequeue.offset_1, ~#h4p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    havoc ULTIMATE.init_#t~nondet653.offset, ULTIMATE.init_#t~nondet653.base;
    ~txcrc := 1;
    ~hciextn := 1;
    ~crc_table := ~crc_table[0 := 0];
    ~crc_table := ~crc_table[1 := 4225];
    ~crc_table := ~crc_table[2 := 8450];
    ~crc_table := ~crc_table[3 := 12675];
    ~crc_table := ~crc_table[4 := 16900];
    ~crc_table := ~crc_table[5 := 21125];
    ~crc_table := ~crc_table[6 := 25350];
    ~crc_table := ~crc_table[7 := 29575];
    ~crc_table := ~crc_table[8 := 33800];
    ~crc_table := ~crc_table[9 := 38025];
    ~crc_table := ~crc_table[10 := 42250];
    ~crc_table := ~crc_table[11 := 46475];
    ~crc_table := ~crc_table[12 := 50700];
    ~crc_table := ~crc_table[13 := 54925];
    ~crc_table := ~crc_table[14 := 59150];
    ~crc_table := ~crc_table[15 := 63375];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 84;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#bcsp.offset, ~#bcsp.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#bcsp.base, 1, ~#bcsp.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 5;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet1244.offset, ULTIMATE.init_#t~nondet1244.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1244.base := #memory_int[ULTIMATE.init_#t~nondet1244.base][ULTIMATE.init_#t~nondet1244.offset := 66]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1244.base := #memory_int[ULTIMATE.init_#t~nondet1244.base][ULTIMATE.init_#t~nondet1244.offset + 1 := 67]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1244.base := #memory_int[ULTIMATE.init_#t~nondet1244.base][ULTIMATE.init_#t~nondet1244.offset + 2 := 83]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1244.base := #memory_int[ULTIMATE.init_#t~nondet1244.base][ULTIMATE.init_#t~nondet1244.offset + 3 := 80]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1244.base := #memory_int[ULTIMATE.init_#t~nondet1244.base][ULTIMATE.init_#t~nondet1244.offset + 4 := 0]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet1244.base, ~#bcsp.offset + 4, 8, ULTIMATE.init_#t~nondet1244.offset, ~#bcsp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#bcsp.base, 0, ~#bcsp.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#bcsp.base, 0, ~#bcsp.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcsp_open.base_1, ~#bcsp.offset + 20, 8, v_rep#funAddr~bcsp_open.offset_1, ~#bcsp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcsp_close.base_1, ~#bcsp.offset + 28, 8, v_rep#funAddr~bcsp_close.offset_1, ~#bcsp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcsp_flush.base_1, ~#bcsp.offset + 36, 8, v_rep#funAddr~bcsp_flush.offset_1, ~#bcsp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#bcsp.offset + 44, 8, 0, ~#bcsp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#bcsp.offset + 52, 8, 0, ~#bcsp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcsp_recv.base_1, ~#bcsp.offset + 60, 8, v_rep#funAddr~bcsp_recv.offset_1, ~#bcsp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcsp_enqueue.base_1, ~#bcsp.offset + 68, 8, v_rep#funAddr~bcsp_enqueue.offset_1, ~#bcsp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcsp_dequeue.base_1, ~#bcsp.offset + 76, 8, v_rep#funAddr~bcsp_dequeue.offset_1, ~#bcsp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    havoc ULTIMATE.init_#t~nondet1244.offset, ULTIMATE.init_#t~nondet1244.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 84;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#llp.offset, ~#llp.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#llp.base, 4, ~#llp.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 3;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet1698.base, ULTIMATE.init_#t~nondet1698.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1698.base := #memory_int[ULTIMATE.init_#t~nondet1698.base][ULTIMATE.init_#t~nondet1698.offset := 76]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1698.base := #memory_int[ULTIMATE.init_#t~nondet1698.base][ULTIMATE.init_#t~nondet1698.offset + 1 := 76]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1698.base := #memory_int[ULTIMATE.init_#t~nondet1698.base][ULTIMATE.init_#t~nondet1698.offset + 2 := 0]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet1698.base, ~#llp.offset + 4, 8, ULTIMATE.init_#t~nondet1698.offset, ~#llp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#llp.base, 0, ~#llp.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#llp.base, 0, ~#llp.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ll_open.base_1, ~#llp.offset + 20, 8, v_rep#funAddr~ll_open.offset_1, ~#llp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ll_close.base_1, ~#llp.offset + 28, 8, v_rep#funAddr~ll_close.offset_1, ~#llp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ll_flush.base_1, ~#llp.offset + 36, 8, v_rep#funAddr~ll_flush.offset_1, ~#llp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#llp.offset + 44, 8, 0, ~#llp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#llp.offset + 52, 8, 0, ~#llp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ll_recv.base_1, ~#llp.offset + 60, 8, v_rep#funAddr~ll_recv.offset_1, ~#llp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ll_enqueue.base_1, ~#llp.offset + 68, 8, v_rep#funAddr~ll_enqueue.offset_1, ~#llp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ll_dequeue.base_1, ~#llp.offset + 76, 8, v_rep#funAddr~ll_dequeue.offset_1, ~#llp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    havoc ULTIMATE.init_#t~nondet1698.base, ULTIMATE.init_#t~nondet1698.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 42;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#ath_recv_pkts.offset, ~#ath_recv_pkts.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#ath_recv_pkts.base, 2, ~#ath_recv_pkts.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#ath_recv_pkts.base, 4, ~#ath_recv_pkts.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#ath_recv_pkts.base, 2, ~#ath_recv_pkts.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#ath_recv_pkts.base, 2, ~#ath_recv_pkts.offset + 3;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#ath_recv_pkts.base, 1028, ~#ath_recv_pkts.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_recv_frame.base_1, ~#ath_recv_pkts.offset + 6, 8, v_rep#funAddr~hci_recv_frame.offset_1, ~#ath_recv_pkts.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#ath_recv_pkts.base, 3, ~#ath_recv_pkts.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#ath_recv_pkts.base, 3, ~#ath_recv_pkts.offset + 15;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#ath_recv_pkts.base, 2, ~#ath_recv_pkts.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#ath_recv_pkts.base, 1, ~#ath_recv_pkts.offset + 17;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#ath_recv_pkts.base, 255, ~#ath_recv_pkts.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_recv_frame.base_1, ~#ath_recv_pkts.offset + 20, 8, v_rep#funAddr~hci_recv_frame.offset_1, ~#ath_recv_pkts.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#ath_recv_pkts.base, 4, ~#ath_recv_pkts.offset + 28;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#ath_recv_pkts.base, 2, ~#ath_recv_pkts.offset + 29;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#ath_recv_pkts.base, 1, ~#ath_recv_pkts.offset + 30;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#ath_recv_pkts.base, 1, ~#ath_recv_pkts.offset + 31;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#ath_recv_pkts.base, 260, ~#ath_recv_pkts.offset + 32;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_recv_frame.base_1, ~#ath_recv_pkts.offset + 34, 8, v_rep#funAddr~hci_recv_frame.offset_1, ~#ath_recv_pkts.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 84;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#athp.offset, ~#athp.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#athp.base, 5, ~#athp.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 6;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet1884.base, ULTIMATE.init_#t~nondet1884.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1884.base := #memory_int[ULTIMATE.init_#t~nondet1884.base][ULTIMATE.init_#t~nondet1884.offset := 65]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1884.base := #memory_int[ULTIMATE.init_#t~nondet1884.base][ULTIMATE.init_#t~nondet1884.offset + 1 := 84]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1884.base := #memory_int[ULTIMATE.init_#t~nondet1884.base][ULTIMATE.init_#t~nondet1884.offset + 2 := 72]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1884.base := #memory_int[ULTIMATE.init_#t~nondet1884.base][ULTIMATE.init_#t~nondet1884.offset + 3 := 51]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1884.base := #memory_int[ULTIMATE.init_#t~nondet1884.base][ULTIMATE.init_#t~nondet1884.offset + 4 := 75]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1884.base := #memory_int[ULTIMATE.init_#t~nondet1884.base][ULTIMATE.init_#t~nondet1884.offset + 5 := 0]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet1884.base, ~#athp.offset + 4, 8, ULTIMATE.init_#t~nondet1884.offset, ~#athp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#athp.base, 0, ~#athp.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#athp.base, 0, ~#athp.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ath_open.base_1, ~#athp.offset + 20, 8, v_rep#funAddr~ath_open.offset_1, ~#athp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ath_close.base_1, ~#athp.offset + 28, 8, v_rep#funAddr~ath_close.offset_1, ~#athp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ath_flush.base_1, ~#athp.offset + 36, 8, v_rep#funAddr~ath_flush.offset_1, ~#athp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ath_setup.base_1, ~#athp.offset + 44, 8, v_rep#funAddr~ath_setup.offset_1, ~#athp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#athp.offset + 52, 8, 0, ~#athp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ath_recv.base_1, ~#athp.offset + 60, 8, v_rep#funAddr~ath_recv.offset_1, ~#athp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ath_enqueue.base_1, ~#athp.offset + 68, 8, v_rep#funAddr~ath_enqueue.offset_1, ~#athp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ath_dequeue.base_1, ~#athp.offset + 76, 8, v_rep#funAddr~ath_dequeue.offset_1, ~#athp.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    havoc ULTIMATE.init_#t~nondet1884.base, ULTIMATE.init_#t~nondet1884.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 84;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#h5p.base, ~#h5p.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#h5p.base, 2, ~#h5p.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 16;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet2376.base, ULTIMATE.init_#t~nondet2376.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet2376.base, ~#h5p.offset + 4, 8, ULTIMATE.init_#t~nondet2376.offset, ~#h5p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#h5p.base, 0, ~#h5p.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#h5p.base, 0, ~#h5p.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~h5_open.base_1, ~#h5p.offset + 20, 8, v_rep#funAddr~h5_open.offset_1, ~#h5p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~h5_close.base_1, ~#h5p.offset + 28, 8, v_rep#funAddr~h5_close.offset_1, ~#h5p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~h5_flush.base_1, ~#h5p.offset + 36, 8, v_rep#funAddr~h5_flush.offset_1, ~#h5p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#h5p.offset + 44, 8, 0, ~#h5p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#h5p.offset + 52, 8, 0, ~#h5p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~h5_recv.base_1, ~#h5p.offset + 60, 8, v_rep#funAddr~h5_recv.offset_1, ~#h5p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~h5_enqueue.base_1, ~#h5p.offset + 68, 8, v_rep#funAddr~h5_enqueue.offset_1, ~#h5p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~h5_dequeue.base_1, ~#h5p.offset + 76, 8, v_rep#funAddr~h5_dequeue.offset_1, ~#h5p.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    havoc ULTIMATE.init_#t~nondet2376.base, ULTIMATE.init_#t~nondet2376.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 42;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#bcm_recv_pkts.offset, ~#bcm_recv_pkts.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#bcm_recv_pkts.base, 2, ~#bcm_recv_pkts.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#bcm_recv_pkts.base, 4, ~#bcm_recv_pkts.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#bcm_recv_pkts.base, 2, ~#bcm_recv_pkts.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#bcm_recv_pkts.base, 2, ~#bcm_recv_pkts.offset + 3;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#bcm_recv_pkts.base, 1028, ~#bcm_recv_pkts.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_recv_frame.base_1, ~#bcm_recv_pkts.offset + 6, 8, v_rep#funAddr~hci_recv_frame.offset_1, ~#bcm_recv_pkts.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#bcm_recv_pkts.base, 3, ~#bcm_recv_pkts.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#bcm_recv_pkts.base, 3, ~#bcm_recv_pkts.offset + 15;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#bcm_recv_pkts.base, 2, ~#bcm_recv_pkts.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#bcm_recv_pkts.base, 1, ~#bcm_recv_pkts.offset + 17;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#bcm_recv_pkts.base, 255, ~#bcm_recv_pkts.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_recv_frame.base_1, ~#bcm_recv_pkts.offset + 20, 8, v_rep#funAddr~hci_recv_frame.offset_1, ~#bcm_recv_pkts.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#bcm_recv_pkts.base, 4, ~#bcm_recv_pkts.offset + 28;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#bcm_recv_pkts.base, 2, ~#bcm_recv_pkts.offset + 29;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#bcm_recv_pkts.base, 1, ~#bcm_recv_pkts.offset + 30;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#bcm_recv_pkts.base, 1, ~#bcm_recv_pkts.offset + 31;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#bcm_recv_pkts.base, 260, ~#bcm_recv_pkts.offset + 32;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_recv_frame.base_1, ~#bcm_recv_pkts.offset + 34, 8, v_rep#funAddr~hci_recv_frame.offset_1, ~#bcm_recv_pkts.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 84;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#bcm_proto.base, ~#bcm_proto.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#bcm_proto.base, 7, ~#bcm_proto.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet2569.base, ULTIMATE.init_#t~nondet2569.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet2569.base := #memory_int[ULTIMATE.init_#t~nondet2569.base][ULTIMATE.init_#t~nondet2569.offset := 66]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet2569.base := #memory_int[ULTIMATE.init_#t~nondet2569.base][ULTIMATE.init_#t~nondet2569.offset + 1 := 67]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet2569.base := #memory_int[ULTIMATE.init_#t~nondet2569.base][ULTIMATE.init_#t~nondet2569.offset + 2 := 77]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet2569.base := #memory_int[ULTIMATE.init_#t~nondet2569.base][ULTIMATE.init_#t~nondet2569.offset + 3 := 0]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet2569.base, ~#bcm_proto.offset + 4, 8, ULTIMATE.init_#t~nondet2569.offset, ~#bcm_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#bcm_proto.base, 115200, ~#bcm_proto.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#bcm_proto.base, 4000000, ~#bcm_proto.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcm_open.base_1, ~#bcm_proto.offset + 20, 8, v_rep#funAddr~bcm_open.offset_1, ~#bcm_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcm_close.base_1, ~#bcm_proto.offset + 28, 8, v_rep#funAddr~bcm_close.offset_1, ~#bcm_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcm_flush.base_1, ~#bcm_proto.offset + 36, 8, v_rep#funAddr~bcm_flush.offset_1, ~#bcm_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcm_setup.base_1, ~#bcm_proto.offset + 44, 8, v_rep#funAddr~bcm_setup.offset_1, ~#bcm_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcm_set_baudrate.base_1, ~#bcm_proto.offset + 52, 8, v_rep#funAddr~bcm_set_baudrate.offset_1, ~#bcm_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcm_recv.base_1, ~#bcm_proto.offset + 60, 8, v_rep#funAddr~bcm_recv.offset_1, ~#bcm_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcm_enqueue.base_1, ~#bcm_proto.offset + 68, 8, v_rep#funAddr~bcm_enqueue.offset_1, ~#bcm_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~bcm_dequeue.base_1, ~#bcm_proto.offset + 76, 8, v_rep#funAddr~bcm_dequeue.offset_1, ~#bcm_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    havoc ULTIMATE.init_#t~nondet2569.base, ULTIMATE.init_#t~nondet2569.offset;
    havoc main_#res;
    havoc main_#t~nondet536, main_~tmp~367, main_#t~nondet538, main_#t~switch537, main_#t~switch539, main_#t~ret540, main_~tmp___0~367;
    havoc main_~tmp~367;
    havoc main_~tmp___0~367;
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_11 := 0;
    ~ldv_work_3_0 := 0;
    ~ldv_work_3_1 := 0;
    ~ldv_work_3_2 := 0;
    ~ldv_work_3_3 := 0;
    ~ldv_state_variable_3 := 1;
    ~ldv_state_variable_7 := 0;
    ~ldv_state_variable_9 := 0;
    ~ldv_work_2_0 := 0;
    ~ldv_work_2_1 := 0;
    ~ldv_work_2_2 := 0;
    ~ldv_work_2_3 := 0;
    ~ldv_state_variable_2 := 1;
    ~ldv_state_variable_8 := 0;
    ~ldv_work_1_0 := 0;
    ~ldv_work_1_1 := 0;
    ~ldv_work_1_2 := 0;
    ~ldv_work_1_3 := 0;
    ~ldv_state_variable_1 := 1;
    ~ldv_state_variable_4 := 1;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_10 := 0;
    ~ldv_state_variable_5 := 1;
    goto loc1;
  loc1:
    assume 0 <= main_#t~nondet536 + 2147483648 && main_#t~nondet536 <= 2147483647;
    main_~tmp~367 := main_#t~nondet536;
    havoc main_#t~nondet536;
    assume !(main_~tmp~367 == 0);
    main_#t~switch537 := false;
    assume !main_#t~switch537;
    assume !main_#t~switch537 && !(main_~tmp~367 == 1);
    main_#t~switch537 := false;
    assume !main_#t~switch537;
    assume !main_#t~switch537 && !(main_~tmp~367 == 2);
    main_#t~switch537 := false;
    assume !main_#t~switch537;
    assume !(main_~tmp~367 == 3) && !main_#t~switch537;
    main_#t~switch537 := false;
    assume !main_#t~switch537;
    assume !(main_~tmp~367 == 4) && !main_#t~switch537;
    main_#t~switch537 := false;
    assume !main_#t~switch537;
    assume !(main_~tmp~367 == 5) && !main_#t~switch537;
    main_#t~switch537 := false;
    assume !main_#t~switch537;
    assume !main_#t~switch537 && !(main_~tmp~367 == 6);
    main_#t~switch537 := false;
    assume !main_#t~switch537;
    assume !main_#t~switch537 && !(main_~tmp~367 == 7);
    main_#t~switch537 := false;
    assume !main_#t~switch537;
    assume !(main_~tmp~367 == 8) && !main_#t~switch537;
    main_#t~switch537 := false;
    assume !main_#t~switch537;
    goto loc2;
  loc2:
    goto loc2_0, loc2_1;
  loc2_0:
    assume main_~tmp~367 == 9;
    main_#t~switch537 := true;
    goto loc3;
  loc2_1:
    assume !(main_~tmp~367 == 9) && !main_#t~switch537;
    main_#t~switch537 := false;
    goto loc3;
  loc3:
    goto loc3_0, loc3_1;
  loc3_0:
    assume !main_#t~switch537;
    assume main_~tmp~367 == 10;
    main_#t~switch537 := true;
    assume main_#t~switch537;
    assume !(~ldv_state_variable_10 == 0);
    havoc ldv_main_exported_10_#t~ret1253.offset, ldv_main_exported_10_~tmp___0~772.base, ldv_main_exported_10_#t~nondet1254, ldv_main_exported_10_~ldvarg18~772.base, ldv_main_exported_10_#t~mem1258, ldv_main_exported_10_~tmp___0~772.offset, ldv_main_exported_10_~#ldvarg16~772.base, ldv_main_exported_10_#t~ret1252.base, ldv_main_exported_10_#t~ret1251.base, ldv_main_exported_10_#t~ret1252.offset, ldv_main_exported_10_#t~ret1253.base, ldv_main_exported_10_#t~ret1256, ldv_main_exported_10_#t~ret1257, ldv_main_exported_10_#t~ret1259, ldv_main_exported_10_#t~ret1265.base, ldv_main_exported_10_#t~ret1266.base, ldv_main_exported_10_#t~ret1266.offset, ldv_main_exported_10_~#ldvarg16~772.offset, ldv_main_exported_10_~ldvarg17~772.base, ldv_main_exported_10_~ldvarg18~772.offset, ldv_main_exported_10_~tmp___1~772, ldv_main_exported_10_#t~switch1255, ldv_main_exported_10_~ldvarg17~772.offset, ldv_main_exported_10_#t~ret1251.offset, ldv_main_exported_10_#t~mem1260, ldv_main_exported_10_#t~ret1261, ldv_main_exported_10_#t~ret1262, ldv_main_exported_10_~tmp~772.offset, ldv_main_exported_10_#t~ret1263, ldv_main_exported_10_#t~ret1264, ldv_main_exported_10_~tmp~772.base, ldv_main_exported_10_#t~ret1267, ldv_main_exported_10_#t~ret1265.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_main_exported_10_~#ldvarg16~772.base, ldv_main_exported_10_~#ldvarg16~772.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc ldv_main_exported_10_~ldvarg17~772.base, ldv_main_exported_10_~ldvarg17~772.offset;
    havoc ldv_main_exported_10_~tmp~772.offset, ldv_main_exported_10_~tmp~772.base;
    havoc ldv_main_exported_10_~ldvarg18~772.base, ldv_main_exported_10_~ldvarg18~772.offset;
    havoc ldv_main_exported_10_~tmp___0~772.base, ldv_main_exported_10_~tmp___0~772.offset;
    havoc ldv_main_exported_10_~tmp___1~772;
    ldv_init_zalloc_#in~size := 1;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~size, ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~p~23.offset, ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (ldv_init_zalloc_~size < 0 && -4294967296 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size + 2147483649 <= 0;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size + 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    assume (ldv_init_zalloc_~size < 0 && ldv_init_zalloc_~size + 2147483649 <= 0) && -4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size + 4294967296), ldv_init_zalloc_#t~malloc9.base, 1, ldv_init_zalloc_~size + 4294967296, ldv_init_zalloc_#t~malloc9.offset;
    havoc #Ultimate.meminit_#t~loopctr2684;
    #Ultimate.meminit_#t~loopctr2684 := 0;
    assume !(#Ultimate.meminit_#t~loopctr2684 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base := ldv_init_zalloc_#t~malloc9.offset, ldv_init_zalloc_#t~malloc9.base;
    ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset := ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~tmp~23.offset;
    assume ldv_init_zalloc_~p~23.base + ldv_init_zalloc_~p~23.offset < -18446744073709551616 && !((ldv_init_zalloc_~p~23.base + ldv_init_zalloc_~p~23.offset) % 18446744073709551616 == 0);
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    ldv_main_exported_10_#t~ret1251.offset, ldv_main_exported_10_#t~ret1251.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    ldv_main_exported_10_~tmp~772.offset, ldv_main_exported_10_~tmp~772.base := ldv_main_exported_10_#t~ret1251.offset, ldv_main_exported_10_#t~ret1251.base;
    havoc ldv_main_exported_10_#t~ret1251.offset, ldv_main_exported_10_#t~ret1251.base;
    ldv_main_exported_10_~ldvarg17~772.base, ldv_main_exported_10_~ldvarg17~772.offset := ldv_main_exported_10_~tmp~772.base, ldv_main_exported_10_~tmp~772.offset;
    ldv_init_zalloc_#in~size := 232;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~size, ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~p~23.offset, ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume ldv_init_zalloc_~size < -4294967296 && ldv_init_zalloc_~size % 4294967296 <= 2147483647;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size % 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    assume ldv_init_zalloc_~size < -4294967296 && ldv_init_zalloc_~size % 4294967296 <= 2147483647;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size % 4294967296), ldv_init_zalloc_#t~malloc9.base, 1, ldv_init_zalloc_~size % 4294967296, ldv_init_zalloc_#t~malloc9.offset;
    havoc #Ultimate.meminit_#t~loopctr2684;
    #Ultimate.meminit_#t~loopctr2684 := 0;
    assume !(#Ultimate.meminit_#t~loopctr2684 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base := ldv_init_zalloc_#t~malloc9.offset, ldv_init_zalloc_#t~malloc9.base;
    ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset := ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~tmp~23.offset;
    assume ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base < -18446744073709551616 && !((ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base) % 18446744073709551616 == 0);
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    ldv_main_exported_10_#t~ret1252.base, ldv_main_exported_10_#t~ret1252.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    ldv_main_exported_10_~tmp___0~772.base, ldv_main_exported_10_~tmp___0~772.offset := ldv_main_exported_10_#t~ret1252.base, ldv_main_exported_10_#t~ret1252.offset;
    havoc ldv_main_exported_10_#t~ret1252.base, ldv_main_exported_10_#t~ret1252.offset;
    ldv_main_exported_10_~ldvarg18~772.base, ldv_main_exported_10_~ldvarg18~772.offset := ldv_main_exported_10_~tmp___0~772.base, ldv_main_exported_10_~tmp___0~772.offset;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, ldv_main_exported_10_~#ldvarg16~772.offset, ldv_main_exported_10_~#ldvarg16~772.base, 4;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_#t~memset10.base, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~tmp~25.base, ldv_memset_~tmp~25.offset, ldv_memset_#t~memset10.offset, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~25.base, ldv_memset_~tmp~25.offset;
    assume (ldv_memset_~n < 4294967296 + 4294967296 && 4294967296 <= ldv_memset_~n) && !(ldv_memset_~n <= 6442450943);
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n - 4294967296 - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr2683;
    #Ultimate.C_memset_#t~loopctr2683 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr2683 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset10.base, ldv_memset_#t~memset10.offset := #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    ldv_memset_~tmp~25.base, ldv_memset_~tmp~25.offset := ldv_memset_~s.base, ldv_memset_~s.offset;
    havoc ldv_memset_#t~memset10.base, ldv_memset_#t~memset10.offset;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~25.offset, ldv_memset_~tmp~25.base;
    ldv_main_exported_10_#t~ret1253.offset, ldv_main_exported_10_#t~ret1253.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_main_exported_10_#t~ret1253.offset, ldv_main_exported_10_#t~ret1253.base;
    assume ldv_main_exported_10_#t~nondet1254 <= 2147483647 && 0 <= ldv_main_exported_10_#t~nondet1254 + 2147483648;
    ldv_main_exported_10_~tmp___1~772 := ldv_main_exported_10_#t~nondet1254;
    havoc ldv_main_exported_10_#t~nondet1254;
    assume !(ldv_main_exported_10_~tmp___1~772 == 0);
    ldv_main_exported_10_#t~switch1255 := false;
    assume !ldv_main_exported_10_#t~switch1255;
    assume !(ldv_main_exported_10_~tmp___1~772 == 1) && !ldv_main_exported_10_#t~switch1255;
    ldv_main_exported_10_#t~switch1255 := false;
    assume !ldv_main_exported_10_#t~switch1255;
    assume !(ldv_main_exported_10_~tmp___1~772 == 2) && !ldv_main_exported_10_#t~switch1255;
    ldv_main_exported_10_#t~switch1255 := false;
    assume !ldv_main_exported_10_#t~switch1255;
    assume !ldv_main_exported_10_#t~switch1255 && !(ldv_main_exported_10_~tmp___1~772 == 3);
    ldv_main_exported_10_#t~switch1255 := false;
    assume !ldv_main_exported_10_#t~switch1255;
    assume ldv_main_exported_10_~tmp___1~772 == 4;
    ldv_main_exported_10_#t~switch1255 := true;
    assume ldv_main_exported_10_#t~switch1255;
    assume ~ldv_state_variable_10 == 1;
    bcsp_dequeue_#in~hu.base, bcsp_dequeue_#in~hu.offset := ~bcsp_group0.base, ~bcsp_group0.offset;
    havoc bcsp_dequeue_#res.base, bcsp_dequeue_#res.offset;
    havoc bcsp_dequeue_~nskb___0~632.offset, bcsp_dequeue_#t~ret838.base, bcsp_dequeue_~nskb~632.base, bcsp_dequeue_~hu.base, bcsp_dequeue_~hu.offset, bcsp_dequeue_~nskb___1~632.offset, bcsp_dequeue_#t~ret845.base, bcsp_dequeue_#t~nondet847.offset, bcsp_dequeue_#t~ret834.offset, bcsp_dequeue_#t~ret849.base, bcsp_dequeue_#t~mem848, bcsp_dequeue_~bcsp___0~632.base, bcsp_dequeue_#t~mem842.base, bcsp_dequeue_#t~ret841.base, bcsp_dequeue_#t~mem843, bcsp_dequeue_#t~mem844, bcsp_dequeue_#t~nondet839.offset, bcsp_dequeue_#t~ret834.base, bcsp_dequeue_#t~mem840, bcsp_dequeue_#t~mem842.offset, bcsp_dequeue_#t~ret849.offset, bcsp_dequeue_~tmp___1~632.base, bcsp_dequeue_#t~mem833.offset, bcsp_dequeue_#t~ret841.offset, bcsp_dequeue_~flags~632, bcsp_dequeue_~nskb___1~632.base, bcsp_dequeue_~tmp~632.base, bcsp_dequeue_#t~nondet839.base, bcsp_dequeue_#t~ret838.offset, bcsp_dequeue_#t~nondet847.base, bcsp_dequeue_~skb~632.base, bcsp_dequeue_#t~mem835.offset, bcsp_dequeue_#t~mem836, bcsp_dequeue_~nskb~632.offset, bcsp_dequeue_#t~mem837, bcsp_dequeue_~tmp___0~632.offset, bcsp_dequeue_#t~ret846, bcsp_dequeue_~tmp___0~632.base, bcsp_dequeue_#t~mem833.base, bcsp_dequeue_#t~mem835.base, bcsp_dequeue_~tmp___1~632.offset, bcsp_dequeue_~nskb___0~632.base, bcsp_dequeue_~bcsp___0~632.offset, bcsp_dequeue_~tmp~632.offset, bcsp_dequeue_#t~ret845.offset, bcsp_dequeue_~skb~632.offset;
    bcsp_dequeue_~hu.base, bcsp_dequeue_~hu.offset := bcsp_dequeue_#in~hu.base, bcsp_dequeue_#in~hu.offset;
    havoc bcsp_dequeue_~bcsp___0~632.offset, bcsp_dequeue_~bcsp___0~632.base;
    havoc bcsp_dequeue_~flags~632;
    havoc bcsp_dequeue_~skb~632.base, bcsp_dequeue_~skb~632.offset;
    havoc bcsp_dequeue_~nskb~632.base, bcsp_dequeue_~nskb~632.offset;
    havoc bcsp_dequeue_~tmp~632.base, bcsp_dequeue_~tmp~632.offset;
    havoc bcsp_dequeue_~nskb___0~632.offset, bcsp_dequeue_~nskb___0~632.base;
    havoc bcsp_dequeue_~tmp___0~632.offset, bcsp_dequeue_~tmp___0~632.base;
    havoc bcsp_dequeue_~nskb___1~632.base, bcsp_dequeue_~nskb___1~632.offset;
    havoc bcsp_dequeue_~tmp___1~632.offset, bcsp_dequeue_~tmp___1~632.base;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := bcsp_dequeue_~hu.base, 8, bcsp_dequeue_~hu.offset + 192;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    bcsp_dequeue_#t~mem833.base, bcsp_dequeue_#t~mem833.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    bcsp_dequeue_~bcsp___0~632.offset, bcsp_dequeue_~bcsp___0~632.base := bcsp_dequeue_#t~mem833.offset, bcsp_dequeue_#t~mem833.base;
    havoc bcsp_dequeue_#t~mem833.base, bcsp_dequeue_#t~mem833.offset;
    skb_dequeue_#in~557.base, skb_dequeue_#in~557.offset := bcsp_dequeue_~bcsp___0~632.base, bcsp_dequeue_~bcsp___0~632.offset + 176;
    havoc skb_dequeue_#res.base, skb_dequeue_#res.offset;
    bcsp_dequeue_#t~ret834.base, bcsp_dequeue_#t~ret834.offset := skb_dequeue_#res.base, skb_dequeue_#res.offset;
    bcsp_dequeue_~skb~632.base, bcsp_dequeue_~skb~632.offset := bcsp_dequeue_#t~ret834.base, bcsp_dequeue_#t~ret834.offset;
    havoc bcsp_dequeue_#t~ret834.base, bcsp_dequeue_#t~ret834.offset;
    assume bcsp_dequeue_~skb~632.offset + bcsp_dequeue_~skb~632.base - 18446744073709551616 == 0;
    ~ldv_spin := 1;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := bcsp_dequeue_~bcsp___0~632.base, bcsp_dequeue_~bcsp___0~632.offset + 16, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    bcsp_dequeue_#t~mem840 := read~int_#value;
    assume bcsp_dequeue_#t~mem840 % 4294967296 <= 3 && bcsp_dequeue_#t~mem840 < -4294967296;
    havoc bcsp_dequeue_#t~mem840;
    skb_dequeue_#in~557.base, skb_dequeue_#in~557.offset := bcsp_dequeue_~bcsp___0~632.base, bcsp_dequeue_~bcsp___0~632.offset + 88;
    havoc skb_dequeue_#res.base, skb_dequeue_#res.offset;
    bcsp_dequeue_#t~ret841.offset, bcsp_dequeue_#t~ret841.base := skb_dequeue_#res.offset, skb_dequeue_#res.base;
    bcsp_dequeue_~skb~632.base, bcsp_dequeue_~skb~632.offset := bcsp_dequeue_#t~ret841.base, bcsp_dequeue_#t~ret841.offset;
    havoc bcsp_dequeue_#t~ret841.offset, bcsp_dequeue_#t~ret841.base;
    assume (-18446744073709551616 <= bcsp_dequeue_~skb~632.base + bcsp_dequeue_~skb~632.offset && !(bcsp_dequeue_~skb~632.base + bcsp_dequeue_~skb~632.offset + 18446744073709551616 == 0)) && bcsp_dequeue_~skb~632.base + bcsp_dequeue_~skb~632.offset < 0;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := bcsp_dequeue_~skb~632.base, 8, bcsp_dequeue_~skb~632.offset + 238;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    bcsp_dequeue_#t~mem842.base, bcsp_dequeue_#t~mem842.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := bcsp_dequeue_~skb~632.base, bcsp_dequeue_~skb~632.offset + 128, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    bcsp_dequeue_#t~mem843 := read~int_#value;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := bcsp_dequeue_~skb~632.base, bcsp_dequeue_~skb~632.offset + 40, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    bcsp_dequeue_#t~mem844 := read~int_#value;
    assume (((0 <= bcsp_dequeue_#t~mem844 && bcsp_dequeue_#t~mem843 <= 2147483647) && 0 <= bcsp_dequeue_#t~mem843) && bcsp_dequeue_#t~mem843 < 4294967296) && bcsp_dequeue_#t~mem844 < 256;
    bcsp_prepare_pkt_#in~pkt_type, bcsp_prepare_pkt_#in~bcsp___0.offset, bcsp_prepare_pkt_#in~len, bcsp_prepare_pkt_#in~bcsp___0.base, bcsp_prepare_pkt_#in~data.offset, bcsp_prepare_pkt_#in~data.base := bcsp_dequeue_#t~mem844, bcsp_dequeue_~bcsp___0~632.offset, bcsp_dequeue_#t~mem843, bcsp_dequeue_~bcsp___0~632.base, bcsp_dequeue_#t~mem842.offset, bcsp_dequeue_#t~mem842.base;
    havoc bcsp_prepare_pkt_#res.offset, bcsp_prepare_pkt_#res.base;
    havoc bcsp_prepare_pkt_#t~mem820, bcsp_prepare_pkt_#t~ret789.offset, bcsp_prepare_pkt_~len, bcsp_prepare_pkt_#t~nondet799.offset, bcsp_prepare_pkt_#t~mem787, bcsp_prepare_pkt_#t~nondet809.offset, bcsp_prepare_pkt_#t~ret818, bcsp_prepare_pkt_~tmp___1~603, bcsp_prepare_pkt_~bcsp___0.offset, bcsp_prepare_pkt_#t~mem817, bcsp_prepare_pkt_#t~nondet793.offset, bcsp_prepare_pkt_#t~mem831, bcsp_prepare_pkt_~__x~603, bcsp_prepare_pkt_#t~nondet797.base, bcsp_prepare_pkt_#t~nondet811.offset, bcsp_prepare_pkt_#t~nondet795.base, bcsp_prepare_pkt_#t~nondet799.base, bcsp_prepare_pkt_~data.offset, bcsp_prepare_pkt_~tmp___0~603, bcsp_prepare_pkt_#t~nondet786.offset, bcsp_prepare_pkt_#t~nondet786.base, bcsp_prepare_pkt_~data.base, bcsp_prepare_pkt_#t~nondet805.base, bcsp_prepare_pkt_#t~nondet805.offset, bcsp_prepare_pkt_#t~nondet807.base, bcsp_prepare_pkt_#t~nondet809.base, bcsp_prepare_pkt_~#descriptor___0~603.base, bcsp_prepare_pkt_#t~nondet793.base, bcsp_prepare_pkt_#t~mem828, bcsp_prepare_pkt_~#bcsp_txmsg_crc~603.offset, bcsp_prepare_pkt_#t~nondet797.offset, bcsp_prepare_pkt_#t~mem826, bcsp_prepare_pkt_~opcode~603, bcsp_prepare_pkt_~#descriptor___0~603.offset, bcsp_prepare_pkt_#t~mem824, bcsp_prepare_pkt_~nskb~603.base, bcsp_prepare_pkt_#t~mem803, bcsp_prepare_pkt_#t~mem822, bcsp_prepare_pkt_#t~mem788, bcsp_prepare_pkt_~bcsp___0.base, bcsp_prepare_pkt_#t~ret789.base, bcsp_prepare_pkt_~pkt_type, bcsp_prepare_pkt_~tmp~603, bcsp_prepare_pkt_#t~nondet811.base, bcsp_prepare_pkt_#t~mem832, bcsp_prepare_pkt_~nskb~603.offset, bcsp_prepare_pkt_#t~switch785, bcsp_prepare_pkt_#t~mem791, bcsp_prepare_pkt_#t~nondet813.base, bcsp_prepare_pkt_~chan~603, bcsp_prepare_pkt_#t~ret804, bcsp_prepare_pkt_#t~ret829, bcsp_prepare_pkt_~hdr~603, bcsp_prepare_pkt_~i~603, bcsp_prepare_pkt_#t~nondet819.offset, bcsp_prepare_pkt_~rel~603, bcsp_prepare_pkt_#t~nondet813.offset, bcsp_prepare_pkt_~#bcsp_txmsg_crc~603.base, bcsp_prepare_pkt_~#descriptor~603.offset, bcsp_prepare_pkt_#t~nondet795.offset, bcsp_prepare_pkt_#t~nondet819.base, bcsp_prepare_pkt_#t~nondet807.offset, bcsp_prepare_pkt_~desc~603, bcsp_prepare_pkt_#t~mem806, bcsp_prepare_pkt_#t~mem827, bcsp_prepare_pkt_#t~mem825, bcsp_prepare_pkt_~#descriptor~603.base, bcsp_prepare_pkt_#t~mem823;
    bcsp_prepare_pkt_~bcsp___0.offset, bcsp_prepare_pkt_~bcsp___0.base := bcsp_prepare_pkt_#in~bcsp___0.offset, bcsp_prepare_pkt_#in~bcsp___0.base;
    bcsp_prepare_pkt_~data.offset, bcsp_prepare_pkt_~data.base := bcsp_prepare_pkt_#in~data.offset, bcsp_prepare_pkt_#in~data.base;
    bcsp_prepare_pkt_~len := bcsp_prepare_pkt_#in~len;
    bcsp_prepare_pkt_~pkt_type := bcsp_prepare_pkt_#in~pkt_type;
    havoc bcsp_prepare_pkt_~nskb~603.offset, bcsp_prepare_pkt_~nskb~603.base;
    havoc bcsp_prepare_pkt_~hdr~603;
    havoc bcsp_prepare_pkt_~chan~603;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 2;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    bcsp_prepare_pkt_~#bcsp_txmsg_crc~603.base, bcsp_prepare_pkt_~#bcsp_txmsg_crc~603.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc bcsp_prepare_pkt_~rel~603;
    havoc bcsp_prepare_pkt_~i~603;
    havoc bcsp_prepare_pkt_~opcode~603;
    havoc bcsp_prepare_pkt_~desc~603;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 37;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    bcsp_prepare_pkt_~#descriptor~603.offset, bcsp_prepare_pkt_~#descriptor~603.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc bcsp_prepare_pkt_~tmp~603;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 37;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    bcsp_prepare_pkt_~#descriptor___0~603.base, bcsp_prepare_pkt_~#descriptor___0~603.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc bcsp_prepare_pkt_~tmp___0~603;
    havoc bcsp_prepare_pkt_~__x~603;
    havoc bcsp_prepare_pkt_~tmp___1~603;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, bcsp_prepare_pkt_~#bcsp_txmsg_crc~603.base, 65535, bcsp_prepare_pkt_~#bcsp_txmsg_crc~603.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume bcsp_prepare_pkt_~pkt_type == 2;
    bcsp_prepare_pkt_#t~switch785 := true;
    assume bcsp_prepare_pkt_#t~switch785;
    bcsp_prepare_pkt_~chan~603 := 6;
    bcsp_prepare_pkt_~rel~603 := 1;
    assume (bcsp_prepare_pkt_~chan~603 < 256 && 0 <= bcsp_prepare_pkt_~chan~603) && !(bcsp_prepare_pkt_~chan~603 == 5);
    alloc_skb_#in~flags, alloc_skb_#in~size := 32, (bcsp_prepare_pkt_~len + 7) * 2;
    havoc alloc_skb_#res.base, alloc_skb_#res.offset;
    havoc alloc_skb_#t~ret720.offset, alloc_skb_~size, alloc_skb_~tmp~534.base, alloc_skb_~tmp~534.offset, alloc_skb_#t~ret720.base, alloc_skb_~flags;
    alloc_skb_~size := alloc_skb_#in~size;
    alloc_skb_~flags := alloc_skb_#in~flags;
    havoc alloc_skb_~tmp~534.base, alloc_skb_~tmp~534.offset;
    ldv_check_alloc_flags_#in~flags := alloc_skb_~flags;
    havoc ldv_check_alloc_flags_~flags;
    ldv_check_alloc_flags_~flags := ldv_check_alloc_flags_#in~flags;
    assume !(~ldv_spin == 0);
    goto loc4;
  loc3_1:
    assume main_#t~switch537;
    assume !(~ldv_state_variable_0 == 0);
    assume 0 <= main_#t~nondet538 + 2147483648 && main_#t~nondet538 <= 2147483647;
    main_~tmp___0~367 := main_#t~nondet538;
    havoc main_#t~nondet538;
    assume !(main_~tmp___0~367 == 0);
    main_#t~switch539 := false;
    assume !main_#t~switch539;
    assume main_~tmp___0~367 == 1;
    main_#t~switch539 := true;
    assume main_#t~switch539;
    assume ~ldv_state_variable_0 == 1;
    havoc hci_uart_init_#res;
    havoc hci_uart_init_#t~nondet517.base, hci_uart_init_#t~nondet502.offset, hci_uart_init_#t~ret520, hci_uart_init_#t~nondet505.offset, hci_uart_init_#t~nondet502.base, hci_uart_init_#t~ret516, hci_uart_init_#t~memset503.base, hci_uart_init_#t~nondet505.base, hci_uart_init_#t~ret523, hci_uart_init_#t~nondet517.offset, hci_uart_init_#t~ret521, hci_uart_init_#t~ret522, hci_uart_init_~#hci_uart_ldisc~325.offset, hci_uart_init_#t~memset503.offset, hci_uart_init_#t~ret519, hci_uart_init_#t~ret518, hci_uart_init_~#hci_uart_ldisc~325.base, hci_uart_init_~err~325;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 160;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    hci_uart_init_~#hci_uart_ldisc~325.offset, hci_uart_init_~#hci_uart_ldisc~325.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc hci_uart_init_~err~325;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 25;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    hci_uart_init_#t~nondet502.base, hci_uart_init_#t~nondet502.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    bt_info_#in~57.offset, bt_info_#in~57.base := hci_uart_init_#t~nondet502.offset, hci_uart_init_#t~nondet502.base;
    havoc hci_uart_init_#t~nondet502.base, hci_uart_init_#t~nondet502.offset;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := hci_uart_init_~#hci_uart_ldisc~325.offset, 0, 168, hci_uart_init_~#hci_uart_ldisc~325.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr2683;
    #Ultimate.C_memset_#t~loopctr2683 := 0;
    goto loc5;
  loc4:
    assert false;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume !(#Ultimate.C_memset_#t~loopctr2683 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    hci_uart_init_#t~memset503.base, hci_uart_init_#t~memset503.offset := #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc hci_uart_init_#t~memset503.base, hci_uart_init_#t~memset503.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, hci_uart_init_~#hci_uart_ldisc~325.base, 21507, hci_uart_init_~#hci_uart_ldisc~325.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 6;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    hci_uart_init_#t~nondet505.base, hci_uart_init_#t~nondet505.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #memory_int := #memory_int[hci_uart_init_#t~nondet505.base := #memory_int[hci_uart_init_#t~nondet505.base][hci_uart_init_#t~nondet505.offset := 110]];
    #memory_int := #memory_int[hci_uart_init_#t~nondet505.base := #memory_int[hci_uart_init_#t~nondet505.base][hci_uart_init_#t~nondet505.offset + 1 := 95]];
    #memory_int := #memory_int[hci_uart_init_#t~nondet505.base := #memory_int[hci_uart_init_#t~nondet505.base][hci_uart_init_#t~nondet505.offset + 2 := 104]];
    #memory_int := #memory_int[hci_uart_init_#t~nondet505.base := #memory_int[hci_uart_init_#t~nondet505.base][hci_uart_init_#t~nondet505.offset + 3 := 99]];
    #memory_int := #memory_int[hci_uart_init_#t~nondet505.base := #memory_int[hci_uart_init_#t~nondet505.base][hci_uart_init_#t~nondet505.offset + 4 := 105]];
    #memory_int := #memory_int[hci_uart_init_#t~nondet505.base := #memory_int[hci_uart_init_#t~nondet505.base][hci_uart_init_#t~nondet505.offset + 5 := 0]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := hci_uart_init_#t~nondet505.base, hci_uart_init_~#hci_uart_ldisc~325.offset + 4, 8, hci_uart_init_#t~nondet505.offset, hci_uart_init_~#hci_uart_ldisc~325.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    havoc hci_uart_init_#t~nondet505.base, hci_uart_init_#t~nondet505.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_uart_tty_open.base_1, hci_uart_init_~#hci_uart_ldisc~325.offset + 20, 8, v_rep#funAddr~hci_uart_tty_open.offset_1, hci_uart_init_~#hci_uart_ldisc~325.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_uart_tty_close.base_1, hci_uart_init_~#hci_uart_ldisc~325.offset + 28, 8, v_rep#funAddr~hci_uart_tty_close.offset_1, hci_uart_init_~#hci_uart_ldisc~325.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_uart_tty_read.base_1, hci_uart_init_~#hci_uart_ldisc~325.offset + 52, 8, v_rep#funAddr~hci_uart_tty_read.offset_1, hci_uart_init_~#hci_uart_ldisc~325.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_uart_tty_write.base_1, hci_uart_init_~#hci_uart_ldisc~325.offset + 60, 8, v_rep#funAddr~hci_uart_tty_write.offset_1, hci_uart_init_~#hci_uart_ldisc~325.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_uart_tty_ioctl.base_1, hci_uart_init_~#hci_uart_ldisc~325.offset + 68, 8, v_rep#funAddr~hci_uart_tty_ioctl.offset_1, hci_uart_init_~#hci_uart_ldisc~325.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_uart_tty_poll.base_1, hci_uart_init_~#hci_uart_ldisc~325.offset + 92, 8, v_rep#funAddr~hci_uart_tty_poll.offset_1, hci_uart_init_~#hci_uart_ldisc~325.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_uart_tty_receive.base_1, hci_uart_init_~#hci_uart_ldisc~325.offset + 108, 8, v_rep#funAddr~hci_uart_tty_receive.offset_1, hci_uart_init_~#hci_uart_ldisc~325.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~hci_uart_tty_wakeup.base_1, hci_uart_init_~#hci_uart_ldisc~325.offset + 116, 8, v_rep#funAddr~hci_uart_tty_wakeup.offset_1, hci_uart_init_~#hci_uart_ldisc~325.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#__this_module.base, hci_uart_init_~#hci_uart_ldisc~325.offset + 148, 8, ~#__this_module.offset, hci_uart_init_~#hci_uart_ldisc~325.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    tty_register_ldisc_#in~46.base, tty_register_ldisc_#in~45, tty_register_ldisc_#in~46.offset := hci_uart_init_~#hci_uart_ldisc~325.base, 15, hci_uart_init_~#hci_uart_ldisc~325.offset;
    havoc tty_register_ldisc_#res;
    hci_uart_init_#t~ret516 := tty_register_ldisc_#res;
    assume hci_uart_init_#t~ret516 <= 2147483647 && 0 <= hci_uart_init_#t~ret516 + 2147483648;
    hci_uart_init_~err~325 := hci_uart_init_#t~ret516;
    havoc hci_uart_init_#t~ret516;
    assume !(hci_uart_init_~err~325 == 0);
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 48;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    hci_uart_init_#t~nondet517.base, hci_uart_init_#t~nondet517.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    bt_err_#in~58.base, bt_err_#in~58.offset := hci_uart_init_#t~nondet517.base, hci_uart_init_#t~nondet517.offset;
    havoc hci_uart_init_#t~nondet517.base, hci_uart_init_#t~nondet517.offset;
    hci_uart_init_#res := hci_uart_init_~err~325;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := hci_uart_init_~#hci_uart_ldisc~325.base, hci_uart_init_~#hci_uart_ldisc~325.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc hci_uart_init_~#hci_uart_ldisc~325.offset, hci_uart_init_~#hci_uart_ldisc~325.base;
    main_#t~ret540 := hci_uart_init_#res;
    assume 0 <= main_#t~ret540 + 2147483648 && main_#t~ret540 <= 2147483647;
    ~ldv_retval_12 := main_#t~ret540;
    havoc main_#t~ret540;
    assume ~ldv_retval_12 == 0;
    assume ~ldv_retval_12 == 0;
    ~ldv_state_variable_0 := 2;
    ~ldv_state_variable_9 := 1;
    havoc ldv_initialize_hci_uart_proto_9_#t~ret1701.base, ldv_initialize_hci_uart_proto_9_#t~ret1701.offset, ldv_initialize_hci_uart_proto_9_~tmp~928.base, ldv_initialize_hci_uart_proto_9_~tmp~928.offset;
    havoc ldv_initialize_hci_uart_proto_9_~tmp~928.base, ldv_initialize_hci_uart_proto_9_~tmp~928.offset;
    ldv_init_zalloc_#in~size := 304;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~size, ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~p~23.offset, ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (ldv_init_zalloc_~size <= 2147483647 && 0 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size < 4294967296;
    #Ultimate.alloc_~size := 1 * ldv_init_zalloc_~size;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    assume (ldv_init_zalloc_~size < 4294967296 && ldv_init_zalloc_~size <= 2147483647) && 0 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc9.base, 1, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc9.offset;
    havoc #Ultimate.meminit_#t~loopctr2684;
    #Ultimate.meminit_#t~loopctr2684 := 0;
    assume !(#Ultimate.meminit_#t~loopctr2684 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base := ldv_init_zalloc_#t~malloc9.offset, ldv_init_zalloc_#t~malloc9.base;
    ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset := ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~tmp~23.offset;
    assume !((ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base) % 18446744073709551616 == 0) && 18446744073709551616 + 18446744073709551616 <= ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    ldv_initialize_hci_uart_proto_9_#t~ret1701.base, ldv_initialize_hci_uart_proto_9_#t~ret1701.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    ldv_initialize_hci_uart_proto_9_~tmp~928.base, ldv_initialize_hci_uart_proto_9_~tmp~928.offset := ldv_initialize_hci_uart_proto_9_#t~ret1701.base, ldv_initialize_hci_uart_proto_9_#t~ret1701.offset;
    havoc ldv_initialize_hci_uart_proto_9_#t~ret1701.base, ldv_initialize_hci_uart_proto_9_#t~ret1701.offset;
    ~llp_group0.base, ~llp_group0.offset := ldv_initialize_hci_uart_proto_9_~tmp~928.base, ldv_initialize_hci_uart_proto_9_~tmp~928.offset;
    ~ldv_state_variable_10 := 1;
    havoc ldv_initialize_hci_uart_proto_10_#t~ret1250.base, ldv_initialize_hci_uart_proto_10_#t~ret1250.offset, ldv_initialize_hci_uart_proto_10_~tmp~764.base, ldv_initialize_hci_uart_proto_10_~tmp~764.offset;
    havoc ldv_initialize_hci_uart_proto_10_~tmp~764.base, ldv_initialize_hci_uart_proto_10_~tmp~764.offset;
    ldv_init_zalloc_#in~size := 304;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~size, ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~p~23.offset, ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (ldv_init_zalloc_~size < 4294967296 + 4294967296 && 4294967296 <= ldv_init_zalloc_~size) && !(ldv_init_zalloc_~size <= 6442450943);
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    assume (4294967296 <= ldv_init_zalloc_~size && ldv_init_zalloc_~size < 4294967296 + 4294967296) && !(ldv_init_zalloc_~size <= 6442450943);
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296), ldv_init_zalloc_#t~malloc9.base, 1, ldv_init_zalloc_~size - 4294967296 - 4294967296, ldv_init_zalloc_#t~malloc9.offset;
    havoc #Ultimate.meminit_#t~loopctr2684;
    #Ultimate.meminit_#t~loopctr2684 := 0;
    assume !(#Ultimate.meminit_#t~loopctr2684 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base := ldv_init_zalloc_#t~malloc9.offset, ldv_init_zalloc_#t~malloc9.base;
    ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset := ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~tmp~23.offset;
    assume !((ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base) % 18446744073709551616 == 0) && ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base < -18446744073709551616;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    ldv_initialize_hci_uart_proto_10_#t~ret1250.base, ldv_initialize_hci_uart_proto_10_#t~ret1250.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    ldv_initialize_hci_uart_proto_10_~tmp~764.base, ldv_initialize_hci_uart_proto_10_~tmp~764.offset := ldv_initialize_hci_uart_proto_10_#t~ret1250.base, ldv_initialize_hci_uart_proto_10_#t~ret1250.offset;
    havoc ldv_initialize_hci_uart_proto_10_#t~ret1250.base, ldv_initialize_hci_uart_proto_10_#t~ret1250.offset;
    ~bcsp_group0.base, ~bcsp_group0.offset := ldv_initialize_hci_uart_proto_10_~tmp~764.base, ldv_initialize_hci_uart_proto_10_~tmp~764.offset;
    ~ldv_state_variable_7 := 1;
    havoc ldv_initialize_hci_uart_proto_7_#t~ret2379.base, ldv_initialize_hci_uart_proto_7_~tmp~1343.base, ldv_initialize_hci_uart_proto_7_#t~ret2379.offset, ldv_initialize_hci_uart_proto_7_~tmp~1343.offset;
    havoc ldv_initialize_hci_uart_proto_7_~tmp~1343.base, ldv_initialize_hci_uart_proto_7_~tmp~1343.offset;
    ldv_init_zalloc_#in~size := 304;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~size, ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~p~23.offset, ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (!(ldv_init_zalloc_~size + 2147483649 <= 0) && -4294967296 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size < 0;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size + 4294967296 - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    assume (ldv_init_zalloc_~size < 0 && -4294967296 <= ldv_init_zalloc_~size) && !(ldv_init_zalloc_~size + 2147483649 <= 0);
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size + 4294967296 - 4294967296), ldv_init_zalloc_#t~malloc9.base, 1, ldv_init_zalloc_~size + 4294967296 - 4294967296, ldv_init_zalloc_#t~malloc9.offset;
    havoc #Ultimate.meminit_#t~loopctr2684;
    #Ultimate.meminit_#t~loopctr2684 := 0;
    assume !(#Ultimate.meminit_#t~loopctr2684 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base := ldv_init_zalloc_#t~malloc9.offset, ldv_init_zalloc_#t~malloc9.base;
    ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset := ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~tmp~23.offset;
    assume !((ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base) % 18446744073709551616 == 0) && ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base < -18446744073709551616;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    ldv_initialize_hci_uart_proto_7_#t~ret2379.base, ldv_initialize_hci_uart_proto_7_#t~ret2379.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    ldv_initialize_hci_uart_proto_7_~tmp~1343.base, ldv_initialize_hci_uart_proto_7_~tmp~1343.offset := ldv_initialize_hci_uart_proto_7_#t~ret2379.base, ldv_initialize_hci_uart_proto_7_#t~ret2379.offset;
    havoc ldv_initialize_hci_uart_proto_7_#t~ret2379.base, ldv_initialize_hci_uart_proto_7_#t~ret2379.offset;
    ~h5p_group0.offset, ~h5p_group0.base := ldv_initialize_hci_uart_proto_7_~tmp~1343.offset, ldv_initialize_hci_uart_proto_7_~tmp~1343.base;
    ~ldv_state_variable_11 := 1;
    havoc ldv_initialize_hci_uart_proto_11_#t~ret701.base, ldv_initialize_hci_uart_proto_11_~tmp~503.offset, ldv_initialize_hci_uart_proto_11_~tmp~503.base, ldv_initialize_hci_uart_proto_11_#t~ret701.offset;
    havoc ldv_initialize_hci_uart_proto_11_~tmp~503.offset, ldv_initialize_hci_uart_proto_11_~tmp~503.base;
    ldv_init_zalloc_#in~size := 304;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~size, ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~p~23.offset, ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume !(ldv_init_zalloc_~size % 4294967296 <= 2147483647) && ldv_init_zalloc_~size < -4294967296;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size % 4294967296 - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    assume ldv_init_zalloc_~size < -4294967296 && !(ldv_init_zalloc_~size % 4294967296 <= 2147483647);
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size % 4294967296 - 4294967296), ldv_init_zalloc_#t~malloc9.base, 1, ldv_init_zalloc_~size % 4294967296 - 4294967296, ldv_init_zalloc_#t~malloc9.offset;
    havoc #Ultimate.meminit_#t~loopctr2684;
    #Ultimate.meminit_#t~loopctr2684 := 0;
    assume !(#Ultimate.meminit_#t~loopctr2684 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base := ldv_init_zalloc_#t~malloc9.offset, ldv_init_zalloc_#t~malloc9.base;
    ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset := ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~tmp~23.offset;
    assume (-18446744073709551616 <= ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base && !(ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base + 18446744073709551616 == 0)) && ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base < 0;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    ldv_initialize_hci_uart_proto_11_#t~ret701.base, ldv_initialize_hci_uart_proto_11_#t~ret701.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    ldv_initialize_hci_uart_proto_11_~tmp~503.offset, ldv_initialize_hci_uart_proto_11_~tmp~503.base := ldv_initialize_hci_uart_proto_11_#t~ret701.offset, ldv_initialize_hci_uart_proto_11_#t~ret701.base;
    havoc ldv_initialize_hci_uart_proto_11_#t~ret701.base, ldv_initialize_hci_uart_proto_11_#t~ret701.offset;
    ~h4p_group0.base, ~h4p_group0.offset := ldv_initialize_hci_uart_proto_11_~tmp~503.base, ldv_initialize_hci_uart_proto_11_~tmp~503.offset;
    ~ldv_state_variable_6 := 1;
    havoc ldv_initialize_hci_uart_proto_6_~tmp~1463.offset, ldv_initialize_hci_uart_proto_6_#t~ret2572.offset, ldv_initialize_hci_uart_proto_6_#t~ret2572.base, ldv_initialize_hci_uart_proto_6_~tmp~1463.base;
    havoc ldv_initialize_hci_uart_proto_6_~tmp~1463.offset, ldv_initialize_hci_uart_proto_6_~tmp~1463.base;
    ldv_init_zalloc_#in~size := 304;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~size, ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~p~23.offset, ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (ldv_init_zalloc_~size <= 6442450943 && ldv_init_zalloc_~size < 4294967296 + 4294967296) && 4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    assume (ldv_init_zalloc_~size <= 6442450943 && 4294967296 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size < 4294967296 + 4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296), ldv_init_zalloc_#t~malloc9.base, 1, ldv_init_zalloc_~size - 4294967296, ldv_init_zalloc_#t~malloc9.offset;
    havoc #Ultimate.meminit_#t~loopctr2684;
    #Ultimate.meminit_#t~loopctr2684 := 0;
    assume !(#Ultimate.meminit_#t~loopctr2684 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base := ldv_init_zalloc_#t~malloc9.offset, ldv_init_zalloc_#t~malloc9.base;
    ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset := ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~tmp~23.offset;
    assume (!(ldv_init_zalloc_~p~23.base + ldv_init_zalloc_~p~23.offset + 18446744073709551616 == 0) && -18446744073709551616 <= ldv_init_zalloc_~p~23.base + ldv_init_zalloc_~p~23.offset) && ldv_init_zalloc_~p~23.base + ldv_init_zalloc_~p~23.offset < 0;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    ldv_initialize_hci_uart_proto_6_#t~ret2572.offset, ldv_initialize_hci_uart_proto_6_#t~ret2572.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    ldv_initialize_hci_uart_proto_6_~tmp~1463.offset, ldv_initialize_hci_uart_proto_6_~tmp~1463.base := ldv_initialize_hci_uart_proto_6_#t~ret2572.offset, ldv_initialize_hci_uart_proto_6_#t~ret2572.base;
    havoc ldv_initialize_hci_uart_proto_6_#t~ret2572.offset, ldv_initialize_hci_uart_proto_6_#t~ret2572.base;
    ~bcm_proto_group0.base, ~bcm_proto_group0.offset := ldv_initialize_hci_uart_proto_6_~tmp~1463.base, ldv_initialize_hci_uart_proto_6_~tmp~1463.offset;
    ~ldv_state_variable_8 := 1;
    havoc ldv_initialize_hci_uart_proto_8_#t~ret1887.offset, ldv_initialize_hci_uart_proto_8_~tmp~1051.base, ldv_initialize_hci_uart_proto_8_~tmp~1051.offset, ldv_initialize_hci_uart_proto_8_#t~ret1887.base;
    havoc ldv_initialize_hci_uart_proto_8_~tmp~1051.base, ldv_initialize_hci_uart_proto_8_~tmp~1051.offset;
    ldv_init_zalloc_#in~size := 304;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~size, ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~p~23.offset, ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    havoc ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (0 <= ldv_init_zalloc_~size && ldv_init_zalloc_~size < 4294967296) && !(ldv_init_zalloc_~size <= 2147483647);
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc9.base, ldv_init_zalloc_#t~malloc9.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    assume (0 <= ldv_init_zalloc_~size && ldv_init_zalloc_~size < 4294967296) && !(ldv_init_zalloc_~size <= 2147483647);
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296), ldv_init_zalloc_#t~malloc9.base, 1, ldv_init_zalloc_~size - 4294967296, ldv_init_zalloc_#t~malloc9.offset;
    havoc #Ultimate.meminit_#t~loopctr2684;
    #Ultimate.meminit_#t~loopctr2684 := 0;
    assume !(#Ultimate.meminit_#t~loopctr2684 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~23.offset, ldv_init_zalloc_~tmp~23.base := ldv_init_zalloc_#t~malloc9.offset, ldv_init_zalloc_#t~malloc9.base;
    ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset := ldv_init_zalloc_~tmp~23.base, ldv_init_zalloc_~tmp~23.offset;
    assume (ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base < 18446744073709551616 + 18446744073709551616 && 18446744073709551616 <= ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base) && !(ldv_init_zalloc_~p~23.offset + ldv_init_zalloc_~p~23.base - 18446744073709551616 == 0);
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~23.base, ldv_init_zalloc_~p~23.offset;
    ldv_initialize_hci_uart_proto_8_#t~ret1887.offset, ldv_initialize_hci_uart_proto_8_#t~ret1887.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    ldv_initialize_hci_uart_proto_8_~tmp~1051.base, ldv_initialize_hci_uart_proto_8_~tmp~1051.offset := ldv_initialize_hci_uart_proto_8_#t~ret1887.base, ldv_initialize_hci_uart_proto_8_#t~ret1887.offset;
    havoc ldv_initialize_hci_uart_proto_8_#t~ret1887.offset, ldv_initialize_hci_uart_proto_8_#t~ret1887.base;
    ~athp_group0.offset, ~athp_group0.base := ldv_initialize_hci_uart_proto_8_~tmp~1051.offset, ldv_initialize_hci_uart_proto_8_~tmp~1051.base;
    goto loc1;
  loc5_1:
    assume #Ultimate.C_memset_#t~loopctr2683 < #Ultimate.C_memset_#amount;
    #memory_int := #memory_int[#Ultimate.C_memset_#ptr.base := #memory_int[#Ultimate.C_memset_#ptr.base][#Ultimate.C_memset_#t~loopctr2683 + #Ultimate.C_memset_#ptr.offset := #Ultimate.C_memset_#value]];
    assume #Ultimate.C_memset_#value < 256 && 0 <= #Ultimate.C_memset_#value;
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#Ultimate.C_memset_#ptr.base := #memory_$Pointer$.base[#Ultimate.C_memset_#ptr.base][#Ultimate.C_memset_#t~loopctr2683 + #Ultimate.C_memset_#ptr.offset := 0]], #memory_$Pointer$.offset[#Ultimate.C_memset_#ptr.base := #memory_$Pointer$.offset[#Ultimate.C_memset_#ptr.base][#Ultimate.C_memset_#t~loopctr2683 + #Ultimate.C_memset_#ptr.offset := #Ultimate.C_memset_#value]];
    #Ultimate.C_memset_#t~loopctr2683 := #Ultimate.C_memset_#t~loopctr2683 + 1;
    goto loc5;
}


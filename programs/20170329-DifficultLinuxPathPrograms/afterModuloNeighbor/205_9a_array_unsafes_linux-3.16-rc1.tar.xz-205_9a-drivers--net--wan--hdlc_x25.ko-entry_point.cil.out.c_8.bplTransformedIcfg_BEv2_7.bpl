var ~#__this_module.base : int;

var ~#__this_module.offset : int;

var ~#proto.offset : int;

var #memory_$Pointer$.base : [int][int]int;

var ~proto_group1.offset : int;

var ~#set_impl.offset : int;

var #NULL.offset : int;

var v_rep#funAddr~x25_ioctl.base_1 : int;

var v_rep#funAddr~x25_xmit.base_1 : int;

var ~#set_impl.base : int;

var ~proto_group0.base : int;

var v_rep#funAddr~x25_close.offset_1 : int;

var ~ldv_state_variable_0 : int;

var v_rep#funAddr~x25_rx.base_1 : int;

var ~ldv_retval_0 : int;

var #length : [int]int;

var ~LDV_SKBS.base : int;

var v_rep#funAddr~x25_ioctl.offset_1 : int;

var v_rep#funAddr~x25_rx.offset_1 : int;

var ~ref_cnt : int;

var ~last_index : int;

var v_rep#funAddr~x25_xmit.offset_1 : int;

var ~#proto.base : int;

var #NULL.base : int;

var v_rep#funAddr~x25_close.base_1 : int;

var v_rep#funAddr~x25_open.base_1 : int;

var ~ldv_state_variable_1 : int;

var ~proto_group1.base : int;

var #valid : [int]int;

var ~ldv_retval_1 : int;

var ~proto_group0.offset : int;

var #memory_int : [int][int]int;

var v_rep#funAddr~x25_open.offset_1 : int;

var ~LDV_SKBS.offset : int;

var #memory_$Pointer$.offset : [int][int]int;

procedure ULTIMATE.start() returns ()
modifies ~#__this_module.base, ~#__this_module.offset, ~#proto.offset, #memory_$Pointer$.base, ~proto_group1.offset, ~#set_impl.offset, #NULL.offset, v_rep#funAddr~x25_ioctl.base_1, v_rep#funAddr~x25_xmit.base_1, ~#set_impl.base, ~proto_group0.base, v_rep#funAddr~x25_close.offset_1, ~ldv_state_variable_0, v_rep#funAddr~x25_rx.base_1, ~ldv_retval_0, #length, ~LDV_SKBS.base, v_rep#funAddr~x25_ioctl.offset_1, v_rep#funAddr~x25_rx.offset_1, ~ref_cnt, ~last_index, v_rep#funAddr~x25_xmit.offset_1, ~#proto.base, #NULL.base, v_rep#funAddr~x25_close.base_1, v_rep#funAddr~x25_open.base_1, ~ldv_state_variable_1, ~proto_group1.base, #valid, ~ldv_retval_1, ~proto_group0.offset, #memory_int, v_rep#funAddr~x25_open.offset_1, ~LDV_SKBS.offset, #memory_$Pointer$.offset;
{
    var x25_connect_disconnect_#t~nondet67.offset : int;
    var read~int_#value : int;
    var ldv_dev_alloc_skb_12_#t~ret146.base : int;
    var main_#t~ret141 : int;
    var x25_xmit_#t~mem87.offset : int;
    var main_#t~ret145 : int;
    var read~$Pointer$_#value.offset : int;
    var ldv_set_add_~set.base : int;
    var x25_connect_disconnect_~dev.offset : int;
    var x25_connect_disconnect_~skb~91.base : int;
    var netdev_err_#in~48.offset : int;
    var main_#t~ret131.base : int;
    var ldv_zalloc_~tmp~53.base : int;
    var ldv_zalloc_~tmp~53.offset : int;
    var x25_xmit_~skb.offset : int;
    var ldv_zalloc_#t~malloc42.base : int;
    var ldv_set_add_#in~e.base : int;
    var main_#t~ret138 : int;
    var ldv_initialize_hdlc_proto_1_#t~ret129.base : int;
    var main_~ldvarg0~155.base : int;
    var ldv_initialize_hdlc_proto_1_~tmp~153.offset : int;
    var main_#t~nondet134 : int;
    var main_#t~switch144 : bool;
    var mod_init_#res : int;
    var x25_xmit_#t~ret94 : int;
    var ldv_skb_alloc_#res.base : int;
    var x25_disconnected_~dev.offset : int;
    var ldv_set_remove_~deleted_index~215 : int;
    var main_~ldvarg0~155.offset : int;
    var ldv_set_remove_#in~e.offset : int;
    var ldv_dev_alloc_skb_12_#in~length : int;
    var netdev_err_#in~48.base : int;
    var x25_xmit_#t~nondet96.offset : int;
    var x25_disconnected_~dev.base : int;
    var x25_connect_disconnect_~skb~91.offset : int;
    var ldv_set_remove_~set.offset : int;
    var #Ultimate.alloc_old_#length : [int]int;
    var write~$Pointer$_#ptr.base : int;
    var x25_xmit_#res : int;
    var ldv_zalloc_#t~malloc42.offset : int;
    var ldv_set_add_#in~set.base : int;
    var write~$Pointer$_#ptr.offset : int;
    var ldv_set_is_empty_~set.base : int;
    var read~int_#ptr.base : int;
    var ldv_check_final_state_~tmp___7~240 : int;
    var ldv_set_remove_~i~215 : int;
    var ldv_zalloc_~p~53.base : int;
    var x25_xmit_#in~dev.base : int;
    var main_#t~switch133 : bool;
    var ldv_skb_alloc_#t~ret154.base : int;
    var main_~tmp___2~155 : int;
    var ldv_check_final_state_#t~ret155 : int;
    var main_#t~ret140 : int;
    var x25_xmit_~dev.base : int;
    var ldv_skb_free_~skb.offset : int;
    var x25_connect_disconnect_#t~ret69.base : int;
    var x25_connect_disconnect_~reason : int;
    var x25_xmit_#t~nondet96.base : int;
    var ldv_set_add_#in~e.offset : int;
    var ldv_set_is_empty_#in~set.offset : int;
    var x25_xmit_#t~nondet93.base : int;
    var ldv_initialize_hdlc_proto_1_~tmp___0~153.base : int;
    var #Ultimate.alloc_old_#valid : [int]int;
    var x25_connect_disconnect_#in~code : int;
    var x25_xmit_#in~dev.offset : int;
    var main_~tmp~155.base : int;
    var x25_disconnected_~reason : int;
    var ldv_set_is_empty_#in~set.base : int;
    var ldv_set_is_empty_~set.offset : int;
    var x25_connect_disconnect_#t~ret71 : int;
    var x25_xmit_#t~ret91 : int;
    var ldv_dev_alloc_skb_12_#t~ret146.offset : int;
    var main_#t~ret139 : int;
    var x25_connect_disconnect_~ptr~91.offset : int;
    var ldv_initialize_hdlc_proto_1_#t~ret129.offset : int;
    var x25_connect_disconnect_#t~nondet67.base : int;
    var write~$Pointer$_#value.offset : int;
    var main_~tmp___1~155 : int;
    var x25_xmit_#t~mem88 : int;
    var x25_connect_disconnect_#t~ret69.offset : int;
    var x25_connect_disconnect_~code : int;
    var x25_xmit_#t~ret95 : int;
    var ldv_set_remove_#t~mem151.offset : int;
    var x25_xmit_#t~ret90.base : int;
    var ldv_skb_alloc_~skb~230.base : int;
    var write~$Pointer$_old_#memory_$Pointer$.base : [int][int]int;
    var #Ultimate.alloc_~size : int;
    var ldv_set_add_#t~mem149.offset : int;
    var netdev_err_#in~47.base : int;
    var x25_xmit_#t~nondet93.offset : int;
    var read~int_#sizeOfReadType : int;
    var ldv_set_init_#in~set.offset : int;
    var ldv_set_init_~set.base : int;
    var x25_xmit_#t~switch89 : bool;
    var read~int_#ptr.offset : int;
    var ldv_set_remove_#in~e.base : int;
    var write~$Pointer$_old_#memory_$Pointer$.offset : [int][int]int;
    var main_#res : int;
    var ldv_set_remove_#t~mem153.base : int;
    var x25_connect_disconnect_~ptr~91.base : int;
    var ldv_dev_alloc_skb_12_~tmp~194.offset : int;
    var ldv_skb_alloc_~skb~230.offset : int;
    var ldv_set_add_#in~set.offset : int;
    var x25_xmit_#in~skb.base : int;
    var lapb_disconnect_request_#res : int;
    var x25_connect_disconnect_#in~dev.base : int;
    var ldv_set_remove_~e.base : int;
    var write~$Pointer$_#sizeOfWrittenType : int;
    var x25_disconnected_#in~reason : int;
    var x25_xmit_#t~ret90.offset : int;
    var ldv_set_init_#in~set.base : int;
    var main_~tmp___0~155 : int;
    var netdev_err_#res : int;
    var main_#t~nondet132 : int;
    var x25_xmit_#t~ret92 : int;
    var ldv_set_add_~set.offset : int;
    var ldv_initialize_hdlc_proto_1_#t~ret130.offset : int;
    var main_#t~ret136 : int;
    var write~$Pointer$_old_#memory_int : [int][int]int;
    var ldv_set_remove_~set.base : int;
    var unregister_hdlc_protocol_#in~50.offset : int;
    var #Ultimate.alloc_#res.base : int;
    var #Ultimate.alloc_#res.offset : int;
    var x25_xmit_~dev.offset : int;
    var ldv_zalloc_#res.offset : int;
    var register_hdlc_protocol_#in~49.base : int;
    var ldv_skb_free_#in~skb.base : int;
    var ldv_initialize_hdlc_proto_1_~tmp___0~153.offset : int;
    var x25_xmit_~skb.base : int;
    var x25_connect_disconnect_#t~ret68 : int;
    var ldv_set_add_~i~205 : int;
    var unregister_hdlc_protocol_#in~50.base : int;
    var x25_xmit_~result~106 : int;
    var x25_connect_disconnect_#in~reason : int;
    var ldv_skb_alloc_~tmp___7~230.base : int;
    var ldv_skb_free_~skb.base : int;
    var read~$Pointer$_#ptr.offset : int;
    var ldv_set_remove_#t~mem153.offset : int;
    var ldv_zalloc_~p~53.offset : int;
    var main_#t~nondet143 : int;
    var ldv_zalloc_~size : int;
    var lapb_disconnect_request_#in~59.offset : int;
    var ldv_zalloc_#in~size : int;
    var x25_disconnected_#in~dev.base : int;
    var x25_xmit_#in~skb.offset : int;
    var main_#t~switch135 : bool;
    var ldv_dev_alloc_skb_12_~length : int;
    var x25_xmit_#t~mem87.base : int;
    var ldv_set_add_~e.offset : int;
    var x25_disconnected_#in~dev.offset : int;
    var x25_connect_disconnect_#t~ret73 : int;
    var read~$Pointer$_#value.base : int;
    var main_#t~ret142 : int;
    var ldv_skb_free_#in~skb.offset : int;
    var ldv_initialize_hdlc_proto_1_#t~ret130.base : int;
    var ldv_set_is_empty_#res : int;
    var x25_connect_disconnect_~dev.base : int;
    var ldv_set_add_#t~mem149.base : int;
    var read~$Pointer$_#sizeOfReadType : int;
    var x25_connect_disconnect_#t~ret66.offset : int;
    var ldv_zalloc_#res.base : int;
    var ldv_set_remove_#in~set.base : int;
    var register_hdlc_protocol_#in~49.offset : int;
    var ldv_dev_alloc_skb_12_~tmp~194.base : int;
    var main_#t~ret137 : int;
    var x25_connect_disconnect_#in~dev.offset : int;
    var ldv_dev_alloc_skb_12_#res.offset : int;
    var x25_xmit_#t~ret97 : int;
    var x25_connect_disconnect_#t~ret66.base : int;
    var ldv_set_add_~e.base : int;
    var netdev_err_#in~47.offset : int;
    var ldv_dev_alloc_skb_12_#res.base : int;
    var ldv_initialize_hdlc_proto_1_~tmp~153.base : int;
    var ldv_skb_alloc_#res.offset : int;
    var ldv_set_remove_#t~mem151.base : int;
    var lapb_disconnect_request_#in~59.base : int;
    var ldv_zalloc_#t~nondet41 : int;
    var write~$Pointer$_#value.base : int;
    var ldv_set_remove_~e.offset : int;
    var main_~tmp~155.offset : int;
    var ldv_skb_alloc_#t~ret154.offset : int;
    var ldv_set_init_~set.offset : int;
    var main_#t~ret131.offset : int;
    var ldv_zalloc_~tmp___0~53 : int;
    var ldv_set_remove_#in~set.offset : int;
    var read~$Pointer$_#ptr.base : int;
    var ldv_skb_alloc_~tmp___7~230.offset : int;

  loc0:
    #NULL.offset, #NULL.base := 0, 0;
    #valid := #valid[0 := 0];
    ~ref_cnt := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_1 := 0;
    ~last_index := 0;
    ~proto_group0.base, ~proto_group0.offset := 0, 0;
    ~proto_group1.offset, ~proto_group1.base := 0, 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 88;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#proto.offset, ~#proto.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~x25_open.base_1, ~#proto.offset, 8, v_rep#funAddr~x25_open.offset_1, ~#proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~x25_close.base_1, ~#proto.offset + 8, 8, v_rep#funAddr~x25_close.offset_1, ~#proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#proto.offset + 16, 8, 0, ~#proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#proto.offset + 24, 8, 0, ~#proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#proto.offset + 32, 8, 0, ~#proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~x25_ioctl.base_1, ~#proto.offset + 40, 8, v_rep#funAddr~x25_ioctl.offset_1, ~#proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#proto.offset + 48, 8, 0, ~#proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~x25_rx.base_1, ~#proto.offset + 56, 8, v_rep#funAddr~x25_rx.offset_1, ~#proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~x25_xmit.base_1, ~#proto.offset + 64, 8, v_rep#funAddr~x25_xmit.offset_1, ~#proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#__this_module.base, ~#proto.offset + 72, 8, ~#__this_module.offset, ~#proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#proto.offset + 80, 8, 0, ~#proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 120;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#set_impl.base, ~#set_impl.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 8, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 16, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 24, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 32, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 40, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 48, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 56, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 64, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 72, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 80, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 88, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 96, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 104, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 112, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    ~LDV_SKBS.base, ~LDV_SKBS.offset := 0, 0;
    havoc main_#res;
    havoc main_#t~ret140, main_#t~ret141, main_#t~ret142, main_~ldvarg0~155.offset, main_#t~ret145, main_#t~ret131.base, main_~tmp~155.base, main_~tmp___0~155, main_#t~nondet132, main_#t~nondet143, main_#t~ret139, main_~tmp~155.offset, main_#t~ret138, main_#t~ret131.offset, main_#t~ret137, main_~ldvarg0~155.base, main_#t~nondet134, main_#t~ret136, main_~tmp___1~155, main_#t~switch144, main_#t~switch135, main_#t~switch133, main_~tmp___2~155;
    havoc main_~ldvarg0~155.offset, main_~ldvarg0~155.base;
    havoc main_~tmp~155.offset, main_~tmp~155.base;
    havoc main_~tmp___0~155;
    havoc main_~tmp___1~155;
    havoc main_~tmp___2~155;
    ldv_zalloc_#in~size := 40;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_#t~malloc42.base, ldv_zalloc_~p~53.offset, ldv_zalloc_#t~malloc42.offset, ldv_zalloc_~size, ldv_zalloc_~tmp___0~53, ldv_zalloc_#t~nondet41, ldv_zalloc_~p~53.base, ldv_zalloc_~tmp~53.base, ldv_zalloc_~tmp~53.offset;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~53.offset, ldv_zalloc_~p~53.base;
    havoc ldv_zalloc_~tmp~53.base, ldv_zalloc_~tmp~53.offset;
    havoc ldv_zalloc_~tmp___0~53;
    assume ldv_zalloc_#t~nondet41 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet41 + 2147483648;
    ldv_zalloc_~tmp___0~53 := ldv_zalloc_#t~nondet41;
    havoc ldv_zalloc_#t~nondet41;
    assume !(ldv_zalloc_~tmp___0~53 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret131.offset, main_#t~ret131.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    main_~tmp~155.offset, main_~tmp~155.base := main_#t~ret131.offset, main_#t~ret131.base;
    havoc main_#t~ret131.offset, main_#t~ret131.base;
    main_~ldvarg0~155.offset, main_~ldvarg0~155.base := main_~tmp~155.offset, main_~tmp~155.base;
    ldv_set_init_#in~set.base, ldv_set_init_#in~set.offset := ~LDV_SKBS.base, ~LDV_SKBS.offset;
    havoc ldv_set_init_~set.offset, ldv_set_init_~set.base;
    ldv_set_init_~set.offset, ldv_set_init_~set.base := ldv_set_init_#in~set.offset, ldv_set_init_#in~set.base;
    ldv_set_init_~set.offset, ldv_set_init_~set.base := ~#set_impl.offset, ~#set_impl.base;
    ~last_index := 0;
    ~ldv_state_variable_1 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    goto loc1;
  loc1:
    assume main_#t~nondet132 <= 2147483647 && 0 <= main_#t~nondet132 + 2147483648;
    main_~tmp___0~155 := main_#t~nondet132;
    havoc main_#t~nondet132;
    goto loc2;
  loc2:
    goto loc2_0, loc2_1;
  loc2_0:
    assume !(main_~tmp___0~155 == 0);
    main_#t~switch133 := false;
    goto loc3;
  loc2_1:
    assume main_~tmp___0~155 == 0;
    main_#t~switch133 := true;
    goto loc3;
  loc3:
    goto loc3_0, loc3_1;
  loc3_0:
    assume !main_#t~switch133;
    assume main_~tmp___0~155 == 1;
    main_#t~switch133 := true;
    assume main_#t~switch133;
    assume !(~ldv_state_variable_0 == 0);
    assume main_#t~nondet143 <= 2147483647 && 0 <= main_#t~nondet143 + 2147483648;
    main_~tmp___2~155 := main_#t~nondet143;
    havoc main_#t~nondet143;
    goto loc4;
  loc3_1:
    assume main_#t~switch133;
    assume !(~ldv_state_variable_1 == 0);
    assume 0 <= main_#t~nondet134 + 2147483648 && main_#t~nondet134 <= 2147483647;
    main_~tmp___1~155 := main_#t~nondet134;
    havoc main_#t~nondet134;
    assume !(main_~tmp___1~155 == 0);
    main_#t~switch135 := false;
    assume main_#t~switch135;
    assume ~ldv_state_variable_1 == 1;
    x25_xmit_#in~dev.offset, x25_xmit_#in~skb.offset, x25_xmit_#in~skb.base, x25_xmit_#in~dev.base := ~proto_group1.offset, ~proto_group0.offset, ~proto_group0.base, ~proto_group1.base;
    havoc x25_xmit_#res;
    havoc x25_xmit_#t~ret90.base, x25_xmit_~dev.offset, x25_xmit_~dev.base, x25_xmit_#t~mem87.offset, x25_xmit_#t~nondet96.base, x25_xmit_#t~nondet93.base, x25_xmit_#t~nondet96.offset, x25_xmit_~skb.base, x25_xmit_#t~nondet93.offset, x25_xmit_~result~106, x25_xmit_#t~ret90.offset, x25_xmit_~skb.offset, x25_xmit_#t~ret92, x25_xmit_#t~ret91, x25_xmit_#t~switch89, x25_xmit_#t~mem88, x25_xmit_#t~ret97, x25_xmit_#t~mem87.base, x25_xmit_#t~ret95, x25_xmit_#t~ret94;
    x25_xmit_~skb.base, x25_xmit_~skb.offset := x25_xmit_#in~skb.base, x25_xmit_#in~skb.offset;
    x25_xmit_~dev.offset, x25_xmit_~dev.base := x25_xmit_#in~dev.offset, x25_xmit_#in~dev.base;
    havoc x25_xmit_~result~106;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := x25_xmit_~skb.base, 8, x25_xmit_~skb.offset + 232;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    x25_xmit_#t~mem87.offset, x25_xmit_#t~mem87.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := x25_xmit_#t~mem87.base, x25_xmit_#t~mem87.offset, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    x25_xmit_#t~mem88 := read~int_#value;
    assume (256 <= x25_xmit_#t~mem88 && !(x25_xmit_#t~mem88 - 256 == 0)) && x25_xmit_#t~mem88 < 256 + 256;
    x25_xmit_#t~switch89 := false;
    assume !x25_xmit_#t~switch89;
    assume (x25_xmit_#t~switch89 && -256 <= x25_xmit_#t~mem88) && x25_xmit_#t~mem88 < 0;
    x25_xmit_#t~switch89 := true;
    assume !x25_xmit_#t~switch89;
    assume ((x25_xmit_#t~mem88 < 256 && !(x25_xmit_#t~mem88 == 2)) && 0 <= x25_xmit_#t~mem88) && !x25_xmit_#t~switch89;
    x25_xmit_#t~switch89 := false;
    assume x25_xmit_#t~switch89;
    lapb_disconnect_request_#in~59.offset, lapb_disconnect_request_#in~59.base := x25_xmit_~dev.offset, x25_xmit_~dev.base;
    havoc lapb_disconnect_request_#res;
    x25_xmit_#t~ret95 := lapb_disconnect_request_#res;
    assume x25_xmit_#t~ret95 <= 2147483647 && 0 <= x25_xmit_#t~ret95 + 2147483648;
    x25_xmit_~result~106 := x25_xmit_#t~ret95;
    havoc x25_xmit_#t~ret95;
    assume !(x25_xmit_~result~106 == 0);
    assume x25_xmit_~result~106 == 4;
    x25_disconnected_#in~reason, x25_disconnected_#in~dev.base, x25_disconnected_#in~dev.offset := 0, x25_xmit_~dev.base, x25_xmit_~dev.offset;
    havoc x25_disconnected_~dev.offset, x25_disconnected_~dev.base, x25_disconnected_~reason;
    x25_disconnected_~dev.offset, x25_disconnected_~dev.base := x25_disconnected_#in~dev.offset, x25_disconnected_#in~dev.base;
    x25_disconnected_~reason := x25_disconnected_#in~reason;
    x25_connect_disconnect_#in~dev.offset, x25_connect_disconnect_#in~code, x25_connect_disconnect_#in~reason, x25_connect_disconnect_#in~dev.base := x25_disconnected_~dev.offset, 2, x25_disconnected_~reason, x25_disconnected_~dev.base;
    havoc x25_connect_disconnect_#t~nondet67.offset, x25_connect_disconnect_#t~ret73, x25_connect_disconnect_#t~ret69.base, x25_connect_disconnect_~reason, x25_connect_disconnect_~dev.base, x25_connect_disconnect_#t~ret68, x25_connect_disconnect_~dev.offset, x25_connect_disconnect_~skb~91.base, x25_connect_disconnect_~skb~91.offset, x25_connect_disconnect_#t~ret66.offset, x25_connect_disconnect_#t~ret71, x25_connect_disconnect_~ptr~91.offset, x25_connect_disconnect_#t~nondet67.base, x25_connect_disconnect_#t~ret69.offset, x25_connect_disconnect_~ptr~91.base, x25_connect_disconnect_~code, x25_connect_disconnect_#t~ret66.base;
    x25_connect_disconnect_~dev.base, x25_connect_disconnect_~dev.offset := x25_connect_disconnect_#in~dev.base, x25_connect_disconnect_#in~dev.offset;
    x25_connect_disconnect_~reason := x25_connect_disconnect_#in~reason;
    x25_connect_disconnect_~code := x25_connect_disconnect_#in~code;
    havoc x25_connect_disconnect_~skb~91.base, x25_connect_disconnect_~skb~91.offset;
    havoc x25_connect_disconnect_~ptr~91.offset, x25_connect_disconnect_~ptr~91.base;
    ldv_dev_alloc_skb_12_#in~length := 1;
    havoc ldv_dev_alloc_skb_12_#res.base, ldv_dev_alloc_skb_12_#res.offset;
    havoc ldv_dev_alloc_skb_12_#t~ret146.base, ldv_dev_alloc_skb_12_#t~ret146.offset, ldv_dev_alloc_skb_12_~tmp~194.base, ldv_dev_alloc_skb_12_~tmp~194.offset, ldv_dev_alloc_skb_12_~length;
    ldv_dev_alloc_skb_12_~length := ldv_dev_alloc_skb_12_#in~length;
    havoc ldv_dev_alloc_skb_12_~tmp~194.base, ldv_dev_alloc_skb_12_~tmp~194.offset;
    havoc ldv_skb_alloc_#res.offset, ldv_skb_alloc_#res.base;
    havoc ldv_skb_alloc_~skb~230.base, ldv_skb_alloc_#t~ret154.offset, ldv_skb_alloc_~skb~230.offset, ldv_skb_alloc_~tmp___7~230.base, ldv_skb_alloc_#t~ret154.base, ldv_skb_alloc_~tmp___7~230.offset;
    havoc ldv_skb_alloc_~skb~230.base, ldv_skb_alloc_~skb~230.offset;
    havoc ldv_skb_alloc_~tmp___7~230.base, ldv_skb_alloc_~tmp___7~230.offset;
    ldv_zalloc_#in~size := 248;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_#t~malloc42.base, ldv_zalloc_~p~53.offset, ldv_zalloc_#t~malloc42.offset, ldv_zalloc_~size, ldv_zalloc_~tmp___0~53, ldv_zalloc_#t~nondet41, ldv_zalloc_~p~53.base, ldv_zalloc_~tmp~53.base, ldv_zalloc_~tmp~53.offset;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~53.offset, ldv_zalloc_~p~53.base;
    havoc ldv_zalloc_~tmp~53.base, ldv_zalloc_~tmp~53.offset;
    havoc ldv_zalloc_~tmp___0~53;
    assume 0 <= ldv_zalloc_#t~nondet41 + 2147483648 && ldv_zalloc_#t~nondet41 <= 2147483647;
    ldv_zalloc_~tmp___0~53 := ldv_zalloc_#t~nondet41;
    havoc ldv_zalloc_#t~nondet41;
    assume !(ldv_zalloc_~tmp___0~53 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_skb_alloc_#t~ret154.offset, ldv_skb_alloc_#t~ret154.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    ldv_skb_alloc_~tmp___7~230.base, ldv_skb_alloc_~tmp___7~230.offset := ldv_skb_alloc_#t~ret154.base, ldv_skb_alloc_#t~ret154.offset;
    havoc ldv_skb_alloc_#t~ret154.offset, ldv_skb_alloc_#t~ret154.base;
    ldv_skb_alloc_~skb~230.base, ldv_skb_alloc_~skb~230.offset := ldv_skb_alloc_~tmp___7~230.base, ldv_skb_alloc_~tmp___7~230.offset;
    assume !(ldv_skb_alloc_~skb~230.base == 0);
    ldv_set_add_#in~set.base, ldv_set_add_#in~e.base, ldv_set_add_#in~e.offset, ldv_set_add_#in~set.offset := ~LDV_SKBS.base, ldv_skb_alloc_~skb~230.base, ldv_skb_alloc_~skb~230.offset, ~LDV_SKBS.offset;
    havoc ldv_set_add_~set.offset, ldv_set_add_~e.base, ldv_set_add_#t~mem149.offset, ldv_set_add_#t~mem149.base, ldv_set_add_~set.base, ldv_set_add_~i~205, ldv_set_add_~e.offset;
    ldv_set_add_~set.offset, ldv_set_add_~set.base := ldv_set_add_#in~set.offset, ldv_set_add_#in~set.base;
    ldv_set_add_~e.base, ldv_set_add_~e.offset := ldv_set_add_#in~e.base, ldv_set_add_#in~e.offset;
    havoc ldv_set_add_~i~205;
    ldv_set_add_~i~205 := 0;
    assume !(ldv_set_add_~i~205 < ~last_index);
    assume ~last_index < 15;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ldv_set_add_~e.base, ~#set_impl.offset + 8 * ~last_index, 8, ldv_set_add_~e.offset, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    ~last_index := ~last_index + 1;
    ldv_skb_alloc_#res.offset, ldv_skb_alloc_#res.base := ldv_skb_alloc_~skb~230.offset, ldv_skb_alloc_~skb~230.base;
    ldv_dev_alloc_skb_12_#t~ret146.base, ldv_dev_alloc_skb_12_#t~ret146.offset := ldv_skb_alloc_#res.base, ldv_skb_alloc_#res.offset;
    ldv_dev_alloc_skb_12_~tmp~194.base, ldv_dev_alloc_skb_12_~tmp~194.offset := ldv_dev_alloc_skb_12_#t~ret146.base, ldv_dev_alloc_skb_12_#t~ret146.offset;
    havoc ldv_dev_alloc_skb_12_#t~ret146.base, ldv_dev_alloc_skb_12_#t~ret146.offset;
    ldv_dev_alloc_skb_12_#res.base, ldv_dev_alloc_skb_12_#res.offset := ldv_dev_alloc_skb_12_~tmp~194.base, ldv_dev_alloc_skb_12_~tmp~194.offset;
    x25_connect_disconnect_#t~ret66.base, x25_connect_disconnect_#t~ret66.offset := ldv_dev_alloc_skb_12_#res.base, ldv_dev_alloc_skb_12_#res.offset;
    x25_connect_disconnect_~skb~91.base, x25_connect_disconnect_~skb~91.offset := x25_connect_disconnect_#t~ret66.base, x25_connect_disconnect_#t~ret66.offset;
    havoc x25_connect_disconnect_#t~ret66.base, x25_connect_disconnect_#t~ret66.offset;
    assume 18446744073709551616 + 18446744073709551616 <= x25_connect_disconnect_~skb~91.base + x25_connect_disconnect_~skb~91.offset && (x25_connect_disconnect_~skb~91.base + x25_connect_disconnect_~skb~91.offset) % 18446744073709551616 == 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 16;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    x25_connect_disconnect_#t~nondet67.offset, x25_connect_disconnect_#t~nondet67.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    netdev_err_#in~47.offset, netdev_err_#in~47.base, netdev_err_#in~48.base, netdev_err_#in~48.offset := x25_connect_disconnect_~dev.offset, x25_connect_disconnect_~dev.base, x25_connect_disconnect_#t~nondet67.base, x25_connect_disconnect_#t~nondet67.offset;
    havoc netdev_err_#res;
    x25_connect_disconnect_#t~ret68 := netdev_err_#res;
    assume 0 <= x25_connect_disconnect_#t~ret68 + 2147483648 && x25_connect_disconnect_#t~ret68 <= 2147483647;
    havoc x25_connect_disconnect_#t~nondet67.offset, x25_connect_disconnect_#t~nondet67.base;
    havoc x25_connect_disconnect_#t~ret68;
    ldv_skb_free_#in~skb.base, ldv_skb_free_#in~skb.offset := x25_xmit_~skb.base, x25_xmit_~skb.offset;
    havoc ldv_skb_free_~skb.offset, ldv_skb_free_~skb.base;
    ldv_skb_free_~skb.offset, ldv_skb_free_~skb.base := ldv_skb_free_#in~skb.offset, ldv_skb_free_#in~skb.base;
    ldv_set_remove_#in~e.offset, ldv_set_remove_#in~set.offset, ldv_set_remove_#in~e.base, ldv_set_remove_#in~set.base := ldv_skb_free_~skb.offset, ~LDV_SKBS.offset, ldv_skb_free_~skb.base, ~LDV_SKBS.base;
    havoc ldv_set_remove_~e.base, ldv_set_remove_~deleted_index~215, ldv_set_remove_~e.offset, ldv_set_remove_#t~mem153.base, ldv_set_remove_#t~mem151.base, ldv_set_remove_~set.base, ldv_set_remove_~i~215, ldv_set_remove_~set.offset, ldv_set_remove_#t~mem151.offset, ldv_set_remove_#t~mem153.offset;
    ldv_set_remove_~set.base, ldv_set_remove_~set.offset := ldv_set_remove_#in~set.base, ldv_set_remove_#in~set.offset;
    ldv_set_remove_~e.base, ldv_set_remove_~e.offset := ldv_set_remove_#in~e.base, ldv_set_remove_#in~e.offset;
    havoc ldv_set_remove_~i~215;
    havoc ldv_set_remove_~deleted_index~215;
    ldv_set_remove_~deleted_index~215 := -1;
    ldv_set_remove_~i~215 := 0;
    assume !(ldv_set_remove_~i~215 < ~last_index);
    assume ldv_set_remove_~deleted_index~215 == -1;
    x25_xmit_#res := 0;
    main_#t~ret136 := x25_xmit_#res;
    assume 0 <= main_#t~ret136 + 2147483648 && main_#t~ret136 <= 2147483647;
    havoc main_#t~ret136;
    ~ldv_state_variable_1 := 1;
    assume !(~ldv_state_variable_1 == 2);
    goto loc1;
  loc4:
    goto loc4_0, loc4_1;
  loc4_0:
    assume main_~tmp___2~155 == 0;
    main_#t~switch144 := true;
    goto loc5;
  loc4_1:
    assume !(main_~tmp___2~155 == 0);
    main_#t~switch144 := false;
    goto loc5;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume main_#t~switch144;
    assume ~ref_cnt == 0 && ~ldv_state_variable_0 == 3;
    unregister_hdlc_protocol_#in~50.base, unregister_hdlc_protocol_#in~50.offset := ~#proto.base, ~#proto.offset;
    ~ldv_state_variable_0 := 2;
    havoc ldv_check_final_state_#t~ret155, ldv_check_final_state_~tmp___7~240;
    havoc ldv_check_final_state_~tmp___7~240;
    ldv_set_is_empty_#in~set.offset, ldv_set_is_empty_#in~set.base := ~LDV_SKBS.offset, ~LDV_SKBS.base;
    havoc ldv_set_is_empty_#res;
    havoc ldv_set_is_empty_~set.base, ldv_set_is_empty_~set.offset;
    ldv_set_is_empty_~set.base, ldv_set_is_empty_~set.offset := ldv_set_is_empty_#in~set.base, ldv_set_is_empty_#in~set.offset;
    assume !(~last_index == 0);
    ldv_set_is_empty_#res := 0;
    ldv_check_final_state_#t~ret155 := ldv_set_is_empty_#res;
    assume ldv_check_final_state_#t~ret155 <= 2147483647 && 0 <= ldv_check_final_state_#t~ret155 + 2147483648;
    ldv_check_final_state_~tmp___7~240 := ldv_check_final_state_#t~ret155;
    havoc ldv_check_final_state_#t~ret155;
    assume ldv_check_final_state_~tmp___7~240 == 0;
    goto loc6;
  loc5_1:
    assume !main_#t~switch144;
    assume main_~tmp___2~155 == 1;
    main_#t~switch144 := true;
    assume main_#t~switch144;
    assume ~ldv_state_variable_0 == 1;
    havoc mod_init_#res;
    register_hdlc_protocol_#in~49.base, register_hdlc_protocol_#in~49.offset := ~#proto.base, ~#proto.offset;
    mod_init_#res := 0;
    main_#t~ret145 := mod_init_#res;
    assume 0 <= main_#t~ret145 + 2147483648 && main_#t~ret145 <= 2147483647;
    ~ldv_retval_1 := main_#t~ret145;
    havoc main_#t~ret145;
    assume ~ldv_retval_1 == 0;
    ~ldv_state_variable_0 := 3;
    ~ldv_state_variable_1 := 1;
    havoc ldv_initialize_hdlc_proto_1_#t~ret129.offset, ldv_initialize_hdlc_proto_1_~tmp___0~153.offset, ldv_initialize_hdlc_proto_1_#t~ret129.base, ldv_initialize_hdlc_proto_1_#t~ret130.base, ldv_initialize_hdlc_proto_1_~tmp~153.base, ldv_initialize_hdlc_proto_1_#t~ret130.offset, ldv_initialize_hdlc_proto_1_~tmp~153.offset, ldv_initialize_hdlc_proto_1_~tmp___0~153.base;
    havoc ldv_initialize_hdlc_proto_1_~tmp~153.base, ldv_initialize_hdlc_proto_1_~tmp~153.offset;
    havoc ldv_initialize_hdlc_proto_1_~tmp___0~153.offset, ldv_initialize_hdlc_proto_1_~tmp___0~153.base;
    ldv_zalloc_#in~size := 3264;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_#t~malloc42.base, ldv_zalloc_~p~53.offset, ldv_zalloc_#t~malloc42.offset, ldv_zalloc_~size, ldv_zalloc_~tmp___0~53, ldv_zalloc_#t~nondet41, ldv_zalloc_~p~53.base, ldv_zalloc_~tmp~53.base, ldv_zalloc_~tmp~53.offset;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~53.offset, ldv_zalloc_~p~53.base;
    havoc ldv_zalloc_~tmp~53.base, ldv_zalloc_~tmp~53.offset;
    havoc ldv_zalloc_~tmp___0~53;
    assume ldv_zalloc_#t~nondet41 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet41 + 2147483648;
    ldv_zalloc_~tmp___0~53 := ldv_zalloc_#t~nondet41;
    havoc ldv_zalloc_#t~nondet41;
    assume !(ldv_zalloc_~tmp___0~53 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_initialize_hdlc_proto_1_#t~ret129.offset, ldv_initialize_hdlc_proto_1_#t~ret129.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    ldv_initialize_hdlc_proto_1_~tmp~153.base, ldv_initialize_hdlc_proto_1_~tmp~153.offset := ldv_initialize_hdlc_proto_1_#t~ret129.base, ldv_initialize_hdlc_proto_1_#t~ret129.offset;
    havoc ldv_initialize_hdlc_proto_1_#t~ret129.offset, ldv_initialize_hdlc_proto_1_#t~ret129.base;
    ~proto_group1.offset, ~proto_group1.base := ldv_initialize_hdlc_proto_1_~tmp~153.offset, ldv_initialize_hdlc_proto_1_~tmp~153.base;
    ldv_zalloc_#in~size := 232;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_#t~malloc42.base, ldv_zalloc_~p~53.offset, ldv_zalloc_#t~malloc42.offset, ldv_zalloc_~size, ldv_zalloc_~tmp___0~53, ldv_zalloc_#t~nondet41, ldv_zalloc_~p~53.base, ldv_zalloc_~tmp~53.base, ldv_zalloc_~tmp~53.offset;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~53.offset, ldv_zalloc_~p~53.base;
    havoc ldv_zalloc_~tmp~53.base, ldv_zalloc_~tmp~53.offset;
    havoc ldv_zalloc_~tmp___0~53;
    assume ldv_zalloc_#t~nondet41 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet41 + 2147483648;
    ldv_zalloc_~tmp___0~53 := ldv_zalloc_#t~nondet41;
    havoc ldv_zalloc_#t~nondet41;
    assume !(ldv_zalloc_~tmp___0~53 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_initialize_hdlc_proto_1_#t~ret130.base, ldv_initialize_hdlc_proto_1_#t~ret130.offset := ldv_zalloc_#res.base, ldv_zalloc_#res.offset;
    ldv_initialize_hdlc_proto_1_~tmp___0~153.offset, ldv_initialize_hdlc_proto_1_~tmp___0~153.base := ldv_initialize_hdlc_proto_1_#t~ret130.offset, ldv_initialize_hdlc_proto_1_#t~ret130.base;
    havoc ldv_initialize_hdlc_proto_1_#t~ret130.base, ldv_initialize_hdlc_proto_1_#t~ret130.offset;
    ~proto_group0.base, ~proto_group0.offset := ldv_initialize_hdlc_proto_1_~tmp___0~153.base, ldv_initialize_hdlc_proto_1_~tmp___0~153.offset;
    assume ~ldv_retval_1 == 0;
    goto loc1;
  loc6:
    assert false;
}


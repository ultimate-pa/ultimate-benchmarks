var v_rep#funAddr~ppp_asynctty_ioctl.base_1 : int;

var #memory_$Pointer$.base : [int][int]int;

var ~#disc_data_lock.offset : int;

var #NULL.offset : int;

var ~#set_impl.base : int;

var v_rep#funAddr~ppp_asynctty_wakeup.offset_1 : int;

var v_rep#funAddr~ppp_asynctty_open.base_1 : int;

var ~ldv_state_variable_2 : int;

var ~#ppp_ldisc.offset : int;

var ~ldv_retval_0 : int;

var #length : [int]int;

var v_rep#funAddr~ppp_asynctty_close.base_1 : int;

var v_rep#funAddr~ppp_asynctty_open.offset_1 : int;

var ~flag_time : int;

var v_rep#funAddr~ppp_asynctty_read.base_1 : int;

var ~#async_ops.offset : int;

var v_rep#funAddr~ppp_asynctty_read.offset_1 : int;

var ~ldv_retval_1 : int;

var ~#async_ops.base : int;

var v_rep#funAddr~ppp_async_send.offset_1 : int;

var ~LDV_SKBS.offset : int;

var #memory_$Pointer$.offset : [int][int]int;

var ~#__this_module.base : int;

var ~#__this_module.offset : int;

var ~#set_impl.offset : int;

var v_rep#funAddr~ppp_async_ioctl.offset_1 : int;

var v_rep#funAddr~ppp_asynctty_poll.base_1 : int;

var v_rep#funAddr~ppp_async_ioctl.base_1 : int;

var v_rep#funAddr~ppp_asynctty_write.offset_1 : int;

var ~async_ops_group0.offset : int;

var v_rep#funAddr~ppp_asynctty_poll.offset_1 : int;

var v_rep#funAddr~ppp_asynctty_receive.offset_1 : int;

var ~ldv_state_variable_0 : int;

var ~LDV_SKBS.base : int;

var ~ppp_ldisc_group1.offset : int;

var v_rep#funAddr~ppp_asynctty_wakeup.base_1 : int;

var ~#ppp_ldisc.base : int;

var ~ref_cnt : int;

var ~async_ops_group0.base : int;

var ~last_index : int;

var v_rep#funAddr~ppp_asynctty_receive.base_1 : int;

var v_rep#funAddr~ppp_asynctty_hangup.base_1 : int;

var #NULL.base : int;

var v_rep#funAddr~ppp_async_send.base_1 : int;

var v_rep#funAddr~ppp_asynctty_write.base_1 : int;

var v_rep#funAddr~ppp_asynctty_hangup.offset_1 : int;

var ~ldv_state_variable_1 : int;

var v_rep#funAddr~ppp_asynctty_ioctl.offset_1 : int;

var #valid : [int]int;

var #memory_int : [int][int]int;

var ~#disc_data_lock.base : int;

var ~ppp_ldisc_group1.base : int;

var v_rep#funAddr~ppp_asynctty_close.offset_1 : int;

procedure ULTIMATE.start() returns ()
modifies v_rep#funAddr~ppp_asynctty_ioctl.base_1, #memory_$Pointer$.base, ~#disc_data_lock.offset, #NULL.offset, ~#set_impl.base, v_rep#funAddr~ppp_asynctty_wakeup.offset_1, v_rep#funAddr~ppp_asynctty_open.base_1, ~ldv_state_variable_2, ~#ppp_ldisc.offset, ~ldv_retval_0, #length, v_rep#funAddr~ppp_asynctty_close.base_1, v_rep#funAddr~ppp_asynctty_open.offset_1, ~flag_time, v_rep#funAddr~ppp_asynctty_read.base_1, ~#async_ops.offset, v_rep#funAddr~ppp_asynctty_read.offset_1, ~ldv_retval_1, ~#async_ops.base, v_rep#funAddr~ppp_async_send.offset_1, ~LDV_SKBS.offset, #memory_$Pointer$.offset, ~#__this_module.base, ~#__this_module.offset, ~#set_impl.offset, v_rep#funAddr~ppp_async_ioctl.offset_1, v_rep#funAddr~ppp_asynctty_poll.base_1, v_rep#funAddr~ppp_async_ioctl.base_1, v_rep#funAddr~ppp_asynctty_write.offset_1, ~async_ops_group0.offset, v_rep#funAddr~ppp_asynctty_poll.offset_1, v_rep#funAddr~ppp_asynctty_receive.offset_1, ~ldv_state_variable_0, ~LDV_SKBS.base, ~ppp_ldisc_group1.offset, v_rep#funAddr~ppp_asynctty_wakeup.base_1, ~#ppp_ldisc.base, ~ref_cnt, ~async_ops_group0.base, ~last_index, v_rep#funAddr~ppp_asynctty_receive.base_1, v_rep#funAddr~ppp_asynctty_hangup.base_1, #NULL.base, v_rep#funAddr~ppp_async_send.base_1, v_rep#funAddr~ppp_asynctty_write.base_1, v_rep#funAddr~ppp_asynctty_hangup.offset_1, ~ldv_state_variable_1, v_rep#funAddr~ppp_asynctty_ioctl.offset_1, #valid, #memory_int, ~#disc_data_lock.base, ~ppp_ldisc_group1.base, v_rep#funAddr~ppp_asynctty_close.offset_1;
{
    var main_#t~ret458 : int;
    var ldv_initialize_ppp_channel_ops_2_~tmp~436.offset : int;
    var read~$Pointer$_#value.offset : int;
    var main_~ldvarg9~440.base : int;
    var main_#t~ret450 : int;
    var write~int_#ptr.base : int;
    var main_#t~ret438.offset : int;
    var ldv_zalloc_~tmp~117.offset : int;
    var main_~tmp___3~440.offset : int;
    var ldv_target_type_1_~tmp~438.offset : int;
    var ppp_async_init_#t~nondet182.base : int;
    var ldv_set_remove_#in~e.offset : int;
    var write~int_old_#memory_$Pointer$.offset : [int][int]int;
    var main_#t~ret447 : int;
    var main_~ldvarg4~440.offset : int;
    var ppp_asynctty_close_#t~mem164.base : int;
    var ppp_unregister_channel_#in~130.base : int;
    var main_#t~switch457 : bool;
    var #Ultimate.alloc_old_#length : [int]int;
    var write~$Pointer$_#ptr.base : int;
    var ppp_async_cleanup_#t~ret418 : int;
    var write~$Pointer$_#ptr.offset : int;
    var write~int_#sizeOfWrittenType : int;
    var main_~tmp___17~440 : int;
    var ldv_set_is_empty_~set.base : int;
    var write~int_#value : int;
    var ppp_asynctty_close_#t~ret163 : int;
    var ldv_set_remove_#t~mem466.offset : int;
    var ldv_skb_free_~skb.offset : int;
    var skb_queue_purge_#in~77.base : int;
    var ldv_kfree_skb_12_#in~ldv_func_arg1.offset : int;
    var #Ultimate.alloc_old_#valid : [int]int;
    var ldv_set_is_empty_#in~set.base : int;
    var ldv_set_is_empty_~set.offset : int;
    var write~int_#ptr.offset : int;
    var ppp_asynctty_close_#t~mem165.offset : int;
    var ULTIMATE.init_#t~nondet180.base : int;
    var main_#t~ret427.base : int;
    var main_#t~ret446 : int;
    var write~$Pointer$_old_#memory_$Pointer$.base : [int][int]int;
    var #Ultimate.alloc_~size : int;
    var tty_register_ldisc_#in~112.offset : int;
    var tasklet_kill_#in~120.offset : int;
    var tasklet_kill_#in~120.base : int;
    var ldv_target_type_1_#t~ret422.base : int;
    var ldv_set_remove_#t~mem464.offset : int;
    var main_#t~ret428.offset : int;
    var ldv_set_remove_#in~e.base : int;
    var ldv_zalloc_#t~malloc80.offset : int;
    var ppp_asynctty_close_~ap~187.base : int;
    var main_#t~nondet456 : int;
    var main_~ldvarg2~440.base : int;
    var ldv_zalloc_#t~malloc80.base : int;
    var main_#t~ret434.base : int;
    var main_#t~ret435.base : int;
    var main_~tmp___10~440.offset : int;
    var main_~tmp___3~440.base : int;
    var ldv_set_remove_~deleted_index~519 : int;
    var main_#t~ret432.base : int;
    var ppp_asynctty_close_#in~tty.base : int;
    var ldv_initialize_ppp_channel_ops_2_#t~ret421.base : int;
    var ppp_async_cleanup_#t~nondet419.base : int;
    var ldv_zalloc_~tmp___0~117 : int;
    var ldv_set_init_#in~set.base : int;
    var ppp_asynctty_close_~ap~187.offset : int;
    var main_~tmp___14~440.offset : int;
    var atomic_dec_and_test_#in~v.base : int;
    var main_#t~nondet426 : int;
    var _raw_write_unlock_irq_#in~30.base : int;
    var ULTIMATE.init_#t~nondet135.offset : int;
    var main_~tmp~440 : int;
    var main_~ldvarg0~440 : int;
    var main_~tmp___13~440 : int;
    var main_#t~ret445 : int;
    var #Ultimate.alloc_#res.offset : int;
    var main_#t~ret436.offset : int;
    var main_~ldvarg12~440.offset : int;
    var main_~ldvarg13~440.offset : int;
    var ULTIMATE.init_#t~union469.tail : int;
    var main_~ldvarg7~440.base : int;
    var ldv_skb_free_~skb.base : int;
    var main_~ldvarg2~440.offset : int;
    var main_~ldvarg16~440.offset : int;
    var ldv_initialize_ppp_channel_ops_2_#t~ret421.offset : int;
    var read~$Pointer$_#ptr.offset : int;
    var ppp_async_init_#t~ret181 : int;
    var main_~ldvarg9~440.offset : int;
    var ppp_asynctty_hangup_#in~tty.offset : int;
    var ppp_asynctty_close_#t~mem164.offset : int;
    var main_~tmp___9~440.base : int;
    var main_~ldvarg6~440.offset : int;
    var ULTIMATE.init_#t~nondet135.base : int;
    var main_~ldvarg5~440.offset : int;
    var ppp_asynctty_close_~tty.offset : int;
    var main_#t~nondet453 : int;
    var main_~ldvarg13~440.base : int;
    var main_~tmp___10~440.base : int;
    var main_#t~nondet430 : int;
    var ppp_async_init_#res : int;
    var main_~tmp___8~440.offset : int;
    var read~$Pointer$_#value.base : int;
    var main_#t~ret455 : int;
    var skb_queue_purge_#in~77.offset : int;
    var ldv_check_final_state_#t~ret468 : int;
    var ldv_set_remove_#t~mem466.base : int;
    var ppp_async_init_~err~227 : int;
    var ldv_zalloc_~p~117.base : int;
    var ldv_zalloc_~tmp~117.base : int;
    var ldv_set_remove_#in~set.base : int;
    var ldv_kfree_skb_13_~ldv_func_arg1.base : int;
    var ldv_kfree_skb_13_#in~ldv_func_arg1.base : int;
    var ldv_target_type_1_#t~ret422.offset : int;
    var _raw_write_unlock_irq_#in~30.offset : int;
    var ldv_kfree_skb_12_~ldv_func_arg1.offset : int;
    var tty_register_ldisc_#res : int;
    var ppp_asynctty_hangup_#in~tty.base : int;
    var main_~tmp___0~440.offset : int;
    var main_~ldvarg14~440 : int;
    var main_#t~nondet442 : int;
    var atomic_dec_and_test_~v.offset : int;
    var main_~tmp___4~440.offset : int;
    var main_~tmp___6~440 : int;
    var main_#t~ret429.base : int;
    var main_#t~ret433.offset : int;
    var main_#t~ret444 : int;
    var main_#t~ret427.offset : int;
    var ppp_asynctty_close_#in~tty.offset : int;
    var main_~tmp___7~440 : int;
    var main_#t~nondet439 : int;
    var write~$Pointer$_#value.base : int;
    var ldv_set_init_~set.offset : int;
    var ppp_asynctty_close_#t~mem161.offset : int;
    var ldv_set_remove_#in~set.offset : int;
    var ldv_initialize_ppp_channel_ops_2_~tmp~436.base : int;
    var main_~tmp___5~440.base : int;
    var read~$Pointer$_#ptr.base : int;
    var main_#t~nondet431 : int;
    var main_~tmp___14~440.base : int;
    var main_~ldvarg15~440 : int;
    var main_#t~switch441 : bool;
    var main_#t~ret429.offset : int;
    var main_~tmp___12~440.offset : int;
    var ppp_async_cleanup_#t~nondet419.offset : int;
    var ppp_async_init_#t~nondet182.offset : int;
    var main_~tmp___12~440.base : int;
    var main_#t~ret432.offset : int;
    var main_~tmp___1~440 : int;
    var main_~tmp___8~440.base : int;
    var ppp_async_cleanup_~tmp~430 : int;
    var ldv_set_remove_~set.offset : int;
    var ppp_async_init_#t~ret183 : int;
    var tty_unregister_ldisc_#res : int;
    var main_#t~ret424.offset : int;
    var ldv_set_remove_#t~mem464.base : int;
    var main_~ldvarg7~440.offset : int;
    var main_~ldvarg6~440.base : int;
    var main_~ldvarg10~440.offset : int;
    var tty_register_ldisc_#in~112.base : int;
    var ULTIMATE.init_#t~nondet180.offset : int;
    var main_~ldvarg11~440 : int;
    var main_~tmp___11~440.offset : int;
    var ldv_set_is_empty_#in~set.offset : int;
    var kfree_#in~31.base : int;
    var main_~ldvarg8~440 : int;
    var main_~ldvarg1~440 : int;
    var ULTIMATE.init_#t~union469.head : int;
    var main_#t~ret434.offset : int;
    var main_~ldvarg5~440.base : int;
    var main_#t~nondet425 : int;
    var write~$Pointer$_#value.offset : int;
    var ldv_kfree_skb_13_#in~ldv_func_arg1.offset : int;
    var main_#t~ret424.base : int;
    var main_#t~ret428.base : int;
    var main_#t~nondet440 : int;
    var ppp_asynctty_close_#t~mem161.base : int;
    var _raw_write_lock_irq_#in~28.offset : int;
    var ppp_unregister_channel_#in~130.offset : int;
    var ppp_asynctty_close_#t~mem165.base : int;
    var main_~ldvarg16~440.base : int;
    var main_~tmp___15~440 : int;
    var ldv_set_init_#in~set.offset : int;
    var ldv_set_init_~set.base : int;
    var ldv_kfree_skb_12_~ldv_func_arg1.base : int;
    var ldv_check_final_state_~tmp___7~542 : int;
    var write~$Pointer$_old_#memory_$Pointer$.offset : [int][int]int;
    var main_#res : int;
    var main_#t~nondet437 : int;
    var kfree_#in~31.offset : int;
    var main_~tmp___9~440.offset : int;
    var ldv_set_remove_~e.base : int;
    var main_#t~switch443 : bool;
    var write~$Pointer$_#sizeOfWrittenType : int;
    var main_#t~ret433.base : int;
    var main_#t~ret436.base : int;
    var main_~tmp___5~440.offset : int;
    var main_~tmp___16~440 : int;
    var ppp_asynctty_close_~tmp~187 : int;
    var ldv_set_remove_~i~519 : int;
    var main_~tmp___19~440 : int;
    var main_#t~ret452 : int;
    var main_~tmp___0~440.base : int;
    var main_~ldvarg3~440 : int;
    var write~$Pointer$_old_#memory_int : [int][int]int;
    var main_#t~ret438.base : int;
    var ldv_set_remove_~set.base : int;
    var _raw_write_lock_irq_#in~28.base : int;
    var main_#t~ret435.offset : int;
    var #Ultimate.alloc_#res.base : int;
    var main_~ldvarg4~440.base : int;
    var ldv_zalloc_#res.offset : int;
    var ldv_skb_free_#in~skb.base : int;
    var main_#t~ret449 : int;
    var main_~tmp___2~440 : int;
    var atomic_dec_and_test_~v.base : int;
    var write~int_old_#memory_int : [int][int]int;
    var ldv_kfree_skb_12_#in~ldv_func_arg1.base : int;
    var main_~tmp___11~440.base : int;
    var atomic_dec_and_test_#res : int;
    var main_~ldvarg12~440.base : int;
    var ldv_zalloc_#t~nondet79 : int;
    var ldv_zalloc_~size : int;
    var ldv_zalloc_#in~size : int;
    var ldv_zalloc_~p~117.offset : int;
    var ldv_skb_free_#in~skb.offset : int;
    var ldv_set_is_empty_#res : int;
    var main_#t~ret459 : int;
    var read~$Pointer$_#sizeOfReadType : int;
    var main_#t~ret451 : int;
    var main_~ldvarg10~440.base : int;
    var ldv_zalloc_#res.base : int;
    var ppp_asynctty_hangup_#res : int;
    var main_~tmp___18~440 : int;
    var atomic_dec_and_test_~c~34 : int;
    var main_~tmp___4~440.base : int;
    var ppp_asynctty_close_~tty.base : int;
    var ppp_async_cleanup_#t~ret420 : int;
    var ldv_target_type_1_~tmp~438.base : int;
    var main_#t~nondet423 : int;
    var tty_unregister_ldisc_#in~113 : int;
    var main_#t~switch454 : bool;
    var ppp_asynctty_hangup_~tty.offset : int;
    var main_#t~ret448 : int;
    var ldv_kfree_skb_13_~ldv_func_arg1.offset : int;
    var write~int_old_#memory_$Pointer$.base : [int][int]int;
    var atomic_dec_and_test_#in~v.offset : int;
    var ldv_set_remove_~e.offset : int;
    var tty_register_ldisc_#in~111 : int;
    var ppp_asynctty_hangup_~tty.base : int;

  loc0:
    havoc ULTIMATE.init_#t~nondet180.offset, ULTIMATE.init_#t~nondet135.base, ULTIMATE.init_#t~union469.head, ULTIMATE.init_#t~union469.tail, ULTIMATE.init_#t~nondet180.base, ULTIMATE.init_#t~nondet135.offset;
    #NULL.offset, #NULL.base := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_state_variable_2 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_0 := 0;
    ~flag_time := 250;
    ~ldv_retval_0 := 0;
    ~ldv_retval_1 := 0;
    ~last_index := 0;
    ~async_ops_group0.base, ~async_ops_group0.offset := 0, 0;
    ~ppp_ldisc_group1.base, ~ppp_ldisc_group1.offset := 0, 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 16;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#async_ops.offset, ~#async_ops.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ppp_async_send.base_1, ~#async_ops.offset, 8, v_rep#funAddr~ppp_async_send.offset_1, ~#async_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ppp_async_ioctl.base_1, ~#async_ops.offset + 8, 8, v_rep#funAddr~ppp_async_ioctl.offset_1, ~#async_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 68;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#disc_data_lock.offset, ~#disc_data_lock.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#disc_data_lock.base, 0, ~#disc_data_lock.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#disc_data_lock.base, 0, ~#disc_data_lock.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#disc_data_lock.base, ULTIMATE.init_#t~union469.head, ~#disc_data_lock.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#disc_data_lock.base, ULTIMATE.init_#t~union469.tail, ~#disc_data_lock.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#disc_data_lock.base, 3736018669, ~#disc_data_lock.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#disc_data_lock.base, 4294967295, ~#disc_data_lock.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#disc_data_lock.offset + 16, 8, -1, ~#disc_data_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#disc_data_lock.offset + 24, 8, 0, ~#disc_data_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#disc_data_lock.base, 0, ~#disc_data_lock.offset + 32;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#disc_data_lock.base, 0, ~#disc_data_lock.offset + 40;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet135.base, ULTIMATE.init_#t~nondet135.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet135.base, ~#disc_data_lock.offset + 48, 8, ULTIMATE.init_#t~nondet135.offset, ~#disc_data_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#disc_data_lock.base, 0, ~#disc_data_lock.offset + 56;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#disc_data_lock.base, 0, ~#disc_data_lock.offset + 60;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc ULTIMATE.init_#t~union469.head, ULTIMATE.init_#t~union469.tail;
    havoc ULTIMATE.init_#t~nondet135.base, ULTIMATE.init_#t~nondet135.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 160;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#ppp_ldisc.offset, ~#ppp_ldisc.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#ppp_ldisc.base, 21507, ~#ppp_ldisc.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet180.offset, ULTIMATE.init_#t~nondet180.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet180.base := #memory_int[ULTIMATE.init_#t~nondet180.base][ULTIMATE.init_#t~nondet180.offset := 112]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet180.base := #memory_int[ULTIMATE.init_#t~nondet180.base][ULTIMATE.init_#t~nondet180.offset + 1 := 112]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet180.base := #memory_int[ULTIMATE.init_#t~nondet180.base][ULTIMATE.init_#t~nondet180.offset + 2 := 112]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet180.base := #memory_int[ULTIMATE.init_#t~nondet180.base][ULTIMATE.init_#t~nondet180.offset + 3 := 0]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet180.base, ~#ppp_ldisc.offset + 4, 8, ULTIMATE.init_#t~nondet180.offset, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#ppp_ldisc.base, 0, ~#ppp_ldisc.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#ppp_ldisc.base, 0, ~#ppp_ldisc.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ppp_asynctty_open.base_1, ~#ppp_ldisc.offset + 20, 8, v_rep#funAddr~ppp_asynctty_open.offset_1, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ppp_asynctty_close.base_1, ~#ppp_ldisc.offset + 28, 8, v_rep#funAddr~ppp_asynctty_close.offset_1, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#ppp_ldisc.offset + 36, 8, 0, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#ppp_ldisc.offset + 44, 8, 0, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ppp_asynctty_read.base_1, ~#ppp_ldisc.offset + 52, 8, v_rep#funAddr~ppp_asynctty_read.offset_1, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ppp_asynctty_write.base_1, ~#ppp_ldisc.offset + 60, 8, v_rep#funAddr~ppp_asynctty_write.offset_1, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ppp_asynctty_ioctl.base_1, ~#ppp_ldisc.offset + 68, 8, v_rep#funAddr~ppp_asynctty_ioctl.offset_1, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#ppp_ldisc.offset + 76, 8, 0, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#ppp_ldisc.offset + 84, 8, 0, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ppp_asynctty_poll.base_1, ~#ppp_ldisc.offset + 92, 8, v_rep#funAddr~ppp_asynctty_poll.offset_1, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ppp_asynctty_hangup.base_1, ~#ppp_ldisc.offset + 100, 8, v_rep#funAddr~ppp_asynctty_hangup.offset_1, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ppp_asynctty_receive.base_1, ~#ppp_ldisc.offset + 108, 8, v_rep#funAddr~ppp_asynctty_receive.offset_1, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ppp_asynctty_wakeup.base_1, ~#ppp_ldisc.offset + 116, 8, v_rep#funAddr~ppp_asynctty_wakeup.offset_1, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#ppp_ldisc.offset + 124, 8, 0, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#ppp_ldisc.offset + 132, 8, 0, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#ppp_ldisc.offset + 140, 8, 0, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#__this_module.base, ~#ppp_ldisc.offset + 148, 8, ~#__this_module.offset, ~#ppp_ldisc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#ppp_ldisc.base, 0, ~#ppp_ldisc.offset + 156;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc ULTIMATE.init_#t~nondet180.offset, ULTIMATE.init_#t~nondet180.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 120;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#set_impl.base, ~#set_impl.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 8, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 16, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 24, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 32, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 40, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 48, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 56, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 64, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 72, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 80, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 88, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 96, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 104, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 112, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    ~LDV_SKBS.base, ~LDV_SKBS.offset := 0, 0;
    havoc main_#res;
    havoc main_#t~switch441, main_#t~ret429.offset, main_~tmp___12~440.offset, main_#t~ret458, main_~ldvarg9~440.base, main_#t~ret450, main_#t~ret438.offset, main_~tmp___12~440.base, main_~tmp___3~440.offset, main_#t~ret432.offset, main_~tmp___1~440, main_~tmp___8~440.base, main_#t~ret447, main_~ldvarg4~440.offset, main_#t~switch457, main_#t~ret424.offset, main_~tmp___17~440, main_~ldvarg7~440.offset, main_~ldvarg6~440.base, main_~ldvarg10~440.offset, main_~ldvarg11~440, main_~tmp___11~440.offset, main_~ldvarg8~440, main_~ldvarg1~440, main_#t~ret434.offset, main_~ldvarg5~440.base, main_#t~nondet425, main_#t~ret424.base, main_#t~ret428.base, main_#t~ret427.base, main_#t~nondet440, main_#t~ret446, main_~ldvarg16~440.base, main_~tmp___15~440, main_#t~ret428.offset, main_#t~nondet437, main_#t~nondet456, main_~ldvarg2~440.base, main_~tmp___9~440.offset, main_#t~ret434.base, main_#t~ret435.base, main_#t~switch443, main_~tmp___10~440.offset, main_~tmp___3~440.base, main_#t~ret432.base, main_#t~ret433.base, main_#t~ret436.base, main_~tmp___5~440.offset, main_~tmp___16~440, main_~tmp___19~440, main_#t~ret452, main_~tmp___14~440.offset, main_~tmp___0~440.base, main_~ldvarg3~440, main_#t~nondet426, main_#t~ret438.base, main_#t~ret435.offset, main_~tmp~440, main_~ldvarg0~440, main_~ldvarg4~440.base, main_~tmp___13~440, main_#t~ret445, main_#t~ret436.offset, main_~ldvarg12~440.offset, main_#t~ret449, main_~ldvarg13~440.offset, main_~tmp___2~440, main_~ldvarg7~440.base, main_~ldvarg2~440.offset, main_~ldvarg16~440.offset, main_~tmp___11~440.base, main_~ldvarg12~440.base, main_~ldvarg9~440.offset, main_~tmp___9~440.base, main_~ldvarg6~440.offset, main_~ldvarg5~440.offset, main_#t~nondet453, main_~ldvarg13~440.base, main_~tmp___10~440.base, main_#t~nondet430, main_~tmp___8~440.offset, main_#t~ret455, main_#t~ret459, main_#t~ret451, main_~ldvarg10~440.base, main_~tmp___18~440, main_~tmp___4~440.base, main_~tmp___0~440.offset, main_~ldvarg14~440, main_#t~nondet442, main_~tmp___4~440.offset, main_~tmp___6~440, main_#t~nondet423, main_#t~ret429.base, main_#t~ret433.offset, main_#t~switch454, main_#t~ret444, main_#t~ret427.offset, main_#t~ret448, main_~tmp___7~440, main_#t~nondet439, main_~tmp___5~440.base, main_#t~nondet431, main_~tmp___14~440.base, main_~ldvarg15~440;
    havoc main_~ldvarg11~440;
    havoc main_~tmp~440;
    havoc main_~ldvarg7~440.base, main_~ldvarg7~440.offset;
    havoc main_~tmp___0~440.base, main_~tmp___0~440.offset;
    havoc main_~ldvarg3~440;
    havoc main_~tmp___1~440;
    havoc main_~ldvarg0~440;
    havoc main_~tmp___2~440;
    havoc main_~ldvarg12~440.offset, main_~ldvarg12~440.base;
    havoc main_~tmp___3~440.base, main_~tmp___3~440.offset;
    havoc main_~ldvarg5~440.offset, main_~ldvarg5~440.base;
    havoc main_~tmp___4~440.base, main_~tmp___4~440.offset;
    havoc main_~ldvarg6~440.offset, main_~ldvarg6~440.base;
    havoc main_~tmp___5~440.base, main_~tmp___5~440.offset;
    havoc main_~ldvarg8~440;
    havoc main_~tmp___6~440;
    havoc main_~ldvarg1~440;
    havoc main_~tmp___7~440;
    havoc main_~ldvarg4~440.offset, main_~ldvarg4~440.base;
    havoc main_~tmp___8~440.base, main_~tmp___8~440.offset;
    havoc main_~ldvarg13~440.offset, main_~ldvarg13~440.base;
    havoc main_~tmp___9~440.offset, main_~tmp___9~440.base;
    havoc main_~ldvarg10~440.offset, main_~ldvarg10~440.base;
    havoc main_~tmp___10~440.offset, main_~tmp___10~440.base;
    havoc main_~ldvarg9~440.offset, main_~ldvarg9~440.base;
    havoc main_~tmp___11~440.offset, main_~tmp___11~440.base;
    havoc main_~ldvarg2~440.base, main_~ldvarg2~440.offset;
    havoc main_~tmp___12~440.offset, main_~tmp___12~440.base;
    havoc main_~ldvarg14~440;
    havoc main_~tmp___13~440;
    havoc main_~ldvarg16~440.offset, main_~ldvarg16~440.base;
    havoc main_~tmp___14~440.base, main_~tmp___14~440.offset;
    havoc main_~ldvarg15~440;
    havoc main_~tmp___15~440;
    havoc main_~tmp___16~440;
    havoc main_~tmp___17~440;
    havoc main_~tmp___18~440;
    havoc main_~tmp___19~440;
    assume main_#t~nondet423 <= 2147483647 && 0 <= main_#t~nondet423 + 2147483648;
    main_~tmp~440 := main_#t~nondet423;
    havoc main_#t~nondet423;
    main_~ldvarg11~440 := main_~tmp~440;
    ldv_zalloc_#in~size := 512;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_#t~nondet79, ldv_zalloc_~size, ldv_zalloc_~tmp~117.offset, ldv_zalloc_#t~malloc80.offset, ldv_zalloc_#t~malloc80.base, ldv_zalloc_~tmp___0~117, ldv_zalloc_~p~117.base, ldv_zalloc_~tmp~117.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_~p~117.base;
    havoc ldv_zalloc_~tmp~117.offset, ldv_zalloc_~tmp~117.base;
    havoc ldv_zalloc_~tmp___0~117;
    assume 0 <= ldv_zalloc_#t~nondet79 + 2147483648 && ldv_zalloc_#t~nondet79 <= 2147483647;
    ldv_zalloc_~tmp___0~117 := ldv_zalloc_#t~nondet79;
    havoc ldv_zalloc_#t~nondet79;
    assume !(ldv_zalloc_~tmp___0~117 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret424.base, main_#t~ret424.offset := ldv_zalloc_#res.base, ldv_zalloc_#res.offset;
    main_~tmp___0~440.base, main_~tmp___0~440.offset := main_#t~ret424.base, main_#t~ret424.offset;
    havoc main_#t~ret424.base, main_#t~ret424.offset;
    main_~ldvarg7~440.base, main_~ldvarg7~440.offset := main_~tmp___0~440.base, main_~tmp___0~440.offset;
    assume 0 <= main_#t~nondet425 + 2147483648 && main_#t~nondet425 <= 2147483647;
    main_~tmp___1~440 := main_#t~nondet425;
    havoc main_#t~nondet425;
    main_~ldvarg3~440 := main_~tmp___1~440;
    main_~tmp___2~440 := main_#t~nondet426;
    havoc main_#t~nondet426;
    main_~ldvarg0~440 := main_~tmp___2~440;
    ldv_zalloc_#in~size := 1;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_#t~nondet79, ldv_zalloc_~size, ldv_zalloc_~tmp~117.offset, ldv_zalloc_#t~malloc80.offset, ldv_zalloc_#t~malloc80.base, ldv_zalloc_~tmp___0~117, ldv_zalloc_~p~117.base, ldv_zalloc_~tmp~117.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_~p~117.base;
    havoc ldv_zalloc_~tmp~117.offset, ldv_zalloc_~tmp~117.base;
    havoc ldv_zalloc_~tmp___0~117;
    assume 0 <= ldv_zalloc_#t~nondet79 + 2147483648 && ldv_zalloc_#t~nondet79 <= 2147483647;
    ldv_zalloc_~tmp___0~117 := ldv_zalloc_#t~nondet79;
    havoc ldv_zalloc_#t~nondet79;
    assume !(ldv_zalloc_~tmp___0~117 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret427.offset, main_#t~ret427.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    main_~tmp___3~440.base, main_~tmp___3~440.offset := main_#t~ret427.base, main_#t~ret427.offset;
    havoc main_#t~ret427.offset, main_#t~ret427.base;
    main_~ldvarg12~440.offset, main_~ldvarg12~440.base := main_~tmp___3~440.offset, main_~tmp___3~440.base;
    ldv_zalloc_#in~size := 1;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_#t~nondet79, ldv_zalloc_~size, ldv_zalloc_~tmp~117.offset, ldv_zalloc_#t~malloc80.offset, ldv_zalloc_#t~malloc80.base, ldv_zalloc_~tmp___0~117, ldv_zalloc_~p~117.base, ldv_zalloc_~tmp~117.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_~p~117.base;
    havoc ldv_zalloc_~tmp~117.offset, ldv_zalloc_~tmp~117.base;
    havoc ldv_zalloc_~tmp___0~117;
    assume ldv_zalloc_#t~nondet79 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet79 + 2147483648;
    ldv_zalloc_~tmp___0~117 := ldv_zalloc_#t~nondet79;
    havoc ldv_zalloc_#t~nondet79;
    assume !(ldv_zalloc_~tmp___0~117 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret428.offset, main_#t~ret428.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    main_~tmp___4~440.base, main_~tmp___4~440.offset := main_#t~ret428.base, main_#t~ret428.offset;
    havoc main_#t~ret428.offset, main_#t~ret428.base;
    main_~ldvarg5~440.offset, main_~ldvarg5~440.base := main_~tmp___4~440.offset, main_~tmp___4~440.base;
    ldv_zalloc_#in~size := 16;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_#t~nondet79, ldv_zalloc_~size, ldv_zalloc_~tmp~117.offset, ldv_zalloc_#t~malloc80.offset, ldv_zalloc_#t~malloc80.base, ldv_zalloc_~tmp___0~117, ldv_zalloc_~p~117.base, ldv_zalloc_~tmp~117.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_~p~117.base;
    havoc ldv_zalloc_~tmp~117.offset, ldv_zalloc_~tmp~117.base;
    havoc ldv_zalloc_~tmp___0~117;
    assume 0 <= ldv_zalloc_#t~nondet79 + 2147483648 && ldv_zalloc_#t~nondet79 <= 2147483647;
    ldv_zalloc_~tmp___0~117 := ldv_zalloc_#t~nondet79;
    havoc ldv_zalloc_#t~nondet79;
    assume !(ldv_zalloc_~tmp___0~117 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret429.offset, main_#t~ret429.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    main_~tmp___5~440.base, main_~tmp___5~440.offset := main_#t~ret429.base, main_#t~ret429.offset;
    havoc main_#t~ret429.offset, main_#t~ret429.base;
    main_~ldvarg6~440.offset, main_~ldvarg6~440.base := main_~tmp___5~440.offset, main_~tmp___5~440.base;
    assume 0 <= main_#t~nondet430 + 2147483648 && main_#t~nondet430 <= 2147483647;
    main_~tmp___6~440 := main_#t~nondet430;
    havoc main_#t~nondet430;
    main_~ldvarg8~440 := main_~tmp___6~440;
    main_~tmp___7~440 := main_#t~nondet431;
    havoc main_#t~nondet431;
    main_~ldvarg1~440 := main_~tmp___7~440;
    ldv_zalloc_#in~size := 1;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_#t~nondet79, ldv_zalloc_~size, ldv_zalloc_~tmp~117.offset, ldv_zalloc_#t~malloc80.offset, ldv_zalloc_#t~malloc80.base, ldv_zalloc_~tmp___0~117, ldv_zalloc_~p~117.base, ldv_zalloc_~tmp~117.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_~p~117.base;
    havoc ldv_zalloc_~tmp~117.offset, ldv_zalloc_~tmp~117.base;
    havoc ldv_zalloc_~tmp___0~117;
    assume 0 <= ldv_zalloc_#t~nondet79 + 2147483648 && ldv_zalloc_#t~nondet79 <= 2147483647;
    ldv_zalloc_~tmp___0~117 := ldv_zalloc_#t~nondet79;
    havoc ldv_zalloc_#t~nondet79;
    assume !(ldv_zalloc_~tmp___0~117 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret432.base, main_#t~ret432.offset := ldv_zalloc_#res.base, ldv_zalloc_#res.offset;
    main_~tmp___8~440.base, main_~tmp___8~440.offset := main_#t~ret432.base, main_#t~ret432.offset;
    havoc main_#t~ret432.base, main_#t~ret432.offset;
    main_~ldvarg4~440.offset, main_~ldvarg4~440.base := main_~tmp___8~440.offset, main_~tmp___8~440.base;
    ldv_zalloc_#in~size := 512;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_#t~nondet79, ldv_zalloc_~size, ldv_zalloc_~tmp~117.offset, ldv_zalloc_#t~malloc80.offset, ldv_zalloc_#t~malloc80.base, ldv_zalloc_~tmp___0~117, ldv_zalloc_~p~117.base, ldv_zalloc_~tmp~117.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_~p~117.base;
    havoc ldv_zalloc_~tmp~117.offset, ldv_zalloc_~tmp~117.base;
    havoc ldv_zalloc_~tmp___0~117;
    assume ldv_zalloc_#t~nondet79 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet79 + 2147483648;
    ldv_zalloc_~tmp___0~117 := ldv_zalloc_#t~nondet79;
    havoc ldv_zalloc_#t~nondet79;
    assume !(ldv_zalloc_~tmp___0~117 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret433.offset, main_#t~ret433.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    main_~tmp___9~440.offset, main_~tmp___9~440.base := main_#t~ret433.offset, main_#t~ret433.base;
    havoc main_#t~ret433.offset, main_#t~ret433.base;
    main_~ldvarg13~440.offset, main_~ldvarg13~440.base := main_~tmp___9~440.offset, main_~tmp___9~440.base;
    ldv_zalloc_#in~size := 512;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_#t~nondet79, ldv_zalloc_~size, ldv_zalloc_~tmp~117.offset, ldv_zalloc_#t~malloc80.offset, ldv_zalloc_#t~malloc80.base, ldv_zalloc_~tmp___0~117, ldv_zalloc_~p~117.base, ldv_zalloc_~tmp~117.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_~p~117.base;
    havoc ldv_zalloc_~tmp~117.offset, ldv_zalloc_~tmp~117.base;
    havoc ldv_zalloc_~tmp___0~117;
    assume ldv_zalloc_#t~nondet79 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet79 + 2147483648;
    ldv_zalloc_~tmp___0~117 := ldv_zalloc_#t~nondet79;
    havoc ldv_zalloc_#t~nondet79;
    assume !(ldv_zalloc_~tmp___0~117 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret434.base, main_#t~ret434.offset := ldv_zalloc_#res.base, ldv_zalloc_#res.offset;
    main_~tmp___10~440.offset, main_~tmp___10~440.base := main_#t~ret434.offset, main_#t~ret434.base;
    havoc main_#t~ret434.base, main_#t~ret434.offset;
    main_~ldvarg10~440.offset, main_~ldvarg10~440.base := main_~tmp___10~440.offset, main_~tmp___10~440.base;
    ldv_zalloc_#in~size := 1;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_#t~nondet79, ldv_zalloc_~size, ldv_zalloc_~tmp~117.offset, ldv_zalloc_#t~malloc80.offset, ldv_zalloc_#t~malloc80.base, ldv_zalloc_~tmp___0~117, ldv_zalloc_~p~117.base, ldv_zalloc_~tmp~117.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_~p~117.base;
    havoc ldv_zalloc_~tmp~117.offset, ldv_zalloc_~tmp~117.base;
    havoc ldv_zalloc_~tmp___0~117;
    assume 0 <= ldv_zalloc_#t~nondet79 + 2147483648 && ldv_zalloc_#t~nondet79 <= 2147483647;
    ldv_zalloc_~tmp___0~117 := ldv_zalloc_#t~nondet79;
    havoc ldv_zalloc_#t~nondet79;
    assume !(ldv_zalloc_~tmp___0~117 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret435.base, main_#t~ret435.offset := ldv_zalloc_#res.base, ldv_zalloc_#res.offset;
    main_~tmp___11~440.offset, main_~tmp___11~440.base := main_#t~ret435.offset, main_#t~ret435.base;
    havoc main_#t~ret435.base, main_#t~ret435.offset;
    main_~ldvarg9~440.offset, main_~ldvarg9~440.base := main_~tmp___11~440.offset, main_~tmp___11~440.base;
    ldv_zalloc_#in~size := 512;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_#t~nondet79, ldv_zalloc_~size, ldv_zalloc_~tmp~117.offset, ldv_zalloc_#t~malloc80.offset, ldv_zalloc_#t~malloc80.base, ldv_zalloc_~tmp___0~117, ldv_zalloc_~p~117.base, ldv_zalloc_~tmp~117.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_~p~117.base;
    havoc ldv_zalloc_~tmp~117.offset, ldv_zalloc_~tmp~117.base;
    havoc ldv_zalloc_~tmp___0~117;
    assume ldv_zalloc_#t~nondet79 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet79 + 2147483648;
    ldv_zalloc_~tmp___0~117 := ldv_zalloc_#t~nondet79;
    havoc ldv_zalloc_#t~nondet79;
    assume !(ldv_zalloc_~tmp___0~117 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret436.offset, main_#t~ret436.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    main_~tmp___12~440.offset, main_~tmp___12~440.base := main_#t~ret436.offset, main_#t~ret436.base;
    havoc main_#t~ret436.offset, main_#t~ret436.base;
    main_~ldvarg2~440.base, main_~ldvarg2~440.offset := main_~tmp___12~440.base, main_~tmp___12~440.offset;
    main_~tmp___13~440 := main_#t~nondet437;
    havoc main_#t~nondet437;
    main_~ldvarg14~440 := main_~tmp___13~440;
    ldv_zalloc_#in~size := 232;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_#t~nondet79, ldv_zalloc_~size, ldv_zalloc_~tmp~117.offset, ldv_zalloc_#t~malloc80.offset, ldv_zalloc_#t~malloc80.base, ldv_zalloc_~tmp___0~117, ldv_zalloc_~p~117.base, ldv_zalloc_~tmp~117.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_~p~117.base;
    havoc ldv_zalloc_~tmp~117.offset, ldv_zalloc_~tmp~117.base;
    havoc ldv_zalloc_~tmp___0~117;
    assume ldv_zalloc_#t~nondet79 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet79 + 2147483648;
    ldv_zalloc_~tmp___0~117 := ldv_zalloc_#t~nondet79;
    havoc ldv_zalloc_#t~nondet79;
    assume !(ldv_zalloc_~tmp___0~117 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret438.offset, main_#t~ret438.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    main_~tmp___14~440.base, main_~tmp___14~440.offset := main_#t~ret438.base, main_#t~ret438.offset;
    havoc main_#t~ret438.offset, main_#t~ret438.base;
    main_~ldvarg16~440.offset, main_~ldvarg16~440.base := main_~tmp___14~440.offset, main_~tmp___14~440.base;
    main_~tmp___15~440 := main_#t~nondet439;
    havoc main_#t~nondet439;
    main_~ldvarg15~440 := main_~tmp___15~440;
    ldv_set_init_#in~set.base, ldv_set_init_#in~set.offset := ~LDV_SKBS.base, ~LDV_SKBS.offset;
    havoc ldv_set_init_~set.offset, ldv_set_init_~set.base;
    ldv_set_init_~set.offset, ldv_set_init_~set.base := ldv_set_init_#in~set.offset, ldv_set_init_#in~set.base;
    ldv_set_init_~set.offset, ldv_set_init_~set.base := ~#set_impl.offset, ~#set_impl.base;
    ~last_index := 0;
    ~ldv_state_variable_1 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_2 := 0;
    goto loc1;
  loc1:
    assume 0 <= main_#t~nondet440 + 2147483648 && main_#t~nondet440 <= 2147483647;
    main_~tmp___16~440 := main_#t~nondet440;
    havoc main_#t~nondet440;
    goto loc2;
  loc2:
    goto loc2_0, loc2_1;
  loc2_0:
    assume !(main_~tmp___16~440 == 0);
    main_#t~switch441 := false;
    goto loc3;
  loc2_1:
    assume main_~tmp___16~440 == 0;
    main_#t~switch441 := true;
    goto loc3;
  loc3:
    goto loc3_0, loc3_1;
  loc3_0:
    assume !main_#t~switch441;
    assume main_~tmp___16~440 == 1;
    main_#t~switch441 := true;
    assume main_#t~switch441;
    assume !(~ldv_state_variable_0 == 0);
    assume 0 <= main_#t~nondet453 + 2147483648 && main_#t~nondet453 <= 2147483647;
    main_~tmp___18~440 := main_#t~nondet453;
    havoc main_#t~nondet453;
    goto loc4;
  loc3_1:
    assume main_#t~switch441;
    assume !(~ldv_state_variable_1 == 0);
    assume main_#t~nondet442 <= 2147483647 && 0 <= main_#t~nondet442 + 2147483648;
    main_~tmp___17~440 := main_#t~nondet442;
    havoc main_#t~nondet442;
    assume main_~tmp___17~440 == 0;
    main_#t~switch443 := true;
    assume !main_#t~switch443;
    assume main_#t~switch443;
    main_#t~switch443 := true;
    assume !main_#t~switch443;
    assume main_~tmp___17~440 == 2;
    main_#t~switch443 := true;
    assume !main_#t~switch443;
    assume main_#t~switch443;
    main_#t~switch443 := true;
    assume main_#t~switch443;
    assume ~ldv_state_variable_1 == 1;
    ppp_asynctty_hangup_#in~tty.offset, ppp_asynctty_hangup_#in~tty.base := ~ppp_ldisc_group1.offset, ~ppp_ldisc_group1.base;
    havoc ppp_asynctty_hangup_#res;
    havoc ppp_asynctty_hangup_~tty.offset, ppp_asynctty_hangup_~tty.base;
    ppp_asynctty_hangup_~tty.offset, ppp_asynctty_hangup_~tty.base := ppp_asynctty_hangup_#in~tty.offset, ppp_asynctty_hangup_#in~tty.base;
    ppp_asynctty_close_#in~tty.base, ppp_asynctty_close_#in~tty.offset := ppp_asynctty_hangup_~tty.base, ppp_asynctty_hangup_~tty.offset;
    havoc ppp_asynctty_close_#t~mem161.base, ppp_asynctty_close_#t~mem164.offset, ppp_asynctty_close_#t~mem161.offset, ppp_asynctty_close_~tty.base, ppp_asynctty_close_~tty.offset, ppp_asynctty_close_~ap~187.base, ppp_asynctty_close_#t~mem164.base, ppp_asynctty_close_~tmp~187, ppp_asynctty_close_#t~mem165.base, ppp_asynctty_close_~ap~187.offset, ppp_asynctty_close_#t~ret163, ppp_asynctty_close_#t~mem165.offset;
    ppp_asynctty_close_~tty.base, ppp_asynctty_close_~tty.offset := ppp_asynctty_close_#in~tty.base, ppp_asynctty_close_#in~tty.offset;
    havoc ppp_asynctty_close_~ap~187.base, ppp_asynctty_close_~ap~187.offset;
    havoc ppp_asynctty_close_~tmp~187;
    _raw_write_lock_irq_#in~28.offset, _raw_write_lock_irq_#in~28.base := ~#disc_data_lock.offset, ~#disc_data_lock.base;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := ppp_asynctty_close_~tty.base, 8, ppp_asynctty_close_~tty.offset + 1509;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    ppp_asynctty_close_#t~mem161.base, ppp_asynctty_close_#t~mem161.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    ppp_asynctty_close_~ap~187.base, ppp_asynctty_close_~ap~187.offset := ppp_asynctty_close_#t~mem161.base, ppp_asynctty_close_#t~mem161.offset;
    havoc ppp_asynctty_close_#t~mem161.base, ppp_asynctty_close_#t~mem161.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ppp_asynctty_close_~tty.offset + 1509, 8, 0, ppp_asynctty_close_~tty.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    _raw_write_unlock_irq_#in~30.offset, _raw_write_unlock_irq_#in~30.base := ~#disc_data_lock.offset, ~#disc_data_lock.base;
    assume (!(ppp_asynctty_close_~ap~187.base + ppp_asynctty_close_~ap~187.offset + 18446744073709551616 == 0) && -18446744073709551616 <= ppp_asynctty_close_~ap~187.base + ppp_asynctty_close_~ap~187.offset) && ppp_asynctty_close_~ap~187.base + ppp_asynctty_close_~ap~187.offset < 0;
    atomic_dec_and_test_#in~v.base, atomic_dec_and_test_#in~v.offset := ppp_asynctty_close_~ap~187.base, ppp_asynctty_close_~ap~187.offset + 386;
    havoc atomic_dec_and_test_#res;
    havoc atomic_dec_and_test_~c~34, atomic_dec_and_test_~v.base, atomic_dec_and_test_~v.offset;
    atomic_dec_and_test_~v.base, atomic_dec_and_test_~v.offset := atomic_dec_and_test_#in~v.base, atomic_dec_and_test_#in~v.offset;
    havoc atomic_dec_and_test_~c~34;
    assume atomic_dec_and_test_~c~34 == 0;
    atomic_dec_and_test_#res := 0;
    ppp_asynctty_close_#t~ret163 := atomic_dec_and_test_#res;
    assume 0 <= ppp_asynctty_close_#t~ret163 + 2147483648 && ppp_asynctty_close_#t~ret163 <= 2147483647;
    ppp_asynctty_close_~tmp~187 := ppp_asynctty_close_#t~ret163;
    havoc ppp_asynctty_close_#t~ret163;
    assume !(ppp_asynctty_close_~tmp~187 == 0);
    tasklet_kill_#in~120.offset, tasklet_kill_#in~120.base := ppp_asynctty_close_~ap~187.offset + 350, ppp_asynctty_close_~ap~187.base;
    ppp_unregister_channel_#in~130.offset, ppp_unregister_channel_#in~130.base := ppp_asynctty_close_~ap~187.offset + 474, ppp_asynctty_close_~ap~187.base;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := ppp_asynctty_close_~ap~187.base, 8, ppp_asynctty_close_~ap~187.offset + 250;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    ppp_asynctty_close_#t~mem164.offset, ppp_asynctty_close_#t~mem164.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    ldv_kfree_skb_12_#in~ldv_func_arg1.offset, ldv_kfree_skb_12_#in~ldv_func_arg1.base := ppp_asynctty_close_#t~mem164.offset, ppp_asynctty_close_#t~mem164.base;
    havoc ldv_kfree_skb_12_~ldv_func_arg1.base, ldv_kfree_skb_12_~ldv_func_arg1.offset;
    ldv_kfree_skb_12_~ldv_func_arg1.base, ldv_kfree_skb_12_~ldv_func_arg1.offset := ldv_kfree_skb_12_#in~ldv_func_arg1.base, ldv_kfree_skb_12_#in~ldv_func_arg1.offset;
    ldv_skb_free_#in~skb.base, ldv_skb_free_#in~skb.offset := ldv_kfree_skb_12_~ldv_func_arg1.base, ldv_kfree_skb_12_~ldv_func_arg1.offset;
    havoc ldv_skb_free_~skb.offset, ldv_skb_free_~skb.base;
    ldv_skb_free_~skb.offset, ldv_skb_free_~skb.base := ldv_skb_free_#in~skb.offset, ldv_skb_free_#in~skb.base;
    ldv_set_remove_#in~e.offset, ldv_set_remove_#in~set.offset, ldv_set_remove_#in~e.base, ldv_set_remove_#in~set.base := ldv_skb_free_~skb.offset, ~LDV_SKBS.offset, ldv_skb_free_~skb.base, ~LDV_SKBS.base;
    havoc ldv_set_remove_~e.base, ldv_set_remove_~e.offset, ldv_set_remove_~deleted_index~519, ldv_set_remove_#t~mem464.base, ldv_set_remove_#t~mem466.base, ldv_set_remove_~set.base, ldv_set_remove_~i~519, ldv_set_remove_~set.offset, ldv_set_remove_#t~mem466.offset, ldv_set_remove_#t~mem464.offset;
    ldv_set_remove_~set.base, ldv_set_remove_~set.offset := ldv_set_remove_#in~set.base, ldv_set_remove_#in~set.offset;
    ldv_set_remove_~e.base, ldv_set_remove_~e.offset := ldv_set_remove_#in~e.base, ldv_set_remove_#in~e.offset;
    havoc ldv_set_remove_~i~519;
    havoc ldv_set_remove_~deleted_index~519;
    ldv_set_remove_~deleted_index~519 := -1;
    ldv_set_remove_~i~519 := 0;
    assume !(ldv_set_remove_~i~519 < ~last_index);
    assume ldv_set_remove_~deleted_index~519 == -1;
    havoc ppp_asynctty_close_#t~mem164.offset, ppp_asynctty_close_#t~mem164.base;
    skb_queue_purge_#in~77.offset, skb_queue_purge_#in~77.base := ppp_asynctty_close_~ap~187.offset + 262, ppp_asynctty_close_~ap~187.base;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := ppp_asynctty_close_~ap~187.base, 8, ppp_asynctty_close_~ap~187.offset + 212;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    ppp_asynctty_close_#t~mem165.base, ppp_asynctty_close_#t~mem165.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    ldv_kfree_skb_13_#in~ldv_func_arg1.base, ldv_kfree_skb_13_#in~ldv_func_arg1.offset := ppp_asynctty_close_#t~mem165.base, ppp_asynctty_close_#t~mem165.offset;
    havoc ldv_kfree_skb_13_~ldv_func_arg1.offset, ldv_kfree_skb_13_~ldv_func_arg1.base;
    ldv_kfree_skb_13_~ldv_func_arg1.offset, ldv_kfree_skb_13_~ldv_func_arg1.base := ldv_kfree_skb_13_#in~ldv_func_arg1.offset, ldv_kfree_skb_13_#in~ldv_func_arg1.base;
    ldv_skb_free_#in~skb.base, ldv_skb_free_#in~skb.offset := ldv_kfree_skb_13_~ldv_func_arg1.base, ldv_kfree_skb_13_~ldv_func_arg1.offset;
    havoc ldv_skb_free_~skb.offset, ldv_skb_free_~skb.base;
    ldv_skb_free_~skb.offset, ldv_skb_free_~skb.base := ldv_skb_free_#in~skb.offset, ldv_skb_free_#in~skb.base;
    ldv_set_remove_#in~e.offset, ldv_set_remove_#in~set.offset, ldv_set_remove_#in~e.base, ldv_set_remove_#in~set.base := ldv_skb_free_~skb.offset, ~LDV_SKBS.offset, ldv_skb_free_~skb.base, ~LDV_SKBS.base;
    havoc ldv_set_remove_~e.base, ldv_set_remove_~e.offset, ldv_set_remove_~deleted_index~519, ldv_set_remove_#t~mem464.base, ldv_set_remove_#t~mem466.base, ldv_set_remove_~set.base, ldv_set_remove_~i~519, ldv_set_remove_~set.offset, ldv_set_remove_#t~mem466.offset, ldv_set_remove_#t~mem464.offset;
    ldv_set_remove_~set.base, ldv_set_remove_~set.offset := ldv_set_remove_#in~set.base, ldv_set_remove_#in~set.offset;
    ldv_set_remove_~e.base, ldv_set_remove_~e.offset := ldv_set_remove_#in~e.base, ldv_set_remove_#in~e.offset;
    havoc ldv_set_remove_~i~519;
    havoc ldv_set_remove_~deleted_index~519;
    ldv_set_remove_~deleted_index~519 := -1;
    ldv_set_remove_~i~519 := 0;
    assume !(ldv_set_remove_~i~519 < ~last_index);
    assume !(ldv_set_remove_~deleted_index~519 == -1);
    ldv_set_remove_~i~519 := ldv_set_remove_~deleted_index~519 + 1;
    assume !(ldv_set_remove_~i~519 < ~last_index);
    ~last_index := ~last_index - 1;
    havoc ppp_asynctty_close_#t~mem165.base, ppp_asynctty_close_#t~mem165.offset;
    kfree_#in~31.base, kfree_#in~31.offset := ppp_asynctty_close_~ap~187.base, ppp_asynctty_close_~ap~187.offset;
    ppp_asynctty_hangup_#res := 0;
    main_#t~ret448 := ppp_asynctty_hangup_#res;
    assume 0 <= main_#t~ret448 + 2147483648 && main_#t~ret448 <= 2147483647;
    havoc main_#t~ret448;
    ~ldv_state_variable_1 := 1;
    assume !(~ldv_state_variable_1 == 2);
    goto loc1;
  loc4:
    goto loc4_0, loc4_1;
  loc4_0:
    assume !(main_~tmp___18~440 == 0);
    main_#t~switch454 := false;
    goto loc5;
  loc4_1:
    assume main_~tmp___18~440 == 0;
    main_#t~switch454 := true;
    goto loc5;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume !main_#t~switch454;
    assume main_~tmp___18~440 == 1;
    main_#t~switch454 := true;
    assume main_#t~switch454;
    assume ~ldv_state_variable_0 == 1;
    havoc ppp_async_init_#res;
    havoc ppp_async_init_~err~227, ppp_async_init_#t~nondet182.base, ppp_async_init_#t~nondet182.offset, ppp_async_init_#t~ret183, ppp_async_init_#t~ret181;
    havoc ppp_async_init_~err~227;
    tty_register_ldisc_#in~112.offset, tty_register_ldisc_#in~111, tty_register_ldisc_#in~112.base := ~#ppp_ldisc.offset, 3, ~#ppp_ldisc.base;
    havoc tty_register_ldisc_#res;
    ppp_async_init_#t~ret181 := tty_register_ldisc_#res;
    assume ppp_async_init_#t~ret181 <= 2147483647 && 0 <= ppp_async_init_#t~ret181 + 2147483648;
    ppp_async_init_~err~227 := ppp_async_init_#t~ret181;
    havoc ppp_async_init_#t~ret181;
    assume ppp_async_init_~err~227 == 0;
    ppp_async_init_#res := ppp_async_init_~err~227;
    main_#t~ret455 := ppp_async_init_#res;
    assume 0 <= main_#t~ret455 + 2147483648 && main_#t~ret455 <= 2147483647;
    ~ldv_retval_1 := main_#t~ret455;
    havoc main_#t~ret455;
    assume ~ldv_retval_1 == 0;
    ~ldv_state_variable_0 := 3;
    ~ldv_state_variable_2 := 1;
    havoc ldv_initialize_ppp_channel_ops_2_~tmp~436.base, ldv_initialize_ppp_channel_ops_2_~tmp~436.offset, ldv_initialize_ppp_channel_ops_2_#t~ret421.base, ldv_initialize_ppp_channel_ops_2_#t~ret421.offset;
    havoc ldv_initialize_ppp_channel_ops_2_~tmp~436.base, ldv_initialize_ppp_channel_ops_2_~tmp~436.offset;
    ldv_zalloc_#in~size := 40;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_#t~nondet79, ldv_zalloc_~size, ldv_zalloc_~tmp~117.offset, ldv_zalloc_#t~malloc80.offset, ldv_zalloc_#t~malloc80.base, ldv_zalloc_~tmp___0~117, ldv_zalloc_~p~117.base, ldv_zalloc_~tmp~117.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_~p~117.base;
    havoc ldv_zalloc_~tmp~117.offset, ldv_zalloc_~tmp~117.base;
    havoc ldv_zalloc_~tmp___0~117;
    assume 0 <= ldv_zalloc_#t~nondet79 + 2147483648 && ldv_zalloc_#t~nondet79 <= 2147483647;
    ldv_zalloc_~tmp___0~117 := ldv_zalloc_#t~nondet79;
    havoc ldv_zalloc_#t~nondet79;
    assume !(ldv_zalloc_~tmp___0~117 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_initialize_ppp_channel_ops_2_#t~ret421.base, ldv_initialize_ppp_channel_ops_2_#t~ret421.offset := ldv_zalloc_#res.base, ldv_zalloc_#res.offset;
    ldv_initialize_ppp_channel_ops_2_~tmp~436.base, ldv_initialize_ppp_channel_ops_2_~tmp~436.offset := ldv_initialize_ppp_channel_ops_2_#t~ret421.base, ldv_initialize_ppp_channel_ops_2_#t~ret421.offset;
    havoc ldv_initialize_ppp_channel_ops_2_#t~ret421.base, ldv_initialize_ppp_channel_ops_2_#t~ret421.offset;
    ~async_ops_group0.base, ~async_ops_group0.offset := ldv_initialize_ppp_channel_ops_2_~tmp~436.base, ldv_initialize_ppp_channel_ops_2_~tmp~436.offset;
    ~ldv_state_variable_1 := 1;
    havoc ldv_target_type_1_#t~ret422.offset, ldv_target_type_1_~tmp~438.base, ldv_target_type_1_~tmp~438.offset, ldv_target_type_1_#t~ret422.base;
    havoc ldv_target_type_1_~tmp~438.base, ldv_target_type_1_~tmp~438.offset;
    ldv_zalloc_#in~size := 1752;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_#t~nondet79, ldv_zalloc_~size, ldv_zalloc_~tmp~117.offset, ldv_zalloc_#t~malloc80.offset, ldv_zalloc_#t~malloc80.base, ldv_zalloc_~tmp___0~117, ldv_zalloc_~p~117.base, ldv_zalloc_~tmp~117.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~117.offset, ldv_zalloc_~p~117.base;
    havoc ldv_zalloc_~tmp~117.offset, ldv_zalloc_~tmp~117.base;
    havoc ldv_zalloc_~tmp___0~117;
    assume 0 <= ldv_zalloc_#t~nondet79 + 2147483648 && ldv_zalloc_#t~nondet79 <= 2147483647;
    ldv_zalloc_~tmp___0~117 := ldv_zalloc_#t~nondet79;
    havoc ldv_zalloc_#t~nondet79;
    assume !(ldv_zalloc_~tmp___0~117 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_target_type_1_#t~ret422.offset, ldv_target_type_1_#t~ret422.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    ldv_target_type_1_~tmp~438.base, ldv_target_type_1_~tmp~438.offset := ldv_target_type_1_#t~ret422.base, ldv_target_type_1_#t~ret422.offset;
    havoc ldv_target_type_1_#t~ret422.offset, ldv_target_type_1_#t~ret422.base;
    ~ppp_ldisc_group1.base, ~ppp_ldisc_group1.offset := ldv_target_type_1_~tmp~438.base, ldv_target_type_1_~tmp~438.offset;
    assume ~ldv_retval_1 == 0;
    goto loc1;
  loc5_1:
    assume main_#t~switch454;
    assume ~ref_cnt == 0 && ~ldv_state_variable_0 == 3;
    havoc ppp_async_cleanup_#t~ret418, ppp_async_cleanup_~tmp~430, ppp_async_cleanup_#t~nondet419.offset, ppp_async_cleanup_#t~ret420, ppp_async_cleanup_#t~nondet419.base;
    havoc ppp_async_cleanup_~tmp~430;
    tty_unregister_ldisc_#in~113 := 3;
    havoc tty_unregister_ldisc_#res;
    ppp_async_cleanup_#t~ret418 := tty_unregister_ldisc_#res;
    assume 0 <= ppp_async_cleanup_#t~ret418 + 2147483648 && ppp_async_cleanup_#t~ret418 <= 2147483647;
    ppp_async_cleanup_~tmp~430 := ppp_async_cleanup_#t~ret418;
    havoc ppp_async_cleanup_#t~ret418;
    assume ppp_async_cleanup_~tmp~430 == 0;
    ~ldv_state_variable_0 := 2;
    havoc ldv_check_final_state_#t~ret468, ldv_check_final_state_~tmp___7~542;
    havoc ldv_check_final_state_~tmp___7~542;
    ldv_set_is_empty_#in~set.offset, ldv_set_is_empty_#in~set.base := ~LDV_SKBS.offset, ~LDV_SKBS.base;
    havoc ldv_set_is_empty_#res;
    havoc ldv_set_is_empty_~set.base, ldv_set_is_empty_~set.offset;
    ldv_set_is_empty_~set.base, ldv_set_is_empty_~set.offset := ldv_set_is_empty_#in~set.base, ldv_set_is_empty_#in~set.offset;
    assume !(~last_index == 0);
    ldv_set_is_empty_#res := 0;
    ldv_check_final_state_#t~ret468 := ldv_set_is_empty_#res;
    assume 0 <= ldv_check_final_state_#t~ret468 + 2147483648 && ldv_check_final_state_#t~ret468 <= 2147483647;
    ldv_check_final_state_~tmp___7~542 := ldv_check_final_state_#t~ret468;
    havoc ldv_check_final_state_#t~ret468;
    assume ldv_check_final_state_~tmp___7~542 == 0;
    goto loc6;
  loc6:
    assert false;
}


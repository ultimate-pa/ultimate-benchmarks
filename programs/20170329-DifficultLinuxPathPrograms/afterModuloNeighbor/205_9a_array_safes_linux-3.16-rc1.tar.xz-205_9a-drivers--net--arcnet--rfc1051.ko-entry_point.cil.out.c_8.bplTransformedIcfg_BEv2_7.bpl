var ~#rfc1051_proto.base : int;

var #memory_$Pointer$.base : [int][int]int;

var ~#rfc1051_proto.offset : int;

var ~#set_impl.offset : int;

var ~arc_proto_map.base : [int]int;

var ~arc_proto_default.base : int;

var #NULL.offset : int;

var ~rfc1051_proto_group0.base : int;

var ~#set_impl.base : int;

var ~ldv_state_variable_0 : int;

var ~ldv_retval_0 : int;

var #length : [int]int;

var ~LDV_SKBS.base : int;

var ~rfc1051_proto_group1.offset : int;

var v_rep#funAddr~rx.base_1 : int;

var v_rep#funAddr~prepare_tx.offset_1 : int;

var v_rep#funAddr~build_header.base_1 : int;

var ~ref_cnt : int;

var ~last_index : int;

var ~rfc1051_proto_group0.offset : int;

var ~rfc1051_proto_group1.base : int;

var v_rep#funAddr~prepare_tx.base_1 : int;

var ~arc_proto_map.offset : [int]int;

var #NULL.base : int;

var v_rep#funAddr~build_header.offset_1 : int;

var ~arc_proto_default.offset : int;

var ~arc_bcast_proto.offset : int;

var ~ldv_state_variable_1 : int;

var v_rep#funAddr~rx.offset_1 : int;

var #valid : [int]int;

var #memory_int : [int][int]int;

var ~arc_bcast_proto.base : int;

var ~LDV_SKBS.offset : int;

var #memory_$Pointer$.offset : [int][int]int;

procedure ULTIMATE.start() returns ()
modifies ~#rfc1051_proto.base, #memory_$Pointer$.base, ~#rfc1051_proto.offset, ~#set_impl.offset, ~arc_proto_map.base, ~arc_proto_default.base, #NULL.offset, ~rfc1051_proto_group0.base, ~#set_impl.base, ~ldv_state_variable_0, ~ldv_retval_0, #length, ~LDV_SKBS.base, ~rfc1051_proto_group1.offset, v_rep#funAddr~rx.base_1, v_rep#funAddr~prepare_tx.offset_1, v_rep#funAddr~build_header.base_1, ~ref_cnt, ~last_index, ~rfc1051_proto_group0.offset, ~rfc1051_proto_group1.base, v_rep#funAddr~prepare_tx.base_1, ~arc_proto_map.offset, #NULL.base, v_rep#funAddr~build_header.offset_1, ~arc_proto_default.offset, ~arc_bcast_proto.offset, ~ldv_state_variable_1, v_rep#funAddr~rx.offset_1, #valid, #memory_int, ~arc_bcast_proto.base, ~LDV_SKBS.offset, #memory_$Pointer$.offset;
{
    var ldv_initialize_ArcProto_1_#t~ret88.base : int;
    var ldv_skb_free_int_~skb.offset : int;
    var ldv_skb_alloc_#t~ret114.offset : int;
    var rx_#t~ret37.base : int;
    var skb_reset_mac_header_#in~skb.base : int;
    var read~$Pointer$_#value.offset : int;
    var main_#t~nondet93 : int;
    var printk_#res : int;
    var ldv_initialize_ArcProto_1_#t~ret88.offset : int;
    var type_trans_#t~mem22.offset : int;
    var __memcpy_#res.base : int;
    var skb_reset_mac_header_#t~mem14.offset : int;
    var #Ultimate.C_memset_#t~loopctr117 : int;
    var write~int_#ptr.base : int;
    var type_trans_~soft~40.offset : int;
    var __memcpy_#res.offset : int;
    var __memcpy_#in~2.base : int;
    var main_~ldvarg1~81 : int;
    var rx_#t~mem41 : int;
    var netdev_priv_#in~dev.base : int;
    var ldv_skb_alloc_~skb~138.base : int;
    var ldv_alloc_skb_14_~tmp~104.base : int;
    var skb_pull_#res.base : int;
    var ldv_set_remove_#in~e.offset : int;
    var write~int_old_#memory_$Pointer$.offset : [int][int]int;
    var main_~ldvarg3~81.offset : int;
    var type_trans_#t~mem31 : int;
    var type_trans_#t~ret23.base : int;
    var #Ultimate.alloc_old_#length : [int]int;
    var write~$Pointer$_#ptr.base : int;
    var ldv_alloc_skb_14_#t~ret107.offset : int;
    var write~int_#sizeOfWrittenType : int;
    var write~$Pointer$_#ptr.offset : int;
    var main_#t~mem102 : int;
    var rx_#in~dev.offset : int;
    var ldv_set_is_empty_~set.base : int;
    var ldv_netif_rx_15_~ldv_func_arg1.offset : int;
    var write~int_#value : int;
    var ldv_check_final_state_#t~ret115 : int;
    var ldv_netif_rx_15_#t~ret108 : int;
    var ldv_check_final_state_~tmp___7~146 : int;
    var rx_~tmp~48.base : int;
    var rx_#t~ret46.base : int;
    var ldv_alloc_skb_14_#res.base : int;
    var main_~tmp___3~81 : int;
    var ldv_netif_rx_15_~ldv_func_arg1.base : int;
    var rx_#t~mem45.offset : int;
    var #Ultimate.alloc_old_#valid : [int]int;
    var ldv_skb_free_int_#in~skb.offset : int;
    var ldv_set_is_empty_#in~set.base : int;
    var ldv_set_is_empty_~set.offset : int;
    var rx_#in~dev.base : int;
    var rx_~dev.offset : int;
    var write~int_#ptr.offset : int;
    var type_trans_#t~mem27 : int;
    var ldv_skb_alloc_#t~ret114.base : int;
    var type_trans_#in~skb.offset : int;
    var skb_put_#res.base : int;
    var main_~ldvarg3~81.base : int;
    var type_trans_#in~dev.base : int;
    var ldv_alloc_skb_14_~priority : int;
    var ldv_set_remove_#t~mem113.base : int;
    var write~$Pointer$_old_#memory_$Pointer$.base : [int][int]int;
    var #Ultimate.alloc_~size : int;
    var rx_#t~ret40 : int;
    var main_#t~switch98 : bool;
    var #Ultimate.C_memset_#value : int;
    var __memcpy_#in~2.offset : int;
    var read~int_#ptr.offset : int;
    var ldv_set_remove_#in~e.base : int;
    var main_#t~nondet104 : int;
    var #Ultimate.C_memset_#res.base : int;
    var rx_~pkthdr.offset : int;
    var main_#t~ret101 : int;
    var main_#t~memset96.base : int;
    var main_~tmp~81 : int;
    var ldv_alloc_skb_14_#in~priority : int;
    var main_#t~nondet99 : int;
    var main_~tmp___6~81 : int;
    var main_~ldvarg6~81 : int;
    var main_#t~nondet91 : int;
    var ldv_set_init_#in~set.base : int;
    var skb_pull_#res.offset : int;
    var ldv_set_remove_~deleted_index~123 : int;
    var rx_#t~mem45.base : int;
    var rx_#t~nondet39.base : int;
    var rx_#t~ret37.offset : int;
    var rx_#in~pkthdr.offset : int;
    var netdev_priv_#res.offset : int;
    var #Ultimate.alloc_#res.offset : int;
    var main_~#ldvarg2~81.offset : int;
    var type_trans_#t~mem33 : int;
    var arcnet_rfc1051_init_#t~nondet20.offset : int;
    var skb_pull_#in~12 : int;
    var printk_#in~0.offset : int;
    var read~$Pointer$_#ptr.offset : int;
    var rx_#t~ret38.offset : int;
    var skb_reset_mac_header_~skb.base : int;
    var rx_~pkt~48.offset : int;
    var skb_put_#in~8 : int;
    var main_~tmp___4~81 : int;
    var ldv_alloc_skb_14_#res.offset : int;
    var ldv_skb_alloc_~tmp___7~138.base : int;
    var ldv_set_remove_#t~mem111.offset : int;
    var read~$Pointer$_#value.base : int;
    var rx_#t~ret57 : int;
    var ldv_zalloc_#t~malloc18.offset : int;
    var type_trans_#t~mem29 : int;
    var ldv_zalloc_~p~17.offset : int;
    var rx_#t~mem54.base : int;
    var main_#t~nondet90 : int;
    var ldv_set_remove_#in~set.base : int;
    var main_#t~switch105 : bool;
    var ldv_zalloc_~p~17.base : int;
    var type_trans_#in~dev.offset : int;
    var skb_reset_mac_header_#t~mem14.base : int;
    var ldv_set_remove_#t~mem111.base : int;
    var rx_#in~pkthdr.base : int;
    var netdev_priv_~dev.offset : int;
    var type_trans_~pkt~40.base : int;
    var rx_~__ret~48.offset : int;
    var skb_reset_mac_header_#t~mem13.offset : int;
    var ldv_skb_alloc_#res.offset : int;
    var skb_put_#res.offset : int;
    var main_~tmp___5~81 : int;
    var write~$Pointer$_#value.base : int;
    var ldv_set_init_~set.offset : int;
    var skb_put_#in~7.offset : int;
    var ldv_set_remove_#in~set.offset : int;
    var main_#t~ret103 : int;
    var #Ultimate.C_memset_#res.offset : int;
    var main_~tmp___1~81.offset : int;
    var ldv_zalloc_~tmp~17.offset : int;
    var read~$Pointer$_#ptr.base : int;
    var main_#t~ret92.base : int;
    var type_trans_~soft~40.base : int;
    var main_~tmp___0~81 : int;
    var main_#t~memset96.offset : int;
    var read~int_#value : int;
    var type_trans_#t~mem24 : int;
    var rx_#t~ret38.base : int;
    var ldv_initialize_ArcProto_1_#t~ret89.base : int;
    var main_#t~nondet97 : int;
    var type_trans_~hdr_size~40 : int;
    var main_~ldvarg0~81 : int;
    var type_trans_~dev.offset : int;
    var __memcpy_#in~1.base : int;
    var ldv_alloc_skb_14_~size : int;
    var ldv_set_remove_#t~mem113.offset : int;
    var ldv_alloc_skb_14_#t~ret107.base : int;
    var rx_~ofs~48 : int;
    var ldv_skb_alloc_#res.base : int;
    var rx_~skb~48.offset : int;
    var type_trans_#t~mem35 : int;
    var rx_~skb~48.base : int;
    var ldv_alloc_skb_14_#in~size : int;
    var ldv_skb_alloc_~skb~138.offset : int;
    var skb_reset_mac_header_~skb.offset : int;
    var ldv_set_remove_~set.offset : int;
    var main_~tmp___1~81.base : int;
    var ldv_zalloc_~tmp~17.base : int;
    var read~int_#ptr.base : int;
    var ldv_netif_rx_15_~tmp~106 : int;
    var netdev_priv_~dev.base : int;
    var rx_#t~ret43.base : int;
    var ldv_initialize_ArcProto_1_~tmp___0~79.offset : int;
    var printk_#in~0.base : int;
    var rx_~__len~48 : int;
    var arcnet_rfc1051_init_#t~ret21 : int;
    var rx_#t~memcpy47.base : int;
    var type_trans_~pkt~40.offset : int;
    var ldv_set_is_empty_#in~set.offset : int;
    var #Ultimate.C_memset_#amount : int;
    var arcnet_unregister_proto_#in~19.offset : int;
    var netdev_priv_#in~dev.offset : int;
    var rx_#t~ret55 : int;
    var ldv_skb_free_int_~skb.base : int;
    var ldv_zalloc_#t~malloc18.base : int;
    var rx_~tmp~48.offset : int;
    var type_trans_#t~mem22.base : int;
    var type_trans_~skb.offset : int;
    var rx_#t~mem54.offset : int;
    var write~$Pointer$_#value.offset : int;
    var skb_reset_mac_header_#t~mem13.base : int;
    var skb_pull_#in~11.offset : int;
    var ldv_netif_rx_15_#in~ldv_func_arg1.base : int;
    var rx_#t~ret43.offset : int;
    var rx_~pkthdr.base : int;
    var skb_pull_#in~11.base : int;
    var ldv_zalloc_#t~nondet17 : int;
    var read~int_#sizeOfReadType : int;
    var ldv_set_init_#in~set.offset : int;
    var ldv_set_init_~set.base : int;
    var arcnet_rfc1051_init_#res : int;
    var write~$Pointer$_old_#memory_$Pointer$.offset : [int][int]int;
    var main_#res : int;
    var rx_~dev.base : int;
    var rx_#t~memcpy47.offset : int;
    var main_#t~ret92.offset : int;
    var rx_~lp~48.base : int;
    var ldv_netif_rx_15_#res : int;
    var ldv_set_remove_~e.base : int;
    var type_trans_#t~mem26 : int;
    var write~$Pointer$_#sizeOfWrittenType : int;
    var main_#t~nondet95 : int;
    var netdev_priv_#res.base : int;
    var type_trans_#t~switch32 : bool;
    var ldv_initialize_ArcProto_1_~tmp~79.base : int;
    var ldv_zalloc_~tmp___0~17 : int;
    var ldv_set_remove_~i~123 : int;
    var rx_#t~nondet39.offset : int;
    var write~$Pointer$_old_#memory_int : [int][int]int;
    var ldv_initialize_ArcProto_1_~tmp___0~79.base : int;
    var ldv_set_remove_~set.base : int;
    var rx_~__ret~48.base : int;
    var rx_~bufnum : int;
    var #Ultimate.alloc_#res.base : int;
    var main_#t~switch100 : bool;
    var ldv_zalloc_#res.offset : int;
    var rx_#t~ret46.offset : int;
    var type_trans_#t~ret23.offset : int;
    var arcnet_rfc1051_init_#t~nondet20.base : int;
    var main_~tmp___7~81 : int;
    var write~int_old_#memory_int : [int][int]int;
    var arcnet_unregister_proto_#in~19.base : int;
    var ldv_skb_alloc_~tmp___7~138.offset : int;
    var rx_#in~bufnum : int;
    var ldv_netif_rx_15_#in~ldv_func_arg1.offset : int;
    var main_~ldvarg5~81 : int;
    var main_#t~ret106 : int;
    var ldv_zalloc_~size : int;
    var type_trans_#res : int;
    var ldv_zalloc_#in~size : int;
    var type_trans_~dev.base : int;
    var rx_~lp~48.offset : int;
    var ldv_set_is_empty_#res : int;
    var ldv_alloc_skb_14_~tmp~104.offset : int;
    var main_#t~nondet94 : int;
    var read~$Pointer$_#sizeOfReadType : int;
    var skb_put_#in~7.base : int;
    var ldv_zalloc_#res.base : int;
    var #Ultimate.C_memset_#ptr.offset : int;
    var ldv_initialize_ArcProto_1_#t~ret89.offset : int;
    var main_~tmp___2~81 : int;
    var __memcpy_#in~1.offset : int;
    var type_trans_#t~mem28.base : int;
    var ldv_initialize_ArcProto_1_~tmp~79.offset : int;
    var main_~ldvarg4~81 : int;
    var type_trans_#in~skb.base : int;
    var rx_~pkt~48.base : int;
    var write~int_old_#memory_$Pointer$.base : [int][int]int;
    var main_~#ldvarg2~81.base : int;
    var rx_#in~length : int;
    var ldv_skb_free_int_#in~skb.base : int;
    var ldv_skb_free_int_#res : int;
    var ldv_set_remove_~e.offset : int;
    var type_trans_~skb.base : int;
    var #Ultimate.C_memset_#ptr.base : int;
    var rx_~length : int;
    var __memcpy_#in~3 : int;
    var type_trans_#t~mem28.offset : int;
    var skb_reset_mac_header_#in~skb.offset : int;

  loc0:
    #NULL.offset, #NULL.base := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_state_variable_1 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_retval_0 := 0;
    ~last_index := 0;
    ~rfc1051_proto_group0.offset, ~rfc1051_proto_group0.base := 0, 0;
    ~rfc1051_proto_group1.base, ~rfc1051_proto_group1.offset := 0, 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 49;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#rfc1051_proto.base, ~#rfc1051_proto.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#rfc1051_proto.base, 115, ~#rfc1051_proto.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#rfc1051_proto.base, 507, ~#rfc1051_proto.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#rfc1051_proto.base, 1, ~#rfc1051_proto.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~rx.base_1, ~#rfc1051_proto.offset + 9, 8, v_rep#funAddr~rx.offset_1, ~#rfc1051_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~build_header.base_1, ~#rfc1051_proto.offset + 17, 8, v_rep#funAddr~build_header.offset_1, ~#rfc1051_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~prepare_tx.base_1, ~#rfc1051_proto.offset + 25, 8, v_rep#funAddr~prepare_tx.offset_1, ~#rfc1051_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#rfc1051_proto.offset + 33, 8, 0, ~#rfc1051_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#rfc1051_proto.offset + 41, 8, 0, ~#rfc1051_proto.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 120;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#set_impl.base, ~#set_impl.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 8, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 16, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 24, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 32, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 40, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 48, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 56, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 64, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 72, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 80, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 88, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 96, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 104, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 112, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    ~LDV_SKBS.base, ~LDV_SKBS.offset := 0, 0;
    havoc main_#res;
    havoc main_#t~nondet99, main_~tmp___0~81, main_#t~memset96.offset, main_~tmp___6~81, main_#t~nondet95, main_~ldvarg6~81, main_#t~nondet97, main_~tmp___3~81, main_#t~nondet91, main_#t~nondet93, main_#t~nondet94, main_~ldvarg0~81, main_#t~nondet90, main_#t~switch105, main_~tmp___2~81, main_~ldvarg1~81, main_~ldvarg3~81.base, main_~ldvarg4~81, main_#t~switch100, main_~#ldvarg2~81.offset, main_~ldvarg3~81.offset, main_~tmp___7~81, main_~#ldvarg2~81.base, main_~tmp___1~81.base, main_~tmp___5~81, main_~ldvarg5~81, main_#t~mem102, main_#t~ret106, main_#t~switch98, main_#t~nondet104, main_#t~ret103, main_~tmp___1~81.offset, main_#t~ret101, main_#t~ret92.base, main_#t~memset96.base, main_~tmp___4~81, main_#t~ret92.offset, main_~tmp~81;
    havoc main_~ldvarg1~81;
    havoc main_~tmp~81;
    havoc main_~ldvarg4~81;
    havoc main_~tmp___0~81;
    havoc main_~ldvarg3~81.offset, main_~ldvarg3~81.base;
    havoc main_~tmp___1~81.offset, main_~tmp___1~81.base;
    havoc main_~ldvarg0~81;
    havoc main_~tmp___2~81;
    havoc main_~ldvarg5~81;
    havoc main_~tmp___3~81;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 1;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg2~81.offset, main_~#ldvarg2~81.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc main_~ldvarg6~81;
    havoc main_~tmp___4~81;
    havoc main_~tmp___5~81;
    havoc main_~tmp___6~81;
    havoc main_~tmp___7~81;
    assume 0 <= main_#t~nondet90 + 2147483648 && main_#t~nondet90 <= 2147483647;
    main_~tmp~81 := main_#t~nondet90;
    havoc main_#t~nondet90;
    main_~ldvarg1~81 := main_~tmp~81;
    main_~tmp___0~81 := main_#t~nondet91;
    havoc main_#t~nondet91;
    main_~ldvarg4~81 := main_~tmp___0~81;
    ldv_zalloc_#in~size := 232;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~tmp~17.base, ldv_zalloc_~p~17.base, ldv_zalloc_#t~malloc18.base, ldv_zalloc_~size, ldv_zalloc_~tmp~17.offset, ldv_zalloc_#t~nondet17, ldv_zalloc_#t~malloc18.offset, ldv_zalloc_~tmp___0~17, ldv_zalloc_~p~17.offset;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~17.base, ldv_zalloc_~p~17.offset;
    havoc ldv_zalloc_~tmp~17.base, ldv_zalloc_~tmp~17.offset;
    havoc ldv_zalloc_~tmp___0~17;
    assume ldv_zalloc_#t~nondet17 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet17 + 2147483648;
    ldv_zalloc_~tmp___0~17 := ldv_zalloc_#t~nondet17;
    havoc ldv_zalloc_#t~nondet17;
    assume !(ldv_zalloc_~tmp___0~17 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret92.base, main_#t~ret92.offset := ldv_zalloc_#res.base, ldv_zalloc_#res.offset;
    main_~tmp___1~81.offset, main_~tmp___1~81.base := main_#t~ret92.offset, main_#t~ret92.base;
    havoc main_#t~ret92.base, main_#t~ret92.offset;
    main_~ldvarg3~81.offset, main_~ldvarg3~81.base := main_~tmp___1~81.offset, main_~tmp___1~81.base;
    assume 0 <= main_#t~nondet93 + 2147483648 && main_#t~nondet93 <= 2147483647;
    main_~tmp___2~81 := main_#t~nondet93;
    havoc main_#t~nondet93;
    main_~ldvarg0~81 := main_~tmp___2~81;
    assume 0 <= main_#t~nondet94 + 2147483648 && main_#t~nondet94 <= 2147483647;
    main_~tmp___3~81 := main_#t~nondet94;
    havoc main_#t~nondet94;
    main_~ldvarg5~81 := main_~tmp___3~81;
    assume main_#t~nondet95 <= 2147483647 && 0 <= main_#t~nondet95 + 2147483648;
    main_~tmp___4~81 := main_#t~nondet95;
    havoc main_#t~nondet95;
    main_~ldvarg6~81 := main_~tmp___4~81;
    ldv_set_init_#in~set.base, ldv_set_init_#in~set.offset := ~LDV_SKBS.base, ~LDV_SKBS.offset;
    havoc ldv_set_init_~set.offset, ldv_set_init_~set.base;
    ldv_set_init_~set.offset, ldv_set_init_~set.base := ldv_set_init_#in~set.offset, ldv_set_init_#in~set.base;
    ldv_set_init_~set.offset, ldv_set_init_~set.base := ~#set_impl.offset, ~#set_impl.base;
    ~last_index := 0;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := main_~#ldvarg2~81.offset, 0, 1, main_~#ldvarg2~81.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr117;
    #Ultimate.C_memset_#t~loopctr117 := 0;
    goto loc1;
  loc1:
    goto loc1_0, loc1_1;
  loc1_0:
    assume !(#Ultimate.C_memset_#t~loopctr117 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    main_#t~memset96.offset, main_#t~memset96.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    havoc main_#t~memset96.offset, main_#t~memset96.base;
    ~ldv_state_variable_1 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    goto loc2;
  loc1_1:
    assume #Ultimate.C_memset_#t~loopctr117 < #Ultimate.C_memset_#amount;
    assume 0 <= #Ultimate.C_memset_#value && #Ultimate.C_memset_#value < 256;
    #memory_$Pointer$.base, #memory_$Pointer$.offset := #memory_$Pointer$.base[#Ultimate.C_memset_#ptr.base := #memory_$Pointer$.base[#Ultimate.C_memset_#ptr.base][#Ultimate.C_memset_#ptr.offset + #Ultimate.C_memset_#t~loopctr117 := 0]], #memory_$Pointer$.offset[#Ultimate.C_memset_#ptr.base := #memory_$Pointer$.offset[#Ultimate.C_memset_#ptr.base][#Ultimate.C_memset_#ptr.offset + #Ultimate.C_memset_#t~loopctr117 := #Ultimate.C_memset_#value]];
    #memory_int := #memory_int[#Ultimate.C_memset_#ptr.base := #memory_int[#Ultimate.C_memset_#ptr.base][#Ultimate.C_memset_#ptr.offset + #Ultimate.C_memset_#t~loopctr117 := #Ultimate.C_memset_#value]];
    #Ultimate.C_memset_#t~loopctr117 := #Ultimate.C_memset_#t~loopctr117 + 1;
    goto loc1;
  loc2:
    assume 0 <= main_#t~nondet97 + 2147483648 && main_#t~nondet97 <= 2147483647;
    main_~tmp___5~81 := main_#t~nondet97;
    havoc main_#t~nondet97;
    goto loc3;
  loc3:
    goto loc3_0, loc3_1;
  loc3_0:
    assume main_~tmp___5~81 == 0;
    main_#t~switch98 := true;
    goto loc4;
  loc3_1:
    assume !(main_~tmp___5~81 == 0);
    main_#t~switch98 := false;
    goto loc4;
  loc4:
    goto loc4_0, loc4_1;
  loc4_0:
    assume main_#t~switch98;
    assume !(~ldv_state_variable_1 == 0);
    assume 0 <= main_#t~nondet99 + 2147483648 && main_#t~nondet99 <= 2147483647;
    main_~tmp___6~81 := main_#t~nondet99;
    havoc main_#t~nondet99;
    assume main_~tmp___6~81 == 0;
    main_#t~switch100 := true;
    assume !main_#t~switch100;
    assume !(main_~tmp___6~81 == 1) && !main_#t~switch100;
    main_#t~switch100 := false;
    assume !main_#t~switch100;
    assume !(main_~tmp___6~81 == 2) && !main_#t~switch100;
    main_#t~switch100 := false;
    assume main_#t~switch100;
    assume ~ldv_state_variable_1 == 1;
    rx_#in~dev.offset, rx_#in~length, rx_#in~pkthdr.offset, rx_#in~dev.base, rx_#in~bufnum, rx_#in~pkthdr.base := ~rfc1051_proto_group1.offset, main_~ldvarg0~81, ~rfc1051_proto_group0.offset, ~rfc1051_proto_group1.base, main_~ldvarg1~81, ~rfc1051_proto_group0.base;
    havoc rx_~__len~48, rx_#t~memcpy47.base, rx_~tmp~48.base, rx_#t~ret46.base, rx_#t~ret37.base, rx_#t~ret38.base, rx_#t~mem45.offset, rx_#t~ret57, rx_#t~ret55, rx_#t~mem45.base, rx_#t~mem54.base, rx_~dev.offset, rx_~tmp~48.offset, rx_#t~mem54.offset, rx_#t~nondet39.base, rx_#t~nondet39.offset, rx_#t~ret37.offset, rx_#t~mem41, rx_~ofs~48, rx_~__ret~48.base, rx_~bufnum, rx_~pkt~48.base, rx_#t~ret43.offset, rx_#t~ret46.offset, rx_~skb~48.offset, rx_~skb~48.base, rx_~pkthdr.base, rx_~__ret~48.offset, rx_#t~ret40, rx_#t~ret38.offset, rx_~dev.base, rx_~pkt~48.offset, rx_~pkthdr.offset, rx_#t~memcpy47.offset, rx_#t~ret43.base, rx_~length, rx_~lp~48.base, rx_~lp~48.offset;
    rx_~dev.base, rx_~dev.offset := rx_#in~dev.base, rx_#in~dev.offset;
    rx_~bufnum := rx_#in~bufnum;
    rx_~pkthdr.base, rx_~pkthdr.offset := rx_#in~pkthdr.base, rx_#in~pkthdr.offset;
    rx_~length := rx_#in~length;
    havoc rx_~lp~48.base, rx_~lp~48.offset;
    havoc rx_~tmp~48.offset, rx_~tmp~48.base;
    havoc rx_~skb~48.offset, rx_~skb~48.base;
    havoc rx_~pkt~48.base, rx_~pkt~48.offset;
    havoc rx_~ofs~48;
    havoc rx_~__len~48;
    havoc rx_~__ret~48.offset, rx_~__ret~48.base;
    netdev_priv_#in~dev.offset, netdev_priv_#in~dev.base := rx_~dev.offset, rx_~dev.base;
    havoc netdev_priv_#res.base, netdev_priv_#res.offset;
    havoc netdev_priv_~dev.base, netdev_priv_~dev.offset;
    netdev_priv_~dev.base, netdev_priv_~dev.offset := netdev_priv_#in~dev.base, netdev_priv_#in~dev.offset;
    netdev_priv_#res.base, netdev_priv_#res.offset := netdev_priv_~dev.base, netdev_priv_~dev.offset + 3264;
    rx_#t~ret37.base, rx_#t~ret37.offset := netdev_priv_#res.base, netdev_priv_#res.offset;
    rx_~tmp~48.offset, rx_~tmp~48.base := rx_#t~ret37.offset, rx_#t~ret37.base;
    havoc rx_#t~ret37.base, rx_#t~ret37.offset;
    rx_~lp~48.base, rx_~lp~48.offset := rx_~tmp~48.base, rx_~tmp~48.offset;
    rx_~pkt~48.base, rx_~pkt~48.offset := rx_~pkthdr.base, rx_~pkthdr.offset;
    assume 256 < rx_~length;
    rx_~ofs~48 := 512 - rx_~length;
    ldv_alloc_skb_14_#in~size, ldv_alloc_skb_14_#in~priority := rx_~length + 4, 32;
    havoc ldv_alloc_skb_14_#res.base, ldv_alloc_skb_14_#res.offset;
    havoc ldv_alloc_skb_14_~tmp~104.base, ldv_alloc_skb_14_#t~ret107.offset, ldv_alloc_skb_14_~size, ldv_alloc_skb_14_~tmp~104.offset, ldv_alloc_skb_14_#t~ret107.base, ldv_alloc_skb_14_~priority;
    ldv_alloc_skb_14_~size := ldv_alloc_skb_14_#in~size;
    ldv_alloc_skb_14_~priority := ldv_alloc_skb_14_#in~priority;
    havoc ldv_alloc_skb_14_~tmp~104.base, ldv_alloc_skb_14_~tmp~104.offset;
    havoc ldv_skb_alloc_#res.offset, ldv_skb_alloc_#res.base;
    havoc ldv_skb_alloc_~tmp___7~138.base, ldv_skb_alloc_#t~ret114.offset, ldv_skb_alloc_#t~ret114.base, ldv_skb_alloc_~skb~138.offset, ldv_skb_alloc_~skb~138.base, ldv_skb_alloc_~tmp___7~138.offset;
    havoc ldv_skb_alloc_~skb~138.offset, ldv_skb_alloc_~skb~138.base;
    havoc ldv_skb_alloc_~tmp___7~138.base, ldv_skb_alloc_~tmp___7~138.offset;
    ldv_zalloc_#in~size := 248;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~tmp~17.base, ldv_zalloc_~p~17.base, ldv_zalloc_#t~malloc18.base, ldv_zalloc_~size, ldv_zalloc_~tmp~17.offset, ldv_zalloc_#t~nondet17, ldv_zalloc_#t~malloc18.offset, ldv_zalloc_~tmp___0~17, ldv_zalloc_~p~17.offset;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~17.base, ldv_zalloc_~p~17.offset;
    havoc ldv_zalloc_~tmp~17.base, ldv_zalloc_~tmp~17.offset;
    havoc ldv_zalloc_~tmp___0~17;
    assume ldv_zalloc_#t~nondet17 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet17 + 2147483648;
    ldv_zalloc_~tmp___0~17 := ldv_zalloc_#t~nondet17;
    havoc ldv_zalloc_#t~nondet17;
    assume !(ldv_zalloc_~tmp___0~17 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_skb_alloc_#t~ret114.offset, ldv_skb_alloc_#t~ret114.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    ldv_skb_alloc_~tmp___7~138.base, ldv_skb_alloc_~tmp___7~138.offset := ldv_skb_alloc_#t~ret114.base, ldv_skb_alloc_#t~ret114.offset;
    havoc ldv_skb_alloc_#t~ret114.offset, ldv_skb_alloc_#t~ret114.base;
    ldv_skb_alloc_~skb~138.offset, ldv_skb_alloc_~skb~138.base := ldv_skb_alloc_~tmp___7~138.offset, ldv_skb_alloc_~tmp___7~138.base;
    assume ldv_skb_alloc_~skb~138.base == 0 && ldv_skb_alloc_~skb~138.offset == 0;
    ldv_skb_alloc_#res.offset, ldv_skb_alloc_#res.base := 0, 0;
    ldv_alloc_skb_14_#t~ret107.offset, ldv_alloc_skb_14_#t~ret107.base := ldv_skb_alloc_#res.offset, ldv_skb_alloc_#res.base;
    ldv_alloc_skb_14_~tmp~104.base, ldv_alloc_skb_14_~tmp~104.offset := ldv_alloc_skb_14_#t~ret107.base, ldv_alloc_skb_14_#t~ret107.offset;
    havoc ldv_alloc_skb_14_#t~ret107.offset, ldv_alloc_skb_14_#t~ret107.base;
    ldv_alloc_skb_14_#res.base, ldv_alloc_skb_14_#res.offset := ldv_alloc_skb_14_~tmp~104.base, ldv_alloc_skb_14_~tmp~104.offset;
    rx_#t~ret38.base, rx_#t~ret38.offset := ldv_alloc_skb_14_#res.base, ldv_alloc_skb_14_#res.offset;
    rx_~skb~48.offset, rx_~skb~48.base := rx_#t~ret38.offset, rx_#t~ret38.base;
    havoc rx_#t~ret38.base, rx_#t~ret38.offset;
    assume !((rx_~skb~48.base + rx_~skb~48.offset) % 18446744073709551616 == 0) && 18446744073709551616 + 18446744073709551616 <= rx_~skb~48.base + rx_~skb~48.offset;
    skb_put_#in~7.offset, skb_put_#in~8, skb_put_#in~7.base := rx_~skb~48.offset, rx_~length + 4, rx_~skb~48.base;
    havoc skb_put_#res.base, skb_put_#res.offset;
    rx_#t~ret43.offset, rx_#t~ret43.base := skb_put_#res.offset, skb_put_#res.base;
    havoc rx_#t~ret43.offset, rx_#t~ret43.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := rx_~dev.base, rx_~skb~48.offset + 32, 8, rx_~dev.offset, rx_~skb~48.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := rx_~skb~48.base, 8, rx_~skb~48.offset + 232;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    rx_#t~mem45.offset, rx_#t~mem45.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    rx_~pkt~48.base, rx_~pkt~48.offset := rx_#t~mem45.base, rx_#t~mem45.offset;
    havoc rx_#t~mem45.offset, rx_#t~mem45.base;
    rx_~__len~48 := 20;
    assume 63 < rx_~__len~48 % 4294967296 && rx_~__len~48 < -4294967296;
    __memcpy_#in~1.base, __memcpy_#in~2.offset, __memcpy_#in~2.base, __memcpy_#in~1.offset, __memcpy_#in~3 := rx_~pkt~48.base, rx_~pkthdr.offset, rx_~pkthdr.base, rx_~pkt~48.offset, rx_~__len~48;
    havoc __memcpy_#res.offset, __memcpy_#res.base;
    rx_#t~ret46.offset, rx_#t~ret46.base := __memcpy_#res.offset, __memcpy_#res.base;
    rx_~__ret~48.offset, rx_~__ret~48.base := rx_#t~ret46.offset, rx_#t~ret46.base;
    havoc rx_#t~ret46.offset, rx_#t~ret46.base;
    assume !(16 < rx_~length % 4294967296) && 4294967296 + 4294967296 <= rx_~length;
    type_trans_#in~dev.offset, type_trans_#in~skb.offset, type_trans_#in~dev.base, type_trans_#in~skb.base := rx_~dev.offset, rx_~skb~48.offset, rx_~dev.base, rx_~skb~48.base;
    havoc type_trans_#res;
    havoc type_trans_#t~mem26, type_trans_~pkt~40.base, type_trans_#t~ret23.offset, type_trans_#t~mem24, type_trans_#t~mem35, type_trans_~pkt~40.offset, type_trans_#t~switch32, type_trans_#t~mem33, type_trans_#t~mem31, type_trans_~hdr_size~40, type_trans_#t~ret23.base, type_trans_#t~mem29, type_trans_#t~mem22.offset, type_trans_#t~mem27, type_trans_~dev.offset, type_trans_#t~mem22.base, type_trans_~skb.offset, type_trans_~skb.base, type_trans_~soft~40.offset, type_trans_~dev.base, type_trans_#t~mem28.base, type_trans_#t~mem28.offset, type_trans_~soft~40.base;
    type_trans_~skb.offset, type_trans_~skb.base := type_trans_#in~skb.offset, type_trans_#in~skb.base;
    type_trans_~dev.base, type_trans_~dev.offset := type_trans_#in~dev.base, type_trans_#in~dev.offset;
    havoc type_trans_~pkt~40.base, type_trans_~pkt~40.offset;
    havoc type_trans_~soft~40.offset, type_trans_~soft~40.base;
    havoc type_trans_~hdr_size~40;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := type_trans_~skb.base, 8, type_trans_~skb.offset + 232;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    type_trans_#t~mem22.base, type_trans_#t~mem22.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    type_trans_~pkt~40.base, type_trans_~pkt~40.offset := type_trans_#t~mem22.base, type_trans_#t~mem22.offset;
    havoc type_trans_#t~mem22.base, type_trans_#t~mem22.offset;
    type_trans_~soft~40.offset, type_trans_~soft~40.base := type_trans_~pkt~40.offset + 4, type_trans_~pkt~40.base;
    type_trans_~hdr_size~40 := 5;
    skb_reset_mac_header_#in~skb.base, skb_reset_mac_header_#in~skb.offset := type_trans_~skb.base, type_trans_~skb.offset;
    havoc skb_reset_mac_header_#t~mem14.offset, skb_reset_mac_header_~skb.base, skb_reset_mac_header_#t~mem13.offset, skb_reset_mac_header_#t~mem13.base, skb_reset_mac_header_#t~mem14.base, skb_reset_mac_header_~skb.offset;
    skb_reset_mac_header_~skb.base, skb_reset_mac_header_~skb.offset := skb_reset_mac_header_#in~skb.base, skb_reset_mac_header_#in~skb.offset;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := skb_reset_mac_header_~skb.base, 8, skb_reset_mac_header_~skb.offset + 232;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    skb_reset_mac_header_#t~mem13.offset, skb_reset_mac_header_#t~mem13.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := skb_reset_mac_header_~skb.base, 8, skb_reset_mac_header_~skb.offset + 224;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    skb_reset_mac_header_#t~mem14.offset, skb_reset_mac_header_#t~mem14.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    assume ((-65536 <= skb_reset_mac_header_#t~mem14.base + skb_reset_mac_header_#t~mem14.offset && 0 <= skb_reset_mac_header_#t~mem13.base + skb_reset_mac_header_#t~mem13.offset) && skb_reset_mac_header_#t~mem14.base + skb_reset_mac_header_#t~mem14.offset < 0) && skb_reset_mac_header_#t~mem13.base + skb_reset_mac_header_#t~mem13.offset < 65536;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, skb_reset_mac_header_~skb.base, skb_reset_mac_header_#t~mem13.base + skb_reset_mac_header_#t~mem13.offset - (skb_reset_mac_header_#t~mem14.offset + skb_reset_mac_header_#t~mem14.base + 65536), skb_reset_mac_header_~skb.offset + 214;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc skb_reset_mac_header_#t~mem13.offset, skb_reset_mac_header_#t~mem13.base;
    havoc skb_reset_mac_header_#t~mem14.offset, skb_reset_mac_header_#t~mem14.base;
    skb_pull_#in~11.base, skb_pull_#in~12, skb_pull_#in~11.offset := type_trans_~skb.base, type_trans_~hdr_size~40, type_trans_~skb.offset;
    havoc skb_pull_#res.base, skb_pull_#res.offset;
    type_trans_#t~ret23.offset, type_trans_#t~ret23.base := skb_pull_#res.offset, skb_pull_#res.base;
    havoc type_trans_#t~ret23.offset, type_trans_#t~ret23.base;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := type_trans_~pkt~40.base, type_trans_~pkt~40.offset + 1, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    type_trans_#t~mem24 := read~int_#value;
    assume type_trans_#t~mem24 - 256 == 0;
    havoc type_trans_#t~mem24;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, type_trans_~skb.base, 1, type_trans_~skb.offset + 129;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := type_trans_~soft~40.base, type_trans_~soft~40.offset, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    type_trans_#t~mem31 := read~int_#value;
    assume type_trans_#t~mem31 % 256 == 240 && type_trans_#t~mem31 < -256;
    type_trans_#t~switch32 := true;
    assume type_trans_#t~switch32;
    type_trans_#res := 8;
    rx_#t~ret55 := type_trans_#res;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, rx_~skb~48.base, rx_#t~ret55, rx_~skb~48.offset + 134;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc rx_#t~ret55;
    ldv_netif_rx_15_#in~ldv_func_arg1.base, ldv_netif_rx_15_#in~ldv_func_arg1.offset := rx_~skb~48.base, rx_~skb~48.offset;
    havoc ldv_netif_rx_15_#res;
    havoc ldv_netif_rx_15_~ldv_func_arg1.base, ldv_netif_rx_15_~ldv_func_arg1.offset, ldv_netif_rx_15_~tmp~106, ldv_netif_rx_15_#t~ret108;
    ldv_netif_rx_15_~ldv_func_arg1.base, ldv_netif_rx_15_~ldv_func_arg1.offset := ldv_netif_rx_15_#in~ldv_func_arg1.base, ldv_netif_rx_15_#in~ldv_func_arg1.offset;
    havoc ldv_netif_rx_15_~tmp~106;
    ldv_skb_free_int_#in~skb.base, ldv_skb_free_int_#in~skb.offset := ldv_netif_rx_15_~ldv_func_arg1.base, ldv_netif_rx_15_~ldv_func_arg1.offset;
    havoc ldv_skb_free_int_#res;
    havoc ldv_skb_free_int_~skb.offset, ldv_skb_free_int_~skb.base;
    ldv_skb_free_int_~skb.offset, ldv_skb_free_int_~skb.base := ldv_skb_free_int_#in~skb.offset, ldv_skb_free_int_#in~skb.base;
    ldv_set_remove_#in~e.offset, ldv_set_remove_#in~set.offset, ldv_set_remove_#in~e.base, ldv_set_remove_#in~set.base := ldv_skb_free_int_~skb.offset, ~LDV_SKBS.offset, ldv_skb_free_int_~skb.base, ~LDV_SKBS.base;
    havoc ldv_set_remove_#t~mem111.offset, ldv_set_remove_#t~mem113.base, ldv_set_remove_~e.base, ldv_set_remove_~e.offset, ldv_set_remove_#t~mem113.offset, ldv_set_remove_~set.base, ldv_set_remove_~deleted_index~123, ldv_set_remove_#t~mem111.base, ldv_set_remove_~i~123, ldv_set_remove_~set.offset;
    ldv_set_remove_~set.base, ldv_set_remove_~set.offset := ldv_set_remove_#in~set.base, ldv_set_remove_#in~set.offset;
    ldv_set_remove_~e.base, ldv_set_remove_~e.offset := ldv_set_remove_#in~e.base, ldv_set_remove_#in~e.offset;
    havoc ldv_set_remove_~i~123;
    havoc ldv_set_remove_~deleted_index~123;
    ldv_set_remove_~deleted_index~123 := -1;
    ldv_set_remove_~i~123 := 0;
    assume ldv_set_remove_~i~123 < ~last_index;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := ~#set_impl.base, 8, ~#set_impl.offset + 8 * ldv_set_remove_~i~123;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    ldv_set_remove_#t~mem111.offset, ldv_set_remove_#t~mem111.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    assume ((ldv_set_remove_#t~mem111.offset + ldv_set_remove_#t~mem111.base < 0 && ldv_set_remove_#t~mem111.offset + ldv_set_remove_#t~mem111.base + 18446744073709551616 == (ldv_set_remove_~e.offset + ldv_set_remove_~e.base) % 18446744073709551616) && 18446744073709551616 + 18446744073709551616 <= ldv_set_remove_~e.offset + ldv_set_remove_~e.base) && -18446744073709551616 <= ldv_set_remove_#t~mem111.offset + ldv_set_remove_#t~mem111.base;
    havoc ldv_set_remove_#t~mem111.offset, ldv_set_remove_#t~mem111.base;
    ldv_set_remove_~deleted_index~123 := ldv_set_remove_~i~123;
    assume !(ldv_set_remove_~deleted_index~123 == -1);
    ldv_set_remove_~i~123 := ldv_set_remove_~deleted_index~123 + 1;
    assume !(ldv_set_remove_~i~123 < ~last_index);
    ~last_index := ~last_index - 1;
    ldv_skb_free_int_#res := 0;
    ldv_netif_rx_15_#t~ret108 := ldv_skb_free_int_#res;
    assume ldv_netif_rx_15_#t~ret108 <= 2147483647 && 0 <= ldv_netif_rx_15_#t~ret108 + 2147483648;
    ldv_netif_rx_15_~tmp~106 := ldv_netif_rx_15_#t~ret108;
    havoc ldv_netif_rx_15_#t~ret108;
    ldv_netif_rx_15_#res := ldv_netif_rx_15_~tmp~106;
    rx_#t~ret57 := ldv_netif_rx_15_#res;
    assume rx_#t~ret57 <= 2147483647 && 0 <= rx_#t~ret57 + 2147483648;
    havoc rx_#t~ret57;
    ~ldv_state_variable_1 := 1;
    goto loc2;
  loc4_1:
    assume !main_#t~switch98;
    assume main_~tmp___5~81 == 1;
    main_#t~switch98 := true;
    assume main_#t~switch98;
    assume !(~ldv_state_variable_0 == 0);
    assume main_#t~nondet104 <= 2147483647 && 0 <= main_#t~nondet104 + 2147483648;
    main_~tmp___7~81 := main_#t~nondet104;
    havoc main_#t~nondet104;
    goto loc5;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume !(main_~tmp___7~81 == 0);
    main_#t~switch105 := false;
    goto loc6;
  loc5_1:
    assume main_~tmp___7~81 == 0;
    main_#t~switch105 := true;
    goto loc6;
  loc6:
    goto loc6_0, loc6_1;
  loc6_0:
    assume main_#t~switch105;
    assume ~ref_cnt == 0 && ~ldv_state_variable_0 == 3;
    arcnet_unregister_proto_#in~19.offset, arcnet_unregister_proto_#in~19.base := ~#rfc1051_proto.offset, ~#rfc1051_proto.base;
    ~ldv_state_variable_0 := 2;
    havoc ldv_check_final_state_#t~ret115, ldv_check_final_state_~tmp___7~146;
    havoc ldv_check_final_state_~tmp___7~146;
    ldv_set_is_empty_#in~set.offset, ldv_set_is_empty_#in~set.base := ~LDV_SKBS.offset, ~LDV_SKBS.base;
    havoc ldv_set_is_empty_#res;
    havoc ldv_set_is_empty_~set.base, ldv_set_is_empty_~set.offset;
    ldv_set_is_empty_~set.base, ldv_set_is_empty_~set.offset := ldv_set_is_empty_#in~set.base, ldv_set_is_empty_#in~set.offset;
    assume !(~last_index == 0);
    ldv_set_is_empty_#res := 0;
    ldv_check_final_state_#t~ret115 := ldv_set_is_empty_#res;
    assume 0 <= ldv_check_final_state_#t~ret115 + 2147483648 && ldv_check_final_state_#t~ret115 <= 2147483647;
    ldv_check_final_state_~tmp___7~146 := ldv_check_final_state_#t~ret115;
    havoc ldv_check_final_state_#t~ret115;
    assume ldv_check_final_state_~tmp___7~146 == 0;
    goto loc7;
  loc6_1:
    assume !main_#t~switch105;
    assume main_~tmp___7~81 == 1;
    main_#t~switch105 := true;
    assume main_#t~switch105;
    assume ~ldv_state_variable_0 == 1;
    havoc arcnet_rfc1051_init_#res;
    havoc arcnet_rfc1051_init_#t~ret21, arcnet_rfc1051_init_#t~nondet20.base, arcnet_rfc1051_init_#t~nondet20.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 75;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    arcnet_rfc1051_init_#t~nondet20.base, arcnet_rfc1051_init_#t~nondet20.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    printk_#in~0.offset, printk_#in~0.base := arcnet_rfc1051_init_#t~nondet20.offset, arcnet_rfc1051_init_#t~nondet20.base;
    havoc printk_#res;
    arcnet_rfc1051_init_#t~ret21 := printk_#res;
    assume arcnet_rfc1051_init_#t~ret21 <= 2147483647 && 0 <= arcnet_rfc1051_init_#t~ret21 + 2147483648;
    havoc arcnet_rfc1051_init_#t~nondet20.base, arcnet_rfc1051_init_#t~nondet20.offset;
    havoc arcnet_rfc1051_init_#t~ret21;
    ~arc_proto_map.base, ~arc_proto_map.offset := ~arc_proto_map.base[241 := ~#rfc1051_proto.base], ~arc_proto_map.offset[241 := ~#rfc1051_proto.offset];
    ~arc_proto_map.base, ~arc_proto_map.offset := ~arc_proto_map.base[240 := ~arc_proto_map.base[241]], ~arc_proto_map.offset[240 := ~arc_proto_map.offset[241]];
    assume (18446744073709551616 <= ~arc_bcast_proto.offset + ~arc_bcast_proto.base && ~arc_bcast_proto.offset + ~arc_bcast_proto.base < 18446744073709551616 + 18446744073709551616) && ~arc_bcast_proto.offset + ~arc_bcast_proto.base - 18446744073709551616 == ~arc_proto_default.base + ~arc_proto_default.offset;
    ~arc_bcast_proto.offset, ~arc_bcast_proto.base := ~#rfc1051_proto.offset, ~#rfc1051_proto.base;
    arcnet_rfc1051_init_#res := 0;
    main_#t~ret106 := arcnet_rfc1051_init_#res;
    assume 0 <= main_#t~ret106 + 2147483648 && main_#t~ret106 <= 2147483647;
    ~ldv_retval_0 := main_#t~ret106;
    havoc main_#t~ret106;
    assume ~ldv_retval_0 == 0;
    ~ldv_state_variable_0 := 3;
    ~ldv_state_variable_1 := 1;
    havoc ldv_initialize_ArcProto_1_#t~ret88.base, ldv_initialize_ArcProto_1_#t~ret89.offset, ldv_initialize_ArcProto_1_#t~ret89.base, ldv_initialize_ArcProto_1_~tmp___0~79.base, ldv_initialize_ArcProto_1_~tmp~79.base, ldv_initialize_ArcProto_1_~tmp___0~79.offset, ldv_initialize_ArcProto_1_#t~ret88.offset, ldv_initialize_ArcProto_1_~tmp~79.offset;
    havoc ldv_initialize_ArcProto_1_~tmp~79.base, ldv_initialize_ArcProto_1_~tmp~79.offset;
    havoc ldv_initialize_ArcProto_1_~tmp___0~79.base, ldv_initialize_ArcProto_1_~tmp___0~79.offset;
    ldv_zalloc_#in~size := 20;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~tmp~17.base, ldv_zalloc_~p~17.base, ldv_zalloc_#t~malloc18.base, ldv_zalloc_~size, ldv_zalloc_~tmp~17.offset, ldv_zalloc_#t~nondet17, ldv_zalloc_#t~malloc18.offset, ldv_zalloc_~tmp___0~17, ldv_zalloc_~p~17.offset;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~17.base, ldv_zalloc_~p~17.offset;
    havoc ldv_zalloc_~tmp~17.base, ldv_zalloc_~tmp~17.offset;
    havoc ldv_zalloc_~tmp___0~17;
    assume 0 <= ldv_zalloc_#t~nondet17 + 2147483648 && ldv_zalloc_#t~nondet17 <= 2147483647;
    ldv_zalloc_~tmp___0~17 := ldv_zalloc_#t~nondet17;
    havoc ldv_zalloc_#t~nondet17;
    assume !(ldv_zalloc_~tmp___0~17 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_initialize_ArcProto_1_#t~ret88.base, ldv_initialize_ArcProto_1_#t~ret88.offset := ldv_zalloc_#res.base, ldv_zalloc_#res.offset;
    ldv_initialize_ArcProto_1_~tmp~79.base, ldv_initialize_ArcProto_1_~tmp~79.offset := ldv_initialize_ArcProto_1_#t~ret88.base, ldv_initialize_ArcProto_1_#t~ret88.offset;
    havoc ldv_initialize_ArcProto_1_#t~ret88.base, ldv_initialize_ArcProto_1_#t~ret88.offset;
    ~rfc1051_proto_group0.offset, ~rfc1051_proto_group0.base := ldv_initialize_ArcProto_1_~tmp~79.offset, ldv_initialize_ArcProto_1_~tmp~79.base;
    ldv_zalloc_#in~size := 3264;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~tmp~17.base, ldv_zalloc_~p~17.base, ldv_zalloc_#t~malloc18.base, ldv_zalloc_~size, ldv_zalloc_~tmp~17.offset, ldv_zalloc_#t~nondet17, ldv_zalloc_#t~malloc18.offset, ldv_zalloc_~tmp___0~17, ldv_zalloc_~p~17.offset;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~17.base, ldv_zalloc_~p~17.offset;
    havoc ldv_zalloc_~tmp~17.base, ldv_zalloc_~tmp~17.offset;
    havoc ldv_zalloc_~tmp___0~17;
    assume ldv_zalloc_#t~nondet17 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet17 + 2147483648;
    ldv_zalloc_~tmp___0~17 := ldv_zalloc_#t~nondet17;
    havoc ldv_zalloc_#t~nondet17;
    assume !(ldv_zalloc_~tmp___0~17 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_initialize_ArcProto_1_#t~ret89.offset, ldv_initialize_ArcProto_1_#t~ret89.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    ldv_initialize_ArcProto_1_~tmp___0~79.base, ldv_initialize_ArcProto_1_~tmp___0~79.offset := ldv_initialize_ArcProto_1_#t~ret89.base, ldv_initialize_ArcProto_1_#t~ret89.offset;
    havoc ldv_initialize_ArcProto_1_#t~ret89.offset, ldv_initialize_ArcProto_1_#t~ret89.base;
    ~rfc1051_proto_group1.base, ~rfc1051_proto_group1.offset := ldv_initialize_ArcProto_1_~tmp___0~79.base, ldv_initialize_ArcProto_1_~tmp___0~79.offset;
    assume ~ldv_retval_0 == 0;
    goto loc2;
  loc7:
    assert false;
}


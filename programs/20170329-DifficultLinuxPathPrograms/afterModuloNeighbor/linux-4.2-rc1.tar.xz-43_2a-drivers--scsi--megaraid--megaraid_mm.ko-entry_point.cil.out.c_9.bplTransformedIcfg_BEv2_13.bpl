var ~#adapters_list_g.base : int;

var ~#__this_module.base : int;

var ~#__this_module.offset : int;

var #memory_$Pointer$.base : [int][int]int;

var ~#megaraid_mm_dev.base : int;

var ~ldv_timer_state_1 : int;

var v_rep#funAddr~mraid_mm_unlocked_ioctl.offset_1 : int;

var ~lsi_fops_group2.offset : int;

var #NULL.offset : int;

var ~#wait_q.offset : int;

var v_rep#funAddr~noop_llseek.base_1 : int;

var ~#drvr_ver.offset : int;

var ~#drvr_ver.base : int;

var ~#adapters_count_g.base : int;

var ~#mraid_mm_mutex.offset : int;

var v_rep#funAddr~noop_llseek.offset_1 : int;

var v_rep#funAddr~mraid_mm_unlocked_ioctl.base_1 : int;

var ~#lsi_fops.base : int;

var ~ldv_state_variable_2 : int;

var ~ldv_state_variable_0 : int;

var ~ldv_retval_0 : int;

var ~lsi_fops_group1.base : int;

var #length : [int]int;

var ~#lsi_fops.offset : int;

var ~#wait_q.base : int;

var ~ref_cnt : int;

var ~#adapters_count_g.offset : int;

var ~ldv_timer_list_1.base : int;

var v_rep#funAddr~mraid_mm_compat_ioctl.base_1 : int;

var ~#mraid_mm_mutex.base : int;

var v_rep#funAddr~mraid_mm_open.offset_1 : int;

var ~#megaraid_mm_dev.offset : int;

var #NULL.base : int;

var ~dbglevel : int;

var ~#adapters_list_g.offset : int;

var ~LDV_IN_INTERRUPT : int;

var ~lsi_fops_group1.offset : int;

var ~ldv_state_variable_1 : int;

var ~lsi_fops_group2.base : int;

var #valid : [int]int;

var #memory_int : [int][int]int;

var ~ldv_retval_1 : int;

var ~ldv_timer_list_1.offset : int;

var v_rep#funAddr~mraid_mm_compat_ioctl.offset_1 : int;

var v_rep#funAddr~mraid_mm_open.base_1 : int;

var #memory_$Pointer$.offset : [int][int]int;

var ~ldv_spin : int;

procedure ULTIMATE.start() returns ()
modifies ~#adapters_list_g.base, ~#__this_module.base, ~#__this_module.offset, #memory_$Pointer$.base, ~#megaraid_mm_dev.base, ~ldv_timer_state_1, v_rep#funAddr~mraid_mm_unlocked_ioctl.offset_1, ~lsi_fops_group2.offset, #NULL.offset, ~#wait_q.offset, v_rep#funAddr~noop_llseek.base_1, ~#drvr_ver.offset, ~#drvr_ver.base, ~#adapters_count_g.base, ~#mraid_mm_mutex.offset, v_rep#funAddr~noop_llseek.offset_1, v_rep#funAddr~mraid_mm_unlocked_ioctl.base_1, ~#lsi_fops.base, ~ldv_state_variable_2, ~ldv_state_variable_0, ~ldv_retval_0, ~lsi_fops_group1.base, #length, ~#lsi_fops.offset, ~#wait_q.base, ~ref_cnt, ~#adapters_count_g.offset, ~ldv_timer_list_1.base, v_rep#funAddr~mraid_mm_compat_ioctl.base_1, ~#mraid_mm_mutex.base, v_rep#funAddr~mraid_mm_open.offset_1, ~#megaraid_mm_dev.offset, #NULL.base, ~dbglevel, ~#adapters_list_g.offset, ~LDV_IN_INTERRUPT, ~lsi_fops_group1.offset, ~ldv_state_variable_1, ~lsi_fops_group2.base, #valid, #memory_int, ~ldv_retval_1, ~ldv_timer_list_1.offset, v_rep#funAddr~mraid_mm_compat_ioctl.offset_1, v_rep#funAddr~mraid_mm_open.base_1, #memory_$Pointer$.offset, ~ldv_spin;
{
    var mraid_mm_ioctl_~adp~114.offset : int;
    var mimd_to_kioc_~umimd.base : int;
    var copy_from_user_~from.offset : int;
    var mimd_to_kioc_~#mimd~171.offset : int;
    var mraid_mm_unlocked_ioctl_#in~filep.offset : int;
    var #Ultimate.meminit_#ptr.base : int;
    var mimd_to_kioc_#t~mem219.offset : int;
    var mraid_mm_alloc_kioc_~flags~228 : int;
    var mraid_mm_attach_buf_#in~adp.base : int;
    var mimd_to_kioc_#t~ite200 : int;
    var mraid_mm_attach_buf_#res : int;
    var mraid_mm_open_~filep.base : int;
    var main_~tmp___1~384 : int;
    var write~int_#ptr.base : int;
    var mraid_mm_alloc_kioc_#res.offset : int;
    var ldv_check_alloc_flags_#in~flags : int;
    var __might_fault_#in~4.offset : int;
    var mraid_mm_unlocked_ioctl_#in~arg : int;
    var mraid_mm_get_adapter_#in~umimd.base : int;
    var mimd_to_kioc_#t~mem186.base : int;
    var main_#t~nondet470 : int;
    var ldv_memset_#t~memset13.offset : int;
    var mraid_mm_get_adapter_~adapno~146 : int;
    var write~int_old_#memory_$Pointer$.offset : [int][int]int;
    var mraid_mm_ioctl_#t~ret129 : int;
    var mimd_to_kioc_#t~mem190 : int;
    var copy_from_user_#in~n : int;
    var up_#in~78.offset : int;
    var ldv_init_zalloc_~tmp~13.base : int;
    var spin_unlock_irqrestore_#in~lock.base : int;
    var mimd_to_kioc_#t~ret228 : int;
    var mraid_mm_get_adapter_~__mptr~146.offset : int;
    var mraid_mm_open_#in~filep.offset : int;
    var write~$Pointer$_#ptr.base : int;
    var write~int_#sizeOfWrittenType : int;
    var mimd_to_kioc_~opcode~171 : int;
    var mraid_mm_attach_buf_#t~ret253.base : int;
    var ldv_init_zalloc_#res.base : int;
    var ldv_memset_#res.offset : int;
    var handle_drvrcmd_~umimd~158.offset : int;
    var handle_drvrcmd_~arg.offset : int;
    var mraid_mm_attach_buf_#in~adp.offset : int;
    var mimd_to_kioc_#in~kioc.offset : int;
    var list_empty_#in~head.base : int;
    var mimd_to_kioc_~mbox64~171.offset : int;
    var mraid_mm_ioctl_#in~filep.offset : int;
    var handle_drvrcmd_#t~mem153 : int;
    var #Ultimate.alloc_old_#valid : [int]int;
    var mraid_mm_attach_buf_~flags~214 : int;
    var write~int_#ptr.offset : int;
    var mraid_mm_ioctl_#t~nondet112.base : int;
    var ULTIMATE.init_#t~union502.dep_map.cpu : int;
    var ldv_file_operations_2_~tmp~375.offset : int;
    var mraid_mm_init_#t~nondet457.base : int;
    var mraid_mm_ioctl_~#signature~114.offset : int;
    var ldv_spin_unlock_irqrestore_12_~lock.base : int;
    var ldv_misc_register_28_~ldv_func_res~427 : int;
    var mimd_to_kioc_#t~mem211 : int;
    var mraid_mm_ioctl_#t~mem136 : int;
    var mimd_to_kioc_#t~mem235.offset : int;
    var handle_drvrcmd_#t~mem160.offset : int;
    var _raw_spin_unlock_irqrestore_#in~41 : int;
    var ldv_dma_pool_alloc_24_~tmp~419.offset : int;
    var main_~#ldvarg4~384.base : int;
    var mimd_to_kioc_~tmp___4~171 : int;
    var write~$Pointer$_old_#memory_$Pointer$.base : [int][int]int;
    var main_#t~switch479 : bool;
    var __init_waitqueue_head_#in~42.offset : int;
    var mraid_mm_alloc_kioc_#res.base : int;
    var handle_drvrcmd_#t~ret157 : int;
    var mimd_to_kioc_#t~mem227.offset : int;
    var INIT_LIST_HEAD_#in~list.base : int;
    var list_empty_#t~mem23.base : int;
    var #Ultimate.meminit_#product : int;
    var #Ultimate.C_memset_#value : int;
    var handle_drvrcmd_~tmp___0~158 : int;
    var __init_waitqueue_head_#in~43.base : int;
    var ldv_memset_~s.offset : int;
    var read~int_#ptr.offset : int;
    var ULTIMATE.init_#t~union503.owner.offset : int;
    var ldv_misc_register_28_#res : int;
    var main_#t~mem491 : int;
    var mraid_mm_ioctl_#t~mem124 : int;
    var ULTIMATE.init_#t~union502.dep_map.ip : int;
    var ULTIMATE.init_#t~union503.owner_cpu : int;
    var ldv_memset_#in~n : int;
    var mraid_mm_open_~filep.offset : int;
    var misc_register_#res : int;
    var handle_drvrcmd_#t~mem160.base : int;
    var mimd_to_kioc_#t~mem234.offset : int;
    var mraid_mm_ioctl_#t~ret128.base : int;
    var mraid_mm_ioctl_~tmp___0~114 : int;
    var handle_drvrcmd_#t~mem154 : int;
    var main_#t~ret494 : int;
    var mraid_mm_alloc_kioc_~kioc~228.base : int;
    var mraid_mm_alloc_kioc_~__mptr~228.offset : int;
    var spin_unlock_irqrestore_#in~lock.offset : int;
    var mimd_to_kioc_#t~nondet179.base : int;
    var ldv_dma_pool_alloc_24_#in~ldv_func_arg1.offset : int;
    var ldv_file_operations_2_~tmp___0~375.base : int;
    var mraid_mm_unlocked_ioctl_#t~ret142 : int;
    var mraid_mm_unlocked_ioctl_~arg : int;
    var mraid_mm_ioctl_~adp~114.base : int;
    var mraid_mm_alloc_kioc_#t~mem262.offset : int;
    var _raw_spin_unlock_irqrestore_#in~40.base : int;
    var mimd_to_kioc_#t~mem233 : int;
    var mimd_to_kioc_#t~mem210 : int;
    var #Ultimate.alloc_#res.offset : int;
    var mraid_mm_alloc_kioc_#t~memset263.base : int;
    var printk_#in~0.offset : int;
    var mraid_mm_get_adapter_~rval.offset : int;
    var mimd_to_kioc_#t~ret207 : int;
    var read~$Pointer$_#ptr.offset : int;
    var mraid_mm_alloc_kioc_#t~mem259.offset : int;
    var ldv_init_zalloc_~p~13.offset : int;
    var handle_drvrcmd_~old_ioctl : int;
    var list_empty_~head.base : int;
    var ULTIMATE.init_#t~union502.dep_map.name.offset : int;
    var mraid_mm_ioctl_#t~mem121 : int;
    var main_~#ldvarg1~384.base : int;
    var ULTIMATE.init_#t~union503.dep_map.cpu : int;
    var main_#t~mem492 : int;
    var mimd_to_kioc_#t~ret162 : int;
    var mraid_mm_alloc_kioc_#t~memset261.offset : int;
    var main_#t~nondet480 : int;
    var read~$Pointer$_#value.base : int;
    var mraid_mm_open_~inode.base : int;
    var mimd_to_kioc_#in~umimd.base : int;
    var handle_drvrcmd_~rval.offset : int;
    var mraid_mm_alloc_kioc_#t~mem262.base : int;
    var mimd_to_kioc_#t~mem186.offset : int;
    var main_#t~ret493 : int;
    var memcmp_#res : int;
    var mraid_mm_get_adapter_#in~rval.base : int;
    var up_#in~78.base : int;
    var mraid_mm_attach_buf_#t~mem247.base : int;
    var mraid_mm_ioctl_#in~cmd : int;
    var main_~ldvarg5~384 : int;
    var ldv_spin_unlock_irqrestore_12_#in~flags : int;
    var mraid_mm_ioctl_#t~nondet114.offset : int;
    var ldv_file_operations_2_#t~ret465.base : int;
    var copy_from_user_~to.offset : int;
    var __init_waitqueue_head_#in~43.offset : int;
    var mimd_to_kioc_#t~mem232 : int;
    var memcmp_#in~31.offset : int;
    var misc_register_#in~103.offset : int;
    var mraid_mm_get_adapter_#t~mem149.base : int;
    var ldv_dma_pool_alloc_24_#res.offset : int;
    var mimd_to_kioc_~mbox~171.base : int;
    var main_#t~ret474.offset : int;
    var main_#t~ret482 : int;
    var handle_drvrcmd_#in~arg.offset : int;
    var mraid_mm_alloc_kioc_#t~mem259.base : int;
    var mraid_mm_attach_buf_#t~mem243 : int;
    var write~$Pointer$_#value.base : int;
    var ULTIMATE.init_#t~union503.dep_map.ip : int;
    var #Ultimate.C_memset_#res.offset : int;
    var mimd_to_kioc_#t~mem169 : int;
    var #Ultimate.meminit_#amountOfFields : int;
    var ULTIMATE.init_#t~nondet107.offset : int;
    var ULTIMATE.init_#t~union504.dep_map.class_cache.offset : [int]int;
    var mraid_mm_ioctl_~cmd : int;
    var mimd_to_kioc_#t~mem221 : int;
    var ldv_init_zalloc_#in~size : int;
    var ldv_spin_unlock_irqrestore_12_#in~lock.base : int;
    var ULTIMATE.init_#t~union502.__padding : [int]int;
    var mraid_mm_ioctl_#in~arg : int;
    var main_~#ldvarg2~384.base : int;
    var ldv_file_operations_2_#t~ret465.offset : int;
    var ldv_memset_~c : int;
    var mutex_lock_nested_#in~54.base : int;
    var handle_drvrcmd_~arg.base : int;
    var INIT_LIST_HEAD_#in~list.offset : int;
    var handle_drvrcmd_#in~arg.base : int;
    var mraid_mm_alloc_kioc_~tmp~228 : int;
    var mraid_mm_attach_buf_~kioc.offset : int;
    var mimd_to_kioc_#t~mem204.base : int;
    var mraid_mm_get_adapter_#res.base : int;
    var copy_from_user_#in~to.base : int;
    var mraid_mm_unlocked_ioctl_~filep.base : int;
    var mimd_to_kioc_~tmp___1~171 : int;
    var mimd_to_kioc_#t~mem231 : int;
    var handle_drvrcmd_~rval.base : int;
    var ldv_memset_#in~c : int;
    var mraid_mm_init_#t~nondet454.offset : int;
    var copy_from_user_#in~to.offset : int;
    var mraid_mm_get_adapter_~adapter~146.offset : int;
    var ULTIMATE.init_#t~union502.dep_map.name.base : int;
    var mraid_mm_ioctl_~#drvrcmd_rval~114.offset : int;
    var ULTIMATE.dealloc_old_#valid : [int]int;
    var spin_unlock_irqrestore_#in~flags : int;
    var read~int_#ptr.base : int;
    var mimd_to_kioc_#t~mem168 : int;
    var ldv_dma_pool_alloc_24_~flags : int;
    var mraid_mm_unlocked_ioctl_~filep.offset : int;
    var mraid_mm_alloc_kioc_~head~228.offset : int;
    var mraid_mm_ioctl_#t~nondet126.offset : int;
    var #Ultimate.C_memset_#amount : int;
    var mraid_mm_attach_buf_~kioc.base : int;
    var mraid_mm_init_~err~356 : int;
    var mraid_mm_open_~inode.offset : int;
    var mimd_to_kioc_~pthru32~171.offset : int;
    var ldv_dma_pool_alloc_24_~ldv_func_arg3.base : int;
    var ULTIMATE.dealloc_~addr.offset : int;
    var list_empty_#in~head.offset : int;
    var main_#t~ret473.offset : int;
    var mraid_mm_init_#t~nondet454.base : int;
    var write~$Pointer$_#value.offset : int;
    var mraid_mm_open_#in~inode.offset : int;
    var mimd_to_kioc_~pthru32~171.base : int;
    var mraid_mm_unlocked_ioctl_#in~filep.base : int;
    var mraid_mm_ioctl_#t~ret113 : int;
    var ULTIMATE.init_#t~nondet106.offset : int;
    var mraid_mm_get_adapter_#t~mem146 : int;
    var mraid_mm_get_adapter_~tmp___0~146 : int;
    var mimd_to_kioc_~kioc.base : int;
    var ldv_misc_register_28_#t~ret500 : int;
    var ldv_memset_~tmp~15.offset : int;
    var ULTIMATE.init_#t~union502.dep_map.class_cache.offset : [int]int;
    var mraid_mm_ioctl_~#rval~114.offset : int;
    var ldv_file_operations_2_~tmp~375.base : int;
    var mraid_mm_attach_buf_#t~mem249 : int;
    var ldv__builtin_expect_#in~exp : int;
    var read~int_#sizeOfReadType : int;
    var copy_from_user_#t~nondet88.offset : int;
    var main_#t~ret475.base : int;
    var mraid_mm_get_adapter_~rval.base : int;
    var ULTIMATE.init_#t~union504.dep_map.ip : int;
    var mimd_to_kioc_#t~mem167 : int;
    var ldv_dma_pool_alloc_24_#t~ret496.base : int;
    var write~$Pointer$_old_#memory_$Pointer$.offset : [int][int]int;
    var main_~#ldvarg0~384.offset : int;
    var ldv_memset_~tmp~15.base : int;
    var #Ultimate.meminit_#ptr.offset : int;
    var mraid_mm_get_adapter_#t~mem149.offset : int;
    var copy_from_user_#in~from.base : int;
    var write~$Pointer$_#sizeOfWrittenType : int;
    var mraid_mm_alloc_kioc_~__mptr~228.base : int;
    var ULTIMATE.init_#t~union503.dep_map.name.offset : int;
    var mraid_mm_ioctl_#t~ret116 : int;
    var main_#t~switch481 : bool;
    var mraid_mm_ioctl_#t~ret139 : int;
    var ULTIMATE.init_#t~union504.dep_map.name.offset : int;
    var main_#t~ret490 : int;
    var mimd_to_kioc_#t~mem177 : int;
    var mimd_to_kioc_#t~ret178 : int;
    var handle_drvrcmd_#in~rval.offset : int;
    var mimd_to_kioc_#t~mem220.base : int;
    var write~$Pointer$_old_#memory_int : [int][int]int;
    var mimd_to_kioc_#t~short165 : bool;
    var mraid_mm_open_#in~inode.base : int;
    var ULTIMATE.dealloc_~addr.base : int;
    var handle_drvrcmd_~tmp___1~158 : int;
    var mraid_mm_ioctl_#t~mem137 : int;
    var mraid_mm_get_adapter_~iterator~146 : int;
    var ldv_dma_pool_alloc_24_#res.base : int;
    var mraid_mm_attach_buf_~tmp~214.base : int;
    var mraid_mm_get_adapter_#t~mem145 : int;
    var mraid_mm_get_adapter_#t~mem148.base : int;
    var mraid_mm_attach_buf_#t~ret253.offset : int;
    var mraid_mm_ioctl_#t~ret128.offset : int;
    var mraid_mm_ioctl_#t~ret127 : int;
    var mraid_mm_get_adapter_~__mptr~146.base : int;
    var mimd_to_kioc_~kioc.offset : int;
    var handle_drvrcmd_#t~ret152 : int;
    var mimd_to_kioc_~tmp___2~171 : int;
    var __init_waitqueue_head_#in~44.offset : int;
    var __init_waitqueue_head_#in~44.base : int;
    var mimd_to_kioc_#t~mem166 : int;
    var mimd_to_kioc_#t~ret189 : int;
    var mraid_mm_attach_buf_~pool~214.offset : int;
    var main_#t~ret474.base : int;
    var handle_drvrcmd_~opcode~158 : int;
    var mraid_mm_attach_buf_~adp.base : int;
    var mraid_mm_ioctl_#t~mem125 : int;
    var mraid_mm_get_adapter_#t~ret143 : int;
    var ldv_misc_register_28_~misc.base : int;
    var __might_fault_#in~5 : int;
    var mraid_mm_alloc_kioc_#in~adp.base : int;
    var mraid_mm_get_adapter_~adapter~146.base : int;
    var _raw_spin_unlock_irqrestore_#in~40.offset : int;
    var read~$Pointer$_#sizeOfReadType : int;
    var copy_from_user_~tmp___0~73 : int;
    var ULTIMATE.init_#t~union503.dep_map.key.base : int;
    var mraid_mm_get_adapter_~__mptr___0~146.offset : int;
    var #Ultimate.C_memset_#ptr.offset : int;
    var mimd_to_kioc_#t~mem199 : int;
    var mraid_mm_ioctl_#res : int;
    var mraid_mm_init_#t~nondet459.base : int;
    var mraid_mm_ioctl_#t~ret115 : int;
    var mraid_mm_ioctl_#t~mem138 : int;
    var ldv_misc_register_28_~misc.offset : int;
    var ldv_dma_pool_alloc_24_#in~ldv_func_arg3.base : int;
    var handle_drvrcmd_#t~mem156.base : int;
    var mimd_to_kioc_#t~mem219.base : int;
    var mraid_mm_init_~#__key~356.offset : int;
    var ldv_check_alloc_flags_~flags : int;
    var mraid_mm_get_adapter_~__mptr___0~146.base : int;
    var mimd_to_kioc_~umimd.offset : int;
    var mimd_to_kioc_#res : int;
    var ldv_memset_~s.base : int;
    var mraid_mm_init_#t~nondet457.offset : int;
    var misc_register_#in~103.base : int;
    var mimd_to_kioc_#t~mem188 : int;
    var mraid_mm_ioctl_~#rval~114.base : int;
    var #Ultimate.C_memset_#ptr.base : int;
    var mraid_mm_unlocked_ioctl_#res : int;
    var mimd_to_kioc_#t~mem204.offset : int;
    var mimd_to_kioc_#t~nondet179.offset : int;
    var mimd_to_kioc_~tmp___0~171 : int;
    var main_#t~mem487 : int;
    var copy_from_user_#res : int;
    var mimd_to_kioc_~#mimd~171.base : int;
    var mraid_mm_alloc_kioc_#t~mem260 : int;
    var ULTIMATE.init_#t~union504.dep_map.key.offset : int;
    var read~$Pointer$_#value.offset : int;
    var ULTIMATE.init_#t~nondet105.offset : int;
    var mraid_mm_attach_buf_~i~214 : int;
    var printk_#res : int;
    var down_#in~77.base : int;
    var handle_drvrcmd_#t~ret161 : int;
    var mimd_to_kioc_#t~mem198 : int;
    var mraid_mm_alloc_kioc_~kioc~228.offset : int;
    var mraid_mm_attach_buf_#t~mem252.base : int;
    var ldv_memset_#in~s.offset : int;
    var mimd_to_kioc_~mbox~171.offset : int;
    var mraid_mm_attach_buf_~pool~214.base : int;
    var mraid_mm_init_#res : int;
    var #Ultimate.meminit_#t~loopctr507 : int;
    var handle_drvrcmd_~#kmimd~158.base : int;
    var ULTIMATE.init_#t~union503.dep_map.key.offset : int;
    var handle_drvrcmd_~subopcode~158 : int;
    var mimd_to_kioc_#in~kioc.base : int;
    var #Ultimate.alloc_old_#length : [int]int;
    var ULTIMATE.init_#t~union503.dep_map.class_cache.offset : [int]int;
    var mimd_to_kioc_#t~mem164 : int;
    var mimd_to_kioc_~subopcode~171 : int;
    var write~$Pointer$_#ptr.offset : int;
    var mraid_mm_alloc_kioc_~head~228.base : int;
    var mraid_mm_init_#t~ret455 : int;
    var mraid_mm_ioctl_~#drvrcmd_rval~114.base : int;
    var write~int_#value : int;
    var main_#t~nondet478 : int;
    var mraid_mm_open_#res : int;
    var mraid_mm_ioctl_~kioc~114.base : int;
    var mimd_to_kioc_~mbox64~171.base : int;
    var mraid_mm_ioctl_~argp~114.base : int;
    var main_#t~mem488 : int;
    var mimd_to_kioc_#t~mem235.base : int;
    var ULTIMATE.init_#t~nondet106.base : int;
    var mimd_to_kioc_~tmp___3~171 : int;
    var ULTIMATE.init_#t~union503.raw_lock.val.counter : int;
    var ULTIMATE.init_#t~union502.dep_map.key.offset : int;
    var mraid_mm_get_adapter_#res.offset : int;
    var mimd_to_kioc_#t~mem220.offset : int;
    var mimd_to_kioc_#t~mem197 : int;
    var ldv_dma_pool_alloc_24_#in~ldv_func_arg3.offset : int;
    var handle_drvrcmd_~tmp~158 : int;
    var ldv_file_operations_2_#t~ret464.base : int;
    var ldv_dma_pool_alloc_24_#in~ldv_func_arg1.base : int;
    var #Ultimate.alloc_~size : int;
    var mimd_to_kioc_#in~adp.base : int;
    var mraid_mm_get_adapter_~umimd.offset : int;
    var ldv_dma_pool_alloc_24_#t~ret496.offset : int;
    var main_~tmp~384 : int;
    var main_~#ldvarg4~384.offset : int;
    var mraid_mm_attach_buf_~tmp~214.offset : int;
    var mimd_to_kioc_#t~mem208 : int;
    var mimd_to_kioc_#t~mem163 : int;
    var main_~#ldvarg2~384.offset : int;
    var #Ultimate.C_memset_#res.base : int;
    var ldv_spin_unlock_irqrestore_12_#in~lock.offset : int;
    var mraid_mm_ioctl_#t~nondet126.base : int;
    var handle_drvrcmd_#t~switch155 : bool;
    var mraid_mm_ioctl_#in~filep.base : int;
    var mraid_mm_ioctl_~filep.offset : int;
    var mimd_to_kioc_~tmp___5~171 : int;
    var list_empty_~head.offset : int;
    var mraid_mm_ioctl_#t~ret123.offset : int;
    var mimd_to_kioc_#t~mem196 : int;
    var mimd_to_kioc_#t~mem223.base : int;
    var mimd_to_kioc_#t~mem218 : int;
    var mraid_mm_ioctl_#t~mem119 : int;
    var mraid_mm_attach_buf_#t~mem255.offset : int;
    var mraid_mm_ioctl_~argp~114.offset : int;
    var mraid_mm_alloc_kioc_#t~memset261.base : int;
    var mimd_to_kioc_#t~ret222 : int;
    var mraid_mm_alloc_kioc_~adp.offset : int;
    var ldv_dma_pool_alloc_24_~tmp~419.base : int;
    var mimd_to_kioc_#t~mem185 : int;
    var main_#t~ret477.offset : int;
    var __init_waitqueue_head_#in~42.base : int;
    var main_#t~nondet476 : int;
    var #Ultimate.C_memset_#t~loopctr506 : int;
    var ldv_init_zalloc_#t~malloc12.base : int;
    var mraid_mm_attach_buf_~adp.offset : int;
    var ULTIMATE.init_#t~nondet105.base : int;
    var ldv__builtin_expect_#res : int;
    var capable_#res : int;
    var ldv_dma_pool_alloc_24_#in~flags : int;
    var main_#t~switch484 : bool;
    var main_~tmp___0~384 : int;
    var mimd_to_kioc_#t~mem183 : int;
    var handle_drvrcmd_~#kmimd~158.offset : int;
    var mraid_mm_init_~#__key~356.base : int;
    var mraid_mm_get_adapter_~umimd.base : int;
    var mraid_mm_alloc_kioc_~adp.base : int;
    var ULTIMATE.init_#t~union503.magic : int;
    var mraid_mm_alloc_kioc_#t~nondet257.offset : int;
    var mraid_mm_ioctl_#t~ret134 : int;
    var ldv_misc_register_28_~tmp~427 : int;
    var mutex_lock_nested_#in~55 : int;
    var mraid_mm_unlocked_ioctl_#in~cmd : int;
    var mraid_mm_get_adapter_#in~rval.offset : int;
    var mraid_mm_attach_buf_#in~xferlen : int;
    var mraid_mm_ioctl_#t~ret111 : int;
    var ULTIMATE.init_#t~union503.dep_map.name.base : int;
    var mraid_mm_unlocked_ioctl_~cmd : int;
    var mraid_mm_ioctl_#t~mem118 : int;
    var mraid_mm_attach_buf_#t~mem252.offset : int;
    var spin_unlock_irqrestore_~flags : int;
    var copy_from_user_#t~ret90 : int;
    var ldv__builtin_expect_#in~c : int;
    var ldv_dma_pool_alloc_24_~ldv_func_arg1.offset : int;
    var handle_drvrcmd_#in~rval.base : int;
    var handle_drvrcmd_#in~old_ioctl : int;
    var mraid_mm_ioctl_~tmp___1~114 : int;
    var ldv_init_zalloc_#res.offset : int;
    var mraid_mm_ioctl_~arg : int;
    var mimd_to_kioc_#t~mem206 : int;
    var mimd_to_kioc_#t~mem229 : int;
    var read~$Pointer$_#ptr.base : int;
    var main_~#ldvarg1~384.offset : int;
    var mraid_mm_init_#t~ret456 : int;
    var mraid_mm_get_adapter_#t~mem148.offset : int;
    var ULTIMATE.init_#t~union504.dep_map.name.base : int;
    var main_#t~ret473.base : int;
    var mimd_to_kioc_~tmp~171 : int;
    var mraid_mm_ioctl_~tmp~114 : int;
    var read~int_#value : int;
    var ULTIMATE.init_#t~union504.dep_map.cpu : int;
    var main_#t~ret475.offset : int;
    var ldv_dma_pool_alloc_24_~ldv_func_arg3.offset : int;
    var ULTIMATE.init_#t~union504.__padding : [int]int;
    var copy_from_user_~tmp~73 : int;
    var mimd_to_kioc_#in~umimd.offset : int;
    var ULTIMATE.init_#t~union502.dep_map.key.base : int;
    var mraid_mm_ioctl_~old_ioctl~114 : int;
    var __might_fault_#in~4.base : int;
    var mimd_to_kioc_#t~mem216 : int;
    var mraid_mm_ioctl_#t~mem131 : int;
    var mraid_mm_attach_buf_#t~mem255.base : int;
    var mraid_mm_init_#t~nondet459.offset : int;
    var ldv_init_zalloc_#t~malloc12.offset : int;
    var INIT_LIST_HEAD_~list.offset : int;
    var down_#in~77.offset : int;
    var copy_from_user_~to.base : int;
    var mraid_mm_get_adapter_~tmp~146 : int;
    var main_#t~ret489 : int;
    var memcmp_#in~30.offset : int;
    var mimd_to_kioc_#t~memcpy214.offset : int;
    var mraid_mm_attach_buf_#t~mem242 : int;
    var handle_drvrcmd_#t~mem156.offset : int;
    var copy_from_user_#in~from.offset : int;
    var mraid_mm_attach_buf_~xferlen : int;
    var copy_from_user_#t~nondet88.base : int;
    var ULTIMATE.init_#t~union502.dep_map.class_cache.base : [int]int;
    var mraid_mm_open_#t~ret108 : int;
    var mraid_mm_alloc_kioc_#t~nondet257.base : int;
    var printk_#in~0.base : int;
    var mraid_mm_alloc_kioc_#t~ret258 : int;
    var mimd_to_kioc_#t~memcpy214.base : int;
    var ULTIMATE.init_#t~nondet107.base : int;
    var mraid_mm_open_~tmp___0~108 : int;
    var mimd_to_kioc_#t~mem234.base : int;
    var mraid_mm_open_~tmp~108 : int;
    var memcmp_#in~30.base : int;
    var mimd_to_kioc_~adp.offset : int;
    var ldv_init_zalloc_~size : int;
    var mimd_to_kioc_#t~mem215 : int;
    var main_~#ldvarg3~384.base : int;
    var mraid_mm_ioctl_#t~mem132 : int;
    var INIT_LIST_HEAD_~list.base : int;
    var #Ultimate.meminit_#sizeOfFields : int;
    var ULTIMATE.init_#t~union503.owner.base : int;
    var copy_from_user_~sz~73 : int;
    var ldv__builtin_expect_~exp : int;
    var list_empty_#res : int;
    var mraid_mm_unlocked_ioctl_~err~144 : int;
    var handle_drvrcmd_#res : int;
    var mimd_to_kioc_#t~mem193 : int;
    var mraid_mm_attach_buf_#t~mem247.offset : int;
    var mraid_mm_attach_buf_~right_pool~214 : int;
    var capable_#in~59 : int;
    var mraid_mm_ioctl_#t~mem120 : int;
    var main_#res : int;
    var mraid_mm_init_#t~ret458 : int;
    var mraid_mm_attach_buf_#in~kioc.offset : int;
    var spin_unlock_irqrestore_~lock.offset : int;
    var main_#t~ret472.offset : int;
    var mimd_to_kioc_#in~adp.offset : int;
    var mimd_to_kioc_#t~mem227.base : int;
    var main_#t~mem485 : int;
    var copy_from_user_#t~ret89 : int;
    var mraid_mm_attach_buf_#in~kioc.base : int;
    var ULTIMATE.init_#t~union504.dep_map.key.base : int;
    var mraid_mm_ioctl_#t~nondet112.offset : int;
    var ldv__builtin_expect_~c : int;
    var mraid_mm_ioctl_#t~ret123.base : int;
    var ULTIMATE.init_#t~union503.dep_map.class_cache.base : [int]int;
    var mraid_mm_ioctl_~kioc~114.offset : int;
    var ldv_memset_#res.base : int;
    var ldv_spin_unlock_irqrestore_12_~lock.offset : int;
    var main_#t~nondet483 : int;
    var ldv_memset_#in~s.base : int;
    var #Ultimate.alloc_#res.base : int;
    var mraid_mm_get_adapter_~#mimd~146.offset : int;
    var write~int_old_#memory_int : [int][int]int;
    var mimd_to_kioc_#t~mem192 : int;
    var memcmp_#in~32 : int;
    var ldv_init_zalloc_~tmp~13.offset : int;
    var main_~#ldvarg0~384.base : int;
    var main_#t~ret472.base : int;
    var mraid_mm_get_adapter_#in~umimd.offset : int;
    var ldv_memset_#t~memset13.base : int;
    var mraid_mm_alloc_kioc_#t~ret256 : int;
    var list_empty_#t~mem23.offset : int;
    var ldv_init_zalloc_~p~13.base : int;
    var mimd_to_kioc_#t~mem203 : int;
    var handle_drvrcmd_#t~mem159 : int;
    var copy_from_user_~from.base : int;
    var spin_unlock_irqrestore_~lock.base : int;
    var mraid_mm_alloc_kioc_#in~adp.offset : int;
    var ldv_misc_register_28_#in~misc.base : int;
    var mimd_to_kioc_#t~ret237 : int;
    var memcmp_#in~31.base : int;
    var handle_drvrcmd_~umimd~158.base : int;
    var ldv_dma_pool_alloc_24_~ldv_func_arg1.base : int;
    var mraid_mm_ioctl_#t~nondet114.base : int;
    var mraid_mm_get_adapter_~#mimd~146.base : int;
    var mimd_to_kioc_#t~mem223.offset : int;
    var mimd_to_kioc_#t~switch173 : bool;
    var ldv_memset_~n : int;
    var ldv_spin_unlock_irqrestore_12_~flags : int;
    var mimd_to_kioc_#t~mem236 : int;
    var mimd_to_kioc_#t~mem213 : int;
    var ldv_misc_register_28_#in~misc.offset : int;
    var ldv_file_operations_2_~tmp___0~375.offset : int;
    var mutex_lock_nested_#in~54.offset : int;
    var mimd_to_kioc_#t~ret180 : int;
    var ULTIMATE.init_#t~union504.dep_map.class_cache.base : [int]int;
    var mraid_mm_open_#in~filep.base : int;
    var write~int_old_#memory_$Pointer$.base : [int][int]int;
    var main_#t~ret486 : int;
    var main_~#ldvarg3~384.offset : int;
    var mraid_mm_alloc_kioc_#t~memset263.offset : int;
    var ldv_file_operations_2_#t~ret464.offset : int;
    var mraid_mm_ioctl_~filep.base : int;
    var main_#t~ret477.base : int;
    var mraid_mm_ioctl_#t~mem141 : int;
    var mimd_to_kioc_~adp.base : int;
    var mimd_to_kioc_~adapno~171 : int;
    var mraid_mm_ioctl_~#signature~114.base : int;
    var copy_from_user_~n : int;
    var mimd_to_kioc_#t~mem225 : int;

  loc0:
    havoc ULTIMATE.init_#t~union502.__padding, ULTIMATE.init_#t~union504.dep_map.cpu, ULTIMATE.init_#t~nondet105.base, ULTIMATE.init_#t~nondet106.base, ULTIMATE.init_#t~union503.dep_map.name.offset, ULTIMATE.init_#t~union504.dep_map.key.offset, ULTIMATE.init_#t~nondet107.base, ULTIMATE.init_#t~nondet105.offset, ULTIMATE.init_#t~union504.dep_map.name.offset, ULTIMATE.init_#t~union504.__padding, ULTIMATE.init_#t~union504.dep_map.key.base, ULTIMATE.init_#t~union503.raw_lock.val.counter, ULTIMATE.init_#t~union503.dep_map.key.base, ULTIMATE.init_#t~union502.dep_map.key.base, ULTIMATE.init_#t~union502.dep_map.key.offset, ULTIMATE.init_#t~union502.dep_map.cpu, ULTIMATE.init_#t~union503.magic, ULTIMATE.init_#t~union503.dep_map.class_cache.base, ULTIMATE.init_#t~union503.dep_map.name.base, ULTIMATE.init_#t~nondet106.offset, ULTIMATE.init_#t~union502.dep_map.class_cache.offset, ULTIMATE.init_#t~union502.dep_map.name.base, ULTIMATE.init_#t~union504.dep_map.class_cache.base, ULTIMATE.init_#t~union503.dep_map.key.offset, ULTIMATE.init_#t~union503.owner.base, ULTIMATE.init_#t~union503.dep_map.class_cache.offset, ULTIMATE.init_#t~union503.dep_map.ip, ULTIMATE.init_#t~union502.dep_map.name.offset, ULTIMATE.init_#t~union504.dep_map.ip, ULTIMATE.init_#t~union502.dep_map.class_cache.base, ULTIMATE.init_#t~union503.owner.offset, ULTIMATE.init_#t~union503.dep_map.cpu, ULTIMATE.init_#t~union502.dep_map.ip, ULTIMATE.init_#t~union504.dep_map.name.base, ULTIMATE.init_#t~nondet107.offset, ULTIMATE.init_#t~union503.owner_cpu, ULTIMATE.init_#t~union504.dep_map.class_cache.offset;
    #NULL.offset, #NULL.base := 0, 0;
    #valid := #valid[0 := 0];
    ~LDV_IN_INTERRUPT := 1;
    ~ldv_state_variable_2 := 0;
    ~ldv_timer_state_1 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_0 := 0;
    ~dbglevel := 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#adapters_count_g.base, ~#adapters_count_g.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#adapters_count_g.base, 0, ~#adapters_count_g.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    ~ldv_retval_0 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_spin := 0;
    ~lsi_fops_group2.base, ~lsi_fops_group2.offset := 0, 0;
    ~lsi_fops_group1.offset, ~lsi_fops_group1.base := 0, 0;
    ~ldv_timer_list_1.base, ~ldv_timer_list_1.offset := 0, 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 148;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#mraid_mm_mutex.offset, ~#mraid_mm_mutex.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, 1, ~#mraid_mm_mutex.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, 3735899821, ~#mraid_mm_mutex.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, 4294967295, ~#mraid_mm_mutex.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#mraid_mm_mutex.offset + 16, 8, -1, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#mraid_mm_mutex.offset + 24, 8, 0, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 32;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 40;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 25;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet105.base, ULTIMATE.init_#t~nondet105.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet105.base, ~#mraid_mm_mutex.offset + 48, 8, ULTIMATE.init_#t~nondet105.offset, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 56;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 60;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[0], ~#mraid_mm_mutex.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[1], ~#mraid_mm_mutex.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[2], ~#mraid_mm_mutex.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[3], ~#mraid_mm_mutex.offset + 7;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[4], ~#mraid_mm_mutex.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[5], ~#mraid_mm_mutex.offset + 9;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[6], ~#mraid_mm_mutex.offset + 10;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[7], ~#mraid_mm_mutex.offset + 11;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[8], ~#mraid_mm_mutex.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[9], ~#mraid_mm_mutex.offset + 13;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[10], ~#mraid_mm_mutex.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[11], ~#mraid_mm_mutex.offset + 15;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[12], ~#mraid_mm_mutex.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[13], ~#mraid_mm_mutex.offset + 17;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[14], ~#mraid_mm_mutex.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[15], ~#mraid_mm_mutex.offset + 19;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[16], ~#mraid_mm_mutex.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[17], ~#mraid_mm_mutex.offset + 21;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[18], ~#mraid_mm_mutex.offset + 22;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[19], ~#mraid_mm_mutex.offset + 23;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[20], ~#mraid_mm_mutex.offset + 24;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[21], ~#mraid_mm_mutex.offset + 25;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[22], ~#mraid_mm_mutex.offset + 26;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.__padding[23], ~#mraid_mm_mutex.offset + 27;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union502.dep_map.key.base, ~#mraid_mm_mutex.offset + 28, 8, ULTIMATE.init_#t~union502.dep_map.key.offset, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union502.dep_map.class_cache.base[0], ~#mraid_mm_mutex.offset + 36, 8, ULTIMATE.init_#t~union502.dep_map.class_cache.offset[0], ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union502.dep_map.class_cache.base[1], ~#mraid_mm_mutex.offset + 44, 8, ULTIMATE.init_#t~union502.dep_map.class_cache.offset[1], ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union502.dep_map.name.base, ~#mraid_mm_mutex.offset + 52, 8, ULTIMATE.init_#t~union502.dep_map.name.offset, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.dep_map.cpu, ~#mraid_mm_mutex.offset + 60;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union502.dep_map.ip, ~#mraid_mm_mutex.offset + 64;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#mraid_mm_mutex.base, ~#mraid_mm_mutex.offset + 72, 8, ~#mraid_mm_mutex.offset + 72, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#mraid_mm_mutex.base, ~#mraid_mm_mutex.offset + 80, 8, ~#mraid_mm_mutex.offset + 72, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#mraid_mm_mutex.offset + 88, 8, 0, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#mraid_mm_mutex.base, ~#mraid_mm_mutex.offset + 96, 8, ~#mraid_mm_mutex.offset, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#mraid_mm_mutex.offset + 104, 8, 0, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 112;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 120;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet106.offset, ULTIMATE.init_#t~nondet106.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet106.base, ~#mraid_mm_mutex.offset + 128, 8, ULTIMATE.init_#t~nondet106.offset, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 136;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 140;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    havoc ULTIMATE.init_#t~nondet105.base, ULTIMATE.init_#t~nondet105.offset;
    havoc ULTIMATE.init_#t~union502.dep_map.key.offset, ULTIMATE.init_#t~union502.dep_map.cpu, ULTIMATE.init_#t~union502.__padding, ULTIMATE.init_#t~union502.dep_map.name.offset, ULTIMATE.init_#t~union502.dep_map.class_cache.offset, ULTIMATE.init_#t~union502.dep_map.name.base, ULTIMATE.init_#t~union502.dep_map.class_cache.base, ULTIMATE.init_#t~union502.dep_map.ip, ULTIMATE.init_#t~union502.dep_map.key.base;
    havoc ULTIMATE.init_#t~nondet106.offset, ULTIMATE.init_#t~nondet106.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#drvr_ver.offset, ~#drvr_ver.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#drvr_ver.base, 35652103, ~#drvr_ver.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 16;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#adapters_list_g.base, ~#adapters_list_g.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#adapters_list_g.offset, 8, 0, ~#adapters_list_g.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#adapters_list_g.offset + 8, 8, 0, ~#adapters_list_g.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 84;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#wait_q.offset, ~#wait_q.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#wait_q.base, ULTIMATE.init_#t~union503.raw_lock.val.counter, ~#wait_q.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#wait_q.base, ULTIMATE.init_#t~union503.magic, ~#wait_q.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#wait_q.base, ULTIMATE.init_#t~union503.owner_cpu, ~#wait_q.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union503.owner.base, ~#wait_q.offset + 12, 8, ULTIMATE.init_#t~union503.owner.offset, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union503.dep_map.key.base, ~#wait_q.offset + 20, 8, ULTIMATE.init_#t~union503.dep_map.key.offset, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union503.dep_map.class_cache.base[0], ~#wait_q.offset + 28, 8, ULTIMATE.init_#t~union503.dep_map.class_cache.offset[0], ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union503.dep_map.class_cache.base[1], ~#wait_q.offset + 36, 8, ULTIMATE.init_#t~union503.dep_map.class_cache.offset[1], ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union503.dep_map.name.base, ~#wait_q.offset + 44, 8, ULTIMATE.init_#t~union503.dep_map.name.offset, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#wait_q.base, ULTIMATE.init_#t~union503.dep_map.cpu, ~#wait_q.offset + 52;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#wait_q.base, ULTIMATE.init_#t~union503.dep_map.ip, ~#wait_q.offset + 56;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[0], ~#wait_q.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[1], ~#wait_q.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[2], ~#wait_q.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[3], ~#wait_q.offset + 3;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[4], ~#wait_q.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[5], ~#wait_q.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[6], ~#wait_q.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[7], ~#wait_q.offset + 7;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[8], ~#wait_q.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[9], ~#wait_q.offset + 9;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[10], ~#wait_q.offset + 10;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[11], ~#wait_q.offset + 11;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[12], ~#wait_q.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[13], ~#wait_q.offset + 13;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[14], ~#wait_q.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[15], ~#wait_q.offset + 15;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[16], ~#wait_q.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[17], ~#wait_q.offset + 17;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[18], ~#wait_q.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[19], ~#wait_q.offset + 19;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[20], ~#wait_q.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[21], ~#wait_q.offset + 21;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[22], ~#wait_q.offset + 22;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union504.__padding[23], ~#wait_q.offset + 23;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union504.dep_map.key.base, ~#wait_q.offset + 24, 8, ULTIMATE.init_#t~union504.dep_map.key.offset, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union504.dep_map.class_cache.base[0], ~#wait_q.offset + 32, 8, ULTIMATE.init_#t~union504.dep_map.class_cache.offset[0], ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union504.dep_map.class_cache.base[1], ~#wait_q.offset + 40, 8, ULTIMATE.init_#t~union504.dep_map.class_cache.offset[1], ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union504.dep_map.name.base, ~#wait_q.offset + 48, 8, ULTIMATE.init_#t~union504.dep_map.name.offset, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#wait_q.base, ULTIMATE.init_#t~union504.dep_map.cpu, ~#wait_q.offset + 56;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#wait_q.base, ULTIMATE.init_#t~union504.dep_map.ip, ~#wait_q.offset + 60;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#wait_q.offset + 68, 8, 0, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#wait_q.offset + 76, 8, 0, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    havoc ULTIMATE.init_#t~union503.dep_map.name.offset, ULTIMATE.init_#t~union503.dep_map.key.offset, ULTIMATE.init_#t~union503.owner.base, ULTIMATE.init_#t~union503.raw_lock.val.counter, ULTIMATE.init_#t~union503.dep_map.key.base, ULTIMATE.init_#t~union503.dep_map.class_cache.offset, ULTIMATE.init_#t~union503.magic, ULTIMATE.init_#t~union503.dep_map.ip, ULTIMATE.init_#t~union503.owner.offset, ULTIMATE.init_#t~union503.dep_map.class_cache.base, ULTIMATE.init_#t~union503.dep_map.cpu, ULTIMATE.init_#t~union503.owner_cpu, ULTIMATE.init_#t~union503.dep_map.name.base;
    havoc ULTIMATE.init_#t~union504.dep_map.cpu, ULTIMATE.init_#t~union504.dep_map.ip, ULTIMATE.init_#t~union504.dep_map.key.offset, ULTIMATE.init_#t~union504.dep_map.class_cache.base, ULTIMATE.init_#t~union504.dep_map.name.base, ULTIMATE.init_#t~union504.dep_map.name.offset, ULTIMATE.init_#t~union504.__padding, ULTIMATE.init_#t~union504.dep_map.key.base, ULTIMATE.init_#t~union504.dep_map.class_cache.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 224;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#lsi_fops.base, ~#lsi_fops.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#__this_module.base, ~#lsi_fops.offset, 8, ~#__this_module.offset, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~noop_llseek.base_1, ~#lsi_fops.offset + 8, 8, v_rep#funAddr~noop_llseek.offset_1, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 16, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 24, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 32, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 40, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 48, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 56, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~mraid_mm_unlocked_ioctl.base_1, ~#lsi_fops.offset + 64, 8, v_rep#funAddr~mraid_mm_unlocked_ioctl.offset_1, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~mraid_mm_compat_ioctl.base_1, ~#lsi_fops.offset + 72, 8, v_rep#funAddr~mraid_mm_compat_ioctl.offset_1, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 80, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 88, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~mraid_mm_open.base_1, ~#lsi_fops.offset + 96, 8, v_rep#funAddr~mraid_mm_open.offset_1, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 104, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 112, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 120, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 128, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 136, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 144, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 152, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 160, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 168, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 176, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 184, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 192, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 200, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 208, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 216, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 70;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#megaraid_mm_dev.base, ~#megaraid_mm_dev.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#megaraid_mm_dev.base, 255, ~#megaraid_mm_dev.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 9;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet107.base, ULTIMATE.init_#t~nondet107.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet107.base, ~#megaraid_mm_dev.offset + 4, 8, ULTIMATE.init_#t~nondet107.offset, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#lsi_fops.base, ~#megaraid_mm_dev.offset + 12, 8, ~#lsi_fops.offset, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#megaraid_mm_dev.offset + 20, 8, 0, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#megaraid_mm_dev.offset + 28, 8, 0, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#megaraid_mm_dev.offset + 36, 8, 0, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#megaraid_mm_dev.offset + 44, 8, 0, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#megaraid_mm_dev.offset + 52, 8, 0, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#megaraid_mm_dev.offset + 60, 8, 0, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#megaraid_mm_dev.base, 0, ~#megaraid_mm_dev.offset + 68;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    havoc ULTIMATE.init_#t~nondet107.base, ULTIMATE.init_#t~nondet107.offset;
    havoc main_#res;
    havoc main_#t~mem487, main_#t~nondet480, main_#t~mem488, main_#t~ret472.offset, main_#t~ret475.offset, main_~#ldvarg2~384.base, main_#t~mem485, main_#t~ret494, main_#t~switch481, main_#t~switch484, main_#t~ret490, main_~tmp___0~384, main_#t~ret493, main_#t~ret473.offset, main_~tmp___1~384, main_~ldvarg5~384, main_~#ldvarg3~384.base, main_#t~nondet483, main_#t~nondet470, main_~#ldvarg4~384.base, main_#t~switch479, main_#t~ret489, main_#t~ret474.offset, main_#t~ret486, main_~#ldvarg3~384.offset, main_~tmp~384, main_#t~ret482, main_~#ldvarg4~384.offset, main_#t~ret474.base, main_#t~ret475.base, main_#t~ret477.base, main_~#ldvarg0~384.base, main_~#ldvarg2~384.offset, main_~#ldvarg1~384.base, main_#t~ret472.base, main_~#ldvarg0~384.offset, main_#t~ret477.offset, main_#t~nondet478, main_#t~mem491, main_~#ldvarg1~384.offset, main_#t~ret473.base, main_#t~mem492, main_#t~nondet476;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg1~384.base, main_~#ldvarg1~384.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg4~384.base, main_~#ldvarg4~384.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg3~384.base, main_~#ldvarg3~384.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg0~384.base, main_~#ldvarg0~384.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc main_~ldvarg5~384;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg2~384.base, main_~#ldvarg2~384.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc main_~tmp~384;
    havoc main_~tmp___0~384;
    havoc main_~tmp___1~384;
    assume main_#t~nondet470 <= 2147483647 && 0 <= main_#t~nondet470 + 2147483648;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#adapters_count_g.base, main_#t~nondet470, ~#adapters_count_g.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    havoc main_#t~nondet470;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg1~384.offset, main_~#ldvarg1~384.base, 4;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_#t~memset13.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~15.offset, ldv_memset_~c, ldv_memset_#t~memset13.base, ldv_memset_~tmp~15.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base;
    assume (0 <= ldv_memset_~n && ldv_memset_~n <= 2147483647) && ldv_memset_~n < 4294967296;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr506;
    #Ultimate.C_memset_#t~loopctr506 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr506 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    ldv_memset_#t~memset13.offset, ldv_memset_#t~memset13.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset13.offset, ldv_memset_#t~memset13.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base;
    main_#t~ret472.offset, main_#t~ret472.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret472.offset, main_#t~ret472.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg4~384.offset, main_~#ldvarg4~384.base, 8;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_#t~memset13.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~15.offset, ldv_memset_~c, ldv_memset_#t~memset13.base, ldv_memset_~tmp~15.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base;
    assume (4294967296 <= ldv_memset_~n && ldv_memset_~n < 4294967296 + 4294967296) && !(ldv_memset_~n <= 6442450943);
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n - 4294967296 - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr506;
    #Ultimate.C_memset_#t~loopctr506 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr506 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset13.offset, ldv_memset_#t~memset13.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset13.offset, ldv_memset_#t~memset13.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base;
    main_#t~ret473.offset, main_#t~ret473.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret473.offset, main_#t~ret473.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg3~384.offset, main_~#ldvarg3~384.base, 8;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_#t~memset13.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~15.offset, ldv_memset_~c, ldv_memset_#t~memset13.base, ldv_memset_~tmp~15.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base;
    assume ldv_memset_~n < -4294967296 && !(ldv_memset_~n % 4294967296 <= 2147483647);
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n % 4294967296 - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr506;
    #Ultimate.C_memset_#t~loopctr506 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr506 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    ldv_memset_#t~memset13.offset, ldv_memset_#t~memset13.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset13.offset, ldv_memset_#t~memset13.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base;
    main_#t~ret474.base, main_#t~ret474.offset := ldv_memset_#res.base, ldv_memset_#res.offset;
    havoc main_#t~ret474.base, main_#t~ret474.offset;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg0~384.offset, main_~#ldvarg0~384.base, 8;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_#t~memset13.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~15.offset, ldv_memset_~c, ldv_memset_#t~memset13.base, ldv_memset_~tmp~15.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base;
    assume (ldv_memset_~n < 4294967296 && 0 <= ldv_memset_~n) && !(ldv_memset_~n <= 2147483647);
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr506;
    #Ultimate.C_memset_#t~loopctr506 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr506 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset13.offset, ldv_memset_#t~memset13.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset13.offset, ldv_memset_#t~memset13.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base;
    main_#t~ret475.base, main_#t~ret475.offset := ldv_memset_#res.base, ldv_memset_#res.offset;
    havoc main_#t~ret475.base, main_#t~ret475.offset;
    assume main_#t~nondet476 <= 2147483647 && 0 <= main_#t~nondet476 + 2147483648;
    main_~ldvarg5~384 := main_#t~nondet476;
    havoc main_#t~nondet476;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg2~384.offset, main_~#ldvarg2~384.base, 4;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_#t~memset13.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~15.offset, ldv_memset_~c, ldv_memset_#t~memset13.base, ldv_memset_~tmp~15.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base;
    assume ldv_memset_~n % 4294967296 <= 2147483647 && ldv_memset_~n < -4294967296;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n % 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr506;
    #Ultimate.C_memset_#t~loopctr506 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr506 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    ldv_memset_#t~memset13.offset, ldv_memset_#t~memset13.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset13.offset, ldv_memset_#t~memset13.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~15.offset, ldv_memset_~tmp~15.base;
    main_#t~ret477.base, main_#t~ret477.offset := ldv_memset_#res.base, ldv_memset_#res.offset;
    havoc main_#t~ret477.base, main_#t~ret477.offset;
    ~ldv_state_variable_1 := 1;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_2 := 0;
    goto loc1;
  loc1:
    assume 0 <= main_#t~nondet478 + 2147483648 && main_#t~nondet478 <= 2147483647;
    main_~tmp~384 := main_#t~nondet478;
    havoc main_#t~nondet478;
    assume !(main_~tmp~384 == 0);
    main_#t~switch479 := false;
    assume !main_#t~switch479;
    goto loc2;
  loc2:
    goto loc2_0, loc2_1;
  loc2_0:
    assume !main_#t~switch479 && !(main_~tmp~384 == 1);
    main_#t~switch479 := false;
    goto loc3;
  loc2_1:
    assume main_~tmp~384 == 1;
    main_#t~switch479 := true;
    goto loc3;
  loc3:
    goto loc3_0, loc3_1;
  loc3_0:
    assume main_#t~switch479;
    assume !(~ldv_state_variable_0 == 0);
    assume 0 <= main_#t~nondet480 + 2147483648 && main_#t~nondet480 <= 2147483647;
    main_~tmp___0~384 := main_#t~nondet480;
    havoc main_#t~nondet480;
    assume !(main_~tmp___0~384 == 0);
    main_#t~switch481 := false;
    assume !main_#t~switch481;
    assume main_~tmp___0~384 == 1;
    main_#t~switch481 := true;
    assume main_#t~switch481;
    assume ~ldv_state_variable_0 == 1;
    havoc mraid_mm_init_#res;
    havoc mraid_mm_init_~#__key~356.offset, mraid_mm_init_#t~nondet454.offset, mraid_mm_init_#t~nondet457.base, mraid_mm_init_#t~nondet454.base, mraid_mm_init_#t~ret455, mraid_mm_init_~err~356, mraid_mm_init_#t~nondet459.base, mraid_mm_init_#t~nondet459.offset, mraid_mm_init_#t~ret456, mraid_mm_init_#t~ret458, mraid_mm_init_#t~nondet457.offset, mraid_mm_init_~#__key~356.base;
    havoc mraid_mm_init_~err~356;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_init_~#__key~356.offset, mraid_mm_init_~#__key~356.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume 0 <= ~dbglevel;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 26;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_init_#t~nondet454.offset, mraid_mm_init_#t~nondet454.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    printk_#in~0.offset, printk_#in~0.base := mraid_mm_init_#t~nondet454.offset, mraid_mm_init_#t~nondet454.base;
    havoc printk_#res;
    mraid_mm_init_#t~ret455 := printk_#res;
    assume 0 <= mraid_mm_init_#t~ret455 + 2147483648 && mraid_mm_init_#t~ret455 <= 2147483647;
    havoc mraid_mm_init_#t~nondet454.offset, mraid_mm_init_#t~nondet454.base;
    havoc mraid_mm_init_#t~ret455;
    ldv_misc_register_28_#in~misc.base, ldv_misc_register_28_#in~misc.offset := ~#megaraid_mm_dev.base, ~#megaraid_mm_dev.offset;
    havoc ldv_misc_register_28_#res;
    havoc ldv_misc_register_28_#t~ret500, ldv_misc_register_28_~tmp~427, ldv_misc_register_28_~ldv_func_res~427, ldv_misc_register_28_~misc.offset, ldv_misc_register_28_~misc.base;
    ldv_misc_register_28_~misc.offset, ldv_misc_register_28_~misc.base := ldv_misc_register_28_#in~misc.offset, ldv_misc_register_28_#in~misc.base;
    havoc ldv_misc_register_28_~ldv_func_res~427;
    havoc ldv_misc_register_28_~tmp~427;
    misc_register_#in~103.base, misc_register_#in~103.offset := ldv_misc_register_28_~misc.base, ldv_misc_register_28_~misc.offset;
    havoc misc_register_#res;
    ldv_misc_register_28_#t~ret500 := misc_register_#res;
    assume ldv_misc_register_28_#t~ret500 <= 2147483647 && 0 <= ldv_misc_register_28_#t~ret500 + 2147483648;
    ldv_misc_register_28_~tmp~427 := ldv_misc_register_28_#t~ret500;
    havoc ldv_misc_register_28_#t~ret500;
    ldv_misc_register_28_~ldv_func_res~427 := ldv_misc_register_28_~tmp~427;
    ~ldv_state_variable_2 := 1;
    havoc ldv_file_operations_2_#t~ret464.offset, ldv_file_operations_2_~tmp___0~375.offset, ldv_file_operations_2_~tmp~375.offset, ldv_file_operations_2_#t~ret465.offset, ldv_file_operations_2_#t~ret464.base, ldv_file_operations_2_~tmp~375.base, ldv_file_operations_2_~tmp___0~375.base, ldv_file_operations_2_#t~ret465.base;
    havoc ldv_file_operations_2_~tmp~375.offset, ldv_file_operations_2_~tmp~375.base;
    havoc ldv_file_operations_2_~tmp___0~375.offset, ldv_file_operations_2_~tmp___0~375.base;
    ldv_init_zalloc_#in~size := 1000;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~size, ldv_init_zalloc_~p~13.offset, ldv_init_zalloc_~tmp~13.offset, ldv_init_zalloc_#t~malloc12.offset, ldv_init_zalloc_~p~13.base, ldv_init_zalloc_~tmp~13.base, ldv_init_zalloc_#t~malloc12.base;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~13.offset, ldv_init_zalloc_~p~13.base;
    havoc ldv_init_zalloc_~tmp~13.offset, ldv_init_zalloc_~tmp~13.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (0 <= ldv_init_zalloc_~size && ldv_init_zalloc_~size < 4294967296) && !(ldv_init_zalloc_~size <= 2147483647);
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc12.offset, ldv_init_zalloc_#t~malloc12.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (!(ldv_init_zalloc_~size <= 2147483647) && ldv_init_zalloc_~size < 4294967296) && 0 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296), ldv_init_zalloc_#t~malloc12.base, 1, ldv_init_zalloc_~size - 4294967296, ldv_init_zalloc_#t~malloc12.offset;
    havoc #Ultimate.meminit_#t~loopctr507;
    #Ultimate.meminit_#t~loopctr507 := 0;
    assume !(#Ultimate.meminit_#t~loopctr507 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~13.offset, ldv_init_zalloc_~tmp~13.base := ldv_init_zalloc_#t~malloc12.offset, ldv_init_zalloc_#t~malloc12.base;
    ldv_init_zalloc_~p~13.offset, ldv_init_zalloc_~p~13.base := ldv_init_zalloc_~tmp~13.offset, ldv_init_zalloc_~tmp~13.base;
    assume (ldv_init_zalloc_~p~13.offset + ldv_init_zalloc_~p~13.base < 0 && -18446744073709551616 <= ldv_init_zalloc_~p~13.offset + ldv_init_zalloc_~p~13.base) && !(ldv_init_zalloc_~p~13.offset + ldv_init_zalloc_~p~13.base + 18446744073709551616 == 0);
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~13.base, ldv_init_zalloc_~p~13.offset;
    ldv_file_operations_2_#t~ret464.offset, ldv_file_operations_2_#t~ret464.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    ldv_file_operations_2_~tmp~375.offset, ldv_file_operations_2_~tmp~375.base := ldv_file_operations_2_#t~ret464.offset, ldv_file_operations_2_#t~ret464.base;
    havoc ldv_file_operations_2_#t~ret464.offset, ldv_file_operations_2_#t~ret464.base;
    ~lsi_fops_group1.offset, ~lsi_fops_group1.base := ldv_file_operations_2_~tmp~375.offset, ldv_file_operations_2_~tmp~375.base;
    ldv_init_zalloc_#in~size := 504;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~size, ldv_init_zalloc_~p~13.offset, ldv_init_zalloc_~tmp~13.offset, ldv_init_zalloc_#t~malloc12.offset, ldv_init_zalloc_~p~13.base, ldv_init_zalloc_~tmp~13.base, ldv_init_zalloc_#t~malloc12.base;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~13.offset, ldv_init_zalloc_~p~13.base;
    havoc ldv_init_zalloc_~tmp~13.offset, ldv_init_zalloc_~tmp~13.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume !(ldv_init_zalloc_~size % 4294967296 <= 2147483647) && ldv_init_zalloc_~size < -4294967296;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size % 4294967296 - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc12.offset, ldv_init_zalloc_#t~malloc12.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume !(ldv_init_zalloc_~size % 4294967296 <= 2147483647) && 4294967296 + 4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size % 4294967296 - 4294967296), ldv_init_zalloc_#t~malloc12.base, 1, ldv_init_zalloc_~size % 4294967296 - 4294967296, ldv_init_zalloc_#t~malloc12.offset;
    havoc #Ultimate.meminit_#t~loopctr507;
    #Ultimate.meminit_#t~loopctr507 := 0;
    assume !(#Ultimate.meminit_#t~loopctr507 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~13.offset, ldv_init_zalloc_~tmp~13.base := ldv_init_zalloc_#t~malloc12.offset, ldv_init_zalloc_#t~malloc12.base;
    ldv_init_zalloc_~p~13.offset, ldv_init_zalloc_~p~13.base := ldv_init_zalloc_~tmp~13.offset, ldv_init_zalloc_~tmp~13.base;
    assume (ldv_init_zalloc_~p~13.base + ldv_init_zalloc_~p~13.offset < 18446744073709551616 && 0 <= ldv_init_zalloc_~p~13.base + ldv_init_zalloc_~p~13.offset) && !(ldv_init_zalloc_~p~13.base + ldv_init_zalloc_~p~13.offset == 0);
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~13.base, ldv_init_zalloc_~p~13.offset;
    ldv_file_operations_2_#t~ret465.offset, ldv_file_operations_2_#t~ret465.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    ldv_file_operations_2_~tmp___0~375.offset, ldv_file_operations_2_~tmp___0~375.base := ldv_file_operations_2_#t~ret465.offset, ldv_file_operations_2_#t~ret465.base;
    havoc ldv_file_operations_2_#t~ret465.offset, ldv_file_operations_2_#t~ret465.base;
    ~lsi_fops_group2.base, ~lsi_fops_group2.offset := ldv_file_operations_2_~tmp___0~375.base, ldv_file_operations_2_~tmp___0~375.offset;
    ldv_misc_register_28_#res := ldv_misc_register_28_~ldv_func_res~427;
    mraid_mm_init_#t~ret456 := ldv_misc_register_28_#res;
    assume 0 <= mraid_mm_init_#t~ret456 + 2147483648 && mraid_mm_init_#t~ret456 <= 2147483647;
    mraid_mm_init_~err~356 := mraid_mm_init_#t~ret456;
    havoc mraid_mm_init_#t~ret456;
    assume !(mraid_mm_init_~err~356 < 0);
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_init_#t~nondet459.base, mraid_mm_init_#t~nondet459.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    __init_waitqueue_head_#in~44.offset, __init_waitqueue_head_#in~44.base, __init_waitqueue_head_#in~43.base, __init_waitqueue_head_#in~42.offset, __init_waitqueue_head_#in~42.base, __init_waitqueue_head_#in~43.offset := mraid_mm_init_~#__key~356.offset, mraid_mm_init_~#__key~356.base, mraid_mm_init_#t~nondet459.base, ~#wait_q.offset, ~#wait_q.base, mraid_mm_init_#t~nondet459.offset;
    havoc mraid_mm_init_#t~nondet459.base, mraid_mm_init_#t~nondet459.offset;
    INIT_LIST_HEAD_#in~list.base, INIT_LIST_HEAD_#in~list.offset := ~#adapters_list_g.base, ~#adapters_list_g.offset;
    havoc INIT_LIST_HEAD_~list.base, INIT_LIST_HEAD_~list.offset;
    INIT_LIST_HEAD_~list.base, INIT_LIST_HEAD_~list.offset := INIT_LIST_HEAD_#in~list.base, INIT_LIST_HEAD_#in~list.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := INIT_LIST_HEAD_~list.base, INIT_LIST_HEAD_~list.offset, 8, INIT_LIST_HEAD_~list.offset, INIT_LIST_HEAD_~list.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := INIT_LIST_HEAD_~list.base, INIT_LIST_HEAD_~list.offset + 8, 8, INIT_LIST_HEAD_~list.offset, INIT_LIST_HEAD_~list.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    mraid_mm_init_#res := 0;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := mraid_mm_init_~#__key~356.base, mraid_mm_init_~#__key~356.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc mraid_mm_init_~#__key~356.offset, mraid_mm_init_~#__key~356.base;
    main_#t~ret482 := mraid_mm_init_#res;
    assume main_#t~ret482 <= 2147483647 && 0 <= main_#t~ret482 + 2147483648;
    ~ldv_retval_0 := main_#t~ret482;
    havoc main_#t~ret482;
    assume ~ldv_retval_0 == 0;
    ~ldv_state_variable_0 := 3;
    assume ~ldv_retval_0 == 0;
    goto loc1;
  loc3_1:
    assume !main_#t~switch479;
    assume main_~tmp~384 == 2;
    main_#t~switch479 := true;
    assume main_#t~switch479;
    assume !(~ldv_state_variable_2 == 0);
    assume main_#t~nondet483 <= 2147483647 && 0 <= main_#t~nondet483 + 2147483648;
    main_~tmp___1~384 := main_#t~nondet483;
    havoc main_#t~nondet483;
    assume !(main_~tmp___1~384 == 0);
    main_#t~switch484 := false;
    assume !main_#t~switch484;
    assume !main_#t~switch484 && !(main_~tmp___1~384 == 1);
    main_#t~switch484 := false;
    assume !main_#t~switch484;
    goto loc4;
  loc4:
    goto loc4_0, loc4_1;
  loc4_0:
    assume main_~tmp___1~384 == 2;
    main_#t~switch484 := true;
    goto loc5;
  loc4_1:
    assume !main_#t~switch484 && !(main_~tmp___1~384 == 2);
    main_#t~switch484 := false;
    goto loc5;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume !main_#t~switch484;
    assume main_~tmp___1~384 == 3;
    main_#t~switch484 := true;
    assume main_#t~switch484;
    assume ~ldv_state_variable_2 == 2;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~#ldvarg1~384.base, main_~#ldvarg1~384.offset, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    main_#t~mem491 := read~int_#value;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := main_~#ldvarg0~384.base, main_~#ldvarg0~384.offset, 8;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    main_#t~mem492 := read~int_#value;
    mraid_mm_unlocked_ioctl_#in~filep.offset, mraid_mm_unlocked_ioctl_#in~cmd, mraid_mm_unlocked_ioctl_#in~arg, mraid_mm_unlocked_ioctl_#in~filep.base := ~lsi_fops_group2.offset, main_#t~mem491, main_#t~mem492, ~lsi_fops_group2.base;
    havoc mraid_mm_unlocked_ioctl_#res;
    havoc mraid_mm_unlocked_ioctl_~cmd, mraid_mm_unlocked_ioctl_#t~ret142, mraid_mm_unlocked_ioctl_~filep.base, mraid_mm_unlocked_ioctl_~arg, mraid_mm_unlocked_ioctl_~filep.offset, mraid_mm_unlocked_ioctl_~err~144;
    mraid_mm_unlocked_ioctl_~filep.base, mraid_mm_unlocked_ioctl_~filep.offset := mraid_mm_unlocked_ioctl_#in~filep.base, mraid_mm_unlocked_ioctl_#in~filep.offset;
    mraid_mm_unlocked_ioctl_~cmd := mraid_mm_unlocked_ioctl_#in~cmd;
    mraid_mm_unlocked_ioctl_~arg := mraid_mm_unlocked_ioctl_#in~arg;
    havoc mraid_mm_unlocked_ioctl_~err~144;
    mutex_lock_nested_#in~54.offset, mutex_lock_nested_#in~55, mutex_lock_nested_#in~54.base := ~#mraid_mm_mutex.offset, 0, ~#mraid_mm_mutex.base;
    mraid_mm_ioctl_#in~filep.base, mraid_mm_ioctl_#in~arg, mraid_mm_ioctl_#in~filep.offset, mraid_mm_ioctl_#in~cmd := mraid_mm_unlocked_ioctl_~filep.base, mraid_mm_unlocked_ioctl_~arg, mraid_mm_unlocked_ioctl_~filep.offset, mraid_mm_unlocked_ioctl_~cmd;
    havoc mraid_mm_ioctl_#res;
    havoc mraid_mm_ioctl_~adp~114.offset, mraid_mm_ioctl_#t~nondet126.base, mraid_mm_ioctl_~tmp~114, mraid_mm_ioctl_~filep.offset, mraid_mm_ioctl_#t~ret128.base, mraid_mm_ioctl_~tmp___0~114, mraid_mm_ioctl_#t~ret116, mraid_mm_ioctl_#t~ret123.offset, mraid_mm_ioctl_#t~ret139, mraid_mm_ioctl_~old_ioctl~114, mraid_mm_ioctl_#t~nondet112.offset, mraid_mm_ioctl_#t~ret123.base, mraid_mm_ioctl_#t~mem131, mraid_mm_ioctl_~kioc~114.offset, mraid_mm_ioctl_~adp~114.base, mraid_mm_ioctl_#t~mem137, mraid_mm_ioctl_#t~mem119, mraid_mm_ioctl_~argp~114.offset, mraid_mm_ioctl_#t~ret128.offset, mraid_mm_ioctl_#t~ret129, mraid_mm_ioctl_#t~ret127, mraid_mm_ioctl_~#drvrcmd_rval~114.offset, mraid_mm_ioctl_#t~mem121, mraid_mm_ioctl_~#drvrcmd_rval~114.base, mraid_mm_ioctl_#t~mem125, mraid_mm_ioctl_~kioc~114.base, mraid_mm_ioctl_~argp~114.base, mraid_mm_ioctl_#t~nondet126.offset, mraid_mm_ioctl_#t~nondet112.base, mraid_mm_ioctl_#t~nondet114.base, mraid_mm_ioctl_#t~ret134, mraid_mm_ioctl_#t~mem132, mraid_mm_ioctl_#t~nondet114.offset, mraid_mm_ioctl_#t~ret115, mraid_mm_ioctl_~#signature~114.offset, mraid_mm_ioctl_#t~ret113, mraid_mm_ioctl_#t~mem136, mraid_mm_ioctl_#t~ret111, mraid_mm_ioctl_#t~mem138, mraid_mm_ioctl_#t~mem118, mraid_mm_ioctl_~#rval~114.offset, mraid_mm_ioctl_~tmp___1~114, mraid_mm_ioctl_~arg, mraid_mm_ioctl_~filep.base, mraid_mm_ioctl_~#rval~114.base, mraid_mm_ioctl_#t~mem141, mraid_mm_ioctl_#t~mem120, mraid_mm_ioctl_~#signature~114.base, mraid_mm_ioctl_#t~mem124, mraid_mm_ioctl_~cmd;
    mraid_mm_ioctl_~filep.base, mraid_mm_ioctl_~filep.offset := mraid_mm_ioctl_#in~filep.base, mraid_mm_ioctl_#in~filep.offset;
    mraid_mm_ioctl_~cmd := mraid_mm_ioctl_#in~cmd;
    mraid_mm_ioctl_~arg := mraid_mm_ioctl_#in~arg;
    havoc mraid_mm_ioctl_~kioc~114.offset, mraid_mm_ioctl_~kioc~114.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 16;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_ioctl_~#signature~114.base, mraid_mm_ioctl_~#signature~114.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc mraid_mm_ioctl_~tmp~114;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_ioctl_~#rval~114.base, mraid_mm_ioctl_~#rval~114.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc mraid_mm_ioctl_~adp~114.offset, mraid_mm_ioctl_~adp~114.base;
    havoc mraid_mm_ioctl_~old_ioctl~114;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_ioctl_~#drvrcmd_rval~114.base, mraid_mm_ioctl_~#drvrcmd_rval~114.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc mraid_mm_ioctl_~argp~114.offset, mraid_mm_ioctl_~argp~114.base;
    havoc mraid_mm_ioctl_~tmp___0~114;
    havoc mraid_mm_ioctl_~tmp___1~114;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, mraid_mm_ioctl_~#signature~114.base, 0, mraid_mm_ioctl_~#signature~114.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    mraid_mm_ioctl_~tmp~114 := 1;
    assume 4294967312 <= mraid_mm_ioctl_~tmp~114 && mraid_mm_ioctl_~tmp~114 < 4294967296 + 4294967296;
    assume (!(mraid_mm_ioctl_~arg + 9223372036854775809 <= 0) && mraid_mm_ioctl_~arg < 0) && -18446744073709551616 <= mraid_mm_ioctl_~arg;
    mraid_mm_ioctl_~argp~114.offset, mraid_mm_ioctl_~argp~114.base := mraid_mm_ioctl_~arg + 18446744073709551616 - 18446744073709551616, 0;
    copy_from_user_#in~from.offset, copy_from_user_#in~to.offset, copy_from_user_#in~from.base, copy_from_user_#in~to.base, copy_from_user_#in~n := mraid_mm_ioctl_~argp~114.offset, mraid_mm_ioctl_~#signature~114.offset, mraid_mm_ioctl_~argp~114.base, mraid_mm_ioctl_~#signature~114.base, 16;
    havoc copy_from_user_#res;
    havoc copy_from_user_~from.offset, copy_from_user_#t~ret90, copy_from_user_~to.base, copy_from_user_~from.base, copy_from_user_#t~nondet88.base, copy_from_user_~to.offset, copy_from_user_~n, copy_from_user_#t~ret89, copy_from_user_~sz~73, copy_from_user_~tmp~73, copy_from_user_#t~nondet88.offset, copy_from_user_~tmp___0~73;
    copy_from_user_~to.base, copy_from_user_~to.offset := copy_from_user_#in~to.base, copy_from_user_#in~to.offset;
    copy_from_user_~from.offset, copy_from_user_~from.base := copy_from_user_#in~from.offset, copy_from_user_#in~from.base;
    copy_from_user_~n := copy_from_user_#in~n;
    havoc copy_from_user_~sz~73;
    havoc copy_from_user_~tmp~73;
    havoc copy_from_user_~tmp___0~73;
    copy_from_user_~tmp~73 := 0;
    assume copy_from_user_~tmp~73 < -4294967296 && copy_from_user_~tmp~73 % 4294967296 <= 2147483647;
    copy_from_user_~sz~73 := copy_from_user_~tmp~73 % 4294967296;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 33;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    copy_from_user_#t~nondet88.base, copy_from_user_#t~nondet88.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    __might_fault_#in~5, __might_fault_#in~4.base, __might_fault_#in~4.offset := 697, copy_from_user_#t~nondet88.base, copy_from_user_#t~nondet88.offset;
    havoc copy_from_user_#t~nondet88.base, copy_from_user_#t~nondet88.offset;
    assume ((copy_from_user_~n < 0 && copy_from_user_~sz~73 < 18446744073709551616) && copy_from_user_~sz~73 < 0) && -18446744073709551616 <= copy_from_user_~n;
    ldv__builtin_expect_#in~c, ldv__builtin_expect_#in~exp := 1, 1;
    havoc ldv__builtin_expect_#res;
    havoc ldv__builtin_expect_~c, ldv__builtin_expect_~exp;
    ldv__builtin_expect_~exp := ldv__builtin_expect_#in~exp;
    ldv__builtin_expect_~c := ldv__builtin_expect_#in~c;
    ldv__builtin_expect_#res := ldv__builtin_expect_~exp;
    copy_from_user_#t~ret89 := ldv__builtin_expect_#res;
    assume copy_from_user_#t~ret89 <= 9223372036854775807 && 0 <= copy_from_user_#t~ret89 + 9223372036854775808;
    copy_from_user_~tmp___0~73 := copy_from_user_#t~ret89;
    havoc copy_from_user_#t~ret89;
    assume copy_from_user_~tmp___0~73 == 0;
    copy_from_user_#res := copy_from_user_~n;
    mraid_mm_ioctl_#t~ret111 := copy_from_user_#res;
    mraid_mm_ioctl_~tmp___0~114 := mraid_mm_ioctl_#t~ret111;
    havoc mraid_mm_ioctl_#t~ret111;
    assume mraid_mm_ioctl_~tmp___0~114 + 18446744073709551616 == 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 17;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_ioctl_#t~nondet114.offset, mraid_mm_ioctl_#t~nondet114.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    memcmp_#in~32, memcmp_#in~30.offset, memcmp_#in~30.base, memcmp_#in~31.base, memcmp_#in~31.offset := 16, mraid_mm_ioctl_~#signature~114.offset, mraid_mm_ioctl_~#signature~114.base, mraid_mm_ioctl_#t~nondet114.base, mraid_mm_ioctl_#t~nondet114.offset;
    havoc memcmp_#res;
    mraid_mm_ioctl_#t~ret115 := memcmp_#res;
    assume mraid_mm_ioctl_#t~ret115 <= 2147483647 && 0 <= mraid_mm_ioctl_#t~ret115 + 2147483648;
    mraid_mm_ioctl_~tmp___1~114 := mraid_mm_ioctl_#t~ret115;
    havoc mraid_mm_ioctl_#t~nondet114.offset, mraid_mm_ioctl_#t~nondet114.base;
    havoc mraid_mm_ioctl_#t~ret115;
    assume mraid_mm_ioctl_~tmp___1~114 == 0;
    mraid_mm_ioctl_~old_ioctl~114 := 0;
    assume 256 + 256 <= mraid_mm_ioctl_~old_ioctl~114 && !(mraid_mm_ioctl_~old_ioctl~114 % 256 == 0);
    assume 0 <= mraid_mm_ioctl_~old_ioctl~114 && mraid_mm_ioctl_~old_ioctl~114 < 256;
    handle_drvrcmd_#in~rval.offset, handle_drvrcmd_#in~rval.base, handle_drvrcmd_#in~old_ioctl, handle_drvrcmd_#in~arg.base, handle_drvrcmd_#in~arg.offset := mraid_mm_ioctl_~#drvrcmd_rval~114.offset, mraid_mm_ioctl_~#drvrcmd_rval~114.base, mraid_mm_ioctl_~old_ioctl~114, mraid_mm_ioctl_~argp~114.base, mraid_mm_ioctl_~argp~114.offset;
    havoc handle_drvrcmd_#res;
    havoc handle_drvrcmd_#t~switch155, handle_drvrcmd_#t~mem159, handle_drvrcmd_#t~mem160.base, handle_drvrcmd_#t~mem154, handle_drvrcmd_#t~mem153, handle_drvrcmd_~arg.base, handle_drvrcmd_~rval.offset, handle_drvrcmd_#t~ret161, handle_drvrcmd_~umimd~158.base, handle_drvrcmd_~#kmimd~158.offset, handle_drvrcmd_~tmp~158, handle_drvrcmd_~tmp___1~158, handle_drvrcmd_#t~mem160.offset, handle_drvrcmd_~rval.base, handle_drvrcmd_#t~mem156.base, handle_drvrcmd_~#kmimd~158.base, handle_drvrcmd_#t~ret157, handle_drvrcmd_~subopcode~158, handle_drvrcmd_#t~ret152, handle_drvrcmd_#t~mem156.offset, handle_drvrcmd_~old_ioctl, handle_drvrcmd_~opcode~158, handle_drvrcmd_~tmp___0~158, handle_drvrcmd_~umimd~158.offset, handle_drvrcmd_~arg.offset;
    handle_drvrcmd_~arg.base, handle_drvrcmd_~arg.offset := handle_drvrcmd_#in~arg.base, handle_drvrcmd_#in~arg.offset;
    handle_drvrcmd_~old_ioctl := handle_drvrcmd_#in~old_ioctl;
    handle_drvrcmd_~rval.offset, handle_drvrcmd_~rval.base := handle_drvrcmd_#in~rval.offset, handle_drvrcmd_#in~rval.base;
    havoc handle_drvrcmd_~umimd~158.offset, handle_drvrcmd_~umimd~158.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 113;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    handle_drvrcmd_~#kmimd~158.base, handle_drvrcmd_~#kmimd~158.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc handle_drvrcmd_~opcode~158;
    havoc handle_drvrcmd_~subopcode~158;
    havoc handle_drvrcmd_~tmp~158;
    havoc handle_drvrcmd_~tmp___0~158;
    havoc handle_drvrcmd_~tmp___1~158;
    assume handle_drvrcmd_~old_ioctl + 256 == 0;
    handle_drvrcmd_#res := -524;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := handle_drvrcmd_~#kmimd~158.base, handle_drvrcmd_~#kmimd~158.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc handle_drvrcmd_~#kmimd~158.base, handle_drvrcmd_~#kmimd~158.offset;
    mraid_mm_ioctl_#t~ret116 := handle_drvrcmd_#res;
    assume 0 <= mraid_mm_ioctl_#t~ret116 + 2147483648 && mraid_mm_ioctl_#t~ret116 <= 2147483647;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mraid_mm_ioctl_~#rval~114.base, mraid_mm_ioctl_#t~ret116, mraid_mm_ioctl_~#rval~114.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    havoc mraid_mm_ioctl_#t~ret116;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mraid_mm_ioctl_~#rval~114.base, mraid_mm_ioctl_~#rval~114.offset, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mraid_mm_ioctl_#t~mem118 := read~int_#value;
    assume !(mraid_mm_ioctl_#t~mem118 < 0);
    havoc mraid_mm_ioctl_#t~mem118;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mraid_mm_ioctl_~#rval~114.base, mraid_mm_ioctl_~#rval~114.offset, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mraid_mm_ioctl_#t~mem120 := read~int_#value;
    assume !(mraid_mm_ioctl_#t~mem120 == 0);
    havoc mraid_mm_ioctl_#t~mem120;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mraid_mm_ioctl_~#rval~114.base, 0, mraid_mm_ioctl_~#rval~114.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    mraid_mm_get_adapter_#in~rval.base, mraid_mm_get_adapter_#in~rval.offset, mraid_mm_get_adapter_#in~umimd.offset, mraid_mm_get_adapter_#in~umimd.base := mraid_mm_ioctl_~#rval~114.base, mraid_mm_ioctl_~#rval~114.offset, mraid_mm_ioctl_~argp~114.offset, mraid_mm_ioctl_~argp~114.base;
    havoc mraid_mm_get_adapter_#res.offset, mraid_mm_get_adapter_#res.base;
    havoc mraid_mm_get_adapter_#t~mem145, mraid_mm_get_adapter_#t~mem149.offset, mraid_mm_get_adapter_#t~mem146, mraid_mm_get_adapter_#t~mem148.base, mraid_mm_get_adapter_~tmp___0~146, mraid_mm_get_adapter_#t~mem149.base, mraid_mm_get_adapter_~#mimd~146.offset, mraid_mm_get_adapter_~adapno~146, mraid_mm_get_adapter_~tmp~146, mraid_mm_get_adapter_~adapter~146.offset, mraid_mm_get_adapter_~adapter~146.base, mraid_mm_get_adapter_~__mptr~146.base, mraid_mm_get_adapter_~umimd.offset, mraid_mm_get_adapter_~__mptr___0~146.base, mraid_mm_get_adapter_~rval.offset, mraid_mm_get_adapter_~__mptr~146.offset, mraid_mm_get_adapter_~#mimd~146.base, mraid_mm_get_adapter_~__mptr___0~146.offset, mraid_mm_get_adapter_~umimd.base, mraid_mm_get_adapter_~rval.base, mraid_mm_get_adapter_#t~mem148.offset, mraid_mm_get_adapter_#t~ret143, mraid_mm_get_adapter_~iterator~146;
    mraid_mm_get_adapter_~umimd.base, mraid_mm_get_adapter_~umimd.offset := mraid_mm_get_adapter_#in~umimd.base, mraid_mm_get_adapter_#in~umimd.offset;
    mraid_mm_get_adapter_~rval.base, mraid_mm_get_adapter_~rval.offset := mraid_mm_get_adapter_#in~rval.base, mraid_mm_get_adapter_#in~rval.offset;
    havoc mraid_mm_get_adapter_~adapter~146.offset, mraid_mm_get_adapter_~adapter~146.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 113;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_get_adapter_~#mimd~146.offset, mraid_mm_get_adapter_~#mimd~146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc mraid_mm_get_adapter_~adapno~146;
    havoc mraid_mm_get_adapter_~iterator~146;
    havoc mraid_mm_get_adapter_~tmp~146;
    havoc mraid_mm_get_adapter_~__mptr~146.base, mraid_mm_get_adapter_~__mptr~146.offset;
    havoc mraid_mm_get_adapter_~tmp___0~146;
    havoc mraid_mm_get_adapter_~__mptr___0~146.base, mraid_mm_get_adapter_~__mptr___0~146.offset;
    copy_from_user_#in~from.offset, copy_from_user_#in~to.offset, copy_from_user_#in~from.base, copy_from_user_#in~to.base, copy_from_user_#in~n := mraid_mm_get_adapter_~umimd.offset, mraid_mm_get_adapter_~#mimd~146.offset, mraid_mm_get_adapter_~umimd.base, mraid_mm_get_adapter_~#mimd~146.base, 110;
    havoc copy_from_user_#res;
    havoc copy_from_user_~from.offset, copy_from_user_#t~ret90, copy_from_user_~to.base, copy_from_user_~from.base, copy_from_user_#t~nondet88.base, copy_from_user_~to.offset, copy_from_user_~n, copy_from_user_#t~ret89, copy_from_user_~sz~73, copy_from_user_~tmp~73, copy_from_user_#t~nondet88.offset, copy_from_user_~tmp___0~73;
    copy_from_user_~to.base, copy_from_user_~to.offset := copy_from_user_#in~to.base, copy_from_user_#in~to.offset;
    copy_from_user_~from.offset, copy_from_user_~from.base := copy_from_user_#in~from.offset, copy_from_user_#in~from.base;
    copy_from_user_~n := copy_from_user_#in~n;
    havoc copy_from_user_~sz~73;
    havoc copy_from_user_~tmp~73;
    havoc copy_from_user_~tmp___0~73;
    copy_from_user_~tmp~73 := 0;
    assume copy_from_user_~tmp~73 % 4294967296 <= 2147483647 && 4294967296 + 4294967296 <= copy_from_user_~tmp~73;
    copy_from_user_~sz~73 := copy_from_user_~tmp~73 % 4294967296;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 33;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    copy_from_user_#t~nondet88.base, copy_from_user_#t~nondet88.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    __might_fault_#in~5, __might_fault_#in~4.base, __might_fault_#in~4.offset := 697, copy_from_user_#t~nondet88.base, copy_from_user_#t~nondet88.offset;
    havoc copy_from_user_#t~nondet88.base, copy_from_user_#t~nondet88.offset;
    assume ((18446744073709551616 <= copy_from_user_~n && copy_from_user_~n < 18446744073709551616 + 18446744073709551616) && copy_from_user_~sz~73 < 0) && copy_from_user_~sz~73 < 18446744073709551616;
    ldv__builtin_expect_#in~c, ldv__builtin_expect_#in~exp := 1, 1;
    havoc ldv__builtin_expect_#res;
    havoc ldv__builtin_expect_~c, ldv__builtin_expect_~exp;
    ldv__builtin_expect_~exp := ldv__builtin_expect_#in~exp;
    ldv__builtin_expect_~c := ldv__builtin_expect_#in~c;
    ldv__builtin_expect_#res := ldv__builtin_expect_~exp;
    copy_from_user_#t~ret89 := ldv__builtin_expect_#res;
    assume 0 <= copy_from_user_#t~ret89 + 9223372036854775808 && copy_from_user_#t~ret89 <= 9223372036854775807;
    copy_from_user_~tmp___0~73 := copy_from_user_#t~ret89;
    havoc copy_from_user_#t~ret89;
    assume copy_from_user_~tmp___0~73 == 0;
    copy_from_user_#res := copy_from_user_~n;
    mraid_mm_get_adapter_#t~ret143 := copy_from_user_#res;
    mraid_mm_get_adapter_~tmp~146 := mraid_mm_get_adapter_#t~ret143;
    havoc mraid_mm_get_adapter_#t~ret143;
    assume (mraid_mm_get_adapter_~tmp~146 < 18446744073709551616 && !(mraid_mm_get_adapter_~tmp~146 == 0)) && 0 <= mraid_mm_get_adapter_~tmp~146;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mraid_mm_get_adapter_~rval.base, -14, mraid_mm_get_adapter_~rval.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    mraid_mm_get_adapter_#res.offset, mraid_mm_get_adapter_#res.base := 0, 0;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := mraid_mm_get_adapter_~#mimd~146.base, mraid_mm_get_adapter_~#mimd~146.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc mraid_mm_get_adapter_~#mimd~146.offset, mraid_mm_get_adapter_~#mimd~146.base;
    mraid_mm_ioctl_#t~ret123.base, mraid_mm_ioctl_#t~ret123.offset := mraid_mm_get_adapter_#res.base, mraid_mm_get_adapter_#res.offset;
    mraid_mm_ioctl_~adp~114.offset, mraid_mm_ioctl_~adp~114.base := mraid_mm_ioctl_#t~ret123.offset, mraid_mm_ioctl_#t~ret123.base;
    havoc mraid_mm_ioctl_#t~ret123.base, mraid_mm_ioctl_#t~ret123.offset;
    assume !((mraid_mm_ioctl_~adp~114.offset + mraid_mm_ioctl_~adp~114.base) % 18446744073709551616 == 0) && mraid_mm_ioctl_~adp~114.offset + mraid_mm_ioctl_~adp~114.base < -18446744073709551616;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mraid_mm_ioctl_~adp~114.base, mraid_mm_ioctl_~adp~114.offset + 35, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mraid_mm_ioctl_#t~mem125 := read~int_#value;
    assume (!(mraid_mm_ioctl_#t~mem125 + 4294967296 == 0) && -4294967296 <= mraid_mm_ioctl_#t~mem125) && mraid_mm_ioctl_#t~mem125 < 0;
    havoc mraid_mm_ioctl_#t~mem125;
    mraid_mm_alloc_kioc_#in~adp.base, mraid_mm_alloc_kioc_#in~adp.offset := mraid_mm_ioctl_~adp~114.base, mraid_mm_ioctl_~adp~114.offset;
    havoc mraid_mm_alloc_kioc_#res.offset, mraid_mm_alloc_kioc_#res.base;
    havoc mraid_mm_alloc_kioc_#t~memset261.offset, mraid_mm_alloc_kioc_#t~mem260, mraid_mm_alloc_kioc_~__mptr~228.base, mraid_mm_alloc_kioc_#t~memset261.base, mraid_mm_alloc_kioc_#t~memset263.base, mraid_mm_alloc_kioc_~kioc~228.base, mraid_mm_alloc_kioc_~__mptr~228.offset, mraid_mm_alloc_kioc_#t~mem262.base, mraid_mm_alloc_kioc_#t~memset263.offset, mraid_mm_alloc_kioc_#t~mem259.base, mraid_mm_alloc_kioc_~adp.offset, mraid_mm_alloc_kioc_~flags~228, mraid_mm_alloc_kioc_~adp.base, mraid_mm_alloc_kioc_~tmp~228, mraid_mm_alloc_kioc_#t~mem259.offset, mraid_mm_alloc_kioc_#t~nondet257.offset, mraid_mm_alloc_kioc_~kioc~228.offset, mraid_mm_alloc_kioc_~head~228.base, mraid_mm_alloc_kioc_#t~mem262.offset, mraid_mm_alloc_kioc_#t~ret256, mraid_mm_alloc_kioc_#t~nondet257.base, mraid_mm_alloc_kioc_~head~228.offset, mraid_mm_alloc_kioc_#t~ret258;
    mraid_mm_alloc_kioc_~adp.base, mraid_mm_alloc_kioc_~adp.offset := mraid_mm_alloc_kioc_#in~adp.base, mraid_mm_alloc_kioc_#in~adp.offset;
    havoc mraid_mm_alloc_kioc_~kioc~228.offset, mraid_mm_alloc_kioc_~kioc~228.base;
    havoc mraid_mm_alloc_kioc_~head~228.base, mraid_mm_alloc_kioc_~head~228.offset;
    havoc mraid_mm_alloc_kioc_~flags~228;
    havoc mraid_mm_alloc_kioc_~tmp~228;
    havoc mraid_mm_alloc_kioc_~__mptr~228.base, mraid_mm_alloc_kioc_~__mptr~228.offset;
    down_#in~77.offset, down_#in~77.base := mraid_mm_alloc_kioc_~adp.offset + 147, mraid_mm_alloc_kioc_~adp.base;
    ~ldv_spin := 1;
    mraid_mm_alloc_kioc_~head~228.base, mraid_mm_alloc_kioc_~head~228.offset := mraid_mm_alloc_kioc_~adp.base, mraid_mm_alloc_kioc_~adp.offset + 63;
    list_empty_#in~head.offset, list_empty_#in~head.base := mraid_mm_alloc_kioc_~head~228.offset, mraid_mm_alloc_kioc_~head~228.base;
    havoc list_empty_#res;
    havoc list_empty_~head.base, list_empty_~head.offset, list_empty_#t~mem23.offset, list_empty_#t~mem23.base;
    list_empty_~head.base, list_empty_~head.offset := list_empty_#in~head.base, list_empty_#in~head.offset;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := list_empty_~head.base, 8, list_empty_~head.offset;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    list_empty_#t~mem23.offset, list_empty_#t~mem23.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    assume (((-18446744073709551616 <= list_empty_#t~mem23.base + list_empty_#t~mem23.offset && list_empty_#t~mem23.base + list_empty_#t~mem23.offset < 0) && !(list_empty_#t~mem23.base + list_empty_#t~mem23.offset + 18446744073709551616 == list_empty_~head.offset + list_empty_~head.base + 18446744073709551616)) && -18446744073709551616 <= list_empty_~head.offset + list_empty_~head.base) && list_empty_~head.offset + list_empty_~head.base < 0;
    list_empty_#res := 0;
    havoc list_empty_#t~mem23.offset, list_empty_#t~mem23.base;
    mraid_mm_alloc_kioc_#t~ret256 := list_empty_#res;
    assume mraid_mm_alloc_kioc_#t~ret256 <= 2147483647 && 0 <= mraid_mm_alloc_kioc_#t~ret256 + 2147483648;
    mraid_mm_alloc_kioc_~tmp~228 := mraid_mm_alloc_kioc_#t~ret256;
    havoc mraid_mm_alloc_kioc_#t~ret256;
    assume !(mraid_mm_alloc_kioc_~tmp~228 == 0);
    up_#in~78.base, up_#in~78.offset := mraid_mm_alloc_kioc_~adp.base, mraid_mm_alloc_kioc_~adp.offset + 147;
    spin_unlock_irqrestore_#in~flags, spin_unlock_irqrestore_#in~lock.offset, spin_unlock_irqrestore_#in~lock.base := mraid_mm_alloc_kioc_~flags~228, mraid_mm_alloc_kioc_~adp.offset + 79, mraid_mm_alloc_kioc_~adp.base;
    havoc spin_unlock_irqrestore_~flags, spin_unlock_irqrestore_~lock.base, spin_unlock_irqrestore_~lock.offset;
    spin_unlock_irqrestore_~lock.base, spin_unlock_irqrestore_~lock.offset := spin_unlock_irqrestore_#in~lock.base, spin_unlock_irqrestore_#in~lock.offset;
    spin_unlock_irqrestore_~flags := spin_unlock_irqrestore_#in~flags;
    ~ldv_spin := 0;
    ldv_spin_unlock_irqrestore_12_#in~lock.base, ldv_spin_unlock_irqrestore_12_#in~flags, ldv_spin_unlock_irqrestore_12_#in~lock.offset := spin_unlock_irqrestore_~lock.base, spin_unlock_irqrestore_~flags, spin_unlock_irqrestore_~lock.offset;
    havoc ldv_spin_unlock_irqrestore_12_~flags, ldv_spin_unlock_irqrestore_12_~lock.base, ldv_spin_unlock_irqrestore_12_~lock.offset;
    ldv_spin_unlock_irqrestore_12_~lock.base, ldv_spin_unlock_irqrestore_12_~lock.offset := ldv_spin_unlock_irqrestore_12_#in~lock.base, ldv_spin_unlock_irqrestore_12_#in~lock.offset;
    ldv_spin_unlock_irqrestore_12_~flags := ldv_spin_unlock_irqrestore_12_#in~flags;
    _raw_spin_unlock_irqrestore_#in~40.base, _raw_spin_unlock_irqrestore_#in~40.offset, _raw_spin_unlock_irqrestore_#in~41 := ldv_spin_unlock_irqrestore_12_~lock.base, ldv_spin_unlock_irqrestore_12_~lock.offset, ldv_spin_unlock_irqrestore_12_~flags;
    assume 0 <= ~dbglevel;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 33;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_alloc_kioc_#t~nondet257.offset, mraid_mm_alloc_kioc_#t~nondet257.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    printk_#in~0.offset, printk_#in~0.base := mraid_mm_alloc_kioc_#t~nondet257.offset, mraid_mm_alloc_kioc_#t~nondet257.base;
    havoc printk_#res;
    mraid_mm_alloc_kioc_#t~ret258 := printk_#res;
    assume mraid_mm_alloc_kioc_#t~ret258 <= 2147483647 && 0 <= mraid_mm_alloc_kioc_#t~ret258 + 2147483648;
    havoc mraid_mm_alloc_kioc_#t~nondet257.offset, mraid_mm_alloc_kioc_#t~nondet257.base;
    havoc mraid_mm_alloc_kioc_#t~ret258;
    mraid_mm_alloc_kioc_#res.offset, mraid_mm_alloc_kioc_#res.base := 0, 0;
    mraid_mm_ioctl_#t~ret128.offset, mraid_mm_ioctl_#t~ret128.base := mraid_mm_alloc_kioc_#res.offset, mraid_mm_alloc_kioc_#res.base;
    mraid_mm_ioctl_~kioc~114.offset, mraid_mm_ioctl_~kioc~114.base := mraid_mm_ioctl_#t~ret128.offset, mraid_mm_ioctl_#t~ret128.base;
    havoc mraid_mm_ioctl_#t~ret128.offset, mraid_mm_ioctl_#t~ret128.base;
    mimd_to_kioc_#in~adp.offset, mimd_to_kioc_#in~adp.base, mimd_to_kioc_#in~umimd.base, mimd_to_kioc_#in~kioc.base, mimd_to_kioc_#in~kioc.offset, mimd_to_kioc_#in~umimd.offset := mraid_mm_ioctl_~adp~114.offset, mraid_mm_ioctl_~adp~114.base, mraid_mm_ioctl_~argp~114.base, mraid_mm_ioctl_~kioc~114.base, mraid_mm_ioctl_~kioc~114.offset, mraid_mm_ioctl_~argp~114.offset;
    havoc mimd_to_kioc_#res;
    havoc mimd_to_kioc_~tmp~171, mimd_to_kioc_~umimd.base, mimd_to_kioc_~#mimd~171.base, mimd_to_kioc_#t~mem234.offset, mimd_to_kioc_#t~mem227.base, mimd_to_kioc_~#mimd~171.offset, mimd_to_kioc_~tmp___5~171, mimd_to_kioc_#t~nondet179.base, mimd_to_kioc_#t~mem219.offset, mimd_to_kioc_#t~mem198, mimd_to_kioc_#t~mem177, mimd_to_kioc_#t~ret178, mimd_to_kioc_#t~ite200, mimd_to_kioc_#t~mem204.base, mimd_to_kioc_#t~mem196, mimd_to_kioc_#t~mem220.base, mimd_to_kioc_#t~mem216, mimd_to_kioc_#t~mem223.base, mimd_to_kioc_#t~mem218, mimd_to_kioc_#t~short165, mimd_to_kioc_~tmp___1~171, mimd_to_kioc_#t~mem233, mimd_to_kioc_#t~mem186.base, mimd_to_kioc_#t~mem231, mimd_to_kioc_~mbox~171.offset, mimd_to_kioc_#t~mem210, mimd_to_kioc_~kioc.offset, mimd_to_kioc_#t~mem190, mimd_to_kioc_#t~ret207, mimd_to_kioc_#t~memcpy214.offset, mimd_to_kioc_#t~ret228, mimd_to_kioc_#t~ret222, mimd_to_kioc_#t~mem192, mimd_to_kioc_~tmp___2~171, mimd_to_kioc_#t~mem164, mimd_to_kioc_~subopcode~171, mimd_to_kioc_#t~mem166, mimd_to_kioc_#t~mem185, mimd_to_kioc_#t~ret189, mimd_to_kioc_~opcode~171, mimd_to_kioc_#t~mem168, mimd_to_kioc_#t~ret162, mimd_to_kioc_#t~mem203, mimd_to_kioc_~mbox64~171.base, mimd_to_kioc_~mbox64~171.offset, mimd_to_kioc_#t~mem235.base, mimd_to_kioc_~tmp___3~171, mimd_to_kioc_#t~memcpy214.base, mimd_to_kioc_#t~mem234.base, mimd_to_kioc_#t~ret237, mimd_to_kioc_#t~mem183, mimd_to_kioc_#t~mem186.offset, mimd_to_kioc_~pthru32~171.offset, mimd_to_kioc_~adp.offset, mimd_to_kioc_#t~mem199, mimd_to_kioc_#t~mem223.offset, mimd_to_kioc_#t~mem220.offset, mimd_to_kioc_#t~switch173, mimd_to_kioc_#t~mem197, mimd_to_kioc_#t~mem215, mimd_to_kioc_#t~mem211, mimd_to_kioc_#t~mem236, mimd_to_kioc_~pthru32~171.base, mimd_to_kioc_#t~mem235.offset, mimd_to_kioc_#t~mem213, mimd_to_kioc_#t~mem232, mimd_to_kioc_#t~mem219.base, mimd_to_kioc_~tmp___4~171, mimd_to_kioc_~kioc.base, mimd_to_kioc_#t~ret180, mimd_to_kioc_#t~mem227.offset, mimd_to_kioc_~umimd.offset, mimd_to_kioc_~mbox~171.base, mimd_to_kioc_#t~mem193, mimd_to_kioc_#t~mem208, mimd_to_kioc_#t~mem163, mimd_to_kioc_#t~mem188, mimd_to_kioc_~adp.base, mimd_to_kioc_~adapno~171, mimd_to_kioc_#t~mem167, mimd_to_kioc_#t~mem206, mimd_to_kioc_#t~mem229, mimd_to_kioc_#t~mem169, mimd_to_kioc_#t~mem225, mimd_to_kioc_#t~mem204.offset, mimd_to_kioc_#t~nondet179.offset, mimd_to_kioc_#t~mem221, mimd_to_kioc_~tmp___0~171;
    mimd_to_kioc_~umimd.base, mimd_to_kioc_~umimd.offset := mimd_to_kioc_#in~umimd.base, mimd_to_kioc_#in~umimd.offset;
    mimd_to_kioc_~adp.base, mimd_to_kioc_~adp.offset := mimd_to_kioc_#in~adp.base, mimd_to_kioc_#in~adp.offset;
    mimd_to_kioc_~kioc.base, mimd_to_kioc_~kioc.offset := mimd_to_kioc_#in~kioc.base, mimd_to_kioc_#in~kioc.offset;
    havoc mimd_to_kioc_~mbox64~171.offset, mimd_to_kioc_~mbox64~171.base;
    havoc mimd_to_kioc_~mbox~171.base, mimd_to_kioc_~mbox~171.offset;
    havoc mimd_to_kioc_~pthru32~171.base, mimd_to_kioc_~pthru32~171.offset;
    havoc mimd_to_kioc_~adapno~171;
    havoc mimd_to_kioc_~opcode~171;
    havoc mimd_to_kioc_~subopcode~171;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 113;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mimd_to_kioc_~#mimd~171.base, mimd_to_kioc_~#mimd~171.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc mimd_to_kioc_~tmp~171;
    havoc mimd_to_kioc_~tmp___0~171;
    havoc mimd_to_kioc_~tmp___1~171;
    havoc mimd_to_kioc_~tmp___2~171;
    havoc mimd_to_kioc_~tmp___3~171;
    havoc mimd_to_kioc_~tmp___4~171;
    havoc mimd_to_kioc_~tmp___5~171;
    copy_from_user_#in~from.offset, copy_from_user_#in~to.offset, copy_from_user_#in~from.base, copy_from_user_#in~to.base, copy_from_user_#in~n := mimd_to_kioc_~umimd.offset, mimd_to_kioc_~#mimd~171.offset, mimd_to_kioc_~umimd.base, mimd_to_kioc_~#mimd~171.base, 110;
    havoc copy_from_user_#res;
    havoc copy_from_user_~from.offset, copy_from_user_#t~ret90, copy_from_user_~to.base, copy_from_user_~from.base, copy_from_user_#t~nondet88.base, copy_from_user_~to.offset, copy_from_user_~n, copy_from_user_#t~ret89, copy_from_user_~sz~73, copy_from_user_~tmp~73, copy_from_user_#t~nondet88.offset, copy_from_user_~tmp___0~73;
    copy_from_user_~to.base, copy_from_user_~to.offset := copy_from_user_#in~to.base, copy_from_user_#in~to.offset;
    copy_from_user_~from.offset, copy_from_user_~from.base := copy_from_user_#in~from.offset, copy_from_user_#in~from.base;
    copy_from_user_~n := copy_from_user_#in~n;
    havoc copy_from_user_~sz~73;
    havoc copy_from_user_~tmp~73;
    havoc copy_from_user_~tmp___0~73;
    copy_from_user_~tmp~73 := 0;
    assume (copy_from_user_~tmp~73 < 4294967296 && 0 <= copy_from_user_~tmp~73) && !(copy_from_user_~tmp~73 <= 2147483647);
    copy_from_user_~sz~73 := copy_from_user_~tmp~73 - 4294967296;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 33;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    copy_from_user_#t~nondet88.base, copy_from_user_#t~nondet88.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    __might_fault_#in~5, __might_fault_#in~4.base, __might_fault_#in~4.offset := 697, copy_from_user_#t~nondet88.base, copy_from_user_#t~nondet88.offset;
    havoc copy_from_user_#t~nondet88.base, copy_from_user_#t~nondet88.offset;
    assume (((0 <= copy_from_user_~n && 18446744073709551616 + 18446744073709551616 <= copy_from_user_~sz~73) && !(copy_from_user_~n <= copy_from_user_~sz~73 % 18446744073709551616)) && !(copy_from_user_~sz~73 < 0)) && copy_from_user_~n < 18446744073709551616;
    ldv__builtin_expect_#in~c, ldv__builtin_expect_#in~exp := 1, 0;
    havoc ldv__builtin_expect_#res;
    havoc ldv__builtin_expect_~c, ldv__builtin_expect_~exp;
    ldv__builtin_expect_~exp := ldv__builtin_expect_#in~exp;
    ldv__builtin_expect_~c := ldv__builtin_expect_#in~c;
    ldv__builtin_expect_#res := ldv__builtin_expect_~exp;
    copy_from_user_#t~ret89 := ldv__builtin_expect_#res;
    assume 0 <= copy_from_user_#t~ret89 + 9223372036854775808 && copy_from_user_#t~ret89 <= 9223372036854775807;
    copy_from_user_~tmp___0~73 := copy_from_user_#t~ret89;
    havoc copy_from_user_#t~ret89;
    assume copy_from_user_~tmp___0~73 == 0;
    copy_from_user_#res := copy_from_user_~n;
    mimd_to_kioc_#t~ret162 := copy_from_user_#res;
    mimd_to_kioc_~tmp~171 := mimd_to_kioc_#t~ret162;
    havoc mimd_to_kioc_#t~ret162;
    assume mimd_to_kioc_~tmp~171 - 18446744073709551616 == 0;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~#mimd~171.base, mimd_to_kioc_~#mimd~171.offset + 24, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem163 := read~int_#value;
    assume 256 + 256 <= mimd_to_kioc_#t~mem163 && !(mimd_to_kioc_#t~mem163 % 256 == 195);
    mimd_to_kioc_#t~short165 := false;
    assume !mimd_to_kioc_#t~short165;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~#mimd~171.base, mimd_to_kioc_~#mimd~171.offset + 24, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem164 := read~int_#value;
    assume (mimd_to_kioc_#t~mem164 < 256 + 256 && 256 <= mimd_to_kioc_#t~mem164) && !(mimd_to_kioc_#t~mem164 - 256 == 227);
    mimd_to_kioc_#t~short165 := false;
    assume !mimd_to_kioc_#t~short165;
    havoc mimd_to_kioc_#t~mem163;
    havoc mimd_to_kioc_#t~mem164;
    havoc mimd_to_kioc_#t~short165;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~#mimd~171.base, mimd_to_kioc_~#mimd~171.offset + 8, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem166 := read~int_#value;
    mimd_to_kioc_~opcode~171 := mimd_to_kioc_#t~mem166;
    havoc mimd_to_kioc_#t~mem166;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~#mimd~171.base, mimd_to_kioc_~#mimd~171.offset + 9, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem167 := read~int_#value;
    mimd_to_kioc_~subopcode~171 := mimd_to_kioc_#t~mem167;
    havoc mimd_to_kioc_#t~mem167;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~#mimd~171.base, mimd_to_kioc_~#mimd~171.offset + 10, 2;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem168 := read~int_#value;
    havoc mimd_to_kioc_~adapno~171;
    havoc mimd_to_kioc_#t~mem168;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := ~#adapters_count_g.base, ~#adapters_count_g.offset, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem169 := read~int_#value;
    assume ((-4294967296 <= mimd_to_kioc_~adapno~171 && mimd_to_kioc_#t~mem169 < 4294967296 + 4294967296) && mimd_to_kioc_~adapno~171 < 0) && !(mimd_to_kioc_#t~mem169 <= mimd_to_kioc_~adapno~171 + 8589934592);
    havoc mimd_to_kioc_#t~mem169;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mimd_to_kioc_~kioc.base, mimd_to_kioc_~adapno~171, mimd_to_kioc_~kioc.offset + 24;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, mimd_to_kioc_~kioc.base, 0, mimd_to_kioc_~kioc.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, mimd_to_kioc_~kioc.base, 0, mimd_to_kioc_~kioc.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume 256 + 256 <= mimd_to_kioc_~opcode~171 && !(mimd_to_kioc_~opcode~171 % 256 == 130);
    mimd_to_kioc_#t~switch173 := false;
    assume !mimd_to_kioc_#t~switch173;
    assume mimd_to_kioc_~opcode~171 % 256 == 129 && 256 + 256 <= mimd_to_kioc_~opcode~171;
    mimd_to_kioc_#t~switch173 := true;
    assume mimd_to_kioc_#t~switch173;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mimd_to_kioc_~kioc.base, 0, mimd_to_kioc_~kioc.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~#mimd~171.base, mimd_to_kioc_~#mimd~171.offset + 20, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem183 := read~int_#value;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mimd_to_kioc_~kioc.base, mimd_to_kioc_#t~mem183, mimd_to_kioc_~kioc.offset + 36;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    havoc mimd_to_kioc_#t~mem183;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~kioc.base, mimd_to_kioc_~kioc.offset + 36, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem185 := read~int_#value;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mimd_to_kioc_~kioc.base, mimd_to_kioc_#t~mem185, mimd_to_kioc_~kioc.offset + 184;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    havoc mimd_to_kioc_#t~mem185;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := mimd_to_kioc_~#mimd~171.base, 8, mimd_to_kioc_~#mimd~171.offset + 12;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    mimd_to_kioc_#t~mem186.base, mimd_to_kioc_#t~mem186.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := mimd_to_kioc_#t~mem186.base, mimd_to_kioc_~kioc.offset + 176, 8, mimd_to_kioc_#t~mem186.offset, mimd_to_kioc_~kioc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    havoc mimd_to_kioc_#t~mem186.base, mimd_to_kioc_#t~mem186.offset;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~kioc.base, mimd_to_kioc_~kioc.offset + 36, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem188 := read~int_#value;
    assume (mimd_to_kioc_#t~mem188 < 4294967296 + 4294967296 && 4294967296 <= mimd_to_kioc_#t~mem188) && !(mimd_to_kioc_#t~mem188 <= 6442450943);
    mraid_mm_attach_buf_#in~adp.base, mraid_mm_attach_buf_#in~xferlen, mraid_mm_attach_buf_#in~adp.offset, mraid_mm_attach_buf_#in~kioc.base, mraid_mm_attach_buf_#in~kioc.offset := mimd_to_kioc_~adp.base, mimd_to_kioc_#t~mem188 - 4294967296 - 4294967296, mimd_to_kioc_~adp.offset, mimd_to_kioc_~kioc.base, mimd_to_kioc_~kioc.offset;
    havoc mraid_mm_attach_buf_#res;
    havoc mraid_mm_attach_buf_#t~mem255.offset, mraid_mm_attach_buf_~tmp~214.base, mraid_mm_attach_buf_#t~mem252.offset, mraid_mm_attach_buf_#t~ret253.offset, mraid_mm_attach_buf_~adp.offset, mraid_mm_attach_buf_~kioc.base, mraid_mm_attach_buf_#t~mem249, mraid_mm_attach_buf_~flags~214, mraid_mm_attach_buf_~i~214, mraid_mm_attach_buf_#t~mem242, mraid_mm_attach_buf_#t~mem243, mraid_mm_attach_buf_~tmp~214.offset, mraid_mm_attach_buf_~kioc.offset, mraid_mm_attach_buf_#t~mem247.offset, mraid_mm_attach_buf_#t~mem247.base, mraid_mm_attach_buf_~xferlen, mraid_mm_attach_buf_~pool~214.offset, mraid_mm_attach_buf_#t~ret253.base, mraid_mm_attach_buf_~right_pool~214, mraid_mm_attach_buf_~adp.base, mraid_mm_attach_buf_#t~mem252.base, mraid_mm_attach_buf_#t~mem255.base, mraid_mm_attach_buf_~pool~214.base;
    mraid_mm_attach_buf_~adp.offset, mraid_mm_attach_buf_~adp.base := mraid_mm_attach_buf_#in~adp.offset, mraid_mm_attach_buf_#in~adp.base;
    mraid_mm_attach_buf_~kioc.offset, mraid_mm_attach_buf_~kioc.base := mraid_mm_attach_buf_#in~kioc.offset, mraid_mm_attach_buf_#in~kioc.base;
    mraid_mm_attach_buf_~xferlen := mraid_mm_attach_buf_#in~xferlen;
    havoc mraid_mm_attach_buf_~pool~214.offset, mraid_mm_attach_buf_~pool~214.base;
    havoc mraid_mm_attach_buf_~right_pool~214;
    havoc mraid_mm_attach_buf_~flags~214;
    havoc mraid_mm_attach_buf_~i~214;
    havoc mraid_mm_attach_buf_~tmp~214.base, mraid_mm_attach_buf_~tmp~214.offset;
    mraid_mm_attach_buf_~right_pool~214 := -1;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, mraid_mm_attach_buf_~kioc.base, -1, mraid_mm_attach_buf_~kioc.offset + 256;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, mraid_mm_attach_buf_~kioc.offset + 240, 8, 0, mraid_mm_attach_buf_~kioc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, mraid_mm_attach_buf_~kioc.base, 0, mraid_mm_attach_buf_~kioc.offset + 248;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, mraid_mm_attach_buf_~kioc.base, 0, mraid_mm_attach_buf_~kioc.offset + 257;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    mraid_mm_attach_buf_~i~214 := 0;
    assume !(mraid_mm_attach_buf_~i~214 <= 4);
    assume !(mraid_mm_attach_buf_~right_pool~214 == -1);
    assume (!(mraid_mm_attach_buf_~right_pool~214 <= 9223372036854775807) && mraid_mm_attach_buf_~right_pool~214 < 18446744073709551616) && 0 <= mraid_mm_attach_buf_~right_pool~214;
    mraid_mm_attach_buf_~pool~214.offset, mraid_mm_attach_buf_~pool~214.base := mraid_mm_attach_buf_~adp.offset + 97 * mraid_mm_attach_buf_~right_pool~214 + -1789334175149826506505, mraid_mm_attach_buf_~adp.base;
    ~ldv_spin := 1;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    assume !(mraid_mm_attach_buf_~right_pool~214 % 256 <= 127) && 256 + 256 <= mraid_mm_attach_buf_~right_pool~214;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, mraid_mm_attach_buf_~kioc.base, mraid_mm_attach_buf_~right_pool~214 % 256 - 256, mraid_mm_attach_buf_~kioc.offset + 256;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, mraid_mm_attach_buf_~kioc.base, 1, mraid_mm_attach_buf_~kioc.offset + 257;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := mraid_mm_attach_buf_~pool~214.base, 8, mraid_mm_attach_buf_~pool~214.offset + 20;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    mraid_mm_attach_buf_#t~mem252.offset, mraid_mm_attach_buf_#t~mem252.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    ldv_dma_pool_alloc_24_#in~ldv_func_arg3.offset, ldv_dma_pool_alloc_24_#in~flags, ldv_dma_pool_alloc_24_#in~ldv_func_arg1.offset, ldv_dma_pool_alloc_24_#in~ldv_func_arg1.base, ldv_dma_pool_alloc_24_#in~ldv_func_arg3.base := mraid_mm_attach_buf_~kioc.offset + 248, 208, mraid_mm_attach_buf_#t~mem252.offset, mraid_mm_attach_buf_#t~mem252.base, mraid_mm_attach_buf_~kioc.base;
    havoc ldv_dma_pool_alloc_24_#res.offset, ldv_dma_pool_alloc_24_#res.base;
    havoc ldv_dma_pool_alloc_24_~tmp~419.offset, ldv_dma_pool_alloc_24_~tmp~419.base, ldv_dma_pool_alloc_24_#t~ret496.base, ldv_dma_pool_alloc_24_~ldv_func_arg3.offset, ldv_dma_pool_alloc_24_~ldv_func_arg1.offset, ldv_dma_pool_alloc_24_~flags, ldv_dma_pool_alloc_24_#t~ret496.offset, ldv_dma_pool_alloc_24_~ldv_func_arg1.base, ldv_dma_pool_alloc_24_~ldv_func_arg3.base;
    ldv_dma_pool_alloc_24_~ldv_func_arg1.offset, ldv_dma_pool_alloc_24_~ldv_func_arg1.base := ldv_dma_pool_alloc_24_#in~ldv_func_arg1.offset, ldv_dma_pool_alloc_24_#in~ldv_func_arg1.base;
    ldv_dma_pool_alloc_24_~flags := ldv_dma_pool_alloc_24_#in~flags;
    ldv_dma_pool_alloc_24_~ldv_func_arg3.offset, ldv_dma_pool_alloc_24_~ldv_func_arg3.base := ldv_dma_pool_alloc_24_#in~ldv_func_arg3.offset, ldv_dma_pool_alloc_24_#in~ldv_func_arg3.base;
    havoc ldv_dma_pool_alloc_24_~tmp~419.offset, ldv_dma_pool_alloc_24_~tmp~419.base;
    ldv_check_alloc_flags_#in~flags := ldv_dma_pool_alloc_24_~flags;
    havoc ldv_check_alloc_flags_~flags;
    ldv_check_alloc_flags_~flags := ldv_check_alloc_flags_#in~flags;
    assume !(~ldv_spin == 0);
    goto loc6;
  loc5_1:
    assume main_#t~switch484;
    assume ~ldv_state_variable_2 == 1;
    mraid_mm_open_#in~inode.base, mraid_mm_open_#in~inode.offset, mraid_mm_open_#in~filep.base, mraid_mm_open_#in~filep.offset := ~lsi_fops_group1.base, ~lsi_fops_group1.offset, ~lsi_fops_group2.base, ~lsi_fops_group2.offset;
    havoc mraid_mm_open_#res;
    havoc mraid_mm_open_~filep.offset, mraid_mm_open_~filep.base, mraid_mm_open_~inode.base, mraid_mm_open_~tmp___0~108, mraid_mm_open_~tmp~108, mraid_mm_open_#t~ret108, mraid_mm_open_~inode.offset;
    mraid_mm_open_~inode.base, mraid_mm_open_~inode.offset := mraid_mm_open_#in~inode.base, mraid_mm_open_#in~inode.offset;
    mraid_mm_open_~filep.offset, mraid_mm_open_~filep.base := mraid_mm_open_#in~filep.offset, mraid_mm_open_#in~filep.base;
    havoc mraid_mm_open_~tmp~108;
    havoc mraid_mm_open_~tmp___0~108;
    capable_#in~59 := 21;
    havoc capable_#res;
    mraid_mm_open_#t~ret108 := capable_#res;
    mraid_mm_open_~tmp~108 := mraid_mm_open_#t~ret108;
    havoc mraid_mm_open_#t~ret108;
    assume (!(mraid_mm_open_~tmp~108 + 256 == 0) && mraid_mm_open_~tmp~108 < 0) && -256 <= mraid_mm_open_~tmp~108;
    mraid_mm_open_~tmp___0~108 := 0;
    assume mraid_mm_open_~tmp___0~108 == 0;
    mraid_mm_open_#res := 0;
    main_#t~ret490 := mraid_mm_open_#res;
    assume main_#t~ret490 <= 2147483647 && 0 <= main_#t~ret490 + 2147483648;
    ~ldv_retval_1 := main_#t~ret490;
    havoc main_#t~ret490;
    assume ~ldv_retval_1 == 0;
    ~ldv_state_variable_2 := 2;
    ~ref_cnt := ~ref_cnt + 1;
    goto loc1;
  loc6:
    assert false;
}


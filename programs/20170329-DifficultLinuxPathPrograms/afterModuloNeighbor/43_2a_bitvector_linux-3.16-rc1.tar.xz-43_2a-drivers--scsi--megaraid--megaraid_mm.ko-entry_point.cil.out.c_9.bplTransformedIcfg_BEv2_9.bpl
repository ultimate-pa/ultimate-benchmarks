var ~#adapters_list_g.base : int;

var ~#__this_module.base : int;

var ~#__this_module.offset : int;

var #memory_$Pointer$.base : [int][int]int;

var ~#megaraid_mm_dev.base : int;

var ~ldv_timer_state_1 : int;

var v_rep#funAddr~mraid_mm_unlocked_ioctl.offset_1 : int;

var ~lsi_fops_group2.offset : int;

var #NULL.offset : int;

var ~#wait_q.offset : int;

var v_rep#funAddr~noop_llseek.base_1 : int;

var ~#drvr_ver.offset : int;

var ~#drvr_ver.base : int;

var ~#adapters_count_g.base : int;

var ~#mraid_mm_mutex.offset : int;

var v_rep#funAddr~noop_llseek.offset_1 : int;

var v_rep#funAddr~mraid_mm_unlocked_ioctl.base_1 : int;

var ~#lsi_fops.base : int;

var ~ldv_state_variable_2 : int;

var ~ldv_state_variable_0 : int;

var ~ldv_retval_0 : int;

var ~lsi_fops_group1.base : int;

var #length : [int]int;

var ~#lsi_fops.offset : int;

var ~#wait_q.base : int;

var ~ref_cnt : int;

var ~#adapters_count_g.offset : int;

var ~ldv_timer_list_1.base : int;

var v_rep#funAddr~mraid_mm_compat_ioctl.base_1 : int;

var ~#mraid_mm_mutex.base : int;

var v_rep#funAddr~mraid_mm_open.offset_1 : int;

var ~#megaraid_mm_dev.offset : int;

var #NULL.base : int;

var ~dbglevel : int;

var ~#adapters_list_g.offset : int;

var ~LDV_IN_INTERRUPT : int;

var ~lsi_fops_group1.offset : int;

var ~ldv_state_variable_1 : int;

var ~lsi_fops_group2.base : int;

var #valid : [int]int;

var #memory_int : [int][int]int;

var ~ldv_retval_1 : int;

var ~ldv_timer_list_1.offset : int;

var v_rep#funAddr~mraid_mm_compat_ioctl.offset_1 : int;

var v_rep#funAddr~mraid_mm_open.base_1 : int;

var #memory_$Pointer$.offset : [int][int]int;

var ~ldv_spin : int;

procedure ULTIMATE.start() returns ()
modifies ~#adapters_list_g.base, ~#__this_module.base, ~#__this_module.offset, #memory_$Pointer$.base, ~#megaraid_mm_dev.base, ~ldv_timer_state_1, v_rep#funAddr~mraid_mm_unlocked_ioctl.offset_1, ~lsi_fops_group2.offset, #NULL.offset, ~#wait_q.offset, v_rep#funAddr~noop_llseek.base_1, ~#drvr_ver.offset, ~#drvr_ver.base, ~#adapters_count_g.base, ~#mraid_mm_mutex.offset, v_rep#funAddr~noop_llseek.offset_1, v_rep#funAddr~mraid_mm_unlocked_ioctl.base_1, ~#lsi_fops.base, ~ldv_state_variable_2, ~ldv_state_variable_0, ~ldv_retval_0, ~lsi_fops_group1.base, #length, ~#lsi_fops.offset, ~#wait_q.base, ~ref_cnt, ~#adapters_count_g.offset, ~ldv_timer_list_1.base, v_rep#funAddr~mraid_mm_compat_ioctl.base_1, ~#mraid_mm_mutex.base, v_rep#funAddr~mraid_mm_open.offset_1, ~#megaraid_mm_dev.offset, #NULL.base, ~dbglevel, ~#adapters_list_g.offset, ~LDV_IN_INTERRUPT, ~lsi_fops_group1.offset, ~ldv_state_variable_1, ~lsi_fops_group2.base, #valid, #memory_int, ~ldv_retval_1, ~ldv_timer_list_1.offset, v_rep#funAddr~mraid_mm_compat_ioctl.offset_1, v_rep#funAddr~mraid_mm_open.base_1, #memory_$Pointer$.offset, ~ldv_spin;
{
    var ldv_zalloc_#t~malloc50.offset : int;
    var mimd_to_kioc_~umimd.base : int;
    var copy_from_user_~from.offset : int;
    var ULTIMATE.init_#t~union497.dep_map.class_cache.offset : [int]int;
    var mimd_to_kioc_~tmp___2~180 : int;
    var mraid_mm_init_#t~nondet453.offset : int;
    var mimd_to_kioc_#t~mem219.offset : int;
    var ldv_misc_register_24_#in~misc.offset : int;
    var mraid_mm_attach_buf_#in~adp.base : int;
    var mraid_mm_attach_buf_#res : int;
    var mraid_mm_open_~filep.base : int;
    var write~int_#ptr.base : int;
    var mraid_mm_alloc_kioc_#res.offset : int;
    var ULTIMATE.init_#t~union498.dep_map.cpu : int;
    var mimd_to_kioc_#t~mem203.base : int;
    var ldv_check_alloc_flags_#in~flags : int;
    var mraid_mm_ioctl_~#rval~123.offset : int;
    var handle_drvrcmd_#t~mem152 : int;
    var mimd_to_kioc_#t~mem212 : int;
    var mraid_mm_ioctl_#t~mem135 : int;
    var mraid_mm_get_adapter_#in~umimd.base : int;
    var ldv_dma_pool_alloc_20_#in~ldv_func_arg3.offset : int;
    var write~int_old_#memory_$Pointer$.offset : [int][int]int;
    var mraid_mm_attach_buf_~flags~225 : int;
    var main_#t~ret485 : int;
    var copy_from_user_#in~n : int;
    var spin_unlock_irqrestore_#in~lock.base : int;
    var mimd_to_kioc_#t~ret228 : int;
    var mraid_mm_open_#in~filep.offset : int;
    var write~$Pointer$_#ptr.base : int;
    var write~int_#sizeOfWrittenType : int;
    var main_~tmp___1~395 : int;
    var ldv_file_operations_2_~tmp___0~386.base : int;
    var mraid_mm_ioctl_~kioc~123.base : int;
    var mraid_mm_attach_buf_#t~ret253.base : int;
    var ldv_zalloc_~tmp___0~52 : int;
    var mraid_mm_ioctl_#t~mem123 : int;
    var ULTIMATE.init_#t~union498.dep_map.name.base : int;
    var handle_drvrcmd_~arg.offset : int;
    var mraid_mm_attach_buf_#in~adp.offset : int;
    var mimd_to_kioc_#in~kioc.offset : int;
    var mimd_to_kioc_~mbox64~180.base : int;
    var list_empty_#in~head.base : int;
    var memcmp_#in~16.base : int;
    var mraid_mm_ioctl_#in~filep.offset : int;
    var handle_drvrcmd_#t~mem153 : int;
    var #Ultimate.alloc_old_#valid : [int]int;
    var write~int_#ptr.offset : int;
    var mimd_to_kioc_~#mimd~180.base : int;
    var mraid_mm_init_#t~nondet453.base : int;
    var mraid_mm_ioctl_#t~mem136 : int;
    var mimd_to_kioc_#t~mem235.offset : int;
    var main_#t~nondet482 : int;
    var mimd_to_kioc_#t~nondet178.offset : int;
    var write~$Pointer$_old_#memory_$Pointer$.base : [int][int]int;
    var mraid_mm_alloc_kioc_#res.base : int;
    var mraid_mm_ioctl_#t~ret128 : int;
    var mraid_mm_get_adapter_~#mimd~155.offset : int;
    var mimd_to_kioc_#t~mem227.offset : int;
    var down_#in~71.base : int;
    var main_#t~ret484 : int;
    var INIT_LIST_HEAD_#in~list.base : int;
    var mraid_mm_get_adapter_~__mptr___0~155.base : int;
    var _raw_spin_unlock_irqrestore_#in~26.base : int;
    var ldv_zalloc_~p~52.base : int;
    var __init_waitqueue_head_#in~29.base : int;
    var mraid_mm_init_#t~nondet458.offset : int;
    var read~int_#ptr.offset : int;
    var mraid_mm_ioctl_~#rval~123.base : int;
    var _copy_from_user_#in~77.base : int;
    var mimd_to_kioc_#t~mem185.offset : int;
    var copy_from_user_~sz~77 : int;
    var _copy_from_user_#in~77.offset : int;
    var mraid_mm_ioctl_#t~mem124 : int;
    var mraid_mm_ioctl_~tmp___0~123 : int;
    var mraid_mm_get_adapter_#t~ret142 : int;
    var main_~ldvarg2~395 : int;
    var ULTIMATE.init_#t~union497.dep_map.cpu : int;
    var main_#t~nondet471 : int;
    var ldv_misc_register_24_#res : int;
    var mraid_mm_open_~filep.offset : int;
    var misc_register_#res : int;
    var ldv_spin_unlock_irqrestore_8_~lock.base : int;
    var mimd_to_kioc_#t~mem234.offset : int;
    var mraid_mm_ioctl_#t~ret127.base : int;
    var spin_unlock_irqrestore_#in~lock.offset : int;
    var copy_from_user_#t~ret85 : int;
    var _raw_spin_unlock_irqrestore_#in~26.offset : int;
    var mraid_mm_alloc_kioc_#t~mem262.offset : int;
    var mraid_mm_ioctl_~argp~123.offset : int;
    var mraid_mm_compat_ioctl_~err~375 : int;
    var mimd_to_kioc_#t~mem233 : int;
    var mimd_to_kioc_#t~mem210 : int;
    var #Ultimate.alloc_#res.offset : int;
    var _copy_from_user_#in~78 : int;
    var mraid_mm_alloc_kioc_#t~memset263.base : int;
    var printk_#in~0.offset : int;
    var handle_drvrcmd_#t~ret156 : int;
    var mraid_mm_get_adapter_~rval.offset : int;
    var handle_drvrcmd_~#kmimd~167.base : int;
    var read~$Pointer$_#ptr.offset : int;
    var ULTIMATE.init_#t~union497.dep_map.name.offset : int;
    var mraid_mm_ioctl_~#drvrcmd_rval~123.base : int;
    var mraid_mm_alloc_kioc_#t~mem259.offset : int;
    var handle_drvrcmd_~old_ioctl : int;
    var list_empty_~head.base : int;
    var copy_from_user_~tmp___1~77 : int;
    var ULTIMATE.init_#t~union496.tail : int;
    var mraid_mm_alloc_kioc_#t~memset261.offset : int;
    var copy_from_user_~tmp___0~77 : int;
    var read~$Pointer$_#value.base : int;
    var mimd_to_kioc_~tmp___4~180 : int;
    var ldv_dma_pool_alloc_20_~ldv_func_arg3.offset : int;
    var mraid_mm_open_~inode.base : int;
    var mimd_to_kioc_#in~umimd.base : int;
    var handle_drvrcmd_~rval.offset : int;
    var mraid_mm_alloc_kioc_#t~mem262.base : int;
    var mimd_to_kioc_~pthru32~180.offset : int;
    var mraid_mm_compat_ioctl_~cmd : int;
    var mraid_mm_alloc_kioc_~kioc~239.base : int;
    var mraid_mm_ioctl_#t~nondet113.base : int;
    var ldv_file_operations_2_~tmp___0~386.offset : int;
    var memcmp_#in~16.offset : int;
    var memcmp_#res : int;
    var mraid_mm_get_adapter_#in~rval.base : int;
    var mraid_mm_attach_buf_#t~mem247.base : int;
    var ldv_zalloc_#t~nondet49 : int;
    var mraid_mm_ioctl_#in~cmd : int;
    var copy_from_user_~to.offset : int;
    var ULTIMATE.init_#t~union498.dep_map.class_cache.base : [int]int;
    var mraid_mm_alloc_kioc_~kioc~239.offset : int;
    var mimd_to_kioc_#t~mem232 : int;
    var __init_waitqueue_head_#in~30.offset : int;
    var mraid_mm_ioctl_~old_ioctl~123 : int;
    var mimd_to_kioc_#t~ret206 : int;
    var handle_drvrcmd_#in~arg.offset : int;
    var mraid_mm_alloc_kioc_#t~mem259.base : int;
    var mraid_mm_attach_buf_#t~mem243 : int;
    var write~$Pointer$_#value.base : int;
    var main_~ldvarg5~395 : int;
    var mimd_to_kioc_#t~ret161 : int;
    var mraid_mm_ioctl_~cmd : int;
    var mimd_to_kioc_#t~mem221 : int;
    var copy_from_user_#t~ret83 : int;
    var mraid_mm_get_adapter_~iterator~155 : int;
    var mraid_mm_ioctl_#in~arg : int;
    var handle_drvrcmd_~umimd~167.base : int;
    var memcmp_#in~17.offset : int;
    var handle_drvrcmd_~arg.base : int;
    var ULTIMATE.init_#t~union498.dep_map.class_cache.offset : [int]int;
    var INIT_LIST_HEAD_#in~list.offset : int;
    var handle_drvrcmd_#in~arg.base : int;
    var ldv_misc_register_24_~tmp~440 : int;
    var ldv_zalloc_~tmp~52.base : int;
    var mraid_mm_compat_ioctl_#in~cmd : int;
    var main_~ldvarg4~395 : int;
    var mraid_mm_attach_buf_~kioc.offset : int;
    var ldv_dma_pool_alloc_20_~ldv_func_arg1.base : int;
    var mraid_mm_get_adapter_#res.base : int;
    var copy_from_user_#in~to.base : int;
    var mraid_mm_ioctl_#t~ret114 : int;
    var mimd_to_kioc_~__ret~180.offset : int;
    var mimd_to_kioc_#t~mem231 : int;
    var mimd_to_kioc_~__ret~180.base : int;
    var handle_drvrcmd_~rval.base : int;
    var mraid_mm_ioctl_#t~mem117 : int;
    var copy_from_user_#in~to.offset : int;
    var mraid_mm_init_~err~367 : int;
    var main_#t~ret481 : int;
    var ldv_spin_unlock_irqrestore_8_#in~lock.offset : int;
    var __init_waitqueue_head_#in~28.base : int;
    var ULTIMATE.dealloc_old_#valid : [int]int;
    var mraid_mm_alloc_kioc_~tmp~239 : int;
    var list_empty_#t~mem9.offset : int;
    var spin_unlock_irqrestore_#in~flags : int;
    var read~int_#ptr.base : int;
    var mimd_to_kioc_#t~mem168 : int;
    var ULTIMATE.init_#t~nondet104.offset : int;
    var handle_drvrcmd_~tmp___1~167 : int;
    var mraid_mm_ioctl_~#signature~123.offset : int;
    var mraid_mm_attach_buf_~kioc.base : int;
    var ULTIMATE.init_#t~union498.raw_lock.ldv_1458.head_tail : int;
    var mraid_mm_ioctl_#t~nondet111.offset : int;
    var mraid_mm_open_~inode.offset : int;
    var copy_from_user_#t~ret84 : int;
    var ULTIMATE.dealloc_~addr.offset : int;
    var mraid_mm_ioctl_#t~nondet111.base : int;
    var handle_drvrcmd_~opcode~167 : int;
    var list_empty_#in~head.offset : int;
    var mimd_to_kioc_#t~short164 : bool;
    var write~$Pointer$_#value.offset : int;
    var mraid_mm_open_#in~inode.offset : int;
    var mraid_mm_init_#t~nondet458.base : int;
    var mimd_to_kioc_~tmp___0~180 : int;
    var ULTIMATE.init_#t~nondet106.offset : int;
    var mimd_to_kioc_~kioc.base : int;
    var ULTIMATE.init_#t~union499.dep_map.ip : int;
    var ldv_file_operations_2_#t~ret463.offset : int;
    var mraid_mm_attach_buf_#t~mem249 : int;
    var ULTIMATE.init_#t~union498.magic : int;
    var ldv__builtin_expect_#in~exp : int;
    var read~int_#sizeOfReadType : int;
    var ldv_misc_register_24_~ldv_func_res~440 : int;
    var mraid_mm_get_adapter_~#mimd~155.base : int;
    var mraid_mm_get_adapter_~rval.base : int;
    var capable_#in~51 : int;
    var mimd_to_kioc_#t~mem167 : int;
    var write~$Pointer$_old_#memory_$Pointer$.offset : [int][int]int;
    var ldv_misc_register_24_#in~misc.base : int;
    var ldv_file_operations_2_~tmp~386.base : int;
    var mraid_mm_get_adapter_~tmp___0~155 : int;
    var copy_from_user_#in~from.base : int;
    var write~$Pointer$_#sizeOfWrittenType : int;
    var ULTIMATE.init_#t~union496.head : int;
    var mraid_mm_ioctl_~tmp___1~123 : int;
    var misc_register_#in~102.offset : int;
    var handle_drvrcmd_#in~rval.offset : int;
    var mimd_to_kioc_#t~mem220.base : int;
    var write~$Pointer$_old_#memory_int : [int][int]int;
    var mraid_mm_open_#in~inode.base : int;
    var ULTIMATE.dealloc_~addr.base : int;
    var ldv_zalloc_~p~52.offset : int;
    var mraid_mm_ioctl_~kioc~123.offset : int;
    var mraid_mm_ioctl_#t~mem137 : int;
    var mraid_mm_get_adapter_#t~mem145 : int;
    var ULTIMATE.init_#t~union498.owner_cpu : int;
    var ldv_zalloc_#res.offset : int;
    var mraid_mm_get_adapter_#t~mem148.base : int;
    var mraid_mm_attach_buf_#t~ret253.offset : int;
    var ULTIMATE.init_#t~union497.__padding : [int]int;
    var mimd_to_kioc_~kioc.offset : int;
    var ULTIMATE.init_#t~union499.dep_map.cpu : int;
    var ULTIMATE.init_#t~union498.raw_lock.ldv_1458.tickets.tail : int;
    var ldv_dma_pool_alloc_20_#res.base : int;
    var main_~ldvarg0~395 : int;
    var mimd_to_kioc_#t~mem166 : int;
    var mimd_to_kioc_#t~mem189 : int;
    var mraid_mm_attach_buf_~adp.base : int;
    var ULTIMATE.init_#t~union498.dep_map.key.base : int;
    var mraid_mm_attach_buf_~tmp~225.base : int;
    var mraid_mm_ioctl_~argp~123.base : int;
    var ldv_dma_pool_alloc_20_#t~ret490.base : int;
    var copy_from_user_#t~ret82 : int;
    var ULTIMATE.init_#t~nondet104.base : int;
    var memcmp_#in~17.base : int;
    var mraid_mm_alloc_kioc_#in~adp.base : int;
    var main_#t~switch480 : bool;
    var mraid_mm_ioctl_#t~ret138 : int;
    var read~$Pointer$_#sizeOfReadType : int;
    var ldv_zalloc_#res.base : int;
    var mimd_to_kioc_#t~mem176 : int;
    var mimd_to_kioc_~opcode~180 : int;
    var mraid_mm_ioctl_#res : int;
    var ULTIMATE.init_#t~union499.dep_map.key.offset : int;
    var handle_drvrcmd_~tmp___0~167 : int;
    var main_#t~nondet469 : int;
    var mraid_mm_ioctl_#t~ret115 : int;
    var mimd_to_kioc_#t~ret177 : int;
    var mimd_to_kioc_#t~mem219.base : int;
    var mraid_mm_get_adapter_#t~mem144 : int;
    var mimd_to_kioc_~mbox~180.offset : int;
    var ldv_check_alloc_flags_~flags : int;
    var mraid_mm_ioctl_~adp~123.base : int;
    var mimd_to_kioc_~umimd.offset : int;
    var mimd_to_kioc_#res : int;
    var handle_drvrcmd_#t~ret151 : int;
    var _copy_from_user_#in~76.offset : int;
    var handle_drvrcmd_~tmp~167 : int;
    var mimd_to_kioc_#t~mem165 : int;
    var ULTIMATE.init_#t~union498.dep_map.ip : int;
    var mraid_mm_ioctl_#t~ret126 : int;
    var memcmp_#in~18 : int;
    var mimd_to_kioc_#t~ret188 : int;
    var ldv_dma_pool_alloc_20_#in~ldv_func_arg3.base : int;
    var copy_from_user_#res : int;
    var mraid_mm_alloc_kioc_#t~mem260 : int;
    var __init_waitqueue_head_#in~29.offset : int;
    var mraid_mm_attach_buf_~pool~225.offset : int;
    var copy_from_user_~tmp~77 : int;
    var read~$Pointer$_#value.offset : int;
    var ULTIMATE.init_#t~nondet105.offset : int;
    var mraid_mm_init_~#__key~367.base : int;
    var printk_#res : int;
    var main_#t~switch483 : bool;
    var mimd_to_kioc_#t~mem198 : int;
    var mraid_mm_compat_ioctl_#t~ret459 : int;
    var mraid_mm_ioctl_#t~ret133 : int;
    var mraid_mm_attach_buf_#t~mem252.base : int;
    var ldv_misc_register_24_#t~ret494 : int;
    var ldv_dma_pool_alloc_20_~ldv_func_arg1.offset : int;
    var ULTIMATE.init_#t~union499.dep_map.class_cache.offset : [int]int;
    var main_~ldvarg1~395 : int;
    var mraid_mm_init_#res : int;
    var mraid_mm_ioctl_#t~ret110 : int;
    var mimd_to_kioc_#in~kioc.base : int;
    var #Ultimate.alloc_old_#length : [int]int;
    var mimd_to_kioc_#t~mem187 : int;
    var ldv_zalloc_#t~malloc50.base : int;
    var mimd_to_kioc_#t~mem209 : int;
    var write~$Pointer$_#ptr.offset : int;
    var mraid_mm_init_#t~ret455 : int;
    var handle_drvrcmd_#t~mem155.offset : int;
    var write~int_#value : int;
    var mraid_mm_open_#res : int;
    var mraid_mm_get_adapter_~adapter~155.base : int;
    var mraid_mm_alloc_kioc_~head~239.base : int;
    var mraid_mm_get_adapter_~tmp~155 : int;
    var ULTIMATE.init_#t~union499.dep_map.key.base : int;
    var mimd_to_kioc_#t~mem235.base : int;
    var ULTIMATE.init_#t~nondet106.base : int;
    var ldv_spin_unlock_irqrestore_8_#in~flags : int;
    var mraid_mm_alloc_kioc_~__mptr~239.base : int;
    var mraid_mm_alloc_kioc_~head~239.offset : int;
    var mraid_mm_compat_ioctl_~filep.offset : int;
    var mraid_mm_ioctl_#t~ret127.offset : int;
    var mimd_to_kioc_#t~mem162 : int;
    var handle_drvrcmd_#t~ret160 : int;
    var mimd_to_kioc_#t~ret179 : int;
    var ldv_dma_pool_alloc_20_~flags : int;
    var mraid_mm_get_adapter_#res.offset : int;
    var mimd_to_kioc_#t~mem220.offset : int;
    var mimd_to_kioc_#t~mem197 : int;
    var mraid_mm_get_adapter_#t~mem147.offset : int;
    var ldv_file_operations_2_#t~ret464.base : int;
    var mraid_mm_alloc_kioc_~__mptr~239.offset : int;
    var mraid_mm_attach_buf_~pool~225.base : int;
    var ldv_zalloc_~tmp~52.offset : int;
    var #Ultimate.alloc_~size : int;
    var mraid_mm_ioctl_#t~nondet113.offset : int;
    var mraid_mm_get_adapter_#t~mem147.base : int;
    var ldv_file_operations_2_~tmp~386.offset : int;
    var down_#in~71.offset : int;
    var mimd_to_kioc_#in~adp.base : int;
    var mraid_mm_get_adapter_~umimd.offset : int;
    var mraid_mm_attach_buf_~i~225 : int;
    var mimd_to_kioc_#t~mem163 : int;
    var main_#t~nondet479 : int;
    var mraid_mm_init_#t~ret454 : int;
    var ULTIMATE.init_#t~union497.dep_map.ip : int;
    var mraid_mm_ioctl_~#signature~123.base : int;
    var mraid_mm_ioctl_#in~filep.base : int;
    var mraid_mm_ioctl_~filep.offset : int;
    var list_empty_~head.offset : int;
    var mimd_to_kioc_#t~nondet178.base : int;
    var mraid_mm_compat_ioctl_~arg : int;
    var mimd_to_kioc_#t~mem184 : int;
    var mraid_mm_ioctl_#t~ret122.base : int;
    var mimd_to_kioc_#t~mem196 : int;
    var mimd_to_kioc_#t~mem223.base : int;
    var mimd_to_kioc_#t~mem218 : int;
    var ULTIMATE.init_#t~union498.raw_lock.ldv_1458.tickets.head : int;
    var mraid_mm_init_#t~nondet456.offset : int;
    var _raw_spin_unlock_irqrestore_#in~27 : int;
    var main_~tmp___2~395 : int;
    var mraid_mm_ioctl_#t~ret112 : int;
    var mimd_to_kioc_~adapno~180 : int;
    var mraid_mm_ioctl_#t~mem119 : int;
    var mraid_mm_attach_buf_#t~mem255.offset : int;
    var mimd_to_kioc_~tmp~180 : int;
    var mraid_mm_ioctl_#t~ret122.offset : int;
    var main_~ldvarg3~395 : int;
    var mraid_mm_alloc_kioc_#t~memset261.base : int;
    var ULTIMATE.init_#t~union497.dep_map.class_cache.base : [int]int;
    var mimd_to_kioc_#t~ret222 : int;
    var mraid_mm_alloc_kioc_~adp.offset : int;
    var misc_register_#in~102.base : int;
    var mimd_to_kioc_~tmp___1~180 : int;
    var mimd_to_kioc_#t~mem207 : int;
    var mraid_mm_init_#t~ret457 : int;
    var mimd_to_kioc_#t~ite199 : int;
    var main_#t~nondet476 : int;
    var handle_drvrcmd_#t~switch154 : bool;
    var mraid_mm_attach_buf_~adp.offset : int;
    var ULTIMATE.init_#t~nondet105.base : int;
    var ldv__builtin_expect_#res : int;
    var capable_#res : int;
    var ldv_dma_pool_alloc_20_#in~flags : int;
    var handle_drvrcmd_~#kmimd~167.offset : int;
    var mraid_mm_init_~#__key~367.offset : int;
    var mraid_mm_get_adapter_~umimd.base : int;
    var mraid_mm_alloc_kioc_~adp.base : int;
    var mraid_mm_get_adapter_~__mptr~155.offset : int;
    var ULTIMATE.init_#t~union499.dep_map.class_cache.base : [int]int;
    var mraid_mm_alloc_kioc_#t~nondet257.offset : int;
    var mraid_mm_get_adapter_#in~rval.offset : int;
    var mraid_mm_attach_buf_#in~xferlen : int;
    var up_#in~72.offset : int;
    var handle_drvrcmd_#t~mem155.base : int;
    var mraid_mm_ioctl_#t~mem118 : int;
    var mraid_mm_attach_buf_#t~mem252.offset : int;
    var spin_unlock_irqrestore_~flags : int;
    var mimd_to_kioc_~tmp___3~180 : int;
    var ldv__builtin_expect_#in~c : int;
    var handle_drvrcmd_#in~rval.base : int;
    var handle_drvrcmd_#in~old_ioctl : int;
    var main_~tmp___0~395 : int;
    var mimd_to_kioc_#t~mem195 : int;
    var mraid_mm_ioctl_~arg : int;
    var ldv_spin_unlock_irqrestore_8_~lock.offset : int;
    var mimd_to_kioc_#t~mem229 : int;
    var main_#t~nondet477 : int;
    var read~$Pointer$_#ptr.base : int;
    var mraid_mm_open_#t~ret107 : int;
    var mraid_mm_get_adapter_#t~mem148.offset : int;
    var mraid_mm_compat_ioctl_#in~filep.base : int;
    var read~int_#value : int;
    var ldv_spin_unlock_irqrestore_8_~flags : int;
    var mraid_mm_ioctl_~adp~123.offset : int;
    var ULTIMATE.init_#t~union497.dep_map.key.offset : int;
    var list_empty_#t~mem9.base : int;
    var mimd_to_kioc_#t~switch172 : bool;
    var mimd_to_kioc_#in~umimd.offset : int;
    var mimd_to_kioc_#t~mem182 : int;
    var ULTIMATE.init_#t~union499.dep_map.name.base : int;
    var mimd_to_kioc_#t~mem216 : int;
    var ldv_dma_pool_alloc_20_~ldv_func_arg3.base : int;
    var mraid_mm_ioctl_#t~mem131 : int;
    var mimd_to_kioc_~#mimd~180.offset : int;
    var mraid_mm_attach_buf_#t~mem255.base : int;
    var mimd_to_kioc_#t~mem203.offset : int;
    var mimd_to_kioc_~tmp___5~180 : int;
    var INIT_LIST_HEAD_~list.offset : int;
    var mraid_mm_attach_buf_~tmp~225.offset : int;
    var mimd_to_kioc_#t~mem185.base : int;
    var copy_from_user_~to.base : int;
    var mimd_to_kioc_~pthru32~180.base : int;
    var mimd_to_kioc_#t~memcpy214.offset : int;
    var ULTIMATE.init_#t~union498.dep_map.key.offset : int;
    var mraid_mm_compat_ioctl_#in~arg : int;
    var mraid_mm_attach_buf_#t~mem242 : int;
    var copy_from_user_#in~from.offset : int;
    var mraid_mm_attach_buf_~xferlen : int;
    var mimd_to_kioc_#t~mem205 : int;
    var ULTIMATE.init_#t~union497.dep_map.key.base : int;
    var _copy_from_user_#in~76.base : int;
    var main_#t~nondet474 : int;
    var mraid_mm_alloc_kioc_#t~nondet257.base : int;
    var printk_#in~0.base : int;
    var mraid_mm_alloc_kioc_#t~ret258 : int;
    var main_~tmp___4~395 : int;
    var mimd_to_kioc_#t~memcpy214.base : int;
    var mimd_to_kioc_#t~mem234.base : int;
    var mimd_to_kioc_~adp.offset : int;
    var mraid_mm_get_adapter_~__mptr___0~155.offset : int;
    var ldv_dma_pool_alloc_20_#res.offset : int;
    var ULTIMATE.init_#t~union499.dep_map.name.offset : int;
    var mraid_mm_attach_buf_~right_pool~225 : int;
    var mimd_to_kioc_#t~mem215 : int;
    var ldv_file_operations_2_#t~ret463.base : int;
    var INIT_LIST_HEAD_~list.base : int;
    var __init_waitqueue_head_#in~28.offset : int;
    var _copy_from_user_#res : int;
    var main_#t~ret488 : int;
    var handle_drvrcmd_#t~mem159.offset : int;
    var mimd_to_kioc_~mbox~180.base : int;
    var ULTIMATE.init_#t~union498.owner.base : int;
    var ldv__builtin_expect_~exp : int;
    var list_empty_#res : int;
    var handle_drvrcmd_#res : int;
    var mraid_mm_attach_buf_#t~mem247.offset : int;
    var mraid_mm_ioctl_#t~mem120 : int;
    var main_#res : int;
    var ldv_dma_pool_alloc_20_#in~ldv_func_arg1.base : int;
    var main_#t~nondet475 : int;
    var main_~tmp___3~395 : int;
    var mraid_mm_attach_buf_#in~kioc.offset : int;
    var spin_unlock_irqrestore_~lock.offset : int;
    var mraid_mm_get_adapter_~adapno~155 : int;
    var handle_drvrcmd_#t~mem158 : int;
    var mimd_to_kioc_~__len~180 : int;
    var mimd_to_kioc_#in~adp.offset : int;
    var mimd_to_kioc_#t~mem227.base : int;
    var mraid_mm_ioctl_#t~nondet125.base : int;
    var mraid_mm_attach_buf_#in~kioc.base : int;
    var main_~tmp~395 : int;
    var mraid_mm_compat_ioctl_#in~filep.offset : int;
    var ldv__builtin_expect_~c : int;
    var ldv_misc_register_24_~misc.offset : int;
    var mraid_mm_compat_ioctl_~filep.base : int;
    var #Ultimate.alloc_#res.base : int;
    var main_#t~switch478 : bool;
    var mraid_mm_ioctl_~tmp~123 : int;
    var ldv_misc_register_24_~misc.base : int;
    var up_#in~72.base : int;
    var main_#t~ret487 : int;
    var write~int_old_#memory_int : [int][int]int;
    var ULTIMATE.init_#t~union499.__padding : [int]int;
    var main_~tmp___5~395 : int;
    var mimd_to_kioc_#t~mem192 : int;
    var mimd_to_kioc_~subopcode~180 : int;
    var ldv_dma_pool_alloc_20_#in~ldv_func_arg1.offset : int;
    var ldv_spin_unlock_irqrestore_8_#in~lock.base : int;
    var mraid_mm_ioctl_#t~mem140 : int;
    var ldv_zalloc_~size : int;
    var ldv_zalloc_#in~size : int;
    var mraid_mm_get_adapter_#in~umimd.offset : int;
    var mraid_mm_alloc_kioc_#t~ret256 : int;
    var mraid_mm_get_adapter_~__mptr~155.base : int;
    var main_#t~nondet472 : int;
    var ULTIMATE.init_#t~union498.dep_map.name.offset : int;
    var copy_from_user_~from.base : int;
    var spin_unlock_irqrestore_~lock.base : int;
    var handle_drvrcmd_~subopcode~167 : int;
    var mraid_mm_alloc_kioc_#in~adp.offset : int;
    var mimd_to_kioc_#t~ret237 : int;
    var mraid_mm_init_#t~nondet456.base : int;
    var mimd_to_kioc_#t~mem223.offset : int;
    var mraid_mm_ioctl_#t~mem130 : int;
    var mraid_mm_open_~tmp~117 : int;
    var mimd_to_kioc_#t~mem236 : int;
    var ULTIMATE.init_#t~union497.dep_map.name.base : int;
    var main_~tmp___7~395 : int;
    var handle_drvrcmd_#t~mem159.base : int;
    var mraid_mm_compat_ioctl_#res : int;
    var mimd_to_kioc_#t~ret213.offset : int;
    var handle_drvrcmd_~umimd~167.offset : int;
    var mraid_mm_get_adapter_~adapter~155.offset : int;
    var mraid_mm_open_#in~filep.base : int;
    var write~int_old_#memory_$Pointer$.base : [int][int]int;
    var mimd_to_kioc_#t~mem191 : int;
    var mraid_mm_ioctl_#t~nondet125.offset : int;
    var main_#t~ret486 : int;
    var mraid_mm_alloc_kioc_#t~memset263.offset : int;
    var mraid_mm_open_~tmp___0~117 : int;
    var mraid_mm_ioctl_~#drvrcmd_rval~123.offset : int;
    var mraid_mm_alloc_kioc_~flags~239 : int;
    var ldv_file_operations_2_#t~ret464.offset : int;
    var mraid_mm_ioctl_~filep.base : int;
    var mimd_to_kioc_#t~ret213.base : int;
    var mimd_to_kioc_~adp.base : int;
    var ldv_dma_pool_alloc_20_#t~ret490.offset : int;
    var main_~tmp___6~395 : int;
    var copy_from_user_~n : int;
    var mimd_to_kioc_#t~mem202 : int;
    var mimd_to_kioc_#t~mem225 : int;
    var mimd_to_kioc_~mbox64~180.offset : int;
    var ULTIMATE.init_#t~union498.owner.offset : int;
    var main_#t~nondet473 : int;
    var __init_waitqueue_head_#in~30.base : int;

  loc0:
    havoc ULTIMATE.init_#t~nondet104.base, ULTIMATE.init_#t~union498.dep_map.name.offset, ULTIMATE.init_#t~union499.dep_map.key.base, ULTIMATE.init_#t~union497.dep_map.class_cache.offset, ULTIMATE.init_#t~nondet105.base, ULTIMATE.init_#t~nondet106.base, ULTIMATE.init_#t~union496.head, ULTIMATE.init_#t~union498.raw_lock.ldv_1458.head_tail, ULTIMATE.init_#t~nondet105.offset, ULTIMATE.init_#t~union498.dep_map.class_cache.offset, ULTIMATE.init_#t~union497.dep_map.key.offset, ULTIMATE.init_#t~union499.dep_map.name.base, ULTIMATE.init_#t~union499.dep_map.class_cache.base, ULTIMATE.init_#t~union499.dep_map.name.offset, ULTIMATE.init_#t~union498.dep_map.cpu, ULTIMATE.init_#t~union499.dep_map.key.offset, ULTIMATE.init_#t~union498.raw_lock.ldv_1458.tickets.head, ULTIMATE.init_#t~union499.dep_map.class_cache.offset, ULTIMATE.init_#t~union498.dep_map.class_cache.base, ULTIMATE.init_#t~union497.dep_map.name.base, ULTIMATE.init_#t~nondet106.offset, ULTIMATE.init_#t~union498.owner_cpu, ULTIMATE.init_#t~union497.__padding, ULTIMATE.init_#t~union499.dep_map.cpu, ULTIMATE.init_#t~union499.dep_map.ip, ULTIMATE.init_#t~union498.magic, ULTIMATE.init_#t~union497.dep_map.class_cache.base, ULTIMATE.init_#t~union498.owner.base, ULTIMATE.init_#t~union498.dep_map.key.offset, ULTIMATE.init_#t~union498.raw_lock.ldv_1458.tickets.tail, ULTIMATE.init_#t~union499.__padding, ULTIMATE.init_#t~union497.dep_map.name.offset, ULTIMATE.init_#t~nondet104.offset, ULTIMATE.init_#t~union497.dep_map.key.base, ULTIMATE.init_#t~union498.dep_map.ip, ULTIMATE.init_#t~union498.dep_map.key.base, ULTIMATE.init_#t~union497.dep_map.ip, ULTIMATE.init_#t~union498.dep_map.name.base, ULTIMATE.init_#t~union496.tail, ULTIMATE.init_#t~union498.owner.offset, ULTIMATE.init_#t~union497.dep_map.cpu;
    #NULL.offset, #NULL.base := 0, 0;
    #valid := #valid[0 := 0];
    ~LDV_IN_INTERRUPT := 1;
    ~ldv_state_variable_2 := 0;
    ~ldv_timer_state_1 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_0 := 0;
    ~dbglevel := 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#adapters_count_g.base, ~#adapters_count_g.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#adapters_count_g.base, 0, ~#adapters_count_g.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    ~ldv_retval_0 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_spin := 0;
    ~lsi_fops_group2.base, ~lsi_fops_group2.offset := 0, 0;
    ~lsi_fops_group1.offset, ~lsi_fops_group1.base := 0, 0;
    ~ldv_timer_list_1.base, ~ldv_timer_list_1.offset := 0, 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 156;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#mraid_mm_mutex.offset, ~#mraid_mm_mutex.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, 1, ~#mraid_mm_mutex.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union496.head, ~#mraid_mm_mutex.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union496.tail, ~#mraid_mm_mutex.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, 3735899821, ~#mraid_mm_mutex.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, 4294967295, ~#mraid_mm_mutex.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#mraid_mm_mutex.offset + 16, 8, -1, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#mraid_mm_mutex.offset + 24, 8, 0, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 32;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 40;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 25;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet104.base, ULTIMATE.init_#t~nondet104.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet104.base, ~#mraid_mm_mutex.offset + 48, 8, ULTIMATE.init_#t~nondet104.offset, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 56;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 60;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[0], ~#mraid_mm_mutex.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[1], ~#mraid_mm_mutex.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[2], ~#mraid_mm_mutex.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[3], ~#mraid_mm_mutex.offset + 7;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[4], ~#mraid_mm_mutex.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[5], ~#mraid_mm_mutex.offset + 9;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[6], ~#mraid_mm_mutex.offset + 10;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[7], ~#mraid_mm_mutex.offset + 11;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[8], ~#mraid_mm_mutex.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[9], ~#mraid_mm_mutex.offset + 13;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[10], ~#mraid_mm_mutex.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[11], ~#mraid_mm_mutex.offset + 15;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[12], ~#mraid_mm_mutex.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[13], ~#mraid_mm_mutex.offset + 17;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[14], ~#mraid_mm_mutex.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[15], ~#mraid_mm_mutex.offset + 19;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[16], ~#mraid_mm_mutex.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[17], ~#mraid_mm_mutex.offset + 21;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[18], ~#mraid_mm_mutex.offset + 22;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[19], ~#mraid_mm_mutex.offset + 23;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[20], ~#mraid_mm_mutex.offset + 24;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[21], ~#mraid_mm_mutex.offset + 25;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[22], ~#mraid_mm_mutex.offset + 26;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.__padding[23], ~#mraid_mm_mutex.offset + 27;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union497.dep_map.key.base, ~#mraid_mm_mutex.offset + 28, 8, ULTIMATE.init_#t~union497.dep_map.key.offset, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union497.dep_map.class_cache.base[0], ~#mraid_mm_mutex.offset + 36, 8, ULTIMATE.init_#t~union497.dep_map.class_cache.offset[0], ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union497.dep_map.class_cache.base[1], ~#mraid_mm_mutex.offset + 44, 8, ULTIMATE.init_#t~union497.dep_map.class_cache.offset[1], ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union497.dep_map.name.base, ~#mraid_mm_mutex.offset + 52, 8, ULTIMATE.init_#t~union497.dep_map.name.offset, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.dep_map.cpu, ~#mraid_mm_mutex.offset + 60;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, ULTIMATE.init_#t~union497.dep_map.ip, ~#mraid_mm_mutex.offset + 64;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#mraid_mm_mutex.base, ~#mraid_mm_mutex.offset + 72, 8, ~#mraid_mm_mutex.offset + 72, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#mraid_mm_mutex.base, ~#mraid_mm_mutex.offset + 80, 8, ~#mraid_mm_mutex.offset + 72, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#mraid_mm_mutex.offset + 88, 8, 0, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#mraid_mm_mutex.offset + 96, 8, 0, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#mraid_mm_mutex.base, ~#mraid_mm_mutex.offset + 104, 8, ~#mraid_mm_mutex.offset, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#mraid_mm_mutex.offset + 112, 8, 0, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 120;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 128;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet105.base, ULTIMATE.init_#t~nondet105.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet105.base, ~#mraid_mm_mutex.offset + 136, 8, ULTIMATE.init_#t~nondet105.offset, ~#mraid_mm_mutex.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 144;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mraid_mm_mutex.base, 0, ~#mraid_mm_mutex.offset + 148;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    havoc ULTIMATE.init_#t~union496.head, ULTIMATE.init_#t~union496.tail;
    havoc ULTIMATE.init_#t~nondet104.base, ULTIMATE.init_#t~nondet104.offset;
    havoc ULTIMATE.init_#t~union497.dep_map.name.offset, ULTIMATE.init_#t~union497.dep_map.class_cache.offset, ULTIMATE.init_#t~union497.__padding, ULTIMATE.init_#t~union497.dep_map.key.base, ULTIMATE.init_#t~union497.dep_map.ip, ULTIMATE.init_#t~union497.dep_map.key.offset, ULTIMATE.init_#t~union497.dep_map.class_cache.base, ULTIMATE.init_#t~union497.dep_map.cpu, ULTIMATE.init_#t~union497.dep_map.name.base;
    havoc ULTIMATE.init_#t~nondet105.base, ULTIMATE.init_#t~nondet105.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#drvr_ver.offset, ~#drvr_ver.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#drvr_ver.base, 35652103, ~#drvr_ver.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 16;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#adapters_list_g.base, ~#adapters_list_g.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#adapters_list_g.offset, 8, 0, ~#adapters_list_g.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#adapters_list_g.offset + 8, 8, 0, ~#adapters_list_g.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 84;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#wait_q.offset, ~#wait_q.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#wait_q.base, ULTIMATE.init_#t~union498.raw_lock.ldv_1458.head_tail, ~#wait_q.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#wait_q.base, ULTIMATE.init_#t~union498.raw_lock.ldv_1458.tickets.head, ~#wait_q.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#wait_q.base, ULTIMATE.init_#t~union498.raw_lock.ldv_1458.tickets.tail, ~#wait_q.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#wait_q.base, ULTIMATE.init_#t~union498.magic, ~#wait_q.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#wait_q.base, ULTIMATE.init_#t~union498.owner_cpu, ~#wait_q.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union498.owner.base, ~#wait_q.offset + 12, 8, ULTIMATE.init_#t~union498.owner.offset, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union498.dep_map.key.base, ~#wait_q.offset + 20, 8, ULTIMATE.init_#t~union498.dep_map.key.offset, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union498.dep_map.class_cache.base[0], ~#wait_q.offset + 28, 8, ULTIMATE.init_#t~union498.dep_map.class_cache.offset[0], ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union498.dep_map.class_cache.base[1], ~#wait_q.offset + 36, 8, ULTIMATE.init_#t~union498.dep_map.class_cache.offset[1], ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union498.dep_map.name.base, ~#wait_q.offset + 44, 8, ULTIMATE.init_#t~union498.dep_map.name.offset, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#wait_q.base, ULTIMATE.init_#t~union498.dep_map.cpu, ~#wait_q.offset + 52;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#wait_q.base, ULTIMATE.init_#t~union498.dep_map.ip, ~#wait_q.offset + 56;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[0], ~#wait_q.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[1], ~#wait_q.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[2], ~#wait_q.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[3], ~#wait_q.offset + 3;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[4], ~#wait_q.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[5], ~#wait_q.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[6], ~#wait_q.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[7], ~#wait_q.offset + 7;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[8], ~#wait_q.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[9], ~#wait_q.offset + 9;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[10], ~#wait_q.offset + 10;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[11], ~#wait_q.offset + 11;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[12], ~#wait_q.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[13], ~#wait_q.offset + 13;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[14], ~#wait_q.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[15], ~#wait_q.offset + 15;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[16], ~#wait_q.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[17], ~#wait_q.offset + 17;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[18], ~#wait_q.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[19], ~#wait_q.offset + 19;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[20], ~#wait_q.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[21], ~#wait_q.offset + 21;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[22], ~#wait_q.offset + 22;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#wait_q.base, ULTIMATE.init_#t~union499.__padding[23], ~#wait_q.offset + 23;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union499.dep_map.key.base, ~#wait_q.offset + 24, 8, ULTIMATE.init_#t~union499.dep_map.key.offset, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union499.dep_map.class_cache.base[0], ~#wait_q.offset + 32, 8, ULTIMATE.init_#t~union499.dep_map.class_cache.offset[0], ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union499.dep_map.class_cache.base[1], ~#wait_q.offset + 40, 8, ULTIMATE.init_#t~union499.dep_map.class_cache.offset[1], ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union499.dep_map.name.base, ~#wait_q.offset + 48, 8, ULTIMATE.init_#t~union499.dep_map.name.offset, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#wait_q.base, ULTIMATE.init_#t~union499.dep_map.cpu, ~#wait_q.offset + 56;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#wait_q.base, ULTIMATE.init_#t~union499.dep_map.ip, ~#wait_q.offset + 60;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#wait_q.offset + 68, 8, 0, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#wait_q.offset + 76, 8, 0, ~#wait_q.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    havoc ULTIMATE.init_#t~union498.dep_map.name.offset, ULTIMATE.init_#t~union498.owner_cpu, ULTIMATE.init_#t~union498.raw_lock.ldv_1458.head_tail, ULTIMATE.init_#t~union498.dep_map.class_cache.offset, ULTIMATE.init_#t~union498.magic, ULTIMATE.init_#t~union498.owner.base, ULTIMATE.init_#t~union498.dep_map.key.offset, ULTIMATE.init_#t~union498.raw_lock.ldv_1458.tickets.tail, ULTIMATE.init_#t~union498.dep_map.cpu, ULTIMATE.init_#t~union498.dep_map.ip, ULTIMATE.init_#t~union498.raw_lock.ldv_1458.tickets.head, ULTIMATE.init_#t~union498.dep_map.key.base, ULTIMATE.init_#t~union498.dep_map.name.base, ULTIMATE.init_#t~union498.dep_map.class_cache.base, ULTIMATE.init_#t~union498.owner.offset;
    havoc ULTIMATE.init_#t~union499.dep_map.name.base, ULTIMATE.init_#t~union499.dep_map.class_cache.base, ULTIMATE.init_#t~union499.dep_map.name.offset, ULTIMATE.init_#t~union499.dep_map.key.base, ULTIMATE.init_#t~union499.dep_map.key.offset, ULTIMATE.init_#t~union499.dep_map.cpu, ULTIMATE.init_#t~union499.dep_map.ip, ULTIMATE.init_#t~union499.dep_map.class_cache.offset, ULTIMATE.init_#t~union499.__padding;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 232;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#lsi_fops.base, ~#lsi_fops.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#__this_module.base, ~#lsi_fops.offset, 8, ~#__this_module.offset, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~noop_llseek.base_1, ~#lsi_fops.offset + 8, 8, v_rep#funAddr~noop_llseek.offset_1, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 16, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 24, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 32, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 40, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 48, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 56, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 64, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 72, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~mraid_mm_unlocked_ioctl.base_1, ~#lsi_fops.offset + 80, 8, v_rep#funAddr~mraid_mm_unlocked_ioctl.offset_1, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~mraid_mm_compat_ioctl.base_1, ~#lsi_fops.offset + 88, 8, v_rep#funAddr~mraid_mm_compat_ioctl.offset_1, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 96, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~mraid_mm_open.base_1, ~#lsi_fops.offset + 104, 8, v_rep#funAddr~mraid_mm_open.offset_1, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 112, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 120, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 128, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 136, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 144, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 152, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 160, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 168, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 176, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 184, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 192, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 200, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 208, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 216, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#lsi_fops.offset + 224, 8, 0, ~#lsi_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 62;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#megaraid_mm_dev.base, ~#megaraid_mm_dev.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#megaraid_mm_dev.base, 255, ~#megaraid_mm_dev.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 9;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet106.offset, ULTIMATE.init_#t~nondet106.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet106.base, ~#megaraid_mm_dev.offset + 4, 8, ULTIMATE.init_#t~nondet106.offset, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#lsi_fops.base, ~#megaraid_mm_dev.offset + 12, 8, ~#lsi_fops.offset, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#megaraid_mm_dev.offset + 20, 8, 0, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#megaraid_mm_dev.offset + 28, 8, 0, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#megaraid_mm_dev.offset + 36, 8, 0, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#megaraid_mm_dev.offset + 44, 8, 0, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#megaraid_mm_dev.offset + 52, 8, 0, ~#megaraid_mm_dev.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#megaraid_mm_dev.base, 0, ~#megaraid_mm_dev.offset + 60;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    havoc ULTIMATE.init_#t~nondet106.offset, ULTIMATE.init_#t~nondet106.base;
    havoc main_#res;
    havoc main_~tmp___4~395, main_#t~switch480, main_#t~switch483, main_~tmp~395, main_~ldvarg4~395, main_#t~nondet469, main_~ldvarg1~395, main_~tmp___2~395, main_#t~nondet482, main_~tmp___7~395, main_#t~switch478, main_#t~ret487, main_#t~ret488, main_~ldvarg3~395, main_#t~ret484, main_#t~ret485, main_#t~ret486, main_~tmp___0~395, main_#t~ret481, main_~tmp___5~395, main_~ldvarg0~395, main_~tmp___1~395, main_~ldvarg5~395, main_#t~nondet479, main_~tmp___6~395, main_#t~nondet477, main_#t~nondet475, main_#t~nondet476, main_#t~nondet473, main_~tmp___3~395, main_~ldvarg2~395, main_#t~nondet474, main_#t~nondet471, main_#t~nondet472;
    havoc main_~ldvarg1~395;
    havoc main_~tmp~395;
    havoc main_~ldvarg4~395;
    havoc main_~tmp___0~395;
    havoc main_~ldvarg3~395;
    havoc main_~tmp___1~395;
    havoc main_~ldvarg0~395;
    havoc main_~tmp___2~395;
    havoc main_~ldvarg5~395;
    havoc main_~tmp___3~395;
    havoc main_~ldvarg2~395;
    havoc main_~tmp___4~395;
    havoc main_~tmp___5~395;
    havoc main_~tmp___6~395;
    havoc main_~tmp___7~395;
    assume 0 <= main_#t~nondet469 + 2147483648 && main_#t~nondet469 <= 2147483647;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#adapters_count_g.base, main_#t~nondet469, ~#adapters_count_g.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    havoc main_#t~nondet469;
    main_~tmp~395 := main_#t~nondet471;
    havoc main_#t~nondet471;
    main_~ldvarg1~395 := main_~tmp~395;
    main_~tmp___0~395 := main_#t~nondet472;
    havoc main_#t~nondet472;
    main_~ldvarg4~395 := main_~tmp___0~395;
    assume 0 <= main_#t~nondet473 + 9223372036854775808 && main_#t~nondet473 <= 9223372036854775807;
    main_~tmp___1~395 := main_#t~nondet473;
    havoc main_#t~nondet473;
    main_~ldvarg3~395 := main_~tmp___1~395;
    main_~tmp___2~395 := main_#t~nondet474;
    havoc main_#t~nondet474;
    main_~ldvarg0~395 := main_~tmp___2~395;
    main_~tmp___3~395 := main_#t~nondet475;
    havoc main_#t~nondet475;
    main_~ldvarg5~395 := main_~tmp___3~395;
    assume main_#t~nondet476 <= 2147483647 && 0 <= main_#t~nondet476 + 2147483648;
    main_~tmp___4~395 := main_#t~nondet476;
    havoc main_#t~nondet476;
    main_~ldvarg2~395 := main_~tmp___4~395;
    ~ldv_state_variable_1 := 1;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_2 := 0;
    goto loc1;
  loc1:
    assume main_#t~nondet477 <= 2147483647 && 0 <= main_#t~nondet477 + 2147483648;
    main_~tmp___5~395 := main_#t~nondet477;
    havoc main_#t~nondet477;
    assume !(main_~tmp___5~395 == 0);
    main_#t~switch478 := false;
    assume !main_#t~switch478;
    goto loc2;
  loc2:
    goto loc2_0, loc2_1;
  loc2_0:
    assume !main_#t~switch478 && !(main_~tmp___5~395 == 1);
    main_#t~switch478 := false;
    goto loc3;
  loc2_1:
    assume main_~tmp___5~395 == 1;
    main_#t~switch478 := true;
    goto loc3;
  loc3:
    goto loc3_0, loc3_1;
  loc3_0:
    assume !main_#t~switch478;
    assume main_~tmp___5~395 == 2;
    main_#t~switch478 := true;
    assume main_#t~switch478;
    assume !(~ldv_state_variable_2 == 0);
    assume 0 <= main_#t~nondet482 + 2147483648 && main_#t~nondet482 <= 2147483647;
    main_~tmp___7~395 := main_#t~nondet482;
    havoc main_#t~nondet482;
    goto loc4;
  loc3_1:
    assume main_#t~switch478;
    assume !(~ldv_state_variable_0 == 0);
    assume main_#t~nondet479 <= 2147483647 && 0 <= main_#t~nondet479 + 2147483648;
    main_~tmp___6~395 := main_#t~nondet479;
    havoc main_#t~nondet479;
    assume !(main_~tmp___6~395 == 0);
    main_#t~switch480 := false;
    assume !main_#t~switch480;
    assume main_~tmp___6~395 == 1;
    main_#t~switch480 := true;
    assume main_#t~switch480;
    assume ~ldv_state_variable_0 == 1;
    havoc mraid_mm_init_#res;
    havoc mraid_mm_init_~#__key~367.offset, mraid_mm_init_#t~nondet456.base, mraid_mm_init_#t~nondet453.base, mraid_mm_init_#t~nondet458.offset, mraid_mm_init_#t~ret455, mraid_mm_init_#t~ret454, mraid_mm_init_#t~nondet456.offset, mraid_mm_init_#t~ret457, mraid_mm_init_~err~367, mraid_mm_init_~#__key~367.base, mraid_mm_init_#t~nondet458.base, mraid_mm_init_#t~nondet453.offset;
    havoc mraid_mm_init_~err~367;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_init_~#__key~367.offset, mraid_mm_init_~#__key~367.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume 0 <= ~dbglevel;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 26;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_init_#t~nondet453.base, mraid_mm_init_#t~nondet453.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    printk_#in~0.offset, printk_#in~0.base := mraid_mm_init_#t~nondet453.offset, mraid_mm_init_#t~nondet453.base;
    havoc printk_#res;
    mraid_mm_init_#t~ret454 := printk_#res;
    assume 0 <= mraid_mm_init_#t~ret454 + 2147483648 && mraid_mm_init_#t~ret454 <= 2147483647;
    havoc mraid_mm_init_#t~nondet453.base, mraid_mm_init_#t~nondet453.offset;
    havoc mraid_mm_init_#t~ret454;
    ldv_misc_register_24_#in~misc.base, ldv_misc_register_24_#in~misc.offset := ~#megaraid_mm_dev.base, ~#megaraid_mm_dev.offset;
    havoc ldv_misc_register_24_#res;
    havoc ldv_misc_register_24_~ldv_func_res~440, ldv_misc_register_24_~misc.base, ldv_misc_register_24_#t~ret494, ldv_misc_register_24_~tmp~440, ldv_misc_register_24_~misc.offset;
    ldv_misc_register_24_~misc.base, ldv_misc_register_24_~misc.offset := ldv_misc_register_24_#in~misc.base, ldv_misc_register_24_#in~misc.offset;
    havoc ldv_misc_register_24_~ldv_func_res~440;
    havoc ldv_misc_register_24_~tmp~440;
    misc_register_#in~102.base, misc_register_#in~102.offset := ldv_misc_register_24_~misc.base, ldv_misc_register_24_~misc.offset;
    havoc misc_register_#res;
    ldv_misc_register_24_#t~ret494 := misc_register_#res;
    assume ldv_misc_register_24_#t~ret494 <= 2147483647 && 0 <= ldv_misc_register_24_#t~ret494 + 2147483648;
    ldv_misc_register_24_~tmp~440 := ldv_misc_register_24_#t~ret494;
    havoc ldv_misc_register_24_#t~ret494;
    ldv_misc_register_24_~ldv_func_res~440 := ldv_misc_register_24_~tmp~440;
    ~ldv_state_variable_2 := 1;
    havoc ldv_file_operations_2_~tmp___0~386.offset, ldv_file_operations_2_#t~ret464.offset, ldv_file_operations_2_~tmp___0~386.base, ldv_file_operations_2_~tmp~386.offset, ldv_file_operations_2_~tmp~386.base, ldv_file_operations_2_#t~ret464.base, ldv_file_operations_2_#t~ret463.offset, ldv_file_operations_2_#t~ret463.base;
    havoc ldv_file_operations_2_~tmp~386.offset, ldv_file_operations_2_~tmp~386.base;
    havoc ldv_file_operations_2_~tmp___0~386.offset, ldv_file_operations_2_~tmp___0~386.base;
    ldv_zalloc_#in~size := 1032;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_#t~malloc50.offset, ldv_zalloc_#t~malloc50.base, ldv_zalloc_~p~52.base, ldv_zalloc_~tmp~52.offset, ldv_zalloc_#t~nondet49, ldv_zalloc_~size, ldv_zalloc_~tmp___0~52, ldv_zalloc_~p~52.offset, ldv_zalloc_~tmp~52.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~52.base, ldv_zalloc_~p~52.offset;
    havoc ldv_zalloc_~tmp~52.offset, ldv_zalloc_~tmp~52.base;
    havoc ldv_zalloc_~tmp___0~52;
    assume 0 <= ldv_zalloc_#t~nondet49 + 2147483648 && ldv_zalloc_#t~nondet49 <= 2147483647;
    ldv_zalloc_~tmp___0~52 := ldv_zalloc_#t~nondet49;
    havoc ldv_zalloc_#t~nondet49;
    assume !(ldv_zalloc_~tmp___0~52 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_file_operations_2_#t~ret463.offset, ldv_file_operations_2_#t~ret463.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    ldv_file_operations_2_~tmp~386.offset, ldv_file_operations_2_~tmp~386.base := ldv_file_operations_2_#t~ret463.offset, ldv_file_operations_2_#t~ret463.base;
    havoc ldv_file_operations_2_#t~ret463.offset, ldv_file_operations_2_#t~ret463.base;
    ~lsi_fops_group1.offset, ~lsi_fops_group1.base := ldv_file_operations_2_~tmp~386.offset, ldv_file_operations_2_~tmp~386.base;
    ldv_zalloc_#in~size := 512;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_#t~malloc50.offset, ldv_zalloc_#t~malloc50.base, ldv_zalloc_~p~52.base, ldv_zalloc_~tmp~52.offset, ldv_zalloc_#t~nondet49, ldv_zalloc_~size, ldv_zalloc_~tmp___0~52, ldv_zalloc_~p~52.offset, ldv_zalloc_~tmp~52.base;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~52.base, ldv_zalloc_~p~52.offset;
    havoc ldv_zalloc_~tmp~52.offset, ldv_zalloc_~tmp~52.base;
    havoc ldv_zalloc_~tmp___0~52;
    assume 0 <= ldv_zalloc_#t~nondet49 + 2147483648 && ldv_zalloc_#t~nondet49 <= 2147483647;
    ldv_zalloc_~tmp___0~52 := ldv_zalloc_#t~nondet49;
    havoc ldv_zalloc_#t~nondet49;
    assume !(ldv_zalloc_~tmp___0~52 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_file_operations_2_#t~ret464.offset, ldv_file_operations_2_#t~ret464.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    ldv_file_operations_2_~tmp___0~386.offset, ldv_file_operations_2_~tmp___0~386.base := ldv_file_operations_2_#t~ret464.offset, ldv_file_operations_2_#t~ret464.base;
    havoc ldv_file_operations_2_#t~ret464.offset, ldv_file_operations_2_#t~ret464.base;
    ~lsi_fops_group2.base, ~lsi_fops_group2.offset := ldv_file_operations_2_~tmp___0~386.base, ldv_file_operations_2_~tmp___0~386.offset;
    ldv_misc_register_24_#res := ldv_misc_register_24_~ldv_func_res~440;
    mraid_mm_init_#t~ret455 := ldv_misc_register_24_#res;
    assume 0 <= mraid_mm_init_#t~ret455 + 2147483648 && mraid_mm_init_#t~ret455 <= 2147483647;
    mraid_mm_init_~err~367 := mraid_mm_init_#t~ret455;
    havoc mraid_mm_init_#t~ret455;
    assume !(mraid_mm_init_~err~367 < 0);
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_init_#t~nondet458.offset, mraid_mm_init_#t~nondet458.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    __init_waitqueue_head_#in~28.base, __init_waitqueue_head_#in~30.offset, __init_waitqueue_head_#in~29.base, __init_waitqueue_head_#in~29.offset, __init_waitqueue_head_#in~28.offset, __init_waitqueue_head_#in~30.base := ~#wait_q.base, mraid_mm_init_~#__key~367.offset, mraid_mm_init_#t~nondet458.base, mraid_mm_init_#t~nondet458.offset, ~#wait_q.offset, mraid_mm_init_~#__key~367.base;
    havoc mraid_mm_init_#t~nondet458.offset, mraid_mm_init_#t~nondet458.base;
    INIT_LIST_HEAD_#in~list.base, INIT_LIST_HEAD_#in~list.offset := ~#adapters_list_g.base, ~#adapters_list_g.offset;
    havoc INIT_LIST_HEAD_~list.base, INIT_LIST_HEAD_~list.offset;
    INIT_LIST_HEAD_~list.base, INIT_LIST_HEAD_~list.offset := INIT_LIST_HEAD_#in~list.base, INIT_LIST_HEAD_#in~list.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := INIT_LIST_HEAD_~list.base, INIT_LIST_HEAD_~list.offset, 8, INIT_LIST_HEAD_~list.offset, INIT_LIST_HEAD_~list.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := INIT_LIST_HEAD_~list.base, INIT_LIST_HEAD_~list.offset + 8, 8, INIT_LIST_HEAD_~list.offset, INIT_LIST_HEAD_~list.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    mraid_mm_init_#res := 0;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := mraid_mm_init_~#__key~367.base, mraid_mm_init_~#__key~367.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc mraid_mm_init_~#__key~367.offset, mraid_mm_init_~#__key~367.base;
    main_#t~ret481 := mraid_mm_init_#res;
    assume 0 <= main_#t~ret481 + 2147483648 && main_#t~ret481 <= 2147483647;
    ~ldv_retval_0 := main_#t~ret481;
    havoc main_#t~ret481;
    assume ~ldv_retval_0 == 0;
    ~ldv_state_variable_0 := 3;
    assume ~ldv_retval_0 == 0;
    goto loc1;
  loc4:
    goto loc4_0, loc4_1;
  loc4_0:
    assume !(main_~tmp___7~395 == 0);
    main_#t~switch483 := false;
    goto loc5;
  loc4_1:
    assume main_~tmp___7~395 == 0;
    main_#t~switch483 := true;
    goto loc5;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume main_#t~switch483;
    assume ~ldv_state_variable_2 == 2;
    mraid_mm_compat_ioctl_#in~arg, mraid_mm_compat_ioctl_#in~filep.base, mraid_mm_compat_ioctl_#in~cmd, mraid_mm_compat_ioctl_#in~filep.offset := main_~ldvarg4~395, ~lsi_fops_group2.base, main_~ldvarg5~395, ~lsi_fops_group2.offset;
    havoc mraid_mm_compat_ioctl_#res;
    havoc mraid_mm_compat_ioctl_#t~ret459, mraid_mm_compat_ioctl_~err~375, mraid_mm_compat_ioctl_~arg, mraid_mm_compat_ioctl_~filep.base, mraid_mm_compat_ioctl_~filep.offset, mraid_mm_compat_ioctl_~cmd;
    mraid_mm_compat_ioctl_~filep.base, mraid_mm_compat_ioctl_~filep.offset := mraid_mm_compat_ioctl_#in~filep.base, mraid_mm_compat_ioctl_#in~filep.offset;
    mraid_mm_compat_ioctl_~cmd := mraid_mm_compat_ioctl_#in~cmd;
    mraid_mm_compat_ioctl_~arg := mraid_mm_compat_ioctl_#in~arg;
    havoc mraid_mm_compat_ioctl_~err~375;
    mraid_mm_ioctl_#in~filep.base, mraid_mm_ioctl_#in~arg, mraid_mm_ioctl_#in~filep.offset, mraid_mm_ioctl_#in~cmd := mraid_mm_compat_ioctl_~filep.base, mraid_mm_compat_ioctl_~arg, mraid_mm_compat_ioctl_~filep.offset, mraid_mm_compat_ioctl_~cmd;
    havoc mraid_mm_ioctl_#res;
    havoc mraid_mm_ioctl_~filep.offset, mraid_mm_ioctl_#t~nondet125.base, mraid_mm_ioctl_#t~ret127.base, mraid_mm_ioctl_~adp~123.offset, mraid_mm_ioctl_#t~ret122.base, mraid_mm_ioctl_~tmp___1~123, mraid_mm_ioctl_#t~ret133, mraid_mm_ioctl_#t~mem131, mraid_mm_ioctl_~#rval~123.offset, mraid_mm_ioctl_~argp~123.offset, mraid_mm_ioctl_#t~ret114, mraid_mm_ioctl_#t~mem135, mraid_mm_ioctl_~kioc~123.offset, mraid_mm_ioctl_#t~ret112, mraid_mm_ioctl_#t~mem137, mraid_mm_ioctl_#t~ret110, mraid_mm_ioctl_#t~mem119, mraid_mm_ioctl_#t~mem117, mraid_mm_ioctl_~tmp~123, mraid_mm_ioctl_#t~ret122.offset, mraid_mm_ioctl_~#drvrcmd_rval~123.base, mraid_mm_ioctl_#t~mem140, mraid_mm_ioctl_~kioc~123.base, mraid_mm_ioctl_#t~mem123, mraid_mm_ioctl_~argp~123.base, mraid_mm_ioctl_~#signature~123.offset, mraid_mm_ioctl_#t~nondet111.offset, mraid_mm_ioctl_#t~ret138, mraid_mm_ioctl_#t~ret127.offset, mraid_mm_ioctl_#t~nondet111.base, mraid_mm_ioctl_#t~nondet113.base, mraid_mm_ioctl_#t~mem130, mraid_mm_ioctl_#t~ret115, mraid_mm_ioctl_#t~mem136, mraid_mm_ioctl_#t~mem118, mraid_mm_ioctl_#t~nondet113.offset, mraid_mm_ioctl_#t~ret128, mraid_mm_ioctl_~adp~123.base, mraid_mm_ioctl_~old_ioctl~123, mraid_mm_ioctl_#t~nondet125.offset, mraid_mm_ioctl_~#drvrcmd_rval~123.offset, mraid_mm_ioctl_~arg, mraid_mm_ioctl_~filep.base, mraid_mm_ioctl_#t~mem120, mraid_mm_ioctl_~#rval~123.base, mraid_mm_ioctl_#t~ret126, mraid_mm_ioctl_#t~mem124, mraid_mm_ioctl_~tmp___0~123, mraid_mm_ioctl_~#signature~123.base, mraid_mm_ioctl_~cmd;
    mraid_mm_ioctl_~filep.base, mraid_mm_ioctl_~filep.offset := mraid_mm_ioctl_#in~filep.base, mraid_mm_ioctl_#in~filep.offset;
    mraid_mm_ioctl_~cmd := mraid_mm_ioctl_#in~cmd;
    mraid_mm_ioctl_~arg := mraid_mm_ioctl_#in~arg;
    havoc mraid_mm_ioctl_~kioc~123.base, mraid_mm_ioctl_~kioc~123.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 16;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_ioctl_~#signature~123.offset, mraid_mm_ioctl_~#signature~123.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc mraid_mm_ioctl_~tmp~123;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_ioctl_~#rval~123.base, mraid_mm_ioctl_~#rval~123.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc mraid_mm_ioctl_~adp~123.base, mraid_mm_ioctl_~adp~123.offset;
    havoc mraid_mm_ioctl_~old_ioctl~123;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_ioctl_~#drvrcmd_rval~123.base, mraid_mm_ioctl_~#drvrcmd_rval~123.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc mraid_mm_ioctl_~argp~123.offset, mraid_mm_ioctl_~argp~123.base;
    havoc mraid_mm_ioctl_~tmp___0~123;
    havoc mraid_mm_ioctl_~tmp___1~123;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, mraid_mm_ioctl_~#signature~123.base, 0, mraid_mm_ioctl_~#signature~123.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    mraid_mm_ioctl_~tmp~123 := 1;
    assume mraid_mm_ioctl_~tmp~123 < 0 && 0 <= mraid_mm_ioctl_~tmp~123 + 4294967280;
    assume (0 <= mraid_mm_ioctl_~arg && !(mraid_mm_ioctl_~arg <= 9223372036854775807)) && mraid_mm_ioctl_~arg < 18446744073709551616;
    mraid_mm_ioctl_~argp~123.offset, mraid_mm_ioctl_~argp~123.base := mraid_mm_ioctl_~arg - 18446744073709551616, 0;
    assume 4294967296 + 4294967296 <= mraid_mm_ioctl_~cmd && mraid_mm_ioctl_~cmd % 4294967296 == 128;
    copy_from_user_#in~from.offset, copy_from_user_#in~to.offset, copy_from_user_#in~from.base, copy_from_user_#in~to.base, copy_from_user_#in~n := mraid_mm_ioctl_~argp~123.offset, mraid_mm_ioctl_~#signature~123.offset, mraid_mm_ioctl_~argp~123.base, mraid_mm_ioctl_~#signature~123.base, 16;
    havoc copy_from_user_#res;
    havoc copy_from_user_#t~ret82, copy_from_user_#t~ret83, copy_from_user_~tmp___0~77, copy_from_user_~from.offset, copy_from_user_~to.base, copy_from_user_~from.base, copy_from_user_~tmp~77, copy_from_user_#t~ret84, copy_from_user_#t~ret85, copy_from_user_~tmp___1~77, copy_from_user_~sz~77, copy_from_user_~to.offset, copy_from_user_~n;
    copy_from_user_~to.base, copy_from_user_~to.offset := copy_from_user_#in~to.base, copy_from_user_#in~to.offset;
    copy_from_user_~from.offset, copy_from_user_~from.base := copy_from_user_#in~from.offset, copy_from_user_#in~from.base;
    copy_from_user_~n := copy_from_user_#in~n;
    havoc copy_from_user_~sz~77;
    havoc copy_from_user_~tmp~77;
    havoc copy_from_user_~tmp___0~77;
    havoc copy_from_user_~tmp___1~77;
    copy_from_user_~tmp~77 := 0;
    assume !(copy_from_user_~tmp~77 % 4294967296 <= 2147483647) && copy_from_user_~tmp~77 < -4294967296;
    copy_from_user_~sz~77 := copy_from_user_~tmp~77 % 4294967296 - 4294967296;
    assume copy_from_user_~sz~77 < 0;
    ldv__builtin_expect_#in~c, ldv__builtin_expect_#in~exp := 1, 1;
    havoc ldv__builtin_expect_#res;
    havoc ldv__builtin_expect_~c, ldv__builtin_expect_~exp;
    ldv__builtin_expect_~exp := ldv__builtin_expect_#in~exp;
    ldv__builtin_expect_~c := ldv__builtin_expect_#in~c;
    ldv__builtin_expect_#res := ldv__builtin_expect_~exp;
    copy_from_user_#t~ret82 := ldv__builtin_expect_#res;
    assume copy_from_user_#t~ret82 <= 9223372036854775807 && 0 <= copy_from_user_#t~ret82 + 9223372036854775808;
    copy_from_user_~tmp___0~77 := copy_from_user_#t~ret82;
    havoc copy_from_user_#t~ret82;
    assume !(copy_from_user_~tmp___0~77 == 0);
    _copy_from_user_#in~77.base, _copy_from_user_#in~78, _copy_from_user_#in~76.base, _copy_from_user_#in~77.offset, _copy_from_user_#in~76.offset := copy_from_user_~from.base, copy_from_user_~n, copy_from_user_~to.base, copy_from_user_~from.offset, copy_from_user_~to.offset;
    havoc _copy_from_user_#res;
    copy_from_user_#t~ret83 := _copy_from_user_#res;
    copy_from_user_~n := copy_from_user_#t~ret83;
    havoc copy_from_user_#t~ret83;
    copy_from_user_#res := copy_from_user_~n;
    mraid_mm_ioctl_#t~ret110 := copy_from_user_#res;
    mraid_mm_ioctl_~tmp___0~123 := mraid_mm_ioctl_#t~ret110;
    havoc mraid_mm_ioctl_#t~ret110;
    assume mraid_mm_ioctl_~tmp___0~123 == 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 17;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_ioctl_#t~nondet113.offset, mraid_mm_ioctl_#t~nondet113.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    memcmp_#in~16.base, memcmp_#in~16.offset, memcmp_#in~17.base, memcmp_#in~17.offset, memcmp_#in~18 := mraid_mm_ioctl_~#signature~123.base, mraid_mm_ioctl_~#signature~123.offset, mraid_mm_ioctl_#t~nondet113.base, mraid_mm_ioctl_#t~nondet113.offset, 16;
    havoc memcmp_#res;
    mraid_mm_ioctl_#t~ret114 := memcmp_#res;
    assume mraid_mm_ioctl_#t~ret114 <= 2147483647 && 0 <= mraid_mm_ioctl_#t~ret114 + 2147483648;
    mraid_mm_ioctl_~tmp___1~123 := mraid_mm_ioctl_#t~ret114;
    havoc mraid_mm_ioctl_#t~nondet113.offset, mraid_mm_ioctl_#t~nondet113.base;
    havoc mraid_mm_ioctl_#t~ret114;
    assume mraid_mm_ioctl_~tmp___1~123 == 0;
    mraid_mm_ioctl_~old_ioctl~123 := 0;
    assume !(mraid_mm_ioctl_~old_ioctl~123 % 256 == 0) && mraid_mm_ioctl_~old_ioctl~123 < -256;
    assume mraid_mm_ioctl_~old_ioctl~123 < -256;
    handle_drvrcmd_#in~rval.offset, handle_drvrcmd_#in~rval.base, handle_drvrcmd_#in~old_ioctl, handle_drvrcmd_#in~arg.base, handle_drvrcmd_#in~arg.offset := mraid_mm_ioctl_~#drvrcmd_rval~123.offset, mraid_mm_ioctl_~#drvrcmd_rval~123.base, mraid_mm_ioctl_~old_ioctl~123 % 256, mraid_mm_ioctl_~argp~123.base, mraid_mm_ioctl_~argp~123.offset;
    havoc handle_drvrcmd_#res;
    havoc handle_drvrcmd_#t~switch154, handle_drvrcmd_#t~mem158, handle_drvrcmd_~umimd~167.base, handle_drvrcmd_#t~mem153, handle_drvrcmd_~arg.base, handle_drvrcmd_~rval.offset, handle_drvrcmd_~subopcode~167, handle_drvrcmd_~#kmimd~167.offset, handle_drvrcmd_#t~ret160, handle_drvrcmd_~opcode~167, handle_drvrcmd_~tmp___0~167, handle_drvrcmd_#t~mem152, handle_drvrcmd_~rval.base, handle_drvrcmd_#t~mem155.base, handle_drvrcmd_#t~mem159.base, handle_drvrcmd_~umimd~167.offset, handle_drvrcmd_#t~ret156, handle_drvrcmd_#t~mem159.offset, handle_drvrcmd_#t~ret151, handle_drvrcmd_~#kmimd~167.base, handle_drvrcmd_~old_ioctl, handle_drvrcmd_~tmp~167, handle_drvrcmd_#t~mem155.offset, handle_drvrcmd_~tmp___1~167, handle_drvrcmd_~arg.offset;
    handle_drvrcmd_~arg.base, handle_drvrcmd_~arg.offset := handle_drvrcmd_#in~arg.base, handle_drvrcmd_#in~arg.offset;
    handle_drvrcmd_~old_ioctl := handle_drvrcmd_#in~old_ioctl;
    handle_drvrcmd_~rval.offset, handle_drvrcmd_~rval.base := handle_drvrcmd_#in~rval.offset, handle_drvrcmd_#in~rval.base;
    havoc handle_drvrcmd_~umimd~167.offset, handle_drvrcmd_~umimd~167.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 113;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    handle_drvrcmd_~#kmimd~167.offset, handle_drvrcmd_~#kmimd~167.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc handle_drvrcmd_~opcode~167;
    havoc handle_drvrcmd_~subopcode~167;
    havoc handle_drvrcmd_~tmp~167;
    havoc handle_drvrcmd_~tmp___0~167;
    havoc handle_drvrcmd_~tmp___1~167;
    assume handle_drvrcmd_~old_ioctl - 256 == 0;
    handle_drvrcmd_#res := -524;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := handle_drvrcmd_~#kmimd~167.base, handle_drvrcmd_~#kmimd~167.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc handle_drvrcmd_~#kmimd~167.offset, handle_drvrcmd_~#kmimd~167.base;
    mraid_mm_ioctl_#t~ret115 := handle_drvrcmd_#res;
    assume mraid_mm_ioctl_#t~ret115 <= 2147483647 && 0 <= mraid_mm_ioctl_#t~ret115 + 2147483648;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mraid_mm_ioctl_~#rval~123.base, mraid_mm_ioctl_#t~ret115, mraid_mm_ioctl_~#rval~123.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    havoc mraid_mm_ioctl_#t~ret115;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mraid_mm_ioctl_~#rval~123.base, mraid_mm_ioctl_~#rval~123.offset, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mraid_mm_ioctl_#t~mem117 := read~int_#value;
    assume !(mraid_mm_ioctl_#t~mem117 < 0);
    havoc mraid_mm_ioctl_#t~mem117;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mraid_mm_ioctl_~#rval~123.base, mraid_mm_ioctl_~#rval~123.offset, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mraid_mm_ioctl_#t~mem119 := read~int_#value;
    assume !(mraid_mm_ioctl_#t~mem119 == 0);
    havoc mraid_mm_ioctl_#t~mem119;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mraid_mm_ioctl_~#rval~123.base, 0, mraid_mm_ioctl_~#rval~123.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    mraid_mm_get_adapter_#in~rval.base, mraid_mm_get_adapter_#in~rval.offset, mraid_mm_get_adapter_#in~umimd.offset, mraid_mm_get_adapter_#in~umimd.base := mraid_mm_ioctl_~#rval~123.base, mraid_mm_ioctl_~#rval~123.offset, mraid_mm_ioctl_~argp~123.offset, mraid_mm_ioctl_~argp~123.base;
    havoc mraid_mm_get_adapter_#res.offset, mraid_mm_get_adapter_#res.base;
    havoc mraid_mm_get_adapter_#t~mem144, mraid_mm_get_adapter_#t~mem145, mraid_mm_get_adapter_~adapno~155, mraid_mm_get_adapter_~iterator~155, mraid_mm_get_adapter_~tmp~155, mraid_mm_get_adapter_~tmp___0~155, mraid_mm_get_adapter_#t~mem148.base, mraid_mm_get_adapter_#t~mem147.base, mraid_mm_get_adapter_~adapter~155.offset, mraid_mm_get_adapter_~#mimd~155.offset, mraid_mm_get_adapter_~umimd.offset, mraid_mm_get_adapter_~rval.offset, mraid_mm_get_adapter_~__mptr___0~155.base, mraid_mm_get_adapter_~umimd.base, mraid_mm_get_adapter_~#mimd~155.base, mraid_mm_get_adapter_~__mptr~155.offset, mraid_mm_get_adapter_~__mptr___0~155.offset, mraid_mm_get_adapter_~rval.base, mraid_mm_get_adapter_#t~mem147.offset, mraid_mm_get_adapter_#t~mem148.offset, mraid_mm_get_adapter_#t~ret142, mraid_mm_get_adapter_~adapter~155.base, mraid_mm_get_adapter_~__mptr~155.base;
    mraid_mm_get_adapter_~umimd.base, mraid_mm_get_adapter_~umimd.offset := mraid_mm_get_adapter_#in~umimd.base, mraid_mm_get_adapter_#in~umimd.offset;
    mraid_mm_get_adapter_~rval.base, mraid_mm_get_adapter_~rval.offset := mraid_mm_get_adapter_#in~rval.base, mraid_mm_get_adapter_#in~rval.offset;
    havoc mraid_mm_get_adapter_~adapter~155.offset, mraid_mm_get_adapter_~adapter~155.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 113;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_get_adapter_~#mimd~155.base, mraid_mm_get_adapter_~#mimd~155.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc mraid_mm_get_adapter_~adapno~155;
    havoc mraid_mm_get_adapter_~iterator~155;
    havoc mraid_mm_get_adapter_~tmp~155;
    havoc mraid_mm_get_adapter_~__mptr~155.offset, mraid_mm_get_adapter_~__mptr~155.base;
    havoc mraid_mm_get_adapter_~tmp___0~155;
    havoc mraid_mm_get_adapter_~__mptr___0~155.offset, mraid_mm_get_adapter_~__mptr___0~155.base;
    copy_from_user_#in~from.offset, copy_from_user_#in~to.offset, copy_from_user_#in~from.base, copy_from_user_#in~to.base, copy_from_user_#in~n := mraid_mm_get_adapter_~umimd.offset, mraid_mm_get_adapter_~#mimd~155.offset, mraid_mm_get_adapter_~umimd.base, mraid_mm_get_adapter_~#mimd~155.base, 110;
    havoc copy_from_user_#res;
    havoc copy_from_user_#t~ret82, copy_from_user_#t~ret83, copy_from_user_~tmp___0~77, copy_from_user_~from.offset, copy_from_user_~to.base, copy_from_user_~from.base, copy_from_user_~tmp~77, copy_from_user_#t~ret84, copy_from_user_#t~ret85, copy_from_user_~tmp___1~77, copy_from_user_~sz~77, copy_from_user_~to.offset, copy_from_user_~n;
    copy_from_user_~to.base, copy_from_user_~to.offset := copy_from_user_#in~to.base, copy_from_user_#in~to.offset;
    copy_from_user_~from.offset, copy_from_user_~from.base := copy_from_user_#in~from.offset, copy_from_user_#in~from.base;
    copy_from_user_~n := copy_from_user_#in~n;
    havoc copy_from_user_~sz~77;
    havoc copy_from_user_~tmp~77;
    havoc copy_from_user_~tmp___0~77;
    havoc copy_from_user_~tmp___1~77;
    copy_from_user_~tmp~77 := 0;
    assume (4294967296 <= copy_from_user_~tmp~77 && copy_from_user_~tmp~77 <= 6442450943) && copy_from_user_~tmp~77 < 4294967296 + 4294967296;
    copy_from_user_~sz~77 := copy_from_user_~tmp~77 - 4294967296;
    assume copy_from_user_~sz~77 < 0;
    ldv__builtin_expect_#in~c, ldv__builtin_expect_#in~exp := 1, 1;
    havoc ldv__builtin_expect_#res;
    havoc ldv__builtin_expect_~c, ldv__builtin_expect_~exp;
    ldv__builtin_expect_~exp := ldv__builtin_expect_#in~exp;
    ldv__builtin_expect_~c := ldv__builtin_expect_#in~c;
    ldv__builtin_expect_#res := ldv__builtin_expect_~exp;
    copy_from_user_#t~ret82 := ldv__builtin_expect_#res;
    assume 0 <= copy_from_user_#t~ret82 + 9223372036854775808 && copy_from_user_#t~ret82 <= 9223372036854775807;
    copy_from_user_~tmp___0~77 := copy_from_user_#t~ret82;
    havoc copy_from_user_#t~ret82;
    assume !(copy_from_user_~tmp___0~77 == 0);
    _copy_from_user_#in~77.base, _copy_from_user_#in~78, _copy_from_user_#in~76.base, _copy_from_user_#in~77.offset, _copy_from_user_#in~76.offset := copy_from_user_~from.base, copy_from_user_~n, copy_from_user_~to.base, copy_from_user_~from.offset, copy_from_user_~to.offset;
    havoc _copy_from_user_#res;
    copy_from_user_#t~ret83 := _copy_from_user_#res;
    copy_from_user_~n := copy_from_user_#t~ret83;
    havoc copy_from_user_#t~ret83;
    copy_from_user_#res := copy_from_user_~n;
    mraid_mm_get_adapter_#t~ret142 := copy_from_user_#res;
    mraid_mm_get_adapter_~tmp~155 := mraid_mm_get_adapter_#t~ret142;
    havoc mraid_mm_get_adapter_#t~ret142;
    assume 18446744073709551616 + 18446744073709551616 <= mraid_mm_get_adapter_~tmp~155 && !(mraid_mm_get_adapter_~tmp~155 % 18446744073709551616 == 0);
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mraid_mm_get_adapter_~rval.base, -14, mraid_mm_get_adapter_~rval.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    mraid_mm_get_adapter_#res.offset, mraid_mm_get_adapter_#res.base := 0, 0;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := mraid_mm_get_adapter_~#mimd~155.base, mraid_mm_get_adapter_~#mimd~155.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc mraid_mm_get_adapter_~#mimd~155.base, mraid_mm_get_adapter_~#mimd~155.offset;
    mraid_mm_ioctl_#t~ret122.base, mraid_mm_ioctl_#t~ret122.offset := mraid_mm_get_adapter_#res.base, mraid_mm_get_adapter_#res.offset;
    mraid_mm_ioctl_~adp~123.base, mraid_mm_ioctl_~adp~123.offset := mraid_mm_ioctl_#t~ret122.base, mraid_mm_ioctl_#t~ret122.offset;
    havoc mraid_mm_ioctl_#t~ret122.base, mraid_mm_ioctl_#t~ret122.offset;
    assume (18446744073709551616 <= mraid_mm_ioctl_~adp~123.offset + mraid_mm_ioctl_~adp~123.base && mraid_mm_ioctl_~adp~123.offset + mraid_mm_ioctl_~adp~123.base < 18446744073709551616 + 18446744073709551616) && !(mraid_mm_ioctl_~adp~123.offset + mraid_mm_ioctl_~adp~123.base - 18446744073709551616 == 0);
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mraid_mm_ioctl_~adp~123.base, mraid_mm_ioctl_~adp~123.offset + 35, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mraid_mm_ioctl_#t~mem124 := read~int_#value;
    assume !(mraid_mm_ioctl_#t~mem124 % 4294967296 == 0) && 4294967296 + 4294967296 <= mraid_mm_ioctl_#t~mem124;
    havoc mraid_mm_ioctl_#t~mem124;
    mraid_mm_alloc_kioc_#in~adp.base, mraid_mm_alloc_kioc_#in~adp.offset := mraid_mm_ioctl_~adp~123.base, mraid_mm_ioctl_~adp~123.offset;
    havoc mraid_mm_alloc_kioc_#res.offset, mraid_mm_alloc_kioc_#res.base;
    havoc mraid_mm_alloc_kioc_#t~memset261.offset, mraid_mm_alloc_kioc_#t~mem260, mraid_mm_alloc_kioc_#t~memset261.base, mraid_mm_alloc_kioc_#t~memset263.base, mraid_mm_alloc_kioc_~__mptr~239.base, mraid_mm_alloc_kioc_#t~mem262.base, mraid_mm_alloc_kioc_#t~memset263.offset, mraid_mm_alloc_kioc_~head~239.offset, mraid_mm_alloc_kioc_~kioc~239.base, mraid_mm_alloc_kioc_#t~mem259.base, mraid_mm_alloc_kioc_~adp.offset, mraid_mm_alloc_kioc_~flags~239, mraid_mm_alloc_kioc_~adp.base, mraid_mm_alloc_kioc_#t~mem259.offset, mraid_mm_alloc_kioc_~tmp~239, mraid_mm_alloc_kioc_#t~nondet257.offset, mraid_mm_alloc_kioc_#t~mem262.offset, mraid_mm_alloc_kioc_#t~ret256, mraid_mm_alloc_kioc_~__mptr~239.offset, mraid_mm_alloc_kioc_~kioc~239.offset, mraid_mm_alloc_kioc_#t~nondet257.base, mraid_mm_alloc_kioc_~head~239.base, mraid_mm_alloc_kioc_#t~ret258;
    mraid_mm_alloc_kioc_~adp.base, mraid_mm_alloc_kioc_~adp.offset := mraid_mm_alloc_kioc_#in~adp.base, mraid_mm_alloc_kioc_#in~adp.offset;
    havoc mraid_mm_alloc_kioc_~kioc~239.offset, mraid_mm_alloc_kioc_~kioc~239.base;
    havoc mraid_mm_alloc_kioc_~head~239.offset, mraid_mm_alloc_kioc_~head~239.base;
    havoc mraid_mm_alloc_kioc_~flags~239;
    havoc mraid_mm_alloc_kioc_~tmp~239;
    havoc mraid_mm_alloc_kioc_~__mptr~239.base, mraid_mm_alloc_kioc_~__mptr~239.offset;
    down_#in~71.offset, down_#in~71.base := mraid_mm_alloc_kioc_~adp.offset + 147, mraid_mm_alloc_kioc_~adp.base;
    ~ldv_spin := 1;
    mraid_mm_alloc_kioc_~head~239.offset, mraid_mm_alloc_kioc_~head~239.base := mraid_mm_alloc_kioc_~adp.offset + 63, mraid_mm_alloc_kioc_~adp.base;
    list_empty_#in~head.offset, list_empty_#in~head.base := mraid_mm_alloc_kioc_~head~239.offset, mraid_mm_alloc_kioc_~head~239.base;
    havoc list_empty_#res;
    havoc list_empty_#t~mem9.offset, list_empty_~head.base, list_empty_~head.offset, list_empty_#t~mem9.base;
    list_empty_~head.base, list_empty_~head.offset := list_empty_#in~head.base, list_empty_#in~head.offset;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := list_empty_~head.base, 8, list_empty_~head.offset;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    list_empty_#t~mem9.offset, list_empty_#t~mem9.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    assume (((list_empty_#t~mem9.base + list_empty_#t~mem9.offset + 18446744073709551616 == list_empty_~head.offset + list_empty_~head.base + 18446744073709551616 && list_empty_#t~mem9.base + list_empty_#t~mem9.offset < 0) && -18446744073709551616 <= list_empty_#t~mem9.base + list_empty_#t~mem9.offset) && -18446744073709551616 <= list_empty_~head.offset + list_empty_~head.base) && list_empty_~head.offset + list_empty_~head.base < 0;
    list_empty_#res := 1;
    havoc list_empty_#t~mem9.offset, list_empty_#t~mem9.base;
    mraid_mm_alloc_kioc_#t~ret256 := list_empty_#res;
    assume mraid_mm_alloc_kioc_#t~ret256 <= 2147483647 && 0 <= mraid_mm_alloc_kioc_#t~ret256 + 2147483648;
    mraid_mm_alloc_kioc_~tmp~239 := mraid_mm_alloc_kioc_#t~ret256;
    havoc mraid_mm_alloc_kioc_#t~ret256;
    assume !(mraid_mm_alloc_kioc_~tmp~239 == 0);
    up_#in~72.base, up_#in~72.offset := mraid_mm_alloc_kioc_~adp.base, mraid_mm_alloc_kioc_~adp.offset + 147;
    spin_unlock_irqrestore_#in~flags, spin_unlock_irqrestore_#in~lock.offset, spin_unlock_irqrestore_#in~lock.base := mraid_mm_alloc_kioc_~flags~239, mraid_mm_alloc_kioc_~adp.offset + 79, mraid_mm_alloc_kioc_~adp.base;
    havoc spin_unlock_irqrestore_~flags, spin_unlock_irqrestore_~lock.base, spin_unlock_irqrestore_~lock.offset;
    spin_unlock_irqrestore_~lock.base, spin_unlock_irqrestore_~lock.offset := spin_unlock_irqrestore_#in~lock.base, spin_unlock_irqrestore_#in~lock.offset;
    spin_unlock_irqrestore_~flags := spin_unlock_irqrestore_#in~flags;
    ~ldv_spin := 0;
    ldv_spin_unlock_irqrestore_8_#in~lock.base, ldv_spin_unlock_irqrestore_8_#in~flags, ldv_spin_unlock_irqrestore_8_#in~lock.offset := spin_unlock_irqrestore_~lock.base, spin_unlock_irqrestore_~flags, spin_unlock_irqrestore_~lock.offset;
    havoc ldv_spin_unlock_irqrestore_8_~flags, ldv_spin_unlock_irqrestore_8_~lock.base, ldv_spin_unlock_irqrestore_8_~lock.offset;
    ldv_spin_unlock_irqrestore_8_~lock.base, ldv_spin_unlock_irqrestore_8_~lock.offset := ldv_spin_unlock_irqrestore_8_#in~lock.base, ldv_spin_unlock_irqrestore_8_#in~lock.offset;
    ldv_spin_unlock_irqrestore_8_~flags := ldv_spin_unlock_irqrestore_8_#in~flags;
    _raw_spin_unlock_irqrestore_#in~26.offset, _raw_spin_unlock_irqrestore_#in~26.base, _raw_spin_unlock_irqrestore_#in~27 := ldv_spin_unlock_irqrestore_8_~lock.offset, ldv_spin_unlock_irqrestore_8_~lock.base, ldv_spin_unlock_irqrestore_8_~flags;
    assume 0 <= ~dbglevel;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 33;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mraid_mm_alloc_kioc_#t~nondet257.offset, mraid_mm_alloc_kioc_#t~nondet257.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    printk_#in~0.offset, printk_#in~0.base := mraid_mm_alloc_kioc_#t~nondet257.offset, mraid_mm_alloc_kioc_#t~nondet257.base;
    havoc printk_#res;
    mraid_mm_alloc_kioc_#t~ret258 := printk_#res;
    assume mraid_mm_alloc_kioc_#t~ret258 <= 2147483647 && 0 <= mraid_mm_alloc_kioc_#t~ret258 + 2147483648;
    havoc mraid_mm_alloc_kioc_#t~nondet257.offset, mraid_mm_alloc_kioc_#t~nondet257.base;
    havoc mraid_mm_alloc_kioc_#t~ret258;
    mraid_mm_alloc_kioc_#res.offset, mraid_mm_alloc_kioc_#res.base := 0, 0;
    mraid_mm_ioctl_#t~ret127.base, mraid_mm_ioctl_#t~ret127.offset := mraid_mm_alloc_kioc_#res.base, mraid_mm_alloc_kioc_#res.offset;
    mraid_mm_ioctl_~kioc~123.base, mraid_mm_ioctl_~kioc~123.offset := mraid_mm_ioctl_#t~ret127.base, mraid_mm_ioctl_#t~ret127.offset;
    havoc mraid_mm_ioctl_#t~ret127.base, mraid_mm_ioctl_#t~ret127.offset;
    mimd_to_kioc_#in~adp.offset, mimd_to_kioc_#in~adp.base, mimd_to_kioc_#in~umimd.base, mimd_to_kioc_#in~kioc.base, mimd_to_kioc_#in~kioc.offset, mimd_to_kioc_#in~umimd.offset := mraid_mm_ioctl_~adp~123.offset, mraid_mm_ioctl_~adp~123.base, mraid_mm_ioctl_~argp~123.base, mraid_mm_ioctl_~kioc~123.base, mraid_mm_ioctl_~kioc~123.offset, mraid_mm_ioctl_~argp~123.offset;
    havoc mimd_to_kioc_#res;
    havoc mimd_to_kioc_~umimd.base, mimd_to_kioc_#t~mem234.offset, mimd_to_kioc_~__len~180, mimd_to_kioc_#t~mem227.base, mimd_to_kioc_~tmp___2~180, mimd_to_kioc_#t~nondet178.base, mimd_to_kioc_#t~switch172, mimd_to_kioc_#t~mem219.offset, mimd_to_kioc_#t~mem184, mimd_to_kioc_#t~mem182, mimd_to_kioc_#t~mem198, mimd_to_kioc_#t~mem196, mimd_to_kioc_#t~mem220.base, mimd_to_kioc_#t~mem216, mimd_to_kioc_#t~mem223.base, mimd_to_kioc_#t~mem203.base, mimd_to_kioc_~#mimd~180.offset, mimd_to_kioc_#t~mem218, mimd_to_kioc_#t~mem212, mimd_to_kioc_#t~mem203.offset, mimd_to_kioc_#t~mem233, mimd_to_kioc_~adapno~180, mimd_to_kioc_~__ret~180.offset, mimd_to_kioc_~tmp___5~180, mimd_to_kioc_#t~mem231, mimd_to_kioc_~__ret~180.base, mimd_to_kioc_#t~mem210, mimd_to_kioc_#t~mem185.base, mimd_to_kioc_~tmp~180, mimd_to_kioc_~pthru32~180.base, mimd_to_kioc_~kioc.offset, mimd_to_kioc_#t~memcpy214.offset, mimd_to_kioc_#t~ret228, mimd_to_kioc_#t~ret222, mimd_to_kioc_#t~mem192, mimd_to_kioc_~subopcode~180, mimd_to_kioc_#t~mem187, mimd_to_kioc_#t~mem209, mimd_to_kioc_#t~mem166, mimd_to_kioc_#t~mem168, mimd_to_kioc_#t~mem205, mimd_to_kioc_#t~mem189, mimd_to_kioc_~tmp___1~180, mimd_to_kioc_#t~mem207, mimd_to_kioc_#t~ite199, mimd_to_kioc_~mbox64~180.base, mimd_to_kioc_~tmp___4~180, mimd_to_kioc_#t~mem235.base, mimd_to_kioc_#t~memcpy214.base, mimd_to_kioc_#t~mem234.base, mimd_to_kioc_#t~ret237, mimd_to_kioc_~pthru32~180.offset, mimd_to_kioc_#t~mem162, mimd_to_kioc_~adp.offset, mimd_to_kioc_~#mimd~180.base, mimd_to_kioc_#t~mem176, mimd_to_kioc_#t~ret179, mimd_to_kioc_#t~mem223.offset, mimd_to_kioc_~opcode~180, mimd_to_kioc_#t~mem220.offset, mimd_to_kioc_#t~mem197, mimd_to_kioc_#t~mem215, mimd_to_kioc_#t~short164, mimd_to_kioc_#t~mem236, mimd_to_kioc_#t~mem235.offset, mimd_to_kioc_#t~mem232, mimd_to_kioc_#t~ret177, mimd_to_kioc_#t~mem219.base, mimd_to_kioc_~tmp___0~180, mimd_to_kioc_#t~ret213.offset, mimd_to_kioc_#t~nondet178.offset, mimd_to_kioc_~mbox~180.offset, mimd_to_kioc_~kioc.base, mimd_to_kioc_~tmp___3~180, mimd_to_kioc_#t~mem227.offset, mimd_to_kioc_~umimd.offset, mimd_to_kioc_#t~mem191, mimd_to_kioc_#t~ret206, mimd_to_kioc_~mbox~180.base, mimd_to_kioc_#t~mem195, mimd_to_kioc_#t~mem163, mimd_to_kioc_#t~mem165, mimd_to_kioc_#t~ret213.base, mimd_to_kioc_~adp.base, mimd_to_kioc_#t~mem167, mimd_to_kioc_#t~mem185.offset, mimd_to_kioc_#t~mem229, mimd_to_kioc_#t~mem202, mimd_to_kioc_#t~mem225, mimd_to_kioc_#t~ret161, mimd_to_kioc_~mbox64~180.offset, mimd_to_kioc_#t~ret188, mimd_to_kioc_#t~mem221;
    mimd_to_kioc_~umimd.base, mimd_to_kioc_~umimd.offset := mimd_to_kioc_#in~umimd.base, mimd_to_kioc_#in~umimd.offset;
    mimd_to_kioc_~adp.base, mimd_to_kioc_~adp.offset := mimd_to_kioc_#in~adp.base, mimd_to_kioc_#in~adp.offset;
    mimd_to_kioc_~kioc.base, mimd_to_kioc_~kioc.offset := mimd_to_kioc_#in~kioc.base, mimd_to_kioc_#in~kioc.offset;
    havoc mimd_to_kioc_~mbox64~180.offset, mimd_to_kioc_~mbox64~180.base;
    havoc mimd_to_kioc_~mbox~180.offset, mimd_to_kioc_~mbox~180.base;
    havoc mimd_to_kioc_~pthru32~180.base, mimd_to_kioc_~pthru32~180.offset;
    havoc mimd_to_kioc_~adapno~180;
    havoc mimd_to_kioc_~opcode~180;
    havoc mimd_to_kioc_~subopcode~180;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 113;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    mimd_to_kioc_~#mimd~180.offset, mimd_to_kioc_~#mimd~180.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc mimd_to_kioc_~tmp~180;
    havoc mimd_to_kioc_~tmp___0~180;
    havoc mimd_to_kioc_~tmp___1~180;
    havoc mimd_to_kioc_~tmp___2~180;
    havoc mimd_to_kioc_~__len~180;
    havoc mimd_to_kioc_~__ret~180.offset, mimd_to_kioc_~__ret~180.base;
    havoc mimd_to_kioc_~tmp___3~180;
    havoc mimd_to_kioc_~tmp___4~180;
    havoc mimd_to_kioc_~tmp___5~180;
    copy_from_user_#in~from.offset, copy_from_user_#in~to.offset, copy_from_user_#in~from.base, copy_from_user_#in~to.base, copy_from_user_#in~n := mimd_to_kioc_~umimd.offset, mimd_to_kioc_~#mimd~180.offset, mimd_to_kioc_~umimd.base, mimd_to_kioc_~#mimd~180.base, 110;
    havoc copy_from_user_#res;
    havoc copy_from_user_#t~ret82, copy_from_user_#t~ret83, copy_from_user_~tmp___0~77, copy_from_user_~from.offset, copy_from_user_~to.base, copy_from_user_~from.base, copy_from_user_~tmp~77, copy_from_user_#t~ret84, copy_from_user_#t~ret85, copy_from_user_~tmp___1~77, copy_from_user_~sz~77, copy_from_user_~to.offset, copy_from_user_~n;
    copy_from_user_~to.base, copy_from_user_~to.offset := copy_from_user_#in~to.base, copy_from_user_#in~to.offset;
    copy_from_user_~from.offset, copy_from_user_~from.base := copy_from_user_#in~from.offset, copy_from_user_#in~from.base;
    copy_from_user_~n := copy_from_user_#in~n;
    havoc copy_from_user_~sz~77;
    havoc copy_from_user_~tmp~77;
    havoc copy_from_user_~tmp___0~77;
    havoc copy_from_user_~tmp___1~77;
    copy_from_user_~tmp~77 := 0;
    assume !(copy_from_user_~tmp~77 % 4294967296 <= 2147483647) && copy_from_user_~tmp~77 < -4294967296;
    copy_from_user_~sz~77 := copy_from_user_~tmp~77 % 4294967296 - 4294967296;
    assume !(copy_from_user_~sz~77 < 0);
    ldv__builtin_expect_#in~c, ldv__builtin_expect_#in~exp := 1, 0;
    havoc ldv__builtin_expect_#res;
    havoc ldv__builtin_expect_~c, ldv__builtin_expect_~exp;
    ldv__builtin_expect_~exp := ldv__builtin_expect_#in~exp;
    ldv__builtin_expect_~c := ldv__builtin_expect_#in~c;
    ldv__builtin_expect_#res := ldv__builtin_expect_~exp;
    copy_from_user_#t~ret82 := ldv__builtin_expect_#res;
    assume copy_from_user_#t~ret82 <= 9223372036854775807 && 0 <= copy_from_user_#t~ret82 + 9223372036854775808;
    copy_from_user_~tmp___0~77 := copy_from_user_#t~ret82;
    havoc copy_from_user_#t~ret82;
    assume !(copy_from_user_~tmp___0~77 == 0);
    _copy_from_user_#in~77.base, _copy_from_user_#in~78, _copy_from_user_#in~76.base, _copy_from_user_#in~77.offset, _copy_from_user_#in~76.offset := copy_from_user_~from.base, copy_from_user_~n, copy_from_user_~to.base, copy_from_user_~from.offset, copy_from_user_~to.offset;
    havoc _copy_from_user_#res;
    copy_from_user_#t~ret83 := _copy_from_user_#res;
    copy_from_user_~n := copy_from_user_#t~ret83;
    havoc copy_from_user_#t~ret83;
    copy_from_user_#res := copy_from_user_~n;
    mimd_to_kioc_#t~ret161 := copy_from_user_#res;
    mimd_to_kioc_~tmp~180 := mimd_to_kioc_#t~ret161;
    havoc mimd_to_kioc_#t~ret161;
    assume 18446744073709551616 + 18446744073709551616 <= mimd_to_kioc_~tmp~180 && mimd_to_kioc_~tmp~180 % 18446744073709551616 == 0;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~#mimd~180.base, mimd_to_kioc_~#mimd~180.offset + 24, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem162 := read~int_#value;
    assume (0 <= mimd_to_kioc_#t~mem162 && !(mimd_to_kioc_#t~mem162 == 195)) && mimd_to_kioc_#t~mem162 < 256;
    mimd_to_kioc_#t~short164 := false;
    assume !mimd_to_kioc_#t~short164;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~#mimd~180.base, mimd_to_kioc_~#mimd~180.offset + 24, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem163 := read~int_#value;
    assume (mimd_to_kioc_#t~mem163 < 256 && !(mimd_to_kioc_#t~mem163 == 227)) && 0 <= mimd_to_kioc_#t~mem163;
    mimd_to_kioc_#t~short164 := false;
    assume !mimd_to_kioc_#t~short164;
    havoc mimd_to_kioc_#t~mem162;
    havoc mimd_to_kioc_#t~mem163;
    havoc mimd_to_kioc_#t~short164;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~#mimd~180.base, mimd_to_kioc_~#mimd~180.offset + 8, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem165 := read~int_#value;
    mimd_to_kioc_~opcode~180 := mimd_to_kioc_#t~mem165;
    havoc mimd_to_kioc_#t~mem165;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~#mimd~180.base, mimd_to_kioc_~#mimd~180.offset + 9, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem166 := read~int_#value;
    mimd_to_kioc_~subopcode~180 := mimd_to_kioc_#t~mem166;
    havoc mimd_to_kioc_#t~mem166;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~#mimd~180.base, mimd_to_kioc_~#mimd~180.offset + 10, 2;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem167 := read~int_#value;
    havoc mimd_to_kioc_~adapno~180;
    havoc mimd_to_kioc_#t~mem167;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := ~#adapters_count_g.base, ~#adapters_count_g.offset, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem168 := read~int_#value;
    assume (!(mimd_to_kioc_#t~mem168 % 4294967296 <= mimd_to_kioc_~adapno~180 % 4294967296) && mimd_to_kioc_#t~mem168 < -4294967296) && 4294967296 + 4294967296 <= mimd_to_kioc_~adapno~180;
    havoc mimd_to_kioc_#t~mem168;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mimd_to_kioc_~kioc.base, mimd_to_kioc_~adapno~180, mimd_to_kioc_~kioc.offset + 24;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, mimd_to_kioc_~kioc.base, 0, mimd_to_kioc_~kioc.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, mimd_to_kioc_~kioc.base, 0, mimd_to_kioc_~kioc.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume (0 <= mimd_to_kioc_~opcode~180 && mimd_to_kioc_~opcode~180 < 256) && mimd_to_kioc_~opcode~180 == 130;
    mimd_to_kioc_#t~switch172 := true;
    assume mimd_to_kioc_#t~switch172;
    assume 256 + 256 <= mimd_to_kioc_~subopcode~180 && mimd_to_kioc_~subopcode~180 % 256 == 103;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mimd_to_kioc_~kioc.base, 196608, mimd_to_kioc_~kioc.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mimd_to_kioc_~kioc.base, 1, mimd_to_kioc_~kioc.offset + 40;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, mimd_to_kioc_~kioc.base, 256, mimd_to_kioc_~kioc.offset + 36;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := mimd_to_kioc_~kioc.base, mimd_to_kioc_~kioc.offset + 36, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    mimd_to_kioc_#t~mem176 := read~int_#value;
    assume (4294967296 <= mimd_to_kioc_#t~mem176 && mimd_to_kioc_#t~mem176 <= 6442450943) && mimd_to_kioc_#t~mem176 < 4294967296 + 4294967296;
    mraid_mm_attach_buf_#in~adp.base, mraid_mm_attach_buf_#in~xferlen, mraid_mm_attach_buf_#in~adp.offset, mraid_mm_attach_buf_#in~kioc.base, mraid_mm_attach_buf_#in~kioc.offset := mimd_to_kioc_~adp.base, mimd_to_kioc_#t~mem176 - 4294967296, mimd_to_kioc_~adp.offset, mimd_to_kioc_~kioc.base, mimd_to_kioc_~kioc.offset;
    havoc mraid_mm_attach_buf_#res;
    havoc mraid_mm_attach_buf_#t~mem255.offset, mraid_mm_attach_buf_#t~mem252.offset, mraid_mm_attach_buf_#t~ret253.offset, mraid_mm_attach_buf_~adp.offset, mraid_mm_attach_buf_~pool~225.offset, mraid_mm_attach_buf_~kioc.base, mraid_mm_attach_buf_~flags~225, mraid_mm_attach_buf_#t~mem249, mraid_mm_attach_buf_~i~225, mraid_mm_attach_buf_#t~mem242, mraid_mm_attach_buf_#t~mem243, mraid_mm_attach_buf_~kioc.offset, mraid_mm_attach_buf_#t~mem247.offset, mraid_mm_attach_buf_#t~mem247.base, mraid_mm_attach_buf_~xferlen, mraid_mm_attach_buf_#t~ret253.base, mraid_mm_attach_buf_~right_pool~225, mraid_mm_attach_buf_~adp.base, mraid_mm_attach_buf_#t~mem252.base, mraid_mm_attach_buf_#t~mem255.base, mraid_mm_attach_buf_~pool~225.base, mraid_mm_attach_buf_~tmp~225.base, mraid_mm_attach_buf_~tmp~225.offset;
    mraid_mm_attach_buf_~adp.offset, mraid_mm_attach_buf_~adp.base := mraid_mm_attach_buf_#in~adp.offset, mraid_mm_attach_buf_#in~adp.base;
    mraid_mm_attach_buf_~kioc.offset, mraid_mm_attach_buf_~kioc.base := mraid_mm_attach_buf_#in~kioc.offset, mraid_mm_attach_buf_#in~kioc.base;
    mraid_mm_attach_buf_~xferlen := mraid_mm_attach_buf_#in~xferlen;
    havoc mraid_mm_attach_buf_~pool~225.offset, mraid_mm_attach_buf_~pool~225.base;
    havoc mraid_mm_attach_buf_~right_pool~225;
    havoc mraid_mm_attach_buf_~flags~225;
    havoc mraid_mm_attach_buf_~i~225;
    havoc mraid_mm_attach_buf_~tmp~225.base, mraid_mm_attach_buf_~tmp~225.offset;
    mraid_mm_attach_buf_~right_pool~225 := -1;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, mraid_mm_attach_buf_~kioc.base, -1, mraid_mm_attach_buf_~kioc.offset + 256;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, mraid_mm_attach_buf_~kioc.offset + 240, 8, 0, mraid_mm_attach_buf_~kioc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, mraid_mm_attach_buf_~kioc.base, 0, mraid_mm_attach_buf_~kioc.offset + 248;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, mraid_mm_attach_buf_~kioc.base, 0, mraid_mm_attach_buf_~kioc.offset + 257;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    mraid_mm_attach_buf_~i~225 := 0;
    assume !(mraid_mm_attach_buf_~i~225 <= 4);
    assume !(mraid_mm_attach_buf_~right_pool~225 == -1);
    assume (mraid_mm_attach_buf_~right_pool~225 < 0 && -18446744073709551616 <= mraid_mm_attach_buf_~right_pool~225) && !(mraid_mm_attach_buf_~right_pool~225 + 9223372036854775809 <= 0);
    mraid_mm_attach_buf_~pool~225.offset, mraid_mm_attach_buf_~pool~225.base := mraid_mm_attach_buf_~adp.offset + 97 * mraid_mm_attach_buf_~right_pool~225 + 247, mraid_mm_attach_buf_~adp.base;
    ~ldv_spin := 1;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    assume mraid_mm_attach_buf_~right_pool~225 < -256 && !(mraid_mm_attach_buf_~right_pool~225 % 256 <= 127);
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, mraid_mm_attach_buf_~kioc.base, mraid_mm_attach_buf_~right_pool~225 % 256 - 256, mraid_mm_attach_buf_~kioc.offset + 256;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, mraid_mm_attach_buf_~kioc.base, 1, mraid_mm_attach_buf_~kioc.offset + 257;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := mraid_mm_attach_buf_~pool~225.base, 8, mraid_mm_attach_buf_~pool~225.offset + 20;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    mraid_mm_attach_buf_#t~mem252.offset, mraid_mm_attach_buf_#t~mem252.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    ldv_dma_pool_alloc_20_#in~ldv_func_arg1.offset, ldv_dma_pool_alloc_20_#in~flags, ldv_dma_pool_alloc_20_#in~ldv_func_arg1.base, ldv_dma_pool_alloc_20_#in~ldv_func_arg3.offset, ldv_dma_pool_alloc_20_#in~ldv_func_arg3.base := mraid_mm_attach_buf_#t~mem252.offset, 208, mraid_mm_attach_buf_#t~mem252.base, mraid_mm_attach_buf_~kioc.offset + 248, mraid_mm_attach_buf_~kioc.base;
    havoc ldv_dma_pool_alloc_20_#res.offset, ldv_dma_pool_alloc_20_#res.base;
    havoc ldv_dma_pool_alloc_20_~ldv_func_arg1.base, ldv_dma_pool_alloc_20_~flags, ldv_dma_pool_alloc_20_~ldv_func_arg3.offset, ldv_dma_pool_alloc_20_#t~ret490.offset, ldv_dma_pool_alloc_20_~ldv_func_arg3.base, ldv_dma_pool_alloc_20_~ldv_func_arg1.offset, ldv_dma_pool_alloc_20_#t~ret490.base;
    ldv_dma_pool_alloc_20_~ldv_func_arg1.base, ldv_dma_pool_alloc_20_~ldv_func_arg1.offset := ldv_dma_pool_alloc_20_#in~ldv_func_arg1.base, ldv_dma_pool_alloc_20_#in~ldv_func_arg1.offset;
    ldv_dma_pool_alloc_20_~flags := ldv_dma_pool_alloc_20_#in~flags;
    ldv_dma_pool_alloc_20_~ldv_func_arg3.offset, ldv_dma_pool_alloc_20_~ldv_func_arg3.base := ldv_dma_pool_alloc_20_#in~ldv_func_arg3.offset, ldv_dma_pool_alloc_20_#in~ldv_func_arg3.base;
    ldv_check_alloc_flags_#in~flags := ldv_dma_pool_alloc_20_~flags;
    havoc ldv_check_alloc_flags_~flags;
    ldv_check_alloc_flags_~flags := ldv_check_alloc_flags_#in~flags;
    assume !(~ldv_spin == 0);
    goto loc6;
  loc5_1:
    assume !main_#t~switch483;
    assume main_~tmp___7~395 == 1;
    main_#t~switch483 := true;
    assume !main_#t~switch483;
    assume main_~tmp___7~395 == 2;
    main_#t~switch483 := true;
    assume main_#t~switch483;
    assume ~ldv_state_variable_2 == 1;
    mraid_mm_open_#in~inode.base, mraid_mm_open_#in~inode.offset, mraid_mm_open_#in~filep.base, mraid_mm_open_#in~filep.offset := ~lsi_fops_group1.base, ~lsi_fops_group1.offset, ~lsi_fops_group2.base, ~lsi_fops_group2.offset;
    havoc mraid_mm_open_#res;
    havoc mraid_mm_open_~filep.offset, mraid_mm_open_~filep.base, mraid_mm_open_~inode.base, mraid_mm_open_~tmp~117, mraid_mm_open_#t~ret107, mraid_mm_open_~inode.offset, mraid_mm_open_~tmp___0~117;
    mraid_mm_open_~inode.base, mraid_mm_open_~inode.offset := mraid_mm_open_#in~inode.base, mraid_mm_open_#in~inode.offset;
    mraid_mm_open_~filep.offset, mraid_mm_open_~filep.base := mraid_mm_open_#in~filep.offset, mraid_mm_open_#in~filep.base;
    havoc mraid_mm_open_~tmp~117;
    havoc mraid_mm_open_~tmp___0~117;
    capable_#in~51 := 21;
    havoc capable_#res;
    mraid_mm_open_#t~ret107 := capable_#res;
    mraid_mm_open_~tmp~117 := mraid_mm_open_#t~ret107;
    havoc mraid_mm_open_#t~ret107;
    assume (mraid_mm_open_~tmp~117 < 0 && -256 <= mraid_mm_open_~tmp~117) && !(mraid_mm_open_~tmp~117 + 256 == 0);
    mraid_mm_open_~tmp___0~117 := 0;
    assume mraid_mm_open_~tmp___0~117 == 0;
    mraid_mm_open_#res := 0;
    main_#t~ret486 := mraid_mm_open_#res;
    assume 0 <= main_#t~ret486 + 2147483648 && main_#t~ret486 <= 2147483647;
    ~ldv_retval_1 := main_#t~ret486;
    havoc main_#t~ret486;
    assume ~ldv_retval_1 == 0;
    ~ldv_state_variable_2 := 2;
    ~ref_cnt := ~ref_cnt + 1;
    goto loc1;
  loc6:
    assert false;
}


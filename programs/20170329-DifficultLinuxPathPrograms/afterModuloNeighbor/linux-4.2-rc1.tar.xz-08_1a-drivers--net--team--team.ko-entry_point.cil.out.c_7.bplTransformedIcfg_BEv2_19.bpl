var v_rep#funAddr~team_add_slave.offset_1 : int;

var v_rep#funAddr~team_notify_peers_count_set.base_1 : int;

var v_rep#funAddr~team_netpoll_setup.base_1 : int;

var ~#team_tx_busylock_key.offset : int;

var v_rep#funAddr~team_newlink.base_1 : int;

var v_rep#funAddr~team_del_slave.base_1 : int;

var v_rep#funAddr~switchdev_port_fdb_dump.offset_1 : int;

var v_rep#funAddr~team_nl_cmd_options_get.base_1 : int;

var ~#team_nl_ops.base : int;

var v_rep#funAddr~team_mcast_rejoin_count_get.base_1 : int;

var v_rep#funAddr~team_fix_features.offset_1 : int;

var v_rep#funAddr~team_change_rx_flags.offset_1 : int;

var v_rep#funAddr~switchdev_port_fdb_dump.base_1 : int;

var ~team_ethtool_ops_group0.base : int;

var ~#team_options.offset : int;

var v_rep#funAddr~team_dummy_receive.base_1 : int;

var v_rep#funAddr~team_select_queue.base_1 : int;

var ~team_link_ops_group2.offset : int;

var ~#__team_no_mode.offset : int;

var ~#team_link_ops.base : int;

var ~ldv_state_variable_0 : int;

var v_rep#funAddr~team_user_linkup_option_set.offset_1 : int;

var v_rep#funAddr~passthru_features_check.base_1 : int;

var ~ref_cnt : int;

var v_rep#funAddr~team_user_linkup_en_option_get.offset_1 : int;

var ~ldv_state_variable_1 : int;

var ~#team_ethtool_ops.base : int;

var ~#team_notifier_block.offset : int;

var ~ldv_work_struct_1_2.offset : int;

var v_rep#funAddr~team_set_rx_mode.offset_1 : int;

var v_rep#funAddr~team_nl_cmd_options_set.base_1 : int;

var v_rep#funAddr~team_poll_controller.offset_1 : int;

var #memory_$Pointer$.base : [int][int]int;

var ~#__team_no_mode.base : int;

var v_rep#funAddr~team_device_event.base_1 : int;

var v_rep#funAddr~team_vlan_rx_kill_vid.base_1 : int;

var v_rep#funAddr~team_netpoll_setup.offset_1 : int;

var ~team_link_ops_group1.offset : int;

var ~#team_nl_family.offset : int;

var ~#team_ethtool_ops.offset : int;

var v_rep#funAddr~switchdev_port_fdb_del.base_1 : int;

var v_rep#funAddr~switchdev_port_bridge_dellink.base_1 : int;

var ~team_ethtool_ops_group0.offset : int;

var ~ldv_retval_0 : int;

var v_rep#funAddr~team_fix_features.base_1 : int;

var v_rep#funAddr~team_change_carrier.base_1 : int;

var ~#team_netdev_xmit_lock_key.base : int;

var v_rep#funAddr~team_dummy_transmit.offset_1 : int;

var v_rep#funAddr~team_mcast_rejoin_interval_get.base_1 : int;

var v_rep#funAddr~team_change_carrier.offset_1 : int;

var ~#mode_list.offset : int;

var v_rep#funAddr~team_uninit.offset_1 : int;

var v_rep#funAddr~team_setup.base_1 : int;

var ~ldv_retval_1 : int;

var ~ldv_work_struct_1_1.offset : int;

var v_rep#funAddr~team_user_linkup_en_option_set.offset_1 : int;

var v_rep#funAddr~team_user_linkup_en_option_get.base_1 : int;

var v_rep#funAddr~team_user_linkup_option_get.offset_1 : int;

var v_rep#funAddr~switchdev_port_fdb_add.base_1 : int;

var v_rep#funAddr~team_nl_cmd_noop.offset_1 : int;

var ~#team_options.base : int;

var ~ldv_retval_2 : int;

var v_rep#funAddr~switchdev_port_bridge_setlink.base_1 : int;

var v_rep#funAddr~team_mcast_rejoin_interval_get.offset_1 : int;

var v_rep#funAddr~team_nl_cmd_options_set.offset_1 : int;

var v_rep#funAddr~team_mcast_rejoin_count_set.offset_1 : int;

var v_rep#funAddr~team_open.offset_1 : int;

var v_rep#funAddr~team_get_num_rx_queues.offset_1 : int;

var ~#team_netdev_ops.offset : int;

var v_rep#funAddr~team_mcast_rejoin_count_get.offset_1 : int;

var v_rep#funAddr~team_select_queue.offset_1 : int;

var ~ldv_module_refcounter : int;

var ~#team_netdev_xmit_lock_key.offset : int;

var ~#team_netdev_ops.base : int;

var v_rep#funAddr~switchdev_port_bridge_setlink.offset_1 : int;

var v_rep#funAddr~team_close.offset_1 : int;

var v_rep#funAddr~team_close.base_1 : int;

var v_rep#funAddr~switchdev_port_bridge_getlink.offset_1 : int;

var v_rep#funAddr~team_get_num_tx_queues.base_1 : int;

var v_rep#funAddr~team_change_rx_flags.base_1 : int;

var v_rep#funAddr~team_nl_cmd_options_get.offset_1 : int;

var ~ldv_work_struct_2_0.base : int;

var v_rep#funAddr~switchdev_port_fdb_del.offset_1 : int;

var ~#mode_list_lock.offset : int;

var v_rep#funAddr~team_user_linkup_en_option_set.base_1 : int;

var ~#mode_list.base : int;

var ~ldv_work_1_3 : int;

var ~ldv_work_2_0 : int;

var v_rep#funAddr~team_mcast_rejoin_interval_set.base_1 : int;

var ~ldv_state_variable_6 : int;

var v_rep#funAddr~team_netpoll_cleanup.offset_1 : int;

var v_rep#funAddr~team_notify_peers_interval_get.offset_1 : int;

var v_rep#funAddr~team_mode_option_get.offset_1 : int;

var v_rep#funAddr~team_device_event.offset_1 : int;

var ~team_link_ops_group1.base : int;

var v_rep#funAddr~team_ethtool_get_drvinfo.base_1 : int;

var v_rep#funAddr~ethtool_op_get_link.offset_1 : int;

var ~#team_nl_ops.offset : int;

var v_rep#funAddr~team_notify_peers_interval_set.offset_1 : int;

var v_rep#funAddr~team_change_mtu.base_1 : int;

var ~ldv_work_1_2 : int;

var ~ldv_work_struct_1_3.offset : int;

var v_rep#funAddr~team_notify_peers_count_get.offset_1 : int;

var ~#team_nl_option_policy.base : int;

var v_rep#funAddr~team_ethtool_get_drvinfo.offset_1 : int;

var #memory_$Pointer$.offset : [int][int]int;

var v_rep#funAddr~team_nl_cmd_noop.base_1 : int;

var v_rep#funAddr~team_set_mac_address.offset_1 : int;

var v_rep#funAddr~team_newlink.offset_1 : int;

var ~team_netdev_ops_group1.offset : int;

var v_rep#funAddr~team_mcast_rejoin_interval_set.offset_1 : int;

var ~#team_nl_policy.offset : int;

var v_rep#funAddr~team_validate.offset_1 : int;

var ~ldv_work_1_1 : int;

var v_rep#funAddr~team_init.offset_1 : int;

var v_rep#funAddr~team_change_mtu.offset_1 : int;

var v_rep#funAddr~ethtool_op_get_link.base_1 : int;

var v_rep#funAddr~team_uninit.base_1 : int;

var ~#team_nl_policy.base : int;

var v_rep#funAddr~team_vlan_rx_add_vid.base_1 : int;

var ~#mode_list_lock.base : int;

var v_rep#funAddr~team_notify_peers_interval_set.base_1 : int;

var ~#team_netdev_addr_lock_key.base : int;

var ~ldv_work_1_0 : int;

var v_rep#funAddr~team_notify_peers_count_set.offset_1 : int;

var ~#team_tx_busylock_key.base : int;

var v_rep#funAddr~team_netpoll_cleanup.base_1 : int;

var #valid : [int]int;

var v_rep#funAddr~team_mode_option_set.offset_1 : int;

var ~#team_notifier_block.base : int;

var v_rep#funAddr~team_set_mac_address.base_1 : int;

var v_rep#funAddr~switchdev_port_fdb_add.offset_1 : int;

var #NULL.offset : int;

var v_rep#funAddr~team_nl_cmd_port_list_get.base_1 : int;

var v_rep#funAddr~switchdev_port_bridge_getlink.base_1 : int;

var v_rep#funAddr~team_del_slave.offset_1 : int;

var v_rep#funAddr~team_validate.base_1 : int;

var v_rep#funAddr~team_port_en_option_get.base_1 : int;

var v_rep#funAddr~team_setup.offset_1 : int;

var ~ldv_work_struct_1_3.base : int;

var ~ldv_state_variable_2 : int;

var v_rep#funAddr~team_init.base_1 : int;

var v_rep#funAddr~team_queue_id_option_get.base_1 : int;

var ~ldv_work_struct_2_0.offset : int;

var v_rep#funAddr~team_xmit.offset_1 : int;

var #length : [int]int;

var v_rep#funAddr~team_priority_option_get.base_1 : int;

var v_rep#funAddr~switchdev_port_bridge_dellink.offset_1 : int;

var ~ldv_work_struct_1_0.base : int;

var ~#team_link_ops.offset : int;

var v_rep#funAddr~team_get_num_rx_queues.base_1 : int;

var v_rep#funAddr~team_get_num_tx_queues.offset_1 : int;

var v_rep#funAddr~team_dummy_transmit.base_1 : int;

var ~ldv_work_2_3 : int;

var v_rep#funAddr~team_mode_option_get.base_1 : int;

var ~#team_nl_mcgrps.offset : int;

var ~ldv_state_variable_3 : int;

var ~team_link_ops_group0.base : int;

var v_rep#funAddr~team_dummy_receive.offset_1 : int;

var v_rep#funAddr~team_notify_peers_count_get.base_1 : int;

var v_rep#funAddr~team_port_en_option_get.offset_1 : int;

var v_rep#funAddr~team_queue_id_option_get.offset_1 : int;

var v_rep#funAddr~passthru_features_check.offset_1 : int;

var v_rep#funAddr~team_priority_option_set.offset_1 : int;

var v_rep#funAddr~team_xmit.base_1 : int;

var ~team_link_ops_group2.base : int;

var v_rep#funAddr~team_nl_cmd_port_list_get.offset_1 : int;

var ~ldv_work_2_2 : int;

var v_rep#funAddr~team_queue_id_option_set.base_1 : int;

var v_rep#funAddr~team_queue_id_option_set.offset_1 : int;

var v_rep#funAddr~team_notify_peers_interval_get.base_1 : int;

var ~#team_nl_family.base : int;

var v_rep#funAddr~team_get_stats64.base_1 : int;

var v_rep#funAddr~team_get_stats64.offset_1 : int;

var ~#team_nl_option_policy.offset : int;

var ~ldv_state_variable_4 : int;

var ~#team_nl_mcgrps.base : int;

var v_rep#funAddr~team_user_linkup_option_set.base_1 : int;

var ~ldv_work_struct_1_1.base : int;

var v_rep#funAddr~team_priority_option_set.base_1 : int;

var v_rep#funAddr~team_vlan_rx_kill_vid.offset_1 : int;

var v_rep#funAddr~team_add_slave.base_1 : int;

var v_rep#funAddr~team_poll_controller.base_1 : int;

var v_rep#funAddr~team_user_linkup_option_get.base_1 : int;

var v_rep#funAddr~team_vlan_rx_add_vid.offset_1 : int;

var v_rep#funAddr~team_port_en_option_set.base_1 : int;

var ~ldv_work_struct_1_0.offset : int;

var v_rep#funAddr~team_mode_option_set.base_1 : int;

var v_rep#funAddr~team_port_en_option_set.offset_1 : int;

var ~ldv_work_2_1 : int;

var v_rep#funAddr~team_priority_option_get.offset_1 : int;

var #NULL.base : int;

var v_rep#funAddr~team_mcast_rejoin_count_set.base_1 : int;

var ~#team_netdev_addr_lock_key.offset : int;

var ~ldv_state_variable_5 : int;

var ~ldv_work_struct_1_2.base : int;

var v_rep#funAddr~team_set_rx_mode.base_1 : int;

var ~team_netdev_ops_group1.base : int;

var ~team_link_ops_group0.offset : int;

var #memory_int : [int][int]int;

var v_rep#funAddr~team_open.base_1 : int;

procedure ULTIMATE.start() returns ()
modifies v_rep#funAddr~team_add_slave.offset_1, v_rep#funAddr~team_notify_peers_count_set.base_1, v_rep#funAddr~team_netpoll_setup.base_1, ~#team_tx_busylock_key.offset, v_rep#funAddr~team_newlink.base_1, v_rep#funAddr~team_del_slave.base_1, v_rep#funAddr~switchdev_port_fdb_dump.offset_1, v_rep#funAddr~team_nl_cmd_options_get.base_1, ~#team_nl_ops.base, v_rep#funAddr~team_mcast_rejoin_count_get.base_1, v_rep#funAddr~team_fix_features.offset_1, v_rep#funAddr~team_change_rx_flags.offset_1, v_rep#funAddr~switchdev_port_fdb_dump.base_1, ~team_ethtool_ops_group0.base, ~#team_options.offset, v_rep#funAddr~team_dummy_receive.base_1, v_rep#funAddr~team_select_queue.base_1, ~team_link_ops_group2.offset, ~#__team_no_mode.offset, ~#team_link_ops.base, ~ldv_state_variable_0, v_rep#funAddr~team_user_linkup_option_set.offset_1, v_rep#funAddr~passthru_features_check.base_1, ~ref_cnt, v_rep#funAddr~team_user_linkup_en_option_get.offset_1, ~ldv_state_variable_1, ~#team_ethtool_ops.base, ~#team_notifier_block.offset, ~ldv_work_struct_1_2.offset, v_rep#funAddr~team_set_rx_mode.offset_1, v_rep#funAddr~team_nl_cmd_options_set.base_1, v_rep#funAddr~team_poll_controller.offset_1, #memory_$Pointer$.base, ~#__team_no_mode.base, v_rep#funAddr~team_device_event.base_1, v_rep#funAddr~team_vlan_rx_kill_vid.base_1, v_rep#funAddr~team_netpoll_setup.offset_1, ~team_link_ops_group1.offset, ~#team_nl_family.offset, ~#team_ethtool_ops.offset, v_rep#funAddr~switchdev_port_fdb_del.base_1, v_rep#funAddr~switchdev_port_bridge_dellink.base_1, ~team_ethtool_ops_group0.offset, ~ldv_retval_0, v_rep#funAddr~team_fix_features.base_1, v_rep#funAddr~team_change_carrier.base_1, ~#team_netdev_xmit_lock_key.base, v_rep#funAddr~team_dummy_transmit.offset_1, v_rep#funAddr~team_mcast_rejoin_interval_get.base_1, v_rep#funAddr~team_change_carrier.offset_1, ~#mode_list.offset, v_rep#funAddr~team_uninit.offset_1, v_rep#funAddr~team_setup.base_1, ~ldv_retval_1, ~ldv_work_struct_1_1.offset, v_rep#funAddr~team_user_linkup_en_option_set.offset_1, v_rep#funAddr~team_user_linkup_en_option_get.base_1, v_rep#funAddr~team_user_linkup_option_get.offset_1, v_rep#funAddr~switchdev_port_fdb_add.base_1, v_rep#funAddr~team_nl_cmd_noop.offset_1, ~#team_options.base, ~ldv_retval_2, v_rep#funAddr~switchdev_port_bridge_setlink.base_1, v_rep#funAddr~team_mcast_rejoin_interval_get.offset_1, v_rep#funAddr~team_nl_cmd_options_set.offset_1, v_rep#funAddr~team_mcast_rejoin_count_set.offset_1, v_rep#funAddr~team_open.offset_1, v_rep#funAddr~team_get_num_rx_queues.offset_1, ~#team_netdev_ops.offset, v_rep#funAddr~team_mcast_rejoin_count_get.offset_1, v_rep#funAddr~team_select_queue.offset_1, ~ldv_module_refcounter, ~#team_netdev_xmit_lock_key.offset, ~#team_netdev_ops.base, v_rep#funAddr~switchdev_port_bridge_setlink.offset_1, v_rep#funAddr~team_close.offset_1, v_rep#funAddr~team_close.base_1, v_rep#funAddr~switchdev_port_bridge_getlink.offset_1, v_rep#funAddr~team_get_num_tx_queues.base_1, v_rep#funAddr~team_change_rx_flags.base_1, v_rep#funAddr~team_nl_cmd_options_get.offset_1, ~ldv_work_struct_2_0.base, v_rep#funAddr~switchdev_port_fdb_del.offset_1, ~#mode_list_lock.offset, v_rep#funAddr~team_user_linkup_en_option_set.base_1, ~#mode_list.base, ~ldv_work_1_3, ~ldv_work_2_0, v_rep#funAddr~team_mcast_rejoin_interval_set.base_1, ~ldv_state_variable_6, v_rep#funAddr~team_netpoll_cleanup.offset_1, v_rep#funAddr~team_notify_peers_interval_get.offset_1, v_rep#funAddr~team_mode_option_get.offset_1, v_rep#funAddr~team_device_event.offset_1, ~team_link_ops_group1.base, v_rep#funAddr~team_ethtool_get_drvinfo.base_1, v_rep#funAddr~ethtool_op_get_link.offset_1, ~#team_nl_ops.offset, v_rep#funAddr~team_notify_peers_interval_set.offset_1, v_rep#funAddr~team_change_mtu.base_1, ~ldv_work_1_2, ~ldv_work_struct_1_3.offset, v_rep#funAddr~team_notify_peers_count_get.offset_1, ~#team_nl_option_policy.base, v_rep#funAddr~team_ethtool_get_drvinfo.offset_1, #memory_$Pointer$.offset, v_rep#funAddr~team_nl_cmd_noop.base_1, v_rep#funAddr~team_set_mac_address.offset_1, v_rep#funAddr~team_newlink.offset_1, ~team_netdev_ops_group1.offset, v_rep#funAddr~team_mcast_rejoin_interval_set.offset_1, ~#team_nl_policy.offset, v_rep#funAddr~team_validate.offset_1, ~ldv_work_1_1, v_rep#funAddr~team_init.offset_1, v_rep#funAddr~team_change_mtu.offset_1, v_rep#funAddr~ethtool_op_get_link.base_1, v_rep#funAddr~team_uninit.base_1, ~#team_nl_policy.base, v_rep#funAddr~team_vlan_rx_add_vid.base_1, ~#mode_list_lock.base, v_rep#funAddr~team_notify_peers_interval_set.base_1, ~#team_netdev_addr_lock_key.base, ~ldv_work_1_0, v_rep#funAddr~team_notify_peers_count_set.offset_1, ~#team_tx_busylock_key.base, v_rep#funAddr~team_netpoll_cleanup.base_1, #valid, v_rep#funAddr~team_mode_option_set.offset_1, ~#team_notifier_block.base, v_rep#funAddr~team_set_mac_address.base_1, v_rep#funAddr~switchdev_port_fdb_add.offset_1, #NULL.offset, v_rep#funAddr~team_nl_cmd_port_list_get.base_1, v_rep#funAddr~switchdev_port_bridge_getlink.base_1, v_rep#funAddr~team_del_slave.offset_1, v_rep#funAddr~team_validate.base_1, v_rep#funAddr~team_port_en_option_get.base_1, v_rep#funAddr~team_setup.offset_1, ~ldv_work_struct_1_3.base, ~ldv_state_variable_2, v_rep#funAddr~team_init.base_1, v_rep#funAddr~team_queue_id_option_get.base_1, ~ldv_work_struct_2_0.offset, v_rep#funAddr~team_xmit.offset_1, #length, v_rep#funAddr~team_priority_option_get.base_1, v_rep#funAddr~switchdev_port_bridge_dellink.offset_1, ~ldv_work_struct_1_0.base, ~#team_link_ops.offset, v_rep#funAddr~team_get_num_rx_queues.base_1, v_rep#funAddr~team_get_num_tx_queues.offset_1, v_rep#funAddr~team_dummy_transmit.base_1, ~ldv_work_2_3, v_rep#funAddr~team_mode_option_get.base_1, ~#team_nl_mcgrps.offset, ~ldv_state_variable_3, ~team_link_ops_group0.base, v_rep#funAddr~team_dummy_receive.offset_1, v_rep#funAddr~team_notify_peers_count_get.base_1, v_rep#funAddr~team_port_en_option_get.offset_1, v_rep#funAddr~team_queue_id_option_get.offset_1, v_rep#funAddr~passthru_features_check.offset_1, v_rep#funAddr~team_priority_option_set.offset_1, v_rep#funAddr~team_xmit.base_1, ~team_link_ops_group2.base, v_rep#funAddr~team_nl_cmd_port_list_get.offset_1, ~ldv_work_2_2, v_rep#funAddr~team_queue_id_option_set.base_1, v_rep#funAddr~team_queue_id_option_set.offset_1, v_rep#funAddr~team_notify_peers_interval_get.base_1, ~#team_nl_family.base, v_rep#funAddr~team_get_stats64.base_1, v_rep#funAddr~team_get_stats64.offset_1, ~#team_nl_option_policy.offset, ~ldv_state_variable_4, ~#team_nl_mcgrps.base, v_rep#funAddr~team_user_linkup_option_set.base_1, ~ldv_work_struct_1_1.base, v_rep#funAddr~team_priority_option_set.base_1, v_rep#funAddr~team_vlan_rx_kill_vid.offset_1, v_rep#funAddr~team_add_slave.base_1, v_rep#funAddr~team_poll_controller.base_1, v_rep#funAddr~team_user_linkup_option_get.base_1, v_rep#funAddr~team_vlan_rx_add_vid.offset_1, v_rep#funAddr~team_port_en_option_set.base_1, ~ldv_work_struct_1_0.offset, v_rep#funAddr~team_mode_option_set.base_1, v_rep#funAddr~team_port_en_option_set.offset_1, ~ldv_work_2_1, v_rep#funAddr~team_priority_option_get.offset_1, #NULL.base, v_rep#funAddr~team_mcast_rejoin_count_set.base_1, ~#team_netdev_addr_lock_key.offset, ~ldv_state_variable_5, ~ldv_work_struct_1_2.base, v_rep#funAddr~team_set_rx_mode.base_1, ~team_netdev_ops_group1.base, ~team_link_ops_group0.offset, #memory_int, v_rep#funAddr~team_open.base_1;
{
    var ULTIMATE.init_#t~nondet987.offset : int;
    var team_mode_put_~mode.offset : int;
    var main_~ldvarg11~1674.offset : int;
    var main_#t~mem1635 : int;
    var main_#t~mem1658 : int;
    var team_queue_override_init_~queue_cnt~926 : int;
    var main_~#ldvarg18~1674.offset : int;
    var main_~#ldvarg8~1674.offset : int;
    var #Ultimate.meminit_#ptr.base : int;
    var team_queue_override_init_~tmp___0~926.base : int;
    var main_#t~ret1662 : int;
    var __mutex_init_#in~89.base : int;
    var main_#t~ret1528.base : int;
    var main_~tmp___20~1674.offset : int;
    var __team_change_mode_#t~mem616.base : int;
    var team_init_#t~ret1002.offset : int;
    var team_init_~team~1155.base : int;
    var __team_change_mode_~exit_op~794.base : int;
    var write~int_#ptr.base : int;
    var __team_change_mode_#in~new_mode.base : int;
    var main_#t~ret1609 : int;
    var team_adjust_ops_#t~mem603.base : int;
    var netdev_priv_#in~dev.base : int;
    var main_#t~mem1601 : int;
    var main_#t~ret1534.offset : int;
    var main_#t~ret1553 : int;
    var main_~ldvarg29~1674.base : int;
    var main_#t~mem1623 : int;
    var main_#t~ret1665.offset : int;
    var write~int_old_#memory_$Pointer$.offset : [int][int]int;
    var main_~ldvarg17~1674.base : int;
    var main_#t~ret1651 : int;
    var main_#t~ret1520.base : int;
    var ldv_initialize_rtnl_link_ops_4_#t~ret1500.offset : int;
    var main_#t~ret1531.base : int;
    var team_uninit_#in~dev.offset : int;
    var write~$Pointer$_#ptr.base : int;
    var main_#t~ret1674 : int;
    var team_adjust_ops_#t~mem593.base : int;
    var team_queue_override_init_#t~mem707.base : int;
    var write~int_#sizeOfWrittenType : int;
    var team_queue_override_init_~tmp~926.offset : int;
    var main_#t~ret1524.base : int;
    var ldv_init_zalloc_~p~200.base : int;
    var main_~tmp___3~1674.offset : int;
    var ldv_init_zalloc_#res.base : int;
    var ldv_memset_#res.offset : int;
    var main_#t~ret1587 : int;
    var main_#t~mem1613 : int;
    var main_#t~ret1506.offset : int;
    var team_adjust_ops_#t~mem605.offset : int;
    var team_uninit_#t~mem1013.offset : int;
    var #Ultimate.alloc_old_#valid : [int]int;
    var main_#t~ret1663 : int;
    var main_#t~ret1535.base : int;
    var main_#t~ret1539.base : int;
    var write~int_#ptr.offset : int;
    var main_#t~ret1539.offset : int;
    var ULTIMATE.init_#t~union1700.__padding : [int]int;
    var team_adjust_ops_#t~mem591.offset : int;
    var main_#t~mem1648.base : int;
    var main_~ldvarg13~1674.base : int;
    var main_~ldvarg35~1674.base : int;
    var main_~ldvarg14~1674.base : int;
    var main_~ldvarg36~1674.base : int;
    var main_#t~ret1577 : int;
    var main_~tmp___2~1674.offset : int;
    var main_~ldvarg38~1674.base : int;
    var team_init_#t~ret1003 : int;
    var write~$Pointer$_old_#memory_$Pointer$.base : [int][int]int;
    var free_percpu_#in~124.offset : int;
    var ldv_module_put_11_~ldv_func_arg1.base : int;
    var ldv_init_zalloc_#t~malloc146.offset : int;
    var team_adjust_ops_#t~mem596.offset : int;
    var main_~ldvarg20~1674.offset : int;
    var main_#t~ret1675 : int;
    var INIT_LIST_HEAD_#in~list.base : int;
    var main_~ldvarg34~1674.base : int;
    var main_~ldvarg11~1674.base : int;
    var #Ultimate.meminit_#product : int;
    var main_~#ldvarg37~1674.offset : int;
    var #Ultimate.C_memset_#value : int;
    var ULTIMATE.init_#t~nondet995.offset : int;
    var main_#t~ret1526.offset : int;
    var ldv_memset_~s.offset : int;
    var read~int_#ptr.offset : int;
    var main_~ldvarg31~1674.base : int;
    var main_~ldvarg10~1674.base : int;
    var main_#t~ret1521.offset : int;
    var main_#t~switch1693 : bool;
    var ldv_initialize_ethtool_ops_5_#t~ret1499.base : int;
    var ULTIMATE.init_#t~nondet990.offset : int;
    var main_#t~ret1509.base : int;
    var main_#t~ret1505.base : int;
    var ldv_memset_#in~n : int;
    var main_~ldvarg40~1674.offset : int;
    var __team_change_mode_~tmp~794 : int;
    var main_#t~ret1546.base : int;
    var main_#t~mem1637 : int;
    var main_#t~ret1683 : int;
    var team_set_no_mode_#in~team.base : int;
    var main_#t~mem1592 : int;
    var ldv_initialize_rtnl_link_ops_4_~tmp~1661.base : int;
    var ULTIMATE.init_#t~nondet994.base : int;
    var main_#t~ret1546.offset : int;
    var main_#t~ret1607 : int;
    var __mutex_init_#in~90.offset : int;
    var ULTIMATE.init_#t~nondet991.base : int;
    var main_#t~ret1543.base : int;
    var ldv_initialize_rtnl_link_ops_4_~tmp___0~1661.offset : int;
    var main_~ldvarg10~1674.offset : int;
    var team_module_init_#t~ret1494 : int;
    var team_mode_put_#t~mem580.offset : int;
    var main_#t~mem1603 : int;
    var main_#t~nondet1548 : int;
    var rtnl_link_register_#res : int;
    var __team_change_mode_#in~team.base : int;
    var team_set_no_mode_#in~team.offset : int;
    var netdev_priv_#res.offset : int;
    var #Ultimate.alloc_#res.offset : int;
    var main_#t~ret1518.offset : int;
    var main_~#ldvarg19~1674.offset : int;
    var main_#t~mem1625 : int;
    var ldv_memset_~tmp~202.base : int;
    var main_~ldvarg39~1674.base : int;
    var __team_change_mode_#t~mem615.offset : int;
    var main_#t~ret1672 : int;
    var read~$Pointer$_#ptr.offset : int;
    var main_#t~ret1530.offset : int;
    var main_~ldvarg5~1674.offset : int;
    var team_is_mode_set_#t~mem582.base : int;
    var ULTIMATE.init_#t~union1700.dep_map.class_cache.offset : [int]int;
    var main_#t~ret1513.base : int;
    var main_#t~mem1615 : int;
    var ULTIMATE.init_#t~union1700.dep_map.cpu : int;
    var __team_change_mode_#t~memset611.base : int;
    var team_init_~pcpu_stats~1155.offset : int;
    var read~$Pointer$_#value.base : int;
    var main_~ldvarg39~1674.offset : int;
    var main_#t~ret1505.offset : int;
    var main_~tmp___26~1674 : int;
    var __team_change_mode_#t~memset614.base : int;
    var main_#t~mem1638 : int;
    var main_#t~ret1542.offset : int;
    var main_#t~ret1661 : int;
    var main_#t~ret1514.offset : int;
    var main_#t~mem1591 : int;
    var ldv_initialize_rtnl_link_ops_4_#t~ret1501.base : int;
    var main_#t~ret1684 : int;
    var team_init_~__ptr~1155 : int;
    var __team_change_mode_#t~ret609 : int;
    var main_~ldvarg22~1674.offset : int;
    var main_~tmp___19~1674.offset : int;
    var __team_change_mode_#t~mem620.base : int;
    var main_#t~ret1608 : int;
    var team_module_init_#t~ret1493 : int;
    var main_#t~mem1602 : int;
    var main_#t~ret1575 : int;
    var mutex_lock_nested_#in~93 : int;
    var team_queue_override_init_#t~mem708 : int;
    var main_~ldvarg38~1674.offset : int;
    var main_#t~mem1626 : int;
    var main_#t~mem1648.offset : int;
    var main_~#ldvarg12~1674.base : int;
    var main_#t~ret1527.offset : int;
    var team_adjust_ops_#t~mem590.base : int;
    var ldv_module_put_#in~module.base : int;
    var main_#t~mem1580 : int;
    var main_#t~ret1532.base : int;
    var main_#t~ret1673 : int;
    var main_#t~ret1533.offset : int;
    var write~$Pointer$_#value.base : int;
    var rtnl_link_register_#in~373.offset : int;
    var team_init_~pcpu_stats~1155.base : int;
    var team_module_init_#res : int;
    var main_~ldvarg42~1674.base : int;
    var #Ultimate.C_memset_#res.offset : int;
    var register_netdevice_notifier_#res : int;
    var #Ultimate.meminit_#amountOfFields : int;
    var main_#t~mem1690 : int;
    var main_#t~ret1563 : int;
    var main_~ldvarg40~1674.base : int;
    var ldv_init_zalloc_#in~size : int;
    var main_~tmp~1674.base : int;
    var ldv_memset_~c : int;
    var main_#t~mem1594 : int;
    var team_uninit_#t~ret1010.offset : int;
    var __alloc_percpu_#in~123 : int;
    var main_#t~ret1527.base : int;
    var INIT_LIST_HEAD_#in~list.offset : int;
    var main_#t~ret1620 : int;
    var main_#t~ret1643 : int;
    var __team_change_mode_#t~mem615.base : int;
    var main_#t~ret1507.offset : int;
    var main_~#ldvarg16~1674.base : int;
    var __team_change_mode_~team.base : int;
    var team_adjust_ops_#t~mem589.base : int;
    var team_uninit_#t~ret1014 : int;
    var main_#t~ret1557 : int;
    var ldv_initialize_rtnl_link_ops_4_#t~ret1501.offset : int;
    var main_#t~ret1543.offset : int;
    var __team_change_mode_#t~mem613.offset : int;
    var main_#t~ret1525.offset : int;
    var main_~ldvarg1~1674.offset : int;
    var ldv_memset_#in~c : int;
    var main_~tmp___5~1674.base : int;
    var main_#t~ret1535.offset : int;
    var main_~tmp___4~1674.base : int;
    var main_#t~mem1627 : int;
    var main_#t~mem1583 : int;
    var team_init_#t~ret999.base : int;
    var main_#t~ret1678 : int;
    var main_#t~ret1655 : int;
    var __mutex_init_#in~91.base : int;
    var main_~#ldvarg2~1674.base : int;
    var ldv_initialize_rtnl_link_ops_4_~tmp___1~1661.offset : int;
    var ULTIMATE.dealloc_old_#valid : [int]int;
    var main_#t~nondet1692 : int;
    var main_#t~ret1517.offset : int;
    var team_queue_override_init_#in~team.offset : int;
    var main_~tmp___9~1674.base : int;
    var main_~tmp___13~1674.offset : int;
    var __team_change_mode_#t~mem621.offset : int;
    var read~int_#ptr.base : int;
    var main_~tmp___8~1674.base : int;
    var main_~tmp___18~1674.offset : int;
    var netdev_priv_~dev.base : int;
    var team_uninit_~tmp___0~1169.offset : int;
    var main_~tmp___25~1674 : int;
    var team_queue_override_init_~tmp___0~926.offset : int;
    var main_#t~nondet1550 : int;
    var team_mode_put_#in~mode.offset : int;
    var main_#t~ret1558 : int;
    var #Ultimate.C_memset_#amount : int;
    var team_uninit_#t~ret1010.base : int;
    var __team_change_mode_~new_mode.base : int;
    var __alloc_percpu_#in~122 : int;
    var main_#t~ret1545.offset : int;
    var team_uninit_#t~mem1011.base : int;
    var main_#t~ret1538.base : int;
    var main_#t~ret1644 : int;
    var main_#t~ret1534.base : int;
    var main_#t~mem1570 : int;
    var main_#t~mem1593 : int;
    var ldv_initialize_rtnl_link_ops_4_#t~ret1502.base : int;
    var ULTIMATE.dealloc_~addr.offset : int;
    var main_~#ldvarg27~1674.base : int;
    var main_~tmp___14~1674.offset : int;
    var main_~ldvarg14~1674.offset : int;
    var write~$Pointer$_#value.offset : int;
    var ULTIMATE.init_#t~nondet988.base : int;
    var main_#t~mem1604 : int;
    var __team_change_mode_#t~memset611.offset : int;
    var team_adjust_ops_#t~mem606.offset : int;
    var __team_change_mode_#t~memset614.offset : int;
    var main_~#ldvarg28~1674.base : int;
    var main_#t~mem1650.base : int;
    var main_#t~ret1515.offset : int;
    var main_~tmp___0~1674.offset : int;
    var team_adjust_ops_#t~mem601.offset : int;
    var main_~tmp___1~1674.base : int;
    var main_#t~ret1569 : int;
    var main_~tmp___0~1674.base : int;
    var main_~tmp~1674.offset : int;
    var main_#t~mem1628 : int;
    var main_#t~ret1665.base : int;
    var main_~#ldvarg23~1674.base : int;
    var team_uninit_#t~mem1015.base : int;
    var read~int_#sizeOfReadType : int;
    var main_#t~ret1610 : int;
    var main_#t~ret1633 : int;
    var main_~#ldvarg24~1674.base : int;
    var main_#t~mem1582 : int;
    var team_uninit_~team~1169.base : int;
    var main_#t~ret1516.base : int;
    var ldv_module_put_11_~ldv_func_arg1.offset : int;
    var main_#t~ret1523.base : int;
    var main_#t~ret1679 : int;
    var team_uninit_~__mptr___1~1169.base : int;
    var team_init_~__vpp_verify~1155.offset : int;
    var write~$Pointer$_old_#memory_$Pointer$.offset : [int][int]int;
    var ULTIMATE.init_#t~union1700.dep_map.class_cache.base : [int]int;
    var main_~ldvarg13~1674.offset : int;
    var main_#t~ret1512.base : int;
    var ldv_module_put_~module.offset : int;
    var #Ultimate.meminit_#ptr.offset : int;
    var main_~tmp___1~1674.offset : int;
    var main_#t~ret1528.offset : int;
    var team_adjust_ops_#t~mem589.offset : int;
    var write~$Pointer$_#sizeOfWrittenType : int;
    var main_#t~ret1522.offset : int;
    var main_#t~ret1687 : int;
    var team_init_~dev.offset : int;
    var __team_change_mode_#t~mem610.offset : int;
    var main_#t~mem1596 : int;
    var main_#t~ret1664 : int;
    var team_set_no_mode_~team.offset : int;
    var main_~tmp___9~1674.offset : int;
    var team_adjust_ops_#t~mem585 : int;
    var ULTIMATE.init_#t~nondet993.base : int;
    var team_uninit_~__mptr~1169.base : int;
    var team_is_mode_set_#t~mem582.offset : int;
    var main_~tmp___4~1674.offset : int;
    var team_uninit_#t~ret1016 : int;
    var main_#t~ret1544.base : int;
    var write~$Pointer$_old_#memory_int : [int][int]int;
    var main_~ldvarg29~1674.offset : int;
    var main_#t~ret1555 : int;
    var team_queue_override_init_#t~mem707.offset : int;
    var ULTIMATE.dealloc_~addr.base : int;
    var main_~tmp___12~1674.offset : int;
    var __team_change_mode_#t~mem616.offset : int;
    var main_#t~ret1540.offset : int;
    var main_#t~ret1512.offset : int;
    var #Ultimate.meminit_#t~loopctr1744 : int;
    var main_~tmp___7~1674.offset : int;
    var main_#t~ret1511.base : int;
    var main_#t~mem1562 : int;
    var main_#t~ret1676 : int;
    var main_#t~mem1585 : int;
    var main_#t~ret1653 : int;
    var team_adjust_ops_#t~mem597 : int;
    var main_#t~mem1619 : int;
    var main_#t~ret1517.base : int;
    var main_#t~mem1646.offset : int;
    var main_#t~ret1566 : int;
    var __mutex_init_#in~91.offset : int;
    var main_#t~ret1506.base : int;
    var main_~tmp___6~1674.offset : int;
    var team_adjust_ops_~team.base : int;
    var main_#t~mem1572 : int;
    var ULTIMATE.init_#t~nondet551.base : int;
    var rtnl_link_register_#in~373.base : int;
    var team_queue_override_init_~team.base : int;
    var read~$Pointer$_#sizeOfReadType : int;
    var team_queue_override_init_#res : int;
    var ldv_module_put_~module.base : int;
    var main_#t~ret1642 : int;
    var main_#t~ret1533.base : int;
    var #Ultimate.C_memset_#ptr.offset : int;
    var ldv_initialize_rtnl_link_ops_4_~tmp~1661.offset : int;
    var __team_change_mode_#res : int;
    var ULTIMATE.init_#t~nondet987.base : int;
    var ULTIMATE.init_#t~nondet988.offset : int;
    var main_#t~ret1579 : int;
    var team_set_no_mode_~team.base : int;
    var __mutex_init_#in~89.offset : int;
    var main_~tmp___10~1674.offset : int;
    var main_#t~mem1660 : int;
    var main_~ldvarg17~1674.offset : int;
    var unregister_netdevice_notifier_#in~205.offset : int;
    var team_init_~err~1155 : int;
    var main_#t~mem1561 : int;
    var main_~tmp___5~1674.offset : int;
    var main_#t~ret1677 : int;
    var main_#t~switch1551 : bool;
    var ULTIMATE.init_#t~nondet1223.base : int;
    var ldv_memset_~s.base : int;
    var main_#t~ret1631 : int;
    var team_adjust_ops_#t~mem594.base : int;
    var team_init_~tmp___0~1155.base : int;
    var main_~ldvarg22~1674.base : int;
    var ULTIMATE.init_#t~nondet1223.offset : int;
    var team_init_~team~1155.offset : int;
    var __team_change_mode_~new_mode.offset : int;
    var #Ultimate.C_memset_#ptr.base : int;
    var team_mode_put_#t~mem580.base : int;
    var team_uninit_~dev.offset : int;
    var main_~ldvarg7~1674.base : int;
    var main_~#ldvarg30~1674.base : int;
    var main_#t~ret1538.offset : int;
    var main_~tmp___11~1674.offset : int;
    var main_~tmp___11~1674.base : int;
    var main_~tmp___13~1674.base : int;
    var team_adjust_ops_#t~mem605.base : int;
    var main_~tmp___10~1674.base : int;
    var main_~tmp___14~1674.base : int;
    var read~$Pointer$_#value.offset : int;
    var team_init_#in~dev.offset : int;
    var main_~tmp___15~1674.base : int;
    var main_~tmp___17~1674.base : int;
    var team_init_#t~mem1009.offset : int;
    var main_#t~mem1552 : int;
    var main_~tmp___16~1674.base : int;
    var team_is_mode_set_#in~team.base : int;
    var team_mode_put_#in~mode.base : int;
    var main_#t~ret1624 : int;
    var main_#t~ret1647 : int;
    var team_module_init_~err~1610 : int;
    var main_#t~nondet1685 : int;
    var mutex_lock_nested_#in~92.base : int;
    var __team_change_mode_~exit_op~794.offset : int;
    var team_adjust_ops_#t~mem601.base : int;
    var main_~ldvarg9~1674.offset : int;
    var team_uninit_#t~mem1011.offset : int;
    var ldv_memset_#in~s.offset : int;
    var main_#t~ret1516.offset : int;
    var team_init_#t~nondet1001.offset : int;
    var main_~tmp___12~1674.base : int;
    var team_queue_override_init_#t~ret709.offset : int;
    var main_~#ldvarg41~1674.offset : int;
    var __team_change_mode_#in~new_mode.offset : int;
    var main_#t~ret1522.base : int;
    var main_#t~mem1564 : int;
    var team_init_#t~mem1005.base : int;
    var #Ultimate.alloc_old_#length : [int]int;
    var team_adjust_ops_#t~mem591.base : int;
    var team_init_#t~mem1009.base : int;
    var main_#t~ret1659 : int;
    var write~$Pointer$_#ptr.offset : int;
    var team_uninit_#t~mem1012.base : int;
    var main_#t~ret1526.base : int;
    var main_#t~ret1636 : int;
    var main_~tmp___19~1674.base : int;
    var ldv_initialize_rtnl_link_ops_4_~tmp___0~1661.base : int;
    var main_#t~mem1576 : int;
    var main_#t~mem1599 : int;
    var main_#t~ret1666.base : int;
    var main_~tmp___8~1674.offset : int;
    var main_~tmp___18~1674.base : int;
    var main_#t~ret1524.offset : int;
    var write~int_#value : int;
    var team_init_~#__key~1155.offset : int;
    var ldv_initialize_rtnl_link_ops_4_~tmp___1~1661.base : int;
    var main_#t~switch1689 : bool;
    var main_~tmp___24~1674 : int;
    var team_queue_override_init_~tmp~926.base : int;
    var ULTIMATE.init_#t~nondet989.base : int;
    var ldv_init_zalloc_~p~200.offset : int;
    var team_adjust_ops_#t~mem603.offset : int;
    var main_~tmp___15~1674.offset : int;
    var main_#t~mem1574 : int;
    var main_#t~mem1597 : int;
    var main_~#ldvarg23~1674.offset : int;
    var team_adjust_ops_#t~ret599 : int;
    var __team_change_mode_#t~mem621.base : int;
    var main_~ldvarg35~1674.offset : int;
    var team_adjust_ops_#t~mem594.offset : int;
    var ldv_net_device_ops_6_~tmp~1622.offset : int;
    var main_#t~ret1667.offset : int;
    var #Ultimate.alloc_~size : int;
    var team_uninit_~team~1169.offset : int;
    var main_#t~ret1532.offset : int;
    var main_#t~mem1586 : int;
    var team_init_#t~ret1002.base : int;
    var main_~tmp___16~1674.offset : int;
    var __team_change_mode_#t~mem610.base : int;
    var main_#t~ret1614 : int;
    var ldv_initialize_rtnl_link_ops_4_#t~ret1502.offset : int;
    var team_adjust_ops_#t~ret587 : int;
    var ldv_module_put_11_#in~ldv_func_arg1.offset : int;
    var team_adjust_ops_#t~mem608.offset : int;
    var main_#t~mem1598 : int;
    var #Ultimate.C_memset_#res.base : int;
    var main_~ldvarg34~1674.offset : int;
    var ldv_initialize_ethtool_ops_5_#t~ret1499.offset : int;
    var main_#t~mem1650.offset : int;
    var ULTIMATE.init_#t~nondet989.offset : int;
    var main_~#ldvarg41~1674.base : int;
    var main_#t~ret1559 : int;
    var main_~tmp___17~1674.offset : int;
    var main_#t~ret1537.offset : int;
    var main_~ldvarg0~1674.offset : int;
    var unregister_netdevice_notifier_#res : int;
    var main_#t~ret1545.base : int;
    var ULTIMATE.init_#t~nondet993.offset : int;
    var team_queue_override_init_~i~926 : int;
    var main_#t~ret1622 : int;
    var main_#t~ret1645 : int;
    var team_queue_override_init_#in~team.base : int;
    var main_~#ldvarg37~1674.base : int;
    var ULTIMATE.init_#t~nondet992.base : int;
    var main_#t~ret1540.base : int;
    var ldv_init_zalloc_~tmp~200.base : int;
    var team_uninit_~tmp~1169.offset : int;
    var main_#t~mem1589 : int;
    var __alloc_percpu_#res.offset : int;
    var main_~#ldvarg21~1674.offset : int;
    var main_#t~switch1686 : bool;
    var main_#t~mem1640 : int;
    var __team_change_mode_#in~team.offset : int;
    var ULTIMATE.init_#t~union1700.dep_map.ip : int;
    var team_init_#t~mem1005.offset : int;
    var team_adjust_ops_#t~mem593.offset : int;
    var main_#t~ret1523.offset : int;
    var __team_change_mode_#t~mem620.offset : int;
    var ULTIMATE.init_#t~nondet992.offset : int;
    var main_#t~ret1657 : int;
    var main_~ldvarg36~1674.offset : int;
    var main_#t~ret1515.base : int;
    var main_~#ldvarg30~1674.offset : int;
    var team_uninit_~__mptr___1~1169.offset : int;
    var main_#t~mem1578 : int;
    var team_init_~stat~1155.base : int;
    var team_init_~dev.base : int;
    var main_~tmp___23~1674 : int;
    var main_#t~ret1537.base : int;
    var main_~#ldvarg32~1674.offset : int;
    var ULTIMATE.init_#t~nondet551.offset : int;
    var main_~tmp___20~1674.base : int;
    var team_init_~#__key~1155.base : int;
    var main_#t~ret1508.offset : int;
    var main_#t~ret1600 : int;
    var register_netdevice_notifier_#in~204.base : int;
    var main_#t~ret1536.offset : int;
    var ldv_init_zalloc_~tmp~200.offset : int;
    var main_#t~ret1590 : int;
    var ULTIMATE.init_#t~nondet986.base : int;
    var main_#t~mem1565 : int;
    var main_#t~mem1588 : int;
    var main_~ldvarg0~1674.base : int;
    var main_#t~ret1511.offset : int;
    var main_#t~ret1520.offset : int;
    var register_netdevice_notifier_#in~204.offset : int;
    var main_#t~mem1641 : int;
    var netdev_priv_~dev.offset : int;
    var ldv_module_put_11_#in~ldv_func_arg1.base : int;
    var __alloc_percpu_#res.base : int;
    var main_~#ldvarg33~1674.offset : int;
    var main_#t~ret1510.base : int;
    var main_#t~ret1521.base : int;
    var main_~#ldvarg33~1674.base : int;
    var __mutex_init_#in~90.base : int;
    var team_adjust_ops_#t~mem590.offset : int;
    var ldv_init_zalloc_#res.offset : int;
    var ldv_memset_#t~memset147.base : int;
    var __team_change_mode_#t~mem624.offset : int;
    var main_#t~ret1612 : int;
    var team_adjust_ops_#in~team.base : int;
    var main_#t~mem1554 : int;
    var main_#t~ret1518.base : int;
    var main_~ldvarg6~1674.base : int;
    var read~$Pointer$_#ptr.base : int;
    var team_init_~i~1155 : int;
    var team_uninit_~__mptr~1169.offset : int;
    var main_#t~ret1507.base : int;
    var main_#t~mem1652 : int;
    var main_#t~mem1654 : int;
    var read~int_#value : int;
    var ULTIMATE.init_#t~union1700.dep_map.name.base : int;
    var main_#t~ret1681 : int;
    var team_uninit_#in~dev.base : int;
    var team_adjust_ops_#t~mem606.base : int;
    var team_adjust_ops_#t~mem608.base : int;
    var team_queue_override_init_#t~ret709.base : int;
    var main_#t~ret1529.base : int;
    var unregister_netdevice_notifier_#in~205.base : int;
    var main_#t~ret1510.offset : int;
    var main_#t~ret1666.offset : int;
    var __team_change_mode_#t~mem613.base : int;
    var ldv_net_device_ops_6_#t~ret1496.offset : int;
    var main_#t~ret1605 : int;
    var main_~#ldvarg18~1674.base : int;
    var team_adjust_ops_#t~mem602.base : int;
    var team_uninit_~__mptr___0~1169.offset : int;
    var main_~#ldvarg15~1674.base : int;
    var main_~#ldvarg19~1674.base : int;
    var main_#t~mem1568 : int;
    var team_init_~tmp___0~1155.offset : int;
    var team_module_init_#t~ret1492 : int;
    var main_#t~switch1669 : bool;
    var INIT_LIST_HEAD_~list.offset : int;
    var main_#t~ret1595 : int;
    var main_~tmp___3~1674.base : int;
    var __team_change_mode_~err~794 : int;
    var main_#t~ret1670 : int;
    var team_init_~__cpu~1155 : int;
    var main_~#ldvarg4~1674.base : int;
    var main_~tmp___7~1674.base : int;
    var team_adjust_ops_#in~team.offset : int;
    var main_~#ldvarg25~1674.offset : int;
    var main_~#ldvarg3~1674.base : int;
    var team_uninit_~tmp~1169.base : int;
    var team_init_#in~dev.base : int;
    var main_~ldvarg6~1674.offset : int;
    var main_~tmp___6~1674.base : int;
    var team_init_#t~nondet1001.base : int;
    var ldv_net_device_ops_6_#t~ret1496.base : int;
    var main_#t~ret1560 : int;
    var ULTIMATE.init_#t~nondet986.offset : int;
    var team_adjust_ops_~tmp___2~778 : int;
    var main_#t~ret1617 : int;
    var ULTIMATE.init_#t~union1700.dep_map.key.offset : int;
    var ldv_initialize_ethtool_ops_5_~tmp~1649.offset : int;
    var __team_change_mode_#t~memcpy625.base : int;
    var main_#t~mem1630 : int;
    var main_~ldvarg7~1674.offset : int;
    var team_queue_override_init_~listarr~926.offset : int;
    var main_#t~mem1632 : int;
    var team_uninit_~port~1169.offset : int;
    var ldv_init_zalloc_#t~malloc146.base : int;
    var __team_change_mode_#t~ret622 : int;
    var netdev_priv_#in~dev.offset : int;
    var team_init_~tmp~1155.offset : int;
    var team_uninit_~dev.base : int;
    var main_~ldvarg42~1674.offset : int;
    var __team_change_mode_#t~memcpy625.offset : int;
    var main_#t~ret1682 : int;
    var team_uninit_~tmp___0~1169.base : int;
    var team_adjust_ops_#t~mem596.base : int;
    var main_~#ldvarg26~1674.base : int;
    var team_is_mode_set_~team.base : int;
    var main_#t~switch1549 : bool;
    var ldv_init_zalloc_~size : int;
    var main_#t~ret1606 : int;
    var main_~#ldvarg25~1674.base : int;
    var main_#t~mem1567 : int;
    var main_#t~ret1629 : int;
    var main_~tmp___21~1674 : int;
    var team_module_init_#t~ret1491 : int;
    var INIT_LIST_HEAD_~list.base : int;
    var #Ultimate.meminit_#sizeOfFields : int;
    var main_~#ldvarg15~1674.offset : int;
    var main_~tmp___2~1674.base : int;
    var team_queue_override_init_~team.offset : int;
    var main_#t~ret1573 : int;
    var team_init_#t~ret1007 : int;
    var main_~#ldvarg21~1674.base : int;
    var main_#t~ret1509.offset : int;
    var main_~#ldvarg8~1674.base : int;
    var main_#t~nondet1688 : int;
    var ldv_net_device_ops_6_~tmp~1622.base : int;
    var ULTIMATE.init_#t~union1700.dep_map.key.base : int;
    var main_#t~ret1671 : int;
    var main_#t~ret1694 : int;
    var main_#t~ret1530.base : int;
    var main_#t~mem1556 : int;
    var team_adjust_ops_~team.offset : int;
    var team_uninit_~__mptr___0~1169.base : int;
    var main_#t~ret1618 : int;
    var main_#res : int;
    var #Ultimate.C_memset_#t~loopctr1743 : int;
    var main_~#ldvarg16~1674.offset : int;
    var main_#t~ret1584 : int;
    var team_is_mode_set_~team.offset : int;
    var ULTIMATE.init_#t~nondet581.base : int;
    var main_~#ldvarg26~1674.offset : int;
    var main_#t~mem1656 : int;
    var main_#t~ret1531.offset : int;
    var main_#t~ret1547.base : int;
    var netdev_priv_#res.base : int;
    var ULTIMATE.init_#t~nondet995.base : int;
    var main_#t~ret1513.offset : int;
    var team_queue_override_init_~listarr~926.base : int;
    var main_#t~ret1649 : int;
    var main_#t~ret1541.base : int;
    var main_#t~ret1542.base : int;
    var main_~#ldvarg4~1674.offset : int;
    var ULTIMATE.init_#t~nondet990.base : int;
    var team_adjust_ops_~tmp___0~778 : int;
    var ldv_memset_#t~memset147.offset : int;
    var main_#t~ret1519.offset : int;
    var main_~ldvarg31~1674.offset : int;
    var ldv_memset_#res.base : int;
    var __team_change_mode_~team.offset : int;
    var ldv_memset_#in~s.base : int;
    var #Ultimate.alloc_#res.base : int;
    var main_#t~ret1541.offset : int;
    var main_#t~mem1621 : int;
    var main_~#ldvarg2~1674.offset : int;
    var main_#t~ret1547.offset : int;
    var main_#t~ret1691 : int;
    var main_#t~nondet1668 : int;
    var team_init_#t~ret1008 : int;
    var mutex_lock_nested_#in~92.offset : int;
    var write~int_old_#memory_int : [int][int]int;
    var team_uninit_~port~1169.base : int;
    var main_#t~ret1581 : int;
    var free_percpu_#in~124.base : int;
    var main_#t~ret1508.base : int;
    var main_~#ldvarg24~1674.offset : int;
    var main_#t~ret1519.base : int;
    var team_uninit_#t~mem1015.offset : int;
    var main_#t~ret1529.offset : int;
    var main_#t~mem1611 : int;
    var ldv_memset_~tmp~202.offset : int;
    var main_#t~ret1680 : int;
    var main_#t~mem1634 : int;
    var team_is_mode_set_#res : int;
    var __team_change_mode_#t~mem624.base : int;
    var team_init_#res : int;
    var main_~tmp___22~1674 : int;
    var main_#t~ret1536.base : int;
    var ldv_initialize_rtnl_link_ops_4_#t~ret1500.base : int;
    var team_init_~tmp___1~1155 : int;
    var main_#t~ret1571 : int;
    var main_~ldvarg1~1674.base : int;
    var team_is_mode_set_#in~team.offset : int;
    var ldv_memset_~n : int;
    var ldv_initialize_ethtool_ops_5_~tmp~1649.base : int;
    var main_~#ldvarg28~1674.offset : int;
    var main_#t~mem1646.base : int;
    var team_init_#t~ret999.offset : int;
    var ldv_module_put_#in~module.offset : int;
    var ULTIMATE.init_#t~nondet994.offset : int;
    var team_init_~__vpp_verify~1155.base : int;
    var team_init_~stat~1155.offset : int;
    var main_~ldvarg9~1674.base : int;
    var team_init_~tmp~1155.base : int;
    var main_#t~ret1544.offset : int;
    var ULTIMATE.init_#t~nondet991.offset : int;
    var main_~#ldvarg32~1674.base : int;
    var write~int_old_#memory_$Pointer$.base : [int][int]int;
    var main_~#ldvarg27~1674.offset : int;
    var main_~#ldvarg12~1674.offset : int;
    var team_uninit_#t~mem1013.base : int;
    var team_adjust_ops_~tmp___1~778 : int;
    var main_#t~ret1616 : int;
    var main_#t~ret1525.base : int;
    var team_adjust_ops_#t~mem602.offset : int;
    var team_mode_put_~mode.base : int;
    var main_#t~ret1514.base : int;
    var main_#t~ret1667.base : int;
    var main_~ldvarg20~1674.base : int;
    var main_#t~ret1639 : int;
    var team_uninit_#t~mem1012.offset : int;
    var main_~#ldvarg3~1674.offset : int;
    var main_~ldvarg5~1674.base : int;
    var ULTIMATE.init_#t~nondet581.offset : int;
    var ULTIMATE.init_#t~union1700.dep_map.name.offset : int;
    var team_adjust_ops_~tmp~778 : int;

  loc0:
    havoc ULTIMATE.init_#t~nondet581.base, ULTIMATE.init_#t~union1700.dep_map.cpu, ULTIMATE.init_#t~nondet987.offset, ULTIMATE.init_#t~union1700.dep_map.name.base, ULTIMATE.init_#t~nondet989.base, ULTIMATE.init_#t~nondet993.offset, ULTIMATE.init_#t~nondet551.base, ULTIMATE.init_#t~nondet551.offset, ULTIMATE.init_#t~nondet995.base, ULTIMATE.init_#t~union1700.__padding, ULTIMATE.init_#t~nondet992.base, ULTIMATE.init_#t~nondet993.base, ULTIMATE.init_#t~nondet986.base, ULTIMATE.init_#t~nondet994.base, ULTIMATE.init_#t~nondet990.base, ULTIMATE.init_#t~nondet991.base, ULTIMATE.init_#t~nondet987.base, ULTIMATE.init_#t~nondet988.base, ULTIMATE.init_#t~nondet988.offset, ULTIMATE.init_#t~nondet994.offset, ULTIMATE.init_#t~union1700.dep_map.ip, ULTIMATE.init_#t~nondet991.offset, ULTIMATE.init_#t~union1700.dep_map.key.base, ULTIMATE.init_#t~nondet1223.base, ULTIMATE.init_#t~nondet992.offset, ULTIMATE.init_#t~nondet1223.offset, ULTIMATE.init_#t~nondet986.offset, ULTIMATE.init_#t~nondet995.offset, ULTIMATE.init_#t~union1700.dep_map.class_cache.base, ULTIMATE.init_#t~union1700.dep_map.class_cache.offset, ULTIMATE.init_#t~union1700.dep_map.key.offset, ULTIMATE.init_#t~nondet581.offset, ULTIMATE.init_#t~nondet990.offset, ULTIMATE.init_#t~union1700.dep_map.name.offset, ULTIMATE.init_#t~nondet989.offset;
    #NULL.offset, #NULL.base := 0, 0;
    #valid := #valid[0 := 0];
    ~ldv_work_1_3 := 0;
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_0 := 0;
    ~ldv_state_variable_5 := 0;
    ~ldv_state_variable_2 := 0;
    ~ldv_work_1_1 := 0;
    ~ldv_work_2_0 := 0;
    ~ldv_work_1_2 := 0;
    ~ldv_work_2_2 := 0;
    ~ldv_state_variable_3 := 0;
    ~ref_cnt := 0;
    ~ldv_work_1_0 := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_work_2_3 := 0;
    ~ldv_state_variable_4 := 0;
    ~ldv_work_2_1 := 0;
    ~ldv_retval_0 := 0;
    ~ldv_retval_1 := 0;
    ~ldv_retval_2 := 0;
    ~ldv_module_refcounter := 1;
    ~ldv_work_struct_1_0.base, ~ldv_work_struct_1_0.offset := 0, 0;
    ~ldv_work_struct_1_1.base, ~ldv_work_struct_1_1.offset := 0, 0;
    ~ldv_work_struct_1_3.base, ~ldv_work_struct_1_3.offset := 0, 0;
    ~team_link_ops_group2.base, ~team_link_ops_group2.offset := 0, 0;
    ~team_link_ops_group1.base, ~team_link_ops_group1.offset := 0, 0;
    ~ldv_work_struct_2_0.offset, ~ldv_work_struct_2_0.base := 0, 0;
    ~ldv_work_struct_1_2.base, ~ldv_work_struct_1_2.offset := 0, 0;
    ~team_netdev_ops_group1.offset, ~team_netdev_ops_group1.base := 0, 0;
    ~team_link_ops_group0.base, ~team_link_ops_group0.offset := 0, 0;
    ~team_ethtool_ops_group0.offset, ~team_ethtool_ops_group0.base := 0, 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 16;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#mode_list.offset, ~#mode_list.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#mode_list.base, ~#mode_list.offset, 8, ~#mode_list.offset, ~#mode_list.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#mode_list.base, ~#mode_list.offset + 8, 8, ~#mode_list.offset, ~#mode_list.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 68;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#mode_list_lock.offset, ~#mode_list_lock.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mode_list_lock.base, 0, ~#mode_list_lock.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mode_list_lock.base, 3735899821, ~#mode_list_lock.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mode_list_lock.base, 4294967295, ~#mode_list_lock.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#mode_list_lock.offset + 12, 8, -1, ~#mode_list_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#mode_list_lock.offset + 20, 8, 0, ~#mode_list_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mode_list_lock.base, 0, ~#mode_list_lock.offset + 28;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mode_list_lock.base, 0, ~#mode_list_lock.offset + 36;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet551.base, ULTIMATE.init_#t~nondet551.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet551.base, ~#mode_list_lock.offset + 44, 8, ULTIMATE.init_#t~nondet551.offset, ~#mode_list_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mode_list_lock.base, 0, ~#mode_list_lock.offset + 52;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mode_list_lock.base, 0, ~#mode_list_lock.offset + 56;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[0], ~#mode_list_lock.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[1], ~#mode_list_lock.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[2], ~#mode_list_lock.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[3], ~#mode_list_lock.offset + 3;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[4], ~#mode_list_lock.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[5], ~#mode_list_lock.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[6], ~#mode_list_lock.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[7], ~#mode_list_lock.offset + 7;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[8], ~#mode_list_lock.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[9], ~#mode_list_lock.offset + 9;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[10], ~#mode_list_lock.offset + 10;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[11], ~#mode_list_lock.offset + 11;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[12], ~#mode_list_lock.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[13], ~#mode_list_lock.offset + 13;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[14], ~#mode_list_lock.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[15], ~#mode_list_lock.offset + 15;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[16], ~#mode_list_lock.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[17], ~#mode_list_lock.offset + 17;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[18], ~#mode_list_lock.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[19], ~#mode_list_lock.offset + 19;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[20], ~#mode_list_lock.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[21], ~#mode_list_lock.offset + 21;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[22], ~#mode_list_lock.offset + 22;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.__padding[23], ~#mode_list_lock.offset + 23;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union1700.dep_map.key.base, ~#mode_list_lock.offset + 24, 8, ULTIMATE.init_#t~union1700.dep_map.key.offset, ~#mode_list_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union1700.dep_map.class_cache.base[0], ~#mode_list_lock.offset + 32, 8, ULTIMATE.init_#t~union1700.dep_map.class_cache.offset[0], ~#mode_list_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union1700.dep_map.class_cache.base[1], ~#mode_list_lock.offset + 40, 8, ULTIMATE.init_#t~union1700.dep_map.class_cache.offset[1], ~#mode_list_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union1700.dep_map.name.base, ~#mode_list_lock.offset + 48, 8, ULTIMATE.init_#t~union1700.dep_map.name.offset, ~#mode_list_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.dep_map.cpu, ~#mode_list_lock.offset + 56;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#mode_list_lock.base, ULTIMATE.init_#t~union1700.dep_map.ip, ~#mode_list_lock.offset + 60;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc ULTIMATE.init_#t~nondet551.base, ULTIMATE.init_#t~nondet551.offset;
    havoc ULTIMATE.init_#t~union1700.__padding, ULTIMATE.init_#t~union1700.dep_map.cpu, ULTIMATE.init_#t~union1700.dep_map.ip, ULTIMATE.init_#t~union1700.dep_map.name.base, ULTIMATE.init_#t~union1700.dep_map.class_cache.base, ULTIMATE.init_#t~union1700.dep_map.class_cache.offset, ULTIMATE.init_#t~union1700.dep_map.key.base, ULTIMATE.init_#t~union1700.dep_map.key.offset, ULTIMATE.init_#t~union1700.dep_map.name.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 32;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#__team_no_mode.base, ~#__team_no_mode.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 9;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet581.base, ULTIMATE.init_#t~nondet581.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet581.base, ~#__team_no_mode.offset, 8, ULTIMATE.init_#t~nondet581.offset, ~#__team_no_mode.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#__team_no_mode.offset + 8, 8, 0, ~#__team_no_mode.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#__team_no_mode.base, 0, ~#__team_no_mode.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#__team_no_mode.base, 0, ~#__team_no_mode.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#__team_no_mode.offset + 24, 8, 0, ~#__team_no_mode.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    havoc ULTIMATE.init_#t~nondet581.base, ULTIMATE.init_#t~nondet581.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 570;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#team_options.base, ~#team_options.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 8, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 5;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet986.base, ULTIMATE.init_#t~nondet986.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet986.base := #memory_int[ULTIMATE.init_#t~nondet986.base][ULTIMATE.init_#t~nondet986.offset := 109]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet986.base := #memory_int[ULTIMATE.init_#t~nondet986.base][ULTIMATE.init_#t~nondet986.offset + 1 := 111]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet986.base := #memory_int[ULTIMATE.init_#t~nondet986.base][ULTIMATE.init_#t~nondet986.offset + 2 := 100]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet986.base := #memory_int[ULTIMATE.init_#t~nondet986.base][ULTIMATE.init_#t~nondet986.offset + 3 := 101]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet986.base := #memory_int[ULTIMATE.init_#t~nondet986.base][ULTIMATE.init_#t~nondet986.offset + 4 := 0]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet986.base, ~#team_options.offset + 16, 8, ULTIMATE.init_#t~nondet986.offset, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_options.base, 0, ~#team_options.offset + 24;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 25;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 1, ~#team_options.offset + 29;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 33, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_mode_option_get.base_1, ~#team_options.offset + 41, 8, v_rep#funAddr~team_mode_option_get.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_mode_option_set.base_1, ~#team_options.offset + 49, 8, v_rep#funAddr~team_mode_option_set.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 57, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 65, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 19;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet987.offset, ULTIMATE.init_#t~nondet987.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet987.base, ~#team_options.offset + 73, 8, ULTIMATE.init_#t~nondet987.offset, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_options.base, 0, ~#team_options.offset + 81;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 82;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 86;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 90, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_notify_peers_count_get.base_1, ~#team_options.offset + 98, 8, v_rep#funAddr~team_notify_peers_count_get.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_notify_peers_count_set.base_1, ~#team_options.offset + 106, 8, v_rep#funAddr~team_notify_peers_count_set.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 114, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 122, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 22;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet988.base, ULTIMATE.init_#t~nondet988.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet988.base, ~#team_options.offset + 130, 8, ULTIMATE.init_#t~nondet988.offset, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_options.base, 0, ~#team_options.offset + 138;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 139;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 143;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 147, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_notify_peers_interval_get.base_1, ~#team_options.offset + 155, 8, v_rep#funAddr~team_notify_peers_interval_get.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_notify_peers_interval_set.base_1, ~#team_options.offset + 163, 8, v_rep#funAddr~team_notify_peers_interval_set.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 171, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 179, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 19;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet989.base, ULTIMATE.init_#t~nondet989.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet989.base, ~#team_options.offset + 187, 8, ULTIMATE.init_#t~nondet989.offset, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_options.base, 0, ~#team_options.offset + 195;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 196;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 200;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 204, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_mcast_rejoin_count_get.base_1, ~#team_options.offset + 212, 8, v_rep#funAddr~team_mcast_rejoin_count_get.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_mcast_rejoin_count_set.base_1, ~#team_options.offset + 220, 8, v_rep#funAddr~team_mcast_rejoin_count_set.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 228, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 236, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 22;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet990.base, ULTIMATE.init_#t~nondet990.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet990.base, ~#team_options.offset + 244, 8, ULTIMATE.init_#t~nondet990.offset, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_options.base, 0, ~#team_options.offset + 252;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 253;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 257;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 261, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_mcast_rejoin_interval_get.base_1, ~#team_options.offset + 269, 8, v_rep#funAddr~team_mcast_rejoin_interval_get.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_mcast_rejoin_interval_set.base_1, ~#team_options.offset + 277, 8, v_rep#funAddr~team_mcast_rejoin_interval_set.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 285, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 293, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet991.offset, ULTIMATE.init_#t~nondet991.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet991.base, ~#team_options.offset + 301, 8, ULTIMATE.init_#t~nondet991.offset, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_options.base, 1, ~#team_options.offset + 309;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 310;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 3, ~#team_options.offset + 314;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 318, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_port_en_option_get.base_1, ~#team_options.offset + 326, 8, v_rep#funAddr~team_port_en_option_get.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_port_en_option_set.base_1, ~#team_options.offset + 334, 8, v_rep#funAddr~team_port_en_option_set.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 342, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 350, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 12;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet992.base, ULTIMATE.init_#t~nondet992.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet992.base, ~#team_options.offset + 358, 8, ULTIMATE.init_#t~nondet992.offset, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_options.base, 1, ~#team_options.offset + 366;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 367;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 3, ~#team_options.offset + 371;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 375, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_user_linkup_option_get.base_1, ~#team_options.offset + 383, 8, v_rep#funAddr~team_user_linkup_option_get.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_user_linkup_option_set.base_1, ~#team_options.offset + 391, 8, v_rep#funAddr~team_user_linkup_option_set.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 399, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 407, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 20;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet993.base, ULTIMATE.init_#t~nondet993.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet993.base, ~#team_options.offset + 415, 8, ULTIMATE.init_#t~nondet993.offset, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_options.base, 1, ~#team_options.offset + 423;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 424;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 3, ~#team_options.offset + 428;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 432, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_user_linkup_en_option_get.base_1, ~#team_options.offset + 440, 8, v_rep#funAddr~team_user_linkup_en_option_get.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_user_linkup_en_option_set.base_1, ~#team_options.offset + 448, 8, v_rep#funAddr~team_user_linkup_en_option_set.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 456, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 464, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 9;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet994.base, ULTIMATE.init_#t~nondet994.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet994.base, ~#team_options.offset + 472, 8, ULTIMATE.init_#t~nondet994.offset, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_options.base, 1, ~#team_options.offset + 480;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 481;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 4, ~#team_options.offset + 485;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 489, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_priority_option_get.base_1, ~#team_options.offset + 497, 8, v_rep#funAddr~team_priority_option_get.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_priority_option_set.base_1, ~#team_options.offset + 505, 8, v_rep#funAddr~team_priority_option_set.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 513, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 521, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 9;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet995.offset, ULTIMATE.init_#t~nondet995.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet995.base, ~#team_options.offset + 529, 8, ULTIMATE.init_#t~nondet995.offset, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_options.base, 1, ~#team_options.offset + 537;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 538;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_options.base, 0, ~#team_options.offset + 542;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_options.offset + 546, 8, 0, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_queue_id_option_get.base_1, ~#team_options.offset + 554, 8, v_rep#funAddr~team_queue_id_option_get.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_queue_id_option_set.base_1, ~#team_options.offset + 562, 8, v_rep#funAddr~team_queue_id_option_set.offset_1, ~#team_options.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    havoc ULTIMATE.init_#t~nondet986.base, ULTIMATE.init_#t~nondet986.offset;
    havoc ULTIMATE.init_#t~nondet987.offset, ULTIMATE.init_#t~nondet987.base;
    havoc ULTIMATE.init_#t~nondet988.base, ULTIMATE.init_#t~nondet988.offset;
    havoc ULTIMATE.init_#t~nondet989.base, ULTIMATE.init_#t~nondet989.offset;
    havoc ULTIMATE.init_#t~nondet990.base, ULTIMATE.init_#t~nondet990.offset;
    havoc ULTIMATE.init_#t~nondet991.offset, ULTIMATE.init_#t~nondet991.base;
    havoc ULTIMATE.init_#t~nondet992.base, ULTIMATE.init_#t~nondet992.offset;
    havoc ULTIMATE.init_#t~nondet993.base, ULTIMATE.init_#t~nondet993.offset;
    havoc ULTIMATE.init_#t~nondet994.base, ULTIMATE.init_#t~nondet994.offset;
    havoc ULTIMATE.init_#t~nondet995.offset, ULTIMATE.init_#t~nondet995.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#team_netdev_xmit_lock_key.base, ~#team_netdev_xmit_lock_key.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_xmit_lock_key.base, 0, ~#team_netdev_xmit_lock_key.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_xmit_lock_key.base, 0, ~#team_netdev_xmit_lock_key.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_xmit_lock_key.base, 0, ~#team_netdev_xmit_lock_key.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_xmit_lock_key.base, 0, ~#team_netdev_xmit_lock_key.offset + 3;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_xmit_lock_key.base, 0, ~#team_netdev_xmit_lock_key.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_xmit_lock_key.base, 0, ~#team_netdev_xmit_lock_key.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_xmit_lock_key.base, 0, ~#team_netdev_xmit_lock_key.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_xmit_lock_key.base, 0, ~#team_netdev_xmit_lock_key.offset + 7;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#team_netdev_addr_lock_key.offset, ~#team_netdev_addr_lock_key.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_addr_lock_key.base, 0, ~#team_netdev_addr_lock_key.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_addr_lock_key.base, 0, ~#team_netdev_addr_lock_key.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_addr_lock_key.base, 0, ~#team_netdev_addr_lock_key.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_addr_lock_key.base, 0, ~#team_netdev_addr_lock_key.offset + 3;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_addr_lock_key.base, 0, ~#team_netdev_addr_lock_key.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_addr_lock_key.base, 0, ~#team_netdev_addr_lock_key.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_addr_lock_key.base, 0, ~#team_netdev_addr_lock_key.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_netdev_addr_lock_key.base, 0, ~#team_netdev_addr_lock_key.offset + 7;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#team_tx_busylock_key.offset, ~#team_tx_busylock_key.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_tx_busylock_key.base, 0, ~#team_tx_busylock_key.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_tx_busylock_key.base, 0, ~#team_tx_busylock_key.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_tx_busylock_key.base, 0, ~#team_tx_busylock_key.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_tx_busylock_key.base, 0, ~#team_tx_busylock_key.offset + 3;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_tx_busylock_key.base, 0, ~#team_tx_busylock_key.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_tx_busylock_key.base, 0, ~#team_tx_busylock_key.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_tx_busylock_key.base, 0, ~#team_tx_busylock_key.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_tx_busylock_key.base, 0, ~#team_tx_busylock_key.offset + 7;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 528;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#team_netdev_ops.base, ~#team_netdev_ops.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_init.base_1, ~#team_netdev_ops.offset, 8, v_rep#funAddr~team_init.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_uninit.base_1, ~#team_netdev_ops.offset + 8, 8, v_rep#funAddr~team_uninit.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_open.base_1, ~#team_netdev_ops.offset + 16, 8, v_rep#funAddr~team_open.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_close.base_1, ~#team_netdev_ops.offset + 24, 8, v_rep#funAddr~team_close.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_xmit.base_1, ~#team_netdev_ops.offset + 32, 8, v_rep#funAddr~team_xmit.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_select_queue.base_1, ~#team_netdev_ops.offset + 40, 8, v_rep#funAddr~team_select_queue.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_change_rx_flags.base_1, ~#team_netdev_ops.offset + 48, 8, v_rep#funAddr~team_change_rx_flags.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_set_rx_mode.base_1, ~#team_netdev_ops.offset + 56, 8, v_rep#funAddr~team_set_rx_mode.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_set_mac_address.base_1, ~#team_netdev_ops.offset + 64, 8, v_rep#funAddr~team_set_mac_address.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 72, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 80, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 88, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_change_mtu.base_1, ~#team_netdev_ops.offset + 96, 8, v_rep#funAddr~team_change_mtu.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 104, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 112, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_get_stats64.base_1, ~#team_netdev_ops.offset + 120, 8, v_rep#funAddr~team_get_stats64.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 128, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_vlan_rx_add_vid.base_1, ~#team_netdev_ops.offset + 136, 8, v_rep#funAddr~team_vlan_rx_add_vid.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_vlan_rx_kill_vid.base_1, ~#team_netdev_ops.offset + 144, 8, v_rep#funAddr~team_vlan_rx_kill_vid.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_poll_controller.base_1, ~#team_netdev_ops.offset + 152, 8, v_rep#funAddr~team_poll_controller.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_netpoll_setup.base_1, ~#team_netdev_ops.offset + 160, 8, v_rep#funAddr~team_netpoll_setup.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_netpoll_cleanup.base_1, ~#team_netdev_ops.offset + 168, 8, v_rep#funAddr~team_netpoll_cleanup.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 176, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 184, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 192, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 200, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 208, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 216, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 224, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 232, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 240, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 248, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 256, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 264, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 272, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 280, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 288, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 296, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 304, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 312, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 320, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 328, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_add_slave.base_1, ~#team_netdev_ops.offset + 336, 8, v_rep#funAddr~team_add_slave.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_del_slave.base_1, ~#team_netdev_ops.offset + 344, 8, v_rep#funAddr~team_del_slave.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_fix_features.base_1, ~#team_netdev_ops.offset + 352, 8, v_rep#funAddr~team_fix_features.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 360, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 368, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 376, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~switchdev_port_fdb_add.base_1, ~#team_netdev_ops.offset + 384, 8, v_rep#funAddr~switchdev_port_fdb_add.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~switchdev_port_fdb_del.base_1, ~#team_netdev_ops.offset + 392, 8, v_rep#funAddr~switchdev_port_fdb_del.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~switchdev_port_fdb_dump.base_1, ~#team_netdev_ops.offset + 400, 8, v_rep#funAddr~switchdev_port_fdb_dump.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~switchdev_port_bridge_setlink.base_1, ~#team_netdev_ops.offset + 408, 8, v_rep#funAddr~switchdev_port_bridge_setlink.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~switchdev_port_bridge_getlink.base_1, ~#team_netdev_ops.offset + 416, 8, v_rep#funAddr~switchdev_port_bridge_getlink.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~switchdev_port_bridge_dellink.base_1, ~#team_netdev_ops.offset + 424, 8, v_rep#funAddr~switchdev_port_bridge_dellink.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_change_carrier.base_1, ~#team_netdev_ops.offset + 432, 8, v_rep#funAddr~team_change_carrier.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 440, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 448, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 456, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 464, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 472, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 480, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 488, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 496, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~passthru_features_check.base_1, ~#team_netdev_ops.offset + 504, 8, v_rep#funAddr~passthru_features_check.offset_1, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 512, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_netdev_ops.offset + 520, 8, 0, ~#team_netdev_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 392;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#team_ethtool_ops.offset, ~#team_ethtool_ops.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 8, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_ethtool_get_drvinfo.base_1, ~#team_ethtool_ops.offset + 16, 8, v_rep#funAddr~team_ethtool_get_drvinfo.offset_1, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 24, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 32, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 40, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 48, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 56, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 64, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 72, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~ethtool_op_get_link.base_1, ~#team_ethtool_ops.offset + 80, 8, v_rep#funAddr~ethtool_op_get_link.offset_1, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 88, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 96, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 104, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 112, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 120, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 128, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 136, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 144, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 152, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 160, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 168, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 176, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 184, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 192, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 200, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 208, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 216, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 224, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 232, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 240, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 248, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 256, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 264, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 272, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 280, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 288, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 296, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 304, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 312, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 320, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 328, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 336, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 344, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 352, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 360, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 368, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 376, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_ethtool_ops.offset + 384, 8, 0, ~#team_ethtool_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 180;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#team_link_ops.offset, ~#team_link_ops.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 8, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 5;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet1223.offset, ULTIMATE.init_#t~nondet1223.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1223.base := #memory_int[ULTIMATE.init_#t~nondet1223.base][ULTIMATE.init_#t~nondet1223.offset := 116]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1223.base := #memory_int[ULTIMATE.init_#t~nondet1223.base][ULTIMATE.init_#t~nondet1223.offset + 1 := 101]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1223.base := #memory_int[ULTIMATE.init_#t~nondet1223.base][ULTIMATE.init_#t~nondet1223.offset + 2 := 97]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1223.base := #memory_int[ULTIMATE.init_#t~nondet1223.base][ULTIMATE.init_#t~nondet1223.offset + 3 := 109]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet1223.base := #memory_int[ULTIMATE.init_#t~nondet1223.base][ULTIMATE.init_#t~nondet1223.offset + 4 := 0]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet1223.base, ~#team_link_ops.offset + 16, 8, ULTIMATE.init_#t~nondet1223.offset, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_link_ops.base, 976, ~#team_link_ops.offset + 24;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_setup.base_1, ~#team_link_ops.offset + 28, 8, v_rep#funAddr~team_setup.offset_1, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_link_ops.base, 0, ~#team_link_ops.offset + 36;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 40, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_validate.base_1, ~#team_link_ops.offset + 48, 8, v_rep#funAddr~team_validate.offset_1, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_newlink.base_1, ~#team_link_ops.offset + 56, 8, v_rep#funAddr~team_newlink.offset_1, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 64, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 72, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 80, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 88, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 96, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 104, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_get_num_tx_queues.base_1, ~#team_link_ops.offset + 112, 8, v_rep#funAddr~team_get_num_tx_queues.offset_1, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_get_num_rx_queues.base_1, ~#team_link_ops.offset + 120, 8, v_rep#funAddr~team_get_num_rx_queues.offset_1, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_link_ops.base, 0, ~#team_link_ops.offset + 128;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 132, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 140, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 148, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 156, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 164, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_link_ops.offset + 172, 8, 0, ~#team_link_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    havoc ULTIMATE.init_#t~nondet1223.offset, ULTIMATE.init_#t~nondet1223.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 126;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#team_nl_family.offset, ~#team_nl_family.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_nl_family.base, 0, ~#team_nl_family.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 116, ~#team_nl_family.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 101, ~#team_nl_family.offset + 9;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 97, ~#team_nl_family.offset + 10;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 109, ~#team_nl_family.offset + 11;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 13;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 15;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 17;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 19;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 21;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 22;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 23;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_nl_family.base, 1, ~#team_nl_family.offset + 24;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_nl_family.base, 3, ~#team_nl_family.offset + 28;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 1, ~#team_nl_family.offset + 32;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 33;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_family.offset + 34, 8, 0, ~#team_nl_family.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_family.offset + 42, 8, 0, ~#team_nl_family.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_family.offset + 50, 8, 0, ~#team_nl_family.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_family.offset + 58, 8, 0, ~#team_nl_family.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_family.offset + 66, 8, 0, ~#team_nl_family.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_family.offset + 74, 8, 0, ~#team_nl_family.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_family.offset + 82, 8, 0, ~#team_nl_family.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 90;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 94;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_nl_family.base, 0, ~#team_nl_family.offset + 98;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_family.offset + 102, 8, 0, ~#team_nl_family.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_family.offset + 110, 8, 0, ~#team_nl_family.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_family.offset + 118, 8, 0, ~#team_nl_family.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 16;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#team_nl_policy.offset, ~#team_nl_policy.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_policy.base, 0, ~#team_nl_policy.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_policy.base, 0, ~#team_nl_policy.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_policy.base, 3, ~#team_nl_policy.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_policy.base, 0, ~#team_nl_policy.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_policy.base, 8, ~#team_nl_policy.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_policy.base, 0, ~#team_nl_policy.offset + 10;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_policy.base, 8, ~#team_nl_policy.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_policy.base, 0, ~#team_nl_policy.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 32;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#team_nl_option_policy.offset, ~#team_nl_option_policy.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 0, ~#team_nl_option_policy.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 0, ~#team_nl_option_policy.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 5, ~#team_nl_option_policy.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 32, ~#team_nl_option_policy.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 6, ~#team_nl_option_policy.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 0, ~#team_nl_option_policy.offset + 10;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 1, ~#team_nl_option_policy.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 0, ~#team_nl_option_policy.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 11, ~#team_nl_option_policy.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 0, ~#team_nl_option_policy.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 0, ~#team_nl_option_policy.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 0, ~#team_nl_option_policy.offset + 22;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 0, ~#team_nl_option_policy.offset + 24;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 0, ~#team_nl_option_policy.offset + 26;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 0, ~#team_nl_option_policy.offset + 28;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#team_nl_option_policy.base, 0, ~#team_nl_option_policy.offset + 30;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 140;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#team_nl_ops.base, ~#team_nl_ops.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#team_nl_policy.base, ~#team_nl_ops.offset, 8, ~#team_nl_policy.offset, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_nl_cmd_noop.base_1, ~#team_nl_ops.offset + 8, 8, v_rep#funAddr~team_nl_cmd_noop.offset_1, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_ops.offset + 16, 8, 0, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_ops.offset + 24, 8, 0, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_ops.base, 0, ~#team_nl_ops.offset + 32;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_ops.base, 0, ~#team_nl_ops.offset + 33;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_ops.base, 0, ~#team_nl_ops.offset + 34;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#team_nl_policy.base, ~#team_nl_ops.offset + 35, 8, ~#team_nl_policy.offset, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_nl_cmd_options_set.base_1, ~#team_nl_ops.offset + 43, 8, v_rep#funAddr~team_nl_cmd_options_set.offset_1, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_ops.offset + 51, 8, 0, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_ops.offset + 59, 8, 0, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_ops.base, 1, ~#team_nl_ops.offset + 67;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_ops.base, 0, ~#team_nl_ops.offset + 68;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_ops.base, 1, ~#team_nl_ops.offset + 69;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#team_nl_policy.base, ~#team_nl_ops.offset + 70, 8, ~#team_nl_policy.offset, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_nl_cmd_options_get.base_1, ~#team_nl_ops.offset + 78, 8, v_rep#funAddr~team_nl_cmd_options_get.offset_1, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_ops.offset + 86, 8, 0, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_ops.offset + 94, 8, 0, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_ops.base, 2, ~#team_nl_ops.offset + 102;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_ops.base, 0, ~#team_nl_ops.offset + 103;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_ops.base, 1, ~#team_nl_ops.offset + 104;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#team_nl_policy.base, ~#team_nl_ops.offset + 105, 8, ~#team_nl_policy.offset, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_nl_cmd_port_list_get.base_1, ~#team_nl_ops.offset + 113, 8, v_rep#funAddr~team_nl_cmd_port_list_get.offset_1, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_ops.offset + 121, 8, 0, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_nl_ops.offset + 129, 8, 0, ~#team_nl_ops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_ops.base, 3, ~#team_nl_ops.offset + 137;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_ops.base, 0, ~#team_nl_ops.offset + 138;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_ops.base, 1, ~#team_nl_ops.offset + 139;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 16;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#team_nl_mcgrps.base, ~#team_nl_mcgrps.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 99, ~#team_nl_mcgrps.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 104, ~#team_nl_mcgrps.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 97, ~#team_nl_mcgrps.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 110, ~#team_nl_mcgrps.offset + 3;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 103, ~#team_nl_mcgrps.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 101, ~#team_nl_mcgrps.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 95, ~#team_nl_mcgrps.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 101, ~#team_nl_mcgrps.offset + 7;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 118, ~#team_nl_mcgrps.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 101, ~#team_nl_mcgrps.offset + 9;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 110, ~#team_nl_mcgrps.offset + 10;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 116, ~#team_nl_mcgrps.offset + 11;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 0, ~#team_nl_mcgrps.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 0, ~#team_nl_mcgrps.offset + 13;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 0, ~#team_nl_mcgrps.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#team_nl_mcgrps.base, 0, ~#team_nl_mcgrps.offset + 15;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 20;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#team_notifier_block.base, ~#team_notifier_block.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_device_event.base_1, ~#team_notifier_block.offset, 8, v_rep#funAddr~team_device_event.offset_1, ~#team_notifier_block.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#team_notifier_block.offset + 8, 8, 0, ~#team_notifier_block.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#team_notifier_block.base, 0, ~#team_notifier_block.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc main_#res;
    havoc main_~ldvarg11~1674.offset, main_~tmp___11~1674.base, main_~tmp___13~1674.base, main_#t~mem1635, main_#t~mem1658, main_~#ldvarg18~1674.offset, main_~#ldvarg8~1674.offset, main_~tmp___10~1674.base, main_~tmp___14~1674.base, main_#t~ret1662, main_#t~ret1528.base, main_~tmp___15~1674.base, main_~tmp___17~1674.base, main_~tmp___20~1674.offset, main_#t~mem1552, main_~tmp___16~1674.base, main_#t~ret1624, main_#t~ret1647, main_#t~ret1609, main_#t~nondet1685, main_~ldvarg9~1674.offset, main_#t~ret1516.offset, main_#t~mem1601, main_#t~ret1534.offset, main_#t~ret1553, main_~tmp___12~1674.base, main_~ldvarg29~1674.base, main_~#ldvarg41~1674.offset, main_#t~mem1623, main_#t~ret1665.offset, main_~ldvarg17~1674.base, main_#t~ret1651, main_#t~ret1520.base, main_#t~ret1522.base, main_#t~mem1564, main_#t~ret1531.base, main_#t~ret1674, main_#t~ret1659, main_#t~ret1524.base, main_#t~ret1526.base, main_#t~ret1636, main_~tmp___19~1674.base, main_#t~mem1576, main_#t~mem1599, main_#t~ret1666.base, main_~tmp___3~1674.offset, main_~tmp___8~1674.offset, main_~tmp___18~1674.base, main_#t~ret1524.offset, main_#t~ret1587, main_#t~mem1613, main_#t~ret1506.offset, main_#t~switch1689, main_~tmp___24~1674, main_#t~ret1663, main_~tmp___15~1674.offset, main_#t~mem1574, main_#t~mem1597, main_#t~ret1535.base, main_#t~ret1539.base, main_#t~ret1539.offset, main_~#ldvarg23~1674.offset, main_#t~mem1648.base, main_~ldvarg13~1674.base, main_~ldvarg35~1674.base, main_~ldvarg35~1674.offset, main_~ldvarg14~1674.base, main_~ldvarg36~1674.base, main_#t~ret1667.offset, main_#t~ret1577, main_~tmp___2~1674.offset, main_~ldvarg38~1674.base, main_~ldvarg20~1674.offset, main_#t~ret1675, main_#t~ret1532.offset, main_#t~mem1586, main_~ldvarg34~1674.base, main_~tmp___16~1674.offset, main_#t~ret1614, main_~ldvarg11~1674.base, main_~#ldvarg37~1674.offset, main_#t~ret1526.offset, main_#t~mem1598, main_~ldvarg31~1674.base, main_~ldvarg10~1674.base, main_#t~ret1521.offset, main_#t~switch1693, main_~ldvarg34~1674.offset, main_#t~mem1650.offset, main_#t~ret1509.base, main_#t~ret1505.base, main_~#ldvarg41~1674.base, main_~ldvarg40~1674.offset, main_#t~ret1559, main_~tmp___17~1674.offset, main_#t~ret1546.base, main_#t~mem1637, main_#t~ret1537.offset, main_~ldvarg0~1674.offset, main_#t~ret1545.base, main_#t~ret1622, main_#t~ret1645, main_#t~ret1683, main_#t~mem1592, main_~#ldvarg37~1674.base, main_#t~ret1546.offset, main_#t~ret1607, main_#t~ret1540.base, main_#t~ret1543.base, main_#t~mem1589, main_~ldvarg10~1674.offset, main_#t~mem1603, main_#t~nondet1548, main_~#ldvarg21~1674.offset, main_#t~switch1686, main_#t~mem1640, main_#t~ret1518.offset, main_~#ldvarg19~1674.offset, main_#t~mem1625, main_~ldvarg39~1674.base, main_#t~ret1672, main_#t~ret1523.offset, main_#t~ret1530.offset, main_#t~ret1657, main_~ldvarg36~1674.offset, main_#t~ret1515.base, main_~ldvarg5~1674.offset, main_~#ldvarg30~1674.offset, main_#t~mem1578, main_#t~ret1513.base, main_#t~mem1615, main_~ldvarg39~1674.offset, main_~tmp___23~1674, main_#t~ret1505.offset, main_~tmp___26~1674, main_#t~mem1638, main_#t~ret1537.base, main_~#ldvarg32~1674.offset, main_#t~ret1542.offset, main_#t~ret1661, main_~tmp___20~1674.base, main_#t~ret1514.offset, main_#t~mem1591, main_#t~ret1508.offset, main_#t~ret1684, main_#t~ret1600, main_#t~ret1536.offset, main_~ldvarg22~1674.offset, main_~tmp___19~1674.offset, main_#t~ret1590, main_#t~mem1565, main_#t~mem1588, main_~ldvarg0~1674.base, main_#t~ret1511.offset, main_#t~ret1520.offset, main_#t~ret1608, main_#t~mem1602, main_#t~ret1575, main_#t~mem1641, main_~ldvarg38~1674.offset, main_~#ldvarg33~1674.offset, main_#t~ret1510.base, main_#t~mem1626, main_#t~mem1648.offset, main_#t~ret1521.base, main_~#ldvarg12~1674.base, main_~#ldvarg33~1674.base, main_#t~ret1527.offset, main_#t~mem1580, main_#t~ret1532.base, main_#t~ret1612, main_#t~ret1673, main_#t~ret1533.offset, main_#t~mem1554, main_#t~ret1518.base, main_~ldvarg42~1674.base, main_~ldvarg6~1674.base, main_#t~mem1690, main_#t~ret1507.base, main_#t~mem1652, main_#t~ret1563, main_~ldvarg40~1674.base, main_#t~mem1654, main_#t~ret1681, main_~tmp~1674.base, main_#t~mem1594, main_#t~ret1529.base, main_#t~ret1527.base, main_#t~ret1510.offset, main_#t~ret1620, main_#t~ret1643, main_#t~ret1666.offset, main_#t~ret1507.offset, main_~#ldvarg16~1674.base, main_#t~ret1605, main_~#ldvarg18~1674.base, main_~#ldvarg15~1674.base, main_~#ldvarg19~1674.base, main_#t~mem1568, main_#t~ret1557, main_#t~ret1543.offset, main_#t~switch1669, main_#t~ret1525.offset, main_#t~ret1595, main_~tmp___3~1674.base, main_#t~ret1670, main_~ldvarg1~1674.offset, main_~tmp___5~1674.base, main_#t~ret1535.offset, main_~tmp___4~1674.base, main_#t~mem1627, main_~#ldvarg4~1674.base, main_#t~mem1583, main_~tmp___7~1674.base, main_~#ldvarg25~1674.offset, main_#t~ret1678, main_~#ldvarg3~1674.base, main_#t~ret1655, main_~ldvarg6~1674.offset, main_~tmp___6~1674.base, main_~#ldvarg2~1674.base, main_#t~ret1560, main_#t~nondet1692, main_#t~ret1517.offset, main_~tmp___9~1674.base, main_~tmp___13~1674.offset, main_#t~ret1617, main_~tmp___8~1674.base, main_~tmp___18~1674.offset, main_#t~mem1630, main_~ldvarg7~1674.offset, main_#t~mem1632, main_~tmp___25~1674, main_#t~nondet1550, main_#t~ret1558, main_#t~ret1545.offset, main_~ldvarg42~1674.offset, main_#t~ret1682, main_#t~ret1538.base, main_#t~ret1644, main_#t~ret1534.base, main_#t~mem1570, main_#t~mem1593, main_~#ldvarg26~1674.base, main_~#ldvarg27~1674.base, main_~tmp___14~1674.offset, main_#t~switch1549, main_#t~ret1606, main_~#ldvarg25~1674.base, main_#t~mem1567, main_~ldvarg14~1674.offset, main_#t~ret1629, main_~tmp___21~1674, main_#t~mem1604, main_~#ldvarg28~1674.base, main_~#ldvarg15~1674.offset, main_#t~mem1650.base, main_~tmp___2~1674.base, main_#t~ret1573, main_#t~ret1515.offset, main_~tmp___0~1674.offset, main_~tmp___1~1674.base, main_#t~ret1569, main_~#ldvarg21~1674.base, main_~tmp___0~1674.base, main_#t~ret1509.offset, main_~tmp~1674.offset, main_~#ldvarg8~1674.base, main_#t~mem1628, main_#t~ret1665.base, main_#t~nondet1688, main_~#ldvarg23~1674.base, main_#t~ret1610, main_#t~ret1633, main_#t~ret1671, main_#t~ret1694, main_~#ldvarg24~1674.base, main_#t~ret1530.base, main_#t~mem1582, main_#t~ret1516.base, main_#t~mem1556, main_#t~ret1523.base, main_#t~ret1618, main_#t~ret1679, main_~ldvarg13~1674.offset, main_#t~ret1512.base, main_~#ldvarg16~1674.offset, main_#t~ret1584, main_~tmp___1~1674.offset, main_~#ldvarg26~1674.offset, main_#t~ret1528.offset, main_#t~mem1656, main_#t~ret1531.offset, main_#t~ret1547.base, main_#t~ret1522.offset, main_#t~ret1687, main_#t~ret1513.offset, main_#t~mem1596, main_#t~ret1664, main_#t~ret1649, main_~tmp___9~1674.offset, main_#t~ret1541.base, main_#t~ret1542.base, main_~tmp___4~1674.offset, main_~#ldvarg4~1674.offset, main_#t~ret1544.base, main_~ldvarg29~1674.offset, main_#t~ret1519.offset, main_#t~ret1555, main_~ldvarg31~1674.offset, main_~tmp___12~1674.offset, main_#t~ret1540.offset, main_#t~ret1541.offset, main_#t~ret1512.offset, main_#t~mem1621, main_~#ldvarg2~1674.offset, main_#t~ret1547.offset, main_#t~ret1691, main_#t~nondet1668, main_~tmp___7~1674.offset, main_#t~ret1511.base, main_#t~mem1562, main_#t~ret1676, main_#t~mem1585, main_#t~ret1653, main_#t~ret1581, main_#t~ret1508.base, main_#t~mem1619, main_~#ldvarg24~1674.offset, main_#t~ret1517.base, main_#t~ret1519.base, main_#t~mem1646.offset, main_#t~ret1566, main_#t~ret1506.base, main_#t~ret1529.offset, main_#t~mem1611, main_~tmp___6~1674.offset, main_#t~ret1680, main_#t~mem1634, main_~tmp___22~1674, main_#t~mem1572, main_#t~ret1536.base, main_#t~ret1642, main_#t~ret1533.base, main_#t~ret1571, main_~ldvarg1~1674.base, main_~#ldvarg28~1674.offset, main_#t~mem1646.base, main_#t~ret1579, main_~tmp___10~1674.offset, main_#t~mem1660, main_~ldvarg17~1674.offset, main_~ldvarg9~1674.base, main_#t~ret1544.offset, main_~#ldvarg32~1674.base, main_#t~mem1561, main_~tmp___5~1674.offset, main_#t~ret1677, main_#t~switch1551, main_~#ldvarg27~1674.offset, main_~#ldvarg12~1674.offset, main_#t~ret1631, main_~ldvarg22~1674.base, main_#t~ret1616, main_#t~ret1525.base, main_#t~ret1514.base, main_#t~ret1667.base, main_~ldvarg20~1674.base, main_#t~ret1639, main_~#ldvarg3~1674.offset, main_~ldvarg7~1674.base, main_~ldvarg5~1674.base, main_~#ldvarg30~1674.base, main_#t~ret1538.offset, main_~tmp___11~1674.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg18~1674.base, main_~#ldvarg18~1674.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc main_~ldvarg11~1674.base, main_~ldvarg11~1674.offset;
    havoc main_~tmp~1674.base, main_~tmp~1674.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 2;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg32~1674.base, main_~#ldvarg32~1674.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc main_~ldvarg7~1674.offset, main_~ldvarg7~1674.base;
    havoc main_~tmp___0~1674.offset, main_~tmp___0~1674.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg23~1674.offset, main_~#ldvarg23~1674.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 2;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg12~1674.base, main_~#ldvarg12~1674.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc main_~ldvarg1~1674.base, main_~ldvarg1~1674.offset;
    havoc main_~tmp___1~1674.base, main_~tmp___1~1674.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 2;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg37~1674.base, main_~#ldvarg37~1674.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc main_~ldvarg29~1674.base, main_~ldvarg29~1674.offset;
    havoc main_~tmp___2~1674.offset, main_~tmp___2~1674.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg24~1674.offset, main_~#ldvarg24~1674.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc main_~ldvarg35~1674.base, main_~ldvarg35~1674.offset;
    havoc main_~tmp___3~1674.base, main_~tmp___3~1674.offset;
    havoc main_~ldvarg0~1674.base, main_~ldvarg0~1674.offset;
    havoc main_~tmp___4~1674.offset, main_~tmp___4~1674.base;
    havoc main_~ldvarg5~1674.offset, main_~ldvarg5~1674.base;
    havoc main_~tmp___5~1674.base, main_~tmp___5~1674.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 2;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg33~1674.offset, main_~#ldvarg33~1674.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg16~1674.base, main_~#ldvarg16~1674.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc main_~ldvarg6~1674.base, main_~ldvarg6~1674.offset;
    havoc main_~tmp___6~1674.offset, main_~tmp___6~1674.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg4~1674.offset, main_~#ldvarg4~1674.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc main_~ldvarg14~1674.base, main_~ldvarg14~1674.offset;
    havoc main_~tmp___7~1674.offset, main_~tmp___7~1674.base;
    havoc main_~ldvarg34~1674.offset, main_~ldvarg34~1674.base;
    havoc main_~tmp___8~1674.base, main_~tmp___8~1674.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 2;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg28~1674.offset, main_~#ldvarg28~1674.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 1;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg2~1674.offset, main_~#ldvarg2~1674.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc main_~ldvarg20~1674.base, main_~ldvarg20~1674.offset;
    havoc main_~tmp___9~1674.offset, main_~tmp___9~1674.base;
    havoc main_~ldvarg31~1674.base, main_~ldvarg31~1674.offset;
    havoc main_~tmp___10~1674.base, main_~tmp___10~1674.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg3~1674.offset, main_~#ldvarg3~1674.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 2;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg8~1674.offset, main_~#ldvarg8~1674.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc main_~ldvarg13~1674.base, main_~ldvarg13~1674.offset;
    havoc main_~tmp___11~1674.base, main_~tmp___11~1674.offset;
    havoc main_~ldvarg36~1674.offset, main_~ldvarg36~1674.base;
    havoc main_~tmp___12~1674.offset, main_~tmp___12~1674.base;
    havoc main_~ldvarg10~1674.base, main_~ldvarg10~1674.offset;
    havoc main_~tmp___13~1674.base, main_~tmp___13~1674.offset;
    havoc main_~ldvarg9~1674.base, main_~ldvarg9~1674.offset;
    havoc main_~tmp___14~1674.offset, main_~tmp___14~1674.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 2;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg26~1674.offset, main_~#ldvarg26~1674.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 2;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg27~1674.base, main_~#ldvarg27~1674.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg15~1674.base, main_~#ldvarg15~1674.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 2;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg30~1674.offset, main_~#ldvarg30~1674.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg21~1674.base, main_~#ldvarg21~1674.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc main_~ldvarg17~1674.offset, main_~ldvarg17~1674.base;
    havoc main_~tmp___15~1674.offset, main_~tmp___15~1674.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg25~1674.base, main_~#ldvarg25~1674.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc main_~ldvarg22~1674.offset, main_~ldvarg22~1674.base;
    havoc main_~tmp___16~1674.offset, main_~tmp___16~1674.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg19~1674.offset, main_~#ldvarg19~1674.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc main_~ldvarg38~1674.offset, main_~ldvarg38~1674.base;
    havoc main_~tmp___17~1674.offset, main_~tmp___17~1674.base;
    havoc main_~ldvarg39~1674.offset, main_~ldvarg39~1674.base;
    havoc main_~tmp___18~1674.base, main_~tmp___18~1674.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    main_~#ldvarg41~1674.offset, main_~#ldvarg41~1674.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc main_~ldvarg40~1674.offset, main_~ldvarg40~1674.base;
    havoc main_~tmp___19~1674.offset, main_~tmp___19~1674.base;
    havoc main_~ldvarg42~1674.base, main_~ldvarg42~1674.offset;
    havoc main_~tmp___20~1674.base, main_~tmp___20~1674.offset;
    havoc main_~tmp___21~1674;
    havoc main_~tmp___22~1674;
    havoc main_~tmp___23~1674;
    havoc main_~tmp___24~1674;
    havoc main_~tmp___25~1674;
    havoc main_~tmp___26~1674;
    ldv_init_zalloc_#in~size := 8;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (ldv_init_zalloc_~size <= 2147483647 && 0 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size < 4294967296;
    #Ultimate.alloc_~size := 1 * ldv_init_zalloc_~size;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (ldv_init_zalloc_~size < 4294967296 && ldv_init_zalloc_~size <= 2147483647) && 0 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume 18446744073709551616 + 18446744073709551616 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset && !((ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset) % 18446744073709551616 == 0);
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1505.offset, main_#t~ret1505.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    main_~tmp~1674.base, main_~tmp~1674.offset := main_#t~ret1505.base, main_#t~ret1505.offset;
    havoc main_#t~ret1505.offset, main_#t~ret1505.base;
    main_~ldvarg11~1674.base, main_~ldvarg11~1674.offset := main_~tmp~1674.base, main_~tmp~1674.offset;
    ldv_init_zalloc_#in~size := 448;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (ldv_init_zalloc_~size <= 2147483647 && ldv_init_zalloc_~size < 4294967296) && 0 <= ldv_init_zalloc_~size;
    #Ultimate.alloc_~size := 1 * ldv_init_zalloc_~size;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (ldv_init_zalloc_~size <= 2147483647 && 0 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size < 4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (!(ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base + 18446744073709551616 == 0) && -18446744073709551616 <= ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base) && ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base < 0;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1506.base, main_#t~ret1506.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    main_~tmp___0~1674.offset, main_~tmp___0~1674.base := main_#t~ret1506.offset, main_#t~ret1506.base;
    havoc main_#t~ret1506.base, main_#t~ret1506.offset;
    main_~ldvarg7~1674.offset, main_~ldvarg7~1674.base := main_~tmp___0~1674.offset, main_~tmp___0~1674.base;
    ldv_init_zalloc_#in~size := 1;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (0 <= ldv_init_zalloc_~size && ldv_init_zalloc_~size < 4294967296) && !(ldv_init_zalloc_~size <= 2147483647);
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (ldv_init_zalloc_~size < 4294967296 && !(ldv_init_zalloc_~size <= 2147483647)) && 0 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (!(ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset - 18446744073709551616 == 0) && ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < 18446744073709551616 + 18446744073709551616) && 18446744073709551616 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1507.offset, main_#t~ret1507.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    main_~tmp___1~1674.base, main_~tmp___1~1674.offset := main_#t~ret1507.base, main_#t~ret1507.offset;
    havoc main_#t~ret1507.offset, main_#t~ret1507.base;
    main_~ldvarg1~1674.base, main_~ldvarg1~1674.offset := main_~tmp___1~1674.base, main_~tmp___1~1674.offset;
    ldv_init_zalloc_#in~size := 16;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (0 <= ldv_init_zalloc_~size && !(ldv_init_zalloc_~size <= 2147483647)) && ldv_init_zalloc_~size < 4294967296;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (!(ldv_init_zalloc_~size <= 2147483647) && ldv_init_zalloc_~size < 4294967296) && 0 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume !((ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset) % 18446744073709551616 == 0) && 18446744073709551616 + 18446744073709551616 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1508.base, main_#t~ret1508.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    main_~tmp___2~1674.offset, main_~tmp___2~1674.base := main_#t~ret1508.offset, main_#t~ret1508.base;
    havoc main_#t~ret1508.base, main_#t~ret1508.offset;
    main_~ldvarg29~1674.base, main_~ldvarg29~1674.offset := main_~tmp___2~1674.base, main_~tmp___2~1674.offset;
    ldv_init_zalloc_#in~size := 12;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (ldv_init_zalloc_~size < 4294967296 + 4294967296 && 4294967296 <= ldv_init_zalloc_~size) && !(ldv_init_zalloc_~size <= 6442450943);
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (!(ldv_init_zalloc_~size <= 6442450943) && 4294967296 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size < 4294967296 + 4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296 - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (!(ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base + 18446744073709551616 == 0) && -18446744073709551616 <= ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base) && ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base < 0;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1509.offset, main_#t~ret1509.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    main_~tmp___3~1674.base, main_~tmp___3~1674.offset := main_#t~ret1509.base, main_#t~ret1509.offset;
    havoc main_#t~ret1509.offset, main_#t~ret1509.base;
    main_~ldvarg35~1674.base, main_~ldvarg35~1674.offset := main_~tmp___3~1674.base, main_~tmp___3~1674.offset;
    ldv_init_zalloc_#in~size := 184;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (ldv_init_zalloc_~size <= 6442450943 && ldv_init_zalloc_~size < 4294967296 + 4294967296) && 4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (ldv_init_zalloc_~size <= 6442450943 && 4294967296 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size < 4294967296 + 4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (!(ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset == 0) && ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < 18446744073709551616) && 0 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1510.base, main_#t~ret1510.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    main_~tmp___4~1674.offset, main_~tmp___4~1674.base := main_#t~ret1510.offset, main_#t~ret1510.base;
    havoc main_#t~ret1510.base, main_#t~ret1510.offset;
    main_~ldvarg0~1674.base, main_~ldvarg0~1674.offset := main_~tmp___4~1674.base, main_~tmp___4~1674.offset;
    ldv_init_zalloc_#in~size := 1;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (ldv_init_zalloc_~size < 4294967296 + 4294967296 && 4294967296 <= ldv_init_zalloc_~size) && !(ldv_init_zalloc_~size <= 6442450943);
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (!(ldv_init_zalloc_~size <= 6442450943) && 4294967296 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size < 4294967296 + 4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296 - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume !((ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base) % 18446744073709551616 == 0) && 18446744073709551616 + 18446744073709551616 <= ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1511.base, main_#t~ret1511.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    main_~tmp___5~1674.base, main_~tmp___5~1674.offset := main_#t~ret1511.base, main_#t~ret1511.offset;
    havoc main_#t~ret1511.base, main_#t~ret1511.offset;
    main_~ldvarg5~1674.offset, main_~ldvarg5~1674.base := main_~tmp___5~1674.offset, main_~tmp___5~1674.base;
    ldv_init_zalloc_#in~size := 232;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (4294967296 <= ldv_init_zalloc_~size && !(ldv_init_zalloc_~size <= 6442450943)) && ldv_init_zalloc_~size < 4294967296 + 4294967296;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (4294967296 <= ldv_init_zalloc_~size && !(ldv_init_zalloc_~size <= 6442450943)) && ldv_init_zalloc_~size < 4294967296 + 4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296 - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (0 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset && !(ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset == 0)) && ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < 18446744073709551616;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1512.offset, main_#t~ret1512.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    main_~tmp___6~1674.offset, main_~tmp___6~1674.base := main_#t~ret1512.offset, main_#t~ret1512.base;
    havoc main_#t~ret1512.offset, main_#t~ret1512.base;
    main_~ldvarg6~1674.base, main_~ldvarg6~1674.offset := main_~tmp___6~1674.base, main_~tmp___6~1674.offset;
    ldv_init_zalloc_#in~size := 112;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (0 <= ldv_init_zalloc_~size && !(ldv_init_zalloc_~size <= 2147483647)) && ldv_init_zalloc_~size < 4294967296;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (!(ldv_init_zalloc_~size <= 2147483647) && 0 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size < 4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (18446744073709551616 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset && ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < 18446744073709551616 + 18446744073709551616) && !(ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset - 18446744073709551616 == 0);
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1513.base, main_#t~ret1513.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    main_~tmp___7~1674.offset, main_~tmp___7~1674.base := main_#t~ret1513.offset, main_#t~ret1513.base;
    havoc main_#t~ret1513.base, main_#t~ret1513.offset;
    main_~ldvarg14~1674.base, main_~ldvarg14~1674.offset := main_~tmp___7~1674.base, main_~tmp___7~1674.offset;
    ldv_init_zalloc_#in~size := 1;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (0 <= ldv_init_zalloc_~size && ldv_init_zalloc_~size <= 2147483647) && ldv_init_zalloc_~size < 4294967296;
    #Ultimate.alloc_~size := 1 * ldv_init_zalloc_~size;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (ldv_init_zalloc_~size <= 2147483647 && 0 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size < 4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < 0 && !(ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset + 18446744073709551616 == 0)) && -18446744073709551616 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1514.base, main_#t~ret1514.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    main_~tmp___8~1674.base, main_~tmp___8~1674.offset := main_#t~ret1514.base, main_#t~ret1514.offset;
    havoc main_#t~ret1514.base, main_#t~ret1514.offset;
    main_~ldvarg34~1674.offset, main_~ldvarg34~1674.base := main_~tmp___8~1674.offset, main_~tmp___8~1674.base;
    ldv_init_zalloc_#in~size := 232;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume !(ldv_init_zalloc_~size % 4294967296 <= 2147483647) && 4294967296 + 4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size % 4294967296 - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume !(ldv_init_zalloc_~size % 4294967296 <= 2147483647) && 4294967296 + 4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size % 4294967296 - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size % 4294967296 - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (!(ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset + 18446744073709551616 == 0) && -18446744073709551616 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset) && ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < 0;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1515.offset, main_#t~ret1515.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    main_~tmp___9~1674.offset, main_~tmp___9~1674.base := main_#t~ret1515.offset, main_#t~ret1515.base;
    havoc main_#t~ret1515.offset, main_#t~ret1515.base;
    main_~ldvarg20~1674.base, main_~ldvarg20~1674.offset := main_~tmp___9~1674.base, main_~tmp___9~1674.offset;
    ldv_init_zalloc_#in~size := 16;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume ldv_init_zalloc_~size < -4294967296 && ldv_init_zalloc_~size % 4294967296 <= 2147483647;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size % 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume ldv_init_zalloc_~size % 4294967296 <= 2147483647 && ldv_init_zalloc_~size < -4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size % 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size % 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume !((ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset) % 18446744073709551616 == 0) && 18446744073709551616 + 18446744073709551616 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1516.base, main_#t~ret1516.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    main_~tmp___10~1674.base, main_~tmp___10~1674.offset := main_#t~ret1516.base, main_#t~ret1516.offset;
    havoc main_#t~ret1516.base, main_#t~ret1516.offset;
    main_~ldvarg31~1674.base, main_~ldvarg31~1674.offset := main_~tmp___10~1674.base, main_~tmp___10~1674.offset;
    ldv_init_zalloc_#in~size := 232;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume ldv_init_zalloc_~size % 4294967296 <= 2147483647 && ldv_init_zalloc_~size < -4294967296;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size % 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume ldv_init_zalloc_~size < -4294967296 && ldv_init_zalloc_~size % 4294967296 <= 2147483647;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size % 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size % 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < 0 && !(ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset + 18446744073709551616 == 0)) && -18446744073709551616 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1517.offset, main_#t~ret1517.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    main_~tmp___11~1674.base, main_~tmp___11~1674.offset := main_#t~ret1517.base, main_#t~ret1517.offset;
    havoc main_#t~ret1517.offset, main_#t~ret1517.base;
    main_~ldvarg13~1674.base, main_~ldvarg13~1674.offset := main_~tmp___11~1674.base, main_~tmp___11~1674.offset;
    ldv_init_zalloc_#in~size := 8;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (ldv_init_zalloc_~size < 0 && ldv_init_zalloc_~size + 2147483649 <= 0) && -4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size + 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (ldv_init_zalloc_~size < 0 && ldv_init_zalloc_~size + 2147483649 <= 0) && -4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size + 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size + 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < 18446744073709551616 + 18446744073709551616 && 18446744073709551616 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset) && !(ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset - 18446744073709551616 == 0);
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1518.offset, main_#t~ret1518.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    main_~tmp___12~1674.offset, main_~tmp___12~1674.base := main_#t~ret1518.offset, main_#t~ret1518.base;
    havoc main_#t~ret1518.offset, main_#t~ret1518.base;
    main_~ldvarg36~1674.offset, main_~ldvarg36~1674.base := main_~tmp___12~1674.offset, main_~tmp___12~1674.base;
    ldv_init_zalloc_#in~size := 12;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume !(ldv_init_zalloc_~size % 4294967296 <= 2147483647) && 4294967296 + 4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size % 4294967296 - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume 4294967296 + 4294967296 <= ldv_init_zalloc_~size && !(ldv_init_zalloc_~size % 4294967296 <= 2147483647);
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size % 4294967296 - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size % 4294967296 - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume 18446744073709551616 + 18446744073709551616 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset && !((ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset) % 18446744073709551616 == 0);
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1519.base, main_#t~ret1519.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    main_~tmp___13~1674.base, main_~tmp___13~1674.offset := main_#t~ret1519.base, main_#t~ret1519.offset;
    havoc main_#t~ret1519.base, main_#t~ret1519.offset;
    main_~ldvarg10~1674.base, main_~ldvarg10~1674.offset := main_~tmp___13~1674.base, main_~tmp___13~1674.offset;
    ldv_init_zalloc_#in~size := 1;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (!(ldv_init_zalloc_~size <= 6442450943) && 4294967296 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size < 4294967296 + 4294967296;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (!(ldv_init_zalloc_~size <= 6442450943) && 4294967296 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size < 4294967296 + 4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296 - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (!(ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base == 0) && 0 <= ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base) && ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base < 18446744073709551616;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1520.offset, main_#t~ret1520.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    main_~tmp___14~1674.offset, main_~tmp___14~1674.base := main_#t~ret1520.offset, main_#t~ret1520.base;
    havoc main_#t~ret1520.offset, main_#t~ret1520.base;
    main_~ldvarg9~1674.base, main_~ldvarg9~1674.offset := main_~tmp___14~1674.base, main_~tmp___14~1674.offset;
    ldv_init_zalloc_#in~size := 232;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume ldv_init_zalloc_~size < -4294967296 && ldv_init_zalloc_~size % 4294967296 <= 2147483647;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size % 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume ldv_init_zalloc_~size % 4294967296 <= 2147483647 && ldv_init_zalloc_~size < -4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size % 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size % 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (18446744073709551616 <= ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base && !(ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base - 18446744073709551616 == 0)) && ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base < 18446744073709551616 + 18446744073709551616;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1521.base, main_#t~ret1521.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    main_~tmp___15~1674.offset, main_~tmp___15~1674.base := main_#t~ret1521.offset, main_#t~ret1521.base;
    havoc main_#t~ret1521.base, main_#t~ret1521.offset;
    main_~ldvarg17~1674.offset, main_~ldvarg17~1674.base := main_~tmp___15~1674.offset, main_~tmp___15~1674.base;
    ldv_init_zalloc_#in~size := 232;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume ldv_init_zalloc_~size < -4294967296 && ldv_init_zalloc_~size % 4294967296 <= 2147483647;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size % 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume ldv_init_zalloc_~size % 4294967296 <= 2147483647 && ldv_init_zalloc_~size < -4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size % 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size % 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (!(ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base == 0) && ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base < 18446744073709551616) && 0 <= ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1522.offset, main_#t~ret1522.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    main_~tmp___16~1674.offset, main_~tmp___16~1674.base := main_#t~ret1522.offset, main_#t~ret1522.base;
    havoc main_#t~ret1522.offset, main_#t~ret1522.base;
    main_~ldvarg22~1674.offset, main_~ldvarg22~1674.base := main_~tmp___16~1674.offset, main_~tmp___16~1674.base;
    ldv_init_zalloc_#in~size := 7104;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (0 <= ldv_init_zalloc_~size && ldv_init_zalloc_~size < 4294967296) && !(ldv_init_zalloc_~size <= 2147483647);
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (ldv_init_zalloc_~size < 4294967296 && !(ldv_init_zalloc_~size <= 2147483647)) && 0 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume !((ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base) % 18446744073709551616 == 0) && ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base < -18446744073709551616;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1523.base, main_#t~ret1523.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    main_~tmp___17~1674.offset, main_~tmp___17~1674.base := main_#t~ret1523.offset, main_#t~ret1523.base;
    havoc main_#t~ret1523.base, main_#t~ret1523.offset;
    main_~ldvarg38~1674.offset, main_~ldvarg38~1674.base := main_~tmp___17~1674.offset, main_~tmp___17~1674.base;
    ldv_init_zalloc_#in~size := 24;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (0 <= ldv_init_zalloc_~size && ldv_init_zalloc_~size < 4294967296) && !(ldv_init_zalloc_~size <= 2147483647);
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (0 <= ldv_init_zalloc_~size && ldv_init_zalloc_~size < 4294967296) && !(ldv_init_zalloc_~size <= 2147483647);
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume !((ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset) % 18446744073709551616 == 0) && ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < -18446744073709551616;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1524.base, main_#t~ret1524.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    main_~tmp___18~1674.base, main_~tmp___18~1674.offset := main_#t~ret1524.base, main_#t~ret1524.offset;
    havoc main_#t~ret1524.base, main_#t~ret1524.offset;
    main_~ldvarg39~1674.offset, main_~ldvarg39~1674.base := main_~tmp___18~1674.offset, main_~tmp___18~1674.base;
    ldv_init_zalloc_#in~size := 1;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (ldv_init_zalloc_~size < 0 && ldv_init_zalloc_~size + 2147483649 <= 0) && -4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size + 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (ldv_init_zalloc_~size < 0 && ldv_init_zalloc_~size + 2147483649 <= 0) && -4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size + 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size + 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < -18446744073709551616 && !((ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset) % 18446744073709551616 == 0);
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1525.base, main_#t~ret1525.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    main_~tmp___19~1674.offset, main_~tmp___19~1674.base := main_#t~ret1525.offset, main_#t~ret1525.base;
    havoc main_#t~ret1525.base, main_#t~ret1525.offset;
    main_~ldvarg40~1674.offset, main_~ldvarg40~1674.base := main_~tmp___19~1674.offset, main_~tmp___19~1674.base;
    ldv_init_zalloc_#in~size := 196;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (4294967296 <= ldv_init_zalloc_~size && ldv_init_zalloc_~size < 4294967296 + 4294967296) && !(ldv_init_zalloc_~size <= 6442450943);
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (!(ldv_init_zalloc_~size <= 6442450943) && ldv_init_zalloc_~size < 4294967296 + 4294967296) && 4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296 - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < 0 && !(ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset + 18446744073709551616 == 0)) && -18446744073709551616 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    main_#t~ret1526.base, main_#t~ret1526.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    main_~tmp___20~1674.base, main_~tmp___20~1674.offset := main_#t~ret1526.base, main_#t~ret1526.offset;
    havoc main_#t~ret1526.base, main_#t~ret1526.offset;
    main_~ldvarg42~1674.base, main_~ldvarg42~1674.offset := main_~tmp___20~1674.base, main_~tmp___20~1674.offset;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg18~1674.offset, main_~#ldvarg18~1674.base, 8;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (ldv_memset_~n <= 6442450943 && ldv_memset_~n < 4294967296 + 4294967296) && 4294967296 <= ldv_memset_~n;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1527.offset, main_#t~ret1527.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1527.offset, main_#t~ret1527.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg32~1674.offset, main_~#ldvarg32~1674.base, 2;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume ldv_memset_~n % 4294967296 <= 2147483647 && 4294967296 + 4294967296 <= ldv_memset_~n;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n % 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1528.offset, main_#t~ret1528.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1528.offset, main_#t~ret1528.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg23~1674.offset, main_~#ldvarg23~1674.base, 4;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (4294967296 <= ldv_memset_~n && ldv_memset_~n < 4294967296 + 4294967296) && ldv_memset_~n <= 6442450943;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1529.base, main_#t~ret1529.offset := ldv_memset_#res.base, ldv_memset_#res.offset;
    havoc main_#t~ret1529.base, main_#t~ret1529.offset;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg12~1674.offset, main_~#ldvarg12~1674.base, 2;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (ldv_memset_~n < 4294967296 && 0 <= ldv_memset_~n) && !(ldv_memset_~n <= 2147483647);
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1530.offset, main_#t~ret1530.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1530.offset, main_#t~ret1530.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg37~1674.offset, main_~#ldvarg37~1674.base, 2;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (ldv_memset_~n < 0 && ldv_memset_~n + 2147483649 <= 0) && -4294967296 <= ldv_memset_~n;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n + 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1531.offset, main_#t~ret1531.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1531.offset, main_#t~ret1531.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg24~1674.offset, main_~#ldvarg24~1674.base, 4;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (!(ldv_memset_~n + 2147483649 <= 0) && -4294967296 <= ldv_memset_~n) && ldv_memset_~n < 0;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n + 4294967296 - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1532.offset, main_#t~ret1532.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1532.offset, main_#t~ret1532.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg33~1674.offset, main_~#ldvarg33~1674.base, 2;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (ldv_memset_~n + 2147483649 <= 0 && -4294967296 <= ldv_memset_~n) && ldv_memset_~n < 0;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n + 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1533.base, main_#t~ret1533.offset := ldv_memset_#res.base, ldv_memset_#res.offset;
    havoc main_#t~ret1533.base, main_#t~ret1533.offset;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg16~1674.offset, main_~#ldvarg16~1674.base, 4;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (4294967296 <= ldv_memset_~n && ldv_memset_~n < 4294967296 + 4294967296) && ldv_memset_~n <= 6442450943;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1534.offset, main_#t~ret1534.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1534.offset, main_#t~ret1534.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg4~1674.offset, main_~#ldvarg4~1674.base, 8;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (0 <= ldv_memset_~n && ldv_memset_~n <= 2147483647) && ldv_memset_~n < 4294967296;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1535.offset, main_#t~ret1535.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1535.offset, main_#t~ret1535.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg28~1674.offset, main_~#ldvarg28~1674.base, 2;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (-4294967296 <= ldv_memset_~n && ldv_memset_~n < 0) && ldv_memset_~n + 2147483649 <= 0;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n + 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1536.offset, main_#t~ret1536.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1536.offset, main_#t~ret1536.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg2~1674.offset, main_~#ldvarg2~1674.base, 1;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume !(ldv_memset_~n % 4294967296 <= 2147483647) && ldv_memset_~n < -4294967296;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n % 4294967296 - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1537.offset, main_#t~ret1537.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1537.offset, main_#t~ret1537.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg3~1674.offset, main_~#ldvarg3~1674.base, 4;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume 4294967296 + 4294967296 <= ldv_memset_~n && !(ldv_memset_~n % 4294967296 <= 2147483647);
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n % 4294967296 - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1538.base, main_#t~ret1538.offset := ldv_memset_#res.base, ldv_memset_#res.offset;
    havoc main_#t~ret1538.base, main_#t~ret1538.offset;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg8~1674.offset, main_~#ldvarg8~1674.base, 2;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (ldv_memset_~n + 2147483649 <= 0 && -4294967296 <= ldv_memset_~n) && ldv_memset_~n < 0;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n + 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1539.offset, main_#t~ret1539.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1539.offset, main_#t~ret1539.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg26~1674.offset, main_~#ldvarg26~1674.base, 2;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (0 <= ldv_memset_~n && ldv_memset_~n < 4294967296) && ldv_memset_~n <= 2147483647;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1540.base, main_#t~ret1540.offset := ldv_memset_#res.base, ldv_memset_#res.offset;
    havoc main_#t~ret1540.base, main_#t~ret1540.offset;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg27~1674.offset, main_~#ldvarg27~1674.base, 2;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (ldv_memset_~n <= 2147483647 && 0 <= ldv_memset_~n) && ldv_memset_~n < 4294967296;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1541.offset, main_#t~ret1541.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1541.offset, main_#t~ret1541.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg15~1674.offset, main_~#ldvarg15~1674.base, 4;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume ldv_memset_~n % 4294967296 <= 2147483647 && 4294967296 + 4294967296 <= ldv_memset_~n;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n % 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1542.base, main_#t~ret1542.offset := ldv_memset_#res.base, ldv_memset_#res.offset;
    havoc main_#t~ret1542.base, main_#t~ret1542.offset;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg30~1674.offset, main_~#ldvarg30~1674.base, 2;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (-4294967296 <= ldv_memset_~n && !(ldv_memset_~n + 2147483649 <= 0)) && ldv_memset_~n < 0;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n + 4294967296 - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1543.base, main_#t~ret1543.offset := ldv_memset_#res.base, ldv_memset_#res.offset;
    havoc main_#t~ret1543.base, main_#t~ret1543.offset;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg21~1674.offset, main_~#ldvarg21~1674.base, 4;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume (!(ldv_memset_~n <= 6442450943) && ldv_memset_~n < 4294967296 + 4294967296) && 4294967296 <= ldv_memset_~n;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n - 4294967296 - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1544.offset, main_#t~ret1544.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1544.offset, main_#t~ret1544.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg25~1674.offset, main_~#ldvarg25~1674.base, 4;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume !(ldv_memset_~n % 4294967296 <= 2147483647) && ldv_memset_~n < -4294967296;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n % 4294967296 - 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1545.base, main_#t~ret1545.offset := ldv_memset_#res.base, ldv_memset_#res.offset;
    havoc main_#t~ret1545.base, main_#t~ret1545.offset;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg19~1674.offset, main_~#ldvarg19~1674.base, 8;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume ldv_memset_~n < -4294967296 && ldv_memset_~n % 4294967296 <= 2147483647;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n % 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset && #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1546.offset, main_#t~ret1546.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1546.offset, main_#t~ret1546.base;
    ldv_memset_#in~c, ldv_memset_#in~s.offset, ldv_memset_#in~s.base, ldv_memset_#in~n := 0, main_~#ldvarg41~1674.offset, main_~#ldvarg41~1674.base, 8;
    havoc ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~n, ldv_memset_~s.offset, ldv_memset_~tmp~202.base, ldv_memset_~c, ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base, ldv_memset_~s.base;
    ldv_memset_~s.offset, ldv_memset_~s.base := ldv_memset_#in~s.offset, ldv_memset_#in~s.base;
    ldv_memset_~c := ldv_memset_#in~c;
    ldv_memset_~n := ldv_memset_#in~n;
    havoc ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    assume ldv_memset_~n % 4294967296 <= 2147483647 && 4294967296 + 4294967296 <= ldv_memset_~n;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := ldv_memset_~s.offset, ldv_memset_~c, ldv_memset_~n % 4294967296, ldv_memset_~s.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base := #Ultimate.C_memset_#res.offset, #Ultimate.C_memset_#res.base;
    ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base := ldv_memset_~s.offset, ldv_memset_~s.base;
    havoc ldv_memset_#t~memset147.offset, ldv_memset_#t~memset147.base;
    ldv_memset_#res.offset, ldv_memset_#res.base := ldv_memset_~tmp~202.offset, ldv_memset_~tmp~202.base;
    main_#t~ret1547.offset, main_#t~ret1547.base := ldv_memset_#res.offset, ldv_memset_#res.base;
    havoc main_#t~ret1547.offset, main_#t~ret1547.base;
    ~ldv_state_variable_6 := 0;
    ~ldv_state_variable_4 := 0;
    ~ldv_work_1_0 := 0;
    ~ldv_work_1_1 := 0;
    ~ldv_work_1_2 := 0;
    ~ldv_work_1_3 := 0;
    ~ldv_state_variable_1 := 1;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    ~ldv_state_variable_3 := 0;
    ~ldv_work_2_0 := 0;
    ~ldv_work_2_1 := 0;
    ~ldv_work_2_2 := 0;
    ~ldv_work_2_3 := 0;
    ~ldv_state_variable_2 := 1;
    ~ldv_state_variable_5 := 0;
    goto loc1;
  loc1:
    assume 0 <= main_#t~nondet1548 + 2147483648 && main_#t~nondet1548 <= 2147483647;
    main_~tmp___21~1674 := main_#t~nondet1548;
    havoc main_#t~nondet1548;
    goto loc2;
  loc2:
    goto loc2_0, loc2_1;
  loc2_0:
    assume main_~tmp___21~1674 == 0;
    main_#t~switch1549 := true;
    goto loc3;
  loc2_1:
    assume !(main_~tmp___21~1674 == 0);
    main_#t~switch1549 := false;
    goto loc3;
  loc3:
    goto loc3_0, loc3_1;
  loc3_0:
    assume main_#t~switch1549;
    assume !(~ldv_state_variable_6 == 0);
    assume main_#t~nondet1550 <= 2147483647 && 0 <= main_#t~nondet1550 + 2147483648;
    main_~tmp___22~1674 := main_#t~nondet1550;
    havoc main_#t~nondet1550;
    assume !(main_~tmp___22~1674 == 0);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 1);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 2);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !(main_~tmp___22~1674 == 3) && !main_#t~switch1551;
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !(main_~tmp___22~1674 == 4) && !main_#t~switch1551;
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !(main_~tmp___22~1674 == 5) && !main_#t~switch1551;
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !(main_~tmp___22~1674 == 6) && !main_#t~switch1551;
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !(main_~tmp___22~1674 == 7) && !main_#t~switch1551;
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 8);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 9);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !(main_~tmp___22~1674 == 10) && !main_#t~switch1551;
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 11);
    main_#t~switch1551 := false;
    goto loc4;
  loc3_1:
    assume !main_#t~switch1549;
    assume !(main_~tmp___21~1674 == 1) && !main_#t~switch1549;
    main_#t~switch1549 := false;
    assume !main_#t~switch1549;
    assume !(main_~tmp___21~1674 == 2) && !main_#t~switch1549;
    main_#t~switch1549 := false;
    assume !main_#t~switch1549;
    assume main_~tmp___21~1674 == 3;
    main_#t~switch1549 := true;
    assume main_#t~switch1549;
    assume !(~ldv_state_variable_0 == 0);
    assume main_#t~nondet1685 <= 2147483647 && 0 <= main_#t~nondet1685 + 2147483648;
    main_~tmp___24~1674 := main_#t~nondet1685;
    havoc main_#t~nondet1685;
    assume !(main_~tmp___24~1674 == 0);
    main_#t~switch1686 := false;
    assume !main_#t~switch1686;
    assume main_~tmp___24~1674 == 1;
    main_#t~switch1686 := true;
    assume main_#t~switch1686;
    assume ~ldv_state_variable_0 == 1;
    havoc team_module_init_#res;
    havoc team_module_init_~err~1610, team_module_init_#t~ret1493, team_module_init_#t~ret1494, team_module_init_#t~ret1491, team_module_init_#t~ret1492;
    havoc team_module_init_~err~1610;
    register_netdevice_notifier_#in~204.offset, register_netdevice_notifier_#in~204.base := ~#team_notifier_block.offset, ~#team_notifier_block.base;
    havoc register_netdevice_notifier_#res;
    team_module_init_#t~ret1491 := register_netdevice_notifier_#res;
    assume 0 <= team_module_init_#t~ret1491 + 2147483648 && team_module_init_#t~ret1491 <= 2147483647;
    havoc team_module_init_#t~ret1491;
    rtnl_link_register_#in~373.offset, rtnl_link_register_#in~373.base := ~#team_link_ops.offset, ~#team_link_ops.base;
    havoc rtnl_link_register_#res;
    team_module_init_#t~ret1492 := rtnl_link_register_#res;
    assume 0 <= team_module_init_#t~ret1492 + 2147483648 && team_module_init_#t~ret1492 <= 2147483647;
    team_module_init_~err~1610 := team_module_init_#t~ret1492;
    havoc team_module_init_#t~ret1492;
    assume !(team_module_init_~err~1610 == 0);
    unregister_netdevice_notifier_#in~205.offset, unregister_netdevice_notifier_#in~205.base := ~#team_notifier_block.offset, ~#team_notifier_block.base;
    havoc unregister_netdevice_notifier_#res;
    team_module_init_#t~ret1494 := unregister_netdevice_notifier_#res;
    assume 0 <= team_module_init_#t~ret1494 + 2147483648 && team_module_init_#t~ret1494 <= 2147483647;
    havoc team_module_init_#t~ret1494;
    team_module_init_#res := team_module_init_~err~1610;
    main_#t~ret1687 := team_module_init_#res;
    assume main_#t~ret1687 <= 2147483647 && 0 <= main_#t~ret1687 + 2147483648;
    ~ldv_retval_2 := main_#t~ret1687;
    havoc main_#t~ret1687;
    assume ~ldv_retval_2 == 0;
    assume ~ldv_retval_2 == 0;
    ~ldv_state_variable_0 := 2;
    ~ldv_state_variable_5 := 1;
    havoc ldv_initialize_ethtool_ops_5_~tmp~1649.base, ldv_initialize_ethtool_ops_5_#t~ret1499.offset, ldv_initialize_ethtool_ops_5_#t~ret1499.base, ldv_initialize_ethtool_ops_5_~tmp~1649.offset;
    havoc ldv_initialize_ethtool_ops_5_~tmp~1649.base, ldv_initialize_ethtool_ops_5_~tmp~1649.offset;
    ldv_init_zalloc_#in~size := 3008;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (4294967296 <= ldv_init_zalloc_~size && !(ldv_init_zalloc_~size <= 6442450943)) && ldv_init_zalloc_~size < 4294967296 + 4294967296;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (ldv_init_zalloc_~size < 4294967296 + 4294967296 && !(ldv_init_zalloc_~size <= 6442450943)) && 4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296 - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296 - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < 18446744073709551616 && 0 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset) && !(ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset == 0);
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    ldv_initialize_ethtool_ops_5_#t~ret1499.offset, ldv_initialize_ethtool_ops_5_#t~ret1499.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    ldv_initialize_ethtool_ops_5_~tmp~1649.base, ldv_initialize_ethtool_ops_5_~tmp~1649.offset := ldv_initialize_ethtool_ops_5_#t~ret1499.base, ldv_initialize_ethtool_ops_5_#t~ret1499.offset;
    havoc ldv_initialize_ethtool_ops_5_#t~ret1499.offset, ldv_initialize_ethtool_ops_5_#t~ret1499.base;
    ~team_ethtool_ops_group0.offset, ~team_ethtool_ops_group0.base := ldv_initialize_ethtool_ops_5_~tmp~1649.offset, ldv_initialize_ethtool_ops_5_~tmp~1649.base;
    ~ldv_state_variable_3 := 1;
    ~ldv_state_variable_4 := 1;
    havoc ldv_initialize_rtnl_link_ops_4_#t~ret1502.offset, ldv_initialize_rtnl_link_ops_4_~tmp~1661.base, ldv_initialize_rtnl_link_ops_4_~tmp___1~1661.offset, ldv_initialize_rtnl_link_ops_4_~tmp~1661.offset, ldv_initialize_rtnl_link_ops_4_~tmp___0~1661.base, ldv_initialize_rtnl_link_ops_4_~tmp___0~1661.offset, ldv_initialize_rtnl_link_ops_4_#t~ret1501.offset, ldv_initialize_rtnl_link_ops_4_#t~ret1500.offset, ldv_initialize_rtnl_link_ops_4_#t~ret1501.base, ldv_initialize_rtnl_link_ops_4_#t~ret1500.base, ldv_initialize_rtnl_link_ops_4_#t~ret1502.base, ldv_initialize_rtnl_link_ops_4_~tmp___1~1661.base;
    havoc ldv_initialize_rtnl_link_ops_4_~tmp~1661.base, ldv_initialize_rtnl_link_ops_4_~tmp~1661.offset;
    havoc ldv_initialize_rtnl_link_ops_4_~tmp___0~1661.base, ldv_initialize_rtnl_link_ops_4_~tmp___0~1661.offset;
    havoc ldv_initialize_rtnl_link_ops_4_~tmp___1~1661.offset, ldv_initialize_rtnl_link_ops_4_~tmp___1~1661.base;
    ldv_init_zalloc_#in~size := 3008;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (0 <= ldv_init_zalloc_~size && !(ldv_init_zalloc_~size <= 2147483647)) && ldv_init_zalloc_~size < 4294967296;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (0 <= ldv_init_zalloc_~size && !(ldv_init_zalloc_~size <= 2147483647)) && ldv_init_zalloc_~size < 4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (-18446744073709551616 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset && !(ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset + 18446744073709551616 == 0)) && ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < 0;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    ldv_initialize_rtnl_link_ops_4_#t~ret1500.offset, ldv_initialize_rtnl_link_ops_4_#t~ret1500.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    ldv_initialize_rtnl_link_ops_4_~tmp~1661.base, ldv_initialize_rtnl_link_ops_4_~tmp~1661.offset := ldv_initialize_rtnl_link_ops_4_#t~ret1500.base, ldv_initialize_rtnl_link_ops_4_#t~ret1500.offset;
    havoc ldv_initialize_rtnl_link_ops_4_#t~ret1500.offset, ldv_initialize_rtnl_link_ops_4_#t~ret1500.base;
    ~team_link_ops_group1.base, ~team_link_ops_group1.offset := ldv_initialize_rtnl_link_ops_4_~tmp~1661.base, ldv_initialize_rtnl_link_ops_4_~tmp~1661.offset;
    ldv_init_zalloc_#in~size := 8;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (0 <= ldv_init_zalloc_~size && ldv_init_zalloc_~size < 4294967296) && !(ldv_init_zalloc_~size <= 2147483647);
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size - 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (0 <= ldv_init_zalloc_~size && !(ldv_init_zalloc_~size <= 2147483647)) && ldv_init_zalloc_~size < 4294967296;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size - 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size - 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (!(ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset == 0) && ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset < 18446744073709551616) && 0 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    ldv_initialize_rtnl_link_ops_4_#t~ret1501.offset, ldv_initialize_rtnl_link_ops_4_#t~ret1501.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    ldv_initialize_rtnl_link_ops_4_~tmp___0~1661.base, ldv_initialize_rtnl_link_ops_4_~tmp___0~1661.offset := ldv_initialize_rtnl_link_ops_4_#t~ret1501.base, ldv_initialize_rtnl_link_ops_4_#t~ret1501.offset;
    havoc ldv_initialize_rtnl_link_ops_4_#t~ret1501.offset, ldv_initialize_rtnl_link_ops_4_#t~ret1501.base;
    ~team_link_ops_group0.base, ~team_link_ops_group0.offset := ldv_initialize_rtnl_link_ops_4_~tmp___0~1661.base, ldv_initialize_rtnl_link_ops_4_~tmp___0~1661.offset;
    ldv_init_zalloc_#in~size := 8;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (-4294967296 <= ldv_init_zalloc_~size && ldv_init_zalloc_~size < 0) && ldv_init_zalloc_~size + 2147483649 <= 0;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size + 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (-4294967296 <= ldv_init_zalloc_~size && ldv_init_zalloc_~size < 0) && ldv_init_zalloc_~size + 2147483649 <= 0;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size + 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size + 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume (-18446744073709551616 <= ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base && ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base < 0) && !(ldv_init_zalloc_~p~200.offset + ldv_init_zalloc_~p~200.base + 18446744073709551616 == 0);
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    ldv_initialize_rtnl_link_ops_4_#t~ret1502.offset, ldv_initialize_rtnl_link_ops_4_#t~ret1502.base := ldv_init_zalloc_#res.offset, ldv_init_zalloc_#res.base;
    ldv_initialize_rtnl_link_ops_4_~tmp___1~1661.offset, ldv_initialize_rtnl_link_ops_4_~tmp___1~1661.base := ldv_initialize_rtnl_link_ops_4_#t~ret1502.offset, ldv_initialize_rtnl_link_ops_4_#t~ret1502.base;
    havoc ldv_initialize_rtnl_link_ops_4_#t~ret1502.offset, ldv_initialize_rtnl_link_ops_4_#t~ret1502.base;
    ~team_link_ops_group2.base, ~team_link_ops_group2.offset := ldv_initialize_rtnl_link_ops_4_~tmp___1~1661.base, ldv_initialize_rtnl_link_ops_4_~tmp___1~1661.offset;
    ~ldv_state_variable_6 := 1;
    havoc ldv_net_device_ops_6_#t~ret1496.base, ldv_net_device_ops_6_#t~ret1496.offset, ldv_net_device_ops_6_~tmp~1622.offset, ldv_net_device_ops_6_~tmp~1622.base;
    havoc ldv_net_device_ops_6_~tmp~1622.offset, ldv_net_device_ops_6_~tmp~1622.base;
    ldv_init_zalloc_#in~size := 3008;
    havoc ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~size, ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_#t~malloc146.base, ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_~size := ldv_init_zalloc_#in~size;
    havoc ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    havoc ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    assume (ldv_init_zalloc_~size < 0 && -4294967296 <= ldv_init_zalloc_~size) && ldv_init_zalloc_~size + 2147483649 <= 0;
    #Ultimate.alloc_~size := 1 * (ldv_init_zalloc_~size + 4294967296);
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    assume (ldv_init_zalloc_~size + 2147483649 <= 0 && ldv_init_zalloc_~size < 0) && -4294967296 <= ldv_init_zalloc_~size;
    #Ultimate.meminit_#product, #Ultimate.meminit_#ptr.base, #Ultimate.meminit_#amountOfFields, #Ultimate.meminit_#sizeOfFields, #Ultimate.meminit_#ptr.offset := 1 * (ldv_init_zalloc_~size + 4294967296), ldv_init_zalloc_#t~malloc146.base, 1, ldv_init_zalloc_~size + 4294967296, ldv_init_zalloc_#t~malloc146.offset;
    havoc #Ultimate.meminit_#t~loopctr1744;
    #Ultimate.meminit_#t~loopctr1744 := 0;
    assume !(#Ultimate.meminit_#t~loopctr1744 < #Ultimate.meminit_#product);
    ldv_init_zalloc_~tmp~200.offset, ldv_init_zalloc_~tmp~200.base := ldv_init_zalloc_#t~malloc146.offset, ldv_init_zalloc_#t~malloc146.base;
    ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset := ldv_init_zalloc_~tmp~200.base, ldv_init_zalloc_~tmp~200.offset;
    assume !((ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset) % 18446744073709551616 == 0) && 18446744073709551616 + 18446744073709551616 <= ldv_init_zalloc_~p~200.base + ldv_init_zalloc_~p~200.offset;
    ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset := ldv_init_zalloc_~p~200.base, ldv_init_zalloc_~p~200.offset;
    ldv_net_device_ops_6_#t~ret1496.base, ldv_net_device_ops_6_#t~ret1496.offset := ldv_init_zalloc_#res.base, ldv_init_zalloc_#res.offset;
    ldv_net_device_ops_6_~tmp~1622.offset, ldv_net_device_ops_6_~tmp~1622.base := ldv_net_device_ops_6_#t~ret1496.offset, ldv_net_device_ops_6_#t~ret1496.base;
    havoc ldv_net_device_ops_6_#t~ret1496.base, ldv_net_device_ops_6_#t~ret1496.offset;
    ~team_netdev_ops_group1.offset, ~team_netdev_ops_group1.base := ldv_net_device_ops_6_~tmp~1622.offset, ldv_net_device_ops_6_~tmp~1622.base;
    goto loc1;
  loc4:
    goto loc4_0, loc4_1;
  loc4_0:
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 12);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 13);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 14);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !(main_~tmp___22~1674 == 15) && !main_#t~switch1551;
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 16);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 17);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 18);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 19);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 20);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 21);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume !main_#t~switch1551 && !(main_~tmp___22~1674 == 22);
    main_#t~switch1551 := false;
    assume !main_#t~switch1551;
    assume main_~tmp___22~1674 == 23;
    main_#t~switch1551 := true;
    assume main_#t~switch1551;
    assume ~ldv_state_variable_6 == 2;
    team_uninit_#in~dev.base, team_uninit_#in~dev.offset := ~team_netdev_ops_group1.base, ~team_netdev_ops_group1.offset;
    havoc team_uninit_~port~1169.offset, team_uninit_#t~ret1010.base, team_uninit_#t~mem1013.offset, team_uninit_#t~ret1010.offset, team_uninit_~dev.base, team_uninit_#t~mem1011.base, team_uninit_~tmp___0~1169.base, team_uninit_~__mptr~1169.base, team_uninit_#t~ret1016, team_uninit_~tmp~1169.offset, team_uninit_~__mptr___0~1169.offset, team_uninit_#t~ret1014, team_uninit_#t~mem1011.offset, team_uninit_~team~1169.offset, team_uninit_#t~mem1015.base, team_uninit_~tmp~1169.base, team_uninit_~port~1169.base, team_uninit_~team~1169.base, team_uninit_#t~mem1013.base, team_uninit_#t~mem1012.base, team_uninit_~__mptr___0~1169.base, team_uninit_~__mptr___1~1169.base, team_uninit_~__mptr___1~1169.offset, team_uninit_#t~mem1012.offset, team_uninit_~dev.offset, team_uninit_#t~mem1015.offset, team_uninit_~__mptr~1169.offset, team_uninit_~tmp___0~1169.offset;
    team_uninit_~dev.offset, team_uninit_~dev.base := team_uninit_#in~dev.offset, team_uninit_#in~dev.base;
    havoc team_uninit_~team~1169.offset, team_uninit_~team~1169.base;
    havoc team_uninit_~tmp~1169.offset, team_uninit_~tmp~1169.base;
    havoc team_uninit_~port~1169.offset, team_uninit_~port~1169.base;
    havoc team_uninit_~tmp___0~1169.base, team_uninit_~tmp___0~1169.offset;
    havoc team_uninit_~__mptr~1169.base, team_uninit_~__mptr~1169.offset;
    havoc team_uninit_~__mptr___0~1169.base, team_uninit_~__mptr___0~1169.offset;
    havoc team_uninit_~__mptr___1~1169.base, team_uninit_~__mptr___1~1169.offset;
    netdev_priv_#in~dev.offset, netdev_priv_#in~dev.base := team_uninit_~dev.offset, team_uninit_~dev.base;
    havoc netdev_priv_#res.base, netdev_priv_#res.offset;
    havoc netdev_priv_~dev.base, netdev_priv_~dev.offset;
    netdev_priv_~dev.base, netdev_priv_~dev.offset := netdev_priv_#in~dev.base, netdev_priv_#in~dev.offset;
    netdev_priv_#res.base, netdev_priv_#res.offset := netdev_priv_~dev.base, netdev_priv_~dev.offset + 3008;
    team_uninit_#t~ret1010.base, team_uninit_#t~ret1010.offset := netdev_priv_#res.base, netdev_priv_#res.offset;
    team_uninit_~tmp~1169.offset, team_uninit_~tmp~1169.base := team_uninit_#t~ret1010.offset, team_uninit_#t~ret1010.base;
    havoc team_uninit_#t~ret1010.base, team_uninit_#t~ret1010.offset;
    team_uninit_~team~1169.offset, team_uninit_~team~1169.base := team_uninit_~tmp~1169.offset, team_uninit_~tmp~1169.base;
    mutex_lock_nested_#in~92.base, mutex_lock_nested_#in~92.offset, mutex_lock_nested_#in~93 := team_uninit_~team~1169.base, team_uninit_~team~1169.offset + 16, 0;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := team_uninit_~team~1169.base, 8, team_uninit_~team~1169.offset + 296;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    team_uninit_#t~mem1011.offset, team_uninit_#t~mem1011.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    team_uninit_~__mptr~1169.base, team_uninit_~__mptr~1169.offset := team_uninit_#t~mem1011.base, team_uninit_#t~mem1011.offset;
    havoc team_uninit_#t~mem1011.offset, team_uninit_#t~mem1011.base;
    team_uninit_~port~1169.offset, team_uninit_~port~1169.base := team_uninit_~__mptr~1169.offset + -3480, team_uninit_~__mptr~1169.base;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := team_uninit_~port~1169.base, 8, team_uninit_~port~1169.offset + 24;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    team_uninit_#t~mem1012.base, team_uninit_#t~mem1012.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    team_uninit_~__mptr___0~1169.base, team_uninit_~__mptr___0~1169.offset := team_uninit_#t~mem1012.base, team_uninit_#t~mem1012.offset;
    havoc team_uninit_#t~mem1012.base, team_uninit_#t~mem1012.offset;
    team_uninit_~tmp___0~1169.base, team_uninit_~tmp___0~1169.offset := team_uninit_~__mptr___0~1169.base, team_uninit_~__mptr___0~1169.offset + -3480;
    assume (-18446744073709551616 <= team_uninit_~team~1169.offset + team_uninit_~team~1169.base + 296 && team_uninit_~port~1169.base + team_uninit_~port~1169.offset + 24 == team_uninit_~team~1169.offset + team_uninit_~team~1169.base + 296 + 18446744073709551616) && team_uninit_~team~1169.offset + team_uninit_~team~1169.base + 296 < 0;
    __team_change_mode_#in~team.offset, __team_change_mode_#in~new_mode.offset, __team_change_mode_#in~new_mode.base, __team_change_mode_#in~team.base := team_uninit_~team~1169.offset, 0, 0, team_uninit_~team~1169.base;
    havoc __team_change_mode_#res;
    havoc __team_change_mode_#t~memset611.base, __team_change_mode_~tmp~794, __team_change_mode_#t~mem624.base, __team_change_mode_#t~memset614.base, __team_change_mode_#t~ret622, __team_change_mode_~new_mode.base, __team_change_mode_#t~mem610.offset, __team_change_mode_#t~memcpy625.offset, __team_change_mode_#t~mem616.base, __team_change_mode_#t~ret609, __team_change_mode_#t~mem613.base, __team_change_mode_#t~mem615.base, __team_change_mode_#t~mem620.base, __team_change_mode_~team.base, __team_change_mode_~exit_op~794.base, __team_change_mode_#t~mem621.base, __team_change_mode_~exit_op~794.offset, __team_change_mode_#t~memset611.offset, __team_change_mode_#t~memset614.offset, __team_change_mode_#t~mem613.offset, __team_change_mode_#t~mem616.offset, __team_change_mode_~team.offset, __team_change_mode_~err~794, __team_change_mode_#t~mem615.offset, __team_change_mode_#t~mem624.offset, __team_change_mode_#t~mem610.base, __team_change_mode_#t~mem620.offset, __team_change_mode_#t~mem621.offset, __team_change_mode_~new_mode.offset, __team_change_mode_#t~memcpy625.base;
    __team_change_mode_~team.base, __team_change_mode_~team.offset := __team_change_mode_#in~team.base, __team_change_mode_#in~team.offset;
    __team_change_mode_~new_mode.offset, __team_change_mode_~new_mode.base := __team_change_mode_#in~new_mode.offset, __team_change_mode_#in~new_mode.base;
    havoc __team_change_mode_~exit_op~794.base, __team_change_mode_~exit_op~794.offset;
    havoc __team_change_mode_~tmp~794;
    havoc __team_change_mode_~err~794;
    team_is_mode_set_#in~team.base, team_is_mode_set_#in~team.offset := __team_change_mode_~team.base, __team_change_mode_~team.offset;
    havoc team_is_mode_set_#res;
    havoc team_is_mode_set_~team.base, team_is_mode_set_#t~mem582.offset, team_is_mode_set_#t~mem582.base, team_is_mode_set_~team.offset;
    team_is_mode_set_~team.base, team_is_mode_set_~team.offset := team_is_mode_set_#in~team.base, team_is_mode_set_#in~team.offset;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := team_is_mode_set_~team.base, 8, team_is_mode_set_~team.offset + 344;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    team_is_mode_set_#t~mem582.offset, team_is_mode_set_#t~mem582.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    assume ((18446744073709551616 <= ~#__team_no_mode.offset + ~#__team_no_mode.base && ~#__team_no_mode.offset + ~#__team_no_mode.base < 18446744073709551616 + 18446744073709551616) && 18446744073709551616 + 18446744073709551616 <= team_is_mode_set_#t~mem582.base + team_is_mode_set_#t~mem582.offset) && !((team_is_mode_set_#t~mem582.base + team_is_mode_set_#t~mem582.offset) % 18446744073709551616 == ~#__team_no_mode.offset + ~#__team_no_mode.base - 18446744073709551616);
    team_is_mode_set_#res := 1;
    havoc team_is_mode_set_#t~mem582.offset, team_is_mode_set_#t~mem582.base;
    __team_change_mode_#t~ret609 := team_is_mode_set_#res;
    __team_change_mode_~tmp~794 := __team_change_mode_#t~ret609;
    havoc __team_change_mode_#t~ret609;
    assume __team_change_mode_~tmp~794 < -256 && !(__team_change_mode_~tmp~794 % 256 == 0);
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := __team_change_mode_~team.base, 8, __team_change_mode_~team.offset + 360;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    __team_change_mode_#t~mem610.offset, __team_change_mode_#t~mem610.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    __team_change_mode_~exit_op~794.base, __team_change_mode_~exit_op~794.offset := __team_change_mode_#t~mem610.base, __team_change_mode_#t~mem610.offset;
    havoc __team_change_mode_#t~mem610.offset, __team_change_mode_#t~mem610.base;
    #Ultimate.C_memset_#ptr.offset, #Ultimate.C_memset_#value, #Ultimate.C_memset_#amount, #Ultimate.C_memset_#ptr.base := __team_change_mode_~team.offset + 352, 0, 72, __team_change_mode_~team.base;
    havoc #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc #Ultimate.C_memset_#t~loopctr1743;
    #Ultimate.C_memset_#t~loopctr1743 := 0;
    assume !(#Ultimate.C_memset_#t~loopctr1743 < #Ultimate.C_memset_#amount);
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    assume #Ultimate.C_memset_#res.base == #Ultimate.C_memset_#ptr.base && #Ultimate.C_memset_#res.offset == #Ultimate.C_memset_#ptr.offset;
    __team_change_mode_#t~memset611.base, __team_change_mode_#t~memset611.offset := #Ultimate.C_memset_#res.base, #Ultimate.C_memset_#res.offset;
    havoc __team_change_mode_#t~memset611.base, __team_change_mode_#t~memset611.offset;
    team_adjust_ops_#in~team.base, team_adjust_ops_#in~team.offset := __team_change_mode_~team.base, __team_change_mode_~team.offset;
    havoc team_adjust_ops_#t~mem589.offset, team_adjust_ops_~team.base, team_adjust_ops_#t~mem605.base, team_adjust_ops_#t~mem606.base, team_adjust_ops_#t~mem608.base, team_adjust_ops_#t~mem603.offset, team_adjust_ops_#t~mem596.base, team_adjust_ops_#t~mem585, team_adjust_ops_#t~mem591.offset, team_adjust_ops_#t~ret599, team_adjust_ops_#t~mem589.base, team_adjust_ops_#t~mem602.base, team_adjust_ops_#t~mem601.base, team_adjust_ops_#t~mem603.base, team_adjust_ops_~tmp___0~778, team_adjust_ops_#t~mem594.offset, team_adjust_ops_#t~mem606.offset, team_adjust_ops_#t~mem601.offset, team_adjust_ops_#t~mem596.offset, team_adjust_ops_#t~mem590.offset, team_adjust_ops_#t~mem590.base, team_adjust_ops_#t~mem591.base, team_adjust_ops_#t~mem593.offset, team_adjust_ops_#t~mem593.base, team_adjust_ops_#t~mem594.base, team_adjust_ops_#t~mem597, team_adjust_ops_~team.offset, team_adjust_ops_~tmp___1~778, team_adjust_ops_#t~ret587, team_adjust_ops_#t~mem602.offset, team_adjust_ops_#t~mem608.offset, team_adjust_ops_~tmp___2~778, team_adjust_ops_#t~mem605.offset, team_adjust_ops_~tmp~778;
    team_adjust_ops_~team.offset, team_adjust_ops_~team.base := team_adjust_ops_#in~team.offset, team_adjust_ops_#in~team.base;
    havoc team_adjust_ops_~tmp~778;
    havoc team_adjust_ops_~tmp___0~778;
    havoc team_adjust_ops_~tmp___1~778;
    havoc team_adjust_ops_~tmp___2~778;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := team_adjust_ops_~team.base, team_adjust_ops_~team.offset + 164, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    team_adjust_ops_#t~mem585 := read~int_#value;
    assume team_adjust_ops_#t~mem585 == 0;
    havoc team_adjust_ops_#t~mem585;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_dummy_transmit.base_1, team_adjust_ops_~team.offset + 376, 8, v_rep#funAddr~team_dummy_transmit.offset_1, team_adjust_ops_~team.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := team_adjust_ops_~team.base, team_adjust_ops_~team.offset + 164, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    team_adjust_ops_#t~mem597 := read~int_#value;
    assume team_adjust_ops_#t~mem597 == 0;
    havoc team_adjust_ops_#t~mem597;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~team_dummy_receive.base_1, team_adjust_ops_~team.offset + 368, 8, v_rep#funAddr~team_dummy_receive.offset_1, team_adjust_ops_~team.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    assume __team_change_mode_~exit_op~794.base + __team_change_mode_~exit_op~794.offset == 0;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := __team_change_mode_~team.base, 8, __team_change_mode_~team.offset + 344;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    __team_change_mode_#t~mem613.offset, __team_change_mode_#t~mem613.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    team_mode_put_#in~mode.base, team_mode_put_#in~mode.offset := __team_change_mode_#t~mem613.base, __team_change_mode_#t~mem613.offset;
    havoc team_mode_put_~mode.offset, team_mode_put_~mode.base, team_mode_put_#t~mem580.base, team_mode_put_#t~mem580.offset;
    team_mode_put_~mode.offset, team_mode_put_~mode.base := team_mode_put_#in~mode.offset, team_mode_put_#in~mode.base;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := team_mode_put_~mode.base, 8, team_mode_put_~mode.offset + 8;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    team_mode_put_#t~mem580.base, team_mode_put_#t~mem580.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    ldv_module_put_11_#in~ldv_func_arg1.offset, ldv_module_put_11_#in~ldv_func_arg1.base := team_mode_put_#t~mem580.offset, team_mode_put_#t~mem580.base;
    havoc ldv_module_put_11_~ldv_func_arg1.offset, ldv_module_put_11_~ldv_func_arg1.base;
    ldv_module_put_11_~ldv_func_arg1.offset, ldv_module_put_11_~ldv_func_arg1.base := ldv_module_put_11_#in~ldv_func_arg1.offset, ldv_module_put_11_#in~ldv_func_arg1.base;
    ldv_module_put_#in~module.offset, ldv_module_put_#in~module.base := ldv_module_put_11_~ldv_func_arg1.offset, ldv_module_put_11_~ldv_func_arg1.base;
    havoc ldv_module_put_~module.offset, ldv_module_put_~module.base;
    ldv_module_put_~module.offset, ldv_module_put_~module.base := ldv_module_put_#in~module.offset, ldv_module_put_#in~module.base;
    assume ldv_module_put_~module.base + ldv_module_put_~module.offset < -18446744073709551616 && !((ldv_module_put_~module.base + ldv_module_put_~module.offset) % 18446744073709551616 == 0);
    assume ~ldv_module_refcounter <= 1;
    goto loc5;
  loc4_1:
    assume main_#t~switch1551;
    assume ~ldv_state_variable_6 == 1;
    team_init_#in~dev.offset, team_init_#in~dev.base := ~team_netdev_ops_group1.offset, ~team_netdev_ops_group1.base;
    havoc team_init_#res;
    havoc team_init_~dev.base, team_init_~pcpu_stats~1155.offset, team_init_~tmp~1155.offset, team_init_~dev.offset, team_init_#t~mem1009.offset, team_init_~#__key~1155.base, team_init_~__ptr~1155, team_init_~tmp___1~1155, team_init_#t~ret1002.offset, team_init_~team~1155.base, team_init_~tmp___0~1155.offset, team_init_#t~ret999.offset, team_init_#t~nondet1001.offset, team_init_~__vpp_verify~1155.base, team_init_#t~ret1003, team_init_~stat~1155.offset, team_init_~tmp~1155.base, team_init_~__cpu~1155, team_init_#t~ret1007, team_init_~err~1155, team_init_#t~mem1005.offset, team_init_#t~ret1008, team_init_#t~ret999.base, team_init_#t~ret1002.base, team_init_#t~mem1005.base, team_init_#t~nondet1001.base, team_init_#t~mem1009.base, team_init_~tmp___0~1155.base, team_init_~team~1155.offset, team_init_~pcpu_stats~1155.base, team_init_~__vpp_verify~1155.offset, team_init_~i~1155, team_init_~#__key~1155.offset, team_init_~stat~1155.base;
    team_init_~dev.base, team_init_~dev.offset := team_init_#in~dev.base, team_init_#in~dev.offset;
    havoc team_init_~team~1155.base, team_init_~team~1155.offset;
    havoc team_init_~tmp~1155.base, team_init_~tmp~1155.offset;
    havoc team_init_~i~1155;
    havoc team_init_~err~1155;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    team_init_~#__key~1155.offset, team_init_~#__key~1155.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc team_init_~pcpu_stats~1155.offset, team_init_~pcpu_stats~1155.base;
    havoc team_init_~tmp___0~1155.base, team_init_~tmp___0~1155.offset;
    havoc team_init_~__cpu~1155;
    havoc team_init_~stat~1155.offset, team_init_~stat~1155.base;
    havoc team_init_~__vpp_verify~1155.offset, team_init_~__vpp_verify~1155.base;
    havoc team_init_~__ptr~1155;
    havoc team_init_~tmp___1~1155;
    netdev_priv_#in~dev.offset, netdev_priv_#in~dev.base := team_init_~dev.offset, team_init_~dev.base;
    havoc netdev_priv_#res.base, netdev_priv_#res.offset;
    havoc netdev_priv_~dev.base, netdev_priv_~dev.offset;
    netdev_priv_~dev.base, netdev_priv_~dev.offset := netdev_priv_#in~dev.base, netdev_priv_#in~dev.offset;
    netdev_priv_#res.base, netdev_priv_#res.offset := netdev_priv_~dev.base, netdev_priv_~dev.offset + 3008;
    team_init_#t~ret999.base, team_init_#t~ret999.offset := netdev_priv_#res.base, netdev_priv_#res.offset;
    team_init_~tmp~1155.base, team_init_~tmp~1155.offset := team_init_#t~ret999.base, team_init_#t~ret999.offset;
    havoc team_init_#t~ret999.base, team_init_#t~ret999.offset;
    team_init_~team~1155.base, team_init_~team~1155.offset := team_init_~tmp~1155.base, team_init_~tmp~1155.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := team_init_~dev.base, team_init_~team~1155.offset, 8, team_init_~dev.offset, team_init_~team~1155.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 12;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    team_init_#t~nondet1001.offset, team_init_#t~nondet1001.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    __mutex_init_#in~90.offset, __mutex_init_#in~90.base, __mutex_init_#in~89.base, __mutex_init_#in~91.offset, __mutex_init_#in~89.offset, __mutex_init_#in~91.base := team_init_#t~nondet1001.offset, team_init_#t~nondet1001.base, team_init_~team~1155.base, team_init_~#__key~1155.offset, team_init_~team~1155.offset + 16, team_init_~#__key~1155.base;
    havoc team_init_#t~nondet1001.offset, team_init_#t~nondet1001.base;
    team_set_no_mode_#in~team.base, team_set_no_mode_#in~team.offset := team_init_~team~1155.base, team_init_~team~1155.offset;
    havoc team_set_no_mode_~team.base, team_set_no_mode_~team.offset;
    team_set_no_mode_~team.base, team_set_no_mode_~team.offset := team_set_no_mode_#in~team.base, team_set_no_mode_#in~team.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, team_set_no_mode_~team.base, 0, team_set_no_mode_~team.offset + 424;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#__team_no_mode.base, team_set_no_mode_~team.offset + 344, 8, ~#__team_no_mode.offset, team_set_no_mode_~team.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    __alloc_percpu_#in~122, __alloc_percpu_#in~123 := 48, 8;
    havoc __alloc_percpu_#res.base, __alloc_percpu_#res.offset;
    team_init_#t~ret1002.offset, team_init_#t~ret1002.base := __alloc_percpu_#res.offset, __alloc_percpu_#res.base;
    team_init_~tmp___0~1155.base, team_init_~tmp___0~1155.offset := team_init_#t~ret1002.base, team_init_#t~ret1002.offset;
    havoc team_init_#t~ret1002.offset, team_init_#t~ret1002.base;
    team_init_~pcpu_stats~1155.offset, team_init_~pcpu_stats~1155.base := team_init_~tmp___0~1155.offset, team_init_~tmp___0~1155.base;
    assume team_init_~pcpu_stats~1155.offset + team_init_~pcpu_stats~1155.base + 18446744073709551616 == 0;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := team_init_~pcpu_stats~1155.base, team_init_~team~1155.offset + 8, 8, team_init_~pcpu_stats~1155.offset, team_init_~team~1155.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := team_init_~team~1155.base, 8, team_init_~team~1155.offset + 8;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    team_init_#t~mem1005.offset, team_init_#t~mem1005.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    assume (!(team_init_#t~mem1005.base + team_init_#t~mem1005.offset == 0) && 0 <= team_init_#t~mem1005.base + team_init_#t~mem1005.offset) && team_init_#t~mem1005.base + team_init_#t~mem1005.offset < 18446744073709551616;
    havoc team_init_#t~mem1005.offset, team_init_#t~mem1005.base;
    team_init_~i~1155 := 0;
    assume !(team_init_~i~1155 <= 15);
    INIT_LIST_HEAD_#in~list.base, INIT_LIST_HEAD_#in~list.offset := team_init_~team~1155.base, team_init_~team~1155.offset + 296;
    havoc INIT_LIST_HEAD_~list.base, INIT_LIST_HEAD_~list.offset;
    INIT_LIST_HEAD_~list.base, INIT_LIST_HEAD_~list.offset := INIT_LIST_HEAD_#in~list.base, INIT_LIST_HEAD_#in~list.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := INIT_LIST_HEAD_~list.base, INIT_LIST_HEAD_~list.offset, 8, INIT_LIST_HEAD_~list.offset, INIT_LIST_HEAD_~list.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := INIT_LIST_HEAD_~list.base, INIT_LIST_HEAD_~list.offset + 8, 8, INIT_LIST_HEAD_~list.offset, INIT_LIST_HEAD_~list.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    team_queue_override_init_#in~team.offset, team_queue_override_init_#in~team.base := team_init_~team~1155.offset, team_init_~team~1155.base;
    havoc team_queue_override_init_#res;
    havoc team_queue_override_init_~listarr~926.offset, team_queue_override_init_~tmp___0~926.offset, team_queue_override_init_~queue_cnt~926, team_queue_override_init_~tmp~926.base, team_queue_override_init_~tmp___0~926.base, team_queue_override_init_#t~ret709.base, team_queue_override_init_~i~926, team_queue_override_init_~team.base, team_queue_override_init_~listarr~926.base, team_queue_override_init_#t~mem707.base, team_queue_override_init_~tmp~926.offset, team_queue_override_init_#t~mem707.offset, team_queue_override_init_~team.offset, team_queue_override_init_#t~mem708, team_queue_override_init_#t~ret709.offset;
    team_queue_override_init_~team.base, team_queue_override_init_~team.offset := team_queue_override_init_#in~team.base, team_queue_override_init_#in~team.offset;
    havoc team_queue_override_init_~listarr~926.offset, team_queue_override_init_~listarr~926.base;
    havoc team_queue_override_init_~queue_cnt~926;
    havoc team_queue_override_init_~i~926;
    havoc team_queue_override_init_~tmp~926.offset, team_queue_override_init_~tmp~926.base;
    havoc team_queue_override_init_~tmp___0~926.offset, team_queue_override_init_~tmp___0~926.base;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := team_queue_override_init_~team.base, 8, team_queue_override_init_~team.offset;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    team_queue_override_init_#t~mem707.base, team_queue_override_init_#t~mem707.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := team_queue_override_init_#t~mem707.base, team_queue_override_init_#t~mem707.offset + 998, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    team_queue_override_init_#t~mem708 := read~int_#value;
    team_queue_override_init_~queue_cnt~926 := team_queue_override_init_#t~mem708 - 1;
    havoc team_queue_override_init_#t~mem707.base, team_queue_override_init_#t~mem707.offset;
    havoc team_queue_override_init_#t~mem708;
    assume team_queue_override_init_~queue_cnt~926 - 4294967296 == 0;
    team_queue_override_init_#res := 0;
    team_init_#t~ret1007 := team_queue_override_init_#res;
    assume team_init_#t~ret1007 <= 2147483647 && 0 <= team_init_#t~ret1007 + 2147483648;
    team_init_~err~1155 := team_init_#t~ret1007;
    havoc team_init_#t~ret1007;
    assume !(team_init_~err~1155 == 0);
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := team_init_~team~1155.base, 8, team_init_~team~1155.offset + 8;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    team_init_#t~mem1009.offset, team_init_#t~mem1009.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    free_percpu_#in~124.base, free_percpu_#in~124.offset := team_init_#t~mem1009.base, team_init_#t~mem1009.offset;
    havoc team_init_#t~mem1009.offset, team_init_#t~mem1009.base;
    team_init_#res := team_init_~err~1155;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := team_init_~#__key~1155.base, team_init_~#__key~1155.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc team_init_~#__key~1155.offset, team_init_~#__key~1155.base;
    main_#t~ret1617 := team_init_#res;
    assume 0 <= main_#t~ret1617 + 2147483648 && main_#t~ret1617 <= 2147483647;
    ~ldv_retval_0 := main_#t~ret1617;
    havoc main_#t~ret1617;
    assume ~ldv_retval_0 == 0;
    ~ldv_state_variable_6 := 2;
    ~ref_cnt := ~ref_cnt + 1;
    goto loc1;
  loc5:
    assert false;
}


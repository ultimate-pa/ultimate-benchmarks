var v_rep#funAddr~dp83640_rxtstamp.base_1 : int;

var #memory_$Pointer$.base : [int][int]int;

var ~gpio_tab : [int]int;

var v_rep#funAddr~dp83640_rxtstamp.offset_1 : int;

var ~#phyter_clocks_lock.offset : int;

var #NULL.offset : int;

var ~dp83640_driver_group1.offset : int;

var ~#set_impl.base : int;

var v_rep#funAddr~dp83640_config_intr.base_1 : int;

var ~dp83640_driver_group0.base : int;

var v_rep#funAddr~dp83640_hwtstamp.base_1 : int;

var ~ldv_retval_0 : int;

var #length : [int]int;

var ~#dp83640_driver.offset : int;

var v_rep#funAddr~genphy_config_aneg.offset_1 : int;

var v_rep#funAddr~genphy_read_status.offset_1 : int;

var ~#phyter_clocks.offset : int;

var v_rep#funAddr~dp83640_config_init.base_1 : int;

var v_rep#funAddr~dp83640_txtstamp.offset_1 : int;

var ~#status_frame_src.base : int;

var v_rep#funAddr~dp83640_probe.base_1 : int;

var v_rep#funAddr~dp83640_hwtstamp.offset_1 : int;

var ~#phyter_clocks_lock.base : int;

var v_rep#funAddr~dp83640_txtstamp.base_1 : int;

var v_rep#funAddr~dp83640_ts_info.offset_1 : int;

var ~ldv_retval_1 : int;

var ~#dp83640_driver.base : int;

var ~LDV_SKBS.offset : int;

var #memory_$Pointer$.offset : [int][int]int;

var v_rep#funAddr~dp83640_remove.base_1 : int;

var ~#__this_module.base : int;

var ~dp83640_driver_group0.offset : int;

var ~#__this_module.offset : int;

var v_rep#funAddr~genphy_config_aneg.base_1 : int;

var ~#phyter_clocks.base : int;

var ~#set_impl.offset : int;

var ~#status_frame_src.offset : int;

var v_rep#funAddr~dp83640_ts_info.base_1 : int;

var v_rep#funAddr~dp83640_probe.offset_1 : int;

var ~chosen_phy : int;

var v_rep#funAddr~dp83640_ack_interrupt.offset_1 : int;

var v_rep#funAddr~dp83640_config_intr.offset_1 : int;

var v_rep#funAddr~genphy_read_status.base_1 : int;

var ~ldv_state_variable_0 : int;

var ~#status_frame_dst.offset : int;

var v_rep#funAddr~dp83640_ack_interrupt.base_1 : int;

var ~LDV_SKBS.base : int;

var ~#status_frame_dst.base : int;

var v_rep#funAddr~dp83640_remove.offset_1 : int;

var ~ref_cnt : int;

var ~last_index : int;

var ~dp83640_driver_group1.base : int;

var #NULL.base : int;

var ~ldv_state_variable_1 : int;

var #valid : [int]int;

var #memory_int : [int][int]int;

var v_rep#funAddr~dp83640_config_init.offset_1 : int;

procedure ULTIMATE.start() returns ()
modifies v_rep#funAddr~dp83640_rxtstamp.base_1, #memory_$Pointer$.base, ~gpio_tab, v_rep#funAddr~dp83640_rxtstamp.offset_1, ~#phyter_clocks_lock.offset, #NULL.offset, ~dp83640_driver_group1.offset, ~#set_impl.base, v_rep#funAddr~dp83640_config_intr.base_1, ~dp83640_driver_group0.base, v_rep#funAddr~dp83640_hwtstamp.base_1, ~ldv_retval_0, #length, ~#dp83640_driver.offset, v_rep#funAddr~genphy_config_aneg.offset_1, v_rep#funAddr~genphy_read_status.offset_1, ~#phyter_clocks.offset, v_rep#funAddr~dp83640_config_init.base_1, v_rep#funAddr~dp83640_txtstamp.offset_1, ~#status_frame_src.base, v_rep#funAddr~dp83640_probe.base_1, v_rep#funAddr~dp83640_hwtstamp.offset_1, ~#phyter_clocks_lock.base, v_rep#funAddr~dp83640_txtstamp.base_1, v_rep#funAddr~dp83640_ts_info.offset_1, ~ldv_retval_1, ~#dp83640_driver.base, ~LDV_SKBS.offset, #memory_$Pointer$.offset, v_rep#funAddr~dp83640_remove.base_1, ~#__this_module.base, ~dp83640_driver_group0.offset, ~#__this_module.offset, v_rep#funAddr~genphy_config_aneg.base_1, ~#phyter_clocks.base, ~#set_impl.offset, ~#status_frame_src.offset, v_rep#funAddr~dp83640_ts_info.base_1, v_rep#funAddr~dp83640_probe.offset_1, ~chosen_phy, v_rep#funAddr~dp83640_ack_interrupt.offset_1, v_rep#funAddr~dp83640_config_intr.offset_1, v_rep#funAddr~genphy_read_status.base_1, ~ldv_state_variable_0, ~#status_frame_dst.offset, v_rep#funAddr~dp83640_ack_interrupt.base_1, ~LDV_SKBS.base, ~#status_frame_dst.base, v_rep#funAddr~dp83640_remove.offset_1, ~ref_cnt, ~last_index, ~dp83640_driver_group1.base, #NULL.base, ~ldv_state_variable_1, #valid, #memory_int, v_rep#funAddr~dp83640_config_init.offset_1;
{
    var skb_mac_header_~skb.offset : int;
    var ldv_skb_dequeue_12_~tmp~460.offset : int;
    var phy_driver_register_#in~116.offset : int;
    var eth_hdr_#res.offset : int;
    var main_#t~nondet549 : int;
    var eth_hdr_#res.base : int;
    var read~$Pointer$_#value.offset : int;
    var ldv_set_add_~set.base : int;
    var decode_status_frame_~phy_rxts~258.base : int;
    var ldv_zalloc_~tmp___0~99 : int;
    var main_~ldvarg0~399.offset : int;
    var ldv_set_add_#in~e.base : int;
    var write~int_#ptr.base : int;
    var ldv_set_remove_#t~mem559.offset : int;
    var decode_status_frame_#in~dp83640.base : int;
    var ldv_skb_alloc_~tmp___7~504.base : int;
    var ULTIMATE.init_#t~nondet521.base : int;
    var main_#t~ret533 : int;
    var decode_status_frame_~phy_txts~258.offset : int;
    var skb_mac_header_#in~skb.base : int;
    var ldv_set_remove_#in~e.offset : int;
    var write~int_old_#memory_$Pointer$.offset : [int][int]int;
    var ULTIMATE.init_#t~nondet138.offset : int;
    var ULTIMATE.init_#t~union565.dep_map.class_cache.base : [int]int;
    var decode_status_frame_#t~ret363 : int;
    var ldv_check_final_state_#t~ret563 : int;
    var #Ultimate.alloc_old_#length : [int]int;
    var ldv_skb_dequeue_12_#res.base : int;
    var write~$Pointer$_#ptr.base : int;
    var write~$Pointer$_#ptr.offset : int;
    var write~int_#sizeOfWrittenType : int;
    var ldv_skb_dequeue_12_#in~ldv_func_arg1.offset : int;
    var main_#t~ret545 : int;
    var ldv_set_is_empty_~set.base : int;
    var dp83640_free_clocks_#t~mem372.offset : int;
    var write~int_#value : int;
    var dp83640_free_clocks_~__mptr~273.offset : int;
    var ULTIMATE.init_#t~union565.dep_map.class_cache.offset : [int]int;
    var skb_mac_header_~skb.base : int;
    var main_#t~switch532 : bool;
    var dp83640_rxtstamp_#t~mem499.base : int;
    var is_status_frame_#in~skb.offset : int;
    var skb_headlen_#res : int;
    var mutex_lock_nested_#in~41 : int;
    var decode_txts_~phy_txts.offset : int;
    var main_~tmp___0~399.offset : int;
    var dp83640_free_clocks_#t~mem377.offset : int;
    var decode_txts_#t~nondet350.base : int;
    var decode_txts_~phy_txts.base : int;
    var ldv_skb_dequeue_12_~ldv_func_arg1.base : int;
    var ldv_skb_free_~skb.offset : int;
    var dp83640_free_clocks_#t~ret373 : int;
    var ldv_initialize_phy_driver_1_#t~ret523.base : int;
    var decode_txts_#t~nondet344.offset : int;
    var #Ultimate.alloc_old_#valid : [int]int;
    var ldv_check_final_state_~tmp___7~512 : int;
    var mutex_lock_nested_#in~40.base : int;
    var ldv_set_is_empty_#in~set.base : int;
    var ldv_set_is_empty_~set.offset : int;
    var main_~tmp___4~399 : int;
    var write~int_#ptr.offset : int;
    var main_#t~ret526.offset : int;
    var ldv_set_add_#t~mem557.offset : int;
    var dp83640_rxtstamp_#t~mem500 : int;
    var skb_headlen_#in~skb.base : int;
    var skb_headlen_#t~mem86 : int;
    var ldv_set_add_#t~mem557.base : int;
    var decode_txts_#t~ret355 : int;
    var write~$Pointer$_old_#memory_$Pointer$.base : [int][int]int;
    var #Ultimate.alloc_~size : int;
    var decode_status_frame_~skb.offset : int;
    var eth_hdr_~tmp~110.offset : int;
    var ldv_set_remove_#t~mem559.base : int;
    var skb_headlen_~skb.offset : int;
    var decode_txts_~dp83640.offset : int;
    var ldv_set_add_~i~475 : int;
    var main_#t~nondet531 : int;
    var main_#t~ret544 : int;
    var decode_txts_~#shhwtstamps~252.base : int;
    var is_status_frame_~tmp~205.base : int;
    var is_status_frame_~tmp___0~205 : int;
    var skb_mac_header_#t~mem88.offset : int;
    var eth_hdr_~skb.offset : int;
    var read~int_#ptr.offset : int;
    var decode_txts_#t~nondet350.offset : int;
    var ldv_set_remove_#in~e.base : int;
    var ldv_initialize_phy_driver_1_~tmp___0~397.offset : int;
    var ldv_kfree_skb_18_#in~ldv_func_arg1.offset : int;
    var main_~tmp___3~399 : int;
    var decode_status_frame_~type~258 : int;
    var ldv_set_add_#in~set.offset : int;
    var dp83640_free_clocks_~clock~273.base : int;
    var ldv_set_remove_~i~485 : int;
    var skb_mac_header_#t~mem88.base : int;
    var ULTIMATE.init_#t~union565.__padding : [int]int;
    var decode_txts_#t~memset359.offset : int;
    var ldv_initialize_phy_driver_1_~tmp~397.base : int;
    var eth_hdr_#in~skb.base : int;
    var main_#t~ret539 : int;
    var skb_headlen_#in~skb.offset : int;
    var ldv_set_init_#in~set.base : int;
    var ULTIMATE.init_#t~union565.dep_map.ip : int;
    var mutex_lock_nested_#in~40.offset : int;
    var ldv_set_add_~set.offset : int;
    var dp83640_free_clocks_#t~mem371.base : int;
    var decode_txts_~ns~252 : int;
    var dp83640_free_clocks_#t~mem376.offset : int;
    var skb_mac_header_#res.base : int;
    var skb_headlen_#t~mem87 : int;
    var eth_hdr_#in~skb.offset : int;
    var eth_hdr_~tmp~110.base : int;
    var dp83640_free_clocks_~next~273.offset : int;
    var #Ultimate.alloc_#res.offset : int;
    var decode_status_frame_~dp83640.base : int;
    var main_~tmp___5~399 : int;
    var decode_txts_#t~ret343.offset : int;
    var decode_txts_#t~ret358 : int;
    var dp83640_free_clocks_#t~mem376.base : int;
    var ldv_skb_dequeue_12_~tmp~460.base : int;
    var ldv_skb_dequeue_12_#t~ret554.offset : int;
    var ldv_skb_free_~skb.base : int;
    var mutex_unlock_#in~42.base : int;
    var dp83640_rxtstamp_~skb.base : int;
    var decode_txts_#t~ret360.tv64 : int;
    var decode_txts_~#descriptor~252.offset : int;
    var phy_driver_unregister_#in~115.base : int;
    var read~$Pointer$_#ptr.offset : int;
    var main_#t~ret543 : int;
    var main_~tmp~399 : int;
    var eth_hdr_~skb.base : int;
    var decode_txts_~tmp~252 : int;
    var main_#t~nondet525 : int;
    var dp83640_rxtstamp_~phydev.offset : int;
    var ldv_zalloc_~p~99.offset : int;
    var read~$Pointer$_#value.base : int;
    var ldv_skb_alloc_#t~ret562.base : int;
    var ldv__builtin_expect_#res : int;
    var ldv_zalloc_#t~malloc94.base : int;
    var ULTIMATE.init_#t~union564.tail : int;
    var ldv_set_remove_#in~set.base : int;
    var ldv_zalloc_~p~99.base : int;
    var main_#t~ret538 : int;
    var decode_txts_~#shhwtstamps~252.offset : int;
    var dp83640_init_#res : int;
    var ldv_set_remove_#t~mem561.base : int;
    var dp83640_free_clocks_~clock~273.offset : int;
    var dp83640_rxtstamp_~dp83640~378.offset : int;
    var decode_status_frame_~ests~258 : int;
    var dp83640_free_clocks_#t~ret375 : int;
    var decode_txts_#in~phy_txts.offset : int;
    var ldv_set_add_~e.base : int;
    var ldv_skb_alloc_~skb~504.base : int;
    var ldv_zalloc_~tmp~99.offset : int;
    var decode_txts_#t~ret357 : int;
    var ldv__builtin_expect_#in~c : int;
    var ldv_skb_alloc_#res.offset : int;
    var dp83640_rxtstamp_~tmp~378 : int;
    var decode_status_frame_#in~skb.base : int;
    var dp83640_rxtstamp_#t~mem499.offset : int;
    var main_~ldvarg0~399.base : int;
    var dp83640_rxtstamp_#in~phydev.offset : int;
    var main_#t~ret542 : int;
    var ldv_initialize_phy_driver_1_#t~ret523.offset : int;
    var write~$Pointer$_#value.base : int;
    var ULTIMATE.init_#t~nondet138.base : int;
    var main_#t~ret527.base : int;
    var ldv_set_init_~set.offset : int;
    var ldv_set_remove_#in~set.offset : int;
    var dp83640_rxtstamp_#in~skb.offset : int;
    var dp83640_rxtstamp_~skb.offset : int;
    var dp83640_free_clocks_#t~nondet374.offset : int;
    var is_status_frame_#t~ret231.offset : int;
    var read~$Pointer$_#ptr.base : int;
    var read~int_#value : int;
    var dp83640_init_#t~ret522 : int;
    var decode_txts_#t~nondet344.base : int;
    var decode_txts_#t~nondet346.base : int;
    var is_status_frame_#t~ret232 : int;
    var is_status_frame_#t~ret231.base : int;
    var ldv_zalloc_~tmp~99.base : int;
    var decode_status_frame_~ptr~258.offset : int;
    var dp83640_free_clocks_#t~mem378.offset : int;
    var main_#t~ret537 : int;
    var main_#t~ret527.offset : int;
    var main_~ldvarg1~399 : int;
    var ULTIMATE.init_#t~union564.head : int;
    var ldv_skb_alloc_#res.base : int;
    var eth_hdr_#t~ret95.base : int;
    var decode_txts_#t~nondet348.offset : int;
    var decode_status_frame_~dp83640.offset : int;
    var ldv_set_remove_~set.offset : int;
    var phy_driver_register_#res : int;
    var decode_status_frame_~size~258 : int;
    var dp83640_rxtstamp_#res : int;
    var decode_txts_#t~nondet348.base : int;
    var ldv_set_add_#in~set.base : int;
    var ULTIMATE.dealloc_old_#valid : [int]int;
    var phy_driver_unregister_#in~115.offset : int;
    var read~int_#ptr.base : int;
    var dp83640_free_clocks_~__mptr~273.base : int;
    var ldv_zalloc_#t~malloc94.offset : int;
    var decode_status_frame_~phy_txts~258.base : int;
    var dp83640_free_clocks_~tmp~273 : int;
    var main_#t~ret541 : int;
    var decode_status_frame_~tmp~258 : int;
    var decode_txts_#t~mem354 : int;
    var ldv_set_add_#in~e.offset : int;
    var ldv_set_is_empty_#in~set.offset : int;
    var main_~tmp___0~399.base : int;
    var decode_status_frame_~phy_rxts~258.offset : int;
    var ldv_set_remove_#t~mem561.offset : int;
    var ULTIMATE.dealloc_~addr.offset : int;
    var ldv_skb_alloc_~skb~504.offset : int;
    var ULTIMATE.init_#t~union565.dep_map.cpu : int;
    var is_status_frame_~skb.base : int;
    var main_#t~ret536 : int;
    var dp83640_rxtstamp_#t~ret501 : int;
    var dp83640_rxtstamp_~dp83640~378.base : int;
    var write~$Pointer$_#value.offset : int;
    var is_status_frame_~skb.offset : int;
    var decode_status_frame_#in~skb.offset : int;
    var ldv_skb_dequeue_12_#t~ret554.base : int;
    var ULTIMATE.init_#t~union565.dep_map.name.offset : int;
    var main_#t~ret551 : int;
    var dp83640_free_clocks_#t~mem377.base : int;
    var decode_txts_~skb~252.offset : int;
    var ldv_initialize_phy_driver_1_#t~ret524.offset : int;
    var main_~tmp___1~399.base : int;
    var ldv__builtin_expect_#in~exp : int;
    var dp83640_free_clocks_#t~nondet374.base : int;
    var read~int_#sizeOfReadType : int;
    var ldv_set_init_#in~set.offset : int;
    var ldv__builtin_expect_~exp : int;
    var ldv_set_init_~set.base : int;
    var ULTIMATE.init_#t~union565.dep_map.key.base : int;
    var main_#t~switch550 : bool;
    var write~$Pointer$_old_#memory_$Pointer$.offset : [int][int]int;
    var main_#res : int;
    var main_#t~ret548 : int;
    var main_~ldvarg2~399 : int;
    var decode_txts_#t~memset359.base : int;
    var mutex_unlock_#in~42.offset : int;
    var decode_status_frame_~skb.base : int;
    var is_status_frame_#res : int;
    var main_#t~ret540 : int;
    var ldv_set_remove_~deleted_index~485 : int;
    var ldv_set_remove_~e.base : int;
    var write~$Pointer$_#sizeOfWrittenType : int;
    var decode_txts_#t~ret343.base : int;
    var main_#t~nondet528 : int;
    var dp83640_free_clocks_~this~273.base : int;
    var ldv_zalloc_#t~nondet93 : int;
    var ULTIMATE.init_#t~union565.dep_map.key.offset : int;
    var skb_mac_header_#t~mem89 : int;
    var decode_status_frame_#t~mem362.base : int;
    var is_status_frame_~h~205.base : int;
    var decode_status_frame_#in~dp83640.offset : int;
    var decode_txts_#t~nondet346.offset : int;
    var decode_status_frame_~ptr~258.base : int;
    var ldv_kfree_skb_18_~ldv_func_arg1.base : int;
    var ldv__builtin_expect_~c : int;
    var main_#t~ret535 : int;
    var dp83640_free_clocks_#t~mem372.base : int;
    var is_status_frame_#in~type : int;
    var decode_txts_~#descriptor~252.base : int;
    var write~$Pointer$_old_#memory_int : [int][int]int;
    var ULTIMATE.dealloc_~addr.base : int;
    var dp83640_rxtstamp_~phydev.base : int;
    var is_status_frame_~h~205.offset : int;
    var ldv_set_remove_~set.base : int;
    var decode_txts_~skb~252.base : int;
    var dp83640_free_clocks_~this~273.offset : int;
    var dp83640_free_clocks_~next~273.base : int;
    var #Ultimate.alloc_#res.base : int;
    var main_~tmp___2~399 : int;
    var ldv_skb_dequeue_12_#res.offset : int;
    var dp83640_rxtstamp_#in~skb.base : int;
    var ldv_zalloc_#res.offset : int;
    var ldv_skb_dequeue_12_#in~ldv_func_arg1.base : int;
    var ldv_skb_free_#in~skb.base : int;
    var dp83640_free_clocks_#t~mem378.base : int;
    var decode_status_frame_#t~ret365 : int;
    var write~int_old_#memory_int : [int][int]int;
    var phy_driver_register_#in~116.base : int;
    var decode_txts_~dp83640.base : int;
    var main_#t~switch530 : bool;
    var main_#t~ret547 : int;
    var ldv_zalloc_~size : int;
    var is_status_frame_~type : int;
    var ULTIMATE.init_#t~nondet137.base : int;
    var main_#t~ret526.base : int;
    var ldv_zalloc_#in~size : int;
    var main_~ldvarg3~399.base : int;
    var main_~tmp___1~399.offset : int;
    var is_status_frame_~tmp~205.offset : int;
    var ldv_set_add_~e.offset : int;
    var dp83640_free_clocks_#t~mem371.offset : int;
    var main_#t~nondet529 : int;
    var ldv_skb_free_#in~skb.offset : int;
    var dp83640_init_~tmp~391 : int;
    var is_status_frame_#in~skb.base : int;
    var ldv_set_is_empty_#res : int;
    var ldv_initialize_phy_driver_1_#t~ret524.base : int;
    var decode_txts_#in~dp83640.offset : int;
    var read~$Pointer$_#sizeOfReadType : int;
    var ULTIMATE.init_#t~union565.dep_map.name.base : int;
    var ULTIMATE.init_#t~nondet137.offset : int;
    var ldv_zalloc_#res.base : int;
    var decode_txts_#t~nondet356.base : int;
    var dp83640_rxtstamp_#t~ret503 : int;
    var skb_headlen_~skb.base : int;
    var ldv_initialize_phy_driver_1_~tmp___0~397.base : int;
    var main_~ldvarg3~399.offset : int;
    var eth_hdr_#t~ret95.offset : int;
    var ldv_skb_alloc_~tmp___7~504.offset : int;
    var ldv_initialize_phy_driver_1_~tmp~397.offset : int;
    var dp83640_rxtstamp_#in~type : int;
    var main_#t~ret534 : int;
    var decode_status_frame_~len~258 : int;
    var ULTIMATE.init_#t~nondet521.offset : int;
    var decode_status_frame_#t~mem362.offset : int;
    var write~int_old_#memory_$Pointer$.base : [int][int]int;
    var decode_txts_#in~dp83640.base : int;
    var dp83640_rxtstamp_#in~phydev.base : int;
    var ldv_skb_alloc_#t~ret562.offset : int;
    var dp83640_rxtstamp_~type : int;
    var skb_mac_header_#in~skb.offset : int;
    var skb_mac_header_#res.offset : int;
    var ldv_kfree_skb_18_~ldv_func_arg1.offset : int;
    var ldv_set_remove_~e.offset : int;
    var main_#t~ret546 : int;
    var decode_status_frame_#t~mem364 : int;
    var ldv_kfree_skb_18_#in~ldv_func_arg1.base : int;
    var decode_txts_#in~phy_txts.base : int;
    var decode_txts_#t~nondet356.offset : int;
    var ldv_skb_dequeue_12_~ldv_func_arg1.offset : int;

  loc0:
    havoc ULTIMATE.init_#t~union565.__padding, ULTIMATE.init_#t~nondet521.offset, ULTIMATE.init_#t~nondet138.offset, ULTIMATE.init_#t~union564.tail, ULTIMATE.init_#t~union565.dep_map.class_cache.base, ULTIMATE.init_#t~union565.dep_map.key.offset, ULTIMATE.init_#t~union565.dep_map.name.base, ULTIMATE.init_#t~nondet137.offset, ULTIMATE.init_#t~union565.dep_map.ip, ULTIMATE.init_#t~union565.dep_map.key.base, ULTIMATE.init_#t~union565.dep_map.cpu, ULTIMATE.init_#t~nondet138.base, ULTIMATE.init_#t~nondet137.base, ULTIMATE.init_#t~union565.dep_map.class_cache.offset, ULTIMATE.init_#t~nondet521.base, ULTIMATE.init_#t~union564.head, ULTIMATE.init_#t~union565.dep_map.name.offset;
    #NULL.offset, #NULL.base := 0, 0;
    #valid := #valid[0 := 0];
    ~ref_cnt := 0;
    ~ldv_state_variable_1 := 0;
    ~ldv_state_variable_0 := 0;
    ~chosen_phy := -1;
    ~ldv_retval_0 := 0;
    ~ldv_retval_1 := 0;
    ~last_index := 0;
    ~dp83640_driver_group0.offset, ~dp83640_driver_group0.base := 0, 0;
    ~dp83640_driver_group1.base, ~dp83640_driver_group1.offset := 0, 0;
    ~gpio_tab := ~gpio_tab[0 := 1];
    ~gpio_tab := ~gpio_tab[1 := 2];
    ~gpio_tab := ~gpio_tab[2 := 3];
    ~gpio_tab := ~gpio_tab[3 := 4];
    ~gpio_tab := ~gpio_tab[4 := 8];
    ~gpio_tab := ~gpio_tab[5 := 9];
    ~gpio_tab := ~gpio_tab[6 := 10];
    ~gpio_tab := ~gpio_tab[7 := 11];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 16;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#phyter_clocks.base, ~#phyter_clocks.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#phyter_clocks.base, ~#phyter_clocks.offset, 8, ~#phyter_clocks.offset, ~#phyter_clocks.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#phyter_clocks.base, ~#phyter_clocks.offset + 8, 8, ~#phyter_clocks.offset, ~#phyter_clocks.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 156;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#phyter_clocks_lock.offset, ~#phyter_clocks_lock.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#phyter_clocks_lock.base, 1, ~#phyter_clocks_lock.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#phyter_clocks_lock.base, 0, ~#phyter_clocks_lock.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union564.head, ~#phyter_clocks_lock.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union564.tail, ~#phyter_clocks_lock.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#phyter_clocks_lock.base, 3735899821, ~#phyter_clocks_lock.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#phyter_clocks_lock.base, 4294967295, ~#phyter_clocks_lock.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#phyter_clocks_lock.offset + 16, 8, -1, ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#phyter_clocks_lock.offset + 24, 8, 0, ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#phyter_clocks_lock.base, 0, ~#phyter_clocks_lock.offset + 32;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#phyter_clocks_lock.base, 0, ~#phyter_clocks_lock.offset + 40;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 29;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet137.base, ULTIMATE.init_#t~nondet137.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet137.base, ~#phyter_clocks_lock.offset + 48, 8, ULTIMATE.init_#t~nondet137.offset, ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#phyter_clocks_lock.base, 0, ~#phyter_clocks_lock.offset + 56;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#phyter_clocks_lock.base, 0, ~#phyter_clocks_lock.offset + 60;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[0], ~#phyter_clocks_lock.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[1], ~#phyter_clocks_lock.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[2], ~#phyter_clocks_lock.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[3], ~#phyter_clocks_lock.offset + 7;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[4], ~#phyter_clocks_lock.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[5], ~#phyter_clocks_lock.offset + 9;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[6], ~#phyter_clocks_lock.offset + 10;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[7], ~#phyter_clocks_lock.offset + 11;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[8], ~#phyter_clocks_lock.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[9], ~#phyter_clocks_lock.offset + 13;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[10], ~#phyter_clocks_lock.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[11], ~#phyter_clocks_lock.offset + 15;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[12], ~#phyter_clocks_lock.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[13], ~#phyter_clocks_lock.offset + 17;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[14], ~#phyter_clocks_lock.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[15], ~#phyter_clocks_lock.offset + 19;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[16], ~#phyter_clocks_lock.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[17], ~#phyter_clocks_lock.offset + 21;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[18], ~#phyter_clocks_lock.offset + 22;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[19], ~#phyter_clocks_lock.offset + 23;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[20], ~#phyter_clocks_lock.offset + 24;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[21], ~#phyter_clocks_lock.offset + 25;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[22], ~#phyter_clocks_lock.offset + 26;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.__padding[23], ~#phyter_clocks_lock.offset + 27;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union565.dep_map.key.base, ~#phyter_clocks_lock.offset + 28, 8, ULTIMATE.init_#t~union565.dep_map.key.offset, ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union565.dep_map.class_cache.base[0], ~#phyter_clocks_lock.offset + 36, 8, ULTIMATE.init_#t~union565.dep_map.class_cache.offset[0], ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union565.dep_map.class_cache.base[1], ~#phyter_clocks_lock.offset + 44, 8, ULTIMATE.init_#t~union565.dep_map.class_cache.offset[1], ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union565.dep_map.name.base, ~#phyter_clocks_lock.offset + 52, 8, ULTIMATE.init_#t~union565.dep_map.name.offset, ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.dep_map.cpu, ~#phyter_clocks_lock.offset + 60;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#phyter_clocks_lock.base, ULTIMATE.init_#t~union565.dep_map.ip, ~#phyter_clocks_lock.offset + 64;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#phyter_clocks_lock.base, ~#phyter_clocks_lock.offset + 72, 8, ~#phyter_clocks_lock.offset + 72, ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#phyter_clocks_lock.base, ~#phyter_clocks_lock.offset + 80, 8, ~#phyter_clocks_lock.offset + 72, ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#phyter_clocks_lock.offset + 88, 8, 0, ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#phyter_clocks_lock.offset + 96, 8, 0, ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#phyter_clocks_lock.base, ~#phyter_clocks_lock.offset + 104, 8, ~#phyter_clocks_lock.offset, ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#phyter_clocks_lock.offset + 112, 8, 0, ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#phyter_clocks_lock.base, 0, ~#phyter_clocks_lock.offset + 120;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#phyter_clocks_lock.base, 0, ~#phyter_clocks_lock.offset + 128;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 19;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet138.base, ULTIMATE.init_#t~nondet138.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet138.base, ~#phyter_clocks_lock.offset + 136, 8, ULTIMATE.init_#t~nondet138.offset, ~#phyter_clocks_lock.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#phyter_clocks_lock.base, 0, ~#phyter_clocks_lock.offset + 144;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#phyter_clocks_lock.base, 0, ~#phyter_clocks_lock.offset + 148;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc ULTIMATE.init_#t~union564.tail, ULTIMATE.init_#t~union564.head;
    havoc ULTIMATE.init_#t~nondet137.base, ULTIMATE.init_#t~nondet137.offset;
    havoc ULTIMATE.init_#t~union565.__padding, ULTIMATE.init_#t~union565.dep_map.ip, ULTIMATE.init_#t~union565.dep_map.key.base, ULTIMATE.init_#t~union565.dep_map.cpu, ULTIMATE.init_#t~union565.dep_map.class_cache.base, ULTIMATE.init_#t~union565.dep_map.class_cache.offset, ULTIMATE.init_#t~union565.dep_map.key.offset, ULTIMATE.init_#t~union565.dep_map.name.base, ULTIMATE.init_#t~union565.dep_map.name.offset;
    havoc ULTIMATE.init_#t~nondet138.base, ULTIMATE.init_#t~nondet138.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 6;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#status_frame_dst.base, ~#status_frame_dst.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#status_frame_dst.base, 1, ~#status_frame_dst.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#status_frame_dst.base, 27, ~#status_frame_dst.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#status_frame_dst.base, 25, ~#status_frame_dst.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#status_frame_dst.base, 0, ~#status_frame_dst.offset + 3;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#status_frame_dst.base, 0, ~#status_frame_dst.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#status_frame_dst.base, 0, ~#status_frame_dst.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 6;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#status_frame_src.base, ~#status_frame_src.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#status_frame_src.base, 8, ~#status_frame_src.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#status_frame_src.base, 0, ~#status_frame_src.offset + 1;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#status_frame_src.base, 23, ~#status_frame_src.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#status_frame_src.base, 11, ~#status_frame_src.offset + 3;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#status_frame_src.base, 107, ~#status_frame_src.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#status_frame_src.base, 15, ~#status_frame_src.offset + 5;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 289;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#dp83640_driver.offset, ~#dp83640_driver.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#dp83640_driver.base, 536894689, ~#dp83640_driver.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 16;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet521.offset, ULTIMATE.init_#t~nondet521.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet521.base, ~#dp83640_driver.offset + 4, 8, ULTIMATE.init_#t~nondet521.offset, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#dp83640_driver.base, 4294967280, ~#dp83640_driver.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#dp83640_driver.base, 719, ~#dp83640_driver.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#dp83640_driver.base, 1, ~#dp83640_driver.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 24, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~dp83640_config_init.base_1, ~#dp83640_driver.offset + 32, 8, v_rep#funAddr~dp83640_config_init.offset_1, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~dp83640_probe.base_1, ~#dp83640_driver.offset + 40, 8, v_rep#funAddr~dp83640_probe.offset_1, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 48, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 56, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~genphy_config_aneg.base_1, ~#dp83640_driver.offset + 64, 8, v_rep#funAddr~genphy_config_aneg.offset_1, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 72, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~genphy_read_status.base_1, ~#dp83640_driver.offset + 80, 8, v_rep#funAddr~genphy_read_status.offset_1, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~dp83640_ack_interrupt.base_1, ~#dp83640_driver.offset + 88, 8, v_rep#funAddr~dp83640_ack_interrupt.offset_1, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~dp83640_config_intr.base_1, ~#dp83640_driver.offset + 96, 8, v_rep#funAddr~dp83640_config_intr.offset_1, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 104, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~dp83640_remove.base_1, ~#dp83640_driver.offset + 112, 8, v_rep#funAddr~dp83640_remove.offset_1, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 120, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~dp83640_ts_info.base_1, ~#dp83640_driver.offset + 128, 8, v_rep#funAddr~dp83640_ts_info.offset_1, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~dp83640_hwtstamp.base_1, ~#dp83640_driver.offset + 136, 8, v_rep#funAddr~dp83640_hwtstamp.offset_1, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~dp83640_rxtstamp.base_1, ~#dp83640_driver.offset + 144, 8, v_rep#funAddr~dp83640_rxtstamp.offset_1, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~dp83640_txtstamp.base_1, ~#dp83640_driver.offset + 152, 8, v_rep#funAddr~dp83640_txtstamp.offset_1, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 160, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 168, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 176, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 184, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#__this_module.base, ~#dp83640_driver.offset + 192, 8, ~#__this_module.offset, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 200, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#dp83640_driver.base, 0, ~#dp83640_driver.offset + 208;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 209, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 217, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 225, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 233, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 241, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 249, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 257, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 265, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 273, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#dp83640_driver.offset + 281, 8, 0, ~#dp83640_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    havoc ULTIMATE.init_#t~nondet521.offset, ULTIMATE.init_#t~nondet521.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 120;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#set_impl.base, ~#set_impl.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 8, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 16, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 24, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 32, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 40, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 48, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 56, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 64, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 72, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 80, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 88, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 96, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 104, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#set_impl.offset + 112, 8, 0, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    ~LDV_SKBS.base, ~LDV_SKBS.offset := 0, 0;
    havoc main_#res;
    havoc main_#t~nondet525, main_#t~nondet529, main_~tmp___0~399.base, main_#t~nondet528, main_#t~nondet549, main_#t~ret539, main_~tmp___4~399, main_#t~ret526.offset, main_~ldvarg0~399.offset, main_#t~ret535, main_#t~ret536, main_#t~ret537, main_#t~ret538, main_~ldvarg3~399.offset, main_#t~ret527.offset, main_#t~ret534, main_#t~ret533, main_~ldvarg1~399, main_#t~ret551, main_~tmp___2~399, main_~tmp___5~399, main_~tmp___1~399.base, main_#t~nondet531, main_~ldvarg0~399.base, main_#t~ret542, main_#t~ret543, main_#t~switch550, main_~tmp~399, main_#t~switch530, main_#t~ret544, main_#t~ret545, main_#t~ret527.base, main_#t~ret546, main_#t~ret547, main_#t~ret526.base, main_#t~ret548, main_~ldvarg2~399, main_~tmp___3~399, main_~ldvarg3~399.base, main_~tmp___1~399.offset, main_#t~switch532, main_#t~ret540, main_#t~ret541, main_~tmp___0~399.offset;
    havoc main_~ldvarg1~399;
    havoc main_~tmp~399;
    havoc main_~ldvarg3~399.offset, main_~ldvarg3~399.base;
    havoc main_~tmp___0~399.base, main_~tmp___0~399.offset;
    havoc main_~ldvarg0~399.base, main_~ldvarg0~399.offset;
    havoc main_~tmp___1~399.base, main_~tmp___1~399.offset;
    havoc main_~ldvarg2~399;
    havoc main_~tmp___2~399;
    havoc main_~tmp___3~399;
    havoc main_~tmp___4~399;
    havoc main_~tmp___5~399;
    assume main_#t~nondet525 <= 2147483647 && 0 <= main_#t~nondet525 + 2147483648;
    main_~tmp~399 := main_#t~nondet525;
    havoc main_#t~nondet525;
    main_~ldvarg1~399 := main_~tmp~399;
    ldv_zalloc_#in~size := 40;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~tmp~99.base, ldv_zalloc_~p~99.base, ldv_zalloc_~p~99.offset, ldv_zalloc_~size, ldv_zalloc_~tmp~99.offset, ldv_zalloc_#t~malloc94.base, ldv_zalloc_#t~malloc94.offset, ldv_zalloc_#t~nondet93, ldv_zalloc_~tmp___0~99;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~99.base, ldv_zalloc_~p~99.offset;
    havoc ldv_zalloc_~tmp~99.base, ldv_zalloc_~tmp~99.offset;
    havoc ldv_zalloc_~tmp___0~99;
    assume 0 <= ldv_zalloc_#t~nondet93 + 2147483648 && ldv_zalloc_#t~nondet93 <= 2147483647;
    ldv_zalloc_~tmp___0~99 := ldv_zalloc_#t~nondet93;
    havoc ldv_zalloc_#t~nondet93;
    assume !(ldv_zalloc_~tmp___0~99 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret526.base, main_#t~ret526.offset := ldv_zalloc_#res.base, ldv_zalloc_#res.offset;
    main_~tmp___0~399.base, main_~tmp___0~399.offset := main_#t~ret526.base, main_#t~ret526.offset;
    havoc main_#t~ret526.base, main_#t~ret526.offset;
    main_~ldvarg3~399.offset, main_~ldvarg3~399.base := main_~tmp___0~399.offset, main_~tmp___0~399.base;
    ldv_zalloc_#in~size := 44;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~tmp~99.base, ldv_zalloc_~p~99.base, ldv_zalloc_~p~99.offset, ldv_zalloc_~size, ldv_zalloc_~tmp~99.offset, ldv_zalloc_#t~malloc94.base, ldv_zalloc_#t~malloc94.offset, ldv_zalloc_#t~nondet93, ldv_zalloc_~tmp___0~99;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~99.base, ldv_zalloc_~p~99.offset;
    havoc ldv_zalloc_~tmp~99.base, ldv_zalloc_~tmp~99.offset;
    havoc ldv_zalloc_~tmp___0~99;
    assume 0 <= ldv_zalloc_#t~nondet93 + 2147483648 && ldv_zalloc_#t~nondet93 <= 2147483647;
    ldv_zalloc_~tmp___0~99 := ldv_zalloc_#t~nondet93;
    havoc ldv_zalloc_#t~nondet93;
    assume !(ldv_zalloc_~tmp___0~99 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    main_#t~ret527.base, main_#t~ret527.offset := ldv_zalloc_#res.base, ldv_zalloc_#res.offset;
    main_~tmp___1~399.base, main_~tmp___1~399.offset := main_#t~ret527.base, main_#t~ret527.offset;
    havoc main_#t~ret527.base, main_#t~ret527.offset;
    main_~ldvarg0~399.base, main_~ldvarg0~399.offset := main_~tmp___1~399.base, main_~tmp___1~399.offset;
    assume 0 <= main_#t~nondet528 + 2147483648 && main_#t~nondet528 <= 2147483647;
    main_~tmp___2~399 := main_#t~nondet528;
    havoc main_#t~nondet528;
    main_~ldvarg2~399 := main_~tmp___2~399;
    ldv_set_init_#in~set.base, ldv_set_init_#in~set.offset := ~LDV_SKBS.base, ~LDV_SKBS.offset;
    havoc ldv_set_init_~set.offset, ldv_set_init_~set.base;
    ldv_set_init_~set.offset, ldv_set_init_~set.base := ldv_set_init_#in~set.offset, ldv_set_init_#in~set.base;
    ldv_set_init_~set.offset, ldv_set_init_~set.base := ~#set_impl.offset, ~#set_impl.base;
    ~last_index := 0;
    ~ldv_state_variable_1 := 0;
    ~ref_cnt := 0;
    ~ldv_state_variable_0 := 1;
    goto loc1;
  loc1:
    assume main_#t~nondet529 <= 2147483647 && 0 <= main_#t~nondet529 + 2147483648;
    main_~tmp___3~399 := main_#t~nondet529;
    havoc main_#t~nondet529;
    goto loc2;
  loc2:
    goto loc2_0, loc2_1;
  loc2_0:
    assume main_~tmp___3~399 == 0;
    main_#t~switch530 := true;
    goto loc3;
  loc2_1:
    assume !(main_~tmp___3~399 == 0);
    main_#t~switch530 := false;
    goto loc3;
  loc3:
    goto loc3_0, loc3_1;
  loc3_0:
    assume main_#t~switch530;
    assume !(~ldv_state_variable_1 == 0);
    assume main_#t~nondet531 <= 2147483647 && 0 <= main_#t~nondet531 + 2147483648;
    main_~tmp___4~399 := main_#t~nondet531;
    havoc main_#t~nondet531;
    assume main_~tmp___4~399 == 0;
    main_#t~switch532 := true;
    assume !main_#t~switch532;
    assume main_#t~switch532;
    main_#t~switch532 := true;
    assume !main_#t~switch532;
    assume main_#t~switch532;
    main_#t~switch532 := true;
    assume !main_#t~switch532;
    assume !main_#t~switch532 && !(main_~tmp___4~399 == 3);
    main_#t~switch532 := false;
    assume !main_#t~switch532;
    assume !(main_~tmp___4~399 == 4) && !main_#t~switch532;
    main_#t~switch532 := false;
    assume !main_#t~switch532;
    assume main_#t~switch532;
    main_#t~switch532 := true;
    assume !main_#t~switch532;
    assume !main_#t~switch532 && !(main_~tmp___4~399 == 6);
    main_#t~switch532 := false;
    assume main_#t~switch532;
    assume ~ldv_state_variable_1 == 1;
    dp83640_rxtstamp_#in~skb.base, dp83640_rxtstamp_#in~skb.offset, dp83640_rxtstamp_#in~phydev.base, dp83640_rxtstamp_#in~type, dp83640_rxtstamp_#in~phydev.offset := ~dp83640_driver_group1.base, ~dp83640_driver_group1.offset, ~dp83640_driver_group0.base, main_~ldvarg1~399, ~dp83640_driver_group0.offset;
    havoc dp83640_rxtstamp_#res;
    havoc dp83640_rxtstamp_~phydev.offset, dp83640_rxtstamp_~tmp~378, dp83640_rxtstamp_~skb.base, dp83640_rxtstamp_#t~mem499.offset, dp83640_rxtstamp_~type, dp83640_rxtstamp_#t~mem500, dp83640_rxtstamp_#t~ret503, dp83640_rxtstamp_#t~ret501, dp83640_rxtstamp_~skb.offset, dp83640_rxtstamp_~dp83640~378.base, dp83640_rxtstamp_~phydev.base, dp83640_rxtstamp_~dp83640~378.offset, dp83640_rxtstamp_#t~mem499.base;
    dp83640_rxtstamp_~phydev.offset, dp83640_rxtstamp_~phydev.base := dp83640_rxtstamp_#in~phydev.offset, dp83640_rxtstamp_#in~phydev.base;
    dp83640_rxtstamp_~skb.offset, dp83640_rxtstamp_~skb.base := dp83640_rxtstamp_#in~skb.offset, dp83640_rxtstamp_#in~skb.base;
    dp83640_rxtstamp_~type := dp83640_rxtstamp_#in~type;
    havoc dp83640_rxtstamp_~dp83640~378.base, dp83640_rxtstamp_~dp83640~378.offset;
    havoc dp83640_rxtstamp_~tmp~378;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := dp83640_rxtstamp_~phydev.base, 8, dp83640_rxtstamp_~phydev.offset + 1468;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    dp83640_rxtstamp_#t~mem499.base, dp83640_rxtstamp_#t~mem499.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    dp83640_rxtstamp_~dp83640~378.base, dp83640_rxtstamp_~dp83640~378.offset := dp83640_rxtstamp_#t~mem499.base, dp83640_rxtstamp_#t~mem499.offset;
    havoc dp83640_rxtstamp_#t~mem499.base, dp83640_rxtstamp_#t~mem499.offset;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := dp83640_rxtstamp_~dp83640~378.base, dp83640_rxtstamp_~dp83640~378.offset + 112, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    dp83640_rxtstamp_#t~mem500 := read~int_#value;
    assume !(dp83640_rxtstamp_#t~mem500 == 0);
    havoc dp83640_rxtstamp_#t~mem500;
    is_status_frame_#in~skb.base, is_status_frame_#in~type, is_status_frame_#in~skb.offset := dp83640_rxtstamp_~skb.base, dp83640_rxtstamp_~type, dp83640_rxtstamp_~skb.offset;
    havoc is_status_frame_#res;
    havoc is_status_frame_~skb.base, is_status_frame_~tmp~205.base, is_status_frame_~tmp___0~205, is_status_frame_~type, is_status_frame_#t~ret231.offset, is_status_frame_~h~205.offset, is_status_frame_~skb.offset, is_status_frame_#t~ret232, is_status_frame_~tmp~205.offset, is_status_frame_~h~205.base, is_status_frame_#t~ret231.base;
    is_status_frame_~skb.base, is_status_frame_~skb.offset := is_status_frame_#in~skb.base, is_status_frame_#in~skb.offset;
    is_status_frame_~type := is_status_frame_#in~type;
    havoc is_status_frame_~h~205.offset, is_status_frame_~h~205.base;
    havoc is_status_frame_~tmp~205.base, is_status_frame_~tmp~205.offset;
    havoc is_status_frame_~tmp___0~205;
    eth_hdr_#in~skb.base, eth_hdr_#in~skb.offset := is_status_frame_~skb.base, is_status_frame_~skb.offset;
    havoc eth_hdr_#res.offset, eth_hdr_#res.base;
    havoc eth_hdr_#t~ret95.base, eth_hdr_~skb.base, eth_hdr_~skb.offset, eth_hdr_~tmp~110.offset, eth_hdr_#t~ret95.offset, eth_hdr_~tmp~110.base;
    eth_hdr_~skb.base, eth_hdr_~skb.offset := eth_hdr_#in~skb.base, eth_hdr_#in~skb.offset;
    havoc eth_hdr_~tmp~110.offset, eth_hdr_~tmp~110.base;
    skb_mac_header_#in~skb.base, skb_mac_header_#in~skb.offset := eth_hdr_~skb.base, eth_hdr_~skb.offset;
    havoc skb_mac_header_#res.offset, skb_mac_header_#res.base;
    havoc skb_mac_header_~skb.offset, skb_mac_header_#t~mem88.offset, skb_mac_header_~skb.base, skb_mac_header_#t~mem89, skb_mac_header_#t~mem88.base;
    skb_mac_header_~skb.offset, skb_mac_header_~skb.base := skb_mac_header_#in~skb.offset, skb_mac_header_#in~skb.base;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := skb_mac_header_~skb.base, 8, skb_mac_header_~skb.offset + 224;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    skb_mac_header_#t~mem88.offset, skb_mac_header_#t~mem88.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := skb_mac_header_~skb.base, skb_mac_header_~skb.offset + 214, 2;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    skb_mac_header_#t~mem89 := read~int_#value;
    assume skb_mac_header_#t~mem89 < -65536 && skb_mac_header_#t~mem89 % 65536 <= 9223372036854775807;
    skb_mac_header_#res.offset, skb_mac_header_#res.base := skb_mac_header_#t~mem88.offset + skb_mac_header_#t~mem89 % 65536, skb_mac_header_#t~mem88.base;
    havoc skb_mac_header_#t~mem88.offset, skb_mac_header_#t~mem88.base;
    havoc skb_mac_header_#t~mem89;
    eth_hdr_#t~ret95.base, eth_hdr_#t~ret95.offset := skb_mac_header_#res.base, skb_mac_header_#res.offset;
    eth_hdr_~tmp~110.offset, eth_hdr_~tmp~110.base := eth_hdr_#t~ret95.offset, eth_hdr_#t~ret95.base;
    havoc eth_hdr_#t~ret95.base, eth_hdr_#t~ret95.offset;
    eth_hdr_#res.offset, eth_hdr_#res.base := eth_hdr_~tmp~110.offset, eth_hdr_~tmp~110.base;
    is_status_frame_#t~ret231.offset, is_status_frame_#t~ret231.base := eth_hdr_#res.offset, eth_hdr_#res.base;
    is_status_frame_~tmp~205.base, is_status_frame_~tmp~205.offset := is_status_frame_#t~ret231.base, is_status_frame_#t~ret231.offset;
    havoc is_status_frame_#t~ret231.offset, is_status_frame_#t~ret231.base;
    is_status_frame_~h~205.offset, is_status_frame_~h~205.base := is_status_frame_~tmp~205.offset, is_status_frame_~tmp~205.base;
    assume !(is_status_frame_~type == 50);
    is_status_frame_#res := 0;
    dp83640_rxtstamp_#t~ret501 := is_status_frame_#res;
    dp83640_rxtstamp_~tmp~378 := dp83640_rxtstamp_#t~ret501;
    havoc dp83640_rxtstamp_#t~ret501;
    assume (!(dp83640_rxtstamp_~tmp~378 - 256 == 0) && dp83640_rxtstamp_~tmp~378 < 256 + 256) && 256 <= dp83640_rxtstamp_~tmp~378;
    decode_status_frame_#in~dp83640.base, decode_status_frame_#in~skb.base, decode_status_frame_#in~skb.offset, decode_status_frame_#in~dp83640.offset := dp83640_rxtstamp_~dp83640~378.base, dp83640_rxtstamp_~skb.base, dp83640_rxtstamp_~skb.offset, dp83640_rxtstamp_~dp83640~378.offset;
    havoc decode_status_frame_~tmp~258, decode_status_frame_~dp83640.base, decode_status_frame_~skb.offset, decode_status_frame_#t~mem362.offset, decode_status_frame_~phy_rxts~258.offset, decode_status_frame_#t~ret365, decode_status_frame_~dp83640.offset, decode_status_frame_#t~ret363, decode_status_frame_~phy_rxts~258.base, decode_status_frame_#t~mem362.base, decode_status_frame_~size~258, decode_status_frame_~ptr~258.base, decode_status_frame_#t~mem364, decode_status_frame_~ptr~258.offset, decode_status_frame_~phy_txts~258.base, decode_status_frame_~type~258, decode_status_frame_~skb.base, decode_status_frame_~ests~258, decode_status_frame_~phy_txts~258.offset, decode_status_frame_~len~258;
    decode_status_frame_~dp83640.base, decode_status_frame_~dp83640.offset := decode_status_frame_#in~dp83640.base, decode_status_frame_#in~dp83640.offset;
    decode_status_frame_~skb.offset, decode_status_frame_~skb.base := decode_status_frame_#in~skb.offset, decode_status_frame_#in~skb.base;
    havoc decode_status_frame_~phy_rxts~258.offset, decode_status_frame_~phy_rxts~258.base;
    havoc decode_status_frame_~phy_txts~258.base, decode_status_frame_~phy_txts~258.offset;
    havoc decode_status_frame_~ptr~258.base, decode_status_frame_~ptr~258.offset;
    havoc decode_status_frame_~len~258;
    havoc decode_status_frame_~size~258;
    havoc decode_status_frame_~ests~258;
    havoc decode_status_frame_~type~258;
    havoc decode_status_frame_~tmp~258;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := decode_status_frame_~skb.base, 8, decode_status_frame_~skb.offset + 232;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    decode_status_frame_#t~mem362.offset, decode_status_frame_#t~mem362.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    decode_status_frame_~ptr~258.base, decode_status_frame_~ptr~258.offset := decode_status_frame_#t~mem362.base, decode_status_frame_#t~mem362.offset + 2;
    havoc decode_status_frame_#t~mem362.offset, decode_status_frame_#t~mem362.base;
    skb_headlen_#in~skb.base, skb_headlen_#in~skb.offset := decode_status_frame_~skb.base, decode_status_frame_~skb.offset;
    havoc skb_headlen_#res;
    havoc skb_headlen_~skb.base, skb_headlen_#t~mem86, skb_headlen_~skb.offset, skb_headlen_#t~mem87;
    skb_headlen_~skb.base, skb_headlen_~skb.offset := skb_headlen_#in~skb.base, skb_headlen_#in~skb.offset;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := skb_headlen_~skb.base, skb_headlen_~skb.offset + 104, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    skb_headlen_#t~mem86 := read~int_#value;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := skb_headlen_~skb.base, skb_headlen_~skb.offset + 108, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    skb_headlen_#t~mem87 := read~int_#value;
    skb_headlen_#res := skb_headlen_#t~mem86 - skb_headlen_#t~mem87;
    havoc skb_headlen_#t~mem86;
    havoc skb_headlen_#t~mem87;
    decode_status_frame_#t~ret363 := skb_headlen_#res;
    decode_status_frame_~tmp~258 := decode_status_frame_#t~ret363;
    havoc decode_status_frame_#t~ret363;
    assume (decode_status_frame_~tmp~258 + 2147483647 <= 0 && decode_status_frame_~tmp~258 + 4294967294 < 4294967296) && 0 <= decode_status_frame_~tmp~258 + 4294967294;
    decode_status_frame_~len~258 := decode_status_frame_~tmp~258 + 4294967294;
    goto loc4;
  loc3_1:
    assume !main_#t~switch530;
    assume main_~tmp___3~399 == 1;
    main_#t~switch530 := true;
    assume main_#t~switch530;
    assume !(~ldv_state_variable_0 == 0);
    assume 0 <= main_#t~nondet549 + 2147483648 && main_#t~nondet549 <= 2147483647;
    main_~tmp___5~399 := main_#t~nondet549;
    havoc main_#t~nondet549;
    goto loc5;
  loc4:
    goto loc4_0, loc4_1;
  loc4_0:
    assume 4294967296 + 4294967296 <= decode_status_frame_~len~258 && 2 < decode_status_frame_~len~258 % 4294967296;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := decode_status_frame_~ptr~258.base, decode_status_frame_~ptr~258.offset, 2;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    decode_status_frame_#t~mem364 := read~int_#value;
    decode_status_frame_~type~258 := decode_status_frame_#t~mem364;
    havoc decode_status_frame_#t~mem364;
    havoc decode_status_frame_~ests~258;
    havoc decode_status_frame_~type~258;
    assume (-4294967296 <= decode_status_frame_~len~258 + 4294967294 && decode_status_frame_~len~258 + 4294967294 < 0) && !(decode_status_frame_~len~258 + 6442450943 <= 0);
    decode_status_frame_~len~258 := decode_status_frame_~len~258 + 8589934590 - 4294967296;
    decode_status_frame_~ptr~258.base, decode_status_frame_~ptr~258.offset := decode_status_frame_~ptr~258.base, decode_status_frame_~ptr~258.offset + 2;
    assume !(11 < decode_status_frame_~len~258) && 0 <= decode_status_frame_~len~258;
    assume (7 < decode_status_frame_~len~258 % 4294967296 && 4294967296 + 4294967296 <= decode_status_frame_~len~258) && decode_status_frame_~type~258 - 65536 == 4096;
    decode_status_frame_~phy_txts~258.base, decode_status_frame_~phy_txts~258.offset := decode_status_frame_~ptr~258.base, decode_status_frame_~ptr~258.offset;
    decode_txts_#in~dp83640.offset, decode_txts_#in~dp83640.base, decode_txts_#in~phy_txts.base, decode_txts_#in~phy_txts.offset := decode_status_frame_~dp83640.offset, decode_status_frame_~dp83640.base, decode_status_frame_~phy_txts~258.base, decode_status_frame_~phy_txts~258.offset;
    havoc decode_txts_#t~nondet350.base, decode_txts_#t~memset359.offset, decode_txts_~phy_txts.base, decode_txts_#t~mem354, decode_txts_#t~nondet344.offset, decode_txts_#t~ret343.base, decode_txts_#t~nondet344.base, decode_txts_#t~nondet346.base, decode_txts_#t~nondet346.offset, decode_txts_#t~nondet356.base, decode_txts_~#descriptor~252.base, decode_txts_~ns~252, decode_txts_~#shhwtstamps~252.offset, decode_txts_~skb~252.base, decode_txts_#t~ret355, decode_txts_#t~ret343.offset, decode_txts_~skb~252.offset, decode_txts_#t~ret358, decode_txts_#t~nondet348.offset, decode_txts_#t~ret357, decode_txts_#t~ret360.tv64, decode_txts_~dp83640.offset, decode_txts_~#descriptor~252.offset, decode_txts_~dp83640.base, decode_txts_#t~nondet348.base, decode_txts_~#shhwtstamps~252.base, decode_txts_~tmp~252, decode_txts_#t~nondet350.offset, decode_txts_#t~memset359.base, decode_txts_#t~nondet356.offset, decode_txts_~phy_txts.offset;
    decode_txts_~dp83640.base, decode_txts_~dp83640.offset := decode_txts_#in~dp83640.base, decode_txts_#in~dp83640.offset;
    decode_txts_~phy_txts.base, decode_txts_~phy_txts.offset := decode_txts_#in~phy_txts.base, decode_txts_#in~phy_txts.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 16;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    decode_txts_~#shhwtstamps~252.base, decode_txts_~#shhwtstamps~252.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc decode_txts_~skb~252.offset, decode_txts_~skb~252.base;
    havoc decode_txts_~ns~252;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 37;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    decode_txts_~#descriptor~252.base, decode_txts_~#descriptor~252.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    havoc decode_txts_~tmp~252;
    ldv_skb_dequeue_12_#in~ldv_func_arg1.offset, ldv_skb_dequeue_12_#in~ldv_func_arg1.base := decode_txts_~dp83640.offset + 2692, decode_txts_~dp83640.base;
    havoc ldv_skb_dequeue_12_#res.base, ldv_skb_dequeue_12_#res.offset;
    havoc ldv_skb_dequeue_12_~tmp~460.offset, ldv_skb_dequeue_12_~ldv_func_arg1.base, ldv_skb_dequeue_12_~tmp~460.base, ldv_skb_dequeue_12_#t~ret554.offset, ldv_skb_dequeue_12_#t~ret554.base, ldv_skb_dequeue_12_~ldv_func_arg1.offset;
    ldv_skb_dequeue_12_~ldv_func_arg1.base, ldv_skb_dequeue_12_~ldv_func_arg1.offset := ldv_skb_dequeue_12_#in~ldv_func_arg1.base, ldv_skb_dequeue_12_#in~ldv_func_arg1.offset;
    havoc ldv_skb_dequeue_12_~tmp~460.offset, ldv_skb_dequeue_12_~tmp~460.base;
    havoc ldv_skb_alloc_#res.offset, ldv_skb_alloc_#res.base;
    havoc ldv_skb_alloc_~skb~504.offset, ldv_skb_alloc_~skb~504.base, ldv_skb_alloc_#t~ret562.base, ldv_skb_alloc_~tmp___7~504.offset, ldv_skb_alloc_~tmp___7~504.base, ldv_skb_alloc_#t~ret562.offset;
    havoc ldv_skb_alloc_~skb~504.offset, ldv_skb_alloc_~skb~504.base;
    havoc ldv_skb_alloc_~tmp___7~504.offset, ldv_skb_alloc_~tmp___7~504.base;
    ldv_zalloc_#in~size := 248;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~tmp~99.base, ldv_zalloc_~p~99.base, ldv_zalloc_~p~99.offset, ldv_zalloc_~size, ldv_zalloc_~tmp~99.offset, ldv_zalloc_#t~malloc94.base, ldv_zalloc_#t~malloc94.offset, ldv_zalloc_#t~nondet93, ldv_zalloc_~tmp___0~99;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~99.base, ldv_zalloc_~p~99.offset;
    havoc ldv_zalloc_~tmp~99.base, ldv_zalloc_~tmp~99.offset;
    havoc ldv_zalloc_~tmp___0~99;
    assume ldv_zalloc_#t~nondet93 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet93 + 2147483648;
    ldv_zalloc_~tmp___0~99 := ldv_zalloc_#t~nondet93;
    havoc ldv_zalloc_#t~nondet93;
    assume !(ldv_zalloc_~tmp___0~99 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_skb_alloc_#t~ret562.base, ldv_skb_alloc_#t~ret562.offset := ldv_zalloc_#res.base, ldv_zalloc_#res.offset;
    ldv_skb_alloc_~tmp___7~504.offset, ldv_skb_alloc_~tmp___7~504.base := ldv_skb_alloc_#t~ret562.offset, ldv_skb_alloc_#t~ret562.base;
    havoc ldv_skb_alloc_#t~ret562.base, ldv_skb_alloc_#t~ret562.offset;
    ldv_skb_alloc_~skb~504.offset, ldv_skb_alloc_~skb~504.base := ldv_skb_alloc_~tmp___7~504.offset, ldv_skb_alloc_~tmp___7~504.base;
    assume !(ldv_skb_alloc_~skb~504.base == 0);
    ldv_set_add_#in~set.base, ldv_set_add_#in~e.base, ldv_set_add_#in~e.offset, ldv_set_add_#in~set.offset := ~LDV_SKBS.base, ldv_skb_alloc_~skb~504.base, ldv_skb_alloc_~skb~504.offset, ~LDV_SKBS.offset;
    havoc ldv_set_add_~set.offset, ldv_set_add_~e.base, ldv_set_add_#t~mem557.base, ldv_set_add_~set.base, ldv_set_add_~i~475, ldv_set_add_~e.offset, ldv_set_add_#t~mem557.offset;
    ldv_set_add_~set.offset, ldv_set_add_~set.base := ldv_set_add_#in~set.offset, ldv_set_add_#in~set.base;
    ldv_set_add_~e.base, ldv_set_add_~e.offset := ldv_set_add_#in~e.base, ldv_set_add_#in~e.offset;
    havoc ldv_set_add_~i~475;
    ldv_set_add_~i~475 := 0;
    assume !(ldv_set_add_~i~475 < ~last_index);
    assume ~last_index < 15;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ldv_set_add_~e.base, ~#set_impl.offset + 8 * ~last_index, 8, ldv_set_add_~e.offset, ~#set_impl.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    ~last_index := ~last_index + 1;
    ldv_skb_alloc_#res.offset, ldv_skb_alloc_#res.base := ldv_skb_alloc_~skb~504.offset, ldv_skb_alloc_~skb~504.base;
    ldv_skb_dequeue_12_#t~ret554.offset, ldv_skb_dequeue_12_#t~ret554.base := ldv_skb_alloc_#res.offset, ldv_skb_alloc_#res.base;
    ldv_skb_dequeue_12_~tmp~460.offset, ldv_skb_dequeue_12_~tmp~460.base := ldv_skb_dequeue_12_#t~ret554.offset, ldv_skb_dequeue_12_#t~ret554.base;
    havoc ldv_skb_dequeue_12_#t~ret554.offset, ldv_skb_dequeue_12_#t~ret554.base;
    ldv_skb_dequeue_12_#res.base, ldv_skb_dequeue_12_#res.offset := ldv_skb_dequeue_12_~tmp~460.base, ldv_skb_dequeue_12_~tmp~460.offset;
    decode_txts_#t~ret343.offset, decode_txts_#t~ret343.base := ldv_skb_dequeue_12_#res.offset, ldv_skb_dequeue_12_#res.base;
    decode_txts_~skb~252.offset, decode_txts_~skb~252.base := decode_txts_#t~ret343.offset, decode_txts_#t~ret343.base;
    havoc decode_txts_#t~ret343.offset, decode_txts_#t~ret343.base;
    assume (decode_txts_~skb~252.base + decode_txts_~skb~252.offset) % 18446744073709551616 == 0 && decode_txts_~skb~252.base + decode_txts_~skb~252.offset < -18446744073709551616;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    decode_txts_#t~nondet344.offset, decode_txts_#t~nondet344.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := decode_txts_#t~nondet344.base, decode_txts_~#descriptor~252.offset, 8, decode_txts_#t~nondet344.offset, decode_txts_~#descriptor~252.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    havoc decode_txts_#t~nondet344.offset, decode_txts_#t~nondet344.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 12;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    decode_txts_#t~nondet346.offset, decode_txts_#t~nondet346.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := decode_txts_#t~nondet346.base, decode_txts_~#descriptor~252.offset + 8, 8, decode_txts_#t~nondet346.offset, decode_txts_~#descriptor~252.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    havoc decode_txts_#t~nondet346.offset, decode_txts_#t~nondet346.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 222;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    decode_txts_#t~nondet348.base, decode_txts_#t~nondet348.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := decode_txts_#t~nondet348.base, decode_txts_~#descriptor~252.offset + 16, 8, decode_txts_#t~nondet348.offset, decode_txts_~#descriptor~252.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    havoc decode_txts_#t~nondet348.base, decode_txts_#t~nondet348.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 36;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    decode_txts_#t~nondet350.base, decode_txts_#t~nondet350.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := decode_txts_#t~nondet350.base, decode_txts_~#descriptor~252.offset + 24, 8, decode_txts_#t~nondet350.offset, decode_txts_~#descriptor~252.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    havoc decode_txts_#t~nondet350.base, decode_txts_#t~nondet350.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, decode_txts_~#descriptor~252.base, 813, decode_txts_~#descriptor~252.offset + 32;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, decode_txts_~#descriptor~252.base, 0, decode_txts_~#descriptor~252.offset + 36;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := decode_txts_~#descriptor~252.base, decode_txts_~#descriptor~252.offset + 36, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    decode_txts_#t~mem354 := read~int_#value;
    ldv__builtin_expect_#in~c := 0;
    havoc ldv__builtin_expect_#in~exp;
    havoc ldv__builtin_expect_#res;
    havoc ldv__builtin_expect_~c, ldv__builtin_expect_~exp;
    ldv__builtin_expect_~exp := ldv__builtin_expect_#in~exp;
    ldv__builtin_expect_~c := ldv__builtin_expect_#in~c;
    ldv__builtin_expect_#res := ldv__builtin_expect_~exp;
    decode_txts_#t~ret355 := ldv__builtin_expect_#res;
    assume decode_txts_#t~ret355 <= 9223372036854775807 && 0 <= decode_txts_#t~ret355 + 9223372036854775808;
    decode_txts_~tmp~252 := decode_txts_#t~ret355;
    havoc decode_txts_#t~mem354;
    havoc decode_txts_#t~ret355;
    assume decode_txts_~tmp~252 == 0;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := decode_txts_~#shhwtstamps~252.base, decode_txts_~#shhwtstamps~252.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc decode_txts_~#shhwtstamps~252.base, decode_txts_~#shhwtstamps~252.offset;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := decode_txts_~#descriptor~252.base, decode_txts_~#descriptor~252.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc decode_txts_~#descriptor~252.base, decode_txts_~#descriptor~252.offset;
    decode_status_frame_~size~258 := 8;
    assume (-18446744073709551616 <= decode_status_frame_~size~258 && decode_status_frame_~size~258 < 0) && decode_status_frame_~size~258 + 9223372036854775809 <= 0;
    decode_status_frame_~ptr~258.base, decode_status_frame_~ptr~258.offset := decode_status_frame_~ptr~258.base, decode_status_frame_~size~258 + decode_status_frame_~ptr~258.offset + 18446744073709551616;
    decode_status_frame_~len~258 := decode_status_frame_~len~258 - decode_status_frame_~size~258;
    goto loc4;
  loc4_1:
    assume decode_status_frame_~len~258 < -4294967296 && !(2 < decode_status_frame_~len~258 % 4294967296);
    ldv_kfree_skb_18_#in~ldv_func_arg1.base, ldv_kfree_skb_18_#in~ldv_func_arg1.offset := dp83640_rxtstamp_~skb.base, dp83640_rxtstamp_~skb.offset;
    havoc ldv_kfree_skb_18_~ldv_func_arg1.offset, ldv_kfree_skb_18_~ldv_func_arg1.base;
    ldv_kfree_skb_18_~ldv_func_arg1.offset, ldv_kfree_skb_18_~ldv_func_arg1.base := ldv_kfree_skb_18_#in~ldv_func_arg1.offset, ldv_kfree_skb_18_#in~ldv_func_arg1.base;
    ldv_skb_free_#in~skb.base, ldv_skb_free_#in~skb.offset := ldv_kfree_skb_18_~ldv_func_arg1.base, ldv_kfree_skb_18_~ldv_func_arg1.offset;
    havoc ldv_skb_free_~skb.offset, ldv_skb_free_~skb.base;
    ldv_skb_free_~skb.offset, ldv_skb_free_~skb.base := ldv_skb_free_#in~skb.offset, ldv_skb_free_#in~skb.base;
    ldv_set_remove_#in~e.offset, ldv_set_remove_#in~set.offset, ldv_set_remove_#in~e.base, ldv_set_remove_#in~set.base := ldv_skb_free_~skb.offset, ~LDV_SKBS.offset, ldv_skb_free_~skb.base, ~LDV_SKBS.base;
    havoc ldv_set_remove_~e.base, ldv_set_remove_~e.offset, ldv_set_remove_#t~mem559.base, ldv_set_remove_#t~mem559.offset, ldv_set_remove_#t~mem561.offset, ldv_set_remove_#t~mem561.base, ldv_set_remove_~set.base, ldv_set_remove_~set.offset, ldv_set_remove_~i~485, ldv_set_remove_~deleted_index~485;
    ldv_set_remove_~set.base, ldv_set_remove_~set.offset := ldv_set_remove_#in~set.base, ldv_set_remove_#in~set.offset;
    ldv_set_remove_~e.base, ldv_set_remove_~e.offset := ldv_set_remove_#in~e.base, ldv_set_remove_#in~e.offset;
    havoc ldv_set_remove_~i~485;
    havoc ldv_set_remove_~deleted_index~485;
    ldv_set_remove_~deleted_index~485 := -1;
    ldv_set_remove_~i~485 := 0;
    assume !(ldv_set_remove_~i~485 < ~last_index);
    assume ldv_set_remove_~deleted_index~485 == -1;
    dp83640_rxtstamp_#res := 1;
    main_#t~ret542 := dp83640_rxtstamp_#res;
    havoc main_#t~ret542;
    ~ldv_state_variable_1 := 1;
    assume !(~ldv_state_variable_1 == 2);
    goto loc1;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume main_~tmp___5~399 == 0;
    main_#t~switch550 := true;
    goto loc6;
  loc5_1:
    assume !(main_~tmp___5~399 == 0);
    main_#t~switch550 := false;
    goto loc6;
  loc6:
    goto loc6_0, loc6_1;
  loc6_0:
    assume !main_#t~switch550;
    assume main_~tmp___5~399 == 1;
    main_#t~switch550 := true;
    assume main_#t~switch550;
    assume ~ldv_state_variable_0 == 1;
    havoc dp83640_init_#res;
    havoc dp83640_init_~tmp~391, dp83640_init_#t~ret522;
    havoc dp83640_init_~tmp~391;
    phy_driver_register_#in~116.offset, phy_driver_register_#in~116.base := ~#dp83640_driver.offset, ~#dp83640_driver.base;
    havoc phy_driver_register_#res;
    dp83640_init_#t~ret522 := phy_driver_register_#res;
    assume dp83640_init_#t~ret522 <= 2147483647 && 0 <= dp83640_init_#t~ret522 + 2147483648;
    dp83640_init_~tmp~391 := dp83640_init_#t~ret522;
    havoc dp83640_init_#t~ret522;
    dp83640_init_#res := dp83640_init_~tmp~391;
    main_#t~ret551 := dp83640_init_#res;
    assume main_#t~ret551 <= 2147483647 && 0 <= main_#t~ret551 + 2147483648;
    ~ldv_retval_1 := main_#t~ret551;
    havoc main_#t~ret551;
    assume ~ldv_retval_1 == 0;
    ~ldv_state_variable_0 := 3;
    ~ldv_state_variable_1 := 1;
    havoc ldv_initialize_phy_driver_1_#t~ret523.offset, ldv_initialize_phy_driver_1_#t~ret523.base, ldv_initialize_phy_driver_1_~tmp~397.base, ldv_initialize_phy_driver_1_#t~ret524.base, ldv_initialize_phy_driver_1_#t~ret524.offset, ldv_initialize_phy_driver_1_~tmp___0~397.base, ldv_initialize_phy_driver_1_~tmp___0~397.offset, ldv_initialize_phy_driver_1_~tmp~397.offset;
    havoc ldv_initialize_phy_driver_1_~tmp~397.base, ldv_initialize_phy_driver_1_~tmp~397.offset;
    havoc ldv_initialize_phy_driver_1_~tmp___0~397.base, ldv_initialize_phy_driver_1_~tmp___0~397.offset;
    ldv_zalloc_#in~size := 2048;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~tmp~99.base, ldv_zalloc_~p~99.base, ldv_zalloc_~p~99.offset, ldv_zalloc_~size, ldv_zalloc_~tmp~99.offset, ldv_zalloc_#t~malloc94.base, ldv_zalloc_#t~malloc94.offset, ldv_zalloc_#t~nondet93, ldv_zalloc_~tmp___0~99;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~99.base, ldv_zalloc_~p~99.offset;
    havoc ldv_zalloc_~tmp~99.base, ldv_zalloc_~tmp~99.offset;
    havoc ldv_zalloc_~tmp___0~99;
    assume ldv_zalloc_#t~nondet93 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet93 + 2147483648;
    ldv_zalloc_~tmp___0~99 := ldv_zalloc_#t~nondet93;
    havoc ldv_zalloc_#t~nondet93;
    assume !(ldv_zalloc_~tmp___0~99 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_initialize_phy_driver_1_#t~ret523.offset, ldv_initialize_phy_driver_1_#t~ret523.base := ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    ldv_initialize_phy_driver_1_~tmp~397.base, ldv_initialize_phy_driver_1_~tmp~397.offset := ldv_initialize_phy_driver_1_#t~ret523.base, ldv_initialize_phy_driver_1_#t~ret523.offset;
    havoc ldv_initialize_phy_driver_1_#t~ret523.offset, ldv_initialize_phy_driver_1_#t~ret523.base;
    ~dp83640_driver_group0.offset, ~dp83640_driver_group0.base := ldv_initialize_phy_driver_1_~tmp~397.offset, ldv_initialize_phy_driver_1_~tmp~397.base;
    ldv_zalloc_#in~size := 232;
    havoc ldv_zalloc_#res.offset, ldv_zalloc_#res.base;
    havoc ldv_zalloc_~tmp~99.base, ldv_zalloc_~p~99.base, ldv_zalloc_~p~99.offset, ldv_zalloc_~size, ldv_zalloc_~tmp~99.offset, ldv_zalloc_#t~malloc94.base, ldv_zalloc_#t~malloc94.offset, ldv_zalloc_#t~nondet93, ldv_zalloc_~tmp___0~99;
    ldv_zalloc_~size := ldv_zalloc_#in~size;
    havoc ldv_zalloc_~p~99.base, ldv_zalloc_~p~99.offset;
    havoc ldv_zalloc_~tmp~99.base, ldv_zalloc_~tmp~99.offset;
    havoc ldv_zalloc_~tmp___0~99;
    assume ldv_zalloc_#t~nondet93 <= 2147483647 && 0 <= ldv_zalloc_#t~nondet93 + 2147483648;
    ldv_zalloc_~tmp___0~99 := ldv_zalloc_#t~nondet93;
    havoc ldv_zalloc_#t~nondet93;
    assume !(ldv_zalloc_~tmp___0~99 == 0);
    ldv_zalloc_#res.offset, ldv_zalloc_#res.base := 0, 0;
    ldv_initialize_phy_driver_1_#t~ret524.base, ldv_initialize_phy_driver_1_#t~ret524.offset := ldv_zalloc_#res.base, ldv_zalloc_#res.offset;
    ldv_initialize_phy_driver_1_~tmp___0~397.base, ldv_initialize_phy_driver_1_~tmp___0~397.offset := ldv_initialize_phy_driver_1_#t~ret524.base, ldv_initialize_phy_driver_1_#t~ret524.offset;
    havoc ldv_initialize_phy_driver_1_#t~ret524.base, ldv_initialize_phy_driver_1_#t~ret524.offset;
    ~dp83640_driver_group1.base, ~dp83640_driver_group1.offset := ldv_initialize_phy_driver_1_~tmp___0~397.base, ldv_initialize_phy_driver_1_~tmp___0~397.offset;
    assume ~ldv_retval_1 == 0;
    goto loc1;
  loc6_1:
    assume main_#t~switch550;
    assume ~ref_cnt == 0 && ~ldv_state_variable_0 == 3;
    havoc dp83640_free_clocks_#t~mem377.offset, dp83640_free_clocks_~next~273.offset, dp83640_free_clocks_#t~mem371.offset, dp83640_free_clocks_#t~mem377.base, dp83640_free_clocks_#t~ret373, dp83640_free_clocks_#t~mem378.base, dp83640_free_clocks_#t~mem376.base, dp83640_free_clocks_~this~273.base, dp83640_free_clocks_#t~nondet374.base, dp83640_free_clocks_#t~mem371.base, dp83640_free_clocks_#t~mem372.base, dp83640_free_clocks_#t~mem372.offset, dp83640_free_clocks_#t~mem378.offset, dp83640_free_clocks_~__mptr~273.base, dp83640_free_clocks_#t~nondet374.offset, dp83640_free_clocks_#t~mem376.offset, dp83640_free_clocks_~clock~273.offset, dp83640_free_clocks_~__mptr~273.offset, dp83640_free_clocks_~tmp~273, dp83640_free_clocks_~clock~273.base, dp83640_free_clocks_#t~ret375, dp83640_free_clocks_~this~273.offset, dp83640_free_clocks_~next~273.base;
    havoc dp83640_free_clocks_~clock~273.offset, dp83640_free_clocks_~clock~273.base;
    havoc dp83640_free_clocks_~this~273.base, dp83640_free_clocks_~this~273.offset;
    havoc dp83640_free_clocks_~next~273.offset, dp83640_free_clocks_~next~273.base;
    havoc dp83640_free_clocks_~__mptr~273.base, dp83640_free_clocks_~__mptr~273.offset;
    havoc dp83640_free_clocks_~tmp~273;
    mutex_lock_nested_#in~40.offset, mutex_lock_nested_#in~40.base, mutex_lock_nested_#in~41 := ~#phyter_clocks_lock.offset, ~#phyter_clocks_lock.base, 0;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := ~#phyter_clocks.base, 8, ~#phyter_clocks.offset;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    dp83640_free_clocks_#t~mem371.base, dp83640_free_clocks_#t~mem371.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    dp83640_free_clocks_~this~273.base, dp83640_free_clocks_~this~273.offset := dp83640_free_clocks_#t~mem371.base, dp83640_free_clocks_#t~mem371.offset;
    havoc dp83640_free_clocks_#t~mem371.base, dp83640_free_clocks_#t~mem371.offset;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := dp83640_free_clocks_~this~273.base, 8, dp83640_free_clocks_~this~273.offset;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    dp83640_free_clocks_#t~mem372.base, dp83640_free_clocks_#t~mem372.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    dp83640_free_clocks_~next~273.offset, dp83640_free_clocks_~next~273.base := dp83640_free_clocks_#t~mem372.offset, dp83640_free_clocks_#t~mem372.base;
    havoc dp83640_free_clocks_#t~mem372.base, dp83640_free_clocks_#t~mem372.offset;
    assume (dp83640_free_clocks_~this~273.base + dp83640_free_clocks_~this~273.offset == ~#phyter_clocks.base + ~#phyter_clocks.offset && 0 <= ~#phyter_clocks.base + ~#phyter_clocks.offset) && ~#phyter_clocks.base + ~#phyter_clocks.offset < 18446744073709551616;
    mutex_unlock_#in~42.base, mutex_unlock_#in~42.offset := ~#phyter_clocks_lock.base, ~#phyter_clocks_lock.offset;
    phy_driver_unregister_#in~115.offset, phy_driver_unregister_#in~115.base := ~#dp83640_driver.offset, ~#dp83640_driver.base;
    ~ldv_state_variable_0 := 2;
    havoc ldv_check_final_state_~tmp___7~512, ldv_check_final_state_#t~ret563;
    havoc ldv_check_final_state_~tmp___7~512;
    ldv_set_is_empty_#in~set.offset, ldv_set_is_empty_#in~set.base := ~LDV_SKBS.offset, ~LDV_SKBS.base;
    havoc ldv_set_is_empty_#res;
    havoc ldv_set_is_empty_~set.base, ldv_set_is_empty_~set.offset;
    ldv_set_is_empty_~set.base, ldv_set_is_empty_~set.offset := ldv_set_is_empty_#in~set.base, ldv_set_is_empty_#in~set.offset;
    assume !(~last_index == 0);
    ldv_set_is_empty_#res := 0;
    ldv_check_final_state_#t~ret563 := ldv_set_is_empty_#res;
    assume ldv_check_final_state_#t~ret563 <= 2147483647 && 0 <= ldv_check_final_state_#t~ret563 + 2147483648;
    ldv_check_final_state_~tmp___7~512 := ldv_check_final_state_#t~ret563;
    havoc ldv_check_final_state_#t~ret563;
    assume ldv_check_final_state_~tmp___7~512 == 0;
    goto loc7;
  loc7:
    assert false;
}


var ~#__this_module.base : int;

var v_rep#funAddr~uinput_write.base_1 : int;

var ~#__this_module.offset : int;

var v_rep#funAddr~uinput_release.base_1 : int;

var ~ldv_mutex_mutex_of_uinput_device : int;

var #memory_$Pointer$.base : [int][int]int;

var v_rep#funAddr~uinput_poll.base_1 : int;

var v_rep#funAddr~no_llseek.offset_1 : int;

var #NULL.offset : int;

var v_rep#funAddr~uinput_release.offset_1 : int;

var v_rep#funAddr~uinput_poll.offset_1 : int;

var v_rep#funAddr~uinput_open.offset_1 : int;

var #length : [int]int;

var v_rep#funAddr~uinput_read.offset_1 : int;

var v_rep#funAddr~uinput_write.offset_1 : int;

var v_rep#funAddr~uinput_ioctl.base_1 : int;

var ~ldv_mutex_mutex_of_device : int;

var v_rep#funAddr~uinput_ioctl.offset_1 : int;

var #NULL.base : int;

var v_rep#funAddr~uinput_compat_ioctl.base_1 : int;

var v_rep#funAddr~uinput_read.base_1 : int;

var ~#uinput_misc.offset : int;

var ~LDV_IN_INTERRUPT : int;

var v_rep#funAddr~uinput_open.base_1 : int;

var v_rep#funAddr~uinput_compat_ioctl.offset_1 : int;

var #valid : [int]int;

var ~#uinput_fops.base : int;

var #memory_int : [int][int]int;

var #memory_$Pointer$.offset : [int][int]int;

var ~ldv_mutex_lock : int;

var ~#uinput_fops.offset : int;

var v_rep#funAddr~no_llseek.base_1 : int;

var ~#uinput_misc.base : int;

procedure ULTIMATE.start() returns ()
modifies ~#__this_module.base, v_rep#funAddr~uinput_write.base_1, ~#__this_module.offset, v_rep#funAddr~uinput_release.base_1, ~ldv_mutex_mutex_of_uinput_device, #memory_$Pointer$.base, v_rep#funAddr~uinput_poll.base_1, v_rep#funAddr~no_llseek.offset_1, #NULL.offset, v_rep#funAddr~uinput_release.offset_1, v_rep#funAddr~uinput_poll.offset_1, v_rep#funAddr~uinput_open.offset_1, #length, v_rep#funAddr~uinput_read.offset_1, v_rep#funAddr~uinput_write.offset_1, v_rep#funAddr~uinput_ioctl.base_1, ~ldv_mutex_mutex_of_device, v_rep#funAddr~uinput_ioctl.offset_1, #NULL.base, v_rep#funAddr~uinput_compat_ioctl.base_1, v_rep#funAddr~uinput_read.base_1, ~#uinput_misc.offset, ~LDV_IN_INTERRUPT, v_rep#funAddr~uinput_open.base_1, v_rep#funAddr~uinput_compat_ioctl.offset_1, #valid, ~#uinput_fops.base, #memory_int, #memory_$Pointer$.offset, ~ldv_mutex_lock, ~#uinput_fops.offset, v_rep#funAddr~no_llseek.base_1, ~#uinput_misc.base;
{
    var ldv_mutex_lock_interruptible_8_#t~ret646 : int;
    var kzalloc_#in~size : int;
    var uinput_setup_device_#t~ret264.base : int;
    var uinput_open_#res : int;
    var uinput_open_#t~ret231.base : int;
    var uinput_open_#t~ret233.base : int;
    var spinlock_check_~lock.base : int;
    var read~$Pointer$_#value.offset : int;
    var uinput_setup_device_~tmp___2~253.offset : int;
    var main_#t~ret642 : int;
    var uinput_open_~#__key___1~235.offset : int;
    var uinput_write_~file.offset : int;
    var uinput_setup_device_~dev~253.base : int;
    var write~int_#ptr.base : int;
    var nonseekable_open_#res : int;
    var uinput_setup_device_#t~mem269 : int;
    var uinput_setup_device_#t~mem284 : int;
    var __init_waitqueue_head_#in~39.offset : int;
    var main_~var_group2~432.offset : int;
    var uinput_setup_device_~tmp~253.base : int;
    var __raw_spin_lock_init_#in~29.offset : int;
    var write~int_old_#memory_$Pointer$.offset : [int][int]int;
    var uinput_setup_device_~buffer.base : int;
    var spinlock_check_#in~lock.offset : int;
    var ldv_mutex_lock_interruptible_mutex_of_uinput_device_~lock.offset : int;
    var nonseekable_open_#in~61.base : int;
    var #Ultimate.alloc_old_#length : [int]int;
    var write~$Pointer$_#ptr.base : int;
    var write~$Pointer$_#ptr.offset : int;
    var write~int_#sizeOfWrittenType : int;
    var nonseekable_open_#in~61.offset : int;
    var main_#t~ret638 : int;
    var uinput_setup_device_#t~mem270.base : int;
    var uinput_setup_device_#res : int;
    var main_~var_uinput_write_20_p1~432.base : int;
    var write~int_#value : int;
    var uinput_setup_device_#t~mem263.base : int;
    var main_~tmp___1~432 : int;
    var uinput_setup_device_~tmp___1~253 : int;
    var uinput_write_~udev~283.base : int;
    var uinput_setup_device_#t~mem261.base : int;
    var __raw_spin_lock_init_#in~29.base : int;
    var __raw_spin_lock_init_#in~30.offset : int;
    var uinput_open_~newdev~235.offset : int;
    var uinput_setup_device_~tmp___0~253 : int;
    var #Ultimate.alloc_old_#valid : [int]int;
    var uinput_open_#t~ret231.offset : int;
    var main_~var_uinput_read_23_p1~432.offset : int;
    var misc_register_#in~93.base : int;
    var ldv_mutex_unlock_9_~ldv_func_arg1.base : int;
    var write~int_#ptr.offset : int;
    var main_#t~nondet634 : int;
    var misc_register_#in~93.offset : int;
    var uinput_setup_device_#t~mem283 : int;
    var uinput_setup_device_~udev.offset : int;
    var uinput_setup_device_#t~mem268 : int;
    var uinput_setup_device_#in~buffer.base : int;
    var uinput_setup_device_#t~ret271.base : int;
    var uinput_write_~ppos.base : int;
    var uinput_setup_device_~user_dev~253.base : int;
    var ldv_mutex_lock_interruptible_8_#t~ret647 : int;
    var kmalloc_~size : int;
    var uinput_setup_device_~tmp~253.offset : int;
    var write~$Pointer$_old_#memory_$Pointer$.base : [int][int]int;
    var #Ultimate.alloc_~size : int;
    var main_~var_uinput_write_20_p3~432.offset : int;
    var ldv_mutex_lock_interruptible_8_~tmp~457 : int;
    var main_~var_uinput_read_23_p2~432 : int;
    var uinput_setup_device_~dev~253.offset : int;
    var kzalloc_#res.offset : int;
    var uinput_open_~newdev~235.base : int;
    var main_~var_uinput_ioctl_31_p2~432 : int;
    var uinput_open_#t~ret239 : int;
    var ldv_mutex_lock_interruptible_mutex_of_uinput_device_#t~nondet652 : int;
    var uinput_init_#res : int;
    var ldv_mutex_lock_interruptible_8_~ldv_func_arg1.base : int;
    var main_~var_uinput_read_23_p3~432.offset : int;
    var read~int_#ptr.offset : int;
    var main_#t~ret639 : int;
    var main_~ldv_s_uinput_fops_file_operations~432 : int;
    var uinput_open_#t~ret233.offset : int;
    var uinput_setup_device_#in~count : int;
    var uinput_setup_device_~tmp___6~253 : int;
    var main_#t~ret640 : int;
    var misc_register_#res : int;
    var uinput_open_~file.base : int;
    var uinput_write_#t~ret303 : int;
    var uinput_write_~udev~283.offset : int;
    var uinput_init_#t~ret630 : int;
    var uinput_setup_device_#t~ret288 : int;
    var uinput_write_~buffer.base : int;
    var uinput_setup_device_#t~mem282 : int;
    var uinput_setup_device_#t~ret265 : int;
    var uinput_open_~inode.base : int;
    var uinput_open_#t~nondet235.base : int;
    var kmalloc_#t~ret91.offset : int;
    var uinput_open_#t~nondet236.base : int;
    var kmalloc_~flags : int;
    var #Ultimate.alloc_#res.offset : int;
    var kzalloc_#res.base : int;
    var mutex_lock_interruptible_#res : int;
    var __kmalloc_#res.offset : int;
    var __mutex_init_#in~21.offset : int;
    var main_~res_uinput_open_15~432 : int;
    var main_#t~ret636 : int;
    var uinput_setup_device_#in~buffer.offset : int;
    var uinput_write_#t~mem300.base : int;
    var uinput_write_~retval~283 : int;
    var uinput_setup_device_#in~udev.offset : int;
    var kmalloc_#in~flags : int;
    var read~$Pointer$_#ptr.offset : int;
    var uinput_setup_device_~udev.base : int;
    var uinput_setup_device_~retval~253 : int;
    var kzalloc_~flags : int;
    var uinput_setup_device_#t~mem270.offset : int;
    var __mutex_init_#in~20.offset : int;
    var uinput_open_~#__key~235.base : int;
    var spinlock_check_#res.base : int;
    var uinput_setup_device_#t~mem279 : int;
    var uinput_open_#t~nondet236.offset : int;
    var ldv_mutex_lock_interruptible_mutex_of_uinput_device_#in~lock.base : int;
    var ldv_mutex_unlock_mutex_of_uinput_device_~lock.base : int;
    var uinput_write_~file.base : int;
    var read~$Pointer$_#value.base : int;
    var uinput_write_#t~ret304 : int;
    var uinput_setup_device_#t~ret264.offset : int;
    var __kmalloc_#in~89 : int;
    var uinput_setup_device_#t~ret266 : int;
    var uinput_setup_device_#t~ret289 : int;
    var main_#t~ret641 : int;
    var ldv_mutex_unlock_9_~ldv_func_arg1.offset : int;
    var uinput_setup_device_#t~mem281 : int;
    var main_~tmp___0~432 : int;
    var uinput_open_~#__key___0~235.offset : int;
    var __mutex_init_#in~21.base : int;
    var uinput_write_#in~ppos.offset : int;
    var uinput_write_#in~file.offset : int;
    var __init_waitqueue_head_#in~37.offset : int;
    var uinput_write_#t~mem300.offset : int;
    var uinput_open_#in~file.offset : int;
    var uinput_open_~inode.offset : int;
    var ldv_mutex_lock_interruptible_8_~tmp___0~457 : int;
    var main_#t~ret637 : int;
    var kmalloc_~tmp___2~98.base : int;
    var uinput_write_#in~ppos.base : int;
    var uinput_write_#in~buffer.offset : int;
    var __raw_spin_lock_init_#in~31.base : int;
    var write~$Pointer$_#value.base : int;
    var uinput_setup_device_#t~mem261.offset : int;
    var read~$Pointer$_#ptr.base : int;
    var ldv_mutex_lock_interruptible_mutex_of_uinput_device_~nondetermined~475 : int;
    var uinput_open_~file.offset : int;
    var main_~var_uinput_poll_24_p1~432.base : int;
    var uinput_open_~tmp~235.offset : int;
    var uinput_open_~#__key~235.offset : int;
    var read~int_#value : int;
    var main_~var_group2~432.base : int;
    var main_~var_uinput_write_20_p2~432 : int;
    var uinput_write_~buffer.offset : int;
    var uinput_write_#t~ret301 : int;
    var __raw_spin_lock_init_#in~31.offset : int;
    var uinput_setup_device_#t~ret286 : int;
    var uinput_setup_device_#t~mem263.offset : int;
    var uinput_setup_device_#t~ret271.offset : int;
    var uinput_setup_device_~tmp___2~253.base : int;
    var uinput_write_~count : int;
    var nonseekable_open_#in~60.offset : int;
    var uinput_setup_device_~nslot~253 : int;
    var uinput_write_#in~file.base : int;
    var ldv_mutex_unlock_9_#in~ldv_func_arg1.base : int;
    var uinput_setup_device_~tmp___4~253 : int;
    var ldv_mutex_unlock_mutex_of_uinput_device_~lock.offset : int;
    var kzalloc_~size : int;
    var ULTIMATE.dealloc_old_#valid : [int]int;
    var uinput_setup_device_~buffer.offset : int;
    var read~int_#ptr.base : int;
    var __init_waitqueue_head_#in~38.offset : int;
    var uinput_setup_device_#t~mem277 : int;
    var uinput_setup_device_#t~ret290 : int;
    var __init_waitqueue_head_#in~37.base : int;
    var __init_waitqueue_head_#in~39.base : int;
    var main_~var_uinput_ioctl_31_p1~432 : int;
    var uinput_setup_device_#t~mem273.base : int;
    var uinput_setup_device_~user_dev~253.offset : int;
    var ULTIMATE.dealloc_~addr.offset : int;
    var ldv_mutex_lock_interruptible_8_#res : int;
    var uinput_open_#t~nondet232.offset : int;
    var uinput_setup_device_#t~ret287 : int;
    var uinput_init_~tmp~423 : int;
    var write~$Pointer$_#value.offset : int;
    var __mutex_init_#in~22.base : int;
    var ldv_mutex_unlock_mutex_of_uinput_device_#in~lock.offset : int;
    var uinput_open_~#__key___2~235.base : int;
    var spinlock_check_#res.offset : int;
    var nonseekable_open_#in~60.base : int;
    var uinput_write_#t~mem302 : int;
    var uinput_open_#in~inode.offset : int;
    var uinput_write_#in~count : int;
    var ULTIMATE.init_#t~nondet629.base : int;
    var read~int_#sizeOfReadType : int;
    var uinput_open_#t~nondet234.offset : int;
    var uinput_open_~#__key___1~235.base : int;
    var kmalloc_#in~size : int;
    var ldv_mutex_lock_interruptible_mutex_of_uinput_device_#res : int;
    var main_~var_uinput_write_20_p1~432.offset : int;
    var uinput_setup_device_#t~mem273.offset : int;
    var uinput_open_~#__key___0~235.base : int;
    var spinlock_check_~lock.offset : int;
    var mutex_lock_interruptible_#in~24.offset : int;
    var uinput_setup_device_#t~ret291 : int;
    var write~$Pointer$_old_#memory_$Pointer$.offset : [int][int]int;
    var main_#res : int;
    var ldv_mutex_unlock_9_#in~ldv_func_arg1.offset : int;
    var ldv_mutex_lock_interruptible_8_#in~ldv_func_arg1.offset : int;
    var kmalloc_#res.offset : int;
    var main_~var_uinput_write_20_p3~432.base : int;
    var main_~res_uinput_write_20~432 : int;
    var uinput_setup_device_~tmp___5~253 : int;
    var write~$Pointer$_#sizeOfWrittenType : int;
    var uinput_open_#in~file.base : int;
    var kzalloc_#in~flags : int;
    var __kmalloc_#res.base : int;
    var main_~var_uinput_compat_ioctl_32_p1~432 : int;
    var uinput_setup_device_~i~253 : int;
    var ULTIMATE.init_#t~nondet629.offset : int;
    var main_#t~switch635 : bool;
    var uinput_open_#t~nondet232.base : int;
    var kzalloc_#t~ret92.base : int;
    var write~$Pointer$_old_#memory_int : [int][int]int;
    var ULTIMATE.dealloc_~addr.base : int;
    var uinput_open_#t~nondet234.base : int;
    var uinput_write_~tmp~283 : int;
    var uinput_write_#res : int;
    var #Ultimate.alloc_#res.base : int;
    var uinput_open_~tmp~235.base : int;
    var main_~var_group1~432.offset : int;
    var main_~res_uinput_read_23~432 : int;
    var uinput_write_#in~buffer.base : int;
    var ldv_mutex_lock_interruptible_mutex_of_uinput_device_#in~lock.offset : int;
    var write~int_old_#memory_int : [int][int]int;
    var ldv_mutex_lock_interruptible_8_#in~ldv_func_arg1.base : int;
    var kzalloc_~tmp~100.offset : int;
    var uinput_open_#in~inode.base : int;
    var spinlock_check_#in~lock.base : int;
    var __kmalloc_#in~90 : int;
    var kzalloc_~tmp~100.base : int;
    var __raw_spin_lock_init_#in~30.base : int;
    var main_~tmp~432 : int;
    var uinput_setup_device_#t~mem275 : int;
    var mutex_lock_interruptible_#in~24.base : int;
    var ldv_mutex_unlock_mutex_of_uinput_device_#in~lock.base : int;
    var main_~var_uinput_read_23_p3~432.base : int;
    var uinput_setup_device_~tmp___3~253 : int;
    var read~$Pointer$_#sizeOfReadType : int;
    var uinput_write_~tmp___0~283 : int;
    var ldv_mutex_lock_interruptible_8_~ldv_func_arg1.offset : int;
    var __mutex_init_#in~20.base : int;
    var uinput_setup_device_~count : int;
    var ldv_mutex_lock_interruptible_8_~ldv_func_res~457 : int;
    var main_~var_group1~432.base : int;
    var kmalloc_#res.base : int;
    var uinput_open_#t~nondet235.offset : int;
    var uinput_setup_device_#t~ret262 : int;
    var __mutex_init_#in~22.offset : int;
    var main_~var_uinput_compat_ioctl_32_p2~432 : int;
    var uinput_setup_device_#t~mem285 : int;
    var uinput_open_~#__key___2~235.offset : int;
    var main_~var_uinput_poll_24_p1~432.offset : int;
    var ldv_check_return_value_#in~632 : int;
    var uinput_write_~ppos.offset : int;
    var write~int_old_#memory_$Pointer$.base : [int][int]int;
    var main_~var_uinput_read_23_p1~432.base : int;
    var kmalloc_~tmp___2~98.offset : int;
    var kzalloc_#t~ret92.offset : int;
    var main_#t~ret633 : int;
    var uinput_setup_device_#in~udev.base : int;
    var kmalloc_#t~ret91.base : int;
    var main_#t~nondet643 : int;
    var ldv_mutex_lock_interruptible_mutex_of_uinput_device_~lock.base : int;
    var __init_waitqueue_head_#in~38.base : int;

  loc0:
    havoc ULTIMATE.init_#t~nondet629.base, ULTIMATE.init_#t~nondet629.offset;
    #NULL.offset, #NULL.base := 0, 0;
    #valid := #valid[0 := 0];
    ~LDV_IN_INTERRUPT := 0;
    ~ldv_mutex_lock := 0;
    ~ldv_mutex_mutex_of_device := 0;
    ~ldv_mutex_mutex_of_uinput_device := 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 216;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#uinput_fops.base, ~#uinput_fops.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#__this_module.base, ~#uinput_fops.offset, 8, ~#__this_module.offset, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~no_llseek.base_1, ~#uinput_fops.offset + 8, 8, v_rep#funAddr~no_llseek.offset_1, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~uinput_read.base_1, ~#uinput_fops.offset + 16, 8, v_rep#funAddr~uinput_read.offset_1, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~uinput_write.base_1, ~#uinput_fops.offset + 24, 8, v_rep#funAddr~uinput_write.offset_1, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 32, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 40, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 48, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~uinput_poll.base_1, ~#uinput_fops.offset + 56, 8, v_rep#funAddr~uinput_poll.offset_1, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~uinput_ioctl.base_1, ~#uinput_fops.offset + 64, 8, v_rep#funAddr~uinput_ioctl.offset_1, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~uinput_compat_ioctl.base_1, ~#uinput_fops.offset + 72, 8, v_rep#funAddr~uinput_compat_ioctl.offset_1, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 80, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~uinput_open.base_1, ~#uinput_fops.offset + 88, 8, v_rep#funAddr~uinput_open.offset_1, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 96, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~uinput_release.base_1, ~#uinput_fops.offset + 104, 8, v_rep#funAddr~uinput_release.offset_1, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 112, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 120, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 128, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 136, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 144, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 152, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 160, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 168, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 176, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 184, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 192, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 200, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_fops.offset + 208, 8, 0, ~#uinput_fops.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 62;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#uinput_misc.offset, ~#uinput_misc.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#uinput_misc.base, 223, ~#uinput_misc.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 7;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet629.base, ULTIMATE.init_#t~nondet629.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet629.base := #memory_int[ULTIMATE.init_#t~nondet629.base][ULTIMATE.init_#t~nondet629.offset := 117]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet629.base := #memory_int[ULTIMATE.init_#t~nondet629.base][ULTIMATE.init_#t~nondet629.offset + 1 := 105]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet629.base := #memory_int[ULTIMATE.init_#t~nondet629.base][ULTIMATE.init_#t~nondet629.offset + 2 := 110]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet629.base := #memory_int[ULTIMATE.init_#t~nondet629.base][ULTIMATE.init_#t~nondet629.offset + 3 := 112]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet629.base := #memory_int[ULTIMATE.init_#t~nondet629.base][ULTIMATE.init_#t~nondet629.offset + 4 := 117]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet629.base := #memory_int[ULTIMATE.init_#t~nondet629.base][ULTIMATE.init_#t~nondet629.offset + 5 := 116]];
    #memory_int := #memory_int[ULTIMATE.init_#t~nondet629.base := #memory_int[ULTIMATE.init_#t~nondet629.base][ULTIMATE.init_#t~nondet629.offset + 6 := 0]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet629.base, ~#uinput_misc.offset + 4, 8, ULTIMATE.init_#t~nondet629.offset, ~#uinput_misc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#uinput_fops.base, ~#uinput_misc.offset + 12, 8, ~#uinput_fops.offset, ~#uinput_misc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_misc.offset + 20, 8, 0, ~#uinput_misc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_misc.offset + 28, 8, 0, ~#uinput_misc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_misc.offset + 36, 8, 0, ~#uinput_misc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_misc.offset + 44, 8, 0, ~#uinput_misc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#uinput_misc.offset + 52, 8, 0, ~#uinput_misc.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#uinput_misc.base, 0, ~#uinput_misc.offset + 60;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc ULTIMATE.init_#t~nondet629.base, ULTIMATE.init_#t~nondet629.offset;
    havoc main_#res;
    havoc main_~var_uinput_ioctl_31_p1~432, main_#t~ret640, main_~var_group2~432.base, main_~var_uinput_write_20_p3~432.base, main_~res_uinput_write_20~432, main_~var_uinput_read_23_p3~432.base, main_~var_uinput_write_20_p2~432, main_~var_uinput_compat_ioctl_32_p1~432, main_~var_uinput_read_23_p1~432.offset, main_#t~switch635, main_#t~ret641, main_#t~ret642, main_#t~nondet634, main_~tmp___0~432, main_~var_group1~432.base, main_~var_uinput_compat_ioctl_32_p2~432, main_~var_group2~432.offset, main_~var_uinput_poll_24_p1~432.offset, main_~var_group1~432.offset, main_~res_uinput_read_23~432, main_~var_uinput_write_20_p3~432.offset, main_~res_uinput_open_15~432, main_#t~ret636, main_~var_uinput_read_23_p2~432, main_#t~ret637, main_~var_uinput_read_23_p1~432.base, main_~var_uinput_ioctl_31_p2~432, main_#t~ret633, main_~var_uinput_write_20_p1~432.offset, main_~var_uinput_read_23_p3~432.offset, main_#t~ret638, main_#t~ret639, main_~ldv_s_uinput_fops_file_operations~432, main_~var_uinput_write_20_p1~432.base, main_~tmp___1~432, main_~var_uinput_poll_24_p1~432.base, main_#t~nondet643, main_~tmp~432;
    havoc main_~var_group1~432.offset, main_~var_group1~432.base;
    havoc main_~var_group2~432.offset, main_~var_group2~432.base;
    havoc main_~res_uinput_open_15~432;
    havoc main_~var_uinput_read_23_p1~432.base, main_~var_uinput_read_23_p1~432.offset;
    havoc main_~var_uinput_read_23_p2~432;
    havoc main_~var_uinput_read_23_p3~432.base, main_~var_uinput_read_23_p3~432.offset;
    havoc main_~res_uinput_read_23~432;
    havoc main_~var_uinput_write_20_p1~432.base, main_~var_uinput_write_20_p1~432.offset;
    havoc main_~var_uinput_write_20_p2~432;
    havoc main_~var_uinput_write_20_p3~432.base, main_~var_uinput_write_20_p3~432.offset;
    havoc main_~res_uinput_write_20~432;
    havoc main_~var_uinput_poll_24_p1~432.offset, main_~var_uinput_poll_24_p1~432.base;
    havoc main_~var_uinput_ioctl_31_p1~432;
    havoc main_~var_uinput_ioctl_31_p2~432;
    havoc main_~var_uinput_compat_ioctl_32_p1~432;
    havoc main_~var_uinput_compat_ioctl_32_p2~432;
    havoc main_~ldv_s_uinput_fops_file_operations~432;
    havoc main_~tmp~432;
    havoc main_~tmp___0~432;
    havoc main_~tmp___1~432;
    main_~ldv_s_uinput_fops_file_operations~432 := 0;
    ~LDV_IN_INTERRUPT := 1;
    ~ldv_mutex_lock := 1;
    ~ldv_mutex_mutex_of_device := 1;
    ~ldv_mutex_mutex_of_uinput_device := 1;
    havoc uinput_init_#res;
    havoc uinput_init_~tmp~423, uinput_init_#t~ret630;
    havoc uinput_init_~tmp~423;
    misc_register_#in~93.offset, misc_register_#in~93.base := ~#uinput_misc.offset, ~#uinput_misc.base;
    havoc misc_register_#res;
    uinput_init_#t~ret630 := misc_register_#res;
    assume 0 <= uinput_init_#t~ret630 + 2147483648 && uinput_init_#t~ret630 <= 2147483647;
    uinput_init_~tmp~423 := uinput_init_#t~ret630;
    havoc uinput_init_#t~ret630;
    uinput_init_#res := uinput_init_~tmp~423;
    main_#t~ret633 := uinput_init_#res;
    assume main_#t~ret633 <= 2147483647 && 0 <= main_#t~ret633 + 2147483648;
    main_~tmp~432 := main_#t~ret633;
    havoc main_#t~ret633;
    assume main_~tmp~432 == 0;
    goto loc1;
  loc1:
    assume main_#t~nondet643 <= 2147483647 && 0 <= main_#t~nondet643 + 2147483648;
    main_~tmp___1~432 := main_#t~nondet643;
    havoc main_#t~nondet643;
    goto loc2;
  loc2:
    goto loc2_0, loc2_1;
  loc2_0:
    assume !(main_~tmp___1~432 == 0);
    goto loc3;
  loc2_1:
    assume !(main_~ldv_s_uinput_fops_file_operations~432 == 0);
    goto loc3;
  loc3:
    assume main_#t~nondet634 <= 2147483647 && 0 <= main_#t~nondet634 + 2147483648;
    main_~tmp___0~432 := main_#t~nondet634;
    havoc main_#t~nondet634;
    goto loc4;
  loc4:
    goto loc4_0, loc4_1;
  loc4_0:
    assume main_~tmp___0~432 == 0;
    main_#t~switch635 := true;
    goto loc5;
  loc4_1:
    assume !(main_~tmp___0~432 == 0);
    main_#t~switch635 := false;
    goto loc5;
  loc5:
    goto loc5_0, loc5_1;
  loc5_0:
    assume !main_#t~switch635;
    assume !(main_~tmp___0~432 == 1) && !main_#t~switch635;
    main_#t~switch635 := false;
    assume !main_#t~switch635;
    assume main_~tmp___0~432 == 2;
    main_#t~switch635 := true;
    assume main_#t~switch635;
    assume main_~ldv_s_uinput_fops_file_operations~432 == 2;
    uinput_write_#in~buffer.base, uinput_write_#in~file.base, uinput_write_#in~count, uinput_write_#in~ppos.offset, uinput_write_#in~file.offset, uinput_write_#in~ppos.base, uinput_write_#in~buffer.offset := main_~var_uinput_write_20_p1~432.base, main_~var_group2~432.base, main_~var_uinput_write_20_p2~432, main_~var_uinput_write_20_p3~432.offset, main_~var_group2~432.offset, main_~var_uinput_write_20_p3~432.base, main_~var_uinput_write_20_p1~432.offset;
    havoc uinput_write_#res;
    havoc uinput_write_#t~mem300.offset, uinput_write_~file.base, uinput_write_#t~mem302, uinput_write_~buffer.offset, uinput_write_~ppos.offset, uinput_write_#t~ret304, uinput_write_#t~ret303, uinput_write_~udev~283.offset, uinput_write_#t~ret301, uinput_write_#t~mem300.base, uinput_write_~retval~283, uinput_write_~buffer.base, uinput_write_~tmp___0~283, uinput_write_~file.offset, uinput_write_~count, uinput_write_~tmp~283, uinput_write_~ppos.base, uinput_write_~udev~283.base;
    uinput_write_~file.offset, uinput_write_~file.base := uinput_write_#in~file.offset, uinput_write_#in~file.base;
    uinput_write_~buffer.offset, uinput_write_~buffer.base := uinput_write_#in~buffer.offset, uinput_write_#in~buffer.base;
    uinput_write_~count := uinput_write_#in~count;
    uinput_write_~ppos.offset, uinput_write_~ppos.base := uinput_write_#in~ppos.offset, uinput_write_#in~ppos.base;
    havoc uinput_write_~udev~283.offset, uinput_write_~udev~283.base;
    havoc uinput_write_~retval~283;
    havoc uinput_write_~tmp~283;
    havoc uinput_write_~tmp___0~283;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := uinput_write_~file.base, 8, uinput_write_~file.offset + 292;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    uinput_write_#t~mem300.offset, uinput_write_#t~mem300.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    uinput_write_~udev~283.offset, uinput_write_~udev~283.base := uinput_write_#t~mem300.offset, uinput_write_#t~mem300.base;
    havoc uinput_write_#t~mem300.offset, uinput_write_#t~mem300.base;
    assume uinput_write_~count < -4294967296 && !(uinput_write_~count % 4294967296 == 0);
    ldv_mutex_lock_interruptible_8_#in~ldv_func_arg1.base, ldv_mutex_lock_interruptible_8_#in~ldv_func_arg1.offset := uinput_write_~udev~283.base, uinput_write_~udev~283.offset + 8;
    havoc ldv_mutex_lock_interruptible_8_#res;
    havoc ldv_mutex_lock_interruptible_8_#t~ret646, ldv_mutex_lock_interruptible_8_~ldv_func_arg1.offset, ldv_mutex_lock_interruptible_8_~ldv_func_arg1.base, ldv_mutex_lock_interruptible_8_~ldv_func_res~457, ldv_mutex_lock_interruptible_8_~tmp~457, ldv_mutex_lock_interruptible_8_~tmp___0~457, ldv_mutex_lock_interruptible_8_#t~ret647;
    ldv_mutex_lock_interruptible_8_~ldv_func_arg1.offset, ldv_mutex_lock_interruptible_8_~ldv_func_arg1.base := ldv_mutex_lock_interruptible_8_#in~ldv_func_arg1.offset, ldv_mutex_lock_interruptible_8_#in~ldv_func_arg1.base;
    havoc ldv_mutex_lock_interruptible_8_~ldv_func_res~457;
    havoc ldv_mutex_lock_interruptible_8_~tmp~457;
    havoc ldv_mutex_lock_interruptible_8_~tmp___0~457;
    mutex_lock_interruptible_#in~24.offset, mutex_lock_interruptible_#in~24.base := ldv_mutex_lock_interruptible_8_~ldv_func_arg1.offset, ldv_mutex_lock_interruptible_8_~ldv_func_arg1.base;
    havoc mutex_lock_interruptible_#res;
    ldv_mutex_lock_interruptible_8_#t~ret646 := mutex_lock_interruptible_#res;
    assume 0 <= ldv_mutex_lock_interruptible_8_#t~ret646 + 2147483648 && ldv_mutex_lock_interruptible_8_#t~ret646 <= 2147483647;
    ldv_mutex_lock_interruptible_8_~tmp~457 := ldv_mutex_lock_interruptible_8_#t~ret646;
    havoc ldv_mutex_lock_interruptible_8_#t~ret646;
    ldv_mutex_lock_interruptible_8_~ldv_func_res~457 := ldv_mutex_lock_interruptible_8_~tmp~457;
    ldv_mutex_lock_interruptible_mutex_of_uinput_device_#in~lock.base, ldv_mutex_lock_interruptible_mutex_of_uinput_device_#in~lock.offset := ldv_mutex_lock_interruptible_8_~ldv_func_arg1.base, ldv_mutex_lock_interruptible_8_~ldv_func_arg1.offset;
    havoc ldv_mutex_lock_interruptible_mutex_of_uinput_device_#res;
    havoc ldv_mutex_lock_interruptible_mutex_of_uinput_device_~lock.offset, ldv_mutex_lock_interruptible_mutex_of_uinput_device_~nondetermined~475, ldv_mutex_lock_interruptible_mutex_of_uinput_device_#t~nondet652, ldv_mutex_lock_interruptible_mutex_of_uinput_device_~lock.base;
    ldv_mutex_lock_interruptible_mutex_of_uinput_device_~lock.offset, ldv_mutex_lock_interruptible_mutex_of_uinput_device_~lock.base := ldv_mutex_lock_interruptible_mutex_of_uinput_device_#in~lock.offset, ldv_mutex_lock_interruptible_mutex_of_uinput_device_#in~lock.base;
    havoc ldv_mutex_lock_interruptible_mutex_of_uinput_device_~nondetermined~475;
    assume ~ldv_mutex_mutex_of_uinput_device == 1;
    assume ldv_mutex_lock_interruptible_mutex_of_uinput_device_#t~nondet652 <= 2147483647 && 0 <= ldv_mutex_lock_interruptible_mutex_of_uinput_device_#t~nondet652 + 2147483648;
    ldv_mutex_lock_interruptible_mutex_of_uinput_device_~nondetermined~475 := ldv_mutex_lock_interruptible_mutex_of_uinput_device_#t~nondet652;
    havoc ldv_mutex_lock_interruptible_mutex_of_uinput_device_#t~nondet652;
    assume ldv_mutex_lock_interruptible_mutex_of_uinput_device_~nondetermined~475 == 0;
    ldv_mutex_lock_interruptible_mutex_of_uinput_device_#res := -4;
    ldv_mutex_lock_interruptible_8_#t~ret647 := ldv_mutex_lock_interruptible_mutex_of_uinput_device_#res;
    assume ldv_mutex_lock_interruptible_8_#t~ret647 <= 2147483647 && 0 <= ldv_mutex_lock_interruptible_8_#t~ret647 + 2147483648;
    ldv_mutex_lock_interruptible_8_~tmp___0~457 := ldv_mutex_lock_interruptible_8_#t~ret647;
    havoc ldv_mutex_lock_interruptible_8_#t~ret647;
    ldv_mutex_lock_interruptible_8_#res := ldv_mutex_lock_interruptible_8_~tmp___0~457;
    uinput_write_#t~ret301 := ldv_mutex_lock_interruptible_8_#res;
    assume uinput_write_#t~ret301 <= 2147483647 && 0 <= uinput_write_#t~ret301 + 2147483648;
    uinput_write_~retval~283 := uinput_write_#t~ret301;
    havoc uinput_write_#t~ret301;
    assume uinput_write_~retval~283 == 0;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := uinput_write_~udev~283.base, uinput_write_~udev~283.offset + 164, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    uinput_write_#t~mem302 := read~int_#value;
    assume (!(uinput_write_#t~mem302 - 4294967296 == 2) && uinput_write_#t~mem302 < 4294967296 + 4294967296) && 4294967296 <= uinput_write_#t~mem302;
    havoc uinput_write_#t~mem302;
    uinput_setup_device_#in~udev.base, uinput_setup_device_#in~buffer.offset, uinput_setup_device_#in~count, uinput_setup_device_#in~buffer.base, uinput_setup_device_#in~udev.offset := uinput_write_~udev~283.base, uinput_write_~buffer.offset, uinput_write_~count, uinput_write_~buffer.base, uinput_write_~udev~283.offset;
    havoc uinput_setup_device_#res;
    havoc uinput_setup_device_#t~ret264.base, uinput_setup_device_~tmp___5~253, uinput_setup_device_~i~253, uinput_setup_device_#t~ret288, uinput_setup_device_~tmp___2~253.offset, uinput_setup_device_#t~mem282, uinput_setup_device_#t~ret286, uinput_setup_device_~dev~253.base, uinput_setup_device_#t~mem263.offset, uinput_setup_device_#t~ret265, uinput_setup_device_#t~ret271.offset, uinput_setup_device_~tmp___2~253.base, uinput_setup_device_#t~mem269, uinput_setup_device_#t~mem284, uinput_setup_device_~tmp~253.base, uinput_setup_device_~nslot~253, uinput_setup_device_~buffer.base, uinput_setup_device_~tmp___4~253, uinput_setup_device_~udev.base, uinput_setup_device_~retval~253, uinput_setup_device_#t~mem270.offset, uinput_setup_device_~buffer.offset, uinput_setup_device_#t~mem270.base, uinput_setup_device_#t~mem277, uinput_setup_device_#t~mem263.base, uinput_setup_device_#t~mem279, uinput_setup_device_#t~ret290, uinput_setup_device_~tmp___1~253, uinput_setup_device_#t~mem261.base, uinput_setup_device_#t~mem275, uinput_setup_device_~tmp___0~253, uinput_setup_device_#t~mem273.base, uinput_setup_device_#t~ret264.offset, uinput_setup_device_~tmp___3~253, uinput_setup_device_#t~ret266, uinput_setup_device_#t~ret289, uinput_setup_device_~user_dev~253.offset, uinput_setup_device_#t~mem281, uinput_setup_device_~count, uinput_setup_device_#t~mem283, uinput_setup_device_#t~ret287, uinput_setup_device_~udev.offset, uinput_setup_device_#t~ret262, uinput_setup_device_#t~mem268, uinput_setup_device_#t~ret271.base, uinput_setup_device_#t~mem285, uinput_setup_device_~user_dev~253.base, uinput_setup_device_~tmp~253.offset, uinput_setup_device_~dev~253.offset, uinput_setup_device_#t~mem273.offset, uinput_setup_device_#t~ret291, uinput_setup_device_#t~mem261.offset, uinput_setup_device_~tmp___6~253;
    uinput_setup_device_~udev.offset, uinput_setup_device_~udev.base := uinput_setup_device_#in~udev.offset, uinput_setup_device_#in~udev.base;
    uinput_setup_device_~buffer.offset, uinput_setup_device_~buffer.base := uinput_setup_device_#in~buffer.offset, uinput_setup_device_#in~buffer.base;
    uinput_setup_device_~count := uinput_setup_device_#in~count;
    havoc uinput_setup_device_~user_dev~253.offset, uinput_setup_device_~user_dev~253.base;
    havoc uinput_setup_device_~dev~253.base, uinput_setup_device_~dev~253.offset;
    havoc uinput_setup_device_~i~253;
    havoc uinput_setup_device_~retval~253;
    havoc uinput_setup_device_~tmp~253.offset, uinput_setup_device_~tmp~253.base;
    havoc uinput_setup_device_~tmp___0~253;
    havoc uinput_setup_device_~tmp___1~253;
    havoc uinput_setup_device_~tmp___2~253.base, uinput_setup_device_~tmp___2~253.offset;
    havoc uinput_setup_device_~nslot~253;
    havoc uinput_setup_device_~tmp___3~253;
    havoc uinput_setup_device_~tmp___4~253;
    havoc uinput_setup_device_~tmp___5~253;
    havoc uinput_setup_device_~tmp___6~253;
    assume (uinput_setup_device_~count < 4294967296 + 4294967296 && !(uinput_setup_device_~count - 4294967296 == 1116)) && 4294967296 <= uinput_setup_device_~count;
    uinput_setup_device_#res := -22;
    uinput_write_#t~ret304 := uinput_setup_device_#res;
    assume 0 <= uinput_write_#t~ret304 + 2147483648 && uinput_write_#t~ret304 <= 2147483647;
    uinput_write_~tmp___0~283 := uinput_write_#t~ret304;
    havoc uinput_write_#t~ret304;
    uinput_write_~retval~283 := uinput_write_~tmp___0~283;
    ldv_mutex_unlock_9_#in~ldv_func_arg1.offset, ldv_mutex_unlock_9_#in~ldv_func_arg1.base := uinput_write_~udev~283.offset + 8, uinput_write_~udev~283.base;
    havoc ldv_mutex_unlock_9_~ldv_func_arg1.base, ldv_mutex_unlock_9_~ldv_func_arg1.offset;
    ldv_mutex_unlock_9_~ldv_func_arg1.base, ldv_mutex_unlock_9_~ldv_func_arg1.offset := ldv_mutex_unlock_9_#in~ldv_func_arg1.base, ldv_mutex_unlock_9_#in~ldv_func_arg1.offset;
    ldv_mutex_unlock_mutex_of_uinput_device_#in~lock.base, ldv_mutex_unlock_mutex_of_uinput_device_#in~lock.offset := ldv_mutex_unlock_9_~ldv_func_arg1.base, ldv_mutex_unlock_9_~ldv_func_arg1.offset;
    havoc ldv_mutex_unlock_mutex_of_uinput_device_~lock.base, ldv_mutex_unlock_mutex_of_uinput_device_~lock.offset;
    ldv_mutex_unlock_mutex_of_uinput_device_~lock.base, ldv_mutex_unlock_mutex_of_uinput_device_~lock.offset := ldv_mutex_unlock_mutex_of_uinput_device_#in~lock.base, ldv_mutex_unlock_mutex_of_uinput_device_#in~lock.offset;
    assume !(~ldv_mutex_mutex_of_uinput_device == 2);
    goto loc6;
  loc5_1:
    assume main_#t~switch635;
    assume main_~ldv_s_uinput_fops_file_operations~432 == 0;
    uinput_open_#in~inode.base, uinput_open_#in~file.offset, uinput_open_#in~file.base, uinput_open_#in~inode.offset := main_~var_group1~432.base, main_~var_group2~432.offset, main_~var_group2~432.base, main_~var_group1~432.offset;
    havoc uinput_open_#res;
    havoc uinput_open_~#__key~235.offset, uinput_open_~file.base, uinput_open_~newdev~235.offset, uinput_open_#t~ret231.base, uinput_open_#t~ret233.base, uinput_open_#t~ret231.offset, uinput_open_~#__key___1~235.offset, uinput_open_#t~nondet232.offset, uinput_open_#t~nondet232.base, uinput_open_#t~nondet235.offset, uinput_open_~#__key___0~235.offset, uinput_open_~inode.base, uinput_open_#t~nondet234.base, uinput_open_#t~nondet235.base, uinput_open_~#__key___2~235.base, uinput_open_#t~nondet236.base, uinput_open_~#__key___2~235.offset, uinput_open_~tmp~235.base, uinput_open_~inode.offset, uinput_open_~newdev~235.base, uinput_open_#t~ret239, uinput_open_#t~nondet234.offset, uinput_open_~#__key___1~235.base, uinput_open_~#__key___0~235.base, uinput_open_#t~ret233.offset, uinput_open_~#__key~235.base, uinput_open_~file.offset, uinput_open_~tmp~235.offset, uinput_open_#t~nondet236.offset;
    uinput_open_~inode.offset, uinput_open_~inode.base := uinput_open_#in~inode.offset, uinput_open_#in~inode.base;
    uinput_open_~file.base, uinput_open_~file.offset := uinput_open_#in~file.base, uinput_open_#in~file.offset;
    havoc uinput_open_~newdev~235.offset, uinput_open_~newdev~235.base;
    havoc uinput_open_~tmp~235.base, uinput_open_~tmp~235.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    uinput_open_~#__key~235.offset, uinput_open_~#__key~235.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    uinput_open_~#__key___0~235.base, uinput_open_~#__key___0~235.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    uinput_open_~#__key___1~235.offset, uinput_open_~#__key___1~235.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    uinput_open_~#__key___2~235.base, uinput_open_~#__key___2~235.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    kzalloc_#in~size, kzalloc_#in~flags := 960, 208;
    havoc kzalloc_#res.base, kzalloc_#res.offset;
    havoc kzalloc_~size, kzalloc_#t~ret92.base, kzalloc_#t~ret92.offset, kzalloc_~tmp~100.base, kzalloc_~flags, kzalloc_~tmp~100.offset;
    kzalloc_~size := kzalloc_#in~size;
    kzalloc_~flags := kzalloc_#in~flags;
    havoc kzalloc_~tmp~100.base, kzalloc_~tmp~100.offset;
    kmalloc_#in~size := kzalloc_~size;
    havoc kmalloc_#in~flags;
    havoc kmalloc_#res.base, kmalloc_#res.offset;
    havoc kmalloc_~size, kmalloc_#t~ret91.base, kmalloc_~tmp___2~98.offset, kmalloc_#t~ret91.offset, kmalloc_~tmp___2~98.base, kmalloc_~flags;
    kmalloc_~size := kmalloc_#in~size;
    kmalloc_~flags := kmalloc_#in~flags;
    havoc kmalloc_~tmp___2~98.offset, kmalloc_~tmp___2~98.base;
    __kmalloc_#in~90, __kmalloc_#in~89 := kmalloc_~flags, kmalloc_~size;
    havoc __kmalloc_#res.offset, __kmalloc_#res.base;
    kmalloc_#t~ret91.base, kmalloc_#t~ret91.offset := __kmalloc_#res.base, __kmalloc_#res.offset;
    kmalloc_~tmp___2~98.offset, kmalloc_~tmp___2~98.base := kmalloc_#t~ret91.offset, kmalloc_#t~ret91.base;
    havoc kmalloc_#t~ret91.base, kmalloc_#t~ret91.offset;
    kmalloc_#res.base, kmalloc_#res.offset := kmalloc_~tmp___2~98.base, kmalloc_~tmp___2~98.offset;
    kzalloc_#t~ret92.base, kzalloc_#t~ret92.offset := kmalloc_#res.base, kmalloc_#res.offset;
    kzalloc_~tmp~100.base, kzalloc_~tmp~100.offset := kzalloc_#t~ret92.base, kzalloc_#t~ret92.offset;
    havoc kzalloc_#t~ret92.base, kzalloc_#t~ret92.offset;
    kzalloc_#res.base, kzalloc_#res.offset := kzalloc_~tmp~100.base, kzalloc_~tmp~100.offset;
    uinput_open_#t~ret231.base, uinput_open_#t~ret231.offset := kzalloc_#res.base, kzalloc_#res.offset;
    uinput_open_~tmp~235.base, uinput_open_~tmp~235.offset := uinput_open_#t~ret231.base, uinput_open_#t~ret231.offset;
    havoc uinput_open_#t~ret231.base, uinput_open_#t~ret231.offset;
    uinput_open_~newdev~235.offset, uinput_open_~newdev~235.base := uinput_open_~tmp~235.offset, uinput_open_~tmp~235.base;
    assume (-18446744073709551616 <= uinput_open_~newdev~235.base + uinput_open_~newdev~235.offset && !(uinput_open_~newdev~235.base + uinput_open_~newdev~235.offset + 18446744073709551616 == 0)) && uinput_open_~newdev~235.base + uinput_open_~newdev~235.offset < 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    uinput_open_#t~nondet232.offset, uinput_open_#t~nondet232.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    __mutex_init_#in~20.base, __mutex_init_#in~20.offset, __mutex_init_#in~21.offset, __mutex_init_#in~21.base, __mutex_init_#in~22.base, __mutex_init_#in~22.offset := uinput_open_~newdev~235.base, uinput_open_~newdev~235.offset + 8, uinput_open_#t~nondet232.offset, uinput_open_#t~nondet232.base, uinput_open_~#__key~235.base, uinput_open_~#__key~235.offset;
    havoc uinput_open_#t~nondet232.offset, uinput_open_#t~nondet232.base;
    spinlock_check_#in~lock.base, spinlock_check_#in~lock.offset := uinput_open_~newdev~235.base, uinput_open_~newdev~235.offset + 855;
    havoc spinlock_check_#res.base, spinlock_check_#res.offset;
    havoc spinlock_check_~lock.offset, spinlock_check_~lock.base;
    spinlock_check_~lock.offset, spinlock_check_~lock.base := spinlock_check_#in~lock.offset, spinlock_check_#in~lock.base;
    spinlock_check_#res.base, spinlock_check_#res.offset := spinlock_check_~lock.base, spinlock_check_~lock.offset;
    uinput_open_#t~ret233.base, uinput_open_#t~ret233.offset := spinlock_check_#res.base, spinlock_check_#res.offset;
    havoc uinput_open_#t~ret233.base, uinput_open_#t~ret233.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 33;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    uinput_open_#t~nondet234.base, uinput_open_#t~nondet234.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    __raw_spin_lock_init_#in~31.offset, __raw_spin_lock_init_#in~31.base, __raw_spin_lock_init_#in~29.offset, __raw_spin_lock_init_#in~29.base, __raw_spin_lock_init_#in~30.base, __raw_spin_lock_init_#in~30.offset := uinput_open_~#__key___0~235.offset, uinput_open_~#__key___0~235.base, uinput_open_~newdev~235.offset + 855, uinput_open_~newdev~235.base, uinput_open_#t~nondet234.base, uinput_open_#t~nondet234.offset;
    havoc uinput_open_#t~nondet234.base, uinput_open_#t~nondet234.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 24;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    uinput_open_#t~nondet235.offset, uinput_open_#t~nondet235.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    __init_waitqueue_head_#in~39.offset, __init_waitqueue_head_#in~38.offset, __init_waitqueue_head_#in~37.offset, __init_waitqueue_head_#in~37.base, __init_waitqueue_head_#in~38.base, __init_waitqueue_head_#in~39.base := uinput_open_~#__key___1~235.offset, uinput_open_#t~nondet235.offset, uinput_open_~newdev~235.offset + 771, uinput_open_~newdev~235.base, uinput_open_#t~nondet235.base, uinput_open_~#__key___1~235.base;
    havoc uinput_open_#t~nondet235.offset, uinput_open_#t~nondet235.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    uinput_open_#t~nondet236.base, uinput_open_#t~nondet236.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    __init_waitqueue_head_#in~39.offset, __init_waitqueue_head_#in~38.offset, __init_waitqueue_head_#in~37.offset, __init_waitqueue_head_#in~37.base, __init_waitqueue_head_#in~38.base, __init_waitqueue_head_#in~39.base := uinput_open_~#__key___2~235.offset, uinput_open_#t~nondet236.offset, uinput_open_~newdev~235.offset + 168, uinput_open_~newdev~235.base, uinput_open_#t~nondet236.base, uinput_open_~#__key___2~235.base;
    havoc uinput_open_#t~nondet236.base, uinput_open_#t~nondet236.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, uinput_open_~newdev~235.base, 0, uinput_open_~newdev~235.offset + 164;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := uinput_open_~newdev~235.base, uinput_open_~file.offset + 292, 8, uinput_open_~newdev~235.offset, uinput_open_~file.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    nonseekable_open_#in~60.base, nonseekable_open_#in~61.offset, nonseekable_open_#in~61.base, nonseekable_open_#in~60.offset := uinput_open_~inode.base, uinput_open_~file.offset, uinput_open_~file.base, uinput_open_~inode.offset;
    havoc nonseekable_open_#res;
    uinput_open_#t~ret239 := nonseekable_open_#res;
    assume uinput_open_#t~ret239 <= 2147483647 && 0 <= uinput_open_#t~ret239 + 2147483648;
    havoc uinput_open_#t~ret239;
    uinput_open_#res := 0;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := uinput_open_~#__key~235.base, uinput_open_~#__key~235.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc uinput_open_~#__key~235.offset, uinput_open_~#__key~235.base;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := uinput_open_~#__key___0~235.base, uinput_open_~#__key___0~235.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc uinput_open_~#__key___0~235.base, uinput_open_~#__key___0~235.offset;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := uinput_open_~#__key___1~235.base, uinput_open_~#__key___1~235.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc uinput_open_~#__key___1~235.offset, uinput_open_~#__key___1~235.base;
    ULTIMATE.dealloc_old_#valid := #valid;
    ULTIMATE.dealloc_~addr.base, ULTIMATE.dealloc_~addr.offset := uinput_open_~#__key___2~235.base, uinput_open_~#__key___2~235.offset;
    havoc #valid;
    assume #valid == ULTIMATE.dealloc_old_#valid[ULTIMATE.dealloc_~addr.base := 0];
    havoc uinput_open_~#__key___2~235.base, uinput_open_~#__key___2~235.offset;
    main_#t~ret636 := uinput_open_#res;
    assume 0 <= main_#t~ret636 + 2147483648 && main_#t~ret636 <= 2147483647;
    main_~res_uinput_open_15~432 := main_#t~ret636;
    havoc main_#t~ret636;
    ldv_check_return_value_#in~632 := main_~res_uinput_open_15~432;
    assume main_~res_uinput_open_15~432 == 0;
    main_~ldv_s_uinput_fops_file_operations~432 := main_~ldv_s_uinput_fops_file_operations~432 + 1;
    goto loc1;
  loc6:
    assert false;
}


var ~descriptor___0.flags : int;

var ~descriptor.enabled : int;

var ~descriptor___1.flags : int;

var ~descriptor___2.flags : int;

var ~descriptor___4.format.base : int;

var ~descriptor___3.flags : int;

var ~descriptor___4.function.base : int;

var ~descriptor___2.modname.base : int;

var ~#keyspan_driver.base : int;

var ~descriptor___3.filename.base : int;

var ~descriptor___4.flags : int;

var ~descriptor___3.function.offset : int;

var v_rep#funAddr~keyspan_disconnect.offset_1 : int;

var ~descriptor___0.format.base : int;

var ~descriptor___2.modname.offset : int;

var ~descriptor___1.lineno : int;

var v_rep#funAddr~keyspan_open.offset_1 : int;

var ~descriptor___3.enabled : int;

var ~descriptor.filename.base : int;

var ~descriptor___0.modname.base : int;

var ~descriptor___3.format.offset : int;

var v_rep#funAddr~keyspan_probe.base_1 : int;

var ~descriptor___2.format.offset : int;

var ~descriptor___4.modname.offset : int;

var v_rep#funAddr~keyspan_close.offset_1 : int;

var ~descriptor___4.enabled : int;

var ~descriptor___4.filename.offset : int;

var ~descriptor___1.function.offset : int;

var #memory_$Pointer$.offset : [int][int]int;

var ~descriptor.lineno : int;

var ~#__this_module.base : int;

var ~descriptor___0.function.offset : int;

var ~#__this_module.offset : int;

var ~#keyspan_key_table.offset : int;

var ~descriptor___2.filename.base : int;

var ~descriptor___1.modname.offset : int;

var ~ldv_coherent_state : int;

var ~descriptor___4.modname.base : int;

var ~descriptor___2.lineno : int;

var v_rep#funAddr~keyspan_irq_recv.offset_1 : int;

var ~descriptor___3.function.base : int;

var ~descriptor___3.filename.offset : int;

var ~descriptor___2.enabled : int;

var ~descriptor.format.offset : int;

var ~LDV_IN_INTERRUPT : int;

var ~descriptor___0.filename.offset : int;

var #valid : [int]int;

var ~descriptor___0.filename.base : int;

var ~descriptor.format.base : int;

var ~descriptor___1.function.base : int;

var #memory_$Pointer$.base : [int][int]int;

var ~descriptor.function.base : int;

var ~descriptor___0.enabled : int;

var #NULL.offset : int;

var ~descriptor.modname.base : int;

var ~#keyspan_table.offset : int;

var ~descriptor___3.modname.offset : int;

var ~res_keyspan_probe_9 : int;

var ~descriptor___4.function.offset : int;

var ~descriptor___2.format.base : int;

var ~descriptor___3.lineno : int;

var ~descriptor___4.format.offset : int;

var ~#keyspan_table.base : int;

var #length : [int]int;

var ~descriptor___4.filename.base : int;

var ~descriptor___4.lineno : int;

var v_rep#funAddr~keyspan_open.base_1 : int;

var ~descriptor.flags : int;

var ~ldv_urb_state : int;

var v_rep#funAddr~keyspan_disconnect.base_1 : int;

var ~descriptor___3.modname.base : int;

var ~descriptor___1.format.offset : int;

var ~#keyspan_driver.offset : int;

var ~descriptor___1.filename.offset : int;

var ~#debug.offset : int;

var ~descriptor___0.function.base : int;

var ~descriptor___3.format.base : int;

var ~descriptor___0.format.offset : int;

var ~descriptor___2.filename.offset : int;

var ~#debug.base : int;

var ~descriptor___1.format.base : int;

var v_rep#funAddr~keyspan_close.base_1 : int;

var ~descriptor.function.offset : int;

var ~descriptor___0.lineno : int;

var ~descriptor___2.function.offset : int;

var #NULL.base : int;

var ~descriptor___2.function.base : int;

var ~descriptor___1.enabled : int;

var ~#keyspan_key_table.base : int;

var ~descriptor___0.modname.offset : int;

var v_rep#funAddr~keyspan_irq_recv.base_1 : int;

var #memory_int : [int][int]int;

var ~descriptor.modname.offset : int;

var ~descriptor.filename.offset : int;

var ~descriptor___1.filename.base : int;

var ~descriptor___1.modname.base : int;

var v_rep#funAddr~keyspan_probe.offset_1 : int;

procedure ULTIMATE.start() returns ()
modifies ~descriptor___0.flags, ~descriptor.enabled, ~descriptor___1.flags, ~descriptor___2.flags, ~descriptor___4.format.base, ~descriptor___3.flags, ~descriptor___4.function.base, ~descriptor___2.modname.base, ~#keyspan_driver.base, ~descriptor___3.filename.base, ~descriptor___4.flags, ~descriptor___3.function.offset, v_rep#funAddr~keyspan_disconnect.offset_1, ~descriptor___0.format.base, ~descriptor___2.modname.offset, ~descriptor___1.lineno, v_rep#funAddr~keyspan_open.offset_1, ~descriptor___3.enabled, ~descriptor.filename.base, ~descriptor___0.modname.base, ~descriptor___3.format.offset, v_rep#funAddr~keyspan_probe.base_1, ~descriptor___2.format.offset, ~descriptor___4.modname.offset, v_rep#funAddr~keyspan_close.offset_1, ~descriptor___4.enabled, ~descriptor___4.filename.offset, ~descriptor___1.function.offset, #memory_$Pointer$.offset, ~descriptor.lineno, ~#__this_module.base, ~descriptor___0.function.offset, ~#__this_module.offset, ~#keyspan_key_table.offset, ~descriptor___2.filename.base, ~descriptor___1.modname.offset, ~ldv_coherent_state, ~descriptor___4.modname.base, ~descriptor___2.lineno, v_rep#funAddr~keyspan_irq_recv.offset_1, ~descriptor___3.function.base, ~descriptor___3.filename.offset, ~descriptor___2.enabled, ~descriptor.format.offset, ~LDV_IN_INTERRUPT, ~descriptor___0.filename.offset, #valid, ~descriptor___0.filename.base, ~descriptor.format.base, ~descriptor___1.function.base, #memory_$Pointer$.base, ~descriptor.function.base, ~descriptor___0.enabled, #NULL.offset, ~descriptor.modname.base, ~#keyspan_table.offset, ~descriptor___3.modname.offset, ~res_keyspan_probe_9, ~descriptor___4.function.offset, ~descriptor___2.format.base, ~descriptor___3.lineno, ~descriptor___4.format.offset, ~#keyspan_table.base, #length, ~descriptor___4.filename.base, ~descriptor___4.lineno, v_rep#funAddr~keyspan_open.base_1, ~descriptor.flags, ~ldv_urb_state, v_rep#funAddr~keyspan_disconnect.base_1, ~descriptor___3.modname.base, ~descriptor___1.format.offset, ~#keyspan_driver.offset, ~descriptor___1.filename.offset, ~#debug.offset, ~descriptor___0.function.base, ~descriptor___3.format.base, ~descriptor___0.format.offset, ~descriptor___2.filename.offset, ~#debug.base, ~descriptor___1.format.base, v_rep#funAddr~keyspan_close.base_1, ~descriptor.function.offset, ~descriptor___0.lineno, ~descriptor___2.function.offset, #NULL.base, ~descriptor___2.function.base, ~descriptor___1.enabled, ~#keyspan_key_table.base, ~descriptor___0.modname.offset, v_rep#funAddr~keyspan_irq_recv.base_1, #memory_int, ~descriptor.modname.offset, ~descriptor.filename.offset, ~descriptor___1.filename.base, ~descriptor___1.modname.base, v_rep#funAddr~keyspan_probe.offset_1;
{
    var __memcpy_#in~to.offset : int;
    var keyspan_probe_#t~nondet270.offset : int;
    var usb_free_urb_#in~urb.offset : int;
    var usb_alloc_urb_~tmp___7~406.base : int;
    var keyspan_probe_#t~mem297.offset : int;
    var keyspan_probe_#t~nondet267.offset : int;
    var usb_control_msg_#res : int;
    var keyspan_probe_#t~mem264.offset : int;
    var write~int_#ptr.base : int;
    var keyspan_setup_#t~ret208 : int;
    var usb_fill_int_urb_~urb.base : int;
    var usb_to_input_id_~id.offset : int;
    var ULTIMATE.init_#t~nondet80.base : int;
    var keyspan_get_in_endpoint_#in~iface.base : int;
    var usb_alloc_coherent_#in~dev.base : int;
    var keyspan_probe_#t~memcpy273.offset : int;
    var usb_to_input_id_#t~mem44 : int;
    var usb_fill_int_urb_~complete_fn.offset : int;
    var write~int_old_#memory_$Pointer$.offset : [int][int]int;
    var keyspan_probe_#t~nondet267.base : int;
    var usb_alloc_urb_#res.base : int;
    var usb_fill_int_urb_#in~pipe : int;
    var snprintf_#in~size : int;
    var usb_make_path_#in~size : int;
    var keyspan_probe_#t~mem289 : int;
    var ULTIMATE.init_#t~union319.__padding : [int]int;
    var keyspan_probe_#t~mem255.base : int;
    var keyspan_probe_~interface.base : int;
    var write~$Pointer$_#ptr.base : int;
    var interface_to_usbdev_#in~intf.offset : int;
    var write~int_#sizeOfWrittenType : int;
    var usb_alloc_coherent_#in~dma.offset : int;
    var usb_register_driver_#in~20.offset : int;
    var usb_alloc_urb_~tmp___7~406.offset : int;
    var snprintf_#in~buf.base : int;
    var usb_free_coherent_#in~dev.base : int;
    var __memcpy_#in~from.offset : int;
    var keyspan_probe_~__ret~284.offset : int;
    var usb_endpoint_xfer_int_#res : int;
    var keyspan_setup_~tmp___12~207 : int;
    var usb_endpoint_is_int_in_~tmp___1~24 : int;
    var usb_control_msg_#in~data.base : int;
    var ULTIMATE.init_#t~nondet80.offset : int;
    var input_allocate_device_#res.base : int;
    var #Ultimate.alloc_old_#valid : [int]int;
    var snprintf_#res : int;
    var usb_to_input_id_~dev.offset : int;
    var keyspan_setup_#in~dev.offset : int;
    var usb_control_msg_#in~data.offset : int;
    var __set_bit_#in~addr.offset : int;
    var write~int_#ptr.offset : int;
    var usb_control_msg_#in~value : int;
    var keyspan_get_in_endpoint_#t~mem238.base : int;
    var usb_make_path_#in~dev.offset : int;
    var usb_keyspan_init_#t~nondet311.offset : int;
    var usb_alloc_urb_~iso_packets : int;
    var interface_to_usbdev_#t~mem15.base : int;
    var ULTIMATE.init_#t~union319.dep_map.key.offset : int;
    var ULTIMATE.init_#t~nondet201.offset : int;
    var write~$Pointer$_old_#memory_$Pointer$.base : [int][int]int;
    var ULTIMATE.init_#t~nondet196.offset : int;
    var usb_keyspan_init_#t~ret312 : int;
    var usb_register_#in~driver.offset : int;
    var keyspan_setup_~dev.offset : int;
    var kzalloc_#res.offset : int;
    var __clear_bit_#in~addr.base : int;
    var keyspan_probe_~tmp___9~284.offset : int;
    var read~int_#ptr.offset : int;
    var usb_make_path_#in~buf.base : int;
    var usb_endpoint_xfer_int_#in~epd.base : int;
    var usb_alloc_coherent_~arbitrary_memory~387.base : int;
    var __create_pipe_#in~dev.offset : int;
    var keyspan_probe_~i~284 : int;
    var kmalloc_~tmp___2~14.offset : int;
    var usb_free_coherent_#in~addr.base : int;
    var usb_alloc_coherent_~mem_flags : int;
    var usb_alloc_urb_#t~ret318.base : int;
    var keyspan_setup_#t~ret206 : int;
    var usb_deregister_#in~23.base : int;
    var __memcpy_#in~to.base : int;
    var usb_to_input_id_#in~dev.offset : int;
    var usb_fill_int_urb_#in~context.base : int;
    var usb_register_driver_#in~18.offset : int;
    var usb_endpoint_is_int_in_~epd.offset : int;
    var keyspan_setup_#t~nondet210.base : int;
    var keyspan_setup_#t~nondet215.base : int;
    var keyspan_setup_#t~nondet218.base : int;
    var interface_to_usbdev_~__mptr~44.base : int;
    var usb_endpoint_xfer_int_#t~mem10 : int;
    var ULTIMATE.init_#t~nondet191.offset : int;
    var usb_alloc_urb_#res.offset : int;
    var usb_make_path_#res : int;
    var usb_make_path_~dev.offset : int;
    var __clear_bit_~nr : int;
    var #Ultimate.alloc_#res.offset : int;
    var usb_endpoint_xfer_int_#in~epd.offset : int;
    var __kmalloc_#res.offset : int;
    var usb_to_input_id_#t~mem42 : int;
    var usb_fill_int_urb_~context.base : int;
    var usb_endpoint_xfer_int_~epd.base : int;
    var dev_set_drvdata_#in~dev.offset : int;
    var read~$Pointer$_#ptr.offset : int;
    var kzalloc_~flags : int;
    var keyspan_setup_#t~nondet209.offset : int;
    var snprintf_#in~fmt.base : int;
    var usb_alloc_coherent_#in~size : int;
    var keyspan_probe_#t~ret259 : int;
    var keyspan_probe_~error~284 : int;
    var keyspan_probe_#t~mem288.base : int;
    var strlcat_#in~4.base : int;
    var keyspan_probe_#t~mem257.offset : int;
    var __kmalloc_#in~flags : int;
    var usb_alloc_coherent_#res.offset : int;
    var ULTIMATE.init_#t~nondet189.offset : int;
    var read~$Pointer$_#value.base : int;
    var usb_alloc_coherent_~dma.base : int;
    var ULTIMATE.init_#t~nondet192.offset : int;
    var ULTIMATE.init_#t~nondet54.base : int;
    var usb_endpoint_dir_in_~epd.base : int;
    var ULTIMATE.init_#t~nondet56.offset : int;
    var keyspan_probe_~interface.offset : int;
    var keyspan_setup_#t~ret207 : int;
    var usb_fill_int_urb_#in~context.offset : int;
    var usb_make_path_#t~nondet16.base : int;
    var main_~var_keyspan_probe_9_p1~354.offset : int;
    var usb_to_input_id_#in~dev.base : int;
    var ULTIMATE.init_#t~nondet193.base : int;
    var keyspan_probe_#t~mem260.offset : int;
    var usb_control_msg_#in~dev.base : int;
    var usb_to_input_id_~id.base : int;
    var __set_bit_~nr : int;
    var keyspan_probe_#t~ret250.offset : int;
    var keyspan_probe_#t~nondet262.offset : int;
    var usb_endpoint_is_int_in_~tmp~24 : int;
    var usb_make_path_~buf.offset : int;
    var write~$Pointer$_#value.base : int;
    var keyspan_setup_#t~ret219 : int;
    var main_~tmp___8~354 : int;
    var usb_register_~driver.base : int;
    var keyspan_probe_#t~ret243.base : int;
    var usb_to_input_id_~dev.base : int;
    var usb_keyspan_init_#t~ret310 : int;
    var usb_make_path_~tmp___7~46 : int;
    var usb_endpoint_is_int_in_~epd.base : int;
    var main_#t~nondet315 : int;
    var usb_free_coherent_#in~addr.offset : int;
    var keyspan_setup_#t~nondet215.offset : int;
    var usb_keyspan_init_#res : int;
    var keyspan_get_in_endpoint_~iface.offset : int;
    var usb_endpoint_is_int_in_#t~ret11 : int;
    var kfree_#in~6.base : int;
    var input_set_drvdata_~dev.base : int;
    var ULTIMATE.init_#t~nondet81.base : int;
    var main_~tmp___7~354 : int;
    var ULTIMATE.init_#t~nondet187.base : int;
    var strlcat_#res : int;
    var ULTIMATE.init_#t~nondet192.base : int;
    var ULTIMATE.init_#t~nondet196.base : int;
    var keyspan_probe_#t~ret253.base : int;
    var __clear_bit_~addr.base : int;
    var keyspan_probe_~id.base : int;
    var ULTIMATE.init_#t~nondet193.offset : int;
    var usb_alloc_coherent_~dev.base : int;
    var input_set_drvdata_#in~dev.offset : int;
    var kzalloc_~size : int;
    var keyspan_probe_#t~mem299.base : int;
    var read~int_#ptr.base : int;
    var ULTIMATE.init_#t~union319.dep_map.key.base : int;
    var __kmalloc_#in~size : int;
    var ULTIMATE.init_#t~nondet78.offset : int;
    var keyspan_probe_#t~ret253.offset : int;
    var usb_alloc_urb_#t~ret318.offset : int;
    var usb_make_path_~buf.base : int;
    var usb_register_driver_#in~20.base : int;
    var usb_fill_int_urb_~complete_fn.base : int;
    var ULTIMATE.init_#t~nondet55.offset : int;
    var usb_register_driver_#in~19.base : int;
    var usb_keyspan_init_~result~340 : int;
    var usb_alloc_coherent_#in~mem_flags : int;
    var input_set_capability_#in~type : int;
    var keyspan_probe_~tmp___8~284.base : int;
    var keyspan_probe_#in~interface.base : int;
    var ULTIMATE.init_#t~nondet53.base : int;
    var usb_control_msg_#in~size : int;
    var keyspan_probe_~endpoint~284.offset : int;
    var keyspan_setup_#t~nondet204.base : int;
    var keyspan_probe_#t~ret243.offset : int;
    var usb_endpoint_dir_in_#t~mem9 : int;
    var keyspan_probe_#t~ret240.offset : int;
    var ULTIMATE.init_#t~nondet198.base : int;
    var write~$Pointer$_#value.offset : int;
    var usb_free_coherent_~size : int;
    var keyspan_get_in_endpoint_#res.offset : int;
    var interface_to_usbdev_~__mptr~44.offset : int;
    var interface_to_usbdev_~intf.offset : int;
    var usb_alloc_coherent_~dma.offset : int;
    var keyspan_probe_#t~mem261.base : int;
    var read~int_#sizeOfReadType : int;
    var kmalloc_#in~size : int;
    var input_set_drvdata_~data.base : int;
    var keyspan_setup_#t~nondet205.offset : int;
    var keyspan_probe_#t~mem284 : int;
    var keyspan_probe_#t~mem261.offset : int;
    var keyspan_probe_~tmp___7~284.base : int;
    var keyspan_probe_~tmp___7~284.offset : int;
    var write~$Pointer$_old_#memory_$Pointer$.offset : [int][int]int;
    var keyspan_setup_#in~dev.base : int;
    var __create_pipe_#in~endpoint : int;
    var ULTIMATE.init_#t~union319.dep_map.class_cache.offset : [int]int;
    var kzalloc_#t~ret8.offset : int;
    var usb_make_path_#t~ret17 : int;
    var usb_make_path_~size : int;
    var kmalloc_#res.offset : int;
    var usb_alloc_urb_#in~mem_flags : int;
    var write~$Pointer$_#sizeOfWrittenType : int;
    var kzalloc_#in~flags : int;
    var usb_alloc_coherent_~tmp___7~387.offset : int;
    var strlcat_#in~3.offset : int;
    var usb_register_~tmp___7~52 : int;
    var __set_bit_~addr.offset : int;
    var ULTIMATE.init_#t~nondet200.offset : int;
    var input_register_device_#res : int;
    var keyspan_probe_#t~mem295 : int;
    var keyspan_setup_#t~nondet214.base : int;
    var __set_bit_#in~nr : int;
    var ULTIMATE.init_#t~nondet188.offset : int;
    var write~$Pointer$_old_#memory_int : [int][int]int;
    var kzalloc_~tmp~17.offset : int;
    var keyspan_probe_#t~mem294.offset : int;
    var __memcpy_#in~from.base : int;
    var usb_to_input_id_#t~mem46 : int;
    var keyspan_probe_~tmp___10~284 : int;
    var interface_to_usbdev_#res.base : int;
    var input_set_drvdata_#in~dev.base : int;
    var keyspan_setup_~retval~207 : int;
    var main_#t~ret316 : int;
    var usb_control_msg_#in~dev.offset : int;
    var keyspan_probe_#t~nondet270.base : int;
    var keyspan_probe_#t~ret242.base : int;
    var input_set_capability_#in~code : int;
    var keyspan_get_in_endpoint_#t~mem238.offset : int;
    var usb_alloc_coherent_~arbitrary_memory~387.offset : int;
    var main_#t~nondet314 : int;
    var read~$Pointer$_#sizeOfReadType : int;
    var keyspan_probe_#in~id.base : int;
    var interface_to_usbdev_#in~intf.base : int;
    var usb_register_driver_#res : int;
    var kmalloc_#res.base : int;
    var keyspan_setup_#t~nondet210.offset : int;
    var usb_free_coherent_~addr.offset : int;
    var input_set_drvdata_~dev.offset : int;
    var input_allocate_device_#res.offset : int;
    var usb_endpoint_is_int_in_#t~ret12 : int;
    var usb_alloc_coherent_#in~dev.offset : int;
    var ULTIMATE.init_#t~nondet186.base : int;
    var ULTIMATE.init_#t~nondet190.offset : int;
    var ULTIMATE.init_#t~nondet197.base : int;
    var __create_pipe_#res : int;
    var keyspan_get_in_endpoint_~tmp___7~275 : int;
    var usb_fill_int_urb_~pipe : int;
    var keyspan_probe_#t~ret271 : int;
    var keyspan_probe_~tmp___8~284.offset : int;
    var usb_free_urb_~urb.offset : int;
    var usb_alloc_urb_~arbitrary_memory~406.offset : int;
    var usb_fill_int_urb_#in~urb.offset : int;
    var usb_fill_int_urb_~urb.offset : int;
    var kzalloc_#in~size : int;
    var snprintf_#in~fmt.offset : int;
    var usb_alloc_urb_#in~iso_packets : int;
    var read~$Pointer$_#value.offset : int;
    var input_register_device_#in~39.base : int;
    var usb_make_path_#t~nondet16.offset : int;
    var __memcpy_#res.base : int;
    var usb_to_input_id_#in~id.base : int;
    var keyspan_get_in_endpoint_~iface.base : int;
    var keyspan_probe_#t~ret272.offset : int;
    var __memcpy_#res.offset : int;
    var ULTIMATE.init_#t~nondet194.offset : int;
    var ULTIMATE.init_#t~nondet54.offset : int;
    var usb_make_path_~actual~46 : int;
    var ULTIMATE.init_#t~nondet188.base : int;
    var ULTIMATE.init_#t~nondet201.base : int;
    var interface_to_usbdev_~intf.base : int;
    var main_~var_group1~354.offset : int;
    var keyspan_probe_#t~mem257.base : int;
    var dev_set_drvdata_#in~data.offset : int;
    var ULTIMATE.init_#t~nondet199.offset : int;
    var keyspan_probe_#t~mem264.base : int;
    var keyspan_setup_#t~nondet214.offset : int;
    var usb_fill_int_urb_#in~complete_fn.offset : int;
    var __create_pipe_#in~dev.base : int;
    var keyspan_probe_#in~id.offset : int;
    var keyspan_probe_#t~mem287.offset : int;
    var usb_fill_int_urb_#t~mem32 : int;
    var ldv_undefined_pointer_#res.offset : int;
    var keyspan_probe_#t~mem260.base : int;
    var #Ultimate.alloc_old_#length : [int]int;
    var kmalloc_#t~ret7.base : int;
    var usb_fill_int_urb_~dev.base : int;
    var ULTIMATE.init_#t~nondet79.offset : int;
    var input_free_device_#in~dev.offset : int;
    var write~$Pointer$_#ptr.offset : int;
    var kmalloc_#t~ret7.offset : int;
    var main_~var_keyspan_probe_9_p1~354.base : int;
    var usb_free_coherent_~dev.base : int;
    var ULTIMATE.init_#t~union319.dep_map.class_cache.base : [int]int;
    var write~int_#value : int;
    var keyspan_setup_#t~ret212 : int;
    var usb_free_coherent_#in~size : int;
    var keyspan_setup_#t~nondet209.base : int;
    var ULTIMATE.init_#t~nondet56.base : int;
    var usb_free_coherent_~addr.base : int;
    var usb_fill_int_urb_#in~buffer_length : int;
    var keyspan_probe_~input_dev~284.base : int;
    var keyspan_probe_#t~ret265 : int;
    var keyspan_probe_#t~mem292 : int;
    var keyspan_setup_#res : int;
    var keyspan_probe_~remote~284.base : int;
    var keyspan_setup_#t~nondet205.base : int;
    var ULTIMATE.init_#t~nondet199.base : int;
    var keyspan_probe_#t~mem299.offset : int;
    var usb_fill_int_urb_#t~mem30 : int;
    var keyspan_setup_~tmp___11~207 : int;
    var ULTIMATE.init_#t~nondet79.base : int;
    var keyspan_probe_#t~memcpy273.base : int;
    var keyspan_probe_#res : int;
    var kmalloc_~size : int;
    var keyspan_probe_#t~mem283.base : int;
    var keyspan_probe_#t~mem290.base : int;
    var keyspan_get_in_endpoint_#t~mem237 : int;
    var #Ultimate.alloc_~size : int;
    var ULTIMATE.init_#t~nondet191.base : int;
    var ULTIMATE.init_#t~nondet195.base : int;
    var __create_pipe_#t~mem36 : int;
    var input_set_capability_#in~dev.offset : int;
    var ldv_undefined_pointer_#res.base : int;
    var keyspan_setup_~tmp___7~207 : int;
    var usb_free_coherent_#in~dma : int;
    var main_#t~ret313 : int;
    var usb_endpoint_dir_in_#in~epd.offset : int;
    var keyspan_probe_#t~mem280 : int;
    var strlcat_#in~3.base : int;
    var dev_set_drvdata_#res : int;
    var keyspan_probe_#in~interface.offset : int;
    var keyspan_probe_#t~mem300.base : int;
    var keyspan_probe_#t~mem294.base : int;
    var keyspan_probe_~tmp___11~284 : int;
    var usb_endpoint_is_int_in_#in~epd.base : int;
    var main_~var_group1~354.base : int;
    var __set_bit_~addr.base : int;
    var keyspan_probe_#t~mem287.base : int;
    var keyspan_setup_#t~ret213 : int;
    var snprintf_#in~buf.offset : int;
    var keyspan_setup_#t~nondet218.offset : int;
    var main_~ldv_s_keyspan_driver_usb_driver~354 : int;
    var usb_keyspan_init_#t~nondet311.base : int;
    var usb_control_msg_#in~request : int;
    var input_set_drvdata_#in~data.base : int;
    var usb_to_input_id_#in~id.offset : int;
    var keyspan_probe_#t~ret285 : int;
    var __clear_bit_#in~nr : int;
    var usb_fill_int_urb_~transfer_buffer.base : int;
    var keyspan_setup_~tmp___13~207 : int;
    var keyspan_probe_#t~mem241.base : int;
    var usb_free_urb_#in~urb.base : int;
    var usb_alloc_coherent_~size : int;
    var input_set_capability_#in~dev.base : int;
    var keyspan_probe_#t~mem301 : int;
    var kmalloc_~flags : int;
    var kzalloc_#res.base : int;
    var usb_endpoint_dir_in_~epd.offset : int;
    var keyspan_probe_#t~mem258.offset : int;
    var keyspan_get_in_endpoint_#res.base : int;
    var usb_register_#res : int;
    var kmalloc_#in~flags : int;
    var __create_pipe_~dev.offset : int;
    var usb_register_driver_#in~19.offset : int;
    var keyspan_probe_#t~ret240.base : int;
    var keyspan_probe_~endpoint~284.base : int;
    var keyspan_probe_#t~mem286.offset : int;
    var interface_to_usbdev_#res.offset : int;
    var usb_endpoint_xfer_int_~epd.offset : int;
    var ULTIMATE.init_#t~nondet198.offset : int;
    var usb_register_~driver.offset : int;
    var usb_register_#t~nondet21.base : int;
    var input_register_device_#in~39.offset : int;
    var keyspan_get_in_endpoint_#t~ret239 : int;
    var ULTIMATE.init_#t~nondet186.offset : int;
    var keyspan_probe_~udev~284.base : int;
    var keyspan_get_in_endpoint_~endpoint~275.offset : int;
    var keyspan_probe_~__ret~284.base : int;
    var usb_make_path_#in~dev.base : int;
    var main_~tmp___9~354 : int;
    var keyspan_probe_#t~ret263 : int;
    var keyspan_probe_#t~mem241.offset : int;
    var keyspan_probe_~__len~284 : int;
    var usb_fill_int_urb_#in~dev.base : int;
    var ULTIMATE.init_#t~union319.dep_map.ip : int;
    var keyspan_probe_#t~ret244.offset : int;
    var interface_to_usbdev_#t~mem15.offset : int;
    var keyspan_probe_#t~nondet266 : int;
    var __memcpy_#in~len : int;
    var ULTIMATE.init_#t~nondet81.offset : int;
    var keyspan_probe_#t~mem252.base : int;
    var dev_set_drvdata_#in~data.base : int;
    var keyspan_probe_#t~ret298 : int;
    var ULTIMATE.init_#t~nondet53.offset : int;
    var keyspan_get_in_endpoint_#in~iface.offset : int;
    var input_free_device_#in~dev.base : int;
    var usb_free_coherent_#in~dev.offset : int;
    var ULTIMATE.init_#t~nondet195.offset : int;
    var read~$Pointer$_#ptr.base : int;
    var keyspan_probe_~input_dev~284.offset : int;
    var keyspan_setup_#t~ret211 : int;
    var usb_alloc_coherent_~dev.offset : int;
    var usb_fill_int_urb_~context.offset : int;
    var usb_register_driver_#in~18.base : int;
    var read~int_#value : int;
    var usb_free_coherent_~dev.offset : int;
    var keyspan_probe_#t~mem288.offset : int;
    var input_set_drvdata_#in~data.offset : int;
    var usb_register_#t~ret22 : int;
    var usb_alloc_urb_~arbitrary_memory~406.base : int;
    var usb_alloc_urb_~mem_flags : int;
    var ULTIMATE.init_#t~union319.dep_map.name.offset : int;
    var usb_fill_int_urb_#in~dev.offset : int;
    var ULTIMATE.init_#t~nondet189.base : int;
    var ULTIMATE.init_#t~nondet190.base : int;
    var keyspan_probe_#t~ret268 : int;
    var keyspan_probe_~id.offset : int;
    var ULTIMATE.init_#t~nondet200.base : int;
    var keyspan_setup_~tmp___9~207 : int;
    var usb_alloc_coherent_#t~ret317.base : int;
    var ULTIMATE.init_#t~nondet194.base : int;
    var keyspan_probe_#t~mem300.offset : int;
    var ULTIMATE.init_#t~nondet309.base : int;
    var usb_control_msg_#in~timeout : int;
    var keyspan_probe_~udev~284.offset : int;
    var usb_fill_int_urb_#in~complete_fn.base : int;
    var keyspan_probe_~remote~284.offset : int;
    var kfree_#in~6.offset : int;
    var keyspan_probe_#t~mem297.base : int;
    var keyspan_setup_#t~ret216 : int;
    var input_set_drvdata_#t~ret38 : int;
    var kmalloc_~tmp___2~14.base : int;
    var ULTIMATE.init_#t~union319.dep_map.name.base : int;
    var keyspan_probe_#t~mem293.base : int;
    var usb_make_path_~dev.base : int;
    var usb_fill_int_urb_#in~urb.base : int;
    var usb_endpoint_dir_in_#in~epd.base : int;
    var __create_pipe_~endpoint : int;
    var usb_fill_int_urb_~dev.offset : int;
    var keyspan_probe_~tmp~284 : int;
    var ULTIMATE.init_#t~nondet78.base : int;
    var kzalloc_#t~ret8.base : int;
    var keyspan_probe_#t~ret269 : int;
    var usb_endpoint_is_int_in_#res : int;
    var keyspan_probe_#t~nondet262.base : int;
    var usb_alloc_coherent_#t~ret317.offset : int;
    var keyspan_probe_#t~mem258.base : int;
    var keyspan_probe_#t~mem255.offset : int;
    var keyspan_probe_#t~mem283.offset : int;
    var usb_fill_int_urb_#in~transfer_buffer.base : int;
    var main_#res : int;
    var usb_control_msg_#in~index : int;
    var ULTIMATE.init_#t~union319.dep_map.cpu : int;
    var __set_bit_#in~addr.base : int;
    var __kmalloc_#res.base : int;
    var usb_free_urb_~urb.base : int;
    var usb_endpoint_dir_in_#res : int;
    var __clear_bit_#in~addr.offset : int;
    var ULTIMATE.init_#t~nondet197.offset : int;
    var keyspan_setup_~tmp___10~207 : int;
    var keyspan_get_in_endpoint_~endpoint~275.base : int;
    var usb_free_coherent_~dma : int;
    var input_set_drvdata_~data.offset : int;
    var keyspan_setup_#t~nondet217.base : int;
    var dev_set_drvdata_#in~dev.base : int;
    var usb_alloc_coherent_#res.base : int;
    var usb_fill_int_urb_~buffer_length : int;
    var kzalloc_~tmp~17.base : int;
    var #Ultimate.alloc_#res.base : int;
    var keyspan_setup_#t~ret202 : int;
    var usb_control_msg_#in~requesttype : int;
    var keyspan_setup_~dev.base : int;
    var keyspan_probe_~tmp___9~284.base : int;
    var keyspan_probe_#t~mem252.offset : int;
    var write~int_old_#memory_int : [int][int]int;
    var ULTIMATE.init_#t~nondet187.offset : int;
    var strlcat_#in~4.offset : int;
    var keyspan_probe_#t~mem293.offset : int;
    var usb_alloc_coherent_~tmp___7~387.base : int;
    var keyspan_setup_~tmp___8~207 : int;
    var keyspan_get_in_endpoint_~i~275 : int;
    var keyspan_probe_#t~ret242.offset : int;
    var keyspan_probe_#t~mem286.base : int;
    var keyspan_probe_#t~ret244.base : int;
    var __clear_bit_~addr.offset : int;
    var usb_register_#in~driver.base : int;
    var keyspan_setup_#t~nondet204.offset : int;
    var usb_control_msg_#in~pipe : int;
    var usb_fill_int_urb_#in~transfer_buffer.offset : int;
    var usb_register_#t~nondet21.offset : int;
    var usb_deregister_#in~23.offset : int;
    var ULTIMATE.init_#t~nondet55.base : int;
    var ULTIMATE.init_#t~nondet309.offset : int;
    var keyspan_setup_#t~ret203 : int;
    var usb_fill_int_urb_~transfer_buffer.offset : int;
    var usb_alloc_coherent_#in~dma.base : int;
    var strlcat_#in~5 : int;
    var usb_fill_int_urb_#in~interval : int;
    var ldv_check_return_value_#in~res : int;
    var usb_fill_int_urb_~interval : int;
    var keyspan_probe_#t~ret272.base : int;
    var keyspan_setup_#t~nondet217.offset : int;
    var usb_make_path_#in~buf.offset : int;
    var write~int_old_#memory_$Pointer$.base : [int][int]int;
    var usb_endpoint_is_int_in_~tmp___0~24 : int;
    var keyspan_probe_#t~mem290.offset : int;
    var keyspan_probe_#t~ret250.base : int;
    var usb_endpoint_is_int_in_#in~epd.offset : int;
    var keyspan_probe_#t~ret256 : int;
    var __create_pipe_~dev.base : int;

  loc0:
    havoc ULTIMATE.init_#t~nondet200.offset, ULTIMATE.init_#t~nondet197.offset, ULTIMATE.init_#t~nondet188.offset, ULTIMATE.init_#t~union319.dep_map.name.offset, ULTIMATE.init_#t~nondet194.offset, ULTIMATE.init_#t~nondet81.base, ULTIMATE.init_#t~nondet54.offset, ULTIMATE.init_#t~nondet189.base, ULTIMATE.init_#t~nondet190.base, ULTIMATE.init_#t~nondet187.base, ULTIMATE.init_#t~nondet188.base, ULTIMATE.init_#t~nondet200.base, ULTIMATE.init_#t~nondet201.base, ULTIMATE.init_#t~nondet80.base, ULTIMATE.init_#t~nondet191.offset, ULTIMATE.init_#t~nondet194.base, ULTIMATE.init_#t~nondet199.offset, ULTIMATE.init_#t~nondet192.base, ULTIMATE.init_#t~nondet196.base, ULTIMATE.init_#t~nondet309.base, ULTIMATE.init_#t~nondet187.offset, ULTIMATE.init_#t~union319.__padding, ULTIMATE.init_#t~nondet79.offset, ULTIMATE.init_#t~nondet193.offset, ULTIMATE.init_#t~union319.dep_map.key.base, ULTIMATE.init_#t~nondet78.offset, ULTIMATE.init_#t~nondet198.offset, ULTIMATE.init_#t~union319.dep_map.class_cache.base, ULTIMATE.init_#t~union319.dep_map.name.base, ULTIMATE.init_#t~nondet55.offset, ULTIMATE.init_#t~nondet189.offset, ULTIMATE.init_#t~nondet186.offset, ULTIMATE.init_#t~nondet80.offset, ULTIMATE.init_#t~nondet192.offset, ULTIMATE.init_#t~nondet56.base, ULTIMATE.init_#t~nondet54.base, ULTIMATE.init_#t~nondet53.base, ULTIMATE.init_#t~nondet55.base, ULTIMATE.init_#t~nondet309.offset, ULTIMATE.init_#t~nondet56.offset, ULTIMATE.init_#t~nondet198.base, ULTIMATE.init_#t~nondet199.base, ULTIMATE.init_#t~nondet79.base, ULTIMATE.init_#t~nondet78.base, ULTIMATE.init_#t~union319.dep_map.ip, ULTIMATE.init_#t~union319.dep_map.key.offset, ULTIMATE.init_#t~nondet201.offset, ULTIMATE.init_#t~nondet186.base, ULTIMATE.init_#t~nondet190.offset, ULTIMATE.init_#t~nondet196.offset, ULTIMATE.init_#t~nondet191.base, ULTIMATE.init_#t~nondet193.base, ULTIMATE.init_#t~nondet195.base, ULTIMATE.init_#t~nondet197.base, ULTIMATE.init_#t~nondet81.offset, ULTIMATE.init_#t~nondet53.offset, ULTIMATE.init_#t~nondet195.offset, ULTIMATE.init_#t~union319.dep_map.cpu, ULTIMATE.init_#t~union319.dep_map.class_cache.offset;
    #NULL.offset, #NULL.base := 0, 0;
    #valid := #valid[0 := 0];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 4;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#debug.base, ~#debug.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#debug.base, 0, ~#debug.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 64;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#keyspan_key_table.base, ~#keyspan_key_table.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 128, ~#keyspan_key_table.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 200, ~#keyspan_key_table.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 165, ~#keyspan_key_table.offset + 10;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 168, ~#keyspan_key_table.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 159, ~#keyspan_key_table.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 163, ~#keyspan_key_table.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 18;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 20;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 22;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 119, ~#keyspan_key_table.offset + 24;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 115, ~#keyspan_key_table.offset + 26;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 28;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 30;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 32;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 114, ~#keyspan_key_table.offset + 34;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 36;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 103, ~#keyspan_key_table.offset + 38;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 40;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 113, ~#keyspan_key_table.offset + 42;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 105, ~#keyspan_key_table.offset + 44;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 28, ~#keyspan_key_table.offset + 46;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 106, ~#keyspan_key_table.offset + 48;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 50;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 52;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 108, ~#keyspan_key_table.offset + 54;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 56;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 55, ~#keyspan_key_table.offset + 58;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 0, ~#keyspan_key_table.offset + 60;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_key_table.base, 139, ~#keyspan_key_table.offset + 62;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    ~LDV_IN_INTERRUPT := 0;
    ~res_keyspan_probe_9 := 0;
    ~ldv_urb_state := 0;
    ~ldv_coherent_state := 0;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 24;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#keyspan_table.base, ~#keyspan_table.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_table.base, 3, ~#keyspan_table.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_table.base, 1741, ~#keyspan_table.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_table.base, 514, ~#keyspan_table.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_table.base, 0, ~#keyspan_table.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, ~#keyspan_table.base, 0, ~#keyspan_table.offset + 8;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_table.base, 0, ~#keyspan_table.offset + 10;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_table.base, 0, ~#keyspan_table.offset + 11;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_table.base, 0, ~#keyspan_table.offset + 12;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_table.base, 0, ~#keyspan_table.offset + 13;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_table.base, 0, ~#keyspan_table.offset + 14;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_table.base, 0, ~#keyspan_table.offset + 15;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#keyspan_table.base, 0, ~#keyspan_table.offset + 16;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet53.offset, ULTIMATE.init_#t~nondet53.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 20;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet54.offset, ULTIMATE.init_#t~nondet54.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 208;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet55.offset, ULTIMATE.init_#t~nondet55.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 47;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet56.offset, ULTIMATE.init_#t~nondet56.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    ~descriptor.function.offset, ~descriptor.filename.base, ~descriptor.lineno, ~descriptor.format.offset, ~descriptor.enabled, ~descriptor.function.base, ~descriptor.modname.offset, ~descriptor.filename.offset, ~descriptor.format.base, ~descriptor.modname.base, ~descriptor.flags := ULTIMATE.init_#t~nondet54.offset, ULTIMATE.init_#t~nondet55.base, 163, ULTIMATE.init_#t~nondet56.offset, 0, ULTIMATE.init_#t~nondet54.base, ULTIMATE.init_#t~nondet53.offset, ULTIMATE.init_#t~nondet55.offset, ULTIMATE.init_#t~nondet56.base, ULTIMATE.init_#t~nondet53.base, 0;
    havoc ULTIMATE.init_#t~nondet53.offset, ULTIMATE.init_#t~nondet53.base;
    havoc ULTIMATE.init_#t~nondet54.offset, ULTIMATE.init_#t~nondet54.base;
    havoc ULTIMATE.init_#t~nondet55.offset, ULTIMATE.init_#t~nondet55.base;
    havoc ULTIMATE.init_#t~nondet56.offset, ULTIMATE.init_#t~nondet56.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet78.offset, ULTIMATE.init_#t~nondet78.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 19;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet79.base, ULTIMATE.init_#t~nondet79.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 208;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet80.offset, ULTIMATE.init_#t~nondet80.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 61;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet81.base, ULTIMATE.init_#t~nondet81.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    ~descriptor___0.modname.base, ~descriptor___0.function.offset, ~descriptor___0.flags, ~descriptor___0.modname.offset, ~descriptor___0.enabled, ~descriptor___0.filename.offset, ~descriptor___0.lineno, ~descriptor___0.filename.base, ~descriptor___0.function.base, ~descriptor___0.format.offset, ~descriptor___0.format.base := ULTIMATE.init_#t~nondet78.base, ULTIMATE.init_#t~nondet79.offset, 0, ULTIMATE.init_#t~nondet78.offset, 0, ULTIMATE.init_#t~nondet80.offset, 321, ULTIMATE.init_#t~nondet80.base, ULTIMATE.init_#t~nondet79.base, ULTIMATE.init_#t~nondet81.offset, ULTIMATE.init_#t~nondet81.base;
    havoc ULTIMATE.init_#t~nondet78.offset, ULTIMATE.init_#t~nondet78.base;
    havoc ULTIMATE.init_#t~nondet79.base, ULTIMATE.init_#t~nondet79.offset;
    havoc ULTIMATE.init_#t~nondet80.offset, ULTIMATE.init_#t~nondet80.base;
    havoc ULTIMATE.init_#t~nondet81.base, ULTIMATE.init_#t~nondet81.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet186.base, ULTIMATE.init_#t~nondet186.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 14;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet187.offset, ULTIMATE.init_#t~nondet187.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 208;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet188.offset, ULTIMATE.init_#t~nondet188.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 47;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet189.offset, ULTIMATE.init_#t~nondet189.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    ~descriptor___1.enabled, ~descriptor___1.filename.offset, ~descriptor___1.flags, ~descriptor___1.modname.offset, ~descriptor___1.filename.base, ~descriptor___1.format.offset, ~descriptor___1.modname.base, ~descriptor___1.format.base, ~descriptor___1.function.offset, ~descriptor___1.function.base, ~descriptor___1.lineno := 0, ULTIMATE.init_#t~nondet188.offset, 0, ULTIMATE.init_#t~nondet186.offset, ULTIMATE.init_#t~nondet188.base, ULTIMATE.init_#t~nondet189.offset, ULTIMATE.init_#t~nondet186.base, ULTIMATE.init_#t~nondet189.base, ULTIMATE.init_#t~nondet187.offset, ULTIMATE.init_#t~nondet187.base, 345;
    havoc ULTIMATE.init_#t~nondet186.base, ULTIMATE.init_#t~nondet186.offset;
    havoc ULTIMATE.init_#t~nondet187.offset, ULTIMATE.init_#t~nondet187.base;
    havoc ULTIMATE.init_#t~nondet188.offset, ULTIMATE.init_#t~nondet188.base;
    havoc ULTIMATE.init_#t~nondet189.offset, ULTIMATE.init_#t~nondet189.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet190.offset, ULTIMATE.init_#t~nondet190.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 14;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet191.base, ULTIMATE.init_#t~nondet191.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 208;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet192.base, ULTIMATE.init_#t~nondet192.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 57;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet193.base, ULTIMATE.init_#t~nondet193.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    ~descriptor___2.filename.offset, ~descriptor___2.modname.base, ~descriptor___2.format.offset, ~descriptor___2.flags, ~descriptor___2.filename.base, ~descriptor___2.enabled, ~descriptor___2.format.base, ~descriptor___2.lineno, ~descriptor___2.function.offset, ~descriptor___2.modname.offset, ~descriptor___2.function.base := ULTIMATE.init_#t~nondet192.offset, ULTIMATE.init_#t~nondet190.base, ULTIMATE.init_#t~nondet193.offset, 0, ULTIMATE.init_#t~nondet192.base, 0, ULTIMATE.init_#t~nondet193.base, 353, ULTIMATE.init_#t~nondet191.offset, ULTIMATE.init_#t~nondet190.offset, ULTIMATE.init_#t~nondet191.base;
    havoc ULTIMATE.init_#t~nondet190.offset, ULTIMATE.init_#t~nondet190.base;
    havoc ULTIMATE.init_#t~nondet191.base, ULTIMATE.init_#t~nondet191.offset;
    havoc ULTIMATE.init_#t~nondet192.base, ULTIMATE.init_#t~nondet192.offset;
    havoc ULTIMATE.init_#t~nondet193.base, ULTIMATE.init_#t~nondet193.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet194.base, ULTIMATE.init_#t~nondet194.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 14;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet195.base, ULTIMATE.init_#t~nondet195.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 208;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet196.base, ULTIMATE.init_#t~nondet196.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 50;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet197.base, ULTIMATE.init_#t~nondet197.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    ~descriptor___3.filename.offset, ~descriptor___3.modname.base, ~descriptor___3.filename.base, ~descriptor___3.format.offset, ~descriptor___3.lineno, ~descriptor___3.format.base, ~descriptor___3.flags, ~descriptor___3.function.offset, ~descriptor___3.modname.offset, ~descriptor___3.function.base, ~descriptor___3.enabled := ULTIMATE.init_#t~nondet196.offset, ULTIMATE.init_#t~nondet194.base, ULTIMATE.init_#t~nondet196.base, ULTIMATE.init_#t~nondet197.offset, 361, ULTIMATE.init_#t~nondet197.base, 0, ULTIMATE.init_#t~nondet195.offset, ULTIMATE.init_#t~nondet194.offset, ULTIMATE.init_#t~nondet195.base, 0;
    havoc ULTIMATE.init_#t~nondet194.base, ULTIMATE.init_#t~nondet194.offset;
    havoc ULTIMATE.init_#t~nondet195.base, ULTIMATE.init_#t~nondet195.offset;
    havoc ULTIMATE.init_#t~nondet196.base, ULTIMATE.init_#t~nondet196.offset;
    havoc ULTIMATE.init_#t~nondet197.base, ULTIMATE.init_#t~nondet197.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet198.base, ULTIMATE.init_#t~nondet198.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 14;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet199.offset, ULTIMATE.init_#t~nondet199.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 208;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet200.offset, ULTIMATE.init_#t~nondet200.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 23;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet201.offset, ULTIMATE.init_#t~nondet201.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    ~descriptor___4.filename.base, ~descriptor___4.function.offset, ~descriptor___4.modname.offset, ~descriptor___4.flags, ~descriptor___4.format.offset, ~descriptor___4.enabled, ~descriptor___4.format.base, ~descriptor___4.filename.offset, ~descriptor___4.function.base, ~descriptor___4.lineno, ~descriptor___4.modname.base := ULTIMATE.init_#t~nondet200.base, ULTIMATE.init_#t~nondet199.offset, ULTIMATE.init_#t~nondet198.offset, 0, ULTIMATE.init_#t~nondet201.offset, 0, ULTIMATE.init_#t~nondet201.base, ULTIMATE.init_#t~nondet200.offset, ULTIMATE.init_#t~nondet199.base, 365, ULTIMATE.init_#t~nondet198.base;
    havoc ULTIMATE.init_#t~nondet198.base, ULTIMATE.init_#t~nondet198.offset;
    havoc ULTIMATE.init_#t~nondet199.offset, ULTIMATE.init_#t~nondet199.base;
    havoc ULTIMATE.init_#t~nondet200.offset, ULTIMATE.init_#t~nondet200.base;
    havoc ULTIMATE.init_#t~nondet201.offset, ULTIMATE.init_#t~nondet201.base;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 281;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ~#keyspan_driver.base, ~#keyspan_driver.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    ULTIMATE.init_#t~nondet309.base, ULTIMATE.init_#t~nondet309.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~nondet309.base, ~#keyspan_driver.offset, 8, ULTIMATE.init_#t~nondet309.offset, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~keyspan_probe.base_1, ~#keyspan_driver.offset + 8, 8, v_rep#funAddr~keyspan_probe.offset_1, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~keyspan_disconnect.base_1, ~#keyspan_driver.offset + 16, 8, v_rep#funAddr~keyspan_disconnect.offset_1, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 24, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 32, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 40, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 48, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 56, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 64, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ~#keyspan_table.base, ~#keyspan_driver.offset + 72, 8, ~#keyspan_table.offset, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#keyspan_driver.base, 0, ~#keyspan_driver.offset + 80;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#keyspan_driver.base, 0, ~#keyspan_driver.offset + 84;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#keyspan_driver.base, 0, ~#keyspan_driver.offset + 88;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 92, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 100, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 108, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 116, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 124, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#keyspan_driver.base, 0, ~#keyspan_driver.offset + 132;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#keyspan_driver.base, 0, ~#keyspan_driver.offset + 136;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[0], ~#keyspan_driver.offset + 80;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[1], ~#keyspan_driver.offset + 81;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[2], ~#keyspan_driver.offset + 82;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[3], ~#keyspan_driver.offset + 83;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[4], ~#keyspan_driver.offset + 84;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[5], ~#keyspan_driver.offset + 85;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[6], ~#keyspan_driver.offset + 86;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[7], ~#keyspan_driver.offset + 87;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[8], ~#keyspan_driver.offset + 88;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[9], ~#keyspan_driver.offset + 89;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[10], ~#keyspan_driver.offset + 90;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[11], ~#keyspan_driver.offset + 91;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[12], ~#keyspan_driver.offset + 92;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[13], ~#keyspan_driver.offset + 93;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[14], ~#keyspan_driver.offset + 94;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[15], ~#keyspan_driver.offset + 95;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[16], ~#keyspan_driver.offset + 96;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[17], ~#keyspan_driver.offset + 97;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[18], ~#keyspan_driver.offset + 98;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.__padding[19], ~#keyspan_driver.offset + 99;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union319.dep_map.key.base, ~#keyspan_driver.offset + 100, 8, ULTIMATE.init_#t~union319.dep_map.key.offset, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union319.dep_map.class_cache.base[0], ~#keyspan_driver.offset + 108, 8, ULTIMATE.init_#t~union319.dep_map.class_cache.offset[0], ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union319.dep_map.class_cache.base[1], ~#keyspan_driver.offset + 116, 8, ULTIMATE.init_#t~union319.dep_map.class_cache.offset[1], ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := ULTIMATE.init_#t~union319.dep_map.name.base, ~#keyspan_driver.offset + 124, 8, ULTIMATE.init_#t~union319.dep_map.name.offset, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.dep_map.cpu, ~#keyspan_driver.offset + 132;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, ~#keyspan_driver.base, ULTIMATE.init_#t~union319.dep_map.ip, ~#keyspan_driver.offset + 136;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 144, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 152, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 160, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 168, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 176, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 184, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 1, ~#keyspan_driver.base, 0, ~#keyspan_driver.offset + 192;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 193, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 201, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 209, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 217, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 225, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 233, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 241, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 249, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := 0, ~#keyspan_driver.offset + 257, 8, 0, ~#keyspan_driver.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#keyspan_driver.base, 0, ~#keyspan_driver.offset + 265;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#keyspan_driver.base, 0, ~#keyspan_driver.offset + 269;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#keyspan_driver.base, 0, ~#keyspan_driver.offset + 273;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, ~#keyspan_driver.base, 0, ~#keyspan_driver.offset + 277;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc ULTIMATE.init_#t~nondet309.base, ULTIMATE.init_#t~nondet309.offset;
    havoc ULTIMATE.init_#t~union319.dep_map.key.base, ULTIMATE.init_#t~union319.dep_map.name.offset, ULTIMATE.init_#t~union319.dep_map.cpu, ULTIMATE.init_#t~union319.dep_map.class_cache.base, ULTIMATE.init_#t~union319.__padding, ULTIMATE.init_#t~union319.dep_map.class_cache.offset, ULTIMATE.init_#t~union319.dep_map.name.base, ULTIMATE.init_#t~union319.dep_map.ip, ULTIMATE.init_#t~union319.dep_map.key.offset;
    havoc main_#res;
    havoc main_~var_keyspan_probe_9_p1~354.offset, main_#t~ret313, main_#t~nondet314, main_#t~nondet315, main_#t~ret316, main_~var_keyspan_probe_9_p1~354.base, main_~tmp___8~354, main_~ldv_s_keyspan_driver_usb_driver~354, main_~tmp___7~354, main_~var_group1~354.base, main_~tmp___9~354, main_~var_group1~354.offset;
    havoc main_~var_group1~354.base, main_~var_group1~354.offset;
    havoc main_~var_keyspan_probe_9_p1~354.offset, main_~var_keyspan_probe_9_p1~354.base;
    havoc main_~tmp___7~354;
    havoc main_~ldv_s_keyspan_driver_usb_driver~354;
    havoc main_~tmp___8~354;
    havoc main_~tmp___9~354;
    ~LDV_IN_INTERRUPT := 1;
    havoc usb_keyspan_init_#res;
    havoc usb_keyspan_init_~result~340, usb_keyspan_init_#t~ret312, usb_keyspan_init_#t~nondet311.offset, usb_keyspan_init_#t~ret310, usb_keyspan_init_#t~nondet311.base;
    havoc usb_keyspan_init_~result~340;
    usb_register_#in~driver.base, usb_register_#in~driver.offset := ~#keyspan_driver.base, ~#keyspan_driver.offset;
    havoc usb_register_#res;
    havoc usb_register_#t~nondet21.offset, usb_register_~tmp___7~52, usb_register_~driver.base, usb_register_#t~ret22, usb_register_~driver.offset, usb_register_#t~nondet21.base;
    usb_register_~driver.base, usb_register_~driver.offset := usb_register_#in~driver.base, usb_register_#in~driver.offset;
    havoc usb_register_~tmp___7~52;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 15;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    usb_register_#t~nondet21.offset, usb_register_#t~nondet21.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    usb_register_driver_#in~19.offset, usb_register_driver_#in~18.offset, usb_register_driver_#in~20.offset, usb_register_driver_#in~20.base, usb_register_driver_#in~18.base, usb_register_driver_#in~19.base := ~#__this_module.offset, usb_register_~driver.offset, usb_register_#t~nondet21.offset, usb_register_#t~nondet21.base, usb_register_~driver.base, ~#__this_module.base;
    havoc usb_register_driver_#res;
    usb_register_#t~ret22 := usb_register_driver_#res;
    assume 0 <= usb_register_#t~ret22 + 2147483648 && usb_register_#t~ret22 <= 2147483647;
    usb_register_~tmp___7~52 := usb_register_#t~ret22;
    havoc usb_register_#t~nondet21.offset, usb_register_#t~nondet21.base;
    havoc usb_register_#t~ret22;
    usb_register_#res := usb_register_~tmp___7~52;
    usb_keyspan_init_#t~ret310 := usb_register_#res;
    assume 0 <= usb_keyspan_init_#t~ret310 + 2147483648 && usb_keyspan_init_#t~ret310 <= 2147483647;
    usb_keyspan_init_~result~340 := usb_keyspan_init_#t~ret310;
    havoc usb_keyspan_init_#t~ret310;
    assume usb_keyspan_init_~result~340 == 0;
    usb_keyspan_init_#res := usb_keyspan_init_~result~340;
    main_#t~ret313 := usb_keyspan_init_#res;
    assume 0 <= main_#t~ret313 + 2147483648 && main_#t~ret313 <= 2147483647;
    main_~tmp___7~354 := main_#t~ret313;
    havoc main_#t~ret313;
    assume main_~tmp___7~354 == 0;
    main_~ldv_s_keyspan_driver_usb_driver~354 := 0;
    assume main_#t~nondet314 <= 2147483647 && 0 <= main_#t~nondet314 + 2147483648;
    main_~tmp___9~354 := main_#t~nondet314;
    havoc main_#t~nondet314;
    assume !(main_~tmp___9~354 == 0);
    assume main_#t~nondet315 <= 2147483647 && 0 <= main_#t~nondet315 + 2147483648;
    main_~tmp___8~354 := main_#t~nondet315;
    havoc main_#t~nondet315;
    assume main_~tmp___8~354 == 0;
    assume main_~ldv_s_keyspan_driver_usb_driver~354 == 0;
    keyspan_probe_#in~id.base, keyspan_probe_#in~interface.offset, keyspan_probe_#in~id.offset, keyspan_probe_#in~interface.base := main_~var_keyspan_probe_9_p1~354.base, main_~var_group1~354.offset, main_~var_keyspan_probe_9_p1~354.offset, main_~var_group1~354.base;
    havoc keyspan_probe_#res;
    havoc keyspan_probe_#t~nondet270.offset, keyspan_probe_#t~mem297.offset, keyspan_probe_#t~nondet267.offset, keyspan_probe_#t~mem288.offset, keyspan_probe_#t~mem264.offset, keyspan_probe_#t~ret272.offset, keyspan_probe_#t~ret268, keyspan_probe_~id.offset, keyspan_probe_#t~mem257.base, keyspan_probe_#t~mem264.base, keyspan_probe_#t~memcpy273.offset, keyspan_probe_#t~ret253.base, keyspan_probe_#t~nondet267.base, keyspan_probe_#t~mem300.offset, keyspan_probe_~udev~284.offset, keyspan_probe_#t~mem287.offset, keyspan_probe_#t~mem289, keyspan_probe_#t~mem260.base, keyspan_probe_#t~mem255.base, keyspan_probe_~interface.base, keyspan_probe_~id.base, keyspan_probe_~remote~284.offset, keyspan_probe_#t~mem299.base, keyspan_probe_#t~mem297.base, keyspan_probe_#t~ret253.offset, keyspan_probe_#t~mem293.base, keyspan_probe_~__ret~284.offset, keyspan_probe_~tmp___8~284.base, keyspan_probe_~input_dev~284.base, keyspan_probe_~endpoint~284.offset, keyspan_probe_#t~ret243.offset, keyspan_probe_#t~ret265, keyspan_probe_#t~mem292, keyspan_probe_#t~ret240.offset, keyspan_probe_~remote~284.base, keyspan_probe_#t~mem299.offset, keyspan_probe_~tmp~284, keyspan_probe_#t~ret269, keyspan_probe_#t~memcpy273.base, keyspan_probe_#t~mem283.base, keyspan_probe_#t~mem290.base, keyspan_probe_#t~nondet262.base, keyspan_probe_#t~mem261.base, keyspan_probe_#t~mem258.base, keyspan_probe_#t~mem255.offset, keyspan_probe_#t~mem283.offset, keyspan_probe_#t~mem284, keyspan_probe_#t~mem261.offset, keyspan_probe_#t~mem280, keyspan_probe_~tmp___9~284.offset, keyspan_probe_~tmp___7~284.base, keyspan_probe_~tmp___7~284.offset, keyspan_probe_#t~mem300.base, keyspan_probe_#t~mem294.base, keyspan_probe_~tmp___11~284, keyspan_probe_#t~mem287.base, keyspan_probe_#t~mem295, keyspan_probe_~i~284, keyspan_probe_#t~ret285, keyspan_probe_#t~mem241.base, keyspan_probe_#t~mem294.offset, keyspan_probe_#t~mem301, keyspan_probe_~tmp___9~284.base, keyspan_probe_#t~mem258.offset, keyspan_probe_#t~mem252.offset, keyspan_probe_~tmp___10~284, keyspan_probe_#t~mem293.offset, keyspan_probe_#t~ret240.base, keyspan_probe_~endpoint~284.base, keyspan_probe_#t~mem286.offset, keyspan_probe_#t~ret242.offset, keyspan_probe_#t~nondet270.base, keyspan_probe_#t~mem286.base, keyspan_probe_#t~ret259, keyspan_probe_#t~ret244.base, keyspan_probe_~error~284, keyspan_probe_#t~ret242.base, keyspan_probe_#t~mem288.base, keyspan_probe_#t~mem257.offset, keyspan_probe_~udev~284.base, keyspan_probe_~__ret~284.base, keyspan_probe_#t~ret263, keyspan_probe_~interface.offset, keyspan_probe_#t~mem241.offset, keyspan_probe_~__len~284, keyspan_probe_#t~ret272.base, keyspan_probe_#t~ret244.offset, keyspan_probe_#t~mem260.offset, keyspan_probe_#t~nondet266, keyspan_probe_#t~mem252.base, keyspan_probe_#t~ret250.offset, keyspan_probe_#t~nondet262.offset, keyspan_probe_#t~ret298, keyspan_probe_#t~mem290.offset, keyspan_probe_#t~ret250.base, keyspan_probe_#t~ret271, keyspan_probe_~tmp___8~284.offset, keyspan_probe_#t~ret243.base, keyspan_probe_#t~ret256, keyspan_probe_~input_dev~284.offset;
    keyspan_probe_~interface.offset, keyspan_probe_~interface.base := keyspan_probe_#in~interface.offset, keyspan_probe_#in~interface.base;
    keyspan_probe_~id.offset, keyspan_probe_~id.base := keyspan_probe_#in~id.offset, keyspan_probe_#in~id.base;
    havoc keyspan_probe_~udev~284.base, keyspan_probe_~udev~284.offset;
    havoc keyspan_probe_~tmp___7~284.base, keyspan_probe_~tmp___7~284.offset;
    havoc keyspan_probe_~endpoint~284.offset, keyspan_probe_~endpoint~284.base;
    havoc keyspan_probe_~remote~284.offset, keyspan_probe_~remote~284.base;
    havoc keyspan_probe_~input_dev~284.base, keyspan_probe_~input_dev~284.offset;
    havoc keyspan_probe_~i~284;
    havoc keyspan_probe_~error~284;
    havoc keyspan_probe_~tmp___8~284.offset, keyspan_probe_~tmp___8~284.base;
    havoc keyspan_probe_~tmp___9~284.offset, keyspan_probe_~tmp___9~284.base;
    havoc keyspan_probe_~tmp___10~284;
    havoc keyspan_probe_~__len~284;
    havoc keyspan_probe_~__ret~284.base, keyspan_probe_~__ret~284.offset;
    havoc keyspan_probe_~tmp___11~284;
    havoc keyspan_probe_~tmp~284;
    interface_to_usbdev_#in~intf.base, interface_to_usbdev_#in~intf.offset := keyspan_probe_~interface.base, keyspan_probe_~interface.offset;
    havoc interface_to_usbdev_#res.base, interface_to_usbdev_#res.offset;
    havoc interface_to_usbdev_~intf.offset, interface_to_usbdev_#t~mem15.offset, interface_to_usbdev_#t~mem15.base, interface_to_usbdev_~__mptr~44.base, interface_to_usbdev_~intf.base, interface_to_usbdev_~__mptr~44.offset;
    interface_to_usbdev_~intf.offset, interface_to_usbdev_~intf.base := interface_to_usbdev_#in~intf.offset, interface_to_usbdev_#in~intf.base;
    havoc interface_to_usbdev_~__mptr~44.base, interface_to_usbdev_~__mptr~44.offset;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := interface_to_usbdev_~intf.base, 8, interface_to_usbdev_~intf.offset + 68;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    interface_to_usbdev_#t~mem15.offset, interface_to_usbdev_#t~mem15.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    interface_to_usbdev_~__mptr~44.base, interface_to_usbdev_~__mptr~44.offset := interface_to_usbdev_#t~mem15.base, interface_to_usbdev_#t~mem15.offset;
    havoc interface_to_usbdev_#t~mem15.offset, interface_to_usbdev_#t~mem15.base;
    interface_to_usbdev_#res.base, interface_to_usbdev_#res.offset := interface_to_usbdev_~__mptr~44.base, interface_to_usbdev_~__mptr~44.offset - 131;
    keyspan_probe_#t~ret240.base, keyspan_probe_#t~ret240.offset := interface_to_usbdev_#res.base, interface_to_usbdev_#res.offset;
    keyspan_probe_~tmp___7~284.base, keyspan_probe_~tmp___7~284.offset := keyspan_probe_#t~ret240.base, keyspan_probe_#t~ret240.offset;
    havoc keyspan_probe_#t~ret240.base, keyspan_probe_#t~ret240.offset;
    keyspan_probe_~udev~284.base, keyspan_probe_~udev~284.offset := keyspan_probe_~tmp___7~284.base, keyspan_probe_~tmp___7~284.offset;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~interface.base, 8, keyspan_probe_~interface.offset + 8;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem241.base, keyspan_probe_#t~mem241.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    keyspan_get_in_endpoint_#in~iface.offset, keyspan_get_in_endpoint_#in~iface.base := keyspan_probe_#t~mem241.offset, keyspan_probe_#t~mem241.base;
    havoc keyspan_get_in_endpoint_#res.offset, keyspan_get_in_endpoint_#res.base;
    havoc keyspan_get_in_endpoint_#t~mem238.base, keyspan_get_in_endpoint_#t~ret239, keyspan_get_in_endpoint_~endpoint~275.base, keyspan_get_in_endpoint_~tmp___7~275, keyspan_get_in_endpoint_#t~mem237, keyspan_get_in_endpoint_~iface.base, keyspan_get_in_endpoint_~i~275, keyspan_get_in_endpoint_~endpoint~275.offset, keyspan_get_in_endpoint_#t~mem238.offset, keyspan_get_in_endpoint_~iface.offset;
    keyspan_get_in_endpoint_~iface.base, keyspan_get_in_endpoint_~iface.offset := keyspan_get_in_endpoint_#in~iface.base, keyspan_get_in_endpoint_#in~iface.offset;
    havoc keyspan_get_in_endpoint_~endpoint~275.base, keyspan_get_in_endpoint_~endpoint~275.offset;
    havoc keyspan_get_in_endpoint_~i~275;
    havoc keyspan_get_in_endpoint_~tmp___7~275;
    keyspan_get_in_endpoint_~i~275 := 0;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := keyspan_get_in_endpoint_~iface.base, keyspan_get_in_endpoint_~iface.offset + 4, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    keyspan_get_in_endpoint_#t~mem237 := read~int_#value;
    assume (keyspan_get_in_endpoint_#t~mem237 < 256 + 256 && keyspan_get_in_endpoint_~i~275 + 256 < keyspan_get_in_endpoint_#t~mem237) && 256 <= keyspan_get_in_endpoint_#t~mem237;
    havoc keyspan_get_in_endpoint_#t~mem237;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_get_in_endpoint_~iface.base, 8, keyspan_get_in_endpoint_~iface.offset + 9;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_get_in_endpoint_#t~mem238.base, keyspan_get_in_endpoint_#t~mem238.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    keyspan_get_in_endpoint_~endpoint~275.base, keyspan_get_in_endpoint_~endpoint~275.offset := keyspan_get_in_endpoint_#t~mem238.base, 63 * keyspan_get_in_endpoint_~i~275 + keyspan_get_in_endpoint_#t~mem238.offset;
    havoc keyspan_get_in_endpoint_#t~mem238.base, keyspan_get_in_endpoint_#t~mem238.offset;
    usb_endpoint_is_int_in_#in~epd.offset, usb_endpoint_is_int_in_#in~epd.base := keyspan_get_in_endpoint_~endpoint~275.offset, keyspan_get_in_endpoint_~endpoint~275.base;
    havoc usb_endpoint_is_int_in_#res;
    havoc usb_endpoint_is_int_in_#t~ret11, usb_endpoint_is_int_in_~tmp___1~24, usb_endpoint_is_int_in_~epd.offset, usb_endpoint_is_int_in_~tmp___0~24, usb_endpoint_is_int_in_#t~ret12, usb_endpoint_is_int_in_~epd.base, usb_endpoint_is_int_in_~tmp~24;
    usb_endpoint_is_int_in_~epd.offset, usb_endpoint_is_int_in_~epd.base := usb_endpoint_is_int_in_#in~epd.offset, usb_endpoint_is_int_in_#in~epd.base;
    havoc usb_endpoint_is_int_in_~tmp~24;
    havoc usb_endpoint_is_int_in_~tmp___0~24;
    havoc usb_endpoint_is_int_in_~tmp___1~24;
    usb_endpoint_xfer_int_#in~epd.offset, usb_endpoint_xfer_int_#in~epd.base := usb_endpoint_is_int_in_~epd.offset, usb_endpoint_is_int_in_~epd.base;
    havoc usb_endpoint_xfer_int_#res;
    havoc usb_endpoint_xfer_int_~epd.base, usb_endpoint_xfer_int_~epd.offset, usb_endpoint_xfer_int_#t~mem10;
    usb_endpoint_xfer_int_~epd.base, usb_endpoint_xfer_int_~epd.offset := usb_endpoint_xfer_int_#in~epd.base, usb_endpoint_xfer_int_#in~epd.offset;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := usb_endpoint_xfer_int_~epd.base, usb_endpoint_xfer_int_~epd.offset + 3, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    usb_endpoint_xfer_int_#t~mem10 := read~int_#value;
    usb_endpoint_xfer_int_#res := 1;
    havoc usb_endpoint_xfer_int_#t~mem10;
    usb_endpoint_is_int_in_#t~ret11 := usb_endpoint_xfer_int_#res;
    assume usb_endpoint_is_int_in_#t~ret11 <= 2147483647 && 0 <= usb_endpoint_is_int_in_#t~ret11 + 2147483648;
    usb_endpoint_is_int_in_~tmp~24 := usb_endpoint_is_int_in_#t~ret11;
    havoc usb_endpoint_is_int_in_#t~ret11;
    assume !(usb_endpoint_is_int_in_~tmp~24 == 0);
    usb_endpoint_dir_in_#in~epd.offset, usb_endpoint_dir_in_#in~epd.base := usb_endpoint_is_int_in_~epd.offset, usb_endpoint_is_int_in_~epd.base;
    havoc usb_endpoint_dir_in_#res;
    havoc usb_endpoint_dir_in_#t~mem9, usb_endpoint_dir_in_~epd.offset, usb_endpoint_dir_in_~epd.base;
    usb_endpoint_dir_in_~epd.offset, usb_endpoint_dir_in_~epd.base := usb_endpoint_dir_in_#in~epd.offset, usb_endpoint_dir_in_#in~epd.base;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := usb_endpoint_dir_in_~epd.base, usb_endpoint_dir_in_~epd.offset + 2, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    usb_endpoint_dir_in_#t~mem9 := read~int_#value;
    usb_endpoint_dir_in_#res := 1;
    havoc usb_endpoint_dir_in_#t~mem9;
    usb_endpoint_is_int_in_#t~ret12 := usb_endpoint_dir_in_#res;
    assume 0 <= usb_endpoint_is_int_in_#t~ret12 + 2147483648 && usb_endpoint_is_int_in_#t~ret12 <= 2147483647;
    usb_endpoint_is_int_in_~tmp___0~24 := usb_endpoint_is_int_in_#t~ret12;
    havoc usb_endpoint_is_int_in_#t~ret12;
    assume !(usb_endpoint_is_int_in_~tmp___0~24 == 0);
    usb_endpoint_is_int_in_~tmp___1~24 := 1;
    usb_endpoint_is_int_in_#res := usb_endpoint_is_int_in_~tmp___1~24;
    keyspan_get_in_endpoint_#t~ret239 := usb_endpoint_is_int_in_#res;
    assume 0 <= keyspan_get_in_endpoint_#t~ret239 + 2147483648 && keyspan_get_in_endpoint_#t~ret239 <= 2147483647;
    keyspan_get_in_endpoint_~tmp___7~275 := keyspan_get_in_endpoint_#t~ret239;
    havoc keyspan_get_in_endpoint_#t~ret239;
    assume !(keyspan_get_in_endpoint_~tmp___7~275 == 0);
    keyspan_get_in_endpoint_#res.offset, keyspan_get_in_endpoint_#res.base := keyspan_get_in_endpoint_~endpoint~275.offset, keyspan_get_in_endpoint_~endpoint~275.base;
    keyspan_probe_#t~ret242.offset, keyspan_probe_#t~ret242.base := keyspan_get_in_endpoint_#res.offset, keyspan_get_in_endpoint_#res.base;
    keyspan_probe_~endpoint~284.offset, keyspan_probe_~endpoint~284.base := keyspan_probe_#t~ret242.offset, keyspan_probe_#t~ret242.base;
    havoc keyspan_probe_#t~mem241.base, keyspan_probe_#t~mem241.offset;
    havoc keyspan_probe_#t~ret242.offset, keyspan_probe_#t~ret242.base;
    assume !(keyspan_probe_~endpoint~284.base == 0);
    kzalloc_#in~size, kzalloc_#in~flags := 380, 208;
    havoc kzalloc_#res.base, kzalloc_#res.offset;
    havoc kzalloc_~size, kzalloc_~tmp~17.offset, kzalloc_#t~ret8.base, kzalloc_#t~ret8.offset, kzalloc_~flags, kzalloc_~tmp~17.base;
    kzalloc_~size := kzalloc_#in~size;
    kzalloc_~flags := kzalloc_#in~flags;
    havoc kzalloc_~tmp~17.offset, kzalloc_~tmp~17.base;
    kmalloc_#in~size := kzalloc_~size;
    havoc kmalloc_#in~flags;
    havoc kmalloc_#res.base, kmalloc_#res.offset;
    havoc kmalloc_~size, kmalloc_~tmp___2~14.offset, kmalloc_#t~ret7.offset, kmalloc_~tmp___2~14.base, kmalloc_#t~ret7.base, kmalloc_~flags;
    kmalloc_~size := kmalloc_#in~size;
    kmalloc_~flags := kmalloc_#in~flags;
    havoc kmalloc_~tmp___2~14.offset, kmalloc_~tmp___2~14.base;
    __kmalloc_#in~size, __kmalloc_#in~flags := kmalloc_~size, kmalloc_~flags;
    havoc __kmalloc_#res.offset, __kmalloc_#res.base;
    kmalloc_#t~ret7.offset, kmalloc_#t~ret7.base := __kmalloc_#res.offset, __kmalloc_#res.base;
    kmalloc_~tmp___2~14.offset, kmalloc_~tmp___2~14.base := kmalloc_#t~ret7.offset, kmalloc_#t~ret7.base;
    havoc kmalloc_#t~ret7.offset, kmalloc_#t~ret7.base;
    kmalloc_#res.base, kmalloc_#res.offset := kmalloc_~tmp___2~14.base, kmalloc_~tmp___2~14.offset;
    kzalloc_#t~ret8.base, kzalloc_#t~ret8.offset := kmalloc_#res.base, kmalloc_#res.offset;
    kzalloc_~tmp~17.offset, kzalloc_~tmp~17.base := kzalloc_#t~ret8.offset, kzalloc_#t~ret8.base;
    havoc kzalloc_#t~ret8.base, kzalloc_#t~ret8.offset;
    kzalloc_#res.base, kzalloc_#res.offset := kzalloc_~tmp~17.base, kzalloc_~tmp~17.offset;
    keyspan_probe_#t~ret243.offset, keyspan_probe_#t~ret243.base := kzalloc_#res.offset, kzalloc_#res.base;
    keyspan_probe_~tmp___8~284.offset, keyspan_probe_~tmp___8~284.base := keyspan_probe_#t~ret243.offset, keyspan_probe_#t~ret243.base;
    havoc keyspan_probe_#t~ret243.offset, keyspan_probe_#t~ret243.base;
    keyspan_probe_~remote~284.offset, keyspan_probe_~remote~284.base := keyspan_probe_~tmp___8~284.offset, keyspan_probe_~tmp___8~284.base;
    havoc input_allocate_device_#res.base, input_allocate_device_#res.offset;
    keyspan_probe_#t~ret244.offset, keyspan_probe_#t~ret244.base := input_allocate_device_#res.offset, input_allocate_device_#res.base;
    keyspan_probe_~input_dev~284.base, keyspan_probe_~input_dev~284.offset := keyspan_probe_#t~ret244.base, keyspan_probe_#t~ret244.offset;
    havoc keyspan_probe_#t~ret244.offset, keyspan_probe_#t~ret244.base;
    assume !(keyspan_probe_~remote~284.base == 0);
    assume !(keyspan_probe_~input_dev~284.offset == 0);
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := keyspan_probe_~udev~284.base, keyspan_probe_~remote~284.offset + 264, 8, keyspan_probe_~udev~284.offset, keyspan_probe_~remote~284.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := keyspan_probe_~input_dev~284.base, keyspan_probe_~remote~284.offset + 272, 8, keyspan_probe_~input_dev~284.offset, keyspan_probe_~remote~284.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := keyspan_probe_~interface.base, keyspan_probe_~remote~284.offset + 280, 8, keyspan_probe_~interface.offset, keyspan_probe_~remote~284.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := keyspan_probe_~endpoint~284.base, keyspan_probe_~remote~284.offset + 288, 8, keyspan_probe_~endpoint~284.offset, keyspan_probe_~remote~284.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, keyspan_probe_~remote~284.base, -1, keyspan_probe_~remote~284.offset + 376;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    usb_alloc_coherent_#in~dev.base, usb_alloc_coherent_#in~mem_flags, usb_alloc_coherent_#in~dma.offset, usb_alloc_coherent_#in~dma.base, usb_alloc_coherent_#in~size, usb_alloc_coherent_#in~dev.offset := keyspan_probe_~udev~284.base, 32, keyspan_probe_~remote~284.offset + 308, keyspan_probe_~remote~284.base, 8, keyspan_probe_~udev~284.offset;
    havoc usb_alloc_coherent_#res.base, usb_alloc_coherent_#res.offset;
    havoc usb_alloc_coherent_~mem_flags, usb_alloc_coherent_~dma.offset, usb_alloc_coherent_~tmp___7~387.offset, usb_alloc_coherent_~tmp___7~387.base, usb_alloc_coherent_~dma.base, usb_alloc_coherent_~size, usb_alloc_coherent_#t~ret317.offset, usb_alloc_coherent_~arbitrary_memory~387.offset, usb_alloc_coherent_~dev.offset, usb_alloc_coherent_#t~ret317.base, usb_alloc_coherent_~dev.base, usb_alloc_coherent_~arbitrary_memory~387.base;
    usb_alloc_coherent_~dev.offset, usb_alloc_coherent_~dev.base := usb_alloc_coherent_#in~dev.offset, usb_alloc_coherent_#in~dev.base;
    usb_alloc_coherent_~size := usb_alloc_coherent_#in~size;
    usb_alloc_coherent_~mem_flags := usb_alloc_coherent_#in~mem_flags;
    usb_alloc_coherent_~dma.offset, usb_alloc_coherent_~dma.base := usb_alloc_coherent_#in~dma.offset, usb_alloc_coherent_#in~dma.base;
    havoc usb_alloc_coherent_~arbitrary_memory~387.offset, usb_alloc_coherent_~arbitrary_memory~387.base;
    havoc usb_alloc_coherent_~tmp___7~387.base, usb_alloc_coherent_~tmp___7~387.offset;
    havoc ldv_undefined_pointer_#res.base, ldv_undefined_pointer_#res.offset;
    usb_alloc_coherent_#t~ret317.offset, usb_alloc_coherent_#t~ret317.base := ldv_undefined_pointer_#res.offset, ldv_undefined_pointer_#res.base;
    usb_alloc_coherent_~tmp___7~387.base, usb_alloc_coherent_~tmp___7~387.offset := usb_alloc_coherent_#t~ret317.base, usb_alloc_coherent_#t~ret317.offset;
    havoc usb_alloc_coherent_#t~ret317.offset, usb_alloc_coherent_#t~ret317.base;
    usb_alloc_coherent_~arbitrary_memory~387.offset, usb_alloc_coherent_~arbitrary_memory~387.base := usb_alloc_coherent_~tmp___7~387.offset, usb_alloc_coherent_~tmp___7~387.base;
    assume !(usb_alloc_coherent_~arbitrary_memory~387.base == 0);
    ~ldv_coherent_state := ~ldv_coherent_state + 1;
    usb_alloc_coherent_#res.base, usb_alloc_coherent_#res.offset := usb_alloc_coherent_~arbitrary_memory~387.base, usb_alloc_coherent_~arbitrary_memory~387.offset;
    keyspan_probe_#t~ret250.base, keyspan_probe_#t~ret250.offset := usb_alloc_coherent_#res.base, usb_alloc_coherent_#res.offset;
    keyspan_probe_~tmp___9~284.offset, keyspan_probe_~tmp___9~284.base := keyspan_probe_#t~ret250.offset, keyspan_probe_#t~ret250.base;
    havoc keyspan_probe_#t~ret250.base, keyspan_probe_#t~ret250.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := keyspan_probe_~tmp___9~284.base, keyspan_probe_~remote~284.offset + 316, 8, keyspan_probe_~tmp___9~284.offset, keyspan_probe_~remote~284.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~remote~284.base, 8, keyspan_probe_~remote~284.offset + 316;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem252.offset, keyspan_probe_#t~mem252.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    assume !(keyspan_probe_#t~mem252.base == 0);
    havoc keyspan_probe_#t~mem252.offset, keyspan_probe_#t~mem252.base;
    usb_alloc_urb_#in~mem_flags, usb_alloc_urb_#in~iso_packets := 208, 0;
    havoc usb_alloc_urb_#res.base, usb_alloc_urb_#res.offset;
    havoc usb_alloc_urb_#t~ret318.base, usb_alloc_urb_~tmp___7~406.base, usb_alloc_urb_#t~ret318.offset, usb_alloc_urb_~tmp___7~406.offset, usb_alloc_urb_~arbitrary_memory~406.offset, usb_alloc_urb_~iso_packets, usb_alloc_urb_~arbitrary_memory~406.base, usb_alloc_urb_~mem_flags;
    usb_alloc_urb_~iso_packets := usb_alloc_urb_#in~iso_packets;
    usb_alloc_urb_~mem_flags := usb_alloc_urb_#in~mem_flags;
    havoc usb_alloc_urb_~arbitrary_memory~406.offset, usb_alloc_urb_~arbitrary_memory~406.base;
    havoc usb_alloc_urb_~tmp___7~406.base, usb_alloc_urb_~tmp___7~406.offset;
    havoc ldv_undefined_pointer_#res.base, ldv_undefined_pointer_#res.offset;
    usb_alloc_urb_#t~ret318.base, usb_alloc_urb_#t~ret318.offset := ldv_undefined_pointer_#res.base, ldv_undefined_pointer_#res.offset;
    usb_alloc_urb_~tmp___7~406.base, usb_alloc_urb_~tmp___7~406.offset := usb_alloc_urb_#t~ret318.base, usb_alloc_urb_#t~ret318.offset;
    havoc usb_alloc_urb_#t~ret318.base, usb_alloc_urb_#t~ret318.offset;
    usb_alloc_urb_~arbitrary_memory~406.offset, usb_alloc_urb_~arbitrary_memory~406.base := usb_alloc_urb_~tmp___7~406.offset, usb_alloc_urb_~tmp___7~406.base;
    assume !(usb_alloc_urb_~arbitrary_memory~406.offset == 0);
    ~ldv_urb_state := ~ldv_urb_state + 1;
    usb_alloc_urb_#res.base, usb_alloc_urb_#res.offset := usb_alloc_urb_~arbitrary_memory~406.base, usb_alloc_urb_~arbitrary_memory~406.offset;
    keyspan_probe_#t~ret253.base, keyspan_probe_#t~ret253.offset := usb_alloc_urb_#res.base, usb_alloc_urb_#res.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := keyspan_probe_#t~ret253.base, keyspan_probe_~remote~284.offset + 296, 8, keyspan_probe_#t~ret253.offset, keyspan_probe_~remote~284.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    havoc keyspan_probe_#t~ret253.base, keyspan_probe_#t~ret253.offset;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~remote~284.base, 8, keyspan_probe_~remote~284.offset + 296;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem255.base, keyspan_probe_#t~mem255.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume !(keyspan_probe_#t~mem255.offset == 0);
    havoc keyspan_probe_#t~mem255.base, keyspan_probe_#t~mem255.offset;
    keyspan_setup_#in~dev.base, keyspan_setup_#in~dev.offset := keyspan_probe_~udev~284.base, keyspan_probe_~udev~284.offset;
    havoc keyspan_setup_#res;
    havoc keyspan_setup_#t~nondet204.offset, keyspan_setup_#t~nondet209.base, keyspan_setup_#t~nondet218.offset, keyspan_setup_#t~nondet215.offset, keyspan_setup_~tmp___10~207, keyspan_setup_#t~ret203, keyspan_setup_#t~nondet204.base, keyspan_setup_#t~ret206, keyspan_setup_#t~nondet214.base, keyspan_setup_#t~ret207, keyspan_setup_#t~ret208, keyspan_setup_#t~nondet210.offset, keyspan_setup_#t~nondet205.base, keyspan_setup_~tmp___13~207, keyspan_setup_~tmp___11~207, keyspan_setup_#t~nondet210.base, keyspan_setup_#t~nondet215.base, keyspan_setup_#t~nondet217.base, keyspan_setup_#t~nondet218.base, keyspan_setup_~tmp___9~207, keyspan_setup_#t~ret202, keyspan_setup_#t~nondet217.offset, keyspan_setup_#t~nondet214.offset, keyspan_setup_~dev.base, keyspan_setup_~dev.offset, keyspan_setup_~tmp___7~207, keyspan_setup_#t~nondet205.offset, keyspan_setup_#t~nondet209.offset, keyspan_setup_#t~ret216, keyspan_setup_#t~ret219, keyspan_setup_~retval~207, keyspan_setup_~tmp___8~207, keyspan_setup_#t~ret211, keyspan_setup_#t~ret213, keyspan_setup_#t~ret212, keyspan_setup_~tmp___12~207;
    keyspan_setup_~dev.base, keyspan_setup_~dev.offset := keyspan_setup_#in~dev.base, keyspan_setup_#in~dev.offset;
    havoc keyspan_setup_~retval~207;
    havoc keyspan_setup_~tmp___7~207;
    havoc keyspan_setup_~tmp___8~207;
    havoc keyspan_setup_~tmp___9~207;
    havoc keyspan_setup_~tmp___10~207;
    havoc keyspan_setup_~tmp___11~207;
    havoc keyspan_setup_~tmp___12~207;
    havoc keyspan_setup_~tmp___13~207;
    keyspan_setup_~retval~207 := 0;
    __create_pipe_#in~dev.base, __create_pipe_#in~endpoint, __create_pipe_#in~dev.offset := keyspan_setup_~dev.base, 0, keyspan_setup_~dev.offset;
    havoc __create_pipe_#res;
    havoc __create_pipe_~dev.offset, __create_pipe_#t~mem36, __create_pipe_~endpoint, __create_pipe_~dev.base;
    __create_pipe_~dev.offset, __create_pipe_~dev.base := __create_pipe_#in~dev.offset, __create_pipe_#in~dev.base;
    __create_pipe_~endpoint := __create_pipe_#in~endpoint;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := __create_pipe_~dev.base, __create_pipe_~dev.offset, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    __create_pipe_#t~mem36 := read~int_#value;
    havoc __create_pipe_#res;
    havoc __create_pipe_#t~mem36;
    keyspan_setup_#t~ret202 := __create_pipe_#res;
    keyspan_setup_~tmp___7~207 := keyspan_setup_#t~ret202;
    havoc keyspan_setup_#t~ret202;
    usb_control_msg_#in~data.base, usb_control_msg_#in~requesttype, usb_control_msg_#in~index, usb_control_msg_#in~timeout, usb_control_msg_#in~dev.offset, usb_control_msg_#in~dev.base, usb_control_msg_#in~data.offset, usb_control_msg_#in~request, usb_control_msg_#in~value, usb_control_msg_#in~size := 0, 64, 0, 0, keyspan_setup_~dev.offset, keyspan_setup_~dev.base, 0, 17, 22017, 0;
    havoc usb_control_msg_#in~pipe;
    havoc usb_control_msg_#res;
    keyspan_setup_#t~ret203 := usb_control_msg_#res;
    assume keyspan_setup_#t~ret203 <= 2147483647 && 0 <= keyspan_setup_#t~ret203 + 2147483648;
    keyspan_setup_~retval~207 := keyspan_setup_#t~ret203;
    havoc keyspan_setup_#t~ret203;
    assume keyspan_setup_~retval~207 == 0;
    __create_pipe_#in~dev.base, __create_pipe_#in~endpoint, __create_pipe_#in~dev.offset := keyspan_setup_~dev.base, 0, keyspan_setup_~dev.offset;
    havoc __create_pipe_#res;
    havoc __create_pipe_~dev.offset, __create_pipe_#t~mem36, __create_pipe_~endpoint, __create_pipe_~dev.base;
    __create_pipe_~dev.offset, __create_pipe_~dev.base := __create_pipe_#in~dev.offset, __create_pipe_#in~dev.base;
    __create_pipe_~endpoint := __create_pipe_#in~endpoint;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := __create_pipe_~dev.base, __create_pipe_~dev.offset, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    __create_pipe_#t~mem36 := read~int_#value;
    havoc __create_pipe_#res;
    havoc __create_pipe_#t~mem36;
    keyspan_setup_#t~ret207 := __create_pipe_#res;
    keyspan_setup_~tmp___9~207 := keyspan_setup_#t~ret207;
    havoc keyspan_setup_#t~ret207;
    usb_control_msg_#in~data.base, usb_control_msg_#in~requesttype, usb_control_msg_#in~index, usb_control_msg_#in~timeout, usb_control_msg_#in~dev.offset, usb_control_msg_#in~dev.base, usb_control_msg_#in~data.offset, usb_control_msg_#in~request, usb_control_msg_#in~value, usb_control_msg_#in~size := 0, 64, 0, 0, keyspan_setup_~dev.offset, keyspan_setup_~dev.base, 0, 68, 0, 0;
    havoc usb_control_msg_#in~pipe;
    havoc usb_control_msg_#res;
    keyspan_setup_#t~ret208 := usb_control_msg_#res;
    assume 0 <= keyspan_setup_#t~ret208 + 2147483648 && keyspan_setup_#t~ret208 <= 2147483647;
    keyspan_setup_~retval~207 := keyspan_setup_#t~ret208;
    havoc keyspan_setup_#t~ret208;
    assume keyspan_setup_~retval~207 == 0;
    __create_pipe_#in~dev.base, __create_pipe_#in~endpoint, __create_pipe_#in~dev.offset := keyspan_setup_~dev.base, 0, keyspan_setup_~dev.offset;
    havoc __create_pipe_#res;
    havoc __create_pipe_~dev.offset, __create_pipe_#t~mem36, __create_pipe_~endpoint, __create_pipe_~dev.base;
    __create_pipe_~dev.offset, __create_pipe_~dev.base := __create_pipe_#in~dev.offset, __create_pipe_#in~dev.base;
    __create_pipe_~endpoint := __create_pipe_#in~endpoint;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := __create_pipe_~dev.base, __create_pipe_~dev.offset, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    __create_pipe_#t~mem36 := read~int_#value;
    havoc __create_pipe_#res;
    havoc __create_pipe_#t~mem36;
    keyspan_setup_#t~ret212 := __create_pipe_#res;
    keyspan_setup_~tmp___11~207 := keyspan_setup_#t~ret212;
    havoc keyspan_setup_#t~ret212;
    usb_control_msg_#in~data.base, usb_control_msg_#in~requesttype, usb_control_msg_#in~index, usb_control_msg_#in~timeout, usb_control_msg_#in~dev.offset, usb_control_msg_#in~dev.base, usb_control_msg_#in~data.offset, usb_control_msg_#in~request, usb_control_msg_#in~value, usb_control_msg_#in~size := 0, 64, 0, 0, keyspan_setup_~dev.offset, keyspan_setup_~dev.base, 0, 34, 0, 0;
    havoc usb_control_msg_#in~pipe;
    havoc usb_control_msg_#res;
    keyspan_setup_#t~ret213 := usb_control_msg_#res;
    assume keyspan_setup_#t~ret213 <= 2147483647 && 0 <= keyspan_setup_#t~ret213 + 2147483648;
    keyspan_setup_~retval~207 := keyspan_setup_#t~ret213;
    havoc keyspan_setup_#t~ret213;
    assume keyspan_setup_~retval~207 == 0;
    assume ~descriptor___4.enabled == 0;
    keyspan_setup_~tmp___13~207 := 0;
    assume keyspan_setup_~tmp___13~207 == 0;
    keyspan_setup_#res := keyspan_setup_~retval~207;
    keyspan_probe_#t~ret256 := keyspan_setup_#res;
    assume 0 <= keyspan_probe_#t~ret256 + 2147483648 && keyspan_probe_#t~ret256 <= 2147483647;
    keyspan_probe_~error~284 := keyspan_probe_#t~ret256;
    havoc keyspan_probe_#t~ret256;
    assume keyspan_probe_~error~284 == 0;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~udev~284.base, 8, keyspan_probe_~udev~284.offset + 1567;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem257.base, keyspan_probe_#t~mem257.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume keyspan_probe_#t~mem257.base == 0 && keyspan_probe_#t~mem257.offset == 0;
    havoc keyspan_probe_#t~mem257.base, keyspan_probe_#t~mem257.offset;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~udev~284.base, 8, keyspan_probe_~udev~284.offset + 1559;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem260.offset, keyspan_probe_#t~mem260.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    assume keyspan_probe_#t~mem260.base == 0 && keyspan_probe_#t~mem260.offset == 0;
    havoc keyspan_probe_#t~mem260.offset, keyspan_probe_#t~mem260.base;
    keyspan_probe_~tmp___10~284 := keyspan_probe_#t~nondet266;
    havoc keyspan_probe_#t~nondet266;
    assume !(keyspan_probe_~tmp___10~284 % 18446744073709551616 == 0) && keyspan_probe_~tmp___10~284 < -18446744073709551616;
    usb_make_path_#in~buf.offset, usb_make_path_#in~buf.base, usb_make_path_#in~dev.offset, usb_make_path_#in~size, usb_make_path_#in~dev.base := keyspan_probe_~remote~284.offset + 128, keyspan_probe_~remote~284.base, keyspan_probe_~udev~284.offset, 64, keyspan_probe_~udev~284.base;
    havoc usb_make_path_#res;
    havoc usb_make_path_~dev.offset, usb_make_path_~buf.offset, usb_make_path_#t~nondet16.base, usb_make_path_~actual~46, usb_make_path_~buf.base, usb_make_path_#t~ret17, usb_make_path_~size, usb_make_path_~tmp___7~46, usb_make_path_~dev.base, usb_make_path_#t~nondet16.offset;
    usb_make_path_~dev.offset, usb_make_path_~dev.base := usb_make_path_#in~dev.offset, usb_make_path_#in~dev.base;
    usb_make_path_~buf.offset, usb_make_path_~buf.base := usb_make_path_#in~buf.offset, usb_make_path_#in~buf.base;
    usb_make_path_~size := usb_make_path_#in~size;
    havoc usb_make_path_~actual~46;
    havoc usb_make_path_~tmp___7~46;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 10;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    usb_make_path_#t~nondet16.base, usb_make_path_#t~nondet16.offset := #Ultimate.alloc_#res.base, #Ultimate.alloc_#res.offset;
    snprintf_#in~fmt.offset, snprintf_#in~fmt.base, snprintf_#in~buf.base, snprintf_#in~size, snprintf_#in~buf.offset := usb_make_path_#t~nondet16.offset, usb_make_path_#t~nondet16.base, usb_make_path_~buf.base, usb_make_path_~size, usb_make_path_~buf.offset;
    havoc snprintf_#res;
    usb_make_path_#t~ret17 := snprintf_#res;
    assume usb_make_path_#t~ret17 <= 2147483647 && 0 <= usb_make_path_#t~ret17 + 2147483648;
    usb_make_path_~actual~46 := usb_make_path_#t~ret17;
    havoc usb_make_path_#t~nondet16.base, usb_make_path_#t~nondet16.offset;
    havoc usb_make_path_#t~ret17;
    assume (usb_make_path_~size <= usb_make_path_~actual~46 && 0 <= usb_make_path_~size) && usb_make_path_~size < 4294967296;
    usb_make_path_~tmp___7~46 := -1;
    usb_make_path_#res := usb_make_path_~tmp___7~46;
    keyspan_probe_#t~ret269 := usb_make_path_#res;
    assume 0 <= keyspan_probe_#t~ret269 + 2147483648 && keyspan_probe_#t~ret269 <= 2147483647;
    havoc keyspan_probe_#t~ret269;
    #Ultimate.alloc_old_#valid, #Ultimate.alloc_old_#length := #valid, #length;
    #Ultimate.alloc_~size := 8;
    havoc #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    havoc #valid, #length;
    assume #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base] == 0;
    assume #valid == #Ultimate.alloc_old_#valid[#Ultimate.alloc_#res.base := 1];
    assume #Ultimate.alloc_#res.offset == 0;
    assume !(#Ultimate.alloc_#res.base == 0);
    assume #length == #Ultimate.alloc_old_#length[#Ultimate.alloc_#res.base := #Ultimate.alloc_~size];
    keyspan_probe_#t~nondet270.offset, keyspan_probe_#t~nondet270.base := #Ultimate.alloc_#res.offset, #Ultimate.alloc_#res.base;
    strlcat_#in~3.base, strlcat_#in~5, strlcat_#in~3.offset, strlcat_#in~4.base, strlcat_#in~4.offset := keyspan_probe_~remote~284.base, 64, keyspan_probe_~remote~284.offset + 128, keyspan_probe_#t~nondet270.base, keyspan_probe_#t~nondet270.offset;
    havoc strlcat_#res;
    keyspan_probe_#t~ret271 := strlcat_#res;
    havoc keyspan_probe_#t~nondet270.offset, keyspan_probe_#t~nondet270.base;
    havoc keyspan_probe_#t~ret271;
    keyspan_probe_~__len~284 := 72;
    assume keyspan_probe_~__len~284 < 4294967296 && 64 <= keyspan_probe_~__len~284;
    __memcpy_#in~from.base, __memcpy_#in~to.offset, __memcpy_#in~to.base, __memcpy_#in~len, __memcpy_#in~from.offset := ~#keyspan_key_table.base, keyspan_probe_~remote~284.offset + 192, keyspan_probe_~remote~284.base, keyspan_probe_~__len~284, ~#keyspan_key_table.offset;
    havoc __memcpy_#res.offset, __memcpy_#res.base;
    keyspan_probe_#t~ret272.base, keyspan_probe_#t~ret272.offset := __memcpy_#res.base, __memcpy_#res.offset;
    keyspan_probe_~__ret~284.base, keyspan_probe_~__ret~284.offset := keyspan_probe_#t~ret272.base, keyspan_probe_#t~ret272.offset;
    havoc keyspan_probe_#t~ret272.base, keyspan_probe_#t~ret272.offset;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := keyspan_probe_~remote~284.base, keyspan_probe_~input_dev~284.offset, 8, keyspan_probe_~remote~284.offset, keyspan_probe_~input_dev~284.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := keyspan_probe_~remote~284.base, keyspan_probe_~input_dev~284.offset + 8, 8, keyspan_probe_~remote~284.offset + 128, keyspan_probe_~input_dev~284.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    usb_to_input_id_#in~dev.base, usb_to_input_id_#in~id.base, usb_to_input_id_#in~id.offset, usb_to_input_id_#in~dev.offset := keyspan_probe_~udev~284.base, keyspan_probe_~input_dev~284.base, keyspan_probe_~input_dev~284.offset + 24, keyspan_probe_~udev~284.offset;
    havoc usb_to_input_id_#t~mem46, usb_to_input_id_#t~mem44, usb_to_input_id_#t~mem42, usb_to_input_id_~dev.base, usb_to_input_id_~dev.offset, usb_to_input_id_~id.offset, usb_to_input_id_~id.base;
    usb_to_input_id_~dev.base, usb_to_input_id_~dev.offset := usb_to_input_id_#in~dev.base, usb_to_input_id_#in~dev.offset;
    usb_to_input_id_~id.offset, usb_to_input_id_~id.base := usb_to_input_id_#in~id.offset, usb_to_input_id_#in~id.base;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, usb_to_input_id_~id.base, 3, usb_to_input_id_~id.offset;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := usb_to_input_id_~dev.base, usb_to_input_id_~dev.offset + 1237, 2;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    usb_to_input_id_#t~mem42 := read~int_#value;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, usb_to_input_id_~id.base, usb_to_input_id_#t~mem42, usb_to_input_id_~id.offset + 2;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc usb_to_input_id_#t~mem42;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := usb_to_input_id_~dev.base, usb_to_input_id_~dev.offset + 1239, 2;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    usb_to_input_id_#t~mem44 := read~int_#value;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, usb_to_input_id_~id.base, usb_to_input_id_#t~mem44, usb_to_input_id_~id.offset + 4;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc usb_to_input_id_#t~mem44;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := usb_to_input_id_~dev.base, usb_to_input_id_~dev.offset + 1241, 2;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    usb_to_input_id_#t~mem46 := read~int_#value;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 2, usb_to_input_id_~id.base, usb_to_input_id_#t~mem46, usb_to_input_id_~id.offset + 6;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc usb_to_input_id_#t~mem46;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := keyspan_probe_~interface.base, keyspan_probe_~input_dev~284.offset + 798, 8, keyspan_probe_~interface.offset + 68, keyspan_probe_~input_dev~284.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := keyspan_probe_~remote~284.base, keyspan_probe_~input_dev~284.offset + 220, 8, keyspan_probe_~remote~284.offset + 192, keyspan_probe_~input_dev~284.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, keyspan_probe_~input_dev~284.base, 2, keyspan_probe_~input_dev~284.offset + 216;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, keyspan_probe_~input_dev~284.base, 40, keyspan_probe_~input_dev~284.offset + 212;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    input_set_capability_#in~type, input_set_capability_#in~dev.offset, input_set_capability_#in~dev.base, input_set_capability_#in~code := 4, keyspan_probe_~input_dev~284.offset, keyspan_probe_~input_dev~284.base, 4;
    __set_bit_#in~nr, __set_bit_#in~addr.base, __set_bit_#in~addr.offset := 1, keyspan_probe_~input_dev~284.base, keyspan_probe_~input_dev~284.offset + 40;
    havoc __set_bit_~addr.offset, __set_bit_~addr.base, __set_bit_~nr;
    __set_bit_~nr := __set_bit_#in~nr;
    __set_bit_~addr.offset, __set_bit_~addr.base := __set_bit_#in~addr.offset, __set_bit_#in~addr.base;
    keyspan_probe_~i~284 := 0;
    goto loc1;
  loc1:
    goto loc2;
  loc2:
    goto loc2_0, loc2_1;
  loc2_0:
    assume keyspan_probe_~i~284 < 18446744073709551616 && !(keyspan_probe_~i~284 < 36);
    __clear_bit_#in~addr.base, __clear_bit_#in~nr, __clear_bit_#in~addr.offset := keyspan_probe_~input_dev~284.base, 0, keyspan_probe_~input_dev~284.offset + 48;
    havoc __clear_bit_~nr, __clear_bit_~addr.base, __clear_bit_~addr.offset;
    __clear_bit_~nr := __clear_bit_#in~nr;
    __clear_bit_~addr.base, __clear_bit_~addr.offset := __clear_bit_#in~addr.base, __clear_bit_#in~addr.offset;
    input_set_drvdata_#in~dev.base, input_set_drvdata_#in~data.offset, input_set_drvdata_#in~data.base, input_set_drvdata_#in~dev.offset := keyspan_probe_~input_dev~284.base, keyspan_probe_~remote~284.offset, keyspan_probe_~remote~284.base, keyspan_probe_~input_dev~284.offset;
    havoc input_set_drvdata_#t~ret38, input_set_drvdata_~dev.base, input_set_drvdata_~data.offset, input_set_drvdata_~dev.offset, input_set_drvdata_~data.base;
    input_set_drvdata_~dev.base, input_set_drvdata_~dev.offset := input_set_drvdata_#in~dev.base, input_set_drvdata_#in~dev.offset;
    input_set_drvdata_~data.offset, input_set_drvdata_~data.base := input_set_drvdata_#in~data.offset, input_set_drvdata_#in~data.base;
    dev_set_drvdata_#in~data.offset, dev_set_drvdata_#in~dev.base, dev_set_drvdata_#in~dev.offset, dev_set_drvdata_#in~data.base := input_set_drvdata_~data.offset, input_set_drvdata_~dev.base, input_set_drvdata_~dev.offset + 798, input_set_drvdata_~data.base;
    havoc dev_set_drvdata_#res;
    input_set_drvdata_#t~ret38 := dev_set_drvdata_#res;
    assume 0 <= input_set_drvdata_#t~ret38 + 2147483648 && input_set_drvdata_#t~ret38 <= 2147483647;
    havoc input_set_drvdata_#t~ret38;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~keyspan_open.base_1, keyspan_probe_~input_dev~284.offset + 536, 8, v_rep#funAddr~keyspan_open.offset_1, keyspan_probe_~input_dev~284.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := v_rep#funAddr~keyspan_close.base_1, keyspan_probe_~input_dev~284.offset + 544, 8, v_rep#funAddr~keyspan_close.offset_1, keyspan_probe_~input_dev~284.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~remote~284.base, 8, keyspan_probe_~remote~284.offset + 264;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem283.base, keyspan_probe_#t~mem283.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := keyspan_probe_~endpoint~284.base, keyspan_probe_~endpoint~284.offset + 2, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    keyspan_probe_#t~mem284 := read~int_#value;
    assume -256 <= keyspan_probe_#t~mem284 && keyspan_probe_#t~mem284 < 0;
    __create_pipe_#in~dev.base, __create_pipe_#in~endpoint, __create_pipe_#in~dev.offset := keyspan_probe_#t~mem283.base, keyspan_probe_#t~mem284 + 256, keyspan_probe_#t~mem283.offset;
    havoc __create_pipe_#res;
    havoc __create_pipe_~dev.offset, __create_pipe_#t~mem36, __create_pipe_~endpoint, __create_pipe_~dev.base;
    __create_pipe_~dev.offset, __create_pipe_~dev.base := __create_pipe_#in~dev.offset, __create_pipe_#in~dev.base;
    __create_pipe_~endpoint := __create_pipe_#in~endpoint;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := __create_pipe_~dev.base, __create_pipe_~dev.offset, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    __create_pipe_#t~mem36 := read~int_#value;
    havoc __create_pipe_#res;
    havoc __create_pipe_#t~mem36;
    keyspan_probe_#t~ret285 := __create_pipe_#res;
    keyspan_probe_~tmp___11~284 := keyspan_probe_#t~ret285;
    havoc keyspan_probe_#t~mem283.base, keyspan_probe_#t~mem283.offset;
    havoc keyspan_probe_#t~mem284;
    havoc keyspan_probe_#t~ret285;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~remote~284.base, 8, keyspan_probe_~remote~284.offset + 296;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem286.offset, keyspan_probe_#t~mem286.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~remote~284.base, 8, keyspan_probe_~remote~284.offset + 264;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem287.offset, keyspan_probe_#t~mem287.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~remote~284.base, 8, keyspan_probe_~remote~284.offset + 316;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem288.offset, keyspan_probe_#t~mem288.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := keyspan_probe_~endpoint~284.base, keyspan_probe_~endpoint~284.offset + 6, 1;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    keyspan_probe_#t~mem289 := read~int_#value;
    assume keyspan_probe_#t~mem289 < 256 && 0 <= keyspan_probe_#t~mem289;
    usb_fill_int_urb_#in~urb.base, usb_fill_int_urb_#in~complete_fn.offset, usb_fill_int_urb_#in~interval, usb_fill_int_urb_#in~context.offset, usb_fill_int_urb_#in~transfer_buffer.base, usb_fill_int_urb_#in~transfer_buffer.offset, usb_fill_int_urb_#in~context.base, usb_fill_int_urb_#in~dev.offset, usb_fill_int_urb_#in~urb.offset, usb_fill_int_urb_#in~buffer_length, usb_fill_int_urb_#in~complete_fn.base, usb_fill_int_urb_#in~dev.base := keyspan_probe_#t~mem286.base, v_rep#funAddr~keyspan_irq_recv.offset_1, keyspan_probe_#t~mem289, keyspan_probe_~remote~284.offset, keyspan_probe_#t~mem288.base, keyspan_probe_#t~mem288.offset, keyspan_probe_~remote~284.base, keyspan_probe_#t~mem287.offset, keyspan_probe_#t~mem286.offset, 8, v_rep#funAddr~keyspan_irq_recv.base_1, keyspan_probe_#t~mem287.base;
    havoc usb_fill_int_urb_#in~pipe;
    havoc usb_fill_int_urb_~complete_fn.offset, usb_fill_int_urb_~context.base, usb_fill_int_urb_#t~mem32, usb_fill_int_urb_~dev.base, usb_fill_int_urb_~pipe, usb_fill_int_urb_~transfer_buffer.offset, usb_fill_int_urb_~transfer_buffer.base, usb_fill_int_urb_#t~mem30, usb_fill_int_urb_~dev.offset, usb_fill_int_urb_~urb.base, usb_fill_int_urb_~complete_fn.base, usb_fill_int_urb_~urb.offset, usb_fill_int_urb_~buffer_length, usb_fill_int_urb_~interval, usb_fill_int_urb_~context.offset;
    usb_fill_int_urb_~urb.base, usb_fill_int_urb_~urb.offset := usb_fill_int_urb_#in~urb.base, usb_fill_int_urb_#in~urb.offset;
    usb_fill_int_urb_~dev.offset, usb_fill_int_urb_~dev.base := usb_fill_int_urb_#in~dev.offset, usb_fill_int_urb_#in~dev.base;
    usb_fill_int_urb_~pipe := usb_fill_int_urb_#in~pipe;
    usb_fill_int_urb_~transfer_buffer.offset, usb_fill_int_urb_~transfer_buffer.base := usb_fill_int_urb_#in~transfer_buffer.offset, usb_fill_int_urb_#in~transfer_buffer.base;
    usb_fill_int_urb_~buffer_length := usb_fill_int_urb_#in~buffer_length;
    usb_fill_int_urb_~complete_fn.offset, usb_fill_int_urb_~complete_fn.base := usb_fill_int_urb_#in~complete_fn.offset, usb_fill_int_urb_#in~complete_fn.base;
    usb_fill_int_urb_~context.base, usb_fill_int_urb_~context.offset := usb_fill_int_urb_#in~context.base, usb_fill_int_urb_#in~context.offset;
    usb_fill_int_urb_~interval := usb_fill_int_urb_#in~interval;
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := usb_fill_int_urb_~dev.base, usb_fill_int_urb_~urb.offset + 64, 8, usb_fill_int_urb_~dev.offset, usb_fill_int_urb_~urb.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, usb_fill_int_urb_~urb.base, usb_fill_int_urb_~pipe, usb_fill_int_urb_~urb.offset + 80;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := usb_fill_int_urb_~transfer_buffer.base, usb_fill_int_urb_~urb.offset + 96, 8, usb_fill_int_urb_~transfer_buffer.offset, usb_fill_int_urb_~urb.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]] && #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, usb_fill_int_urb_~urb.base, usb_fill_int_urb_~buffer_length, usb_fill_int_urb_~urb.offset + 124;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := usb_fill_int_urb_~complete_fn.base, usb_fill_int_urb_~urb.offset + 172, 8, usb_fill_int_urb_~complete_fn.offset, usb_fill_int_urb_~urb.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    write~$Pointer$_old_#memory_$Pointer$.base, write~$Pointer$_old_#memory_$Pointer$.offset, write~$Pointer$_old_#memory_int := #memory_$Pointer$.base, #memory_$Pointer$.offset, #memory_int;
    write~$Pointer$_#value.base, write~$Pointer$_#ptr.offset, write~$Pointer$_#sizeOfWrittenType, write~$Pointer$_#value.offset, write~$Pointer$_#ptr.base := usb_fill_int_urb_~context.base, usb_fill_int_urb_~urb.offset + 164, 8, usb_fill_int_urb_~context.offset, usb_fill_int_urb_~urb.base;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.offset[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.offset]] && #memory_$Pointer$.base == write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_$Pointer$.base[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := write~$Pointer$_#value.base]];
    assume #memory_int == write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base := write~$Pointer$_old_#memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset := #memory_int[write~$Pointer$_#ptr.base][write~$Pointer$_#ptr.offset]]];
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := usb_fill_int_urb_~dev.base, usb_fill_int_urb_~dev.offset + 28, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    usb_fill_int_urb_#t~mem30 := read~int_#value;
    assume usb_fill_int_urb_#t~mem30 + 4294967296 == 3;
    havoc usb_fill_int_urb_#t~mem30;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#ptr.offset := 4, usb_fill_int_urb_~urb.base, usb_fill_int_urb_~urb.offset + 156;
    havoc write~int_#value;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 4, usb_fill_int_urb_~urb.base, -1, usb_fill_int_urb_~urb.offset + 148;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc keyspan_probe_#t~mem286.offset, keyspan_probe_#t~mem286.base;
    havoc keyspan_probe_#t~mem287.offset, keyspan_probe_#t~mem287.base;
    havoc keyspan_probe_#t~mem288.offset, keyspan_probe_#t~mem288.base;
    havoc keyspan_probe_#t~mem289;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~remote~284.base, 8, keyspan_probe_~remote~284.offset + 296;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem290.base, keyspan_probe_#t~mem290.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := keyspan_probe_~remote~284.base, keyspan_probe_~remote~284.offset + 308, 8;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    keyspan_probe_#t~mem292 := read~int_#value;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#value, write~int_#ptr.offset := 8, keyspan_probe_#t~mem290.base, keyspan_probe_#t~mem292, keyspan_probe_#t~mem290.offset + 104;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc keyspan_probe_#t~mem290.base, keyspan_probe_#t~mem290.offset;
    havoc keyspan_probe_#t~mem292;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~remote~284.base, 8, keyspan_probe_~remote~284.offset + 296;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem293.offset, keyspan_probe_#t~mem293.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~remote~284.base, 8, keyspan_probe_~remote~284.offset + 296;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem294.base, keyspan_probe_#t~mem294.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := keyspan_probe_#t~mem294.base, keyspan_probe_#t~mem294.offset + 92, 4;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    keyspan_probe_#t~mem295 := read~int_#value;
    write~int_old_#memory_$Pointer$.offset, write~int_old_#memory_$Pointer$.base, write~int_old_#memory_int := #memory_$Pointer$.offset, #memory_$Pointer$.base, #memory_int;
    write~int_#sizeOfWrittenType, write~int_#ptr.base, write~int_#ptr.offset := 4, keyspan_probe_#t~mem293.base, keyspan_probe_#t~mem293.offset + 92;
    havoc write~int_#value;
    havoc #memory_$Pointer$.base, #memory_int, #memory_$Pointer$.offset;
    assume #memory_$Pointer$.offset == write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base := write~int_old_#memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.offset[write~int_#ptr.base][write~int_#ptr.offset]]] && #memory_$Pointer$.base == write~int_old_#memory_$Pointer$.base[write~int_#ptr.base := write~int_old_#memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset := #memory_$Pointer$.base[write~int_#ptr.base][write~int_#ptr.offset]]];
    assume #memory_int == write~int_old_#memory_int[write~int_#ptr.base := write~int_old_#memory_int[write~int_#ptr.base][write~int_#ptr.offset := write~int_#value]];
    havoc keyspan_probe_#t~mem293.offset, keyspan_probe_#t~mem293.base;
    havoc keyspan_probe_#t~mem294.base, keyspan_probe_#t~mem294.offset;
    havoc keyspan_probe_#t~mem295;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~remote~284.base, 8, keyspan_probe_~remote~284.offset + 272;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem297.base, keyspan_probe_#t~mem297.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    input_register_device_#in~39.base, input_register_device_#in~39.offset := keyspan_probe_#t~mem297.base, keyspan_probe_#t~mem297.offset;
    havoc input_register_device_#res;
    keyspan_probe_#t~ret298 := input_register_device_#res;
    assume keyspan_probe_#t~ret298 <= 2147483647 && 0 <= keyspan_probe_#t~ret298 + 2147483648;
    keyspan_probe_~tmp~284 := keyspan_probe_#t~ret298;
    havoc keyspan_probe_#t~mem297.base, keyspan_probe_#t~mem297.offset;
    havoc keyspan_probe_#t~ret298;
    keyspan_probe_~error~284 := keyspan_probe_~tmp~284;
    assume !(keyspan_probe_~error~284 == 0);
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~remote~284.base, 8, keyspan_probe_~remote~284.offset + 296;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem299.base, keyspan_probe_#t~mem299.offset := read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    usb_free_urb_#in~urb.offset, usb_free_urb_#in~urb.base := keyspan_probe_#t~mem299.offset, keyspan_probe_#t~mem299.base;
    havoc usb_free_urb_~urb.base, usb_free_urb_~urb.offset;
    usb_free_urb_~urb.base, usb_free_urb_~urb.offset := usb_free_urb_#in~urb.base, usb_free_urb_#in~urb.offset;
    assume (18446744073709551616 <= usb_free_urb_~urb.base + usb_free_urb_~urb.offset && !(usb_free_urb_~urb.base + usb_free_urb_~urb.offset - 18446744073709551616 == 0)) && usb_free_urb_~urb.base + usb_free_urb_~urb.offset < 18446744073709551616 + 18446744073709551616;
    assume usb_free_urb_~urb.base == 0 && usb_free_urb_~urb.offset == 0;
    havoc keyspan_probe_#t~mem299.base, keyspan_probe_#t~mem299.offset;
    read~$Pointer$_#ptr.base, read~$Pointer$_#sizeOfReadType, read~$Pointer$_#ptr.offset := keyspan_probe_~remote~284.base, 8, keyspan_probe_~remote~284.offset + 316;
    havoc read~$Pointer$_#value.base, read~$Pointer$_#value.offset;
    assume read~$Pointer$_#value.base == #memory_$Pointer$.base[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset] && read~$Pointer$_#value.offset == #memory_$Pointer$.offset[read~$Pointer$_#ptr.base][read~$Pointer$_#ptr.offset];
    keyspan_probe_#t~mem300.offset, keyspan_probe_#t~mem300.base := read~$Pointer$_#value.offset, read~$Pointer$_#value.base;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := keyspan_probe_~remote~284.base, keyspan_probe_~remote~284.offset + 308, 8;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    keyspan_probe_#t~mem301 := read~int_#value;
    usb_free_coherent_#in~addr.base, usb_free_coherent_#in~dev.offset, usb_free_coherent_#in~size, usb_free_coherent_#in~dev.base, usb_free_coherent_#in~addr.offset, usb_free_coherent_#in~dma := keyspan_probe_#t~mem300.base, keyspan_probe_~udev~284.offset, 8, keyspan_probe_~udev~284.base, keyspan_probe_#t~mem300.offset, keyspan_probe_#t~mem301;
    havoc usb_free_coherent_~dma, usb_free_coherent_~dev.offset, usb_free_coherent_~addr.offset, usb_free_coherent_~dev.base, usb_free_coherent_~size, usb_free_coherent_~addr.base;
    usb_free_coherent_~dev.offset, usb_free_coherent_~dev.base := usb_free_coherent_#in~dev.offset, usb_free_coherent_#in~dev.base;
    usb_free_coherent_~size := usb_free_coherent_#in~size;
    usb_free_coherent_~addr.offset, usb_free_coherent_~addr.base := usb_free_coherent_#in~addr.offset, usb_free_coherent_#in~addr.base;
    usb_free_coherent_~dma := usb_free_coherent_#in~dma;
    assume !((usb_free_coherent_~addr.offset + usb_free_coherent_~addr.base) % 18446744073709551616 == 0) && 18446744073709551616 + 18446744073709551616 <= usb_free_coherent_~addr.offset + usb_free_coherent_~addr.base;
    assume usb_free_coherent_~addr.offset == 0 && usb_free_coherent_~addr.base == 0;
    havoc keyspan_probe_#t~mem300.offset, keyspan_probe_#t~mem300.base;
    havoc keyspan_probe_#t~mem301;
    kfree_#in~6.offset, kfree_#in~6.base := keyspan_probe_~remote~284.offset, keyspan_probe_~remote~284.base;
    input_free_device_#in~dev.offset, input_free_device_#in~dev.base := keyspan_probe_~input_dev~284.offset, keyspan_probe_~input_dev~284.base;
    keyspan_probe_#res := keyspan_probe_~error~284;
    main_#t~ret316 := keyspan_probe_#res;
    assume main_#t~ret316 <= 2147483647 && 0 <= main_#t~ret316 + 2147483648;
    ~res_keyspan_probe_9 := main_#t~ret316;
    havoc main_#t~ret316;
    ldv_check_return_value_#in~res := ~res_keyspan_probe_9;
    assume !(~res_keyspan_probe_9 == 0);
    usb_deregister_#in~23.base, usb_deregister_#in~23.offset := ~#keyspan_driver.base, ~#keyspan_driver.offset;
    assume !(~ldv_urb_state == 0);
    goto loc3;
  loc2_1:
    assume 0 <= keyspan_probe_~i~284 && keyspan_probe_~i~284 < 36;
    read~int_#ptr.base, read~int_#ptr.offset, read~int_#sizeOfReadType := ~#keyspan_key_table.base, ~#keyspan_key_table.offset + 2 * keyspan_probe_~i~284, 2;
    havoc read~int_#value;
    assume read~int_#value == #memory_int[read~int_#ptr.base][read~int_#ptr.offset];
    keyspan_probe_#t~mem280 := read~int_#value;
    assume keyspan_probe_#t~mem280 < 0 && -65536 <= keyspan_probe_#t~mem280;
    __set_bit_#in~nr, __set_bit_#in~addr.base, __set_bit_#in~addr.offset := keyspan_probe_#t~mem280 + 65536, keyspan_probe_~input_dev~284.base, keyspan_probe_~input_dev~284.offset + 48;
    havoc __set_bit_~addr.offset, __set_bit_~addr.base, __set_bit_~nr;
    __set_bit_~nr := __set_bit_#in~nr;
    __set_bit_~addr.offset, __set_bit_~addr.base := __set_bit_#in~addr.offset, __set_bit_#in~addr.base;
    havoc keyspan_probe_#t~mem280;
    keyspan_probe_~i~284 := keyspan_probe_~i~284 + 1;
    goto loc1;
  loc3:
    assert false;
}

